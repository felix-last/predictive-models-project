*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                19.17 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.16 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                19.16 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3NET42W "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural6\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3NET42W new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural6\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.16 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural6\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural6\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural6\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural6\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.16 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural6\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural6\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural6\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\\predictive-models-project\Workspaces\EMWS8\DMNeural6\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
32993      proc freq data=EMWS8.DMNeural6_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.DMNeural6_VariableSet noprint;
32994      table ROLE*LEVEL/out=WORK.DMNeural6META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.DMNeural6META;
32995      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.DMNEURAL6_VARIABLESET.
NOTE: The data set WORK.DMNEURAL6META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
32996      proc print data=WORK.DMNeural6META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.DMNeural6META label noobs;
32997      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
32998      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
32999      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
33000      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
33001      run;
 
NOTE: There were 6 observations read from the data set WORK.DMNEURAL6META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33002      title10;
MPRINT(EM_DIAGRAM):   title10;
33003      %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Meta2_TRAIN EMWS8.Meta2_TRAIN
EMWS8.Meta2_TRAIN EMWS8.Meta2_TRAIN EMWS8 Meta2_TRAIN
EMWS8.Meta2_TRAIN EMWS8.Meta2_TRAIN
EMWS8.Meta2_TRAIN EMWS8.Meta2_TRAIN EMWS8 Meta2_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Meta2_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural6_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.DMNeural6_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural6_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.DMNeural6_DepVar_DD _TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.DMNeural6_DepVar_DD out=EMWS8.DMNeural6_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
33050      data WORK.DMNeural6_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.DMNeural6_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
33051      length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
33052      label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
33053         "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
33054      set EMWS8.DMNEURAL6_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.DMNEURAL6_DEPVAR_DM( where=(_TYPE_="TARGET"));
33055      NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
33056      select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
33057      when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
33058      when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
33059      when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
33060      when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
33061      otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
33062      end;
MPRINT(EM_DIAGRAM):   end;
33063      output;
MPRINT(EM_DIAGRAM):   output;
33064      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.DMNEURAL6_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.DMNEURAL6_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33065      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
33066      proc print data=WORK.DMNeural6_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.DMNeural6_EVENT noobs label;
33067      var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
33068      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
33069      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
33070      run;
 
NOTE: There were 1 observations read from the data set WORK.DMNEURAL6_EVENT.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33071      title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
33072      proc print data = EMWS8.DMNeural6_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.DMNeural6_DepVar_DM noobs label;
33073      var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
33074      where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
33075      label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
33076      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
33077      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
33078      run;
 
NOTE: There were 7 observations read from the data set EMWS8.DMNEURAL6_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33079      title10;
MPRINT(EM_DIAGRAM):   title10;
33080      data WORK.M14WHM1R;
MPRINT(EM_DIAGRAM):    data WORK.M14WHM1R;
33081      set WORK.M14WHM1R;
MPRINT(EM_DIAGRAM):   set WORK.M14WHM1R;
33082      if role = 'TARGET' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   if role = 'TARGET' and use = 'Y' then do;
33083      role = 'TARGET';
MPRINT(EM_DIAGRAM):   role = 'TARGET';
33084      output;
MPRINT(EM_DIAGRAM):   output;
33085      end;
MPRINT(EM_DIAGRAM):   end;
33086      if role = 'INPUT' and use in ('Y','D') then do;
MPRINT(EM_DIAGRAM):   if role = 'INPUT' and use in ('Y','D') then do;
33087      role = 'INPUT';
MPRINT(EM_DIAGRAM):   role = 'INPUT';
33088      output;
MPRINT(EM_DIAGRAM):   output;
33089      end;
MPRINT(EM_DIAGRAM):   end;
33090      if role = 'REJECTED' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   if role = 'REJECTED' and use = 'Y' then do;
33091      role = 'INPUT';
MPRINT(EM_DIAGRAM):   role = 'INPUT';
33092      output;
MPRINT(EM_DIAGRAM):   output;
33093      end;
MPRINT(EM_DIAGRAM):   end;
33094      if role = 'FREQ' then do;
MPRINT(EM_DIAGRAM):   if role = 'FREQ' then do;
33095      role = 'FREQ';
MPRINT(EM_DIAGRAM):   role = 'FREQ';
33096      output;
MPRINT(EM_DIAGRAM):   output;
33097      end;
MPRINT(EM_DIAGRAM):   end;
33098      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK.M14WHM1R.
NOTE: The data set WORK.M14WHM1R has 15 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33099      data WORK.M14WHM1R;
MPRINT(EM_DIAGRAM):    data WORK.M14WHM1R;
33100      set WORK.M14WHM1R end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M14WHM1R end=eof;
33101      output;
MPRINT(EM_DIAGRAM):   output;
33102      if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
33103      NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
33104      ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
33105      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
33106      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
33107      output;
MPRINT(EM_DIAGRAM):   output;
33108      end;
MPRINT(EM_DIAGRAM):   end;
33109      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK.M14WHM1R.
NOTE: The data set WORK.M14WHM1R has 16 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.DMNEURAL6_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
33110      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
33111      * DMNeural6: Create decision matrix;
MPRINT(EM_DIAGRAM):   * DMNeural6: Create decision matrix;
33112      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33113      data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
33114        length   DepVar                           $  32
33115                 COUNT                                8
33116                 DATAPRIOR                            8
33117                 TRAINPRIOR                           8
33118                 DECPRIOR                             8
33119                 DECISION1                            8
33120                 DECISION2                            8
33121                 ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
33122
33123        label    COUNT="Level Counts"
33124                 DATAPRIOR="Data Proportions"
33125                 TRAINPRIOR="Training Proportions"
33126                 DECPRIOR="Decision Priors"
33127                 DECISION1="1"
33128                 DECISION2="0"
33129                 ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
33130        format   COUNT 10.
33131                 ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
33132      DepVar="1"; COUNT=359; DATAPRIOR=0.151221567; TRAINPRIOR=0.15122156697556; DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.151221567;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
33133      output;
MPRINT(EM_DIAGRAM):   output;
33134      DepVar="0"; COUNT=2015; DATAPRIOR=0.848778433; TRAINPRIOR=0.84877843302443; DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.848778433;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
33135      output;
MPRINT(EM_DIAGRAM):   output;
33136      ;
MPRINT(EM_DIAGRAM):   ;
33137      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33138      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
33139      modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
33140      label DECISION1= '1';
33141      label DECISION2= '0';
33142      run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
33143      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * DMNeural6: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
33144      *------------------------------------------------------------* ;
33145      * DMNeural6: DMDBClass Macro ;
33146      *------------------------------------------------------------* ;
33147      %macro DMDBClass;
33148          DepVar(DESC) Marital_Status(ASC)
33149      %mend DMDBClass;
33150      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
33151      * DMNeural6: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * DMNeural6: DMDBVar Macro ;
33152      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
33153      %macro DMDBVar;
33154          AcceptedCmpTotal Frq Income Mnt MntGoldProds MntMeatProducts
33155         NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat Recency
33156         Teenhome Year_Birth
33157      %mend DMDBVar;
33158      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33159      * DMNeural6: Create DMDB;
MPRINT(EM_DIAGRAM):   * DMNeural6: Create DMDB;
33160      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33161      proc dmdb batch data=EMWS8.Meta2_TRAIN
33162      dmdbcat=WORK.DMNeural6_DMDB
33163      maxlevel = 513
33164      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Meta2_TRAIN dmdbcat=WORK.DMNeural6_DMDB maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
33165      class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
33166      var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Frq Income Mnt MntGoldProds MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):  ;
33167      target
33168      DepVar
33169      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
33170      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
33171      quit;
33172      *--- end code ---*;
 
33173      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
33174      * DMNeural6: Input Variables Macro ;
MPRINT(EM_DIAGRAM):   * DMNeural6: Input Variables Macro ;
33175      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
33176      %macro INPUTS;
33177          AcceptedCmpTotal Frq Income Marital_Status Mnt MntGoldProds MntMeatProducts
33178         NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat Recency
33179         Teenhome Year_Birth
33180      %mend INPUTS;
33181      proc dmneurl data=EMWS8.Meta2_TRAIN dmdbcat=WORK.DMNeural6_DMDB
33182      outest=EMWS8.DMNeural6_ESTIMATE outfit=WORK._OUTFIT_DMNEURAL
33183      out=WORK._OUT_DMNEURAL outclass=WORK._OUTCLASSDMNEURL_20VZPSZ
33184      optcrit=ACC maxcomp=6 maxstage=10 maxfunc=1000
33185      selcrit=SSE
33186      maxiter=400 maxvect=800 memsiz=8 stopr2=0.00005 cutoff=0.5 maxrows = 3000
33187      absgconv=0.0005 gconv=1E-8
33188      NOMONITOR
33189      ;
MPRINT(EM_DIAGRAM):   proc dmneurl data=EMWS8.Meta2_TRAIN dmdbcat=WORK.DMNeural6_DMDB outest=EMWS8.DMNeural6_ESTIMATE outfit=WORK._OUTFIT_DMNEURAL out=WORK._OUT_DMNEURAL outclass=WORK._OUTCLASSDMNEURL_20VZPSZ optcrit=ACC maxcomp=6 maxstage=10 maxfunc=1000
selcrit=SSE maxiter=400 maxvect=800 memsiz=8 stopr2=0.00005 cutoff=0.5 maxrows = 3000 absgconv=0.0005 gconv=1E-8 NOMONITOR ;
MPRINT(EM_DIAGRAM):   var
33190      var %INPUTS;
MPRINT(INPUTS):   AcceptedCmpTotal Frq Income Marital_Status Mnt MntGoldProds MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):  ;
33191      target DepVar;
MPRINT(EM_DIAGRAM):   target DepVar;
33192      ;
MPRINT(EM_DIAGRAM):   ;
33193      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._OUTCLASSDMNEURL_20VZPSZ has 7 observations and 3 variables.
 
Building X'X  for target: DepVar rows=19 memory=0.00 meg.
2374 records read
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=529
NOTE: Sparsity  Percentage=0.0149303354
     ---------- Optimization Cycle (Stage=0) ----------
-------------------- Activation= SQUARE (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: SQUARE: Iter=4 Crit=0.04217092: SSE= 400.45501 Acc= 88.8374
-------------------- Activation= TANH (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=3.
NOTE: TANH: Iter=20 Crit=0.04381558: SSE=416.072781 Acc= 88.7110
-------------------- Activation= ARCTAN (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=3.
NOTE: ARCTAN: Iter=32 Crit=0.04382009: SSE=416.115528 Acc= 88.5425
-------------------- Activation= LOGIST (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=4.
NOTE: LOGIST: Iter=5 Crit=0.05067212: SSE=481.182479 Acc= 86.6049
-------------------- Activation= GAUSS (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=9.
NOTE: GAUSS: Iter=5 Crit=0.06257062: SSE=594.170611 Acc= 84.8778
-------------------- Activation= SIN (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: SIN: Iter=9 Crit=0.04445429: SSE=422.137968 Acc= 88.0792
-------------------- Activation= COS (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: COS: Iter=18 Crit=0.05226752: SSE=496.332375 Acc= 86.7313
-------------------- Activation= EXP (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=5.
NOTE: EXP: Iter=111 Crit=0.04412288: SSE=418.990842 Acc= 88.8795
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=603
NOTE: Sparsity  Percentage=0.017018889
2374 records read
     ---------- Optimization Cycle (Stage=1) ----------
-------------------- Activation= SQUARE (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.03216931: SSE=298.231723 Acc= 91.1542
-------------------- Activation= TANH (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: TANH: Iter=7 Crit=0.03250726: SSE=302.310907 Acc= 91.2384
-------------------- Activation= ARCTAN (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: ARCTAN: Iter=7 Crit=0.03247883: SSE= 301.83949 Acc= 91.2384
-------------------- Activation= LOGIST (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: LOGIST: Iter=7 Crit=0.03252293: SSE=302.568482 Acc= 91.1963
-------------------- Activation= GAUSS (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: GAUSS: Iter=5 Crit=0.03465243: SSE=328.312181 Acc= 90.3960
-------------------- Activation= SIN (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SIN: Iter=4 Crit=0.03250413: SSE=302.159036 Acc= 91.1963
-------------------- Activation= COS (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=3.
NOTE: COS: Iter=7 Crit=0.03470441: SSE=328.955849 Acc= 90.3538
-------------------- Activation= EXP (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: EXP: Iter=8 Crit=0.03235604: SSE=300.445012 Acc= 91.3227
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=764
NOTE: Sparsity  Percentage=0.0215629041
2374 records read
     ---------- Optimization Cycle (Stage=2) ----------
-------------------- Activation= SQUARE (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.03056704: SSE=284.437883 Acc= 91.9124
-------------------- Activation= TANH (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: TANH: Iter=6 Crit=0.03114358: SSE=288.707071 Acc= 91.5754
-------------------- Activation= ARCTAN (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: ARCTAN: Iter=6 Crit= 0.0311397: SSE=288.520202 Acc= 91.6175
-------------------- Activation= LOGIST (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: LOGIST: Iter=2 Crit=0.03115047: SSE=288.897578 Acc= 91.4912
-------------------- Activation= GAUSS (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: GAUSS: Iter=4 Crit=0.03116162: SSE=291.647836 Acc= 91.4912
-------------------- Activation= SIN (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: SIN: Iter=6 Crit=0.03117762: SSE=289.278898 Acc= 91.6175
-------------------- Activation= COS (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=4.
NOTE: COS: Iter=4 Crit=0.03110951: SSE=290.834446 Acc= 91.5754
-------------------- Activation= EXP (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: EXP: Iter=2 Crit=0.03107246: SSE=288.103362 Acc= 91.6175
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=864
NOTE: Sparsity  Percentage=0.0243852738
2374 records read
     ---------- Optimization Cycle (Stage=3) ----------
-------------------- Activation= SQUARE (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.02972315: SSE=275.112959 Acc= 92.1651
-------------------- Activation= TANH (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: TANH: Iter=4 Crit=0.03004996: SSE=277.391969 Acc= 92.1230
-------------------- Activation= ARCTAN (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: ARCTAN: Iter=7 Crit=0.03003588: SSE=277.253925 Acc= 92.1230
-------------------- Activation= LOGIST (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: LOGIST: Iter=2 Crit=0.03003615: SSE=277.283146 Acc= 92.0809
-------------------- Activation= GAUSS (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: GAUSS: Iter=3 Crit=0.03006312: SSE=279.357827 Acc= 92.3757
-------------------- Activation= SIN (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: SIN: Iter=4 Crit=0.03004089: SSE=277.514671 Acc= 92.1230
-------------------- Activation= COS (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=4.
NOTE: COS: Iter=8 Crit=0.03009583: SSE=280.054458 Acc= 92.1230
-------------------- Activation= EXP (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: EXP: Iter=2 Crit=0.02994257: SSE=276.193708 Acc= 92.0809
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=636
NOTE: Sparsity  Percentage=0.017950271
2374 records read
     ---------- Optimization Cycle (Stage=4) ----------
-------------------- Activation= SQUARE (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.02955504: SSE=271.217233 Acc= 92.3336
-------------------- Activation= TANH (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: TANH: Iter=3 Crit=0.02961338: SSE=272.031454 Acc= 92.4179
-------------------- Activation= ARCTAN (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: ARCTAN: Iter=3 Crit= 0.0296121: SSE=271.862385 Acc= 92.4600
-------------------- Activation= LOGIST (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: LOGIST: Iter=2 Crit=0.02961063: SSE=272.246825 Acc= 92.4179
-------------------- Activation= GAUSS (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=4.
NOTE: GAUSS: Iter=5 Crit=  0.029766: SSE=275.918415 Acc= 91.9966
-------------------- Activation= SIN (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: SIN: Iter=5 Crit= 0.0296066: SSE= 271.68704 Acc= 92.5442
-------------------- Activation= COS (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=5.
NOTE: COS: Iter=7 Crit=0.02976318: SSE=275.913442 Acc= 91.9966
-------------------- Activation= EXP (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: EXP: Iter=1 Crit= 0.0296067: SSE=272.228687 Acc= 92.4600
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=622
NOTE: Sparsity  Percentage=0.0175551392
2374 records read
     ---------- Optimization Cycle (Stage=5) ----------
-------------------- Activation= SQUARE (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.02917495: SSE=267.293616 Acc= 92.7127
-------------------- Activation= TANH (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: TANH: Iter=4 Crit=0.02941029: SSE=268.208098 Acc= 92.5864
-------------------- Activation= ARCTAN (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: ARCTAN: Iter=6 Crit=0.02938242: SSE= 267.58515 Acc= 92.5864
-------------------- Activation= LOGIST (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: LOGIST: Iter=2 Crit=0.02938398: SSE=267.537187 Acc= 92.5442
-------------------- Activation= GAUSS (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: GAUSS: Iter=7 Crit=0.02929638: SSE= 268.81507 Acc= 92.6285
-------------------- Activation= SIN (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=4.
NOTE: SIN: Iter=7 Crit=0.02939051: SSE=267.603163 Acc= 92.5442
-------------------- Activation= COS (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=3.
NOTE: COS: Iter=5 Crit=0.02935636: SSE=269.736705 Acc= 92.4179
-------------------- Activation= EXP (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: EXP: Iter=2 Crit=0.02937889: SSE=267.485224 Acc= 92.5442
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=552
NOTE: Sparsity  Percentage=0.0155794805
2374 records read
     ---------- Optimization Cycle (Stage=6) ----------
-------------------- Activation= SQUARE (Stage=6) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.02897492: SSE=266.360963 Acc= 92.7970
-------------------- Activation= TANH (Stage=6) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=5.
NOTE: TANH: Iter=6 Crit=0.02924131: SSE=268.929505 Acc= 92.6706
-------------------- Activation= ARCTAN (Stage=6) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=4.
NOTE: ARCTAN: Iter=7 Crit=0.02920348: SSE=268.227627 Acc= 92.7548
-------------------- Activation= LOGIST (Stage=6) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=3.
NOTE: LOGIST: Iter=2 Crit=0.02919864: SSE= 268.21227 Acc= 92.7548
-------------------- Activation= GAUSS (Stage=6) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=4.
NOTE: GAUSS: Iter=4 Crit=0.02915584: SSE=268.730672 Acc= 92.7127
-------------------- Activation= SIN (Stage=6) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=4.
NOTE: SIN: Iter=6 Crit= 0.0292127: SSE=268.321482 Acc= 92.7548
-------------------- Activation= COS (Stage=6) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: COS: Iter=5 Crit= 0.0292556: SSE=269.937589 Acc= 92.5864
-------------------- Activation= EXP (Stage=6) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=3.
NOTE: EXP: Iter=2 Crit=0.02916756: SSE= 267.96837 Acc= 92.6285
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=630
NOTE: Sparsity  Percentage=0.0177809288
2374 records read
     ---------- Optimization Cycle (Stage=7) ----------
-------------------- Activation= SQUARE (Stage=7) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.02914797: SSE=266.011973 Acc= 92.7548
-------------------- Activation= TANH (Stage=7) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: TANH: Iter=3 Crit=0.02916857: SSE=266.779829 Acc= 92.7970
-------------------- Activation= ARCTAN (Stage=7) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=3.
NOTE: ARCTAN: Iter=5 Crit=0.02916327: SSE=266.606612 Acc= 92.7970
-------------------- Activation= LOGIST (Stage=7) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=3.
NOTE: LOGIST: Iter=1 Crit=0.02916822: SSE=266.641032 Acc= 92.7970
-------------------- Activation= GAUSS (Stage=7) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=3.
NOTE: GAUSS: Iter=3 Crit=0.02922511: SSE=268.257748 Acc= 92.7970
-------------------- Activation= SIN (Stage=7) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: SIN: Iter=4 Crit= 0.0291709: SSE=266.541166 Acc= 92.7548
-------------------- Activation= COS (Stage=7) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=4.
NOTE: COS: Iter=4 Crit=0.02919098: SSE= 267.76381 Acc= 92.6285
-------------------- Activation= EXP (Stage=7) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: EXP: Iter=1 Crit=0.02917331: SSE=266.680865 Acc= 92.7127
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=662
NOTE: Sparsity  Percentage=0.0186840871
2374 records read
     ---------- Optimization Cycle (Stage=8) ----------
-------------------- Activation= SQUARE (Stage=8) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.02909036: SSE=264.667725 Acc= 92.7127
-------------------- Activation= TANH (Stage=8) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: TANH: Iter=4 Crit=0.02912864: SSE=265.148061 Acc= 92.7548
-------------------- Activation= ARCTAN (Stage=8) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: ARCTAN: Iter=4 Crit=0.02912769: SSE= 265.01308 Acc= 92.7970
-------------------- Activation= LOGIST (Stage=8) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=3.
NOTE: LOGIST: Iter=1 Crit=0.02912996: SSE=265.223817 Acc= 92.7127
-------------------- Activation= GAUSS (Stage=8) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=3.
NOTE: GAUSS: Iter=5 Crit=0.02915035: SSE=266.121133 Acc= 92.7127
-------------------- Activation= SIN (Stage=8) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=4.
NOTE: SIN: Iter=5 Crit=0.02913002: SSE=265.410837 Acc= 92.6706
-------------------- Activation= COS (Stage=8) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=5.
NOTE: COS: Iter=5 Crit=0.02914952: SSE=266.107515 Acc= 92.8812
-------------------- Activation= EXP (Stage=8) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: EXP: Iter=1 Crit=0.02913609: SSE=264.979171 Acc= 92.7970
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=116
NOTE: Sparsity  Percentage=47.933884298
2374 records read
     ---------- Optimization Cycle (Stage=9) ----------
-------------------- Activation= SQUARE (Stage=9) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.02913467: SSE=265.411556 Acc= 92.7970
-------------------- Activation= TANH (Stage=9) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: TANH: Iter=3 Crit=0.02914648: SSE=265.331151 Acc= 92.7548
-------------------- Activation= ARCTAN (Stage=9) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: ARCTAN: Iter=2 Crit=0.02915532: SSE= 265.51794 Acc= 92.7970
-------------------- Activation= LOGIST (Stage=9) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: LOGIST: Iter=1 Crit=0.02914635: SSE=265.293174 Acc= 92.7548
-------------------- Activation= GAUSS (Stage=9) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: GAUSS: Iter=5 Crit=0.02914795: SSE=265.310482 Acc= 92.7970
-------------------- Activation= SIN (Stage=9) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SIN: Iter=3 Crit=0.02915112: SSE=265.524978 Acc= 92.7970
-------------------- Activation= COS (Stage=9) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: COS: Iter=4 Crit=0.02914244: SSE=265.444809 Acc= 92.7970
-------------------- Activation= EXP (Stage=9) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: EXP: Iter=1 Crit=0.02915017: SSE= 265.08395 Acc= 92.7127
     ---------- Optimization Cycle (Stage=9) ----------
-------------------- Activation= SQUARE (Stage=9) --------------------
NOTE: ABSCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=11 Crit=6.95029486: SSE= 283.28119 Acc= 93.0497
-------------------- Activation= TANH (Stage=9) --------------------
NOTE: FCONV2 convergence criterion satisfied.
NOTE: TANH: Iter=6 Crit=7.11878686: SSE=289.405029 Acc= 92.8812
-------------------- Activation= ARCTAN (Stage=9) --------------------
NOTE: ABSCONV convergence criterion satisfied.
NOTE: ARCTAN: Iter=7 Crit=7.03454086: SSE=269.088704 Acc= 92.9655
-------------------- Activation= LOGIST (Stage=9) --------------------
NOTE: FCONV convergence criterion satisfied.
NOTE: LOGIST: Iter=8 Crit=7.07666386: SSE=267.011303 Acc= 92.9233
-------------------- Activation= GAUSS (Stage=9) --------------------
NOTE: ABSCONV convergence criterion satisfied.
NOTE: GAUSS: Iter=7 Crit=7.07666386: SSE=274.537091 Acc= 92.9233
-------------------- Activation= SIN (Stage=9) --------------------
NOTE: FCONV convergence criterion satisfied.
NOTE: SIN: Iter=12 Crit=6.95029486: SSE=285.150017 Acc= 93.0497
-------------------- Activation= COS (Stage=9) --------------------
NOTE: ABSCONV convergence criterion satisfied.
NOTE: COS: Iter=6 Crit=7.07666386: SSE=273.855814 Acc= 92.9233
-------------------- Activation= EXP (Stage=9) --------------------
NOTE: FCONV convergence criterion satisfied.
NOTE: EXP: Iter=12 Crit=7.03454086: SSE=305.696285 Acc= 92.9655
2374 records read
NOTE: The data set EMWS8.DMNEURAL6_ESTIMATE has 142 observations and 24 variables.
2374 records read
NOTE: The data set WORK._OUT_DMNEURAL has 2374 observations and 4 variables.
NOTE: The data set WORK._OUTFIT_DMNEURAL has 11 observations and 9 variables.
*** Total Number of Runs through Data :       52
*** Total Number of NL Optimizations  :       88
*** Total Number of Iterations in NLP :      543
*** Total Number Function Calls in NLP:     1956
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           31.32 seconds
      cpu time            31.29 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The PROCEDURE DMNEURL printed pages 4-37.
NOTE: PROCEDURE DMNEURL used (Total process time):
      real time           31.33 seconds
      cpu time            31.31 seconds
 
 
33194      data WORK._OUTFIT_DMNEURAL;
MPRINT(EM_DIAGRAM):    data WORK._OUTFIT_DMNEURAL;
33195      set WORK._OUTFIT_DMNEURAL;
MPRINT(EM_DIAGRAM):   set WORK._OUTFIT_DMNEURAL;
33196      if _TYPE_^='_FITIND_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_FITIND_' then delete;
33197      label _STAGE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stage, noquote))";
MPRINT(EM_DIAGRAM):   label _STAGE_ = "Training Stage";
33198      _STAGE_=_STAGE_-1;
MPRINT(EM_DIAGRAM):   _STAGE_=_STAGE_-1;
 
NOTE: There were 11 observations read from the data set WORK._OUTFIT_DMNEURAL.
NOTE: The data set WORK._OUTFIT_DMNEURAL has 10 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33199      proc transpose data=WORK._OUTFIT_DMNEURAL out=WORK._OUTFIT_DMNEURAL prefix=TRAINING;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._OUTFIT_DMNEURAL out=WORK._OUTFIT_DMNEURAL prefix=TRAINING;
 
NOTE: There were 10 observations read from the data set WORK._OUTFIT_DMNEURAL.
NOTE: The data set WORK._OUTFIT_DMNEURAL has 6 observations and 12 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33200      data WORK._OUTFIT_DMNEURAL;
MPRINT(EM_DIAGRAM):   data WORK._OUTFIT_DMNEURAL;
33201      set WORK._OUTFIT_DMNEURAL;
MPRINT(EM_DIAGRAM):   set WORK._OUTFIT_DMNEURAL;
33202      label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stat, noquote))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Statistic";
33203      label _LABEL_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_statlabel, noquote))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label of Statistic";
33204      rename _NAME_=STATISTIC;
MPRINT(EM_DIAGRAM):   rename _NAME_=STATISTIC;
33205      rename _LABEL_=LABEL;
MPRINT(EM_DIAGRAM):   rename _LABEL_=LABEL;
33206      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._OUTFIT_DMNEURAL.
NOTE: The data set WORK._OUTFIT_DMNEURAL has 6 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33207      data WORK._DSSTAGEDMNEURL_20VZPSZ;
MPRINT(EM_DIAGRAM):    data WORK._DSSTAGEDMNEURL_20VZPSZ;
33208      set EMWS8.DMNeural6_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_ESTIMATE;
33209      by _STAGE_;
MPRINT(EM_DIAGRAM):   by _STAGE_;
33210      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
33211      keep _STAGE_ _NAME_;
MPRINT(EM_DIAGRAM):   keep _STAGE_ _NAME_;
33212      if FIRST._STAGE_ then output;
MPRINT(EM_DIAGRAM):   if FIRST._STAGE_ then output;
33213      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 142 observations read from the data set EMWS8.DMNEURAL6_ESTIMATE.
NOTE: The data set WORK._DSSTAGEDMNEURL_20VZPSZ has 10 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33214      data WORK._DSSTDMEANDMNEURL_20VZPSZ;
MPRINT(EM_DIAGRAM):    data WORK._DSSTDMEANDMNEURL_20VZPSZ;
33215      set EMWS8.DMNeural6_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_ESTIMATE;
33216      if _TYPE_='_STDEV_' or _TYPE_='_MEAN_' then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_STDEV_' or _TYPE_='_MEAN_' then output;
33217      DROP _TARGET_ _NAME_ _STAGE_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   DROP _TARGET_ _NAME_ _STAGE_ _MEAN_ _STDEV_;
33218      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 142 observations read from the data set EMWS8.DMNEURAL6_ESTIMATE.
NOTE: The data set WORK._DSSTDMEANDMNEURL_20VZPSZ has 2 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
33219      data WORK._DSPARADMNEURL_20VZPSZ;
MPRINT(EM_DIAGRAM):    data WORK._DSPARADMNEURL_20VZPSZ;
33220      set EMWS8.DMNeural6_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_ESTIMATE;
33221      if _TYPE_='_PARMS_' then if _STAGE_=0 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=0 then output;
33222      if _TYPE_='_PARMS_' then if _STAGE_=1 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=1 then output;
33223      if _TYPE_='_PARMS_' then if _STAGE_=2 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=2 then output;
33224      if _TYPE_='_PARMS_' then if _STAGE_=3 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=3 then output;
33225      if _TYPE_='_PARMS_' then if _STAGE_=4 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=4 then output;
33226      if _TYPE_='_PARMS_' then if _STAGE_=5 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=5 then output;
33227      if _TYPE_='_PARMS_' then if _STAGE_=6 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=6 then output;
33228      if _TYPE_='_PARMS_' then if _STAGE_=7 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=7 then output;
33229      if _TYPE_='_PARMS_' then if _STAGE_=8 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=8 then output;
33230      if _TYPE_='_PARMS_' then if _STAGE_=9 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=9 then output;
33231      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 142 observations read from the data set EMWS8.DMNEURAL6_ESTIMATE.
NOTE: The data set WORK._DSPARADMNEURL_20VZPSZ has 80 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33232      data WORK._DSPARADMNEURL_20VZPSZ;
MPRINT(EM_DIAGRAM):    data WORK._DSPARADMNEURL_20VZPSZ;
33233      set WORK._DSPARADMNEURL_20VZPSZ;
MPRINT(EM_DIAGRAM):   set WORK._DSPARADMNEURL_20VZPSZ;
33234      by _STAGE_;
MPRINT(EM_DIAGRAM):   by _STAGE_;
33235      if FIRST._STAGE_ then output;
MPRINT(EM_DIAGRAM):   if FIRST._STAGE_ then output;
33236      DROP _TARGET_ _TYPE_ _MEAN_ _STDEV_ _NAME_ _STAGE_;
MPRINT(EM_DIAGRAM):   DROP _TARGET_ _TYPE_ _MEAN_ _STDEV_ _NAME_ _STAGE_;
 
NOTE: There were 80 observations read from the data set WORK._DSPARADMNEURL_20VZPSZ.
NOTE: The data set WORK._DSPARADMNEURL_20VZPSZ has 10 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33237      proc transpose data=WORK._DSPARADMNEURL_20VZPSZ out=WORK._DSPARADMNEURL_20VZPSZ prefix=STAGE;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._DSPARADMNEURL_20VZPSZ out=WORK._DSPARADMNEURL_20VZPSZ prefix=STAGE;
 
NOTE: There were 10 observations read from the data set WORK._DSPARADMNEURL_20VZPSZ.
NOTE: The data set WORK._DSPARADMNEURL_20VZPSZ has 18 observations and 12 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
33238      proc transpose data=WORK._DSPARADMNEURL_20VZPSZ out=WORK._DSPARADMNEURL_20VZPSZ prefix=PARA;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._DSPARADMNEURL_20VZPSZ out=WORK._DSPARADMNEURL_20VZPSZ prefix=PARA;
33239      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK._DSPARADMNEURL_20VZPSZ.
NOTE: The data set WORK._DSPARADMNEURL_20VZPSZ has 10 observations and 19 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33240      data WORK._OUTCLASSDMNEURL_20VZPSZ;
MPRINT(EM_DIAGRAM):    data WORK._OUTCLASSDMNEURL_20VZPSZ;
33241      set WORK._OUTCLASSDMNEURL_20VZPSZ;
MPRINT(EM_DIAGRAM):   set WORK._OUTCLASSDMNEURL_20VZPSZ;
33242      if upcase(_VAR_)=upcase('DepVar') then delete;
MPRINT(EM_DIAGRAM):   if upcase(_VAR_)=upcase('DepVar') then delete;
33243      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._OUTCLASSDMNEURL_20VZPSZ.
NOTE: The data set WORK._OUTCLASSDMNEURL_20VZPSZ has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33244      data WORK._SPRIN0;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN0;
33245      set EMWS8.DMNeural6_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_ESTIMATE;
33246      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
33247      if _STAGE_ ^='0' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='0' then delete;
33248      drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      33247:14
NOTE: There were 142 observations read from the data set EMWS8.DMNEURAL6_ESTIMATE.
NOTE: The data set WORK._SPRIN0 has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
33249      proc transpose data=WORK._SPRIN0 out=WORK._SPRIN0 prefix=_SPRIN0;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN0 out=WORK._SPRIN0 prefix=_SPRIN0;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN0.
NOTE: The data set WORK._SPRIN0 has 18 observations and 8 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33250      data WORK._SPRIN0;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN0;
33251      set WORK._SPRIN0;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN0;
33252      if _SPRIN01=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN01=. then delete;
33253      /* to delete _v_ variables */
 
NOTE: There were 18 observations read from the data set WORK._SPRIN0.
NOTE: The data set WORK._SPRIN0 has 18 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33254      proc transpose data=WORK._SPRIN0 out=WORK._SPRIN0;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN0 out=WORK._SPRIN0;
33255      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK._SPRIN0.
NOTE: The data set WORK._SPRIN0 has 6 observations and 19 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33256      data WORK._SPRIN1;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN1;
33257      set EMWS8.DMNeural6_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_ESTIMATE;
33258      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
33259      if _STAGE_ ^='1' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='1' then delete;
33260      drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      33259:14
NOTE: There were 142 observations read from the data set EMWS8.DMNEURAL6_ESTIMATE.
NOTE: The data set WORK._SPRIN1 has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33261      proc transpose data=WORK._SPRIN1 out=WORK._SPRIN1 prefix=_SPRIN1;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN1 out=WORK._SPRIN1 prefix=_SPRIN1;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN1.
NOTE: The data set WORK._SPRIN1 has 18 observations and 8 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33262      data WORK._SPRIN1;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN1;
33263      set WORK._SPRIN1;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN1;
33264      if _SPRIN11=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN11=. then delete;
33265      /* to delete _v_ variables */
 
NOTE: There were 18 observations read from the data set WORK._SPRIN1.
NOTE: The data set WORK._SPRIN1 has 18 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33266      proc transpose data=WORK._SPRIN1 out=WORK._SPRIN1;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN1 out=WORK._SPRIN1;
33267      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK._SPRIN1.
NOTE: The data set WORK._SPRIN1 has 6 observations and 19 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33268      data WORK._SPRIN2;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN2;
33269      set EMWS8.DMNeural6_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_ESTIMATE;
33270      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
33271      if _STAGE_ ^='2' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='2' then delete;
33272      drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      33271:14
NOTE: There were 142 observations read from the data set EMWS8.DMNEURAL6_ESTIMATE.
NOTE: The data set WORK._SPRIN2 has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33273      proc transpose data=WORK._SPRIN2 out=WORK._SPRIN2 prefix=_SPRIN2;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN2 out=WORK._SPRIN2 prefix=_SPRIN2;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN2.
NOTE: The data set WORK._SPRIN2 has 18 observations and 8 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33274      data WORK._SPRIN2;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN2;
33275      set WORK._SPRIN2;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN2;
33276      if _SPRIN21=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN21=. then delete;
33277      /* to delete _v_ variables */
 
NOTE: There were 18 observations read from the data set WORK._SPRIN2.
NOTE: The data set WORK._SPRIN2 has 18 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33278      proc transpose data=WORK._SPRIN2 out=WORK._SPRIN2;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN2 out=WORK._SPRIN2;
33279      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK._SPRIN2.
NOTE: The data set WORK._SPRIN2 has 6 observations and 19 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33280      data WORK._SPRIN3;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN3;
33281      set EMWS8.DMNeural6_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_ESTIMATE;
33282      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
33283      if _STAGE_ ^='3' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='3' then delete;
33284      drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      33283:14
NOTE: There were 142 observations read from the data set EMWS8.DMNEURAL6_ESTIMATE.
NOTE: The data set WORK._SPRIN3 has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33285      proc transpose data=WORK._SPRIN3 out=WORK._SPRIN3 prefix=_SPRIN3;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN3 out=WORK._SPRIN3 prefix=_SPRIN3;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN3.
NOTE: The data set WORK._SPRIN3 has 18 observations and 8 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33286      data WORK._SPRIN3;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN3;
33287      set WORK._SPRIN3;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN3;
33288      if _SPRIN31=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN31=. then delete;
33289      /* to delete _v_ variables */
 
NOTE: There were 18 observations read from the data set WORK._SPRIN3.
NOTE: The data set WORK._SPRIN3 has 18 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33290      proc transpose data=WORK._SPRIN3 out=WORK._SPRIN3;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN3 out=WORK._SPRIN3;
33291      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK._SPRIN3.
NOTE: The data set WORK._SPRIN3 has 6 observations and 19 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33292      data WORK._SPRIN4;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN4;
33293      set EMWS8.DMNeural6_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_ESTIMATE;
33294      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
33295      if _STAGE_ ^='4' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='4' then delete;
33296      drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      33295:14
NOTE: There were 142 observations read from the data set EMWS8.DMNEURAL6_ESTIMATE.
NOTE: The data set WORK._SPRIN4 has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33297      proc transpose data=WORK._SPRIN4 out=WORK._SPRIN4 prefix=_SPRIN4;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN4 out=WORK._SPRIN4 prefix=_SPRIN4;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN4.
NOTE: The data set WORK._SPRIN4 has 18 observations and 8 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33298      data WORK._SPRIN4;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN4;
33299      set WORK._SPRIN4;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN4;
33300      if _SPRIN41=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN41=. then delete;
33301      /* to delete _v_ variables */
 
NOTE: There were 18 observations read from the data set WORK._SPRIN4.
NOTE: The data set WORK._SPRIN4 has 18 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33302      proc transpose data=WORK._SPRIN4 out=WORK._SPRIN4;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN4 out=WORK._SPRIN4;
33303      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK._SPRIN4.
NOTE: The data set WORK._SPRIN4 has 6 observations and 19 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33304      data WORK._SPRIN5;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN5;
33305      set EMWS8.DMNeural6_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_ESTIMATE;
33306      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
33307      if _STAGE_ ^='5' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='5' then delete;
33308      drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      33307:14
NOTE: There were 142 observations read from the data set EMWS8.DMNEURAL6_ESTIMATE.
NOTE: The data set WORK._SPRIN5 has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33309      proc transpose data=WORK._SPRIN5 out=WORK._SPRIN5 prefix=_SPRIN5;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN5 out=WORK._SPRIN5 prefix=_SPRIN5;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN5.
NOTE: The data set WORK._SPRIN5 has 18 observations and 8 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33310      data WORK._SPRIN5;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN5;
33311      set WORK._SPRIN5;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN5;
33312      if _SPRIN51=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN51=. then delete;
33313      /* to delete _v_ variables */
 
NOTE: There were 18 observations read from the data set WORK._SPRIN5.
NOTE: The data set WORK._SPRIN5 has 18 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33314      proc transpose data=WORK._SPRIN5 out=WORK._SPRIN5;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN5 out=WORK._SPRIN5;
33315      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK._SPRIN5.
NOTE: The data set WORK._SPRIN5 has 6 observations and 19 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33316      data WORK._SPRIN6;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN6;
33317      set EMWS8.DMNeural6_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_ESTIMATE;
33318      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
33319      if _STAGE_ ^='6' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='6' then delete;
33320      drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      33319:14
NOTE: There were 142 observations read from the data set EMWS8.DMNEURAL6_ESTIMATE.
NOTE: The data set WORK._SPRIN6 has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33321      proc transpose data=WORK._SPRIN6 out=WORK._SPRIN6 prefix=_SPRIN6;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN6 out=WORK._SPRIN6 prefix=_SPRIN6;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN6.
NOTE: The data set WORK._SPRIN6 has 18 observations and 8 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33322      data WORK._SPRIN6;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN6;
33323      set WORK._SPRIN6;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN6;
33324      if _SPRIN61=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN61=. then delete;
33325      /* to delete _v_ variables */
 
NOTE: There were 18 observations read from the data set WORK._SPRIN6.
NOTE: The data set WORK._SPRIN6 has 18 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33326      proc transpose data=WORK._SPRIN6 out=WORK._SPRIN6;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN6 out=WORK._SPRIN6;
33327      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK._SPRIN6.
NOTE: The data set WORK._SPRIN6 has 6 observations and 19 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33328      data WORK._SPRIN7;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN7;
33329      set EMWS8.DMNeural6_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_ESTIMATE;
33330      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
33331      if _STAGE_ ^='7' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='7' then delete;
33332      drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      33331:14
NOTE: There were 142 observations read from the data set EMWS8.DMNEURAL6_ESTIMATE.
NOTE: The data set WORK._SPRIN7 has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33333      proc transpose data=WORK._SPRIN7 out=WORK._SPRIN7 prefix=_SPRIN7;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN7 out=WORK._SPRIN7 prefix=_SPRIN7;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN7.
NOTE: The data set WORK._SPRIN7 has 18 observations and 8 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33334      data WORK._SPRIN7;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN7;
33335      set WORK._SPRIN7;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN7;
33336      if _SPRIN71=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN71=. then delete;
33337      /* to delete _v_ variables */
 
NOTE: There were 18 observations read from the data set WORK._SPRIN7.
NOTE: The data set WORK._SPRIN7 has 18 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33338      proc transpose data=WORK._SPRIN7 out=WORK._SPRIN7;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN7 out=WORK._SPRIN7;
33339      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK._SPRIN7.
NOTE: The data set WORK._SPRIN7 has 6 observations and 19 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33340      data WORK._SPRIN8;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN8;
33341      set EMWS8.DMNeural6_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_ESTIMATE;
33342      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
33343      if _STAGE_ ^='8' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='8' then delete;
33344      drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      33343:14
NOTE: There were 142 observations read from the data set EMWS8.DMNEURAL6_ESTIMATE.
NOTE: The data set WORK._SPRIN8 has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33345      proc transpose data=WORK._SPRIN8 out=WORK._SPRIN8 prefix=_SPRIN8;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN8 out=WORK._SPRIN8 prefix=_SPRIN8;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN8.
NOTE: The data set WORK._SPRIN8 has 18 observations and 8 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33346      data WORK._SPRIN8;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN8;
33347      set WORK._SPRIN8;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN8;
33348      if _SPRIN81=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN81=. then delete;
33349      /* to delete _v_ variables */
 
NOTE: There were 18 observations read from the data set WORK._SPRIN8.
NOTE: The data set WORK._SPRIN8 has 18 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33350      proc transpose data=WORK._SPRIN8 out=WORK._SPRIN8;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN8 out=WORK._SPRIN8;
33351      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK._SPRIN8.
NOTE: The data set WORK._SPRIN8 has 6 observations and 19 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33352      data WORK._SPRIN9;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN9;
33353      set EMWS8.DMNeural6_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_ESTIMATE;
33354      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
33355      if _STAGE_ ^='9' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='9' then delete;
33356      drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      33355:14
NOTE: There were 142 observations read from the data set EMWS8.DMNEURAL6_ESTIMATE.
NOTE: The data set WORK._SPRIN9 has 2 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33357      proc transpose data=WORK._SPRIN9 out=WORK._SPRIN9 prefix=_SPRIN9;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN9 out=WORK._SPRIN9 prefix=_SPRIN9;
 
NOTE: There were 2 observations read from the data set WORK._SPRIN9.
NOTE: The data set WORK._SPRIN9 has 18 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33358      data WORK._SPRIN9;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN9;
33359      set WORK._SPRIN9;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN9;
33360      if _SPRIN91=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN91=. then delete;
33361      /* to delete _v_ variables */
 
NOTE: There were 18 observations read from the data set WORK._SPRIN9.
NOTE: The data set WORK._SPRIN9 has 18 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33362      proc transpose data=WORK._SPRIN9 out=WORK._SPRIN9;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN9 out=WORK._SPRIN9;
33363      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK._SPRIN9.
NOTE: The data set WORK._SPRIN9 has 2 observations and 19 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.17 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                19.17 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O233C28Y "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural6\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O233C28Y new;
MPRINT(EM_DIAGRAM):   run;
33465      filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * DMNeural6: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33466      *------------------------------------------------------------*;
33467      * DMNeural6: Scoring DATA data;
33468      *------------------------------------------------------------*;
33469      data EMWS8.DMNeural6_TRAIN
33470      / view=EMWS8.DMNeural6_TRAIN
33471      ;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural6_TRAIN / view=EMWS8.DMNeural6_TRAIN ;
33472      set EMWS8.Meta2_TRAIN
33473      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
33474      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\\predictive-models-project\Workspaces\EMWS8\DMNeural6\EMFLOWSCORE.sas.
33475     +**********************************************************;
MPRINT(EM_DIAGRAM):   **********************************************************;
33476     +**** Begin scoring code for DMNeural;
MPRINT(EM_DIAGRAM):   **** Begin scoring code for DMNeural;
33477     +**********************************************************;
MPRINT(EM_DIAGRAM):   **********************************************************;
33478     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
33479     +LABEL _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = "Warnings";
33480     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar
33480    !+       I_DepVar $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
33481     +LABEL I_DepVar="Into: DepVar";
MPRINT(EM_DIAGRAM):   LABEL I_DepVar= "Into: DepVar";
33482     +LENGTH _FORMAT_ $200;
MPRINT(EM_DIAGRAM):   LENGTH _FORMAT_ $200;
33483     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH _NORMFMT_
33483    !+       _NORMFMT_ $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
33484     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar
33484    !+       F_DepVar $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
33485     +LABEL F_DepVar="From: DepVar";
MPRINT(EM_DIAGRAM):   LABEL F_DepVar= "From: DepVar";
33486     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH _TARGNOR_
33486    !+       _TARGNOR_ $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
33487     +_FORMAT_ =PUT(DepVar, BEST.);
MPRINT(EM_DIAGRAM):   _FORMAT_ =PUT(DepVar, BEST.);
33488     +%DMNORMCP(_FORMAT_ , _TARGNOR_ );
MPRINT(DMNORMCP):   _TARGNOR_=dmnorm(_FORMAT_,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   F_DepVar=_TARGNOR_;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   * Create dummy variables for Marital_Status;
33489     +F_DepVar=_TARGNOR_;
MPRINT(EM_DIAGRAM):   ;
33490     +;
MPRINT(EM_DIAGRAM):   _FORMAT_ =PUT(Marital_Status,$8.0);
33491     +/************************************************/
33492     +* Create dummy variables for Marital_Status;
33493     +/************************************************/
33494     +;
33495     +_FORMAT_ =PUT(Marital_Status,$8.0);
MPRINT(DMNORMCP):   _NORMFMT_=dmnorm(_FORMAT_,
33496     +%DMNORMCP(_FORMAT_ , _NORMFMT_ );
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _NORMFMT_ ="DIVORCED" THEN Marital_Status_1_=2.98126168425242;
MPRINT(EM_DIAGRAM):   ELSE Marital_Status_1_=-0.33528716224019;
33497     +IF _NORMFMT_ ="DIVORCED" THEN Marital_Status_1_=2.98126168425242;
MPRINT(EM_DIAGRAM):   IF _NORMFMT_ ="MARRIED" THEN Marital_Status_2_=1.18621875805397;
33498     +/*---- (1-0.10109519797809)/0.30151824872338 -----*/
33499     +ELSE Marital_Status_1_=-0.33528716224019;
MPRINT(EM_DIAGRAM):   ELSE Marital_Status_2_=-0.84265972294036;
33500     +/*---- (0-0.10109519797809)/0.30151824872338 -----*/
33501     +IF _NORMFMT_ ="MARRIED" THEN Marital_Status_2_=1.18621875805397;
MPRINT(EM_DIAGRAM):   IF _NORMFMT_ ="SINGLE" THEN Marital_Status_3_=1.8948253753083;
33502     +/*---- (1-0.41533277169334)/0.49288314177885 -----*/
33503     +ELSE Marital_Status_2_=-0.84265972294036;
MPRINT(EM_DIAGRAM):   ELSE Marital_Status_3_=-0.52753081261949;
33504     +/*---- (0-0.41533277169334)/0.49288314177885 -----*/
33505     +IF _NORMFMT_ ="SINGLE" THEN Marital_Status_3_=1.8948253753083;
MPRINT(EM_DIAGRAM):   IF _NORMFMT_ ="TOGETHER" THEN Marital_Status_4_=1.80152761035906;
33506     +/*---- (1-0.21777590564448)/0.41282120481854 -----*/
33507     +ELSE Marital_Status_3_=-0.52753081261949;
MPRINT(EM_DIAGRAM):   ELSE Marital_Status_4_=-0.55485065244667;
33508     +/*---- (0-0.21777590564448)/0.41282120481854 -----*/
33509     +IF _NORMFMT_ ="TOGETHER" THEN Marital_Status_4_=1.80152761035906;
MPRINT(EM_DIAGRAM):   IF _NORMFMT_ ="WIDOW" THEN Marital_Status_5_=5.65320745801221;
33510     +/*---- (1-0.23546756529064)/0.42438008183342 -----*/
33511     +ELSE Marital_Status_4_=-0.55485065244667;
MPRINT(EM_DIAGRAM):   ELSE Marital_Status_5_=-0.17681621936441;
33512     +/*---- (0-0.23546756529064)/0.42438008183342 -----*/
33513     +IF _NORMFMT_ ="WIDOW" THEN Marital_Status_5_=5.65320745801221;
33514     +/*---- (1-0.03032855939342)/0.17152589000289 -----*/
MPRINT(EM_DIAGRAM):   DROP _FORMAT_ _NORMFMT_;
33515     +ELSE Marital_Status_5_=-0.17681621936441;
MPRINT(EM_DIAGRAM):   ;
33516     +/*---- (0-0.03032855939342)/0.17152589000289 -----*/
MPRINT(EM_DIAGRAM):   *Impute missing values for interval variables;
33517     +DROP
33518     +_FORMAT_ _NORMFMT_;
MPRINT(EM_DIAGRAM):   ;
33519     +;
MPRINT(EM_DIAGRAM):   if AcceptedCmpTotal=. then _S1_ACCEPTEDCMPTOTAL = 0;
33520     +/*-------------------------------------------------------------------------*/
33521     +*Impute missing values for interval variables;
MPRINT(EM_DIAGRAM):   else _S1_ACCEPTEDCMPTOTAL=(AcceptedCmpTotal-0.31255265374894)/0.66837726102124;
33522     +/*-------------------------------------------------------------------------*/
MPRINT(EM_DIAGRAM):   if Frq=. then _S2_FRQ = 0;
33523     +;
33524     +if AcceptedCmpTotal=. then _S1_ACCEPTEDCMPTOTAL = 0;
MPRINT(EM_DIAGRAM):   else _S2_FRQ=(Frq-12.6545914069081)/7.15980860291451;
33525     +else _S1_ACCEPTEDCMPTOTAL=(AcceptedCmpTotal-0.31255265374894)/0.66837726102124;
MPRINT(EM_DIAGRAM):   if Income=. then _S3_INCOME = 0;
33526     +if Frq=. then _S2_FRQ = 0;
MPRINT(EM_DIAGRAM):   else _S3_INCOME=(Income-51962.545914069)/20878.2658128313;
33527     +else _S2_FRQ=(Frq-12.6545914069081)/7.15980860291451;
MPRINT(EM_DIAGRAM):   if Mnt=. then _S4_MNT = 0;
33528     +if Income=. then _S3_INCOME = 0;
MPRINT(EM_DIAGRAM):   else _S4_MNT=(Mnt-615.68197135636)/604.537497355942;
33529     +else _S3_INCOME=(Income-51962.545914069)/20878.2658128313;
MPRINT(EM_DIAGRAM):   if MntGoldProds=. then _S5_MNTGOLDPRODS = 0;
33530     +if Mnt=. then _S4_MNT = 0;
MPRINT(EM_DIAGRAM):   else _S5_MNTGOLDPRODS=(MntGoldProds-44.0589721988205)/51.1646481009475;
33531     +else _S4_MNT=(Mnt-615.68197135636)/604.537497355942;
MPRINT(EM_DIAGRAM):   if MntMeatProducts=. then _S6_MNTMEATPRODUCTS = 0;
33532     +if MntGoldProds=. then _S5_MNTGOLDPRODS = 0;
MPRINT(EM_DIAGRAM):   else _S6_MNTMEATPRODUCTS=(MntMeatProducts-169.965037910699)/216.176716057929;
33533     +else _S5_MNTGOLDPRODS=(MntGoldProds-44.0589721988205)/51.1646481009475;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases=. then _S7_NUMCATALOGPURCHASES = 0;
33534     +if MntMeatProducts=. then _S6_MNTMEATPRODUCTS = 0;
MPRINT(EM_DIAGRAM):   else _S7_NUMCATALOGPURCHASES=(NumCatalogPurchases-2.64448188711036)/2.77214051734809;
33535     +else _S6_MNTMEATPRODUCTS=(MntMeatProducts-169.965037910699)/216.176716057929;
MPRINT(EM_DIAGRAM):   if NumDealsPurchases=. then _S8_NUMDEALSPURCHASES = 0;
33536     +if NumCatalogPurchases=. then _S7_NUMCATALOGPURCHASES = 0;
MPRINT(EM_DIAGRAM):   else _S8_NUMDEALSPURCHASES=(NumDealsPurchases-2.25526537489469)/1.67318269219337;
33537     +else _S7_NUMCATALOGPURCHASES=(NumCatalogPurchases-2.64448188711036)/2.77214051734809;
MPRINT(EM_DIAGRAM):   if NumWebVisitsMonth=. then _S9_NUMWEBVISITSMONTH = 0;
33538     +if NumDealsPurchases=. then _S8_NUMDEALSPURCHASES = 0;
MPRINT(EM_DIAGRAM):   else _S9_NUMWEBVISITSMONTH=(NumWebVisitsMonth-5.24220724515585)/2.33225525940929;
33539     +else _S8_NUMDEALSPURCHASES=(NumDealsPurchases-2.25526537489469)/1.67318269219337;
MPRINT(EM_DIAGRAM):   if RFMstat=. then _S10_RFMSTAT = 0;
33540     +if NumWebVisitsMonth=. then _S9_NUMWEBVISITSMONTH = 0;
MPRINT(EM_DIAGRAM):   else _S10_RFMSTAT=(RFMstat-531.396946202505)/1565.49314871989;
33541     +else _S9_NUMWEBVISITSMONTH=(NumWebVisitsMonth-5.24220724515585)/2.33225525940929;
MPRINT(EM_DIAGRAM):   if Recency=. then _S11_RECENCY = 0;
33542     +if RFMstat=. then _S10_RFMSTAT = 0;
MPRINT(EM_DIAGRAM):   else _S11_RECENCY=(Recency-48.7742207245156)/28.8224799181808;
33543     +else _S10_RFMSTAT=(RFMstat-531.396946202505)/1565.49314871989;
MPRINT(EM_DIAGRAM):   if Teenhome=. then _S12_TEENHOME = 0;
33544     +if Recency=. then _S11_RECENCY = 0;
MPRINT(EM_DIAGRAM):   else _S12_TEENHOME=(Teenhome-0.48652064026958)/0.55047336656954;
33545     +else _S11_RECENCY=(Recency-48.7742207245156)/28.8224799181808;
MPRINT(EM_DIAGRAM):   if Year_Birth=. then _S13_YEAR_BIRTH = 0;
33546     +if Teenhome=. then _S12_TEENHOME = 0;
MPRINT(EM_DIAGRAM):   else _S13_YEAR_BIRTH=(Year_Birth-1968.79401853412)/12.063294849345;
33547     +else _S12_TEENHOME=(Teenhome-0.48652064026958)/0.55047336656954;
MPRINT(EM_DIAGRAM):   ;
33548     +if Year_Birth=. then _S13_YEAR_BIRTH = 0;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 0;
33549     +else _S13_YEAR_BIRTH=(Year_Birth-1968.79401853412)/12.063294849345;
MPRINT(EM_DIAGRAM):   ;
33550     +;
33551     +/*----------------------------------------------*/
33552     +* Component 1 at stage 0;
33553     +/*----------------------------------------------*/
33554     +;
33555     +_SPRIN01=
33556     +-0.008493382*Marital_Status_1_+
33557     +-0.011188081*Marital_Status_2_+
33558     +0.0016309879*Marital_Status_3_+
33559     +0.0067450524*Marital_Status_4_+
33560     +0.0264657057*Marital_Status_5_+
33561     +0.2193918461*_S1_ACCEPTEDCMPTOTAL+
33562     +0.3773554763*_S2_FRQ+
33563     +0.3893349243*_S3_INCOME+
33564     +0.4090071576*_S4_MNT+
33565     +0.2396116109*_S5_MNTGOLDPRODS+
33566     +0.3759667232*_S6_MNTMEATPRODUCTS+
33567     +0.3869383929*_S7_NUMCATALOGPURCHASES+
33568     +-0.093319147*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN01= -0.008493382*Marital_Status_1_+ -0.011188081*Marital_Status_2_+ 0.0016309879*Marital_Status_3_+ 0.0067450524*Marital_Status_4_+ 0.0264657057*Marital_Status_5_+ 0.2193918461*_S1_ACCEPTEDCMPTOTAL+ 0.3773554763*_S2_FRQ+
0.3893349243*_S3_INCOME+ 0.4090071576*_S4_MNT+ 0.2396116109*_S5_MNTGOLDPRODS+ 0.3759667232*_S6_MNTMEATPRODUCTS+ 0.3869383929*_S7_NUMCATALOGPURCHASES+ -0.093319147*_S8_NUMDEALSPURCHASES+ -0.290294871*_S9_NUMWEBVISITSMONTH+ 0.1924005307*_S10_RFMSTAT+
-0.012253394*_S11_RECENCY+ -0.083331603*_S12_TEENHOME+ -0.063857354*_S13_YEAR_BIRTH;
33569     +-0.290294871*_S9_NUMWEBVISITSMONTH+
33570     +0.1924005307*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 0;
33571     +-0.012253394*_S11_RECENCY+
33572     +-0.083331603*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
33573     +-0.063857354*_S13_YEAR_BIRTH;
33574     +/*----------------------------------------------*/
33575     +* Component 2 at stage 0;
33576     +/*----------------------------------------------*/
33577     +;
33578     +_SPRIN02=
33579     +0.0698121964*Marital_Status_1_+
33580     +-0.071196228*Marital_Status_2_+
33581     +-0.215004244*Marital_Status_3_+
33582     +-0.007122854*Marital_Status_4_+
33583     +0.6169498832*Marital_Status_5_+
33584     +0.4368245541*_S1_ACCEPTEDCMPTOTAL+
33585     +0.0038078896*_S2_FRQ+
33586     +-0.158979071*_S3_INCOME+
33587     +0.0387829548*_S4_MNT+
33588     +0.224457403*_S5_MNTGOLDPRODS+
33589     +-0.044166316*_S6_MNTMEATPRODUCTS+
33590     +0.0022209443*_S7_NUMCATALOGPURCHASES+
33591     +0.1176239081*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN02= 0.0698121964*Marital_Status_1_+ -0.071196228*Marital_Status_2_+ -0.215004244*Marital_Status_3_+ -0.007122854*Marital_Status_4_+ 0.6169498832*Marital_Status_5_+ 0.4368245541*_S1_ACCEPTEDCMPTOTAL+ 0.0038078896*_S2_FRQ+
-0.158979071*_S3_INCOME+ 0.0387829548*_S4_MNT+ 0.224457403*_S5_MNTGOLDPRODS+ -0.044166316*_S6_MNTMEATPRODUCTS+ 0.0022209443*_S7_NUMCATALOGPURCHASES+ 0.1176239081*_S8_NUMDEALSPURCHASES+ 0.3801731715*_S9_NUMWEBVISITSMONTH+ 0.0193880887*_S10_RFMSTAT+
0.0078912704*_S11_RECENCY+ -0.304271031*_S12_TEENHOME+ 0.2045023374*_S13_YEAR_BIRTH;
33592     +0.3801731715*_S9_NUMWEBVISITSMONTH+
33593     +0.0193880887*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 0;
33594     +0.0078912704*_S11_RECENCY+
33595     +-0.304271031*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
33596     +0.2045023374*_S13_YEAR_BIRTH;
33597     +/*----------------------------------------------*/
33598     +* Component 3 at stage 0;
33599     +/*----------------------------------------------*/
33600     +;
33601     +_SPRIN03=
33602     +0.0847544074*Marital_Status_1_+
33603     +-0.022731964*Marital_Status_2_+
33604     +0.1026293136*Marital_Status_3_+
33605     +-0.067964125*Marital_Status_4_+
33606     +-0.162516194*Marital_Status_5_+
33607     +0.0772952533*_S1_ACCEPTEDCMPTOTAL+
33608     +0.0529204204*_S2_FRQ+
33609     +0.0187837867*_S3_INCOME+
33610     +0.048516842*_S4_MNT+
33611     +0.145761789*_S5_MNTGOLDPRODS+
33612     +0.0234836338*_S6_MNTMEATPRODUCTS+
33613     +0.0624697914*_S7_NUMCATALOGPURCHASES+
33614     +0.0258524959*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN03= 0.0847544074*Marital_Status_1_+ -0.022731964*Marital_Status_2_+ 0.1026293136*Marital_Status_3_+ -0.067964125*Marital_Status_4_+ -0.162516194*Marital_Status_5_+ 0.0772952533*_S1_ACCEPTEDCMPTOTAL+ 0.0529204204*_S2_FRQ+
0.0187837867*_S3_INCOME+ 0.048516842*_S4_MNT+ 0.145761789*_S5_MNTGOLDPRODS+ 0.0234836338*_S6_MNTMEATPRODUCTS+ 0.0624697914*_S7_NUMCATALOGPURCHASES+ 0.0258524959*_S8_NUMDEALSPURCHASES+ 0.0026131748*_S9_NUMWEBVISITSMONTH+ -0.568524094*_S10_RFMSTAT+
0.7487975026*_S11_RECENCY+ -0.059497878*_S12_TEENHOME+ 0.1594418909*_S13_YEAR_BIRTH;
33615     +0.0026131748*_S9_NUMWEBVISITSMONTH+
33616     +-0.568524094*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 4 at stage 0;
33617     +0.7487975026*_S11_RECENCY+
33618     +-0.059497878*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
33619     +0.1594418909*_S13_YEAR_BIRTH;
33620     +/*----------------------------------------------*/
33621     +* Component 4 at stage 0;
33622     +/*----------------------------------------------*/
33623     +;
33624     +_SPRIN04=
33625     +-0.05935653*Marital_Status_1_+
33626     +-0.032851354*Marital_Status_2_+
33627     +0.6701503133*Marital_Status_3_+
33628     +-0.533967645*Marital_Status_4_+
33629     +-0.093035935*Marital_Status_5_+
33630     +0.0427953086*_S1_ACCEPTEDCMPTOTAL+
33631     +0.0760580738*_S2_FRQ+
33632     +-0.040927706*_S3_INCOME+
33633     +0.0321133035*_S4_MNT+
33634     +0.1825666886*_S5_MNTGOLDPRODS+
33635     +-0.029779653*_S6_MNTMEATPRODUCTS+
33636     +0.0256989779*_S7_NUMCATALOGPURCHASES+
33637     +0.2880147854*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN04= -0.05935653*Marital_Status_1_+ -0.032851354*Marital_Status_2_+ 0.6701503133*Marital_Status_3_+ -0.533967645*Marital_Status_4_+ -0.093035935*Marital_Status_5_+ 0.0427953086*_S1_ACCEPTEDCMPTOTAL+ 0.0760580738*_S2_FRQ+
-0.040927706*_S3_INCOME+ 0.0321133035*_S4_MNT+ 0.1825666886*_S5_MNTGOLDPRODS+ -0.029779653*_S6_MNTMEATPRODUCTS+ 0.0256989779*_S7_NUMCATALOGPURCHASES+ 0.2880147854*_S8_NUMDEALSPURCHASES+ 0.1929364069*_S9_NUMWEBVISITSMONTH+ 0.1355032466*_S10_RFMSTAT+
-0.148578649*_S11_RECENCY+ 0.066769607*_S12_TEENHOME+ 0.2055398914*_S13_YEAR_BIRTH;
33638     +0.1929364069*_S9_NUMWEBVISITSMONTH+
33639     +0.1355032466*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 5 at stage 0;
33640     +-0.148578649*_S11_RECENCY+
33641     +0.066769607*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
33642     +0.2055398914*_S13_YEAR_BIRTH;
33643     +/*----------------------------------------------*/
33644     +* Component 5 at stage 0;
33645     +/*----------------------------------------------*/
33646     +;
33647     +_SPRIN05=
33648     +0.10761459*Marital_Status_1_+
33649     +0.0028979951*Marital_Status_2_+
33650     +-0.15064667*Marital_Status_3_+
33651     +-0.043533602*Marital_Status_4_+
33652     +0.272779799*Marital_Status_5_+
33653     +-0.796500815*_S1_ACCEPTEDCMPTOTAL+
33654     +0.0948384767*_S2_FRQ+
33655     +-0.024901753*_S3_INCOME+
33656     +0.036811217*_S4_MNT+
33657     +0.2470337929*_S5_MNTGOLDPRODS+
33658     +0.1168111721*_S6_MNTMEATPRODUCTS+
33659     +0.0697126712*_S7_NUMCATALOGPURCHASES+
33660     +0.171968035*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN05= 0.10761459*Marital_Status_1_+ 0.0028979951*Marital_Status_2_+ -0.15064667*Marital_Status_3_+ -0.043533602*Marital_Status_4_+ 0.272779799*Marital_Status_5_+ -0.796500815*_S1_ACCEPTEDCMPTOTAL+ 0.0948384767*_S2_FRQ+
-0.024901753*_S3_INCOME+ 0.036811217*_S4_MNT+ 0.2470337929*_S5_MNTGOLDPRODS+ 0.1168111721*_S6_MNTMEATPRODUCTS+ 0.0697126712*_S7_NUMCATALOGPURCHASES+ 0.171968035*_S8_NUMDEALSPURCHASES+ -0.102108299*_S9_NUMWEBVISITSMONTH+ -0.022671576*_S10_RFMSTAT+
-0.022630633*_S11_RECENCY+ -0.113962381*_S12_TEENHOME+ 0.3323945855*_S13_YEAR_BIRTH;
33661     +-0.102108299*_S9_NUMWEBVISITSMONTH+
33662     +-0.022671576*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 6 at stage 0;
33663     +-0.022630633*_S11_RECENCY+
33664     +-0.113962381*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
33665     +0.3323945855*_S13_YEAR_BIRTH;
33666     +/*----------------------------------------------*/
33667     +* Component 6 at stage 0;
33668     +/*----------------------------------------------*/
33669     +;
33670     +_SPRIN06=
33671     +-0.000232895*Marital_Status_1_+
33672     +-0.004880779*Marital_Status_2_+
33673     +0.0006083294*Marital_Status_3_+
33674     +0.0082855013*Marital_Status_4_+
33675     +-0.007529226*Marital_Status_5_+
33676     +-0.066896457*_S1_ACCEPTEDCMPTOTAL+
33677     +-0.584544523*_S2_FRQ+
33678     +0.6315682517*_S3_INCOME+
33679     +-0.173384958*_S4_MNT+
33680     +0.0199300933*_S5_MNTGOLDPRODS+
33681     +-0.065996201*_S6_MNTMEATPRODUCTS+
33682     +0.3742607477*_S7_NUMCATALOGPURCHASES+
33683     +0.1066403357*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN06= -0.000232895*Marital_Status_1_+ -0.004880779*Marital_Status_2_+ 0.0006083294*Marital_Status_3_+ 0.0082855013*Marital_Status_4_+ -0.007529226*Marital_Status_5_+ -0.066896457*_S1_ACCEPTEDCMPTOTAL+ -0.584544523*_S2_FRQ+
0.6315682517*_S3_INCOME+ -0.173384958*_S4_MNT+ 0.0199300933*_S5_MNTGOLDPRODS+ -0.065996201*_S6_MNTMEATPRODUCTS+ 0.3742607477*_S7_NUMCATALOGPURCHASES+ 0.1066403357*_S8_NUMDEALSPURCHASES+ 0.2338771409*_S9_NUMWEBVISITSMONTH+ 0.0170511776*_S10_RFMSTAT+
0.0109890941*_S11_RECENCY+ -0.115442279*_S12_TEENHOME+ -0.010452951*_S13_YEAR_BIRTH;
33684     +0.2338771409*_S9_NUMWEBVISITSMONTH+
MPRINT(EM_DIAGRAM):   ;
33685     +0.0170511776*_S10_RFMSTAT+
33686     +0.0109890941*_S11_RECENCY+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 1;
33687     +-0.115442279*_S12_TEENHOME+
33688     +-0.010452951*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   ;
33689     +;
33690     +/*----------------------------------------------*/
33691     +* Component 1 at stage 1;
33692     +/*----------------------------------------------*/
33693     +;
33694     +_SPRIN11=
33695     +0.0093097628*Marital_Status_1_+
33696     +-0.007357611*Marital_Status_2_+
33697     +0.004161881*Marital_Status_3_+
33698     +-0.003334178*Marital_Status_4_+
33699     +0.0030096039*Marital_Status_5_+
33700     +0.0609654599*_S1_ACCEPTEDCMPTOTAL+
33701     +0.2916437296*_S2_FRQ+
33702     +0.1154801729*_S3_INCOME+
33703     +-0.805526511*_S4_MNT+
33704     +0.0844981983*_S5_MNTGOLDPRODS+
33705     +0.4796242204*_S6_MNTMEATPRODUCTS+
33706     +-0.062347745*_S7_NUMCATALOGPURCHASES+
33707     +-0.031857708*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN11= 0.0093097628*Marital_Status_1_+ -0.007357611*Marital_Status_2_+ 0.004161881*Marital_Status_3_+ -0.003334178*Marital_Status_4_+ 0.0030096039*Marital_Status_5_+ 0.0609654599*_S1_ACCEPTEDCMPTOTAL+ 0.2916437296*_S2_FRQ+
0.1154801729*_S3_INCOME+ -0.805526511*_S4_MNT+ 0.0844981983*_S5_MNTGOLDPRODS+ 0.4796242204*_S6_MNTMEATPRODUCTS+ -0.062347745*_S7_NUMCATALOGPURCHASES+ -0.031857708*_S8_NUMDEALSPURCHASES+ 0.0774997018*_S9_NUMWEBVISITSMONTH+ 0.0158091776*_S10_RFMSTAT+
0.0115610406*_S11_RECENCY+ 0.000437064*_S12_TEENHOME+ -0.019202585*_S13_YEAR_BIRTH;
33708     +0.0774997018*_S9_NUMWEBVISITSMONTH+
33709     +0.0158091776*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 1;
33710     +0.0115610406*_S11_RECENCY+
33711     +0.000437064*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
33712     +-0.019202585*_S13_YEAR_BIRTH;
33713     +/*----------------------------------------------*/
33714     +* Component 2 at stage 1;
33715     +/*----------------------------------------------*/
33716     +;
33717     +_SPRIN12=
33718     +-0.015105189*Marital_Status_1_+
33719     +0.0118862269*Marital_Status_2_+
33720     +-0.011343113*Marital_Status_3_+
33721     +0.0045776631*Marital_Status_4_+
33722     +0.0083717862*Marital_Status_5_+
33723     +0.0497052612*_S1_ACCEPTEDCMPTOTAL+
33724     +-0.32469371*_S2_FRQ+
33725     +-0.570505038*_S3_INCOME+
33726     +-0.051638052*_S4_MNT+
33727     +-0.000179679*_S5_MNTGOLDPRODS+
33728     +0.3305454324*_S6_MNTMEATPRODUCTS+
33729     +0.6167274273*_S7_NUMCATALOGPURCHASES+
33730     +-0.009076585*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN12= -0.015105189*Marital_Status_1_+ 0.0118862269*Marital_Status_2_+ -0.011343113*Marital_Status_3_+ 0.0045776631*Marital_Status_4_+ 0.0083717862*Marital_Status_5_+ 0.0497052612*_S1_ACCEPTEDCMPTOTAL+ -0.32469371*_S2_FRQ+
-0.570505038*_S3_INCOME+ -0.051638052*_S4_MNT+ -0.000179679*_S5_MNTGOLDPRODS+ 0.3305454324*_S6_MNTMEATPRODUCTS+ 0.6167274273*_S7_NUMCATALOGPURCHASES+ -0.009076585*_S8_NUMDEALSPURCHASES+ -0.05161006*_S9_NUMWEBVISITSMONTH+ -0.009614781*_S10_RFMSTAT+
-0.006477144*_S11_RECENCY+ 0.2662240883*_S12_TEENHOME+ 0.0017486593*_S13_YEAR_BIRTH;
33731     +-0.05161006*_S9_NUMWEBVISITSMONTH+
33732     +-0.009614781*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 1;
33733     +-0.006477144*_S11_RECENCY+
33734     +0.2662240883*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
33735     +0.0017486593*_S13_YEAR_BIRTH;
33736     +/*----------------------------------------------*/
33737     +* Component 3 at stage 1;
33738     +/*----------------------------------------------*/
33739     +;
33740     +_SPRIN13=
33741     +0.7201014863*Marital_Status_1_+
33742     +-0.039414952*Marital_Status_2_+
33743     +-0.261027185*Marital_Status_3_+
33744     +-0.002570027*Marital_Status_4_+
33745     +-0.517989138*Marital_Status_5_+
33746     +0.1032358936*_S1_ACCEPTEDCMPTOTAL+
33747     +0.0293938239*_S2_FRQ+
33748     +-0.060123348*_S3_INCOME+
33749     +0.0306908632*_S4_MNT+
33750     +0.0931751568*_S5_MNTGOLDPRODS+
33751     +0.0016465853*_S6_MNTMEATPRODUCTS+
33752     +0.0174804568*_S7_NUMCATALOGPURCHASES+
33753     +0.1233541944*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN13= 0.7201014863*Marital_Status_1_+ -0.039414952*Marital_Status_2_+ -0.261027185*Marital_Status_3_+ -0.002570027*Marital_Status_4_+ -0.517989138*Marital_Status_5_+ 0.1032358936*_S1_ACCEPTEDCMPTOTAL+ 0.0293938239*_S2_FRQ+
-0.060123348*_S3_INCOME+ 0.0306908632*_S4_MNT+ 0.0931751568*_S5_MNTGOLDPRODS+ 0.0016465853*_S6_MNTMEATPRODUCTS+ 0.0174804568*_S7_NUMCATALOGPURCHASES+ 0.1233541944*_S8_NUMDEALSPURCHASES+ 0.1518084321*_S9_NUMWEBVISITSMONTH+ 0.1449751106*_S10_RFMSTAT+
-0.133344887*_S11_RECENCY+ -0.066595833*_S12_TEENHOME+ 0.1920463047*_S13_YEAR_BIRTH;
33754     +0.1518084321*_S9_NUMWEBVISITSMONTH+
33755     +0.1449751106*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 4 at stage 1;
33756     +-0.133344887*_S11_RECENCY+
33757     +-0.066595833*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
33758     +0.1920463047*_S13_YEAR_BIRTH;
33759     +/*----------------------------------------------*/
33760     +* Component 4 at stage 1;
33761     +/*----------------------------------------------*/
33762     +;
33763     +_SPRIN14=
33764     +-0.028442983*Marital_Status_1_+
33765     +0.0140975391*Marital_Status_2_+
33766     +0.0577022767*Marital_Status_3_+
33767     +-0.012976764*Marital_Status_4_+
33768     +-0.097279799*Marital_Status_5_+
33769     +-0.217622847*_S1_ACCEPTEDCMPTOTAL+
33770     +-0.036465716*_S2_FRQ+
33771     +-0.193573793*_S3_INCOME+
33772     +0.0437226825*_S4_MNT+
33773     +0.1533854572*_S5_MNTGOLDPRODS+
33774     +0.0429013274*_S6_MNTMEATPRODUCTS+
33775     +-0.035369721*_S7_NUMCATALOGPURCHASES+
33776     +-0.091546766*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN14= -0.028442983*Marital_Status_1_+ 0.0140975391*Marital_Status_2_+ 0.0577022767*Marital_Status_3_+ -0.012976764*Marital_Status_4_+ -0.097279799*Marital_Status_5_+ -0.217622847*_S1_ACCEPTEDCMPTOTAL+ -0.036465716*_S2_FRQ+
-0.193573793*_S3_INCOME+ 0.0437226825*_S4_MNT+ 0.1533854572*_S5_MNTGOLDPRODS+ 0.0429013274*_S6_MNTMEATPRODUCTS+ -0.035369721*_S7_NUMCATALOGPURCHASES+ -0.091546766*_S8_NUMDEALSPURCHASES+ 0.269932798*_S9_NUMWEBVISITSMONTH+ 0.5456202875*_S10_RFMSTAT+
0.4592194915*_S11_RECENCY+ -0.294927889*_S12_TEENHOME+ -0.441054809*_S13_YEAR_BIRTH;
33777     +0.269932798*_S9_NUMWEBVISITSMONTH+
33778     +0.5456202875*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 5 at stage 1;
33779     +0.4592194915*_S11_RECENCY+
33780     +-0.294927889*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
33781     +-0.441054809*_S13_YEAR_BIRTH;
33782     +/*----------------------------------------------*/
33783     +* Component 5 at stage 1;
33784     +/*----------------------------------------------*/
33785     +;
33786     +_SPRIN15=
33787     +-0.529759999*Marital_Status_1_+
33788     +0.0929641115*Marital_Status_2_+
33789     +-0.091427311*Marital_Status_3_+
33790     +0.5040179245*Marital_Status_4_+
33791     +-0.362861674*Marital_Status_5_+
33792     +0.0348823878*_S1_ACCEPTEDCMPTOTAL+
33793     +0.1133790974*_S2_FRQ+
33794     +-0.046925784*_S3_INCOME+
33795     +0.041087743*_S4_MNT+
33796     +0.2145202702*_S5_MNTGOLDPRODS+
33797     +-0.013889744*_S6_MNTMEATPRODUCTS+
33798     +0.0241896601*_S7_NUMCATALOGPURCHASES+
33799     +0.3401453099*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN15= -0.529759999*Marital_Status_1_+ 0.0929641115*Marital_Status_2_+ -0.091427311*Marital_Status_3_+ 0.5040179245*Marital_Status_4_+ -0.362861674*Marital_Status_5_+ 0.0348823878*_S1_ACCEPTEDCMPTOTAL+ 0.1133790974*_S2_FRQ+
-0.046925784*_S3_INCOME+ 0.041087743*_S4_MNT+ 0.2145202702*_S5_MNTGOLDPRODS+ -0.013889744*_S6_MNTMEATPRODUCTS+ 0.0241896601*_S7_NUMCATALOGPURCHASES+ 0.3401453099*_S8_NUMDEALSPURCHASES+ 0.2250315176*_S9_NUMWEBVISITSMONTH+ 0.0766337761*_S10_RFMSTAT+
-0.026511866*_S11_RECENCY+ 0.020673873*_S12_TEENHOME+ 0.2802686549*_S13_YEAR_BIRTH;
33800     +0.2250315176*_S9_NUMWEBVISITSMONTH+
33801     +0.0766337761*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 6 at stage 1;
33802     +-0.026511866*_S11_RECENCY+
33803     +0.020673873*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
33804     +0.2802686549*_S13_YEAR_BIRTH;
33805     +/*----------------------------------------------*/
33806     +* Component 6 at stage 1;
33807     +/*----------------------------------------------*/
33808     +;
33809     +_SPRIN16=
33810     +0.0062762631*Marital_Status_1_+
33811     +-0.010875887*Marital_Status_2_+
33812     +-0.001735199*Marital_Status_3_+
33813     +0.003215339*Marital_Status_4_+
33814     +0.0164402875*Marital_Status_5_+
33815     +0.0819675329*_S1_ACCEPTEDCMPTOTAL+
33816     +-0.462873318*_S2_FRQ+
33817     +0.0469918013*_S3_INCOME+
33818     +0.2304506395*_S4_MNT+
33819     +0.0977211562*_S5_MNTGOLDPRODS+
33820     +0.5904759878*_S6_MNTMEATPRODUCTS+
33821     +-0.545547887*_S7_NUMCATALOGPURCHASES+
33822     +0.2139463159*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN16= 0.0062762631*Marital_Status_1_+ -0.010875887*Marital_Status_2_+ -0.001735199*Marital_Status_3_+ 0.003215339*Marital_Status_4_+ 0.0164402875*Marital_Status_5_+ 0.0819675329*_S1_ACCEPTEDCMPTOTAL+ -0.462873318*_S2_FRQ+
0.0469918013*_S3_INCOME+ 0.2304506395*_S4_MNT+ 0.0977211562*_S5_MNTGOLDPRODS+ 0.5904759878*_S6_MNTMEATPRODUCTS+ -0.545547887*_S7_NUMCATALOGPURCHASES+ 0.2139463159*_S8_NUMDEALSPURCHASES+ -0.117021636*_S9_NUMWEBVISITSMONTH+ 0.0161900995*_S10_RFMSTAT+
0.028974563*_S11_RECENCY+ 0.0823235285*_S12_TEENHOME+ 0.0096368551*_S13_YEAR_BIRTH;
33823     +-0.117021636*_S9_NUMWEBVISITSMONTH+
MPRINT(EM_DIAGRAM):   ;
33824     +0.0161900995*_S10_RFMSTAT+
33825     +0.028974563*_S11_RECENCY+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 2;
33826     +0.0823235285*_S12_TEENHOME+
33827     +0.0096368551*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   ;
33828     +;
33829     +/*----------------------------------------------*/
33830     +* Component 1 at stage 2;
33831     +/*----------------------------------------------*/
33832     +;
33833     +_SPRIN21=
33834     +0.0259027139*Marital_Status_1_+
33835     +-0.023219643*Marital_Status_2_+
33836     +-0.048071754*Marital_Status_3_+
33837     +0.0104245904*Marital_Status_4_+
33838     +0.111093904*Marital_Status_5_+
33839     +0.1029306769*_S1_ACCEPTEDCMPTOTAL+
33840     +-0.104590704*_S2_FRQ+
33841     +0.0992739498*_S3_INCOME+
33842     +-0.126525705*_S4_MNT+
33843     +0.1755348321*_S5_MNTGOLDPRODS+
33844     +-0.219398621*_S6_MNTMEATPRODUCTS+
33845     +-0.086592319*_S7_NUMCATALOGPURCHASES+
33846     +-0.25424186*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN21= 0.0259027139*Marital_Status_1_+ -0.023219643*Marital_Status_2_+ -0.048071754*Marital_Status_3_+ 0.0104245904*Marital_Status_4_+ 0.111093904*Marital_Status_5_+ 0.1029306769*_S1_ACCEPTEDCMPTOTAL+ -0.104590704*_S2_FRQ+
0.0992739498*_S3_INCOME+ -0.126525705*_S4_MNT+ 0.1755348321*_S5_MNTGOLDPRODS+ -0.219398621*_S6_MNTMEATPRODUCTS+ -0.086592319*_S7_NUMCATALOGPURCHASES+ -0.25424186*_S8_NUMDEALSPURCHASES+ -0.203846899*_S9_NUMWEBVISITSMONTH+ 0.4677013509*_S10_RFMSTAT+
0.3215691362*_S11_RECENCY+ 0.4850182787*_S12_TEENHOME+ 0.431969361*_S13_YEAR_BIRTH;
33847     +-0.203846899*_S9_NUMWEBVISITSMONTH+
33848     +0.4677013509*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 2;
33849     +0.3215691362*_S11_RECENCY+
33850     +0.4850182787*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
33851     +0.431969361*_S13_YEAR_BIRTH;
33852     +/*----------------------------------------------*/
33853     +* Component 2 at stage 2;
33854     +/*----------------------------------------------*/
33855     +;
33856     +_SPRIN22=
33857     +0.0093097628*Marital_Status_1_+
33858     +-0.007357611*Marital_Status_2_+
33859     +0.004161881*Marital_Status_3_+
33860     +-0.003334178*Marital_Status_4_+
33861     +0.0030096039*Marital_Status_5_+
33862     +0.0609654599*_S1_ACCEPTEDCMPTOTAL+
33863     +0.2916437296*_S2_FRQ+
33864     +0.1154801729*_S3_INCOME+
33865     +-0.805526511*_S4_MNT+
33866     +0.0844981983*_S5_MNTGOLDPRODS+
33867     +0.4796242204*_S6_MNTMEATPRODUCTS+
33868     +-0.062347745*_S7_NUMCATALOGPURCHASES+
33869     +-0.031857708*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN22= 0.0093097628*Marital_Status_1_+ -0.007357611*Marital_Status_2_+ 0.004161881*Marital_Status_3_+ -0.003334178*Marital_Status_4_+ 0.0030096039*Marital_Status_5_+ 0.0609654599*_S1_ACCEPTEDCMPTOTAL+ 0.2916437296*_S2_FRQ+
0.1154801729*_S3_INCOME+ -0.805526511*_S4_MNT+ 0.0844981983*_S5_MNTGOLDPRODS+ 0.4796242204*_S6_MNTMEATPRODUCTS+ -0.062347745*_S7_NUMCATALOGPURCHASES+ -0.031857708*_S8_NUMDEALSPURCHASES+ 0.0774997018*_S9_NUMWEBVISITSMONTH+ 0.0158091776*_S10_RFMSTAT+
0.0115610406*_S11_RECENCY+ 0.000437064*_S12_TEENHOME+ -0.019202585*_S13_YEAR_BIRTH;
33870     +0.0774997018*_S9_NUMWEBVISITSMONTH+
33871     +0.0158091776*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 2;
33872     +0.0115610406*_S11_RECENCY+
33873     +0.000437064*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
33874     +-0.019202585*_S13_YEAR_BIRTH;
33875     +/*----------------------------------------------*/
33876     +* Component 3 at stage 2;
33877     +/*----------------------------------------------*/
33878     +;
33879     +_SPRIN23=
33880     +-0.015105189*Marital_Status_1_+
33881     +0.0118862269*Marital_Status_2_+
33882     +-0.011343113*Marital_Status_3_+
33883     +0.0045776631*Marital_Status_4_+
33884     +0.0083717862*Marital_Status_5_+
33885     +0.0497052612*_S1_ACCEPTEDCMPTOTAL+
33886     +-0.32469371*_S2_FRQ+
33887     +-0.570505038*_S3_INCOME+
33888     +-0.051638052*_S4_MNT+
33889     +-0.000179679*_S5_MNTGOLDPRODS+
33890     +0.3305454324*_S6_MNTMEATPRODUCTS+
33891     +0.6167274273*_S7_NUMCATALOGPURCHASES+
33892     +-0.009076585*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN23= -0.015105189*Marital_Status_1_+ 0.0118862269*Marital_Status_2_+ -0.011343113*Marital_Status_3_+ 0.0045776631*Marital_Status_4_+ 0.0083717862*Marital_Status_5_+ 0.0497052612*_S1_ACCEPTEDCMPTOTAL+ -0.32469371*_S2_FRQ+
-0.570505038*_S3_INCOME+ -0.051638052*_S4_MNT+ -0.000179679*_S5_MNTGOLDPRODS+ 0.3305454324*_S6_MNTMEATPRODUCTS+ 0.6167274273*_S7_NUMCATALOGPURCHASES+ -0.009076585*_S8_NUMDEALSPURCHASES+ -0.05161006*_S9_NUMWEBVISITSMONTH+ -0.009614781*_S10_RFMSTAT+
-0.006477144*_S11_RECENCY+ 0.2662240883*_S12_TEENHOME+ 0.0017486593*_S13_YEAR_BIRTH;
33893     +-0.05161006*_S9_NUMWEBVISITSMONTH+
33894     +-0.009614781*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 4 at stage 2;
33895     +-0.006477144*_S11_RECENCY+
33896     +0.2662240883*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
33897     +0.0017486593*_S13_YEAR_BIRTH;
33898     +/*----------------------------------------------*/
33899     +* Component 4 at stage 2;
33900     +/*----------------------------------------------*/
33901     +;
33902     +_SPRIN24=
33903     +0.0251132215*Marital_Status_1_+
33904     +-0.025395883*Marital_Status_2_+
33905     +-0.017975806*Marital_Status_3_+
33906     +-0.010924123*Marital_Status_4_+
33907     +0.0991213763*Marital_Status_5_+
33908     +0.001222243*_S1_ACCEPTEDCMPTOTAL+
33909     +0.1550412507*_S2_FRQ+
33910     +0.0627898484*_S3_INCOME+
33911     +0.0644523337*_S4_MNT+
33912     +-0.783639627*_S5_MNTGOLDPRODS+
33913     +0.1567513421*_S6_MNTMEATPRODUCTS+
33914     +0.0854886204*_S7_NUMCATALOGPURCHASES+
33915     +0.3566620158*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN24= 0.0251132215*Marital_Status_1_+ -0.025395883*Marital_Status_2_+ -0.017975806*Marital_Status_3_+ -0.010924123*Marital_Status_4_+ 0.0991213763*Marital_Status_5_+ 0.001222243*_S1_ACCEPTEDCMPTOTAL+ 0.1550412507*_S2_FRQ+
0.0627898484*_S3_INCOME+ 0.0644523337*_S4_MNT+ -0.783639627*_S5_MNTGOLDPRODS+ 0.1567513421*_S6_MNTMEATPRODUCTS+ 0.0854886204*_S7_NUMCATALOGPURCHASES+ 0.3566620158*_S8_NUMDEALSPURCHASES+ 0.0492555841*_S9_NUMWEBVISITSMONTH+ 0.243420967*_S10_RFMSTAT+
0.2657921379*_S11_RECENCY+ -0.022914665*_S12_TEENHOME+ 0.2242595425*_S13_YEAR_BIRTH;
33916     +0.0492555841*_S9_NUMWEBVISITSMONTH+
33917     +0.243420967*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 5 at stage 2;
33918     +0.2657921379*_S11_RECENCY+
33919     +-0.022914665*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
33920     +0.2242595425*_S13_YEAR_BIRTH;
33921     +/*----------------------------------------------*/
33922     +* Component 5 at stage 2;
33923     +/*----------------------------------------------*/
33924     +;
33925     +_SPRIN25=
33926     +-0.05935653*Marital_Status_1_+
33927     +-0.032851354*Marital_Status_2_+
33928     +0.6701503133*Marital_Status_3_+
33929     +-0.533967645*Marital_Status_4_+
33930     +-0.093035935*Marital_Status_5_+
33931     +0.0427953086*_S1_ACCEPTEDCMPTOTAL+
33932     +0.0760580738*_S2_FRQ+
33933     +-0.040927706*_S3_INCOME+
33934     +0.0321133035*_S4_MNT+
33935     +0.1825666886*_S5_MNTGOLDPRODS+
33936     +-0.029779653*_S6_MNTMEATPRODUCTS+
33937     +0.0256989779*_S7_NUMCATALOGPURCHASES+
33938     +0.2880147854*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN25= -0.05935653*Marital_Status_1_+ -0.032851354*Marital_Status_2_+ 0.6701503133*Marital_Status_3_+ -0.533967645*Marital_Status_4_+ -0.093035935*Marital_Status_5_+ 0.0427953086*_S1_ACCEPTEDCMPTOTAL+ 0.0760580738*_S2_FRQ+
-0.040927706*_S3_INCOME+ 0.0321133035*_S4_MNT+ 0.1825666886*_S5_MNTGOLDPRODS+ -0.029779653*_S6_MNTMEATPRODUCTS+ 0.0256989779*_S7_NUMCATALOGPURCHASES+ 0.2880147854*_S8_NUMDEALSPURCHASES+ 0.1929364069*_S9_NUMWEBVISITSMONTH+ 0.1355032466*_S10_RFMSTAT+
-0.148578649*_S11_RECENCY+ 0.066769607*_S12_TEENHOME+ 0.2055398914*_S13_YEAR_BIRTH;
33939     +0.1929364069*_S9_NUMWEBVISITSMONTH+
33940     +0.1355032466*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 6 at stage 2;
33941     +-0.148578649*_S11_RECENCY+
33942     +0.066769607*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
33943     +0.2055398914*_S13_YEAR_BIRTH;
33944     +/*----------------------------------------------*/
33945     +* Component 6 at stage 2;
33946     +/*----------------------------------------------*/
33947     +;
33948     +_SPRIN26=
33949     +-0.008493382*Marital_Status_1_+
33950     +-0.011188081*Marital_Status_2_+
33951     +0.0016309879*Marital_Status_3_+
33952     +0.0067450524*Marital_Status_4_+
33953     +0.0264657057*Marital_Status_5_+
33954     +0.2193918461*_S1_ACCEPTEDCMPTOTAL+
33955     +0.3773554763*_S2_FRQ+
33956     +0.3893349243*_S3_INCOME+
33957     +0.4090071576*_S4_MNT+
33958     +0.2396116109*_S5_MNTGOLDPRODS+
33959     +0.3759667232*_S6_MNTMEATPRODUCTS+
33960     +0.3869383929*_S7_NUMCATALOGPURCHASES+
33961     +-0.093319147*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN26= -0.008493382*Marital_Status_1_+ -0.011188081*Marital_Status_2_+ 0.0016309879*Marital_Status_3_+ 0.0067450524*Marital_Status_4_+ 0.0264657057*Marital_Status_5_+ 0.2193918461*_S1_ACCEPTEDCMPTOTAL+ 0.3773554763*_S2_FRQ+
0.3893349243*_S3_INCOME+ 0.4090071576*_S4_MNT+ 0.2396116109*_S5_MNTGOLDPRODS+ 0.3759667232*_S6_MNTMEATPRODUCTS+ 0.3869383929*_S7_NUMCATALOGPURCHASES+ -0.093319147*_S8_NUMDEALSPURCHASES+ -0.290294871*_S9_NUMWEBVISITSMONTH+ 0.1924005307*_S10_RFMSTAT+
-0.012253394*_S11_RECENCY+ -0.083331603*_S12_TEENHOME+ -0.063857354*_S13_YEAR_BIRTH;
33962     +-0.290294871*_S9_NUMWEBVISITSMONTH+
MPRINT(EM_DIAGRAM):   ;
33963     +0.1924005307*_S10_RFMSTAT+
33964     +-0.012253394*_S11_RECENCY+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 3;
33965     +-0.083331603*_S12_TEENHOME+
33966     +-0.063857354*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   ;
33967     +;
33968     +/*----------------------------------------------*/
33969     +* Component 1 at stage 3;
33970     +/*----------------------------------------------*/
33971     +;
33972     +_SPRIN31=
33973     +0.1311533864*Marital_Status_1_+
33974     +0.0462721094*Marital_Status_2_+
33975     +-0.187574538*Marital_Status_3_+
33976     +-0.032460344*Marital_Status_4_+
33977     +0.1682450848*Marital_Status_5_+
33978     +-0.025261674*_S1_ACCEPTEDCMPTOTAL+
33979     +0.1770010525*_S2_FRQ+
33980     +0.1068447763*_S3_INCOME+
33981     +0.0282279128*_S4_MNT+
33982     +0.1511903934*_S5_MNTGOLDPRODS+
33983     +-0.116748849*_S6_MNTMEATPRODUCTS+
33984     +0.0221938124*_S7_NUMCATALOGPURCHASES+
33985     +0.4952296943*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN31= 0.1311533864*Marital_Status_1_+ 0.0462721094*Marital_Status_2_+ -0.187574538*Marital_Status_3_+ -0.032460344*Marital_Status_4_+ 0.1682450848*Marital_Status_5_+ -0.025261674*_S1_ACCEPTEDCMPTOTAL+ 0.1770010525*_S2_FRQ+
0.1068447763*_S3_INCOME+ 0.0282279128*_S4_MNT+ 0.1511903934*_S5_MNTGOLDPRODS+ -0.116748849*_S6_MNTMEATPRODUCTS+ 0.0221938124*_S7_NUMCATALOGPURCHASES+ 0.4952296943*_S8_NUMDEALSPURCHASES+ 0.138103439*_S9_NUMWEBVISITSMONTH+ -0.055698032*_S10_RFMSTAT+
0.0890909209*_S11_RECENCY+ 0.5881740989*_S12_TEENHOME+ -0.462210566*_S13_YEAR_BIRTH;
33986     +0.138103439*_S9_NUMWEBVISITSMONTH+
33987     +-0.055698032*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 3;
33988     +0.0890909209*_S11_RECENCY+
33989     +0.5881740989*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
33990     +-0.462210566*_S13_YEAR_BIRTH;
33991     +/*----------------------------------------------*/
33992     +* Component 2 at stage 3;
33993     +/*----------------------------------------------*/
33994     +;
33995     +_SPRIN32=
33996     +-0.015105189*Marital_Status_1_+
33997     +0.0118862269*Marital_Status_2_+
33998     +-0.011343113*Marital_Status_3_+
33999     +0.0045776631*Marital_Status_4_+
34000     +0.0083717862*Marital_Status_5_+
34001     +0.0497052612*_S1_ACCEPTEDCMPTOTAL+
34002     +-0.32469371*_S2_FRQ+
34003     +-0.570505038*_S3_INCOME+
34004     +-0.051638052*_S4_MNT+
34005     +-0.000179679*_S5_MNTGOLDPRODS+
34006     +0.3305454324*_S6_MNTMEATPRODUCTS+
34007     +0.6167274273*_S7_NUMCATALOGPURCHASES+
34008     +-0.009076585*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN32= -0.015105189*Marital_Status_1_+ 0.0118862269*Marital_Status_2_+ -0.011343113*Marital_Status_3_+ 0.0045776631*Marital_Status_4_+ 0.0083717862*Marital_Status_5_+ 0.0497052612*_S1_ACCEPTEDCMPTOTAL+ -0.32469371*_S2_FRQ+
-0.570505038*_S3_INCOME+ -0.051638052*_S4_MNT+ -0.000179679*_S5_MNTGOLDPRODS+ 0.3305454324*_S6_MNTMEATPRODUCTS+ 0.6167274273*_S7_NUMCATALOGPURCHASES+ -0.009076585*_S8_NUMDEALSPURCHASES+ -0.05161006*_S9_NUMWEBVISITSMONTH+ -0.009614781*_S10_RFMSTAT+
-0.006477144*_S11_RECENCY+ 0.2662240883*_S12_TEENHOME+ 0.0017486593*_S13_YEAR_BIRTH;
34009     +-0.05161006*_S9_NUMWEBVISITSMONTH+
34010     +-0.009614781*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 3;
34011     +-0.006477144*_S11_RECENCY+
34012     +0.2662240883*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34013     +0.0017486593*_S13_YEAR_BIRTH;
34014     +/*----------------------------------------------*/
34015     +* Component 3 at stage 3;
34016     +/*----------------------------------------------*/
34017     +;
34018     +_SPRIN33=
34019     +0.10761459*Marital_Status_1_+
34020     +0.0028979951*Marital_Status_2_+
34021     +-0.15064667*Marital_Status_3_+
34022     +-0.043533602*Marital_Status_4_+
34023     +0.272779799*Marital_Status_5_+
34024     +-0.796500815*_S1_ACCEPTEDCMPTOTAL+
34025     +0.0948384767*_S2_FRQ+
34026     +-0.024901753*_S3_INCOME+
34027     +0.036811217*_S4_MNT+
34028     +0.2470337929*_S5_MNTGOLDPRODS+
34029     +0.1168111721*_S6_MNTMEATPRODUCTS+
34030     +0.0697126712*_S7_NUMCATALOGPURCHASES+
34031     +0.171968035*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN33= 0.10761459*Marital_Status_1_+ 0.0028979951*Marital_Status_2_+ -0.15064667*Marital_Status_3_+ -0.043533602*Marital_Status_4_+ 0.272779799*Marital_Status_5_+ -0.796500815*_S1_ACCEPTEDCMPTOTAL+ 0.0948384767*_S2_FRQ+
-0.024901753*_S3_INCOME+ 0.036811217*_S4_MNT+ 0.2470337929*_S5_MNTGOLDPRODS+ 0.1168111721*_S6_MNTMEATPRODUCTS+ 0.0697126712*_S7_NUMCATALOGPURCHASES+ 0.171968035*_S8_NUMDEALSPURCHASES+ -0.102108299*_S9_NUMWEBVISITSMONTH+ -0.022671576*_S10_RFMSTAT+
-0.022630633*_S11_RECENCY+ -0.113962381*_S12_TEENHOME+ 0.3323945855*_S13_YEAR_BIRTH;
34032     +-0.102108299*_S9_NUMWEBVISITSMONTH+
34033     +-0.022671576*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 4 at stage 3;
34034     +-0.022630633*_S11_RECENCY+
34035     +-0.113962381*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34036     +0.3323945855*_S13_YEAR_BIRTH;
34037     +/*----------------------------------------------*/
34038     +* Component 4 at stage 3;
34039     +/*----------------------------------------------*/
34040     +;
34041     +_SPRIN34=
34042     +0.0698121964*Marital_Status_1_+
34043     +-0.071196228*Marital_Status_2_+
34044     +-0.215004244*Marital_Status_3_+
34045     +-0.007122854*Marital_Status_4_+
34046     +0.6169498832*Marital_Status_5_+
34047     +0.4368245541*_S1_ACCEPTEDCMPTOTAL+
34048     +0.0038078896*_S2_FRQ+
34049     +-0.158979071*_S3_INCOME+
34050     +0.0387829548*_S4_MNT+
34051     +0.224457403*_S5_MNTGOLDPRODS+
34052     +-0.044166316*_S6_MNTMEATPRODUCTS+
34053     +0.0022209443*_S7_NUMCATALOGPURCHASES+
34054     +0.1176239081*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN34= 0.0698121964*Marital_Status_1_+ -0.071196228*Marital_Status_2_+ -0.215004244*Marital_Status_3_+ -0.007122854*Marital_Status_4_+ 0.6169498832*Marital_Status_5_+ 0.4368245541*_S1_ACCEPTEDCMPTOTAL+ 0.0038078896*_S2_FRQ+
-0.158979071*_S3_INCOME+ 0.0387829548*_S4_MNT+ 0.224457403*_S5_MNTGOLDPRODS+ -0.044166316*_S6_MNTMEATPRODUCTS+ 0.0022209443*_S7_NUMCATALOGPURCHASES+ 0.1176239081*_S8_NUMDEALSPURCHASES+ 0.3801731715*_S9_NUMWEBVISITSMONTH+ 0.0193880887*_S10_RFMSTAT+
0.0078912704*_S11_RECENCY+ -0.304271031*_S12_TEENHOME+ 0.2045023374*_S13_YEAR_BIRTH;
34055     +0.3801731715*_S9_NUMWEBVISITSMONTH+
34056     +0.0193880887*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 5 at stage 3;
34057     +0.0078912704*_S11_RECENCY+
34058     +-0.304271031*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34059     +0.2045023374*_S13_YEAR_BIRTH;
34060     +/*----------------------------------------------*/
34061     +* Component 5 at stage 3;
34062     +/*----------------------------------------------*/
34063     +;
34064     +_SPRIN35=
34065     +-0.000232895*Marital_Status_1_+
34066     +-0.004880779*Marital_Status_2_+
34067     +0.0006083294*Marital_Status_3_+
34068     +0.0082855013*Marital_Status_4_+
34069     +-0.007529226*Marital_Status_5_+
34070     +-0.066896457*_S1_ACCEPTEDCMPTOTAL+
34071     +-0.584544523*_S2_FRQ+
34072     +0.6315682517*_S3_INCOME+
34073     +-0.173384958*_S4_MNT+
34074     +0.0199300933*_S5_MNTGOLDPRODS+
34075     +-0.065996201*_S6_MNTMEATPRODUCTS+
34076     +0.3742607477*_S7_NUMCATALOGPURCHASES+
34077     +0.1066403357*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN35= -0.000232895*Marital_Status_1_+ -0.004880779*Marital_Status_2_+ 0.0006083294*Marital_Status_3_+ 0.0082855013*Marital_Status_4_+ -0.007529226*Marital_Status_5_+ -0.066896457*_S1_ACCEPTEDCMPTOTAL+ -0.584544523*_S2_FRQ+
0.6315682517*_S3_INCOME+ -0.173384958*_S4_MNT+ 0.0199300933*_S5_MNTGOLDPRODS+ -0.065996201*_S6_MNTMEATPRODUCTS+ 0.3742607477*_S7_NUMCATALOGPURCHASES+ 0.1066403357*_S8_NUMDEALSPURCHASES+ 0.2338771409*_S9_NUMWEBVISITSMONTH+ 0.0170511776*_S10_RFMSTAT+
0.0109890941*_S11_RECENCY+ -0.115442279*_S12_TEENHOME+ -0.010452951*_S13_YEAR_BIRTH;
34078     +0.2338771409*_S9_NUMWEBVISITSMONTH+
34079     +0.0170511776*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 6 at stage 3;
34080     +0.0109890941*_S11_RECENCY+
34081     +-0.115442279*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34082     +-0.010452951*_S13_YEAR_BIRTH;
34083     +/*----------------------------------------------*/
34084     +* Component 6 at stage 3;
34085     +/*----------------------------------------------*/
34086     +;
34087     +_SPRIN36=
34088     +0.0093097628*Marital_Status_1_+
34089     +-0.007357611*Marital_Status_2_+
34090     +0.004161881*Marital_Status_3_+
34091     +-0.003334178*Marital_Status_4_+
34092     +0.0030096039*Marital_Status_5_+
34093     +0.0609654599*_S1_ACCEPTEDCMPTOTAL+
34094     +0.2916437296*_S2_FRQ+
34095     +0.1154801729*_S3_INCOME+
34096     +-0.805526511*_S4_MNT+
34097     +0.0844981983*_S5_MNTGOLDPRODS+
34098     +0.4796242204*_S6_MNTMEATPRODUCTS+
34099     +-0.062347745*_S7_NUMCATALOGPURCHASES+
34100     +-0.031857708*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN36= 0.0093097628*Marital_Status_1_+ -0.007357611*Marital_Status_2_+ 0.004161881*Marital_Status_3_+ -0.003334178*Marital_Status_4_+ 0.0030096039*Marital_Status_5_+ 0.0609654599*_S1_ACCEPTEDCMPTOTAL+ 0.2916437296*_S2_FRQ+
0.1154801729*_S3_INCOME+ -0.805526511*_S4_MNT+ 0.0844981983*_S5_MNTGOLDPRODS+ 0.4796242204*_S6_MNTMEATPRODUCTS+ -0.062347745*_S7_NUMCATALOGPURCHASES+ -0.031857708*_S8_NUMDEALSPURCHASES+ 0.0774997018*_S9_NUMWEBVISITSMONTH+ 0.0158091776*_S10_RFMSTAT+
0.0115610406*_S11_RECENCY+ 0.000437064*_S12_TEENHOME+ -0.019202585*_S13_YEAR_BIRTH;
34101     +0.0774997018*_S9_NUMWEBVISITSMONTH+
MPRINT(EM_DIAGRAM):   ;
34102     +0.0158091776*_S10_RFMSTAT+
34103     +0.0115610406*_S11_RECENCY+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 4;
34104     +0.000437064*_S12_TEENHOME+
34105     +-0.019202585*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   ;
34106     +;
34107     +/*----------------------------------------------*/
34108     +* Component 1 at stage 4;
34109     +/*----------------------------------------------*/
34110     +;
34111     +_SPRIN41=
34112     +0.7201014863*Marital_Status_1_+
34113     +-0.039414952*Marital_Status_2_+
34114     +-0.261027185*Marital_Status_3_+
34115     +-0.002570027*Marital_Status_4_+
34116     +-0.517989138*Marital_Status_5_+
34117     +0.1032358936*_S1_ACCEPTEDCMPTOTAL+
34118     +0.0293938239*_S2_FRQ+
34119     +-0.060123348*_S3_INCOME+
34120     +0.0306908632*_S4_MNT+
34121     +0.0931751568*_S5_MNTGOLDPRODS+
34122     +0.0016465853*_S6_MNTMEATPRODUCTS+
34123     +0.0174804568*_S7_NUMCATALOGPURCHASES+
34124     +0.1233541944*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN41= 0.7201014863*Marital_Status_1_+ -0.039414952*Marital_Status_2_+ -0.261027185*Marital_Status_3_+ -0.002570027*Marital_Status_4_+ -0.517989138*Marital_Status_5_+ 0.1032358936*_S1_ACCEPTEDCMPTOTAL+ 0.0293938239*_S2_FRQ+
-0.060123348*_S3_INCOME+ 0.0306908632*_S4_MNT+ 0.0931751568*_S5_MNTGOLDPRODS+ 0.0016465853*_S6_MNTMEATPRODUCTS+ 0.0174804568*_S7_NUMCATALOGPURCHASES+ 0.1233541944*_S8_NUMDEALSPURCHASES+ 0.1518084321*_S9_NUMWEBVISITSMONTH+ 0.1449751106*_S10_RFMSTAT+
-0.133344887*_S11_RECENCY+ -0.066595833*_S12_TEENHOME+ 0.1920463047*_S13_YEAR_BIRTH;
34125     +0.1518084321*_S9_NUMWEBVISITSMONTH+
34126     +0.1449751106*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 4;
34127     +-0.133344887*_S11_RECENCY+
34128     +-0.066595833*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34129     +0.1920463047*_S13_YEAR_BIRTH;
34130     +/*----------------------------------------------*/
34131     +* Component 2 at stage 4;
34132     +/*----------------------------------------------*/
34133     +;
34134     +_SPRIN42=
34135     +0.0093097628*Marital_Status_1_+
34136     +-0.007357611*Marital_Status_2_+
34137     +0.004161881*Marital_Status_3_+
34138     +-0.003334178*Marital_Status_4_+
34139     +0.0030096039*Marital_Status_5_+
34140     +0.0609654599*_S1_ACCEPTEDCMPTOTAL+
34141     +0.2916437296*_S2_FRQ+
34142     +0.1154801729*_S3_INCOME+
34143     +-0.805526511*_S4_MNT+
34144     +0.0844981983*_S5_MNTGOLDPRODS+
34145     +0.4796242204*_S6_MNTMEATPRODUCTS+
34146     +-0.062347745*_S7_NUMCATALOGPURCHASES+
34147     +-0.031857708*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN42= 0.0093097628*Marital_Status_1_+ -0.007357611*Marital_Status_2_+ 0.004161881*Marital_Status_3_+ -0.003334178*Marital_Status_4_+ 0.0030096039*Marital_Status_5_+ 0.0609654599*_S1_ACCEPTEDCMPTOTAL+ 0.2916437296*_S2_FRQ+
0.1154801729*_S3_INCOME+ -0.805526511*_S4_MNT+ 0.0844981983*_S5_MNTGOLDPRODS+ 0.4796242204*_S6_MNTMEATPRODUCTS+ -0.062347745*_S7_NUMCATALOGPURCHASES+ -0.031857708*_S8_NUMDEALSPURCHASES+ 0.0774997018*_S9_NUMWEBVISITSMONTH+ 0.0158091776*_S10_RFMSTAT+
0.0115610406*_S11_RECENCY+ 0.000437064*_S12_TEENHOME+ -0.019202585*_S13_YEAR_BIRTH;
34148     +0.0774997018*_S9_NUMWEBVISITSMONTH+
34149     +0.0158091776*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 4;
34150     +0.0115610406*_S11_RECENCY+
34151     +0.000437064*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34152     +-0.019202585*_S13_YEAR_BIRTH;
34153     +/*----------------------------------------------*/
34154     +* Component 3 at stage 4;
34155     +/*----------------------------------------------*/
34156     +;
34157     +_SPRIN43=
34158     +-0.529759999*Marital_Status_1_+
34159     +0.0929641115*Marital_Status_2_+
34160     +-0.091427311*Marital_Status_3_+
34161     +0.5040179245*Marital_Status_4_+
34162     +-0.362861674*Marital_Status_5_+
34163     +0.0348823878*_S1_ACCEPTEDCMPTOTAL+
34164     +0.1133790974*_S2_FRQ+
34165     +-0.046925784*_S3_INCOME+
34166     +0.041087743*_S4_MNT+
34167     +0.2145202702*_S5_MNTGOLDPRODS+
34168     +-0.013889744*_S6_MNTMEATPRODUCTS+
34169     +0.0241896601*_S7_NUMCATALOGPURCHASES+
34170     +0.3401453099*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN43= -0.529759999*Marital_Status_1_+ 0.0929641115*Marital_Status_2_+ -0.091427311*Marital_Status_3_+ 0.5040179245*Marital_Status_4_+ -0.362861674*Marital_Status_5_+ 0.0348823878*_S1_ACCEPTEDCMPTOTAL+ 0.1133790974*_S2_FRQ+
-0.046925784*_S3_INCOME+ 0.041087743*_S4_MNT+ 0.2145202702*_S5_MNTGOLDPRODS+ -0.013889744*_S6_MNTMEATPRODUCTS+ 0.0241896601*_S7_NUMCATALOGPURCHASES+ 0.3401453099*_S8_NUMDEALSPURCHASES+ 0.2250315176*_S9_NUMWEBVISITSMONTH+ 0.0766337761*_S10_RFMSTAT+
-0.026511866*_S11_RECENCY+ 0.020673873*_S12_TEENHOME+ 0.2802686549*_S13_YEAR_BIRTH;
34171     +0.2250315176*_S9_NUMWEBVISITSMONTH+
34172     +0.0766337761*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 4 at stage 4;
34173     +-0.026511866*_S11_RECENCY+
34174     +0.020673873*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34175     +0.2802686549*_S13_YEAR_BIRTH;
34176     +/*----------------------------------------------*/
34177     +* Component 4 at stage 4;
34178     +/*----------------------------------------------*/
34179     +;
34180     +_SPRIN44=
34181     +0.0062762631*Marital_Status_1_+
34182     +-0.010875887*Marital_Status_2_+
34183     +-0.001735199*Marital_Status_3_+
34184     +0.003215339*Marital_Status_4_+
34185     +0.0164402875*Marital_Status_5_+
34186     +0.0819675329*_S1_ACCEPTEDCMPTOTAL+
34187     +-0.462873318*_S2_FRQ+
34188     +0.0469918013*_S3_INCOME+
34189     +0.2304506395*_S4_MNT+
34190     +0.0977211562*_S5_MNTGOLDPRODS+
34191     +0.5904759878*_S6_MNTMEATPRODUCTS+
34192     +-0.545547887*_S7_NUMCATALOGPURCHASES+
34193     +0.2139463159*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN44= 0.0062762631*Marital_Status_1_+ -0.010875887*Marital_Status_2_+ -0.001735199*Marital_Status_3_+ 0.003215339*Marital_Status_4_+ 0.0164402875*Marital_Status_5_+ 0.0819675329*_S1_ACCEPTEDCMPTOTAL+ -0.462873318*_S2_FRQ+
0.0469918013*_S3_INCOME+ 0.2304506395*_S4_MNT+ 0.0977211562*_S5_MNTGOLDPRODS+ 0.5904759878*_S6_MNTMEATPRODUCTS+ -0.545547887*_S7_NUMCATALOGPURCHASES+ 0.2139463159*_S8_NUMDEALSPURCHASES+ -0.117021636*_S9_NUMWEBVISITSMONTH+ 0.0161900995*_S10_RFMSTAT+
0.028974563*_S11_RECENCY+ 0.0823235285*_S12_TEENHOME+ 0.0096368551*_S13_YEAR_BIRTH;
34194     +-0.117021636*_S9_NUMWEBVISITSMONTH+
34195     +0.0161900995*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 5 at stage 4;
34196     +0.028974563*_S11_RECENCY+
34197     +0.0823235285*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34198     +0.0096368551*_S13_YEAR_BIRTH;
34199     +/*----------------------------------------------*/
34200     +* Component 5 at stage 4;
34201     +/*----------------------------------------------*/
34202     +;
34203     +_SPRIN45=
34204     +0.0259027139*Marital_Status_1_+
34205     +-0.023219643*Marital_Status_2_+
34206     +-0.048071754*Marital_Status_3_+
34207     +0.0104245904*Marital_Status_4_+
34208     +0.111093904*Marital_Status_5_+
34209     +0.1029306769*_S1_ACCEPTEDCMPTOTAL+
34210     +-0.104590704*_S2_FRQ+
34211     +0.0992739498*_S3_INCOME+
34212     +-0.126525705*_S4_MNT+
34213     +0.1755348321*_S5_MNTGOLDPRODS+
34214     +-0.219398621*_S6_MNTMEATPRODUCTS+
34215     +-0.086592319*_S7_NUMCATALOGPURCHASES+
34216     +-0.25424186*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN45= 0.0259027139*Marital_Status_1_+ -0.023219643*Marital_Status_2_+ -0.048071754*Marital_Status_3_+ 0.0104245904*Marital_Status_4_+ 0.111093904*Marital_Status_5_+ 0.1029306769*_S1_ACCEPTEDCMPTOTAL+ -0.104590704*_S2_FRQ+
0.0992739498*_S3_INCOME+ -0.126525705*_S4_MNT+ 0.1755348321*_S5_MNTGOLDPRODS+ -0.219398621*_S6_MNTMEATPRODUCTS+ -0.086592319*_S7_NUMCATALOGPURCHASES+ -0.25424186*_S8_NUMDEALSPURCHASES+ -0.203846899*_S9_NUMWEBVISITSMONTH+ 0.4677013509*_S10_RFMSTAT+
0.3215691362*_S11_RECENCY+ 0.4850182787*_S12_TEENHOME+ 0.431969361*_S13_YEAR_BIRTH;
34217     +-0.203846899*_S9_NUMWEBVISITSMONTH+
34218     +0.4677013509*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 6 at stage 4;
34219     +0.3215691362*_S11_RECENCY+
34220     +0.4850182787*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34221     +0.431969361*_S13_YEAR_BIRTH;
34222     +/*----------------------------------------------*/
34223     +* Component 6 at stage 4;
34224     +/*----------------------------------------------*/
34225     +;
34226     +_SPRIN46=
34227     +-0.05935653*Marital_Status_1_+
34228     +-0.032851354*Marital_Status_2_+
34229     +0.6701503133*Marital_Status_3_+
34230     +-0.533967645*Marital_Status_4_+
34231     +-0.093035935*Marital_Status_5_+
34232     +0.0427953086*_S1_ACCEPTEDCMPTOTAL+
34233     +0.0760580738*_S2_FRQ+
34234     +-0.040927706*_S3_INCOME+
34235     +0.0321133035*_S4_MNT+
34236     +0.1825666886*_S5_MNTGOLDPRODS+
34237     +-0.029779653*_S6_MNTMEATPRODUCTS+
34238     +0.0256989779*_S7_NUMCATALOGPURCHASES+
34239     +0.2880147854*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN46= -0.05935653*Marital_Status_1_+ -0.032851354*Marital_Status_2_+ 0.6701503133*Marital_Status_3_+ -0.533967645*Marital_Status_4_+ -0.093035935*Marital_Status_5_+ 0.0427953086*_S1_ACCEPTEDCMPTOTAL+ 0.0760580738*_S2_FRQ+
-0.040927706*_S3_INCOME+ 0.0321133035*_S4_MNT+ 0.1825666886*_S5_MNTGOLDPRODS+ -0.029779653*_S6_MNTMEATPRODUCTS+ 0.0256989779*_S7_NUMCATALOGPURCHASES+ 0.2880147854*_S8_NUMDEALSPURCHASES+ 0.1929364069*_S9_NUMWEBVISITSMONTH+ 0.1355032466*_S10_RFMSTAT+
-0.148578649*_S11_RECENCY+ 0.066769607*_S12_TEENHOME+ 0.2055398914*_S13_YEAR_BIRTH;
34240     +0.1929364069*_S9_NUMWEBVISITSMONTH+
MPRINT(EM_DIAGRAM):   ;
34241     +0.1355032466*_S10_RFMSTAT+
34242     +-0.148578649*_S11_RECENCY+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 5;
34243     +0.066769607*_S12_TEENHOME+
34244     +0.2055398914*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   ;
34245     +;
34246     +/*----------------------------------------------*/
34247     +* Component 1 at stage 5;
34248     +/*----------------------------------------------*/
34249     +;
34250     +_SPRIN51=
34251     +0.0093097628*Marital_Status_1_+
34252     +-0.007357611*Marital_Status_2_+
34253     +0.004161881*Marital_Status_3_+
34254     +-0.003334178*Marital_Status_4_+
34255     +0.0030096039*Marital_Status_5_+
34256     +0.0609654599*_S1_ACCEPTEDCMPTOTAL+
34257     +0.2916437296*_S2_FRQ+
34258     +0.1154801729*_S3_INCOME+
34259     +-0.805526511*_S4_MNT+
34260     +0.0844981983*_S5_MNTGOLDPRODS+
34261     +0.4796242204*_S6_MNTMEATPRODUCTS+
34262     +-0.062347745*_S7_NUMCATALOGPURCHASES+
34263     +-0.031857708*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN51= 0.0093097628*Marital_Status_1_+ -0.007357611*Marital_Status_2_+ 0.004161881*Marital_Status_3_+ -0.003334178*Marital_Status_4_+ 0.0030096039*Marital_Status_5_+ 0.0609654599*_S1_ACCEPTEDCMPTOTAL+ 0.2916437296*_S2_FRQ+
0.1154801729*_S3_INCOME+ -0.805526511*_S4_MNT+ 0.0844981983*_S5_MNTGOLDPRODS+ 0.4796242204*_S6_MNTMEATPRODUCTS+ -0.062347745*_S7_NUMCATALOGPURCHASES+ -0.031857708*_S8_NUMDEALSPURCHASES+ 0.0774997018*_S9_NUMWEBVISITSMONTH+ 0.0158091776*_S10_RFMSTAT+
0.0115610406*_S11_RECENCY+ 0.000437064*_S12_TEENHOME+ -0.019202585*_S13_YEAR_BIRTH;
34264     +0.0774997018*_S9_NUMWEBVISITSMONTH+
34265     +0.0158091776*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 5;
34266     +0.0115610406*_S11_RECENCY+
34267     +0.000437064*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34268     +-0.019202585*_S13_YEAR_BIRTH;
34269     +/*----------------------------------------------*/
34270     +* Component 2 at stage 5;
34271     +/*----------------------------------------------*/
34272     +;
34273     +_SPRIN52=
34274     +0.1626998739*Marital_Status_1_+
34275     +-0.79909083*Marital_Status_2_+
34276     +0.3388553128*Marital_Status_3_+
34277     +0.4475609678*Marital_Status_4_+
34278     +0.0873267528*Marital_Status_5_+
34279     +-0.062015793*_S1_ACCEPTEDCMPTOTAL+
34280     +0.0140882535*_S2_FRQ+
34281     +-0.006689305*_S3_INCOME+
34282     +0.0052515467*_S4_MNT+
34283     +0.0129809178*_S5_MNTGOLDPRODS+
34284     +-0.008873172*_S6_MNTMEATPRODUCTS+
34285     +0.008355514*_S7_NUMCATALOGPURCHASES+
34286     +0.0225316639*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN52= 0.1626998739*Marital_Status_1_+ -0.79909083*Marital_Status_2_+ 0.3388553128*Marital_Status_3_+ 0.4475609678*Marital_Status_4_+ 0.0873267528*Marital_Status_5_+ -0.062015793*_S1_ACCEPTEDCMPTOTAL+ 0.0140882535*_S2_FRQ+
-0.006689305*_S3_INCOME+ 0.0052515467*_S4_MNT+ 0.0129809178*_S5_MNTGOLDPRODS+ -0.008873172*_S6_MNTMEATPRODUCTS+ 0.008355514*_S7_NUMCATALOGPURCHASES+ 0.0225316639*_S8_NUMDEALSPURCHASES+ 0.0094785602*_S9_NUMWEBVISITSMONTH+ -0.010018638*_S10_RFMSTAT+
-0.018714474*_S11_RECENCY+ 0.0581880557*_S12_TEENHOME+ -0.057923258*_S13_YEAR_BIRTH;
34287     +0.0094785602*_S9_NUMWEBVISITSMONTH+
34288     +-0.010018638*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 5;
34289     +-0.018714474*_S11_RECENCY+
34290     +0.0581880557*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34291     +-0.057923258*_S13_YEAR_BIRTH;
34292     +/*----------------------------------------------*/
34293     +* Component 3 at stage 5;
34294     +/*----------------------------------------------*/
34295     +;
34296     +_SPRIN53=
34297     +-0.000232895*Marital_Status_1_+
34298     +-0.004880779*Marital_Status_2_+
34299     +0.0006083294*Marital_Status_3_+
34300     +0.0082855013*Marital_Status_4_+
34301     +-0.007529226*Marital_Status_5_+
34302     +-0.066896457*_S1_ACCEPTEDCMPTOTAL+
34303     +-0.584544523*_S2_FRQ+
34304     +0.6315682517*_S3_INCOME+
34305     +-0.173384958*_S4_MNT+
34306     +0.0199300933*_S5_MNTGOLDPRODS+
34307     +-0.065996201*_S6_MNTMEATPRODUCTS+
34308     +0.3742607477*_S7_NUMCATALOGPURCHASES+
34309     +0.1066403357*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN53= -0.000232895*Marital_Status_1_+ -0.004880779*Marital_Status_2_+ 0.0006083294*Marital_Status_3_+ 0.0082855013*Marital_Status_4_+ -0.007529226*Marital_Status_5_+ -0.066896457*_S1_ACCEPTEDCMPTOTAL+ -0.584544523*_S2_FRQ+
0.6315682517*_S3_INCOME+ -0.173384958*_S4_MNT+ 0.0199300933*_S5_MNTGOLDPRODS+ -0.065996201*_S6_MNTMEATPRODUCTS+ 0.3742607477*_S7_NUMCATALOGPURCHASES+ 0.1066403357*_S8_NUMDEALSPURCHASES+ 0.2338771409*_S9_NUMWEBVISITSMONTH+ 0.0170511776*_S10_RFMSTAT+
0.0109890941*_S11_RECENCY+ -0.115442279*_S12_TEENHOME+ -0.010452951*_S13_YEAR_BIRTH;
34310     +0.2338771409*_S9_NUMWEBVISITSMONTH+
34311     +0.0170511776*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 4 at stage 5;
34312     +0.0109890941*_S11_RECENCY+
34313     +-0.115442279*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34314     +-0.010452951*_S13_YEAR_BIRTH;
34315     +/*----------------------------------------------*/
34316     +* Component 4 at stage 5;
34317     +/*----------------------------------------------*/
34318     +;
34319     +_SPRIN54=
34320     +-0.008493382*Marital_Status_1_+
34321     +-0.011188081*Marital_Status_2_+
34322     +0.0016309879*Marital_Status_3_+
34323     +0.0067450524*Marital_Status_4_+
34324     +0.0264657057*Marital_Status_5_+
34325     +0.2193918461*_S1_ACCEPTEDCMPTOTAL+
34326     +0.3773554763*_S2_FRQ+
34327     +0.3893349243*_S3_INCOME+
34328     +0.4090071576*_S4_MNT+
34329     +0.2396116109*_S5_MNTGOLDPRODS+
34330     +0.3759667232*_S6_MNTMEATPRODUCTS+
34331     +0.3869383929*_S7_NUMCATALOGPURCHASES+
34332     +-0.093319147*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN54= -0.008493382*Marital_Status_1_+ -0.011188081*Marital_Status_2_+ 0.0016309879*Marital_Status_3_+ 0.0067450524*Marital_Status_4_+ 0.0264657057*Marital_Status_5_+ 0.2193918461*_S1_ACCEPTEDCMPTOTAL+ 0.3773554763*_S2_FRQ+
0.3893349243*_S3_INCOME+ 0.4090071576*_S4_MNT+ 0.2396116109*_S5_MNTGOLDPRODS+ 0.3759667232*_S6_MNTMEATPRODUCTS+ 0.3869383929*_S7_NUMCATALOGPURCHASES+ -0.093319147*_S8_NUMDEALSPURCHASES+ -0.290294871*_S9_NUMWEBVISITSMONTH+ 0.1924005307*_S10_RFMSTAT+
-0.012253394*_S11_RECENCY+ -0.083331603*_S12_TEENHOME+ -0.063857354*_S13_YEAR_BIRTH;
34333     +-0.290294871*_S9_NUMWEBVISITSMONTH+
34334     +0.1924005307*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 5 at stage 5;
34335     +-0.012253394*_S11_RECENCY+
34336     +-0.083331603*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34337     +-0.063857354*_S13_YEAR_BIRTH;
34338     +/*----------------------------------------------*/
34339     +* Component 5 at stage 5;
34340     +/*----------------------------------------------*/
34341     +;
34342     +_SPRIN55=
34343     +0.0259027139*Marital_Status_1_+
34344     +-0.023219643*Marital_Status_2_+
34345     +-0.048071754*Marital_Status_3_+
34346     +0.0104245904*Marital_Status_4_+
34347     +0.111093904*Marital_Status_5_+
34348     +0.1029306769*_S1_ACCEPTEDCMPTOTAL+
34349     +-0.104590704*_S2_FRQ+
34350     +0.0992739498*_S3_INCOME+
34351     +-0.126525705*_S4_MNT+
34352     +0.1755348321*_S5_MNTGOLDPRODS+
34353     +-0.219398621*_S6_MNTMEATPRODUCTS+
34354     +-0.086592319*_S7_NUMCATALOGPURCHASES+
34355     +-0.25424186*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN55= 0.0259027139*Marital_Status_1_+ -0.023219643*Marital_Status_2_+ -0.048071754*Marital_Status_3_+ 0.0104245904*Marital_Status_4_+ 0.111093904*Marital_Status_5_+ 0.1029306769*_S1_ACCEPTEDCMPTOTAL+ -0.104590704*_S2_FRQ+
0.0992739498*_S3_INCOME+ -0.126525705*_S4_MNT+ 0.1755348321*_S5_MNTGOLDPRODS+ -0.219398621*_S6_MNTMEATPRODUCTS+ -0.086592319*_S7_NUMCATALOGPURCHASES+ -0.25424186*_S8_NUMDEALSPURCHASES+ -0.203846899*_S9_NUMWEBVISITSMONTH+ 0.4677013509*_S10_RFMSTAT+
0.3215691362*_S11_RECENCY+ 0.4850182787*_S12_TEENHOME+ 0.431969361*_S13_YEAR_BIRTH;
34356     +-0.203846899*_S9_NUMWEBVISITSMONTH+
34357     +0.4677013509*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 6 at stage 5;
34358     +0.3215691362*_S11_RECENCY+
34359     +0.4850182787*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34360     +0.431969361*_S13_YEAR_BIRTH;
34361     +/*----------------------------------------------*/
34362     +* Component 6 at stage 5;
34363     +/*----------------------------------------------*/
34364     +;
34365     +_SPRIN56=
34366     +0.7201014863*Marital_Status_1_+
34367     +-0.039414952*Marital_Status_2_+
34368     +-0.261027185*Marital_Status_3_+
34369     +-0.002570027*Marital_Status_4_+
34370     +-0.517989138*Marital_Status_5_+
34371     +0.1032358936*_S1_ACCEPTEDCMPTOTAL+
34372     +0.0293938239*_S2_FRQ+
34373     +-0.060123348*_S3_INCOME+
34374     +0.0306908632*_S4_MNT+
34375     +0.0931751568*_S5_MNTGOLDPRODS+
34376     +0.0016465853*_S6_MNTMEATPRODUCTS+
34377     +0.0174804568*_S7_NUMCATALOGPURCHASES+
34378     +0.1233541944*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN56= 0.7201014863*Marital_Status_1_+ -0.039414952*Marital_Status_2_+ -0.261027185*Marital_Status_3_+ -0.002570027*Marital_Status_4_+ -0.517989138*Marital_Status_5_+ 0.1032358936*_S1_ACCEPTEDCMPTOTAL+ 0.0293938239*_S2_FRQ+
-0.060123348*_S3_INCOME+ 0.0306908632*_S4_MNT+ 0.0931751568*_S5_MNTGOLDPRODS+ 0.0016465853*_S6_MNTMEATPRODUCTS+ 0.0174804568*_S7_NUMCATALOGPURCHASES+ 0.1233541944*_S8_NUMDEALSPURCHASES+ 0.1518084321*_S9_NUMWEBVISITSMONTH+ 0.1449751106*_S10_RFMSTAT+
-0.133344887*_S11_RECENCY+ -0.066595833*_S12_TEENHOME+ 0.1920463047*_S13_YEAR_BIRTH;
34379     +0.1518084321*_S9_NUMWEBVISITSMONTH+
MPRINT(EM_DIAGRAM):   ;
34380     +0.1449751106*_S10_RFMSTAT+
34381     +-0.133344887*_S11_RECENCY+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 6;
34382     +-0.066595833*_S12_TEENHOME+
34383     +0.1920463047*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   ;
34384     +;
34385     +/*----------------------------------------------*/
34386     +* Component 1 at stage 6;
34387     +/*----------------------------------------------*/
34388     +;
34389     +_SPRIN61=
34390     +-0.008493382*Marital_Status_1_+
34391     +-0.011188081*Marital_Status_2_+
34392     +0.0016309879*Marital_Status_3_+
34393     +0.0067450524*Marital_Status_4_+
34394     +0.0264657057*Marital_Status_5_+
34395     +0.2193918461*_S1_ACCEPTEDCMPTOTAL+
34396     +0.3773554763*_S2_FRQ+
34397     +0.3893349243*_S3_INCOME+
34398     +0.4090071576*_S4_MNT+
34399     +0.2396116109*_S5_MNTGOLDPRODS+
34400     +0.3759667232*_S6_MNTMEATPRODUCTS+
34401     +0.3869383929*_S7_NUMCATALOGPURCHASES+
34402     +-0.093319147*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN61= -0.008493382*Marital_Status_1_+ -0.011188081*Marital_Status_2_+ 0.0016309879*Marital_Status_3_+ 0.0067450524*Marital_Status_4_+ 0.0264657057*Marital_Status_5_+ 0.2193918461*_S1_ACCEPTEDCMPTOTAL+ 0.3773554763*_S2_FRQ+
0.3893349243*_S3_INCOME+ 0.4090071576*_S4_MNT+ 0.2396116109*_S5_MNTGOLDPRODS+ 0.3759667232*_S6_MNTMEATPRODUCTS+ 0.3869383929*_S7_NUMCATALOGPURCHASES+ -0.093319147*_S8_NUMDEALSPURCHASES+ -0.290294871*_S9_NUMWEBVISITSMONTH+ 0.1924005307*_S10_RFMSTAT+
-0.012253394*_S11_RECENCY+ -0.083331603*_S12_TEENHOME+ -0.063857354*_S13_YEAR_BIRTH;
34403     +-0.290294871*_S9_NUMWEBVISITSMONTH+
34404     +0.1924005307*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 6;
34405     +-0.012253394*_S11_RECENCY+
34406     +-0.083331603*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34407     +-0.063857354*_S13_YEAR_BIRTH;
34408     +/*----------------------------------------------*/
34409     +* Component 2 at stage 6;
34410     +/*----------------------------------------------*/
34411     +;
34412     +_SPRIN62=
34413     +0.0093097628*Marital_Status_1_+
34414     +-0.007357611*Marital_Status_2_+
34415     +0.004161881*Marital_Status_3_+
34416     +-0.003334178*Marital_Status_4_+
34417     +0.0030096039*Marital_Status_5_+
34418     +0.0609654599*_S1_ACCEPTEDCMPTOTAL+
34419     +0.2916437296*_S2_FRQ+
34420     +0.1154801729*_S3_INCOME+
34421     +-0.805526511*_S4_MNT+
34422     +0.0844981983*_S5_MNTGOLDPRODS+
34423     +0.4796242204*_S6_MNTMEATPRODUCTS+
34424     +-0.062347745*_S7_NUMCATALOGPURCHASES+
34425     +-0.031857708*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN62= 0.0093097628*Marital_Status_1_+ -0.007357611*Marital_Status_2_+ 0.004161881*Marital_Status_3_+ -0.003334178*Marital_Status_4_+ 0.0030096039*Marital_Status_5_+ 0.0609654599*_S1_ACCEPTEDCMPTOTAL+ 0.2916437296*_S2_FRQ+
0.1154801729*_S3_INCOME+ -0.805526511*_S4_MNT+ 0.0844981983*_S5_MNTGOLDPRODS+ 0.4796242204*_S6_MNTMEATPRODUCTS+ -0.062347745*_S7_NUMCATALOGPURCHASES+ -0.031857708*_S8_NUMDEALSPURCHASES+ 0.0774997018*_S9_NUMWEBVISITSMONTH+ 0.0158091776*_S10_RFMSTAT+
0.0115610406*_S11_RECENCY+ 0.000437064*_S12_TEENHOME+ -0.019202585*_S13_YEAR_BIRTH;
34426     +0.0774997018*_S9_NUMWEBVISITSMONTH+
34427     +0.0158091776*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 6;
34428     +0.0115610406*_S11_RECENCY+
34429     +0.000437064*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34430     +-0.019202585*_S13_YEAR_BIRTH;
34431     +/*----------------------------------------------*/
34432     +* Component 3 at stage 6;
34433     +/*----------------------------------------------*/
34434     +;
34435     +_SPRIN63=
34436     +-0.015105189*Marital_Status_1_+
34437     +0.0118862269*Marital_Status_2_+
34438     +-0.011343113*Marital_Status_3_+
34439     +0.0045776631*Marital_Status_4_+
34440     +0.0083717862*Marital_Status_5_+
34441     +0.0497052612*_S1_ACCEPTEDCMPTOTAL+
34442     +-0.32469371*_S2_FRQ+
34443     +-0.570505038*_S3_INCOME+
34444     +-0.051638052*_S4_MNT+
34445     +-0.000179679*_S5_MNTGOLDPRODS+
34446     +0.3305454324*_S6_MNTMEATPRODUCTS+
34447     +0.6167274273*_S7_NUMCATALOGPURCHASES+
34448     +-0.009076585*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN63= -0.015105189*Marital_Status_1_+ 0.0118862269*Marital_Status_2_+ -0.011343113*Marital_Status_3_+ 0.0045776631*Marital_Status_4_+ 0.0083717862*Marital_Status_5_+ 0.0497052612*_S1_ACCEPTEDCMPTOTAL+ -0.32469371*_S2_FRQ+
-0.570505038*_S3_INCOME+ -0.051638052*_S4_MNT+ -0.000179679*_S5_MNTGOLDPRODS+ 0.3305454324*_S6_MNTMEATPRODUCTS+ 0.6167274273*_S7_NUMCATALOGPURCHASES+ -0.009076585*_S8_NUMDEALSPURCHASES+ -0.05161006*_S9_NUMWEBVISITSMONTH+ -0.009614781*_S10_RFMSTAT+
-0.006477144*_S11_RECENCY+ 0.2662240883*_S12_TEENHOME+ 0.0017486593*_S13_YEAR_BIRTH;
34449     +-0.05161006*_S9_NUMWEBVISITSMONTH+
34450     +-0.009614781*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 4 at stage 6;
34451     +-0.006477144*_S11_RECENCY+
34452     +0.2662240883*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34453     +0.0017486593*_S13_YEAR_BIRTH;
34454     +/*----------------------------------------------*/
34455     +* Component 4 at stage 6;
34456     +/*----------------------------------------------*/
34457     +;
34458     +_SPRIN64=
34459     +-0.000232895*Marital_Status_1_+
34460     +-0.004880779*Marital_Status_2_+
34461     +0.0006083294*Marital_Status_3_+
34462     +0.0082855013*Marital_Status_4_+
34463     +-0.007529226*Marital_Status_5_+
34464     +-0.066896457*_S1_ACCEPTEDCMPTOTAL+
34465     +-0.584544523*_S2_FRQ+
34466     +0.6315682517*_S3_INCOME+
34467     +-0.173384958*_S4_MNT+
34468     +0.0199300933*_S5_MNTGOLDPRODS+
34469     +-0.065996201*_S6_MNTMEATPRODUCTS+
34470     +0.3742607477*_S7_NUMCATALOGPURCHASES+
34471     +0.1066403357*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN64= -0.000232895*Marital_Status_1_+ -0.004880779*Marital_Status_2_+ 0.0006083294*Marital_Status_3_+ 0.0082855013*Marital_Status_4_+ -0.007529226*Marital_Status_5_+ -0.066896457*_S1_ACCEPTEDCMPTOTAL+ -0.584544523*_S2_FRQ+
0.6315682517*_S3_INCOME+ -0.173384958*_S4_MNT+ 0.0199300933*_S5_MNTGOLDPRODS+ -0.065996201*_S6_MNTMEATPRODUCTS+ 0.3742607477*_S7_NUMCATALOGPURCHASES+ 0.1066403357*_S8_NUMDEALSPURCHASES+ 0.2338771409*_S9_NUMWEBVISITSMONTH+ 0.0170511776*_S10_RFMSTAT+
0.0109890941*_S11_RECENCY+ -0.115442279*_S12_TEENHOME+ -0.010452951*_S13_YEAR_BIRTH;
34472     +0.2338771409*_S9_NUMWEBVISITSMONTH+
34473     +0.0170511776*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 5 at stage 6;
34474     +0.0109890941*_S11_RECENCY+
34475     +-0.115442279*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34476     +-0.010452951*_S13_YEAR_BIRTH;
34477     +/*----------------------------------------------*/
34478     +* Component 5 at stage 6;
34479     +/*----------------------------------------------*/
34480     +;
34481     +_SPRIN65=
34482     +0.1311533864*Marital_Status_1_+
34483     +0.0462721094*Marital_Status_2_+
34484     +-0.187574538*Marital_Status_3_+
34485     +-0.032460344*Marital_Status_4_+
34486     +0.1682450848*Marital_Status_5_+
34487     +-0.025261674*_S1_ACCEPTEDCMPTOTAL+
34488     +0.1770010525*_S2_FRQ+
34489     +0.1068447763*_S3_INCOME+
34490     +0.0282279128*_S4_MNT+
34491     +0.1511903934*_S5_MNTGOLDPRODS+
34492     +-0.116748849*_S6_MNTMEATPRODUCTS+
34493     +0.0221938124*_S7_NUMCATALOGPURCHASES+
34494     +0.4952296943*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN65= 0.1311533864*Marital_Status_1_+ 0.0462721094*Marital_Status_2_+ -0.187574538*Marital_Status_3_+ -0.032460344*Marital_Status_4_+ 0.1682450848*Marital_Status_5_+ -0.025261674*_S1_ACCEPTEDCMPTOTAL+ 0.1770010525*_S2_FRQ+
0.1068447763*_S3_INCOME+ 0.0282279128*_S4_MNT+ 0.1511903934*_S5_MNTGOLDPRODS+ -0.116748849*_S6_MNTMEATPRODUCTS+ 0.0221938124*_S7_NUMCATALOGPURCHASES+ 0.4952296943*_S8_NUMDEALSPURCHASES+ 0.138103439*_S9_NUMWEBVISITSMONTH+ -0.055698032*_S10_RFMSTAT+
0.0890909209*_S11_RECENCY+ 0.5881740989*_S12_TEENHOME+ -0.462210566*_S13_YEAR_BIRTH;
34495     +0.138103439*_S9_NUMWEBVISITSMONTH+
34496     +-0.055698032*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 6 at stage 6;
34497     +0.0890909209*_S11_RECENCY+
34498     +0.5881740989*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34499     +-0.462210566*_S13_YEAR_BIRTH;
34500     +/*----------------------------------------------*/
34501     +* Component 6 at stage 6;
34502     +/*----------------------------------------------*/
34503     +;
34504     +_SPRIN66=
34505     +0.1626998739*Marital_Status_1_+
34506     +-0.79909083*Marital_Status_2_+
34507     +0.3388553128*Marital_Status_3_+
34508     +0.4475609678*Marital_Status_4_+
34509     +0.0873267528*Marital_Status_5_+
34510     +-0.062015793*_S1_ACCEPTEDCMPTOTAL+
34511     +0.0140882535*_S2_FRQ+
34512     +-0.006689305*_S3_INCOME+
34513     +0.0052515467*_S4_MNT+
34514     +0.0129809178*_S5_MNTGOLDPRODS+
34515     +-0.008873172*_S6_MNTMEATPRODUCTS+
34516     +0.008355514*_S7_NUMCATALOGPURCHASES+
34517     +0.0225316639*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN66= 0.1626998739*Marital_Status_1_+ -0.79909083*Marital_Status_2_+ 0.3388553128*Marital_Status_3_+ 0.4475609678*Marital_Status_4_+ 0.0873267528*Marital_Status_5_+ -0.062015793*_S1_ACCEPTEDCMPTOTAL+ 0.0140882535*_S2_FRQ+
-0.006689305*_S3_INCOME+ 0.0052515467*_S4_MNT+ 0.0129809178*_S5_MNTGOLDPRODS+ -0.008873172*_S6_MNTMEATPRODUCTS+ 0.008355514*_S7_NUMCATALOGPURCHASES+ 0.0225316639*_S8_NUMDEALSPURCHASES+ 0.0094785602*_S9_NUMWEBVISITSMONTH+ -0.010018638*_S10_RFMSTAT+
-0.018714474*_S11_RECENCY+ 0.0581880557*_S12_TEENHOME+ -0.057923258*_S13_YEAR_BIRTH;
34518     +0.0094785602*_S9_NUMWEBVISITSMONTH+
MPRINT(EM_DIAGRAM):   ;
34519     +-0.010018638*_S10_RFMSTAT+
34520     +-0.018714474*_S11_RECENCY+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 7;
34521     +0.0581880557*_S12_TEENHOME+
34522     +-0.057923258*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   ;
34523     +;
34524     +/*----------------------------------------------*/
34525     +* Component 1 at stage 7;
34526     +/*----------------------------------------------*/
34527     +;
34528     +_SPRIN71=
34529     +-0.015105189*Marital_Status_1_+
34530     +0.0118862269*Marital_Status_2_+
34531     +-0.011343113*Marital_Status_3_+
34532     +0.0045776631*Marital_Status_4_+
34533     +0.0083717862*Marital_Status_5_+
34534     +0.0497052612*_S1_ACCEPTEDCMPTOTAL+
34535     +-0.32469371*_S2_FRQ+
34536     +-0.570505038*_S3_INCOME+
34537     +-0.051638052*_S4_MNT+
34538     +-0.000179679*_S5_MNTGOLDPRODS+
34539     +0.3305454324*_S6_MNTMEATPRODUCTS+
34540     +0.6167274273*_S7_NUMCATALOGPURCHASES+
34541     +-0.009076585*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN71= -0.015105189*Marital_Status_1_+ 0.0118862269*Marital_Status_2_+ -0.011343113*Marital_Status_3_+ 0.0045776631*Marital_Status_4_+ 0.0083717862*Marital_Status_5_+ 0.0497052612*_S1_ACCEPTEDCMPTOTAL+ -0.32469371*_S2_FRQ+
-0.570505038*_S3_INCOME+ -0.051638052*_S4_MNT+ -0.000179679*_S5_MNTGOLDPRODS+ 0.3305454324*_S6_MNTMEATPRODUCTS+ 0.6167274273*_S7_NUMCATALOGPURCHASES+ -0.009076585*_S8_NUMDEALSPURCHASES+ -0.05161006*_S9_NUMWEBVISITSMONTH+ -0.009614781*_S10_RFMSTAT+
-0.006477144*_S11_RECENCY+ 0.2662240883*_S12_TEENHOME+ 0.0017486593*_S13_YEAR_BIRTH;
34542     +-0.05161006*_S9_NUMWEBVISITSMONTH+
34543     +-0.009614781*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 7;
34544     +-0.006477144*_S11_RECENCY+
34545     +0.2662240883*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34546     +0.0017486593*_S13_YEAR_BIRTH;
34547     +/*----------------------------------------------*/
34548     +* Component 2 at stage 7;
34549     +/*----------------------------------------------*/
34550     +;
34551     +_SPRIN72=
34552     +-0.000232895*Marital_Status_1_+
34553     +-0.004880779*Marital_Status_2_+
34554     +0.0006083294*Marital_Status_3_+
34555     +0.0082855013*Marital_Status_4_+
34556     +-0.007529226*Marital_Status_5_+
34557     +-0.066896457*_S1_ACCEPTEDCMPTOTAL+
34558     +-0.584544523*_S2_FRQ+
34559     +0.6315682517*_S3_INCOME+
34560     +-0.173384958*_S4_MNT+
34561     +0.0199300933*_S5_MNTGOLDPRODS+
34562     +-0.065996201*_S6_MNTMEATPRODUCTS+
34563     +0.3742607477*_S7_NUMCATALOGPURCHASES+
34564     +0.1066403357*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN72= -0.000232895*Marital_Status_1_+ -0.004880779*Marital_Status_2_+ 0.0006083294*Marital_Status_3_+ 0.0082855013*Marital_Status_4_+ -0.007529226*Marital_Status_5_+ -0.066896457*_S1_ACCEPTEDCMPTOTAL+ -0.584544523*_S2_FRQ+
0.6315682517*_S3_INCOME+ -0.173384958*_S4_MNT+ 0.0199300933*_S5_MNTGOLDPRODS+ -0.065996201*_S6_MNTMEATPRODUCTS+ 0.3742607477*_S7_NUMCATALOGPURCHASES+ 0.1066403357*_S8_NUMDEALSPURCHASES+ 0.2338771409*_S9_NUMWEBVISITSMONTH+ 0.0170511776*_S10_RFMSTAT+
0.0109890941*_S11_RECENCY+ -0.115442279*_S12_TEENHOME+ -0.010452951*_S13_YEAR_BIRTH;
34565     +0.2338771409*_S9_NUMWEBVISITSMONTH+
34566     +0.0170511776*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 7;
34567     +0.0109890941*_S11_RECENCY+
34568     +-0.115442279*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34569     +-0.010452951*_S13_YEAR_BIRTH;
34570     +/*----------------------------------------------*/
34571     +* Component 3 at stage 7;
34572     +/*----------------------------------------------*/
34573     +;
34574     +_SPRIN73=
34575     +0.0062762631*Marital_Status_1_+
34576     +-0.010875887*Marital_Status_2_+
34577     +-0.001735199*Marital_Status_3_+
34578     +0.003215339*Marital_Status_4_+
34579     +0.0164402875*Marital_Status_5_+
34580     +0.0819675329*_S1_ACCEPTEDCMPTOTAL+
34581     +-0.462873318*_S2_FRQ+
34582     +0.0469918013*_S3_INCOME+
34583     +0.2304506395*_S4_MNT+
34584     +0.0977211562*_S5_MNTGOLDPRODS+
34585     +0.5904759878*_S6_MNTMEATPRODUCTS+
34586     +-0.545547887*_S7_NUMCATALOGPURCHASES+
34587     +0.2139463159*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN73= 0.0062762631*Marital_Status_1_+ -0.010875887*Marital_Status_2_+ -0.001735199*Marital_Status_3_+ 0.003215339*Marital_Status_4_+ 0.0164402875*Marital_Status_5_+ 0.0819675329*_S1_ACCEPTEDCMPTOTAL+ -0.462873318*_S2_FRQ+
0.0469918013*_S3_INCOME+ 0.2304506395*_S4_MNT+ 0.0977211562*_S5_MNTGOLDPRODS+ 0.5904759878*_S6_MNTMEATPRODUCTS+ -0.545547887*_S7_NUMCATALOGPURCHASES+ 0.2139463159*_S8_NUMDEALSPURCHASES+ -0.117021636*_S9_NUMWEBVISITSMONTH+ 0.0161900995*_S10_RFMSTAT+
0.028974563*_S11_RECENCY+ 0.0823235285*_S12_TEENHOME+ 0.0096368551*_S13_YEAR_BIRTH;
34588     +-0.117021636*_S9_NUMWEBVISITSMONTH+
34589     +0.0161900995*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 4 at stage 7;
34590     +0.028974563*_S11_RECENCY+
34591     +0.0823235285*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34592     +0.0096368551*_S13_YEAR_BIRTH;
34593     +/*----------------------------------------------*/
34594     +* Component 4 at stage 7;
34595     +/*----------------------------------------------*/
34596     +;
34597     +_SPRIN74=
34598     +0.7201014863*Marital_Status_1_+
34599     +-0.039414952*Marital_Status_2_+
34600     +-0.261027185*Marital_Status_3_+
34601     +-0.002570027*Marital_Status_4_+
34602     +-0.517989138*Marital_Status_5_+
34603     +0.1032358936*_S1_ACCEPTEDCMPTOTAL+
34604     +0.0293938239*_S2_FRQ+
34605     +-0.060123348*_S3_INCOME+
34606     +0.0306908632*_S4_MNT+
34607     +0.0931751568*_S5_MNTGOLDPRODS+
34608     +0.0016465853*_S6_MNTMEATPRODUCTS+
34609     +0.0174804568*_S7_NUMCATALOGPURCHASES+
34610     +0.1233541944*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN74= 0.7201014863*Marital_Status_1_+ -0.039414952*Marital_Status_2_+ -0.261027185*Marital_Status_3_+ -0.002570027*Marital_Status_4_+ -0.517989138*Marital_Status_5_+ 0.1032358936*_S1_ACCEPTEDCMPTOTAL+ 0.0293938239*_S2_FRQ+
-0.060123348*_S3_INCOME+ 0.0306908632*_S4_MNT+ 0.0931751568*_S5_MNTGOLDPRODS+ 0.0016465853*_S6_MNTMEATPRODUCTS+ 0.0174804568*_S7_NUMCATALOGPURCHASES+ 0.1233541944*_S8_NUMDEALSPURCHASES+ 0.1518084321*_S9_NUMWEBVISITSMONTH+ 0.1449751106*_S10_RFMSTAT+
-0.133344887*_S11_RECENCY+ -0.066595833*_S12_TEENHOME+ 0.1920463047*_S13_YEAR_BIRTH;
34611     +0.1518084321*_S9_NUMWEBVISITSMONTH+
34612     +0.1449751106*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 5 at stage 7;
34613     +-0.133344887*_S11_RECENCY+
34614     +-0.066595833*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34615     +0.1920463047*_S13_YEAR_BIRTH;
34616     +/*----------------------------------------------*/
34617     +* Component 5 at stage 7;
34618     +/*----------------------------------------------*/
34619     +;
34620     +_SPRIN75=
34621     +0.0259027139*Marital_Status_1_+
34622     +-0.023219643*Marital_Status_2_+
34623     +-0.048071754*Marital_Status_3_+
34624     +0.0104245904*Marital_Status_4_+
34625     +0.111093904*Marital_Status_5_+
34626     +0.1029306769*_S1_ACCEPTEDCMPTOTAL+
34627     +-0.104590704*_S2_FRQ+
34628     +0.0992739498*_S3_INCOME+
34629     +-0.126525705*_S4_MNT+
34630     +0.1755348321*_S5_MNTGOLDPRODS+
34631     +-0.219398621*_S6_MNTMEATPRODUCTS+
34632     +-0.086592319*_S7_NUMCATALOGPURCHASES+
34633     +-0.25424186*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN75= 0.0259027139*Marital_Status_1_+ -0.023219643*Marital_Status_2_+ -0.048071754*Marital_Status_3_+ 0.0104245904*Marital_Status_4_+ 0.111093904*Marital_Status_5_+ 0.1029306769*_S1_ACCEPTEDCMPTOTAL+ -0.104590704*_S2_FRQ+
0.0992739498*_S3_INCOME+ -0.126525705*_S4_MNT+ 0.1755348321*_S5_MNTGOLDPRODS+ -0.219398621*_S6_MNTMEATPRODUCTS+ -0.086592319*_S7_NUMCATALOGPURCHASES+ -0.25424186*_S8_NUMDEALSPURCHASES+ -0.203846899*_S9_NUMWEBVISITSMONTH+ 0.4677013509*_S10_RFMSTAT+
0.3215691362*_S11_RECENCY+ 0.4850182787*_S12_TEENHOME+ 0.431969361*_S13_YEAR_BIRTH;
34634     +-0.203846899*_S9_NUMWEBVISITSMONTH+
34635     +0.4677013509*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 6 at stage 7;
34636     +0.3215691362*_S11_RECENCY+
34637     +0.4850182787*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34638     +0.431969361*_S13_YEAR_BIRTH;
34639     +/*----------------------------------------------*/
34640     +* Component 6 at stage 7;
34641     +/*----------------------------------------------*/
34642     +;
34643     +_SPRIN76=
34644     +-0.028442983*Marital_Status_1_+
34645     +0.0140975391*Marital_Status_2_+
34646     +0.0577022767*Marital_Status_3_+
34647     +-0.012976764*Marital_Status_4_+
34648     +-0.097279799*Marital_Status_5_+
34649     +-0.217622847*_S1_ACCEPTEDCMPTOTAL+
34650     +-0.036465716*_S2_FRQ+
34651     +-0.193573793*_S3_INCOME+
34652     +0.0437226825*_S4_MNT+
34653     +0.1533854572*_S5_MNTGOLDPRODS+
34654     +0.0429013274*_S6_MNTMEATPRODUCTS+
34655     +-0.035369721*_S7_NUMCATALOGPURCHASES+
34656     +-0.091546766*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN76= -0.028442983*Marital_Status_1_+ 0.0140975391*Marital_Status_2_+ 0.0577022767*Marital_Status_3_+ -0.012976764*Marital_Status_4_+ -0.097279799*Marital_Status_5_+ -0.217622847*_S1_ACCEPTEDCMPTOTAL+ -0.036465716*_S2_FRQ+
-0.193573793*_S3_INCOME+ 0.0437226825*_S4_MNT+ 0.1533854572*_S5_MNTGOLDPRODS+ 0.0429013274*_S6_MNTMEATPRODUCTS+ -0.035369721*_S7_NUMCATALOGPURCHASES+ -0.091546766*_S8_NUMDEALSPURCHASES+ 0.269932798*_S9_NUMWEBVISITSMONTH+ 0.5456202875*_S10_RFMSTAT+
0.4592194915*_S11_RECENCY+ -0.294927889*_S12_TEENHOME+ -0.441054809*_S13_YEAR_BIRTH;
34657     +0.269932798*_S9_NUMWEBVISITSMONTH+
MPRINT(EM_DIAGRAM):   ;
34658     +0.5456202875*_S10_RFMSTAT+
34659     +0.4592194915*_S11_RECENCY+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 8;
34660     +-0.294927889*_S12_TEENHOME+
34661     +-0.441054809*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   ;
34662     +;
34663     +/*----------------------------------------------*/
34664     +* Component 1 at stage 8;
34665     +/*----------------------------------------------*/
34666     +;
34667     +_SPRIN81=
34668     +0.0259027139*Marital_Status_1_+
34669     +-0.023219643*Marital_Status_2_+
34670     +-0.048071754*Marital_Status_3_+
34671     +0.0104245904*Marital_Status_4_+
34672     +0.111093904*Marital_Status_5_+
34673     +0.1029306769*_S1_ACCEPTEDCMPTOTAL+
34674     +-0.104590704*_S2_FRQ+
34675     +0.0992739498*_S3_INCOME+
34676     +-0.126525705*_S4_MNT+
34677     +0.1755348321*_S5_MNTGOLDPRODS+
34678     +-0.219398621*_S6_MNTMEATPRODUCTS+
34679     +-0.086592319*_S7_NUMCATALOGPURCHASES+
34680     +-0.25424186*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN81= 0.0259027139*Marital_Status_1_+ -0.023219643*Marital_Status_2_+ -0.048071754*Marital_Status_3_+ 0.0104245904*Marital_Status_4_+ 0.111093904*Marital_Status_5_+ 0.1029306769*_S1_ACCEPTEDCMPTOTAL+ -0.104590704*_S2_FRQ+
0.0992739498*_S3_INCOME+ -0.126525705*_S4_MNT+ 0.1755348321*_S5_MNTGOLDPRODS+ -0.219398621*_S6_MNTMEATPRODUCTS+ -0.086592319*_S7_NUMCATALOGPURCHASES+ -0.25424186*_S8_NUMDEALSPURCHASES+ -0.203846899*_S9_NUMWEBVISITSMONTH+ 0.4677013509*_S10_RFMSTAT+
0.3215691362*_S11_RECENCY+ 0.4850182787*_S12_TEENHOME+ 0.431969361*_S13_YEAR_BIRTH;
34681     +-0.203846899*_S9_NUMWEBVISITSMONTH+
34682     +0.4677013509*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 8;
34683     +0.3215691362*_S11_RECENCY+
34684     +0.4850182787*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34685     +0.431969361*_S13_YEAR_BIRTH;
34686     +/*----------------------------------------------*/
34687     +* Component 2 at stage 8;
34688     +/*----------------------------------------------*/
34689     +;
34690     +_SPRIN82=
34691     +-0.015105189*Marital_Status_1_+
34692     +0.0118862269*Marital_Status_2_+
34693     +-0.011343113*Marital_Status_3_+
34694     +0.0045776631*Marital_Status_4_+
34695     +0.0083717862*Marital_Status_5_+
34696     +0.0497052612*_S1_ACCEPTEDCMPTOTAL+
34697     +-0.32469371*_S2_FRQ+
34698     +-0.570505038*_S3_INCOME+
34699     +-0.051638052*_S4_MNT+
34700     +-0.000179679*_S5_MNTGOLDPRODS+
34701     +0.3305454324*_S6_MNTMEATPRODUCTS+
34702     +0.6167274273*_S7_NUMCATALOGPURCHASES+
34703     +-0.009076585*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN82= -0.015105189*Marital_Status_1_+ 0.0118862269*Marital_Status_2_+ -0.011343113*Marital_Status_3_+ 0.0045776631*Marital_Status_4_+ 0.0083717862*Marital_Status_5_+ 0.0497052612*_S1_ACCEPTEDCMPTOTAL+ -0.32469371*_S2_FRQ+
-0.570505038*_S3_INCOME+ -0.051638052*_S4_MNT+ -0.000179679*_S5_MNTGOLDPRODS+ 0.3305454324*_S6_MNTMEATPRODUCTS+ 0.6167274273*_S7_NUMCATALOGPURCHASES+ -0.009076585*_S8_NUMDEALSPURCHASES+ -0.05161006*_S9_NUMWEBVISITSMONTH+ -0.009614781*_S10_RFMSTAT+
-0.006477144*_S11_RECENCY+ 0.2662240883*_S12_TEENHOME+ 0.0017486593*_S13_YEAR_BIRTH;
34704     +-0.05161006*_S9_NUMWEBVISITSMONTH+
34705     +-0.009614781*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 8;
34706     +-0.006477144*_S11_RECENCY+
34707     +0.2662240883*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34708     +0.0017486593*_S13_YEAR_BIRTH;
34709     +/*----------------------------------------------*/
34710     +* Component 3 at stage 8;
34711     +/*----------------------------------------------*/
34712     +;
34713     +_SPRIN83=
34714     +-0.000232895*Marital_Status_1_+
34715     +-0.004880779*Marital_Status_2_+
34716     +0.0006083294*Marital_Status_3_+
34717     +0.0082855013*Marital_Status_4_+
34718     +-0.007529226*Marital_Status_5_+
34719     +-0.066896457*_S1_ACCEPTEDCMPTOTAL+
34720     +-0.584544523*_S2_FRQ+
34721     +0.6315682517*_S3_INCOME+
34722     +-0.173384958*_S4_MNT+
34723     +0.0199300933*_S5_MNTGOLDPRODS+
34724     +-0.065996201*_S6_MNTMEATPRODUCTS+
34725     +0.3742607477*_S7_NUMCATALOGPURCHASES+
34726     +0.1066403357*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN83= -0.000232895*Marital_Status_1_+ -0.004880779*Marital_Status_2_+ 0.0006083294*Marital_Status_3_+ 0.0082855013*Marital_Status_4_+ -0.007529226*Marital_Status_5_+ -0.066896457*_S1_ACCEPTEDCMPTOTAL+ -0.584544523*_S2_FRQ+
0.6315682517*_S3_INCOME+ -0.173384958*_S4_MNT+ 0.0199300933*_S5_MNTGOLDPRODS+ -0.065996201*_S6_MNTMEATPRODUCTS+ 0.3742607477*_S7_NUMCATALOGPURCHASES+ 0.1066403357*_S8_NUMDEALSPURCHASES+ 0.2338771409*_S9_NUMWEBVISITSMONTH+ 0.0170511776*_S10_RFMSTAT+
0.0109890941*_S11_RECENCY+ -0.115442279*_S12_TEENHOME+ -0.010452951*_S13_YEAR_BIRTH;
34727     +0.2338771409*_S9_NUMWEBVISITSMONTH+
34728     +0.0170511776*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 4 at stage 8;
34729     +0.0109890941*_S11_RECENCY+
34730     +-0.115442279*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34731     +-0.010452951*_S13_YEAR_BIRTH;
34732     +/*----------------------------------------------*/
34733     +* Component 4 at stage 8;
34734     +/*----------------------------------------------*/
34735     +;
34736     +_SPRIN84=
34737     +0.0062762631*Marital_Status_1_+
34738     +-0.010875887*Marital_Status_2_+
34739     +-0.001735199*Marital_Status_3_+
34740     +0.003215339*Marital_Status_4_+
34741     +0.0164402875*Marital_Status_5_+
34742     +0.0819675329*_S1_ACCEPTEDCMPTOTAL+
34743     +-0.462873318*_S2_FRQ+
34744     +0.0469918013*_S3_INCOME+
34745     +0.2304506395*_S4_MNT+
34746     +0.0977211562*_S5_MNTGOLDPRODS+
34747     +0.5904759878*_S6_MNTMEATPRODUCTS+
34748     +-0.545547887*_S7_NUMCATALOGPURCHASES+
34749     +0.2139463159*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN84= 0.0062762631*Marital_Status_1_+ -0.010875887*Marital_Status_2_+ -0.001735199*Marital_Status_3_+ 0.003215339*Marital_Status_4_+ 0.0164402875*Marital_Status_5_+ 0.0819675329*_S1_ACCEPTEDCMPTOTAL+ -0.462873318*_S2_FRQ+
0.0469918013*_S3_INCOME+ 0.2304506395*_S4_MNT+ 0.0977211562*_S5_MNTGOLDPRODS+ 0.5904759878*_S6_MNTMEATPRODUCTS+ -0.545547887*_S7_NUMCATALOGPURCHASES+ 0.2139463159*_S8_NUMDEALSPURCHASES+ -0.117021636*_S9_NUMWEBVISITSMONTH+ 0.0161900995*_S10_RFMSTAT+
0.028974563*_S11_RECENCY+ 0.0823235285*_S12_TEENHOME+ 0.0096368551*_S13_YEAR_BIRTH;
34750     +-0.117021636*_S9_NUMWEBVISITSMONTH+
34751     +0.0161900995*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 5 at stage 8;
34752     +0.028974563*_S11_RECENCY+
34753     +0.0823235285*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34754     +0.0096368551*_S13_YEAR_BIRTH;
34755     +/*----------------------------------------------*/
34756     +* Component 5 at stage 8;
34757     +/*----------------------------------------------*/
34758     +;
34759     +_SPRIN85=
34760     +0.0251132215*Marital_Status_1_+
34761     +-0.025395883*Marital_Status_2_+
34762     +-0.017975806*Marital_Status_3_+
34763     +-0.010924123*Marital_Status_4_+
34764     +0.0991213763*Marital_Status_5_+
34765     +0.001222243*_S1_ACCEPTEDCMPTOTAL+
34766     +0.1550412507*_S2_FRQ+
34767     +0.0627898484*_S3_INCOME+
34768     +0.0644523337*_S4_MNT+
34769     +-0.783639627*_S5_MNTGOLDPRODS+
34770     +0.1567513421*_S6_MNTMEATPRODUCTS+
34771     +0.0854886204*_S7_NUMCATALOGPURCHASES+
34772     +0.3566620158*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN85= 0.0251132215*Marital_Status_1_+ -0.025395883*Marital_Status_2_+ -0.017975806*Marital_Status_3_+ -0.010924123*Marital_Status_4_+ 0.0991213763*Marital_Status_5_+ 0.001222243*_S1_ACCEPTEDCMPTOTAL+ 0.1550412507*_S2_FRQ+
0.0627898484*_S3_INCOME+ 0.0644523337*_S4_MNT+ -0.783639627*_S5_MNTGOLDPRODS+ 0.1567513421*_S6_MNTMEATPRODUCTS+ 0.0854886204*_S7_NUMCATALOGPURCHASES+ 0.3566620158*_S8_NUMDEALSPURCHASES+ 0.0492555841*_S9_NUMWEBVISITSMONTH+ 0.243420967*_S10_RFMSTAT+
0.2657921379*_S11_RECENCY+ -0.022914665*_S12_TEENHOME+ 0.2242595425*_S13_YEAR_BIRTH;
34773     +0.0492555841*_S9_NUMWEBVISITSMONTH+
34774     +0.243420967*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 6 at stage 8;
34775     +0.2657921379*_S11_RECENCY+
34776     +-0.022914665*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34777     +0.2242595425*_S13_YEAR_BIRTH;
34778     +/*----------------------------------------------*/
34779     +* Component 6 at stage 8;
34780     +/*----------------------------------------------*/
34781     +;
34782     +_SPRIN86=
34783     +0.1626998739*Marital_Status_1_+
34784     +-0.79909083*Marital_Status_2_+
34785     +0.3388553128*Marital_Status_3_+
34786     +0.4475609678*Marital_Status_4_+
34787     +0.0873267528*Marital_Status_5_+
34788     +-0.062015793*_S1_ACCEPTEDCMPTOTAL+
34789     +0.0140882535*_S2_FRQ+
34790     +-0.006689305*_S3_INCOME+
34791     +0.0052515467*_S4_MNT+
34792     +0.0129809178*_S5_MNTGOLDPRODS+
34793     +-0.008873172*_S6_MNTMEATPRODUCTS+
34794     +0.008355514*_S7_NUMCATALOGPURCHASES+
34795     +0.0225316639*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN86= 0.1626998739*Marital_Status_1_+ -0.79909083*Marital_Status_2_+ 0.3388553128*Marital_Status_3_+ 0.4475609678*Marital_Status_4_+ 0.0873267528*Marital_Status_5_+ -0.062015793*_S1_ACCEPTEDCMPTOTAL+ 0.0140882535*_S2_FRQ+
-0.006689305*_S3_INCOME+ 0.0052515467*_S4_MNT+ 0.0129809178*_S5_MNTGOLDPRODS+ -0.008873172*_S6_MNTMEATPRODUCTS+ 0.008355514*_S7_NUMCATALOGPURCHASES+ 0.0225316639*_S8_NUMDEALSPURCHASES+ 0.0094785602*_S9_NUMWEBVISITSMONTH+ -0.010018638*_S10_RFMSTAT+
-0.018714474*_S11_RECENCY+ 0.0581880557*_S12_TEENHOME+ -0.057923258*_S13_YEAR_BIRTH;
34796     +0.0094785602*_S9_NUMWEBVISITSMONTH+
MPRINT(EM_DIAGRAM):   ;
34797     +-0.010018638*_S10_RFMSTAT+
34798     +-0.018714474*_S11_RECENCY+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 9;
34799     +0.0581880557*_S12_TEENHOME+
34800     +-0.057923258*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   ;
34801     +;
34802     +/*----------------------------------------------*/
34803     +* Component 1 at stage 9;
34804     +/*----------------------------------------------*/
34805     +;
34806     +_SPRIN91=
34807     +0.0062762631*Marital_Status_1_+
34808     +-0.010875887*Marital_Status_2_+
34809     +-0.001735199*Marital_Status_3_+
34810     +0.003215339*Marital_Status_4_+
34811     +0.0164402875*Marital_Status_5_+
34812     +0.0819675329*_S1_ACCEPTEDCMPTOTAL+
34813     +-0.462873318*_S2_FRQ+
34814     +0.0469918013*_S3_INCOME+
34815     +0.2304506395*_S4_MNT+
34816     +0.0977211562*_S5_MNTGOLDPRODS+
34817     +0.5904759878*_S6_MNTMEATPRODUCTS+
34818     +-0.545547887*_S7_NUMCATALOGPURCHASES+
34819     +0.2139463159*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN91= 0.0062762631*Marital_Status_1_+ -0.010875887*Marital_Status_2_+ -0.001735199*Marital_Status_3_+ 0.003215339*Marital_Status_4_+ 0.0164402875*Marital_Status_5_+ 0.0819675329*_S1_ACCEPTEDCMPTOTAL+ -0.462873318*_S2_FRQ+
0.0469918013*_S3_INCOME+ 0.2304506395*_S4_MNT+ 0.0977211562*_S5_MNTGOLDPRODS+ 0.5904759878*_S6_MNTMEATPRODUCTS+ -0.545547887*_S7_NUMCATALOGPURCHASES+ 0.2139463159*_S8_NUMDEALSPURCHASES+ -0.117021636*_S9_NUMWEBVISITSMONTH+ 0.0161900995*_S10_RFMSTAT+
0.028974563*_S11_RECENCY+ 0.0823235285*_S12_TEENHOME+ 0.0096368551*_S13_YEAR_BIRTH;
34820     +-0.117021636*_S9_NUMWEBVISITSMONTH+
34821     +0.0161900995*_S10_RFMSTAT+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 9;
34822     +0.028974563*_S11_RECENCY+
34823     +0.0823235285*_S12_TEENHOME+
MPRINT(EM_DIAGRAM):   ;
34824     +0.0096368551*_S13_YEAR_BIRTH;
34825     +/*----------------------------------------------*/
34826     +* Component 2 at stage 9;
34827     +/*----------------------------------------------*/
34828     +;
34829     +_SPRIN92=
34830     +0.10761459*Marital_Status_1_+
34831     +0.0028979951*Marital_Status_2_+
34832     +-0.15064667*Marital_Status_3_+
34833     +-0.043533602*Marital_Status_4_+
34834     +0.272779799*Marital_Status_5_+
34835     +-0.796500815*_S1_ACCEPTEDCMPTOTAL+
34836     +0.0948384767*_S2_FRQ+
34837     +-0.024901753*_S3_INCOME+
34838     +0.036811217*_S4_MNT+
34839     +0.2470337929*_S5_MNTGOLDPRODS+
34840     +0.1168111721*_S6_MNTMEATPRODUCTS+
34841     +0.0697126712*_S7_NUMCATALOGPURCHASES+
34842     +0.171968035*_S8_NUMDEALSPURCHASES+
MPRINT(EM_DIAGRAM):   _SPRIN92= 0.10761459*Marital_Status_1_+ 0.0028979951*Marital_Status_2_+ -0.15064667*Marital_Status_3_+ -0.043533602*Marital_Status_4_+ 0.272779799*Marital_Status_5_+ -0.796500815*_S1_ACCEPTEDCMPTOTAL+ 0.0948384767*_S2_FRQ+
-0.024901753*_S3_INCOME+ 0.036811217*_S4_MNT+ 0.2470337929*_S5_MNTGOLDPRODS+ 0.1168111721*_S6_MNTMEATPRODUCTS+ 0.0697126712*_S7_NUMCATALOGPURCHASES+ 0.171968035*_S8_NUMDEALSPURCHASES+ -0.102108299*_S9_NUMWEBVISITSMONTH+ -0.022671576*_S10_RFMSTAT+
-0.022630633*_S11_RECENCY+ -0.113962381*_S12_TEENHOME+ 0.3323945855*_S13_YEAR_BIRTH;
34843     +-0.102108299*_S9_NUMWEBVISITSMONTH+
MPRINT(EM_DIAGRAM):   ;
34844     +-0.022671576*_S10_RFMSTAT+
34845     +-0.022630633*_S11_RECENCY+
34846     +-0.113962381*_S12_TEENHOME+
34847     +0.3323945855*_S13_YEAR_BIRTH;
34848     +;
34849     +DROP
34850     +_SPRIN01
34851     +_SPRIN02
34852     +_SPRIN03
34853     +_SPRIN04
34854     +_SPRIN05
34855     +_SPRIN06
34856     +_SPRIN11
34857     +_SPRIN12
34858     +_SPRIN13
34859     +_SPRIN14
34860     +_SPRIN15
34861     +_SPRIN16
34862     +_SPRIN21
34863     +_SPRIN22
34864     +_SPRIN23
34865     +_SPRIN24
34866     +_SPRIN25
34867     +_SPRIN26
34868     +_SPRIN31
34869     +_SPRIN32
34870     +_SPRIN33
34871     +_SPRIN34
34872     +_SPRIN35
34873     +_SPRIN36
34874     +_SPRIN41
34875     +_SPRIN42
34876     +_SPRIN43
34877     +_SPRIN44
34878     +_SPRIN45
34879     +_SPRIN46
34880     +_SPRIN51
34881     +_SPRIN52
34882     +_SPRIN53
34883     +_SPRIN54
34884     +_SPRIN55
34885     +_SPRIN56
34886     +_SPRIN61
34887     +_SPRIN62
34888     +_SPRIN63
34889     +_SPRIN64
34890     +_SPRIN65
34891     +_SPRIN66
34892     +_SPRIN71
34893     +_SPRIN72
34894     +_SPRIN73
34895     +_SPRIN74
34896     +_SPRIN75
34897     +_SPRIN76
34898     +_SPRIN81
34899     +_SPRIN82
34900     +_SPRIN83
34901     +_SPRIN84
MPRINT(EM_DIAGRAM):   DROP _SPRIN01 _SPRIN02 _SPRIN03 _SPRIN04 _SPRIN05 _SPRIN06 _SPRIN11 _SPRIN12 _SPRIN13 _SPRIN14 _SPRIN15 _SPRIN16 _SPRIN21 _SPRIN22 _SPRIN23 _SPRIN24 _SPRIN25 _SPRIN26 _SPRIN31 _SPRIN32 _SPRIN33 _SPRIN34 _SPRIN35 _SPRIN36 _SPRIN41
_SPRIN42 _SPRIN43 _SPRIN44 _SPRIN45 _SPRIN46 _SPRIN51 _SPRIN52 _SPRIN53 _SPRIN54 _SPRIN55 _SPRIN56 _SPRIN61 _SPRIN62 _SPRIN63 _SPRIN64 _SPRIN65 _SPRIN66 _SPRIN71 _SPRIN72 _SPRIN73 _SPRIN74 _SPRIN75 _SPRIN76 _SPRIN81 _SPRIN82 _SPRIN83 _SPRIN84 _SPRIN85
_SPRIN86 _SPRIN91 _SPRIN92 ;
34902     +_SPRIN85
MPRINT(EM_DIAGRAM):   ;
34903     +_SPRIN86
34904     +_SPRIN91
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 0 = SQUARE;
34905     +_SPRIN92
34906     +;
MPRINT(EM_DIAGRAM):   ;
34907     +;
34908     +/**********************************************************/
34909     +* Selected activation function at stage 0 = SQUARE;
34910     +/**********************************************************/
34911     +;
34912     +_YHAT0=2.3051746655
34913     ++(-0.19417747735271+-0.09675674343036*_SPRIN01)*_SPRIN01
34914     ++(-0.73738191586107+0.10241745858513*_SPRIN02)*_SPRIN02
MPRINT(EM_DIAGRAM):   _YHAT0=2.3051746655 +(-0.19417747735271+-0.09675674343036*_SPRIN01)*_SPRIN01 +(-0.73738191586107+0.10241745858513*_SPRIN02)*_SPRIN02 +(0.83980885598055+0.11134826564668*_SPRIN03)*_SPRIN03
+(-0.71440430592942+-0.02156468071721*_SPRIN04)*_SPRIN04 +(0.3888922091179+-0.09102340636711*_SPRIN05)*_SPRIN05 +(-1.72630985278122+0.74459644036963*_SPRIN06)*_SPRIN06 ;
34915     ++(0.83980885598055+0.11134826564668*_SPRIN03)*_SPRIN03
34916     ++(-0.71440430592942+-0.02156468071721*_SPRIN04)*_SPRIN04
MPRINT(EM_DIAGRAM):   if _YHAT0 > 0 then _YHAT0=1/(1+exp(-_YHAT0));
34917     ++(0.3888922091179+-0.09102340636711*_SPRIN05)*_SPRIN05
34918     ++(-1.72630985278122+0.74459644036963*_SPRIN06)*_SPRIN06
MPRINT(EM_DIAGRAM):   else _YHAT0=exp(_YHAT0)/(1+exp(_YHAT0));
34919     +;
MPRINT(EM_DIAGRAM):   ;
34920     +/*--- Target level is binary, take a logistic link function --*/
34921     +if _YHAT0 > 0 then _YHAT0=1/(1+exp(-_YHAT0));
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 1 = SQUARE;
34922     +else _YHAT0=exp(_YHAT0)/(1+exp(_YHAT0));
MPRINT(EM_DIAGRAM):   ;
34923     +;
34924     +/**********************************************************/
34925     +* Selected activation function at stage 1 = SQUARE;
34926     +/**********************************************************/
34927     +;
34928     +_RHAT1=0.0912609475
34929     ++(-0.09414206806686+-0.08955473760048*_SPRIN11)*_SPRIN11
34930     ++(-0.06159600973948+-0.0229773274237*_SPRIN12)*_SPRIN12
MPRINT(EM_DIAGRAM):   _RHAT1=0.0912609475 +(-0.09414206806686+-0.08955473760048*_SPRIN11)*_SPRIN11 +(-0.06159600973948+-0.0229773274237*_SPRIN12)*_SPRIN12 +(-0.03147887768318+-0.00081705200046*_SPRIN13)*_SPRIN13
+(0.02645910500953+-0.00410154704032*_SPRIN14)*_SPRIN14 +(-0.01566048269006+-0.00324215290335*_SPRIN15)*_SPRIN15 +(-0.02908862244111+0.00627165946881*_SPRIN16)*_SPRIN16 ;
34931     ++(-0.03147887768318+-0.00081705200046*_SPRIN13)*_SPRIN13
MPRINT(EM_DIAGRAM):   ;
34932     ++(0.02645910500953+-0.00410154704032*_SPRIN14)*_SPRIN14
34933     ++(-0.01566048269006+-0.00324215290335*_SPRIN15)*_SPRIN15
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 2 = SQUARE;
34934     ++(-0.02908862244111+0.00627165946881*_SPRIN16)*_SPRIN16
34935     +;
MPRINT(EM_DIAGRAM):   ;
34936     +;
34937     +/**********************************************************/
34938     +* Selected activation function at stage 2 = SQUARE;
34939     +/**********************************************************/
34940     +;
34941     +_RHAT2=-0.061139758
34942     ++(0.02738748366125+-0.00830707250435*_SPRIN21)*_SPRIN21
34943     ++(-0.04901368010529+-0.02148094283953*_SPRIN22)*_SPRIN22
MPRINT(EM_DIAGRAM):   _RHAT2=-0.061139758 +(0.02738748366125+-0.00830707250435*_SPRIN21)*_SPRIN21 +(-0.04901368010529+-0.02148094283953*_SPRIN22)*_SPRIN22 +(-0.03353018598261+-0.00886501990858*_SPRIN23)*_SPRIN23
+(-0.01654875556624+-0.00018156660883*_SPRIN24)*_SPRIN24 +(0.00920354282415+0.00148518604673*_SPRIN25)*_SPRIN25 +(-0.00150763273699+0.00559168627378*_SPRIN26)*_SPRIN26 ;
34944     ++(-0.03353018598261+-0.00886501990858*_SPRIN23)*_SPRIN23
MPRINT(EM_DIAGRAM):   ;
34945     ++(-0.01654875556624+-0.00018156660883*_SPRIN24)*_SPRIN24
34946     ++(0.00920354282415+0.00148518604673*_SPRIN25)*_SPRIN25
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 3 = SQUARE;
34947     ++(-0.00150763273699+0.00559168627378*_SPRIN26)*_SPRIN26
34948     +;
MPRINT(EM_DIAGRAM):   ;
34949     +;
34950     +/**********************************************************/
34951     +* Selected activation function at stage 3 = SQUARE;
34952     +/**********************************************************/
34953     +;
34954     +_RHAT3=0.0083373964
34955     ++(0.01481233075223+0.00384015188599*_SPRIN31)*_SPRIN31
34956     ++(-0.0227217190976+-0.00015520748667*_SPRIN32)*_SPRIN32
MPRINT(EM_DIAGRAM):   _RHAT3=0.0083373964 +(0.01481233075223+0.00384015188599*_SPRIN31)*_SPRIN31 +(-0.0227217190976+-0.00015520748667*_SPRIN32)*_SPRIN32 +(0.01573409451527+0.00672324318002*_SPRIN33)*_SPRIN33
+(0.00113614446577+-0.01098354677089*_SPRIN34)*_SPRIN34 +(-0.0052207649963+-0.03254992505232*_SPRIN35)*_SPRIN35 +(0.01531501521437+0.00533283175422*_SPRIN36)*_SPRIN36 ;
34957     ++(0.01573409451527+0.00672324318002*_SPRIN33)*_SPRIN33
MPRINT(EM_DIAGRAM):   ;
34958     ++(0.00113614446577+-0.01098354677089*_SPRIN34)*_SPRIN34
34959     ++(-0.0052207649963+-0.03254992505232*_SPRIN35)*_SPRIN35
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 4 = SQUARE;
34960     ++(0.01531501521437+0.00533283175422*_SPRIN36)*_SPRIN36
34961     +;
MPRINT(EM_DIAGRAM):   ;
34962     +;
34963     +/**********************************************************/
34964     +* Selected activation function at stage 4 = SQUARE;
34965     +/**********************************************************/
34966     +;
34967     +_RHAT4=-0.00554739
34968     ++(-0.01203221160804+0.00005736691618*_SPRIN41)*_SPRIN41
34969     ++(-0.01356612566468+-0.01582620321917*_SPRIN42)*_SPRIN42
MPRINT(EM_DIAGRAM):   _RHAT4=-0.00554739 +(-0.01203221160804+0.00005736691618*_SPRIN41)*_SPRIN41 +(-0.01356612566468+-0.01582620321917*_SPRIN42)*_SPRIN42 +(-0.00838141751483+0.00078082164673*_SPRIN43)*_SPRIN43
+(-0.01280728724481+0.00324363702825*_SPRIN44)*_SPRIN44 +(0.00519289119207+0.00039284356754*_SPRIN45)*_SPRIN45 +(-0.00664404657125+0.00492890774894*_SPRIN46)*_SPRIN46 ;
34970     ++(-0.00838141751483+0.00078082164673*_SPRIN43)*_SPRIN43
MPRINT(EM_DIAGRAM):   ;
34971     ++(-0.01280728724481+0.00324363702825*_SPRIN44)*_SPRIN44
34972     ++(0.00519289119207+0.00039284356754*_SPRIN45)*_SPRIN45
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 5 = COS;
34973     ++(-0.00664404657125+0.00492890774894*_SPRIN46)*_SPRIN46
34974     +;
MPRINT(EM_DIAGRAM):   ;
34975     +;
34976     +/**********************************************************/
34977     +* Selected activation function at stage 5 = COS;
34978     +/**********************************************************/
34979     +;
34980     +_RHAT5=0.6814156602
34981     ++0.52640942147498*COS(0.56447298643238*_SPRIN51*(2/ARCOS(-1)))
34982     ++-0.15653015472306*COS(0.48231868499132*_SPRIN52*(2/ARCOS(-1)))
MPRINT(EM_DIAGRAM):   _RHAT5=0.6814156602 +0.52640942147498*COS(0.56447298643238*_SPRIN51*(2/ARCOS(-1))) +-0.15653015472306*COS(0.48231868499132*_SPRIN52*(2/ARCOS(-1))) +0.6387628420103*COS(0.58539105980677*_SPRIN53*(2/ARCOS(-1)))
+-0.05774639168704*COS(0.52309795290476*_SPRIN54*(2/ARCOS(-1))) +-0.2178611501511*COS(0.00394022714554*_SPRIN55*(2/ARCOS(-1))) +-1.42397576006384*COS(-0.04585038403294*_SPRIN56*(2/ARCOS(-1))) ;
34983     ++0.6387628420103*COS(0.58539105980677*_SPRIN53*(2/ARCOS(-1)))
MPRINT(EM_DIAGRAM):   ;
34984     ++-0.05774639168704*COS(0.52309795290476*_SPRIN54*(2/ARCOS(-1)))
34985     ++-0.2178611501511*COS(0.00394022714554*_SPRIN55*(2/ARCOS(-1)))
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 6 = LOGIST;
34986     ++-1.42397576006384*COS(-0.04585038403294*_SPRIN56*(2/ARCOS(-1)))
34987     +;
MPRINT(EM_DIAGRAM):   ;
34988     +;
34989     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _RHAT6=0.1024244257 ;
34990     +* Selected activation function at stage 6 = LOGIST;
34991     +/**********************************************************/
MPRINT(EM_DIAGRAM):   if -(-0.36028947353548*_SPRIN61) <= 0 then _tmpLogit=1/(1+exp(-(-0.36028947353548*_SPRIN61)));
34992     +;
34993     +_RHAT6=0.1024244257
34994     +;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-0.36028947353548*_SPRIN61)) /(1+exp((-0.36028947353548*_SPRIN61)));
34995     +if -(-0.36028947353548*_SPRIN61) <= 0
MPRINT(EM_DIAGRAM):   _RHAT6=_RHAT6+0.0595045685*_tmpLogit;
34996     +then _tmpLogit=1/(1+exp(-(-0.36028947353548*_SPRIN61)));
34997     +else _tmpLogit=exp((-0.36028947353548*_SPRIN61))
MPRINT(EM_DIAGRAM):   if -(1.44518407488071*_SPRIN62) <= 0 then _tmpLogit=1/(1+exp(-(1.44518407488071*_SPRIN62)));
34998     +/(1+exp((-0.36028947353548*_SPRIN61)));
34999     +_RHAT6=_RHAT6+0.0595045685*_tmpLogit;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((1.44518407488071*_SPRIN62)) /(1+exp((1.44518407488071*_SPRIN62)));
35000     +if -(1.44518407488071*_SPRIN62) <= 0
MPRINT(EM_DIAGRAM):   _RHAT6=_RHAT6+-0.095204136*_tmpLogit;
35001     +then _tmpLogit=1/(1+exp(-(1.44518407488071*_SPRIN62)));
35002     +else _tmpLogit=exp((1.44518407488071*_SPRIN62))
MPRINT(EM_DIAGRAM):   if -(-0.03345485179207*_SPRIN63) <= 0 then _tmpLogit=1/(1+exp(-(-0.03345485179207*_SPRIN63)));
35003     +/(1+exp((1.44518407488071*_SPRIN62)));
35004     +_RHAT6=_RHAT6+-0.095204136*_tmpLogit;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-0.03345485179207*_SPRIN63)) /(1+exp((-0.03345485179207*_SPRIN63)));
35005     +if -(-0.03345485179207*_SPRIN63) <= 0
MPRINT(EM_DIAGRAM):   _RHAT6=_RHAT6+-0.095059898*_tmpLogit;
35006     +then _tmpLogit=1/(1+exp(-(-0.03345485179207*_SPRIN63)));
35007     +else _tmpLogit=exp((-0.03345485179207*_SPRIN63))
MPRINT(EM_DIAGRAM):   if -(-0.01545111237618*_SPRIN64) <= 0 then _tmpLogit=1/(1+exp(-(-0.01545111237618*_SPRIN64)));
35008     +/(1+exp((-0.03345485179207*_SPRIN63)));
35009     +_RHAT6=_RHAT6+-0.095059898*_tmpLogit;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-0.01545111237618*_SPRIN64)) /(1+exp((-0.01545111237618*_SPRIN64)));
35010     +if -(-0.01545111237618*_SPRIN64) <= 0
MPRINT(EM_DIAGRAM):   _RHAT6=_RHAT6+0.1046933746*_tmpLogit;
35011     +then _tmpLogit=1/(1+exp(-(-0.01545111237618*_SPRIN64)));
35012     +else _tmpLogit=exp((-0.01545111237618*_SPRIN64))
MPRINT(EM_DIAGRAM):   if -(-0.12187454464049*_SPRIN65) <= 0 then _tmpLogit=1/(1+exp(-(-0.12187454464049*_SPRIN65)));
35013     +/(1+exp((-0.01545111237618*_SPRIN64)));
35014     +_RHAT6=_RHAT6+0.1046933746*_tmpLogit;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-0.12187454464049*_SPRIN65)) /(1+exp((-0.12187454464049*_SPRIN65)));
35015     +if -(-0.12187454464049*_SPRIN65) <= 0
MPRINT(EM_DIAGRAM):   _RHAT6=_RHAT6+-0.109170043*_tmpLogit;
35016     +then _tmpLogit=1/(1+exp(-(-0.12187454464049*_SPRIN65)));
35017     +else _tmpLogit=exp((-0.12187454464049*_SPRIN65))
MPRINT(EM_DIAGRAM):   if -(0.09098922417204*_SPRIN66) <= 0 then _tmpLogit=1/(1+exp(-(0.09098922417204*_SPRIN66)));
35018     +/(1+exp((-0.12187454464049*_SPRIN65)));
35019     +_RHAT6=_RHAT6+-0.109170043*_tmpLogit;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((0.09098922417204*_SPRIN66)) /(1+exp((0.09098922417204*_SPRIN66)));
35020     +if -(0.09098922417204*_SPRIN66) <= 0
MPRINT(EM_DIAGRAM):   _RHAT6=_RHAT6+-0.095013123*_tmpLogit;
35021     +then _tmpLogit=1/(1+exp(-(0.09098922417204*_SPRIN66)));
MPRINT(EM_DIAGRAM):   ;
35022     +else _tmpLogit=exp((0.09098922417204*_SPRIN66))
MPRINT(EM_DIAGRAM):   ;
35023     +/(1+exp((0.09098922417204*_SPRIN66)));
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 7 = SQUARE;
35024     +_RHAT6=_RHAT6+-0.095013123*_tmpLogit;
35025     +;
MPRINT(EM_DIAGRAM):   ;
35026     +;
35027     +/**********************************************************/
35028     +* Selected activation function at stage 7 = SQUARE;
35029     +/**********************************************************/
35030     +;
35031     +_RHAT7=-0.000880203
35032     ++(-0.00965050649163+0.00858904968641*_SPRIN71)*_SPRIN71
35033     ++(-0.00955350123449+-0.01461149286314*_SPRIN72)*_SPRIN72
MPRINT(EM_DIAGRAM):   _RHAT7=-0.000880203 +(-0.00965050649163+0.00858904968641*_SPRIN71)*_SPRIN71 +(-0.00955350123449+-0.01461149286314*_SPRIN72)*_SPRIN72 +(-0.01017810368788+0.00291428753593*_SPRIN73)*_SPRIN73
+(-0.00217156751647+0.00037190508221*_SPRIN74)*_SPRIN74 +(0.00117674972917+0.00203212475874*_SPRIN75)*_SPRIN75 +(0.00015660369416+-0.00280883926824*_SPRIN76)*_SPRIN76 ;
35034     ++(-0.01017810368788+0.00291428753593*_SPRIN73)*_SPRIN73
MPRINT(EM_DIAGRAM):   ;
35035     ++(-0.00217156751647+0.00037190508221*_SPRIN74)*_SPRIN74
35036     ++(0.00117674972917+0.00203212475874*_SPRIN75)*_SPRIN75
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 8 = EXP;
35037     ++(0.00015660369416+-0.00280883926824*_SPRIN76)*_SPRIN76
35038     +;
MPRINT(EM_DIAGRAM):   ;
35039     +;
35040     +/**********************************************************/
35041     +* Selected activation function at stage 8 = EXP;
35042     +/**********************************************************/
35043     +;
35044     +_RHAT8=0.130433163
35045     ++0.09340258104045*exp(0.02644155785566*_SPRIN81)
35046     ++-0.11197747139862*exp(0.04836367094031*_SPRIN82)
MPRINT(EM_DIAGRAM):   _RHAT8=0.130433163 +0.09340258104045*exp(0.02644155785566*_SPRIN81) +-0.11197747139862*exp(0.04836367094031*_SPRIN82) +-0.07674733883759*exp(0.13760265571187*_SPRIN83) +-0.0137457899687*exp(0.06701027571715*_SPRIN84)
+-0.12581596061505*exp(0.00982684134311*_SPRIN85) +0.10358175995545*exp(-0.01449313295342*_SPRIN86) ;
35047     ++-0.07674733883759*exp(0.13760265571187*_SPRIN83)
MPRINT(EM_DIAGRAM):   ;
35048     ++-0.0137457899687*exp(0.06701027571715*_SPRIN84)
35049     ++-0.12581596061505*exp(0.00982684134311*_SPRIN85)
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 9 = SIN;
35050     ++0.10358175995545*exp(-0.01449313295342*_SPRIN86)
35051     +;
MPRINT(EM_DIAGRAM):   ;
35052     +;
35053     +/**********************************************************/
35054     +* Selected activation function at stage 9 = SIN;
35055     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _RHAT9=-0.05425292 +0.14215422313658*SIN(-0.23302370170271*_SPRIN91*(2/ARCOS(-1))) +-0.19445264661544*SIN(-0.2175526786484*_SPRIN92*(2/ARCOS(-1))) ;
35056     +;
MPRINT(EM_DIAGRAM):   ;
35057     +_RHAT9=-0.05425292
35058     ++0.14215422313658*SIN(-0.23302370170271*_SPRIN91*(2/ARCOS(-1)))
35059     ++-0.19445264661544*SIN(-0.2175526786484*_SPRIN92*(2/ARCOS(-1)))
35060     +;
35061     +;
35062     +_tmpPredict
35063     +=_YHAT0
35064     ++_RHAT1
35065     ++_RHAT2
35066     ++_RHAT3
35067     ++_RHAT4
35068     ++_RHAT5
MPRINT(EM_DIAGRAM):   _tmpPredict =_YHAT0 +_RHAT1 +_RHAT2 +_RHAT3 +_RHAT4 +_RHAT5 +_RHAT6 +_RHAT7 +_RHAT8 +_RHAT9 ;
35069     ++_RHAT6
MPRINT(EM_DIAGRAM):   _tmpPredict=1-_tmpPredict;
35070     ++_RHAT7
MPRINT(EM_DIAGRAM):   If _tmpPredict > 1 then _tmpPredict=1;
35071     ++_RHAT8
35072     ++_RHAT9
MPRINT(EM_DIAGRAM):   else if _tmpPredict < 0 then _tmpPredict=0;
35073     +;
MPRINT(EM_DIAGRAM):   P_DepVar1=_tmpPredict;
35074     +_tmpPredict=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = "Predicted: DepVar=1";
35075     +If _tmpPredict > 1 then _tmpPredict=1;
35076     +else if _tmpPredict < 0 then _tmpPredict=0;
MPRINT(EM_DIAGRAM):   P_DepVar0=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = "Predicted: DepVar=0";
35077     +P_DepVar1=_tmpPredict;
35078     +label P_DepVar1 = "Predicted: DepVar=1";
MPRINT(EM_DIAGRAM):   if P_DepVar1 ge 0.5 then I_DepVar="1";
35079     +P_DepVar0=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   else I_DepVar="0";
35080     +label P_DepVar0 = "Predicted: DepVar=0";
MPRINT(EM_DIAGRAM):   if F_DepVar NE "1" AND F_DepVar NE "0" then do;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
35081     +if P_DepVar1 ge 0.5 then I_DepVar="1";
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
35082     +else I_DepVar="0";
MPRINT(EM_DIAGRAM):   end;
35083     +if F_DepVar NE "1" AND F_DepVar NE "0" then do;
MPRINT(EM_DIAGRAM):   else do;
35084     +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
35085     +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
35086     +end;
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
35087     +else do;
MPRINT(EM_DIAGRAM):   WHEN("1") R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN("0") R_DepVar0 = R_DepVar0 +1;
35088     +R_DepVar1 = -P_DepVar1;
35089     +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   OTHERWISE;
35090     +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   end;
35091     +WHEN("1") R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   END;
35092     +WHEN("0") R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   ;
35093     +OTHERWISE;
35094     +end;
35095     +END;
35096     +;
35097     +DROP _YHAT0
35098     +_RHAT1
35099     +_RHAT2
35100     +_RHAT3
35101     +_RHAT4
35102     +_RHAT5
35103     +_RHAT6
35104     +_RHAT7
35105     +_RHAT8
35106     +_RHAT9
35107     +_tmpLogit
35108     +_tmpPredict
35109     +Marital_Status_1_
35110     +Marital_Status_2_
35111     +Marital_Status_3_
35112     +Marital_Status_4_
35113     +Marital_Status_5_
35114     +_S1_ACCEPTEDCMPTOTAL
35115     +_S2_FRQ
35116     +_S3_INCOME
35117     +_S4_MNT
35118     +_S5_MNTGOLDPRODS
35119     +_S6_MNTMEATPRODUCTS
35120     +_S7_NUMCATALOGPURCHASES
35121     +_S8_NUMDEALSPURCHASES
35122     +_S9_NUMWEBVISITSMONTH
MPRINT(EM_DIAGRAM):   DROP _YHAT0 _RHAT1 _RHAT2 _RHAT3 _RHAT4 _RHAT5 _RHAT6 _RHAT7 _RHAT8 _RHAT9 _tmpLogit _tmpPredict Marital_Status_1_ Marital_Status_2_ Marital_Status_3_ Marital_Status_4_ Marital_Status_5_ _S1_ACCEPTEDCMPTOTAL _S2_FRQ _S3_INCOME
_S4_MNT _S5_MNTGOLDPRODS _S6_MNTMEATPRODUCTS _S7_NUMCATALOGPURCHASES _S8_NUMDEALSPURCHASES _S9_NUMWEBVISITSMONTH _S10_RFMSTAT _S11_RECENCY _S12_TEENHOME _S13_YEAR_BIRTH ;
35123     +_S10_RFMSTAT
35124     +_S11_RECENCY
35125     +_S12_TEENHOME
35126     +_S13_YEAR_BIRTH
35127     +;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
35128      run;
 
NOTE: DATA STEP view saved on file EMWS8.DMNEURAL6_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
35129      quit;
35130      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
35131      filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * DMNeural6: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
35132      *------------------------------------------------------------*;
35133      * DMNeural6: Scoring VALIDATE data;
35134      *------------------------------------------------------------*;
35135      data EMWS8.DMNeural6_VALIDATE
35136      / view=EMWS8.DMNeural6_VALIDATE
35137      ;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural6_VALIDATE / view=EMWS8.DMNeural6_VALIDATE ;
35138      set EMWS8.Meta2_VALIDATE
35139      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
35140      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\\predictive-models-project\Workspaces\EMWS8\DMNeural6\EMFLOWSCORE.sas.
35141     +**********************************************************;
MPRINT(EM_DIAGRAM):   **********************************************************;
35142     +**** Begin scoring code for DMNeural;
MPRINT(EM_DIAGRAM):   **** Begin scoring code for DMNeural;
35143     +**********************************************************;
MPRINT(EM_DIAGRAM):   **********************************************************;
35144     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
35145     +LABEL _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = "Warnings";
35146     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar
35146    !+       I_DepVar $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
35147     +LABEL I_DepVar="Into: DepVar";
MPRINT(EM_DIAGRAM):   LABEL I_DepVar= "Into: DepVar";
35148     +LENGTH _FORMAT_ $200;
MPRINT(EM_DIAGRAM):   LENGTH _FORMAT_ $200;
35149     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH _NORMFMT_
35149    !+       _NORMFMT_ $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
35150     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar
35150    !+       F_DepVar $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
35151     +LABEL F_DepVar="From: DepVar";
MPRINT(EM_DIAGRAM):   LABEL F_DepVar= "From: DepVar";
35152     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH _TARGNOR_
35152    !+       _TARGNOR_ $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
35153     +_FORMAT_ =PUT(DepVar, BEST.);
MPRINT(EM_DIAGRAM):   _FORMAT_ =PUT(DepVar, BEST.);
35154     +%DMNORMCP(_FORMAT_ , _TARGNOR_ );
MPRINT(DMNORMCP):   _TARGNOR_=dmnorm(_FORMAT_,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
35155     +F_DepVar=_TARGNOR_;
MPRINT(EM_DIAGRAM):   F_DepVar=_TARGNOR_;
35156     +;
MPRINT(EM_DIAGRAM):   ;
35157     +/************************************************/
35158     +* Create dummy variables for Marital_Status;
MPRINT(EM_DIAGRAM):   * Create dummy variables for Marital_Status;
35159     +/************************************************/
35160     +;
MPRINT(EM_DIAGRAM):   ;
35161     +_FORMAT_ =PUT(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FORMAT_ =PUT(Marital_Status,$8.0);
35162     +%DMNORMCP(_FORMAT_ , _NORMFMT_ );
MPRINT(DMNORMCP):   _NORMFMT_=dmnorm(_FORMAT_,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
35163     +IF _NORMFMT_ ="DIVORCED" THEN Marital_Status_1_=2.98126168425242;
MPRINT(EM_DIAGRAM):   IF _NORMFMT_ ="DIVORCED" THEN Marital_Status_1_=2.98126168425242;
35164     +/*---- (1-0.10109519797809)/0.30151824872338 -----*/
35165     +ELSE Marital_Status_1_=-0.33528716224019;
MPRINT(EM_DIAGRAM):   ELSE Marital_Status_1_=-0.33528716224019;
35166     +/*---- (0-0.10109519797809)/0.30151824872338 -----*/
35167     +IF _NORMFMT_ ="MARRIED" THEN Marital_Status_2_=1.18621875805397;
MPRINT(EM_DIAGRAM):   IF _NORMFMT_ ="MARRIED" THEN Marital_Status_2_=1.18621875805397;
35168     +/*---- (1-0.41533277169334)/0.49288314177885 -----*/
35169     +ELSE Marital_Status_2_=-0.84265972294036;
MPRINT(EM_DIAGRAM):   ELSE Marital_Status_2_=-0.84265972294036;
35170     +/*---- (0-0.41533277169334)/0.49288314177885 -----*/
35171     +IF _NORMFMT_ ="SINGLE" THEN Marital_Status_3_=1.8948253753083;
MPRINT(EM_DIAGRAM):   IF _NORMFMT_ ="SINGLE" THEN Marital_Status_3_=1.8948253753083;
35172     +/*---- (1-0.21777590564448)/0.41282120481854 -----*/
35173     +ELSE Marital_Status_3_=-0.52753081261949;
MPRINT(EM_DIAGRAM):   ELSE Marital_Status_3_=-0.52753081261949;
35174     +/*---- (0-0.21777590564448)/0.41282120481854 -----*/
35175     +IF _NORMFMT_ ="TOGETHER" THEN Marital_Status_4_=1.80152761035906;
MPRINT(EM_DIAGRAM):   IF _NORMFMT_ ="TOGETHER" THEN Marital_Status_4_=1.80152761035906;
35176     +/*---- (1-0.23546756529064)/0.42438008183342 -----*/
35177     +ELSE Marital_Status_4_=-0.55485065244667;
MPRINT(EM_DIAGRAM):   ELSE Marital_Status_4_=-0.55485065244667;
35178     +/*---- (0-0.23546756529064)/0.42438008183342 -----*/
35179     +IF _NORMFMT_ ="WIDOW" THEN Marital_Status_5_=5.65320745801221;
MPRINT(EM_DIAGRAM):   IF _NORMFMT_ ="WIDOW" THEN Marital_Status_5_=5.65320745801221;
35180     +/*---- (1-0.03032855939342)/0.17152589000289 -----*/
35181     +ELSE Marital_Status_5_=-0.17681621936441;
MPRINT(EM_DIAGRAM):   ELSE Marital_Status_5_=-0.17681621936441;
35182     +/*---- (0-0.03032855939342)/0.17152589000289 -----*/
35183     +DROP
35184     +_FORMAT_ _NORMFMT_;
MPRINT(EM_DIAGRAM):   DROP _FORMAT_ _NORMFMT_;
35185     +;
MPRINT(EM_DIAGRAM):   ;
35186     +/*-------------------------------------------------------------------------*/
35187     +*Impute missing values for interval variables;
MPRINT(EM_DIAGRAM):   *Impute missing values for interval variables;
35188     +/*-------------------------------------------------------------------------*/
35189     +;
MPRINT(EM_DIAGRAM):   ;
35190     +if AcceptedCmpTotal=. then _S1_ACCEPTEDCMPTOTAL = 0;
MPRINT(EM_DIAGRAM):   if AcceptedCmpTotal=. then _S1_ACCEPTEDCMPTOTAL = 0;
35191     +else _S1_ACCEPTEDCMPTOTAL=(AcceptedCmpTotal-0.31255265374894)/0.66837726102124;
MPRINT(EM_DIAGRAM):   else _S1_ACCEPTEDCMPTOTAL=(AcceptedCmpTotal-0.31255265374894)/0.66837726102124;
35192     +if Frq=. then _S2_FRQ = 0;
MPRINT(EM_DIAGRAM):   if Frq=. then _S2_FRQ = 0;
35193     +else _S2_FRQ=(Frq-12.6545914069081)/7.15980860291451;
MPRINT(EM_DIAGRAM):   else _S2_FRQ=(Frq-12.6545914069081)/7.15980860291451;
35194     +if Income=. then _S3_INCOME = 0;
MPRINT(EM_DIAGRAM):   if Income=. then _S3_INCOME = 0;
35195     +else _S3_INCOME=(Income-51962.545914069)/20878.2658128313;
MPRINT(EM_DIAGRAM):   else _S3_INCOME=(Income-51962.545914069)/20878.2658128313;
35196     +if Mnt=. then _S4_MNT = 0;
MPRINT(EM_DIAGRAM):   if Mnt=. then _S4_MNT = 0;
35197     +else _S4_MNT=(Mnt-615.68197135636)/604.537497355942;
MPRINT(EM_DIAGRAM):   else _S4_MNT=(Mnt-615.68197135636)/604.537497355942;
35198     +if MntGoldProds=. then _S5_MNTGOLDPRODS = 0;
MPRINT(EM_DIAGRAM):   if MntGoldProds=. then _S5_MNTGOLDPRODS = 0;
35199     +else _S5_MNTGOLDPRODS=(MntGoldProds-44.0589721988205)/51.1646481009475;
MPRINT(EM_DIAGRAM):   else _S5_MNTGOLDPRODS=(MntGoldProds-44.0589721988205)/51.1646481009475;
35200     +if MntMeatProducts=. then _S6_MNTMEATPRODUCTS = 0;
MPRINT(EM_DIAGRAM):   if MntMeatProducts=. then _S6_MNTMEATPRODUCTS = 0;
35201     +else _S6_MNTMEATPRODUCTS=(MntMeatProducts-169.965037910699)/216.176716057929;
MPRINT(EM_DIAGRAM):   else _S6_MNTMEATPRODUCTS=(MntMeatProducts-169.965037910699)/216.176716057929;
35202     +if NumCatalogPurchases=. then _S7_NUMCATALOGPURCHASES = 0;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases=. then _S7_NUMCATALOGPURCHASES = 0;
35203     +else _S7_NUMCATALOGPURCHASES=(NumCatalogPurchases-2.64448188711036)/2.77214051734809;
MPRINT(EM_DIAGRAM):   else _S7_NUMCATALOGPURCHASES=(NumCatalogPurchases-2.64448188711036)/2.77214051734809;
35204     +if NumDealsPurchases=. then _S8_NUMDEALSPURCHASES = 0;
MPRINT(EM_DIAGRAM):   if NumDealsPurchases=. then _S8_NUMDEALSPURCHASES = 0;
35205     +else _S8_NUMDEALSPURCHASES=(NumDealsPurchases-2.25526537489469)/1.67318269219337;
MPRINT(EM_DIAGRAM):   else _S8_NUMDEALSPURCHASES=(NumDealsPurchases-2.25526537489469)/1.67318269219337;
35206     +if NumWebVisitsMonth=. then _S9_NUMWEBVISITSMONTH = 0;
MPRINT(EM_DIAGRAM):   if NumWebVisitsMonth=. then _S9_NUMWEBVISITSMONTH = 0;
35207     +else _S9_NUMWEBVISITSMONTH=(NumWebVisitsMonth-5.24220724515585)/2.33225525940929;
MPRINT(EM_DIAGRAM):   else _S9_NUMWEBVISITSMONTH=(NumWebVisitsMonth-5.24220724515585)/2.33225525940929;
35208     +if RFMstat=. then _S10_RFMSTAT = 0;
MPRINT(EM_DIAGRAM):   if RFMstat=. then _S10_RFMSTAT = 0;
35209     +else _S10_RFMSTAT=(RFMstat-531.396946202505)/1565.49314871989;
MPRINT(EM_DIAGRAM):   else _S10_RFMSTAT=(RFMstat-531.396946202505)/1565.49314871989;
35210     +if Recency=. then _S11_RECENCY = 0;
MPRINT(EM_DIAGRAM):   if Recency=. then _S11_RECENCY = 0;
35211     +else _S11_RECENCY=(Recency-48.7742207245156)/28.8224799181808;
MPRINT(EM_DIAGRAM):   else _S11_RECENCY=(Recency-48.7742207245156)/28.8224799181808;
35212     +if Teenhome=. then _S12_TEENHOME = 0;
MPRINT(EM_DIAGRAM):   if Teenhome=. then _S12_TEENHOME = 0;
35213     +else _S12_TEENHOME=(Teenhome-0.48652064026958)/0.55047336656954;
MPRINT(EM_DIAGRAM):   else _S12_TEENHOME=(Teenhome-0.48652064026958)/0.55047336656954;
35214     +if Year_Birth=. then _S13_YEAR_BIRTH = 0;
MPRINT(EM_DIAGRAM):   if Year_Birth=. then _S13_YEAR_BIRTH = 0;
35215     +else _S13_YEAR_BIRTH=(Year_Birth-1968.79401853412)/12.063294849345;
MPRINT(EM_DIAGRAM):   else _S13_YEAR_BIRTH=(Year_Birth-1968.79401853412)/12.063294849345;
35216     +;
MPRINT(EM_DIAGRAM):   ;
35217     +/*----------------------------------------------*/
35218     +* Component 1 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 0;
35219     +/*----------------------------------------------*/
35220     +;
MPRINT(EM_DIAGRAM):   ;
35221     +_SPRIN01=
35222     +-0.008493382*Marital_Status_1_+
35223     +-0.011188081*Marital_Status_2_+
35224     +0.0016309879*Marital_Status_3_+
35225     +0.0067450524*Marital_Status_4_+
35226     +0.0264657057*Marital_Status_5_+
35227     +0.2193918461*_S1_ACCEPTEDCMPTOTAL+
35228     +0.3773554763*_S2_FRQ+
35229     +0.3893349243*_S3_INCOME+
35230     +0.4090071576*_S4_MNT+
35231     +0.2396116109*_S5_MNTGOLDPRODS+
35232     +0.3759667232*_S6_MNTMEATPRODUCTS+
35233     +0.3869383929*_S7_NUMCATALOGPURCHASES+
35234     +-0.093319147*_S8_NUMDEALSPURCHASES+
35235     +-0.290294871*_S9_NUMWEBVISITSMONTH+
35236     +0.1924005307*_S10_RFMSTAT+
35237     +-0.012253394*_S11_RECENCY+
35238     +-0.083331603*_S12_TEENHOME+
35239     +-0.063857354*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN01= -0.008493382*Marital_Status_1_+ -0.011188081*Marital_Status_2_+ 0.0016309879*Marital_Status_3_+ 0.0067450524*Marital_Status_4_+ 0.0264657057*Marital_Status_5_+ 0.2193918461*_S1_ACCEPTEDCMPTOTAL+ 0.3773554763*_S2_FRQ+
0.3893349243*_S3_INCOME+ 0.4090071576*_S4_MNT+ 0.2396116109*_S5_MNTGOLDPRODS+ 0.3759667232*_S6_MNTMEATPRODUCTS+ 0.3869383929*_S7_NUMCATALOGPURCHASES+ -0.093319147*_S8_NUMDEALSPURCHASES+ -0.290294871*_S9_NUMWEBVISITSMONTH+ 0.1924005307*_S10_RFMSTAT+
-0.012253394*_S11_RECENCY+ -0.083331603*_S12_TEENHOME+ -0.063857354*_S13_YEAR_BIRTH;
35240     +/*----------------------------------------------*/
35241     +* Component 2 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 0;
35242     +/*----------------------------------------------*/
35243     +;
MPRINT(EM_DIAGRAM):   ;
35244     +_SPRIN02=
35245     +0.0698121964*Marital_Status_1_+
35246     +-0.071196228*Marital_Status_2_+
35247     +-0.215004244*Marital_Status_3_+
35248     +-0.007122854*Marital_Status_4_+
35249     +0.6169498832*Marital_Status_5_+
35250     +0.4368245541*_S1_ACCEPTEDCMPTOTAL+
35251     +0.0038078896*_S2_FRQ+
35252     +-0.158979071*_S3_INCOME+
35253     +0.0387829548*_S4_MNT+
35254     +0.224457403*_S5_MNTGOLDPRODS+
35255     +-0.044166316*_S6_MNTMEATPRODUCTS+
35256     +0.0022209443*_S7_NUMCATALOGPURCHASES+
35257     +0.1176239081*_S8_NUMDEALSPURCHASES+
35258     +0.3801731715*_S9_NUMWEBVISITSMONTH+
35259     +0.0193880887*_S10_RFMSTAT+
35260     +0.0078912704*_S11_RECENCY+
35261     +-0.304271031*_S12_TEENHOME+
35262     +0.2045023374*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN02= 0.0698121964*Marital_Status_1_+ -0.071196228*Marital_Status_2_+ -0.215004244*Marital_Status_3_+ -0.007122854*Marital_Status_4_+ 0.6169498832*Marital_Status_5_+ 0.4368245541*_S1_ACCEPTEDCMPTOTAL+ 0.0038078896*_S2_FRQ+
-0.158979071*_S3_INCOME+ 0.0387829548*_S4_MNT+ 0.224457403*_S5_MNTGOLDPRODS+ -0.044166316*_S6_MNTMEATPRODUCTS+ 0.0022209443*_S7_NUMCATALOGPURCHASES+ 0.1176239081*_S8_NUMDEALSPURCHASES+ 0.3801731715*_S9_NUMWEBVISITSMONTH+ 0.0193880887*_S10_RFMSTAT+
0.0078912704*_S11_RECENCY+ -0.304271031*_S12_TEENHOME+ 0.2045023374*_S13_YEAR_BIRTH;
35263     +/*----------------------------------------------*/
35264     +* Component 3 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 0;
35265     +/*----------------------------------------------*/
35266     +;
MPRINT(EM_DIAGRAM):   ;
35267     +_SPRIN03=
35268     +0.0847544074*Marital_Status_1_+
35269     +-0.022731964*Marital_Status_2_+
35270     +0.1026293136*Marital_Status_3_+
35271     +-0.067964125*Marital_Status_4_+
35272     +-0.162516194*Marital_Status_5_+
35273     +0.0772952533*_S1_ACCEPTEDCMPTOTAL+
35274     +0.0529204204*_S2_FRQ+
35275     +0.0187837867*_S3_INCOME+
35276     +0.048516842*_S4_MNT+
35277     +0.145761789*_S5_MNTGOLDPRODS+
35278     +0.0234836338*_S6_MNTMEATPRODUCTS+
35279     +0.0624697914*_S7_NUMCATALOGPURCHASES+
35280     +0.0258524959*_S8_NUMDEALSPURCHASES+
35281     +0.0026131748*_S9_NUMWEBVISITSMONTH+
35282     +-0.568524094*_S10_RFMSTAT+
35283     +0.7487975026*_S11_RECENCY+
35284     +-0.059497878*_S12_TEENHOME+
35285     +0.1594418909*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN03= 0.0847544074*Marital_Status_1_+ -0.022731964*Marital_Status_2_+ 0.1026293136*Marital_Status_3_+ -0.067964125*Marital_Status_4_+ -0.162516194*Marital_Status_5_+ 0.0772952533*_S1_ACCEPTEDCMPTOTAL+ 0.0529204204*_S2_FRQ+
0.0187837867*_S3_INCOME+ 0.048516842*_S4_MNT+ 0.145761789*_S5_MNTGOLDPRODS+ 0.0234836338*_S6_MNTMEATPRODUCTS+ 0.0624697914*_S7_NUMCATALOGPURCHASES+ 0.0258524959*_S8_NUMDEALSPURCHASES+ 0.0026131748*_S9_NUMWEBVISITSMONTH+ -0.568524094*_S10_RFMSTAT+
0.7487975026*_S11_RECENCY+ -0.059497878*_S12_TEENHOME+ 0.1594418909*_S13_YEAR_BIRTH;
35286     +/*----------------------------------------------*/
35287     +* Component 4 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 0;
35288     +/*----------------------------------------------*/
35289     +;
MPRINT(EM_DIAGRAM):   ;
35290     +_SPRIN04=
35291     +-0.05935653*Marital_Status_1_+
35292     +-0.032851354*Marital_Status_2_+
35293     +0.6701503133*Marital_Status_3_+
35294     +-0.533967645*Marital_Status_4_+
35295     +-0.093035935*Marital_Status_5_+
35296     +0.0427953086*_S1_ACCEPTEDCMPTOTAL+
35297     +0.0760580738*_S2_FRQ+
35298     +-0.040927706*_S3_INCOME+
35299     +0.0321133035*_S4_MNT+
35300     +0.1825666886*_S5_MNTGOLDPRODS+
35301     +-0.029779653*_S6_MNTMEATPRODUCTS+
35302     +0.0256989779*_S7_NUMCATALOGPURCHASES+
35303     +0.2880147854*_S8_NUMDEALSPURCHASES+
35304     +0.1929364069*_S9_NUMWEBVISITSMONTH+
35305     +0.1355032466*_S10_RFMSTAT+
35306     +-0.148578649*_S11_RECENCY+
35307     +0.066769607*_S12_TEENHOME+
35308     +0.2055398914*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN04= -0.05935653*Marital_Status_1_+ -0.032851354*Marital_Status_2_+ 0.6701503133*Marital_Status_3_+ -0.533967645*Marital_Status_4_+ -0.093035935*Marital_Status_5_+ 0.0427953086*_S1_ACCEPTEDCMPTOTAL+ 0.0760580738*_S2_FRQ+
-0.040927706*_S3_INCOME+ 0.0321133035*_S4_MNT+ 0.1825666886*_S5_MNTGOLDPRODS+ -0.029779653*_S6_MNTMEATPRODUCTS+ 0.0256989779*_S7_NUMCATALOGPURCHASES+ 0.2880147854*_S8_NUMDEALSPURCHASES+ 0.1929364069*_S9_NUMWEBVISITSMONTH+ 0.1355032466*_S10_RFMSTAT+
-0.148578649*_S11_RECENCY+ 0.066769607*_S12_TEENHOME+ 0.2055398914*_S13_YEAR_BIRTH;
35309     +/*----------------------------------------------*/
35310     +* Component 5 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 0;
35311     +/*----------------------------------------------*/
35312     +;
MPRINT(EM_DIAGRAM):   ;
35313     +_SPRIN05=
35314     +0.10761459*Marital_Status_1_+
35315     +0.0028979951*Marital_Status_2_+
35316     +-0.15064667*Marital_Status_3_+
35317     +-0.043533602*Marital_Status_4_+
35318     +0.272779799*Marital_Status_5_+
35319     +-0.796500815*_S1_ACCEPTEDCMPTOTAL+
35320     +0.0948384767*_S2_FRQ+
35321     +-0.024901753*_S3_INCOME+
35322     +0.036811217*_S4_MNT+
35323     +0.2470337929*_S5_MNTGOLDPRODS+
35324     +0.1168111721*_S6_MNTMEATPRODUCTS+
35325     +0.0697126712*_S7_NUMCATALOGPURCHASES+
35326     +0.171968035*_S8_NUMDEALSPURCHASES+
35327     +-0.102108299*_S9_NUMWEBVISITSMONTH+
35328     +-0.022671576*_S10_RFMSTAT+
35329     +-0.022630633*_S11_RECENCY+
35330     +-0.113962381*_S12_TEENHOME+
35331     +0.3323945855*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN05= 0.10761459*Marital_Status_1_+ 0.0028979951*Marital_Status_2_+ -0.15064667*Marital_Status_3_+ -0.043533602*Marital_Status_4_+ 0.272779799*Marital_Status_5_+ -0.796500815*_S1_ACCEPTEDCMPTOTAL+ 0.0948384767*_S2_FRQ+
-0.024901753*_S3_INCOME+ 0.036811217*_S4_MNT+ 0.2470337929*_S5_MNTGOLDPRODS+ 0.1168111721*_S6_MNTMEATPRODUCTS+ 0.0697126712*_S7_NUMCATALOGPURCHASES+ 0.171968035*_S8_NUMDEALSPURCHASES+ -0.102108299*_S9_NUMWEBVISITSMONTH+ -0.022671576*_S10_RFMSTAT+
-0.022630633*_S11_RECENCY+ -0.113962381*_S12_TEENHOME+ 0.3323945855*_S13_YEAR_BIRTH;
35332     +/*----------------------------------------------*/
35333     +* Component 6 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 6 at stage 0;
35334     +/*----------------------------------------------*/
35335     +;
MPRINT(EM_DIAGRAM):   ;
35336     +_SPRIN06=
35337     +-0.000232895*Marital_Status_1_+
35338     +-0.004880779*Marital_Status_2_+
35339     +0.0006083294*Marital_Status_3_+
35340     +0.0082855013*Marital_Status_4_+
35341     +-0.007529226*Marital_Status_5_+
35342     +-0.066896457*_S1_ACCEPTEDCMPTOTAL+
35343     +-0.584544523*_S2_FRQ+
35344     +0.6315682517*_S3_INCOME+
35345     +-0.173384958*_S4_MNT+
35346     +0.0199300933*_S5_MNTGOLDPRODS+
35347     +-0.065996201*_S6_MNTMEATPRODUCTS+
35348     +0.3742607477*_S7_NUMCATALOGPURCHASES+
35349     +0.1066403357*_S8_NUMDEALSPURCHASES+
35350     +0.2338771409*_S9_NUMWEBVISITSMONTH+
35351     +0.0170511776*_S10_RFMSTAT+
35352     +0.0109890941*_S11_RECENCY+
35353     +-0.115442279*_S12_TEENHOME+
35354     +-0.010452951*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN06= -0.000232895*Marital_Status_1_+ -0.004880779*Marital_Status_2_+ 0.0006083294*Marital_Status_3_+ 0.0082855013*Marital_Status_4_+ -0.007529226*Marital_Status_5_+ -0.066896457*_S1_ACCEPTEDCMPTOTAL+ -0.584544523*_S2_FRQ+
0.6315682517*_S3_INCOME+ -0.173384958*_S4_MNT+ 0.0199300933*_S5_MNTGOLDPRODS+ -0.065996201*_S6_MNTMEATPRODUCTS+ 0.3742607477*_S7_NUMCATALOGPURCHASES+ 0.1066403357*_S8_NUMDEALSPURCHASES+ 0.2338771409*_S9_NUMWEBVISITSMONTH+ 0.0170511776*_S10_RFMSTAT+
0.0109890941*_S11_RECENCY+ -0.115442279*_S12_TEENHOME+ -0.010452951*_S13_YEAR_BIRTH;
35355     +;
MPRINT(EM_DIAGRAM):   ;
35356     +/*----------------------------------------------*/
35357     +* Component 1 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 1;
35358     +/*----------------------------------------------*/
35359     +;
MPRINT(EM_DIAGRAM):   ;
35360     +_SPRIN11=
35361     +0.0093097628*Marital_Status_1_+
35362     +-0.007357611*Marital_Status_2_+
35363     +0.004161881*Marital_Status_3_+
35364     +-0.003334178*Marital_Status_4_+
35365     +0.0030096039*Marital_Status_5_+
35366     +0.0609654599*_S1_ACCEPTEDCMPTOTAL+
35367     +0.2916437296*_S2_FRQ+
35368     +0.1154801729*_S3_INCOME+
35369     +-0.805526511*_S4_MNT+
35370     +0.0844981983*_S5_MNTGOLDPRODS+
35371     +0.4796242204*_S6_MNTMEATPRODUCTS+
35372     +-0.062347745*_S7_NUMCATALOGPURCHASES+
35373     +-0.031857708*_S8_NUMDEALSPURCHASES+
35374     +0.0774997018*_S9_NUMWEBVISITSMONTH+
35375     +0.0158091776*_S10_RFMSTAT+
35376     +0.0115610406*_S11_RECENCY+
35377     +0.000437064*_S12_TEENHOME+
35378     +-0.019202585*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN11= 0.0093097628*Marital_Status_1_+ -0.007357611*Marital_Status_2_+ 0.004161881*Marital_Status_3_+ -0.003334178*Marital_Status_4_+ 0.0030096039*Marital_Status_5_+ 0.0609654599*_S1_ACCEPTEDCMPTOTAL+ 0.2916437296*_S2_FRQ+
0.1154801729*_S3_INCOME+ -0.805526511*_S4_MNT+ 0.0844981983*_S5_MNTGOLDPRODS+ 0.4796242204*_S6_MNTMEATPRODUCTS+ -0.062347745*_S7_NUMCATALOGPURCHASES+ -0.031857708*_S8_NUMDEALSPURCHASES+ 0.0774997018*_S9_NUMWEBVISITSMONTH+ 0.0158091776*_S10_RFMSTAT+
0.0115610406*_S11_RECENCY+ 0.000437064*_S12_TEENHOME+ -0.019202585*_S13_YEAR_BIRTH;
35379     +/*----------------------------------------------*/
35380     +* Component 2 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 1;
35381     +/*----------------------------------------------*/
35382     +;
MPRINT(EM_DIAGRAM):   ;
35383     +_SPRIN12=
35384     +-0.015105189*Marital_Status_1_+
35385     +0.0118862269*Marital_Status_2_+
35386     +-0.011343113*Marital_Status_3_+
35387     +0.0045776631*Marital_Status_4_+
35388     +0.0083717862*Marital_Status_5_+
35389     +0.0497052612*_S1_ACCEPTEDCMPTOTAL+
35390     +-0.32469371*_S2_FRQ+
35391     +-0.570505038*_S3_INCOME+
35392     +-0.051638052*_S4_MNT+
35393     +-0.000179679*_S5_MNTGOLDPRODS+
35394     +0.3305454324*_S6_MNTMEATPRODUCTS+
35395     +0.6167274273*_S7_NUMCATALOGPURCHASES+
35396     +-0.009076585*_S8_NUMDEALSPURCHASES+
35397     +-0.05161006*_S9_NUMWEBVISITSMONTH+
35398     +-0.009614781*_S10_RFMSTAT+
35399     +-0.006477144*_S11_RECENCY+
35400     +0.2662240883*_S12_TEENHOME+
35401     +0.0017486593*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN12= -0.015105189*Marital_Status_1_+ 0.0118862269*Marital_Status_2_+ -0.011343113*Marital_Status_3_+ 0.0045776631*Marital_Status_4_+ 0.0083717862*Marital_Status_5_+ 0.0497052612*_S1_ACCEPTEDCMPTOTAL+ -0.32469371*_S2_FRQ+
-0.570505038*_S3_INCOME+ -0.051638052*_S4_MNT+ -0.000179679*_S5_MNTGOLDPRODS+ 0.3305454324*_S6_MNTMEATPRODUCTS+ 0.6167274273*_S7_NUMCATALOGPURCHASES+ -0.009076585*_S8_NUMDEALSPURCHASES+ -0.05161006*_S9_NUMWEBVISITSMONTH+ -0.009614781*_S10_RFMSTAT+
-0.006477144*_S11_RECENCY+ 0.2662240883*_S12_TEENHOME+ 0.0017486593*_S13_YEAR_BIRTH;
35402     +/*----------------------------------------------*/
35403     +* Component 3 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 1;
35404     +/*----------------------------------------------*/
35405     +;
MPRINT(EM_DIAGRAM):   ;
35406     +_SPRIN13=
35407     +0.7201014863*Marital_Status_1_+
35408     +-0.039414952*Marital_Status_2_+
35409     +-0.261027185*Marital_Status_3_+
35410     +-0.002570027*Marital_Status_4_+
35411     +-0.517989138*Marital_Status_5_+
35412     +0.1032358936*_S1_ACCEPTEDCMPTOTAL+
35413     +0.0293938239*_S2_FRQ+
35414     +-0.060123348*_S3_INCOME+
35415     +0.0306908632*_S4_MNT+
35416     +0.0931751568*_S5_MNTGOLDPRODS+
35417     +0.0016465853*_S6_MNTMEATPRODUCTS+
35418     +0.0174804568*_S7_NUMCATALOGPURCHASES+
35419     +0.1233541944*_S8_NUMDEALSPURCHASES+
35420     +0.1518084321*_S9_NUMWEBVISITSMONTH+
35421     +0.1449751106*_S10_RFMSTAT+
35422     +-0.133344887*_S11_RECENCY+
35423     +-0.066595833*_S12_TEENHOME+
35424     +0.1920463047*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN13= 0.7201014863*Marital_Status_1_+ -0.039414952*Marital_Status_2_+ -0.261027185*Marital_Status_3_+ -0.002570027*Marital_Status_4_+ -0.517989138*Marital_Status_5_+ 0.1032358936*_S1_ACCEPTEDCMPTOTAL+ 0.0293938239*_S2_FRQ+
-0.060123348*_S3_INCOME+ 0.0306908632*_S4_MNT+ 0.0931751568*_S5_MNTGOLDPRODS+ 0.0016465853*_S6_MNTMEATPRODUCTS+ 0.0174804568*_S7_NUMCATALOGPURCHASES+ 0.1233541944*_S8_NUMDEALSPURCHASES+ 0.1518084321*_S9_NUMWEBVISITSMONTH+ 0.1449751106*_S10_RFMSTAT+
-0.133344887*_S11_RECENCY+ -0.066595833*_S12_TEENHOME+ 0.1920463047*_S13_YEAR_BIRTH;
35425     +/*----------------------------------------------*/
35426     +* Component 4 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 1;
35427     +/*----------------------------------------------*/
35428     +;
MPRINT(EM_DIAGRAM):   ;
35429     +_SPRIN14=
35430     +-0.028442983*Marital_Status_1_+
35431     +0.0140975391*Marital_Status_2_+
35432     +0.0577022767*Marital_Status_3_+
35433     +-0.012976764*Marital_Status_4_+
35434     +-0.097279799*Marital_Status_5_+
35435     +-0.217622847*_S1_ACCEPTEDCMPTOTAL+
35436     +-0.036465716*_S2_FRQ+
35437     +-0.193573793*_S3_INCOME+
35438     +0.0437226825*_S4_MNT+
35439     +0.1533854572*_S5_MNTGOLDPRODS+
35440     +0.0429013274*_S6_MNTMEATPRODUCTS+
35441     +-0.035369721*_S7_NUMCATALOGPURCHASES+
35442     +-0.091546766*_S8_NUMDEALSPURCHASES+
35443     +0.269932798*_S9_NUMWEBVISITSMONTH+
35444     +0.5456202875*_S10_RFMSTAT+
35445     +0.4592194915*_S11_RECENCY+
35446     +-0.294927889*_S12_TEENHOME+
35447     +-0.441054809*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN14= -0.028442983*Marital_Status_1_+ 0.0140975391*Marital_Status_2_+ 0.0577022767*Marital_Status_3_+ -0.012976764*Marital_Status_4_+ -0.097279799*Marital_Status_5_+ -0.217622847*_S1_ACCEPTEDCMPTOTAL+ -0.036465716*_S2_FRQ+
-0.193573793*_S3_INCOME+ 0.0437226825*_S4_MNT+ 0.1533854572*_S5_MNTGOLDPRODS+ 0.0429013274*_S6_MNTMEATPRODUCTS+ -0.035369721*_S7_NUMCATALOGPURCHASES+ -0.091546766*_S8_NUMDEALSPURCHASES+ 0.269932798*_S9_NUMWEBVISITSMONTH+ 0.5456202875*_S10_RFMSTAT+
0.4592194915*_S11_RECENCY+ -0.294927889*_S12_TEENHOME+ -0.441054809*_S13_YEAR_BIRTH;
35448     +/*----------------------------------------------*/
35449     +* Component 5 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 1;
35450     +/*----------------------------------------------*/
35451     +;
MPRINT(EM_DIAGRAM):   ;
35452     +_SPRIN15=
35453     +-0.529759999*Marital_Status_1_+
35454     +0.0929641115*Marital_Status_2_+
35455     +-0.091427311*Marital_Status_3_+
35456     +0.5040179245*Marital_Status_4_+
35457     +-0.362861674*Marital_Status_5_+
35458     +0.0348823878*_S1_ACCEPTEDCMPTOTAL+
35459     +0.1133790974*_S2_FRQ+
35460     +-0.046925784*_S3_INCOME+
35461     +0.041087743*_S4_MNT+
35462     +0.2145202702*_S5_MNTGOLDPRODS+
35463     +-0.013889744*_S6_MNTMEATPRODUCTS+
35464     +0.0241896601*_S7_NUMCATALOGPURCHASES+
35465     +0.3401453099*_S8_NUMDEALSPURCHASES+
35466     +0.2250315176*_S9_NUMWEBVISITSMONTH+
35467     +0.0766337761*_S10_RFMSTAT+
35468     +-0.026511866*_S11_RECENCY+
35469     +0.020673873*_S12_TEENHOME+
35470     +0.2802686549*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN15= -0.529759999*Marital_Status_1_+ 0.0929641115*Marital_Status_2_+ -0.091427311*Marital_Status_3_+ 0.5040179245*Marital_Status_4_+ -0.362861674*Marital_Status_5_+ 0.0348823878*_S1_ACCEPTEDCMPTOTAL+ 0.1133790974*_S2_FRQ+
-0.046925784*_S3_INCOME+ 0.041087743*_S4_MNT+ 0.2145202702*_S5_MNTGOLDPRODS+ -0.013889744*_S6_MNTMEATPRODUCTS+ 0.0241896601*_S7_NUMCATALOGPURCHASES+ 0.3401453099*_S8_NUMDEALSPURCHASES+ 0.2250315176*_S9_NUMWEBVISITSMONTH+ 0.0766337761*_S10_RFMSTAT+
-0.026511866*_S11_RECENCY+ 0.020673873*_S12_TEENHOME+ 0.2802686549*_S13_YEAR_BIRTH;
35471     +/*----------------------------------------------*/
35472     +* Component 6 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 6 at stage 1;
35473     +/*----------------------------------------------*/
35474     +;
MPRINT(EM_DIAGRAM):   ;
35475     +_SPRIN16=
35476     +0.0062762631*Marital_Status_1_+
35477     +-0.010875887*Marital_Status_2_+
35478     +-0.001735199*Marital_Status_3_+
35479     +0.003215339*Marital_Status_4_+
35480     +0.0164402875*Marital_Status_5_+
35481     +0.0819675329*_S1_ACCEPTEDCMPTOTAL+
35482     +-0.462873318*_S2_FRQ+
35483     +0.0469918013*_S3_INCOME+
35484     +0.2304506395*_S4_MNT+
35485     +0.0977211562*_S5_MNTGOLDPRODS+
35486     +0.5904759878*_S6_MNTMEATPRODUCTS+
35487     +-0.545547887*_S7_NUMCATALOGPURCHASES+
35488     +0.2139463159*_S8_NUMDEALSPURCHASES+
35489     +-0.117021636*_S9_NUMWEBVISITSMONTH+
35490     +0.0161900995*_S10_RFMSTAT+
35491     +0.028974563*_S11_RECENCY+
35492     +0.0823235285*_S12_TEENHOME+
35493     +0.0096368551*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN16= 0.0062762631*Marital_Status_1_+ -0.010875887*Marital_Status_2_+ -0.001735199*Marital_Status_3_+ 0.003215339*Marital_Status_4_+ 0.0164402875*Marital_Status_5_+ 0.0819675329*_S1_ACCEPTEDCMPTOTAL+ -0.462873318*_S2_FRQ+
0.0469918013*_S3_INCOME+ 0.2304506395*_S4_MNT+ 0.0977211562*_S5_MNTGOLDPRODS+ 0.5904759878*_S6_MNTMEATPRODUCTS+ -0.545547887*_S7_NUMCATALOGPURCHASES+ 0.2139463159*_S8_NUMDEALSPURCHASES+ -0.117021636*_S9_NUMWEBVISITSMONTH+ 0.0161900995*_S10_RFMSTAT+
0.028974563*_S11_RECENCY+ 0.0823235285*_S12_TEENHOME+ 0.0096368551*_S13_YEAR_BIRTH;
35494     +;
MPRINT(EM_DIAGRAM):   ;
35495     +/*----------------------------------------------*/
35496     +* Component 1 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 2;
35497     +/*----------------------------------------------*/
35498     +;
MPRINT(EM_DIAGRAM):   ;
35499     +_SPRIN21=
35500     +0.0259027139*Marital_Status_1_+
35501     +-0.023219643*Marital_Status_2_+
35502     +-0.048071754*Marital_Status_3_+
35503     +0.0104245904*Marital_Status_4_+
35504     +0.111093904*Marital_Status_5_+
35505     +0.1029306769*_S1_ACCEPTEDCMPTOTAL+
35506     +-0.104590704*_S2_FRQ+
35507     +0.0992739498*_S3_INCOME+
35508     +-0.126525705*_S4_MNT+
35509     +0.1755348321*_S5_MNTGOLDPRODS+
35510     +-0.219398621*_S6_MNTMEATPRODUCTS+
35511     +-0.086592319*_S7_NUMCATALOGPURCHASES+
35512     +-0.25424186*_S8_NUMDEALSPURCHASES+
35513     +-0.203846899*_S9_NUMWEBVISITSMONTH+
35514     +0.4677013509*_S10_RFMSTAT+
35515     +0.3215691362*_S11_RECENCY+
35516     +0.4850182787*_S12_TEENHOME+
35517     +0.431969361*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN21= 0.0259027139*Marital_Status_1_+ -0.023219643*Marital_Status_2_+ -0.048071754*Marital_Status_3_+ 0.0104245904*Marital_Status_4_+ 0.111093904*Marital_Status_5_+ 0.1029306769*_S1_ACCEPTEDCMPTOTAL+ -0.104590704*_S2_FRQ+
0.0992739498*_S3_INCOME+ -0.126525705*_S4_MNT+ 0.1755348321*_S5_MNTGOLDPRODS+ -0.219398621*_S6_MNTMEATPRODUCTS+ -0.086592319*_S7_NUMCATALOGPURCHASES+ -0.25424186*_S8_NUMDEALSPURCHASES+ -0.203846899*_S9_NUMWEBVISITSMONTH+ 0.4677013509*_S10_RFMSTAT+
0.3215691362*_S11_RECENCY+ 0.4850182787*_S12_TEENHOME+ 0.431969361*_S13_YEAR_BIRTH;
35518     +/*----------------------------------------------*/
35519     +* Component 2 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 2;
35520     +/*----------------------------------------------*/
35521     +;
MPRINT(EM_DIAGRAM):   ;
35522     +_SPRIN22=
35523     +0.0093097628*Marital_Status_1_+
35524     +-0.007357611*Marital_Status_2_+
35525     +0.004161881*Marital_Status_3_+
35526     +-0.003334178*Marital_Status_4_+
35527     +0.0030096039*Marital_Status_5_+
35528     +0.0609654599*_S1_ACCEPTEDCMPTOTAL+
35529     +0.2916437296*_S2_FRQ+
35530     +0.1154801729*_S3_INCOME+
35531     +-0.805526511*_S4_MNT+
35532     +0.0844981983*_S5_MNTGOLDPRODS+
35533     +0.4796242204*_S6_MNTMEATPRODUCTS+
35534     +-0.062347745*_S7_NUMCATALOGPURCHASES+
35535     +-0.031857708*_S8_NUMDEALSPURCHASES+
35536     +0.0774997018*_S9_NUMWEBVISITSMONTH+
35537     +0.0158091776*_S10_RFMSTAT+
35538     +0.0115610406*_S11_RECENCY+
35539     +0.000437064*_S12_TEENHOME+
35540     +-0.019202585*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN22= 0.0093097628*Marital_Status_1_+ -0.007357611*Marital_Status_2_+ 0.004161881*Marital_Status_3_+ -0.003334178*Marital_Status_4_+ 0.0030096039*Marital_Status_5_+ 0.0609654599*_S1_ACCEPTEDCMPTOTAL+ 0.2916437296*_S2_FRQ+
0.1154801729*_S3_INCOME+ -0.805526511*_S4_MNT+ 0.0844981983*_S5_MNTGOLDPRODS+ 0.4796242204*_S6_MNTMEATPRODUCTS+ -0.062347745*_S7_NUMCATALOGPURCHASES+ -0.031857708*_S8_NUMDEALSPURCHASES+ 0.0774997018*_S9_NUMWEBVISITSMONTH+ 0.0158091776*_S10_RFMSTAT+
0.0115610406*_S11_RECENCY+ 0.000437064*_S12_TEENHOME+ -0.019202585*_S13_YEAR_BIRTH;
35541     +/*----------------------------------------------*/
35542     +* Component 3 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 2;
35543     +/*----------------------------------------------*/
35544     +;
MPRINT(EM_DIAGRAM):   ;
35545     +_SPRIN23=
35546     +-0.015105189*Marital_Status_1_+
35547     +0.0118862269*Marital_Status_2_+
35548     +-0.011343113*Marital_Status_3_+
35549     +0.0045776631*Marital_Status_4_+
35550     +0.0083717862*Marital_Status_5_+
35551     +0.0497052612*_S1_ACCEPTEDCMPTOTAL+
35552     +-0.32469371*_S2_FRQ+
35553     +-0.570505038*_S3_INCOME+
35554     +-0.051638052*_S4_MNT+
35555     +-0.000179679*_S5_MNTGOLDPRODS+
35556     +0.3305454324*_S6_MNTMEATPRODUCTS+
35557     +0.6167274273*_S7_NUMCATALOGPURCHASES+
35558     +-0.009076585*_S8_NUMDEALSPURCHASES+
35559     +-0.05161006*_S9_NUMWEBVISITSMONTH+
35560     +-0.009614781*_S10_RFMSTAT+
35561     +-0.006477144*_S11_RECENCY+
35562     +0.2662240883*_S12_TEENHOME+
35563     +0.0017486593*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN23= -0.015105189*Marital_Status_1_+ 0.0118862269*Marital_Status_2_+ -0.011343113*Marital_Status_3_+ 0.0045776631*Marital_Status_4_+ 0.0083717862*Marital_Status_5_+ 0.0497052612*_S1_ACCEPTEDCMPTOTAL+ -0.32469371*_S2_FRQ+
-0.570505038*_S3_INCOME+ -0.051638052*_S4_MNT+ -0.000179679*_S5_MNTGOLDPRODS+ 0.3305454324*_S6_MNTMEATPRODUCTS+ 0.6167274273*_S7_NUMCATALOGPURCHASES+ -0.009076585*_S8_NUMDEALSPURCHASES+ -0.05161006*_S9_NUMWEBVISITSMONTH+ -0.009614781*_S10_RFMSTAT+
-0.006477144*_S11_RECENCY+ 0.2662240883*_S12_TEENHOME+ 0.0017486593*_S13_YEAR_BIRTH;
35564     +/*----------------------------------------------*/
35565     +* Component 4 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 2;
35566     +/*----------------------------------------------*/
35567     +;
MPRINT(EM_DIAGRAM):   ;
35568     +_SPRIN24=
35569     +0.0251132215*Marital_Status_1_+
35570     +-0.025395883*Marital_Status_2_+
35571     +-0.017975806*Marital_Status_3_+
35572     +-0.010924123*Marital_Status_4_+
35573     +0.0991213763*Marital_Status_5_+
35574     +0.001222243*_S1_ACCEPTEDCMPTOTAL+
35575     +0.1550412507*_S2_FRQ+
35576     +0.0627898484*_S3_INCOME+
35577     +0.0644523337*_S4_MNT+
35578     +-0.783639627*_S5_MNTGOLDPRODS+
35579     +0.1567513421*_S6_MNTMEATPRODUCTS+
35580     +0.0854886204*_S7_NUMCATALOGPURCHASES+
35581     +0.3566620158*_S8_NUMDEALSPURCHASES+
35582     +0.0492555841*_S9_NUMWEBVISITSMONTH+
35583     +0.243420967*_S10_RFMSTAT+
35584     +0.2657921379*_S11_RECENCY+
35585     +-0.022914665*_S12_TEENHOME+
35586     +0.2242595425*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN24= 0.0251132215*Marital_Status_1_+ -0.025395883*Marital_Status_2_+ -0.017975806*Marital_Status_3_+ -0.010924123*Marital_Status_4_+ 0.0991213763*Marital_Status_5_+ 0.001222243*_S1_ACCEPTEDCMPTOTAL+ 0.1550412507*_S2_FRQ+
0.0627898484*_S3_INCOME+ 0.0644523337*_S4_MNT+ -0.783639627*_S5_MNTGOLDPRODS+ 0.1567513421*_S6_MNTMEATPRODUCTS+ 0.0854886204*_S7_NUMCATALOGPURCHASES+ 0.3566620158*_S8_NUMDEALSPURCHASES+ 0.0492555841*_S9_NUMWEBVISITSMONTH+ 0.243420967*_S10_RFMSTAT+
0.2657921379*_S11_RECENCY+ -0.022914665*_S12_TEENHOME+ 0.2242595425*_S13_YEAR_BIRTH;
35587     +/*----------------------------------------------*/
35588     +* Component 5 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 2;
35589     +/*----------------------------------------------*/
35590     +;
MPRINT(EM_DIAGRAM):   ;
35591     +_SPRIN25=
35592     +-0.05935653*Marital_Status_1_+
35593     +-0.032851354*Marital_Status_2_+
35594     +0.6701503133*Marital_Status_3_+
35595     +-0.533967645*Marital_Status_4_+
35596     +-0.093035935*Marital_Status_5_+
35597     +0.0427953086*_S1_ACCEPTEDCMPTOTAL+
35598     +0.0760580738*_S2_FRQ+
35599     +-0.040927706*_S3_INCOME+
35600     +0.0321133035*_S4_MNT+
35601     +0.1825666886*_S5_MNTGOLDPRODS+
35602     +-0.029779653*_S6_MNTMEATPRODUCTS+
35603     +0.0256989779*_S7_NUMCATALOGPURCHASES+
35604     +0.2880147854*_S8_NUMDEALSPURCHASES+
35605     +0.1929364069*_S9_NUMWEBVISITSMONTH+
35606     +0.1355032466*_S10_RFMSTAT+
35607     +-0.148578649*_S11_RECENCY+
35608     +0.066769607*_S12_TEENHOME+
35609     +0.2055398914*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN25= -0.05935653*Marital_Status_1_+ -0.032851354*Marital_Status_2_+ 0.6701503133*Marital_Status_3_+ -0.533967645*Marital_Status_4_+ -0.093035935*Marital_Status_5_+ 0.0427953086*_S1_ACCEPTEDCMPTOTAL+ 0.0760580738*_S2_FRQ+
-0.040927706*_S3_INCOME+ 0.0321133035*_S4_MNT+ 0.1825666886*_S5_MNTGOLDPRODS+ -0.029779653*_S6_MNTMEATPRODUCTS+ 0.0256989779*_S7_NUMCATALOGPURCHASES+ 0.2880147854*_S8_NUMDEALSPURCHASES+ 0.1929364069*_S9_NUMWEBVISITSMONTH+ 0.1355032466*_S10_RFMSTAT+
-0.148578649*_S11_RECENCY+ 0.066769607*_S12_TEENHOME+ 0.2055398914*_S13_YEAR_BIRTH;
35610     +/*----------------------------------------------*/
35611     +* Component 6 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 6 at stage 2;
35612     +/*----------------------------------------------*/
35613     +;
MPRINT(EM_DIAGRAM):   ;
35614     +_SPRIN26=
35615     +-0.008493382*Marital_Status_1_+
35616     +-0.011188081*Marital_Status_2_+
35617     +0.0016309879*Marital_Status_3_+
35618     +0.0067450524*Marital_Status_4_+
35619     +0.0264657057*Marital_Status_5_+
35620     +0.2193918461*_S1_ACCEPTEDCMPTOTAL+
35621     +0.3773554763*_S2_FRQ+
35622     +0.3893349243*_S3_INCOME+
35623     +0.4090071576*_S4_MNT+
35624     +0.2396116109*_S5_MNTGOLDPRODS+
35625     +0.3759667232*_S6_MNTMEATPRODUCTS+
35626     +0.3869383929*_S7_NUMCATALOGPURCHASES+
35627     +-0.093319147*_S8_NUMDEALSPURCHASES+
35628     +-0.290294871*_S9_NUMWEBVISITSMONTH+
35629     +0.1924005307*_S10_RFMSTAT+
35630     +-0.012253394*_S11_RECENCY+
35631     +-0.083331603*_S12_TEENHOME+
35632     +-0.063857354*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN26= -0.008493382*Marital_Status_1_+ -0.011188081*Marital_Status_2_+ 0.0016309879*Marital_Status_3_+ 0.0067450524*Marital_Status_4_+ 0.0264657057*Marital_Status_5_+ 0.2193918461*_S1_ACCEPTEDCMPTOTAL+ 0.3773554763*_S2_FRQ+
0.3893349243*_S3_INCOME+ 0.4090071576*_S4_MNT+ 0.2396116109*_S5_MNTGOLDPRODS+ 0.3759667232*_S6_MNTMEATPRODUCTS+ 0.3869383929*_S7_NUMCATALOGPURCHASES+ -0.093319147*_S8_NUMDEALSPURCHASES+ -0.290294871*_S9_NUMWEBVISITSMONTH+ 0.1924005307*_S10_RFMSTAT+
-0.012253394*_S11_RECENCY+ -0.083331603*_S12_TEENHOME+ -0.063857354*_S13_YEAR_BIRTH;
35633     +;
MPRINT(EM_DIAGRAM):   ;
35634     +/*----------------------------------------------*/
35635     +* Component 1 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 3;
35636     +/*----------------------------------------------*/
35637     +;
MPRINT(EM_DIAGRAM):   ;
35638     +_SPRIN31=
35639     +0.1311533864*Marital_Status_1_+
35640     +0.0462721094*Marital_Status_2_+
35641     +-0.187574538*Marital_Status_3_+
35642     +-0.032460344*Marital_Status_4_+
35643     +0.1682450848*Marital_Status_5_+
35644     +-0.025261674*_S1_ACCEPTEDCMPTOTAL+
35645     +0.1770010525*_S2_FRQ+
35646     +0.1068447763*_S3_INCOME+
35647     +0.0282279128*_S4_MNT+
35648     +0.1511903934*_S5_MNTGOLDPRODS+
35649     +-0.116748849*_S6_MNTMEATPRODUCTS+
35650     +0.0221938124*_S7_NUMCATALOGPURCHASES+
35651     +0.4952296943*_S8_NUMDEALSPURCHASES+
35652     +0.138103439*_S9_NUMWEBVISITSMONTH+
35653     +-0.055698032*_S10_RFMSTAT+
35654     +0.0890909209*_S11_RECENCY+
35655     +0.5881740989*_S12_TEENHOME+
35656     +-0.462210566*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN31= 0.1311533864*Marital_Status_1_+ 0.0462721094*Marital_Status_2_+ -0.187574538*Marital_Status_3_+ -0.032460344*Marital_Status_4_+ 0.1682450848*Marital_Status_5_+ -0.025261674*_S1_ACCEPTEDCMPTOTAL+ 0.1770010525*_S2_FRQ+
0.1068447763*_S3_INCOME+ 0.0282279128*_S4_MNT+ 0.1511903934*_S5_MNTGOLDPRODS+ -0.116748849*_S6_MNTMEATPRODUCTS+ 0.0221938124*_S7_NUMCATALOGPURCHASES+ 0.4952296943*_S8_NUMDEALSPURCHASES+ 0.138103439*_S9_NUMWEBVISITSMONTH+ -0.055698032*_S10_RFMSTAT+
0.0890909209*_S11_RECENCY+ 0.5881740989*_S12_TEENHOME+ -0.462210566*_S13_YEAR_BIRTH;
35657     +/*----------------------------------------------*/
35658     +* Component 2 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 3;
35659     +/*----------------------------------------------*/
35660     +;
MPRINT(EM_DIAGRAM):   ;
35661     +_SPRIN32=
35662     +-0.015105189*Marital_Status_1_+
35663     +0.0118862269*Marital_Status_2_+
35664     +-0.011343113*Marital_Status_3_+
35665     +0.0045776631*Marital_Status_4_+
35666     +0.0083717862*Marital_Status_5_+
35667     +0.0497052612*_S1_ACCEPTEDCMPTOTAL+
35668     +-0.32469371*_S2_FRQ+
35669     +-0.570505038*_S3_INCOME+
35670     +-0.051638052*_S4_MNT+
35671     +-0.000179679*_S5_MNTGOLDPRODS+
35672     +0.3305454324*_S6_MNTMEATPRODUCTS+
35673     +0.6167274273*_S7_NUMCATALOGPURCHASES+
35674     +-0.009076585*_S8_NUMDEALSPURCHASES+
35675     +-0.05161006*_S9_NUMWEBVISITSMONTH+
35676     +-0.009614781*_S10_RFMSTAT+
35677     +-0.006477144*_S11_RECENCY+
35678     +0.2662240883*_S12_TEENHOME+
35679     +0.0017486593*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN32= -0.015105189*Marital_Status_1_+ 0.0118862269*Marital_Status_2_+ -0.011343113*Marital_Status_3_+ 0.0045776631*Marital_Status_4_+ 0.0083717862*Marital_Status_5_+ 0.0497052612*_S1_ACCEPTEDCMPTOTAL+ -0.32469371*_S2_FRQ+
-0.570505038*_S3_INCOME+ -0.051638052*_S4_MNT+ -0.000179679*_S5_MNTGOLDPRODS+ 0.3305454324*_S6_MNTMEATPRODUCTS+ 0.6167274273*_S7_NUMCATALOGPURCHASES+ -0.009076585*_S8_NUMDEALSPURCHASES+ -0.05161006*_S9_NUMWEBVISITSMONTH+ -0.009614781*_S10_RFMSTAT+
-0.006477144*_S11_RECENCY+ 0.2662240883*_S12_TEENHOME+ 0.0017486593*_S13_YEAR_BIRTH;
35680     +/*----------------------------------------------*/
35681     +* Component 3 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 3;
35682     +/*----------------------------------------------*/
35683     +;
MPRINT(EM_DIAGRAM):   ;
35684     +_SPRIN33=
35685     +0.10761459*Marital_Status_1_+
35686     +0.0028979951*Marital_Status_2_+
35687     +-0.15064667*Marital_Status_3_+
35688     +-0.043533602*Marital_Status_4_+
35689     +0.272779799*Marital_Status_5_+
35690     +-0.796500815*_S1_ACCEPTEDCMPTOTAL+
35691     +0.0948384767*_S2_FRQ+
35692     +-0.024901753*_S3_INCOME+
35693     +0.036811217*_S4_MNT+
35694     +0.2470337929*_S5_MNTGOLDPRODS+
35695     +0.1168111721*_S6_MNTMEATPRODUCTS+
35696     +0.0697126712*_S7_NUMCATALOGPURCHASES+
35697     +0.171968035*_S8_NUMDEALSPURCHASES+
35698     +-0.102108299*_S9_NUMWEBVISITSMONTH+
35699     +-0.022671576*_S10_RFMSTAT+
35700     +-0.022630633*_S11_RECENCY+
35701     +-0.113962381*_S12_TEENHOME+
35702     +0.3323945855*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN33= 0.10761459*Marital_Status_1_+ 0.0028979951*Marital_Status_2_+ -0.15064667*Marital_Status_3_+ -0.043533602*Marital_Status_4_+ 0.272779799*Marital_Status_5_+ -0.796500815*_S1_ACCEPTEDCMPTOTAL+ 0.0948384767*_S2_FRQ+
-0.024901753*_S3_INCOME+ 0.036811217*_S4_MNT+ 0.2470337929*_S5_MNTGOLDPRODS+ 0.1168111721*_S6_MNTMEATPRODUCTS+ 0.0697126712*_S7_NUMCATALOGPURCHASES+ 0.171968035*_S8_NUMDEALSPURCHASES+ -0.102108299*_S9_NUMWEBVISITSMONTH+ -0.022671576*_S10_RFMSTAT+
-0.022630633*_S11_RECENCY+ -0.113962381*_S12_TEENHOME+ 0.3323945855*_S13_YEAR_BIRTH;
35703     +/*----------------------------------------------*/
35704     +* Component 4 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 3;
35705     +/*----------------------------------------------*/
35706     +;
MPRINT(EM_DIAGRAM):   ;
35707     +_SPRIN34=
35708     +0.0698121964*Marital_Status_1_+
35709     +-0.071196228*Marital_Status_2_+
35710     +-0.215004244*Marital_Status_3_+
35711     +-0.007122854*Marital_Status_4_+
35712     +0.6169498832*Marital_Status_5_+
35713     +0.4368245541*_S1_ACCEPTEDCMPTOTAL+
35714     +0.0038078896*_S2_FRQ+
35715     +-0.158979071*_S3_INCOME+
35716     +0.0387829548*_S4_MNT+
35717     +0.224457403*_S5_MNTGOLDPRODS+
35718     +-0.044166316*_S6_MNTMEATPRODUCTS+
35719     +0.0022209443*_S7_NUMCATALOGPURCHASES+
35720     +0.1176239081*_S8_NUMDEALSPURCHASES+
35721     +0.3801731715*_S9_NUMWEBVISITSMONTH+
35722     +0.0193880887*_S10_RFMSTAT+
35723     +0.0078912704*_S11_RECENCY+
35724     +-0.304271031*_S12_TEENHOME+
35725     +0.2045023374*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN34= 0.0698121964*Marital_Status_1_+ -0.071196228*Marital_Status_2_+ -0.215004244*Marital_Status_3_+ -0.007122854*Marital_Status_4_+ 0.6169498832*Marital_Status_5_+ 0.4368245541*_S1_ACCEPTEDCMPTOTAL+ 0.0038078896*_S2_FRQ+
-0.158979071*_S3_INCOME+ 0.0387829548*_S4_MNT+ 0.224457403*_S5_MNTGOLDPRODS+ -0.044166316*_S6_MNTMEATPRODUCTS+ 0.0022209443*_S7_NUMCATALOGPURCHASES+ 0.1176239081*_S8_NUMDEALSPURCHASES+ 0.3801731715*_S9_NUMWEBVISITSMONTH+ 0.0193880887*_S10_RFMSTAT+
0.0078912704*_S11_RECENCY+ -0.304271031*_S12_TEENHOME+ 0.2045023374*_S13_YEAR_BIRTH;
35726     +/*----------------------------------------------*/
35727     +* Component 5 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 3;
35728     +/*----------------------------------------------*/
35729     +;
MPRINT(EM_DIAGRAM):   ;
35730     +_SPRIN35=
35731     +-0.000232895*Marital_Status_1_+
35732     +-0.004880779*Marital_Status_2_+
35733     +0.0006083294*Marital_Status_3_+
35734     +0.0082855013*Marital_Status_4_+
35735     +-0.007529226*Marital_Status_5_+
35736     +-0.066896457*_S1_ACCEPTEDCMPTOTAL+
35737     +-0.584544523*_S2_FRQ+
35738     +0.6315682517*_S3_INCOME+
35739     +-0.173384958*_S4_MNT+
35740     +0.0199300933*_S5_MNTGOLDPRODS+
35741     +-0.065996201*_S6_MNTMEATPRODUCTS+
35742     +0.3742607477*_S7_NUMCATALOGPURCHASES+
35743     +0.1066403357*_S8_NUMDEALSPURCHASES+
35744     +0.2338771409*_S9_NUMWEBVISITSMONTH+
35745     +0.0170511776*_S10_RFMSTAT+
35746     +0.0109890941*_S11_RECENCY+
35747     +-0.115442279*_S12_TEENHOME+
35748     +-0.010452951*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN35= -0.000232895*Marital_Status_1_+ -0.004880779*Marital_Status_2_+ 0.0006083294*Marital_Status_3_+ 0.0082855013*Marital_Status_4_+ -0.007529226*Marital_Status_5_+ -0.066896457*_S1_ACCEPTEDCMPTOTAL+ -0.584544523*_S2_FRQ+
0.6315682517*_S3_INCOME+ -0.173384958*_S4_MNT+ 0.0199300933*_S5_MNTGOLDPRODS+ -0.065996201*_S6_MNTMEATPRODUCTS+ 0.3742607477*_S7_NUMCATALOGPURCHASES+ 0.1066403357*_S8_NUMDEALSPURCHASES+ 0.2338771409*_S9_NUMWEBVISITSMONTH+ 0.0170511776*_S10_RFMSTAT+
0.0109890941*_S11_RECENCY+ -0.115442279*_S12_TEENHOME+ -0.010452951*_S13_YEAR_BIRTH;
35749     +/*----------------------------------------------*/
35750     +* Component 6 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 6 at stage 3;
35751     +/*----------------------------------------------*/
35752     +;
MPRINT(EM_DIAGRAM):   ;
35753     +_SPRIN36=
35754     +0.0093097628*Marital_Status_1_+
35755     +-0.007357611*Marital_Status_2_+
35756     +0.004161881*Marital_Status_3_+
35757     +-0.003334178*Marital_Status_4_+
35758     +0.0030096039*Marital_Status_5_+
35759     +0.0609654599*_S1_ACCEPTEDCMPTOTAL+
35760     +0.2916437296*_S2_FRQ+
35761     +0.1154801729*_S3_INCOME+
35762     +-0.805526511*_S4_MNT+
35763     +0.0844981983*_S5_MNTGOLDPRODS+
35764     +0.4796242204*_S6_MNTMEATPRODUCTS+
35765     +-0.062347745*_S7_NUMCATALOGPURCHASES+
35766     +-0.031857708*_S8_NUMDEALSPURCHASES+
35767     +0.0774997018*_S9_NUMWEBVISITSMONTH+
35768     +0.0158091776*_S10_RFMSTAT+
35769     +0.0115610406*_S11_RECENCY+
35770     +0.000437064*_S12_TEENHOME+
35771     +-0.019202585*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN36= 0.0093097628*Marital_Status_1_+ -0.007357611*Marital_Status_2_+ 0.004161881*Marital_Status_3_+ -0.003334178*Marital_Status_4_+ 0.0030096039*Marital_Status_5_+ 0.0609654599*_S1_ACCEPTEDCMPTOTAL+ 0.2916437296*_S2_FRQ+
0.1154801729*_S3_INCOME+ -0.805526511*_S4_MNT+ 0.0844981983*_S5_MNTGOLDPRODS+ 0.4796242204*_S6_MNTMEATPRODUCTS+ -0.062347745*_S7_NUMCATALOGPURCHASES+ -0.031857708*_S8_NUMDEALSPURCHASES+ 0.0774997018*_S9_NUMWEBVISITSMONTH+ 0.0158091776*_S10_RFMSTAT+
0.0115610406*_S11_RECENCY+ 0.000437064*_S12_TEENHOME+ -0.019202585*_S13_YEAR_BIRTH;
35772     +;
MPRINT(EM_DIAGRAM):   ;
35773     +/*----------------------------------------------*/
35774     +* Component 1 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 4;
35775     +/*----------------------------------------------*/
35776     +;
MPRINT(EM_DIAGRAM):   ;
35777     +_SPRIN41=
35778     +0.7201014863*Marital_Status_1_+
35779     +-0.039414952*Marital_Status_2_+
35780     +-0.261027185*Marital_Status_3_+
35781     +-0.002570027*Marital_Status_4_+
35782     +-0.517989138*Marital_Status_5_+
35783     +0.1032358936*_S1_ACCEPTEDCMPTOTAL+
35784     +0.0293938239*_S2_FRQ+
35785     +-0.060123348*_S3_INCOME+
35786     +0.0306908632*_S4_MNT+
35787     +0.0931751568*_S5_MNTGOLDPRODS+
35788     +0.0016465853*_S6_MNTMEATPRODUCTS+
35789     +0.0174804568*_S7_NUMCATALOGPURCHASES+
35790     +0.1233541944*_S8_NUMDEALSPURCHASES+
35791     +0.1518084321*_S9_NUMWEBVISITSMONTH+
35792     +0.1449751106*_S10_RFMSTAT+
35793     +-0.133344887*_S11_RECENCY+
35794     +-0.066595833*_S12_TEENHOME+
35795     +0.1920463047*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN41= 0.7201014863*Marital_Status_1_+ -0.039414952*Marital_Status_2_+ -0.261027185*Marital_Status_3_+ -0.002570027*Marital_Status_4_+ -0.517989138*Marital_Status_5_+ 0.1032358936*_S1_ACCEPTEDCMPTOTAL+ 0.0293938239*_S2_FRQ+
-0.060123348*_S3_INCOME+ 0.0306908632*_S4_MNT+ 0.0931751568*_S5_MNTGOLDPRODS+ 0.0016465853*_S6_MNTMEATPRODUCTS+ 0.0174804568*_S7_NUMCATALOGPURCHASES+ 0.1233541944*_S8_NUMDEALSPURCHASES+ 0.1518084321*_S9_NUMWEBVISITSMONTH+ 0.1449751106*_S10_RFMSTAT+
-0.133344887*_S11_RECENCY+ -0.066595833*_S12_TEENHOME+ 0.1920463047*_S13_YEAR_BIRTH;
35796     +/*----------------------------------------------*/
35797     +* Component 2 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 4;
35798     +/*----------------------------------------------*/
35799     +;
MPRINT(EM_DIAGRAM):   ;
35800     +_SPRIN42=
35801     +0.0093097628*Marital_Status_1_+
35802     +-0.007357611*Marital_Status_2_+
35803     +0.004161881*Marital_Status_3_+
35804     +-0.003334178*Marital_Status_4_+
35805     +0.0030096039*Marital_Status_5_+
35806     +0.0609654599*_S1_ACCEPTEDCMPTOTAL+
35807     +0.2916437296*_S2_FRQ+
35808     +0.1154801729*_S3_INCOME+
35809     +-0.805526511*_S4_MNT+
35810     +0.0844981983*_S5_MNTGOLDPRODS+
35811     +0.4796242204*_S6_MNTMEATPRODUCTS+
35812     +-0.062347745*_S7_NUMCATALOGPURCHASES+
35813     +-0.031857708*_S8_NUMDEALSPURCHASES+
35814     +0.0774997018*_S9_NUMWEBVISITSMONTH+
35815     +0.0158091776*_S10_RFMSTAT+
35816     +0.0115610406*_S11_RECENCY+
35817     +0.000437064*_S12_TEENHOME+
35818     +-0.019202585*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN42= 0.0093097628*Marital_Status_1_+ -0.007357611*Marital_Status_2_+ 0.004161881*Marital_Status_3_+ -0.003334178*Marital_Status_4_+ 0.0030096039*Marital_Status_5_+ 0.0609654599*_S1_ACCEPTEDCMPTOTAL+ 0.2916437296*_S2_FRQ+
0.1154801729*_S3_INCOME+ -0.805526511*_S4_MNT+ 0.0844981983*_S5_MNTGOLDPRODS+ 0.4796242204*_S6_MNTMEATPRODUCTS+ -0.062347745*_S7_NUMCATALOGPURCHASES+ -0.031857708*_S8_NUMDEALSPURCHASES+ 0.0774997018*_S9_NUMWEBVISITSMONTH+ 0.0158091776*_S10_RFMSTAT+
0.0115610406*_S11_RECENCY+ 0.000437064*_S12_TEENHOME+ -0.019202585*_S13_YEAR_BIRTH;
35819     +/*----------------------------------------------*/
35820     +* Component 3 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 4;
35821     +/*----------------------------------------------*/
35822     +;
MPRINT(EM_DIAGRAM):   ;
35823     +_SPRIN43=
35824     +-0.529759999*Marital_Status_1_+
35825     +0.0929641115*Marital_Status_2_+
35826     +-0.091427311*Marital_Status_3_+
35827     +0.5040179245*Marital_Status_4_+
35828     +-0.362861674*Marital_Status_5_+
35829     +0.0348823878*_S1_ACCEPTEDCMPTOTAL+
35830     +0.1133790974*_S2_FRQ+
35831     +-0.046925784*_S3_INCOME+
35832     +0.041087743*_S4_MNT+
35833     +0.2145202702*_S5_MNTGOLDPRODS+
35834     +-0.013889744*_S6_MNTMEATPRODUCTS+
35835     +0.0241896601*_S7_NUMCATALOGPURCHASES+
35836     +0.3401453099*_S8_NUMDEALSPURCHASES+
35837     +0.2250315176*_S9_NUMWEBVISITSMONTH+
35838     +0.0766337761*_S10_RFMSTAT+
35839     +-0.026511866*_S11_RECENCY+
35840     +0.020673873*_S12_TEENHOME+
35841     +0.2802686549*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN43= -0.529759999*Marital_Status_1_+ 0.0929641115*Marital_Status_2_+ -0.091427311*Marital_Status_3_+ 0.5040179245*Marital_Status_4_+ -0.362861674*Marital_Status_5_+ 0.0348823878*_S1_ACCEPTEDCMPTOTAL+ 0.1133790974*_S2_FRQ+
-0.046925784*_S3_INCOME+ 0.041087743*_S4_MNT+ 0.2145202702*_S5_MNTGOLDPRODS+ -0.013889744*_S6_MNTMEATPRODUCTS+ 0.0241896601*_S7_NUMCATALOGPURCHASES+ 0.3401453099*_S8_NUMDEALSPURCHASES+ 0.2250315176*_S9_NUMWEBVISITSMONTH+ 0.0766337761*_S10_RFMSTAT+
-0.026511866*_S11_RECENCY+ 0.020673873*_S12_TEENHOME+ 0.2802686549*_S13_YEAR_BIRTH;
35842     +/*----------------------------------------------*/
35843     +* Component 4 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 4;
35844     +/*----------------------------------------------*/
35845     +;
MPRINT(EM_DIAGRAM):   ;
35846     +_SPRIN44=
35847     +0.0062762631*Marital_Status_1_+
35848     +-0.010875887*Marital_Status_2_+
35849     +-0.001735199*Marital_Status_3_+
35850     +0.003215339*Marital_Status_4_+
35851     +0.0164402875*Marital_Status_5_+
35852     +0.0819675329*_S1_ACCEPTEDCMPTOTAL+
35853     +-0.462873318*_S2_FRQ+
35854     +0.0469918013*_S3_INCOME+
35855     +0.2304506395*_S4_MNT+
35856     +0.0977211562*_S5_MNTGOLDPRODS+
35857     +0.5904759878*_S6_MNTMEATPRODUCTS+
35858     +-0.545547887*_S7_NUMCATALOGPURCHASES+
35859     +0.2139463159*_S8_NUMDEALSPURCHASES+
35860     +-0.117021636*_S9_NUMWEBVISITSMONTH+
35861     +0.0161900995*_S10_RFMSTAT+
35862     +0.028974563*_S11_RECENCY+
35863     +0.0823235285*_S12_TEENHOME+
35864     +0.0096368551*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN44= 0.0062762631*Marital_Status_1_+ -0.010875887*Marital_Status_2_+ -0.001735199*Marital_Status_3_+ 0.003215339*Marital_Status_4_+ 0.0164402875*Marital_Status_5_+ 0.0819675329*_S1_ACCEPTEDCMPTOTAL+ -0.462873318*_S2_FRQ+
0.0469918013*_S3_INCOME+ 0.2304506395*_S4_MNT+ 0.0977211562*_S5_MNTGOLDPRODS+ 0.5904759878*_S6_MNTMEATPRODUCTS+ -0.545547887*_S7_NUMCATALOGPURCHASES+ 0.2139463159*_S8_NUMDEALSPURCHASES+ -0.117021636*_S9_NUMWEBVISITSMONTH+ 0.0161900995*_S10_RFMSTAT+
0.028974563*_S11_RECENCY+ 0.0823235285*_S12_TEENHOME+ 0.0096368551*_S13_YEAR_BIRTH;
35865     +/*----------------------------------------------*/
35866     +* Component 5 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 4;
35867     +/*----------------------------------------------*/
35868     +;
MPRINT(EM_DIAGRAM):   ;
35869     +_SPRIN45=
35870     +0.0259027139*Marital_Status_1_+
35871     +-0.023219643*Marital_Status_2_+
35872     +-0.048071754*Marital_Status_3_+
35873     +0.0104245904*Marital_Status_4_+
35874     +0.111093904*Marital_Status_5_+
35875     +0.1029306769*_S1_ACCEPTEDCMPTOTAL+
35876     +-0.104590704*_S2_FRQ+
35877     +0.0992739498*_S3_INCOME+
35878     +-0.126525705*_S4_MNT+
35879     +0.1755348321*_S5_MNTGOLDPRODS+
35880     +-0.219398621*_S6_MNTMEATPRODUCTS+
35881     +-0.086592319*_S7_NUMCATALOGPURCHASES+
35882     +-0.25424186*_S8_NUMDEALSPURCHASES+
35883     +-0.203846899*_S9_NUMWEBVISITSMONTH+
35884     +0.4677013509*_S10_RFMSTAT+
35885     +0.3215691362*_S11_RECENCY+
35886     +0.4850182787*_S12_TEENHOME+
35887     +0.431969361*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN45= 0.0259027139*Marital_Status_1_+ -0.023219643*Marital_Status_2_+ -0.048071754*Marital_Status_3_+ 0.0104245904*Marital_Status_4_+ 0.111093904*Marital_Status_5_+ 0.1029306769*_S1_ACCEPTEDCMPTOTAL+ -0.104590704*_S2_FRQ+
0.0992739498*_S3_INCOME+ -0.126525705*_S4_MNT+ 0.1755348321*_S5_MNTGOLDPRODS+ -0.219398621*_S6_MNTMEATPRODUCTS+ -0.086592319*_S7_NUMCATALOGPURCHASES+ -0.25424186*_S8_NUMDEALSPURCHASES+ -0.203846899*_S9_NUMWEBVISITSMONTH+ 0.4677013509*_S10_RFMSTAT+
0.3215691362*_S11_RECENCY+ 0.4850182787*_S12_TEENHOME+ 0.431969361*_S13_YEAR_BIRTH;
35888     +/*----------------------------------------------*/
35889     +* Component 6 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 6 at stage 4;
35890     +/*----------------------------------------------*/
35891     +;
MPRINT(EM_DIAGRAM):   ;
35892     +_SPRIN46=
35893     +-0.05935653*Marital_Status_1_+
35894     +-0.032851354*Marital_Status_2_+
35895     +0.6701503133*Marital_Status_3_+
35896     +-0.533967645*Marital_Status_4_+
35897     +-0.093035935*Marital_Status_5_+
35898     +0.0427953086*_S1_ACCEPTEDCMPTOTAL+
35899     +0.0760580738*_S2_FRQ+
35900     +-0.040927706*_S3_INCOME+
35901     +0.0321133035*_S4_MNT+
35902     +0.1825666886*_S5_MNTGOLDPRODS+
35903     +-0.029779653*_S6_MNTMEATPRODUCTS+
35904     +0.0256989779*_S7_NUMCATALOGPURCHASES+
35905     +0.2880147854*_S8_NUMDEALSPURCHASES+
35906     +0.1929364069*_S9_NUMWEBVISITSMONTH+
35907     +0.1355032466*_S10_RFMSTAT+
35908     +-0.148578649*_S11_RECENCY+
35909     +0.066769607*_S12_TEENHOME+
35910     +0.2055398914*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN46= -0.05935653*Marital_Status_1_+ -0.032851354*Marital_Status_2_+ 0.6701503133*Marital_Status_3_+ -0.533967645*Marital_Status_4_+ -0.093035935*Marital_Status_5_+ 0.0427953086*_S1_ACCEPTEDCMPTOTAL+ 0.0760580738*_S2_FRQ+
-0.040927706*_S3_INCOME+ 0.0321133035*_S4_MNT+ 0.1825666886*_S5_MNTGOLDPRODS+ -0.029779653*_S6_MNTMEATPRODUCTS+ 0.0256989779*_S7_NUMCATALOGPURCHASES+ 0.2880147854*_S8_NUMDEALSPURCHASES+ 0.1929364069*_S9_NUMWEBVISITSMONTH+ 0.1355032466*_S10_RFMSTAT+
-0.148578649*_S11_RECENCY+ 0.066769607*_S12_TEENHOME+ 0.2055398914*_S13_YEAR_BIRTH;
35911     +;
MPRINT(EM_DIAGRAM):   ;
35912     +/*----------------------------------------------*/
35913     +* Component 1 at stage 5;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 5;
35914     +/*----------------------------------------------*/
35915     +;
MPRINT(EM_DIAGRAM):   ;
35916     +_SPRIN51=
35917     +0.0093097628*Marital_Status_1_+
35918     +-0.007357611*Marital_Status_2_+
35919     +0.004161881*Marital_Status_3_+
35920     +-0.003334178*Marital_Status_4_+
35921     +0.0030096039*Marital_Status_5_+
35922     +0.0609654599*_S1_ACCEPTEDCMPTOTAL+
35923     +0.2916437296*_S2_FRQ+
35924     +0.1154801729*_S3_INCOME+
35925     +-0.805526511*_S4_MNT+
35926     +0.0844981983*_S5_MNTGOLDPRODS+
35927     +0.4796242204*_S6_MNTMEATPRODUCTS+
35928     +-0.062347745*_S7_NUMCATALOGPURCHASES+
35929     +-0.031857708*_S8_NUMDEALSPURCHASES+
35930     +0.0774997018*_S9_NUMWEBVISITSMONTH+
35931     +0.0158091776*_S10_RFMSTAT+
35932     +0.0115610406*_S11_RECENCY+
35933     +0.000437064*_S12_TEENHOME+
35934     +-0.019202585*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN51= 0.0093097628*Marital_Status_1_+ -0.007357611*Marital_Status_2_+ 0.004161881*Marital_Status_3_+ -0.003334178*Marital_Status_4_+ 0.0030096039*Marital_Status_5_+ 0.0609654599*_S1_ACCEPTEDCMPTOTAL+ 0.2916437296*_S2_FRQ+
0.1154801729*_S3_INCOME+ -0.805526511*_S4_MNT+ 0.0844981983*_S5_MNTGOLDPRODS+ 0.4796242204*_S6_MNTMEATPRODUCTS+ -0.062347745*_S7_NUMCATALOGPURCHASES+ -0.031857708*_S8_NUMDEALSPURCHASES+ 0.0774997018*_S9_NUMWEBVISITSMONTH+ 0.0158091776*_S10_RFMSTAT+
0.0115610406*_S11_RECENCY+ 0.000437064*_S12_TEENHOME+ -0.019202585*_S13_YEAR_BIRTH;
35935     +/*----------------------------------------------*/
35936     +* Component 2 at stage 5;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 5;
35937     +/*----------------------------------------------*/
35938     +;
MPRINT(EM_DIAGRAM):   ;
35939     +_SPRIN52=
35940     +0.1626998739*Marital_Status_1_+
35941     +-0.79909083*Marital_Status_2_+
35942     +0.3388553128*Marital_Status_3_+
35943     +0.4475609678*Marital_Status_4_+
35944     +0.0873267528*Marital_Status_5_+
35945     +-0.062015793*_S1_ACCEPTEDCMPTOTAL+
35946     +0.0140882535*_S2_FRQ+
35947     +-0.006689305*_S3_INCOME+
35948     +0.0052515467*_S4_MNT+
35949     +0.0129809178*_S5_MNTGOLDPRODS+
35950     +-0.008873172*_S6_MNTMEATPRODUCTS+
35951     +0.008355514*_S7_NUMCATALOGPURCHASES+
35952     +0.0225316639*_S8_NUMDEALSPURCHASES+
35953     +0.0094785602*_S9_NUMWEBVISITSMONTH+
35954     +-0.010018638*_S10_RFMSTAT+
35955     +-0.018714474*_S11_RECENCY+
35956     +0.0581880557*_S12_TEENHOME+
35957     +-0.057923258*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN52= 0.1626998739*Marital_Status_1_+ -0.79909083*Marital_Status_2_+ 0.3388553128*Marital_Status_3_+ 0.4475609678*Marital_Status_4_+ 0.0873267528*Marital_Status_5_+ -0.062015793*_S1_ACCEPTEDCMPTOTAL+ 0.0140882535*_S2_FRQ+
-0.006689305*_S3_INCOME+ 0.0052515467*_S4_MNT+ 0.0129809178*_S5_MNTGOLDPRODS+ -0.008873172*_S6_MNTMEATPRODUCTS+ 0.008355514*_S7_NUMCATALOGPURCHASES+ 0.0225316639*_S8_NUMDEALSPURCHASES+ 0.0094785602*_S9_NUMWEBVISITSMONTH+ -0.010018638*_S10_RFMSTAT+
-0.018714474*_S11_RECENCY+ 0.0581880557*_S12_TEENHOME+ -0.057923258*_S13_YEAR_BIRTH;
35958     +/*----------------------------------------------*/
35959     +* Component 3 at stage 5;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 5;
35960     +/*----------------------------------------------*/
35961     +;
MPRINT(EM_DIAGRAM):   ;
35962     +_SPRIN53=
35963     +-0.000232895*Marital_Status_1_+
35964     +-0.004880779*Marital_Status_2_+
35965     +0.0006083294*Marital_Status_3_+
35966     +0.0082855013*Marital_Status_4_+
35967     +-0.007529226*Marital_Status_5_+
35968     +-0.066896457*_S1_ACCEPTEDCMPTOTAL+
35969     +-0.584544523*_S2_FRQ+
35970     +0.6315682517*_S3_INCOME+
35971     +-0.173384958*_S4_MNT+
35972     +0.0199300933*_S5_MNTGOLDPRODS+
35973     +-0.065996201*_S6_MNTMEATPRODUCTS+
35974     +0.3742607477*_S7_NUMCATALOGPURCHASES+
35975     +0.1066403357*_S8_NUMDEALSPURCHASES+
35976     +0.2338771409*_S9_NUMWEBVISITSMONTH+
35977     +0.0170511776*_S10_RFMSTAT+
35978     +0.0109890941*_S11_RECENCY+
35979     +-0.115442279*_S12_TEENHOME+
35980     +-0.010452951*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN53= -0.000232895*Marital_Status_1_+ -0.004880779*Marital_Status_2_+ 0.0006083294*Marital_Status_3_+ 0.0082855013*Marital_Status_4_+ -0.007529226*Marital_Status_5_+ -0.066896457*_S1_ACCEPTEDCMPTOTAL+ -0.584544523*_S2_FRQ+
0.6315682517*_S3_INCOME+ -0.173384958*_S4_MNT+ 0.0199300933*_S5_MNTGOLDPRODS+ -0.065996201*_S6_MNTMEATPRODUCTS+ 0.3742607477*_S7_NUMCATALOGPURCHASES+ 0.1066403357*_S8_NUMDEALSPURCHASES+ 0.2338771409*_S9_NUMWEBVISITSMONTH+ 0.0170511776*_S10_RFMSTAT+
0.0109890941*_S11_RECENCY+ -0.115442279*_S12_TEENHOME+ -0.010452951*_S13_YEAR_BIRTH;
35981     +/*----------------------------------------------*/
35982     +* Component 4 at stage 5;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 5;
35983     +/*----------------------------------------------*/
35984     +;
MPRINT(EM_DIAGRAM):   ;
35985     +_SPRIN54=
35986     +-0.008493382*Marital_Status_1_+
35987     +-0.011188081*Marital_Status_2_+
35988     +0.0016309879*Marital_Status_3_+
35989     +0.0067450524*Marital_Status_4_+
35990     +0.0264657057*Marital_Status_5_+
35991     +0.2193918461*_S1_ACCEPTEDCMPTOTAL+
35992     +0.3773554763*_S2_FRQ+
35993     +0.3893349243*_S3_INCOME+
35994     +0.4090071576*_S4_MNT+
35995     +0.2396116109*_S5_MNTGOLDPRODS+
35996     +0.3759667232*_S6_MNTMEATPRODUCTS+
35997     +0.3869383929*_S7_NUMCATALOGPURCHASES+
35998     +-0.093319147*_S8_NUMDEALSPURCHASES+
35999     +-0.290294871*_S9_NUMWEBVISITSMONTH+
36000     +0.1924005307*_S10_RFMSTAT+
36001     +-0.012253394*_S11_RECENCY+
36002     +-0.083331603*_S12_TEENHOME+
36003     +-0.063857354*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN54= -0.008493382*Marital_Status_1_+ -0.011188081*Marital_Status_2_+ 0.0016309879*Marital_Status_3_+ 0.0067450524*Marital_Status_4_+ 0.0264657057*Marital_Status_5_+ 0.2193918461*_S1_ACCEPTEDCMPTOTAL+ 0.3773554763*_S2_FRQ+
0.3893349243*_S3_INCOME+ 0.4090071576*_S4_MNT+ 0.2396116109*_S5_MNTGOLDPRODS+ 0.3759667232*_S6_MNTMEATPRODUCTS+ 0.3869383929*_S7_NUMCATALOGPURCHASES+ -0.093319147*_S8_NUMDEALSPURCHASES+ -0.290294871*_S9_NUMWEBVISITSMONTH+ 0.1924005307*_S10_RFMSTAT+
-0.012253394*_S11_RECENCY+ -0.083331603*_S12_TEENHOME+ -0.063857354*_S13_YEAR_BIRTH;
36004     +/*----------------------------------------------*/
36005     +* Component 5 at stage 5;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 5;
36006     +/*----------------------------------------------*/
36007     +;
MPRINT(EM_DIAGRAM):   ;
36008     +_SPRIN55=
36009     +0.0259027139*Marital_Status_1_+
36010     +-0.023219643*Marital_Status_2_+
36011     +-0.048071754*Marital_Status_3_+
36012     +0.0104245904*Marital_Status_4_+
36013     +0.111093904*Marital_Status_5_+
36014     +0.1029306769*_S1_ACCEPTEDCMPTOTAL+
36015     +-0.104590704*_S2_FRQ+
36016     +0.0992739498*_S3_INCOME+
36017     +-0.126525705*_S4_MNT+
36018     +0.1755348321*_S5_MNTGOLDPRODS+
36019     +-0.219398621*_S6_MNTMEATPRODUCTS+
36020     +-0.086592319*_S7_NUMCATALOGPURCHASES+
36021     +-0.25424186*_S8_NUMDEALSPURCHASES+
36022     +-0.203846899*_S9_NUMWEBVISITSMONTH+
36023     +0.4677013509*_S10_RFMSTAT+
36024     +0.3215691362*_S11_RECENCY+
36025     +0.4850182787*_S12_TEENHOME+
36026     +0.431969361*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN55= 0.0259027139*Marital_Status_1_+ -0.023219643*Marital_Status_2_+ -0.048071754*Marital_Status_3_+ 0.0104245904*Marital_Status_4_+ 0.111093904*Marital_Status_5_+ 0.1029306769*_S1_ACCEPTEDCMPTOTAL+ -0.104590704*_S2_FRQ+
0.0992739498*_S3_INCOME+ -0.126525705*_S4_MNT+ 0.1755348321*_S5_MNTGOLDPRODS+ -0.219398621*_S6_MNTMEATPRODUCTS+ -0.086592319*_S7_NUMCATALOGPURCHASES+ -0.25424186*_S8_NUMDEALSPURCHASES+ -0.203846899*_S9_NUMWEBVISITSMONTH+ 0.4677013509*_S10_RFMSTAT+
0.3215691362*_S11_RECENCY+ 0.4850182787*_S12_TEENHOME+ 0.431969361*_S13_YEAR_BIRTH;
36027     +/*----------------------------------------------*/
36028     +* Component 6 at stage 5;
MPRINT(EM_DIAGRAM):   * Component 6 at stage 5;
36029     +/*----------------------------------------------*/
36030     +;
MPRINT(EM_DIAGRAM):   ;
36031     +_SPRIN56=
36032     +0.7201014863*Marital_Status_1_+
36033     +-0.039414952*Marital_Status_2_+
36034     +-0.261027185*Marital_Status_3_+
36035     +-0.002570027*Marital_Status_4_+
36036     +-0.517989138*Marital_Status_5_+
36037     +0.1032358936*_S1_ACCEPTEDCMPTOTAL+
36038     +0.0293938239*_S2_FRQ+
36039     +-0.060123348*_S3_INCOME+
36040     +0.0306908632*_S4_MNT+
36041     +0.0931751568*_S5_MNTGOLDPRODS+
36042     +0.0016465853*_S6_MNTMEATPRODUCTS+
36043     +0.0174804568*_S7_NUMCATALOGPURCHASES+
36044     +0.1233541944*_S8_NUMDEALSPURCHASES+
36045     +0.1518084321*_S9_NUMWEBVISITSMONTH+
36046     +0.1449751106*_S10_RFMSTAT+
36047     +-0.133344887*_S11_RECENCY+
36048     +-0.066595833*_S12_TEENHOME+
36049     +0.1920463047*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN56= 0.7201014863*Marital_Status_1_+ -0.039414952*Marital_Status_2_+ -0.261027185*Marital_Status_3_+ -0.002570027*Marital_Status_4_+ -0.517989138*Marital_Status_5_+ 0.1032358936*_S1_ACCEPTEDCMPTOTAL+ 0.0293938239*_S2_FRQ+
-0.060123348*_S3_INCOME+ 0.0306908632*_S4_MNT+ 0.0931751568*_S5_MNTGOLDPRODS+ 0.0016465853*_S6_MNTMEATPRODUCTS+ 0.0174804568*_S7_NUMCATALOGPURCHASES+ 0.1233541944*_S8_NUMDEALSPURCHASES+ 0.1518084321*_S9_NUMWEBVISITSMONTH+ 0.1449751106*_S10_RFMSTAT+
-0.133344887*_S11_RECENCY+ -0.066595833*_S12_TEENHOME+ 0.1920463047*_S13_YEAR_BIRTH;
36050     +;
MPRINT(EM_DIAGRAM):   ;
36051     +/*----------------------------------------------*/
36052     +* Component 1 at stage 6;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 6;
36053     +/*----------------------------------------------*/
36054     +;
MPRINT(EM_DIAGRAM):   ;
36055     +_SPRIN61=
36056     +-0.008493382*Marital_Status_1_+
36057     +-0.011188081*Marital_Status_2_+
36058     +0.0016309879*Marital_Status_3_+
36059     +0.0067450524*Marital_Status_4_+
36060     +0.0264657057*Marital_Status_5_+
36061     +0.2193918461*_S1_ACCEPTEDCMPTOTAL+
36062     +0.3773554763*_S2_FRQ+
36063     +0.3893349243*_S3_INCOME+
36064     +0.4090071576*_S4_MNT+
36065     +0.2396116109*_S5_MNTGOLDPRODS+
36066     +0.3759667232*_S6_MNTMEATPRODUCTS+
36067     +0.3869383929*_S7_NUMCATALOGPURCHASES+
36068     +-0.093319147*_S8_NUMDEALSPURCHASES+
36069     +-0.290294871*_S9_NUMWEBVISITSMONTH+
36070     +0.1924005307*_S10_RFMSTAT+
36071     +-0.012253394*_S11_RECENCY+
36072     +-0.083331603*_S12_TEENHOME+
36073     +-0.063857354*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN61= -0.008493382*Marital_Status_1_+ -0.011188081*Marital_Status_2_+ 0.0016309879*Marital_Status_3_+ 0.0067450524*Marital_Status_4_+ 0.0264657057*Marital_Status_5_+ 0.2193918461*_S1_ACCEPTEDCMPTOTAL+ 0.3773554763*_S2_FRQ+
0.3893349243*_S3_INCOME+ 0.4090071576*_S4_MNT+ 0.2396116109*_S5_MNTGOLDPRODS+ 0.3759667232*_S6_MNTMEATPRODUCTS+ 0.3869383929*_S7_NUMCATALOGPURCHASES+ -0.093319147*_S8_NUMDEALSPURCHASES+ -0.290294871*_S9_NUMWEBVISITSMONTH+ 0.1924005307*_S10_RFMSTAT+
-0.012253394*_S11_RECENCY+ -0.083331603*_S12_TEENHOME+ -0.063857354*_S13_YEAR_BIRTH;
36074     +/*----------------------------------------------*/
36075     +* Component 2 at stage 6;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 6;
36076     +/*----------------------------------------------*/
36077     +;
MPRINT(EM_DIAGRAM):   ;
36078     +_SPRIN62=
36079     +0.0093097628*Marital_Status_1_+
36080     +-0.007357611*Marital_Status_2_+
36081     +0.004161881*Marital_Status_3_+
36082     +-0.003334178*Marital_Status_4_+
36083     +0.0030096039*Marital_Status_5_+
36084     +0.0609654599*_S1_ACCEPTEDCMPTOTAL+
36085     +0.2916437296*_S2_FRQ+
36086     +0.1154801729*_S3_INCOME+
36087     +-0.805526511*_S4_MNT+
36088     +0.0844981983*_S5_MNTGOLDPRODS+
36089     +0.4796242204*_S6_MNTMEATPRODUCTS+
36090     +-0.062347745*_S7_NUMCATALOGPURCHASES+
36091     +-0.031857708*_S8_NUMDEALSPURCHASES+
36092     +0.0774997018*_S9_NUMWEBVISITSMONTH+
36093     +0.0158091776*_S10_RFMSTAT+
36094     +0.0115610406*_S11_RECENCY+
36095     +0.000437064*_S12_TEENHOME+
36096     +-0.019202585*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN62= 0.0093097628*Marital_Status_1_+ -0.007357611*Marital_Status_2_+ 0.004161881*Marital_Status_3_+ -0.003334178*Marital_Status_4_+ 0.0030096039*Marital_Status_5_+ 0.0609654599*_S1_ACCEPTEDCMPTOTAL+ 0.2916437296*_S2_FRQ+
0.1154801729*_S3_INCOME+ -0.805526511*_S4_MNT+ 0.0844981983*_S5_MNTGOLDPRODS+ 0.4796242204*_S6_MNTMEATPRODUCTS+ -0.062347745*_S7_NUMCATALOGPURCHASES+ -0.031857708*_S8_NUMDEALSPURCHASES+ 0.0774997018*_S9_NUMWEBVISITSMONTH+ 0.0158091776*_S10_RFMSTAT+
0.0115610406*_S11_RECENCY+ 0.000437064*_S12_TEENHOME+ -0.019202585*_S13_YEAR_BIRTH;
36097     +/*----------------------------------------------*/
36098     +* Component 3 at stage 6;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 6;
36099     +/*----------------------------------------------*/
36100     +;
MPRINT(EM_DIAGRAM):   ;
36101     +_SPRIN63=
36102     +-0.015105189*Marital_Status_1_+
36103     +0.0118862269*Marital_Status_2_+
36104     +-0.011343113*Marital_Status_3_+
36105     +0.0045776631*Marital_Status_4_+
36106     +0.0083717862*Marital_Status_5_+
36107     +0.0497052612*_S1_ACCEPTEDCMPTOTAL+
36108     +-0.32469371*_S2_FRQ+
36109     +-0.570505038*_S3_INCOME+
36110     +-0.051638052*_S4_MNT+
36111     +-0.000179679*_S5_MNTGOLDPRODS+
36112     +0.3305454324*_S6_MNTMEATPRODUCTS+
36113     +0.6167274273*_S7_NUMCATALOGPURCHASES+
36114     +-0.009076585*_S8_NUMDEALSPURCHASES+
36115     +-0.05161006*_S9_NUMWEBVISITSMONTH+
36116     +-0.009614781*_S10_RFMSTAT+
36117     +-0.006477144*_S11_RECENCY+
36118     +0.2662240883*_S12_TEENHOME+
36119     +0.0017486593*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN63= -0.015105189*Marital_Status_1_+ 0.0118862269*Marital_Status_2_+ -0.011343113*Marital_Status_3_+ 0.0045776631*Marital_Status_4_+ 0.0083717862*Marital_Status_5_+ 0.0497052612*_S1_ACCEPTEDCMPTOTAL+ -0.32469371*_S2_FRQ+
-0.570505038*_S3_INCOME+ -0.051638052*_S4_MNT+ -0.000179679*_S5_MNTGOLDPRODS+ 0.3305454324*_S6_MNTMEATPRODUCTS+ 0.6167274273*_S7_NUMCATALOGPURCHASES+ -0.009076585*_S8_NUMDEALSPURCHASES+ -0.05161006*_S9_NUMWEBVISITSMONTH+ -0.009614781*_S10_RFMSTAT+
-0.006477144*_S11_RECENCY+ 0.2662240883*_S12_TEENHOME+ 0.0017486593*_S13_YEAR_BIRTH;
36120     +/*----------------------------------------------*/
36121     +* Component 4 at stage 6;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 6;
36122     +/*----------------------------------------------*/
36123     +;
MPRINT(EM_DIAGRAM):   ;
36124     +_SPRIN64=
36125     +-0.000232895*Marital_Status_1_+
36126     +-0.004880779*Marital_Status_2_+
36127     +0.0006083294*Marital_Status_3_+
36128     +0.0082855013*Marital_Status_4_+
36129     +-0.007529226*Marital_Status_5_+
36130     +-0.066896457*_S1_ACCEPTEDCMPTOTAL+
36131     +-0.584544523*_S2_FRQ+
36132     +0.6315682517*_S3_INCOME+
36133     +-0.173384958*_S4_MNT+
36134     +0.0199300933*_S5_MNTGOLDPRODS+
36135     +-0.065996201*_S6_MNTMEATPRODUCTS+
36136     +0.3742607477*_S7_NUMCATALOGPURCHASES+
36137     +0.1066403357*_S8_NUMDEALSPURCHASES+
36138     +0.2338771409*_S9_NUMWEBVISITSMONTH+
36139     +0.0170511776*_S10_RFMSTAT+
36140     +0.0109890941*_S11_RECENCY+
36141     +-0.115442279*_S12_TEENHOME+
36142     +-0.010452951*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN64= -0.000232895*Marital_Status_1_+ -0.004880779*Marital_Status_2_+ 0.0006083294*Marital_Status_3_+ 0.0082855013*Marital_Status_4_+ -0.007529226*Marital_Status_5_+ -0.066896457*_S1_ACCEPTEDCMPTOTAL+ -0.584544523*_S2_FRQ+
0.6315682517*_S3_INCOME+ -0.173384958*_S4_MNT+ 0.0199300933*_S5_MNTGOLDPRODS+ -0.065996201*_S6_MNTMEATPRODUCTS+ 0.3742607477*_S7_NUMCATALOGPURCHASES+ 0.1066403357*_S8_NUMDEALSPURCHASES+ 0.2338771409*_S9_NUMWEBVISITSMONTH+ 0.0170511776*_S10_RFMSTAT+
0.0109890941*_S11_RECENCY+ -0.115442279*_S12_TEENHOME+ -0.010452951*_S13_YEAR_BIRTH;
36143     +/*----------------------------------------------*/
36144     +* Component 5 at stage 6;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 6;
36145     +/*----------------------------------------------*/
36146     +;
MPRINT(EM_DIAGRAM):   ;
36147     +_SPRIN65=
36148     +0.1311533864*Marital_Status_1_+
36149     +0.0462721094*Marital_Status_2_+
36150     +-0.187574538*Marital_Status_3_+
36151     +-0.032460344*Marital_Status_4_+
36152     +0.1682450848*Marital_Status_5_+
36153     +-0.025261674*_S1_ACCEPTEDCMPTOTAL+
36154     +0.1770010525*_S2_FRQ+
36155     +0.1068447763*_S3_INCOME+
36156     +0.0282279128*_S4_MNT+
36157     +0.1511903934*_S5_MNTGOLDPRODS+
36158     +-0.116748849*_S6_MNTMEATPRODUCTS+
36159     +0.0221938124*_S7_NUMCATALOGPURCHASES+
36160     +0.4952296943*_S8_NUMDEALSPURCHASES+
36161     +0.138103439*_S9_NUMWEBVISITSMONTH+
36162     +-0.055698032*_S10_RFMSTAT+
36163     +0.0890909209*_S11_RECENCY+
36164     +0.5881740989*_S12_TEENHOME+
36165     +-0.462210566*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN65= 0.1311533864*Marital_Status_1_+ 0.0462721094*Marital_Status_2_+ -0.187574538*Marital_Status_3_+ -0.032460344*Marital_Status_4_+ 0.1682450848*Marital_Status_5_+ -0.025261674*_S1_ACCEPTEDCMPTOTAL+ 0.1770010525*_S2_FRQ+
0.1068447763*_S3_INCOME+ 0.0282279128*_S4_MNT+ 0.1511903934*_S5_MNTGOLDPRODS+ -0.116748849*_S6_MNTMEATPRODUCTS+ 0.0221938124*_S7_NUMCATALOGPURCHASES+ 0.4952296943*_S8_NUMDEALSPURCHASES+ 0.138103439*_S9_NUMWEBVISITSMONTH+ -0.055698032*_S10_RFMSTAT+
0.0890909209*_S11_RECENCY+ 0.5881740989*_S12_TEENHOME+ -0.462210566*_S13_YEAR_BIRTH;
36166     +/*----------------------------------------------*/
36167     +* Component 6 at stage 6;
MPRINT(EM_DIAGRAM):   * Component 6 at stage 6;
36168     +/*----------------------------------------------*/
36169     +;
MPRINT(EM_DIAGRAM):   ;
36170     +_SPRIN66=
36171     +0.1626998739*Marital_Status_1_+
36172     +-0.79909083*Marital_Status_2_+
36173     +0.3388553128*Marital_Status_3_+
36174     +0.4475609678*Marital_Status_4_+
36175     +0.0873267528*Marital_Status_5_+
36176     +-0.062015793*_S1_ACCEPTEDCMPTOTAL+
36177     +0.0140882535*_S2_FRQ+
36178     +-0.006689305*_S3_INCOME+
36179     +0.0052515467*_S4_MNT+
36180     +0.0129809178*_S5_MNTGOLDPRODS+
36181     +-0.008873172*_S6_MNTMEATPRODUCTS+
36182     +0.008355514*_S7_NUMCATALOGPURCHASES+
36183     +0.0225316639*_S8_NUMDEALSPURCHASES+
36184     +0.0094785602*_S9_NUMWEBVISITSMONTH+
36185     +-0.010018638*_S10_RFMSTAT+
36186     +-0.018714474*_S11_RECENCY+
36187     +0.0581880557*_S12_TEENHOME+
36188     +-0.057923258*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN66= 0.1626998739*Marital_Status_1_+ -0.79909083*Marital_Status_2_+ 0.3388553128*Marital_Status_3_+ 0.4475609678*Marital_Status_4_+ 0.0873267528*Marital_Status_5_+ -0.062015793*_S1_ACCEPTEDCMPTOTAL+ 0.0140882535*_S2_FRQ+
-0.006689305*_S3_INCOME+ 0.0052515467*_S4_MNT+ 0.0129809178*_S5_MNTGOLDPRODS+ -0.008873172*_S6_MNTMEATPRODUCTS+ 0.008355514*_S7_NUMCATALOGPURCHASES+ 0.0225316639*_S8_NUMDEALSPURCHASES+ 0.0094785602*_S9_NUMWEBVISITSMONTH+ -0.010018638*_S10_RFMSTAT+
-0.018714474*_S11_RECENCY+ 0.0581880557*_S12_TEENHOME+ -0.057923258*_S13_YEAR_BIRTH;
36189     +;
MPRINT(EM_DIAGRAM):   ;
36190     +/*----------------------------------------------*/
36191     +* Component 1 at stage 7;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 7;
36192     +/*----------------------------------------------*/
36193     +;
MPRINT(EM_DIAGRAM):   ;
36194     +_SPRIN71=
36195     +-0.015105189*Marital_Status_1_+
36196     +0.0118862269*Marital_Status_2_+
36197     +-0.011343113*Marital_Status_3_+
36198     +0.0045776631*Marital_Status_4_+
36199     +0.0083717862*Marital_Status_5_+
36200     +0.0497052612*_S1_ACCEPTEDCMPTOTAL+
36201     +-0.32469371*_S2_FRQ+
36202     +-0.570505038*_S3_INCOME+
36203     +-0.051638052*_S4_MNT+
36204     +-0.000179679*_S5_MNTGOLDPRODS+
36205     +0.3305454324*_S6_MNTMEATPRODUCTS+
36206     +0.6167274273*_S7_NUMCATALOGPURCHASES+
36207     +-0.009076585*_S8_NUMDEALSPURCHASES+
36208     +-0.05161006*_S9_NUMWEBVISITSMONTH+
36209     +-0.009614781*_S10_RFMSTAT+
36210     +-0.006477144*_S11_RECENCY+
36211     +0.2662240883*_S12_TEENHOME+
36212     +0.0017486593*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN71= -0.015105189*Marital_Status_1_+ 0.0118862269*Marital_Status_2_+ -0.011343113*Marital_Status_3_+ 0.0045776631*Marital_Status_4_+ 0.0083717862*Marital_Status_5_+ 0.0497052612*_S1_ACCEPTEDCMPTOTAL+ -0.32469371*_S2_FRQ+
-0.570505038*_S3_INCOME+ -0.051638052*_S4_MNT+ -0.000179679*_S5_MNTGOLDPRODS+ 0.3305454324*_S6_MNTMEATPRODUCTS+ 0.6167274273*_S7_NUMCATALOGPURCHASES+ -0.009076585*_S8_NUMDEALSPURCHASES+ -0.05161006*_S9_NUMWEBVISITSMONTH+ -0.009614781*_S10_RFMSTAT+
-0.006477144*_S11_RECENCY+ 0.2662240883*_S12_TEENHOME+ 0.0017486593*_S13_YEAR_BIRTH;
36213     +/*----------------------------------------------*/
36214     +* Component 2 at stage 7;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 7;
36215     +/*----------------------------------------------*/
36216     +;
MPRINT(EM_DIAGRAM):   ;
36217     +_SPRIN72=
36218     +-0.000232895*Marital_Status_1_+
36219     +-0.004880779*Marital_Status_2_+
36220     +0.0006083294*Marital_Status_3_+
36221     +0.0082855013*Marital_Status_4_+
36222     +-0.007529226*Marital_Status_5_+
36223     +-0.066896457*_S1_ACCEPTEDCMPTOTAL+
36224     +-0.584544523*_S2_FRQ+
36225     +0.6315682517*_S3_INCOME+
36226     +-0.173384958*_S4_MNT+
36227     +0.0199300933*_S5_MNTGOLDPRODS+
36228     +-0.065996201*_S6_MNTMEATPRODUCTS+
36229     +0.3742607477*_S7_NUMCATALOGPURCHASES+
36230     +0.1066403357*_S8_NUMDEALSPURCHASES+
36231     +0.2338771409*_S9_NUMWEBVISITSMONTH+
36232     +0.0170511776*_S10_RFMSTAT+
36233     +0.0109890941*_S11_RECENCY+
36234     +-0.115442279*_S12_TEENHOME+
36235     +-0.010452951*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN72= -0.000232895*Marital_Status_1_+ -0.004880779*Marital_Status_2_+ 0.0006083294*Marital_Status_3_+ 0.0082855013*Marital_Status_4_+ -0.007529226*Marital_Status_5_+ -0.066896457*_S1_ACCEPTEDCMPTOTAL+ -0.584544523*_S2_FRQ+
0.6315682517*_S3_INCOME+ -0.173384958*_S4_MNT+ 0.0199300933*_S5_MNTGOLDPRODS+ -0.065996201*_S6_MNTMEATPRODUCTS+ 0.3742607477*_S7_NUMCATALOGPURCHASES+ 0.1066403357*_S8_NUMDEALSPURCHASES+ 0.2338771409*_S9_NUMWEBVISITSMONTH+ 0.0170511776*_S10_RFMSTAT+
0.0109890941*_S11_RECENCY+ -0.115442279*_S12_TEENHOME+ -0.010452951*_S13_YEAR_BIRTH;
36236     +/*----------------------------------------------*/
36237     +* Component 3 at stage 7;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 7;
36238     +/*----------------------------------------------*/
36239     +;
MPRINT(EM_DIAGRAM):   ;
36240     +_SPRIN73=
36241     +0.0062762631*Marital_Status_1_+
36242     +-0.010875887*Marital_Status_2_+
36243     +-0.001735199*Marital_Status_3_+
36244     +0.003215339*Marital_Status_4_+
36245     +0.0164402875*Marital_Status_5_+
36246     +0.0819675329*_S1_ACCEPTEDCMPTOTAL+
36247     +-0.462873318*_S2_FRQ+
36248     +0.0469918013*_S3_INCOME+
36249     +0.2304506395*_S4_MNT+
36250     +0.0977211562*_S5_MNTGOLDPRODS+
36251     +0.5904759878*_S6_MNTMEATPRODUCTS+
36252     +-0.545547887*_S7_NUMCATALOGPURCHASES+
36253     +0.2139463159*_S8_NUMDEALSPURCHASES+
36254     +-0.117021636*_S9_NUMWEBVISITSMONTH+
36255     +0.0161900995*_S10_RFMSTAT+
36256     +0.028974563*_S11_RECENCY+
36257     +0.0823235285*_S12_TEENHOME+
36258     +0.0096368551*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN73= 0.0062762631*Marital_Status_1_+ -0.010875887*Marital_Status_2_+ -0.001735199*Marital_Status_3_+ 0.003215339*Marital_Status_4_+ 0.0164402875*Marital_Status_5_+ 0.0819675329*_S1_ACCEPTEDCMPTOTAL+ -0.462873318*_S2_FRQ+
0.0469918013*_S3_INCOME+ 0.2304506395*_S4_MNT+ 0.0977211562*_S5_MNTGOLDPRODS+ 0.5904759878*_S6_MNTMEATPRODUCTS+ -0.545547887*_S7_NUMCATALOGPURCHASES+ 0.2139463159*_S8_NUMDEALSPURCHASES+ -0.117021636*_S9_NUMWEBVISITSMONTH+ 0.0161900995*_S10_RFMSTAT+
0.028974563*_S11_RECENCY+ 0.0823235285*_S12_TEENHOME+ 0.0096368551*_S13_YEAR_BIRTH;
36259     +/*----------------------------------------------*/
36260     +* Component 4 at stage 7;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 7;
36261     +/*----------------------------------------------*/
36262     +;
MPRINT(EM_DIAGRAM):   ;
36263     +_SPRIN74=
36264     +0.7201014863*Marital_Status_1_+
36265     +-0.039414952*Marital_Status_2_+
36266     +-0.261027185*Marital_Status_3_+
36267     +-0.002570027*Marital_Status_4_+
36268     +-0.517989138*Marital_Status_5_+
36269     +0.1032358936*_S1_ACCEPTEDCMPTOTAL+
36270     +0.0293938239*_S2_FRQ+
36271     +-0.060123348*_S3_INCOME+
36272     +0.0306908632*_S4_MNT+
36273     +0.0931751568*_S5_MNTGOLDPRODS+
36274     +0.0016465853*_S6_MNTMEATPRODUCTS+
36275     +0.0174804568*_S7_NUMCATALOGPURCHASES+
36276     +0.1233541944*_S8_NUMDEALSPURCHASES+
36277     +0.1518084321*_S9_NUMWEBVISITSMONTH+
36278     +0.1449751106*_S10_RFMSTAT+
36279     +-0.133344887*_S11_RECENCY+
36280     +-0.066595833*_S12_TEENHOME+
36281     +0.1920463047*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN74= 0.7201014863*Marital_Status_1_+ -0.039414952*Marital_Status_2_+ -0.261027185*Marital_Status_3_+ -0.002570027*Marital_Status_4_+ -0.517989138*Marital_Status_5_+ 0.1032358936*_S1_ACCEPTEDCMPTOTAL+ 0.0293938239*_S2_FRQ+
-0.060123348*_S3_INCOME+ 0.0306908632*_S4_MNT+ 0.0931751568*_S5_MNTGOLDPRODS+ 0.0016465853*_S6_MNTMEATPRODUCTS+ 0.0174804568*_S7_NUMCATALOGPURCHASES+ 0.1233541944*_S8_NUMDEALSPURCHASES+ 0.1518084321*_S9_NUMWEBVISITSMONTH+ 0.1449751106*_S10_RFMSTAT+
-0.133344887*_S11_RECENCY+ -0.066595833*_S12_TEENHOME+ 0.1920463047*_S13_YEAR_BIRTH;
36282     +/*----------------------------------------------*/
36283     +* Component 5 at stage 7;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 7;
36284     +/*----------------------------------------------*/
36285     +;
MPRINT(EM_DIAGRAM):   ;
36286     +_SPRIN75=
36287     +0.0259027139*Marital_Status_1_+
36288     +-0.023219643*Marital_Status_2_+
36289     +-0.048071754*Marital_Status_3_+
36290     +0.0104245904*Marital_Status_4_+
36291     +0.111093904*Marital_Status_5_+
36292     +0.1029306769*_S1_ACCEPTEDCMPTOTAL+
36293     +-0.104590704*_S2_FRQ+
36294     +0.0992739498*_S3_INCOME+
36295     +-0.126525705*_S4_MNT+
36296     +0.1755348321*_S5_MNTGOLDPRODS+
36297     +-0.219398621*_S6_MNTMEATPRODUCTS+
36298     +-0.086592319*_S7_NUMCATALOGPURCHASES+
36299     +-0.25424186*_S8_NUMDEALSPURCHASES+
36300     +-0.203846899*_S9_NUMWEBVISITSMONTH+
36301     +0.4677013509*_S10_RFMSTAT+
36302     +0.3215691362*_S11_RECENCY+
36303     +0.4850182787*_S12_TEENHOME+
36304     +0.431969361*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN75= 0.0259027139*Marital_Status_1_+ -0.023219643*Marital_Status_2_+ -0.048071754*Marital_Status_3_+ 0.0104245904*Marital_Status_4_+ 0.111093904*Marital_Status_5_+ 0.1029306769*_S1_ACCEPTEDCMPTOTAL+ -0.104590704*_S2_FRQ+
0.0992739498*_S3_INCOME+ -0.126525705*_S4_MNT+ 0.1755348321*_S5_MNTGOLDPRODS+ -0.219398621*_S6_MNTMEATPRODUCTS+ -0.086592319*_S7_NUMCATALOGPURCHASES+ -0.25424186*_S8_NUMDEALSPURCHASES+ -0.203846899*_S9_NUMWEBVISITSMONTH+ 0.4677013509*_S10_RFMSTAT+
0.3215691362*_S11_RECENCY+ 0.4850182787*_S12_TEENHOME+ 0.431969361*_S13_YEAR_BIRTH;
36305     +/*----------------------------------------------*/
36306     +* Component 6 at stage 7;
MPRINT(EM_DIAGRAM):   * Component 6 at stage 7;
36307     +/*----------------------------------------------*/
36308     +;
MPRINT(EM_DIAGRAM):   ;
36309     +_SPRIN76=
36310     +-0.028442983*Marital_Status_1_+
36311     +0.0140975391*Marital_Status_2_+
36312     +0.0577022767*Marital_Status_3_+
36313     +-0.012976764*Marital_Status_4_+
36314     +-0.097279799*Marital_Status_5_+
36315     +-0.217622847*_S1_ACCEPTEDCMPTOTAL+
36316     +-0.036465716*_S2_FRQ+
36317     +-0.193573793*_S3_INCOME+
36318     +0.0437226825*_S4_MNT+
36319     +0.1533854572*_S5_MNTGOLDPRODS+
36320     +0.0429013274*_S6_MNTMEATPRODUCTS+
36321     +-0.035369721*_S7_NUMCATALOGPURCHASES+
36322     +-0.091546766*_S8_NUMDEALSPURCHASES+
36323     +0.269932798*_S9_NUMWEBVISITSMONTH+
36324     +0.5456202875*_S10_RFMSTAT+
36325     +0.4592194915*_S11_RECENCY+
36326     +-0.294927889*_S12_TEENHOME+
36327     +-0.441054809*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN76= -0.028442983*Marital_Status_1_+ 0.0140975391*Marital_Status_2_+ 0.0577022767*Marital_Status_3_+ -0.012976764*Marital_Status_4_+ -0.097279799*Marital_Status_5_+ -0.217622847*_S1_ACCEPTEDCMPTOTAL+ -0.036465716*_S2_FRQ+
-0.193573793*_S3_INCOME+ 0.0437226825*_S4_MNT+ 0.1533854572*_S5_MNTGOLDPRODS+ 0.0429013274*_S6_MNTMEATPRODUCTS+ -0.035369721*_S7_NUMCATALOGPURCHASES+ -0.091546766*_S8_NUMDEALSPURCHASES+ 0.269932798*_S9_NUMWEBVISITSMONTH+ 0.5456202875*_S10_RFMSTAT+
0.4592194915*_S11_RECENCY+ -0.294927889*_S12_TEENHOME+ -0.441054809*_S13_YEAR_BIRTH;
36328     +;
MPRINT(EM_DIAGRAM):   ;
36329     +/*----------------------------------------------*/
36330     +* Component 1 at stage 8;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 8;
36331     +/*----------------------------------------------*/
36332     +;
MPRINT(EM_DIAGRAM):   ;
36333     +_SPRIN81=
36334     +0.0259027139*Marital_Status_1_+
36335     +-0.023219643*Marital_Status_2_+
36336     +-0.048071754*Marital_Status_3_+
36337     +0.0104245904*Marital_Status_4_+
36338     +0.111093904*Marital_Status_5_+
36339     +0.1029306769*_S1_ACCEPTEDCMPTOTAL+
36340     +-0.104590704*_S2_FRQ+
36341     +0.0992739498*_S3_INCOME+
36342     +-0.126525705*_S4_MNT+
36343     +0.1755348321*_S5_MNTGOLDPRODS+
36344     +-0.219398621*_S6_MNTMEATPRODUCTS+
36345     +-0.086592319*_S7_NUMCATALOGPURCHASES+
36346     +-0.25424186*_S8_NUMDEALSPURCHASES+
36347     +-0.203846899*_S9_NUMWEBVISITSMONTH+
36348     +0.4677013509*_S10_RFMSTAT+
36349     +0.3215691362*_S11_RECENCY+
36350     +0.4850182787*_S12_TEENHOME+
36351     +0.431969361*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN81= 0.0259027139*Marital_Status_1_+ -0.023219643*Marital_Status_2_+ -0.048071754*Marital_Status_3_+ 0.0104245904*Marital_Status_4_+ 0.111093904*Marital_Status_5_+ 0.1029306769*_S1_ACCEPTEDCMPTOTAL+ -0.104590704*_S2_FRQ+
0.0992739498*_S3_INCOME+ -0.126525705*_S4_MNT+ 0.1755348321*_S5_MNTGOLDPRODS+ -0.219398621*_S6_MNTMEATPRODUCTS+ -0.086592319*_S7_NUMCATALOGPURCHASES+ -0.25424186*_S8_NUMDEALSPURCHASES+ -0.203846899*_S9_NUMWEBVISITSMONTH+ 0.4677013509*_S10_RFMSTAT+
0.3215691362*_S11_RECENCY+ 0.4850182787*_S12_TEENHOME+ 0.431969361*_S13_YEAR_BIRTH;
36352     +/*----------------------------------------------*/
36353     +* Component 2 at stage 8;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 8;
36354     +/*----------------------------------------------*/
36355     +;
MPRINT(EM_DIAGRAM):   ;
36356     +_SPRIN82=
36357     +-0.015105189*Marital_Status_1_+
36358     +0.0118862269*Marital_Status_2_+
36359     +-0.011343113*Marital_Status_3_+
36360     +0.0045776631*Marital_Status_4_+
36361     +0.0083717862*Marital_Status_5_+
36362     +0.0497052612*_S1_ACCEPTEDCMPTOTAL+
36363     +-0.32469371*_S2_FRQ+
36364     +-0.570505038*_S3_INCOME+
36365     +-0.051638052*_S4_MNT+
36366     +-0.000179679*_S5_MNTGOLDPRODS+
36367     +0.3305454324*_S6_MNTMEATPRODUCTS+
36368     +0.6167274273*_S7_NUMCATALOGPURCHASES+
36369     +-0.009076585*_S8_NUMDEALSPURCHASES+
36370     +-0.05161006*_S9_NUMWEBVISITSMONTH+
36371     +-0.009614781*_S10_RFMSTAT+
36372     +-0.006477144*_S11_RECENCY+
36373     +0.2662240883*_S12_TEENHOME+
36374     +0.0017486593*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN82= -0.015105189*Marital_Status_1_+ 0.0118862269*Marital_Status_2_+ -0.011343113*Marital_Status_3_+ 0.0045776631*Marital_Status_4_+ 0.0083717862*Marital_Status_5_+ 0.0497052612*_S1_ACCEPTEDCMPTOTAL+ -0.32469371*_S2_FRQ+
-0.570505038*_S3_INCOME+ -0.051638052*_S4_MNT+ -0.000179679*_S5_MNTGOLDPRODS+ 0.3305454324*_S6_MNTMEATPRODUCTS+ 0.6167274273*_S7_NUMCATALOGPURCHASES+ -0.009076585*_S8_NUMDEALSPURCHASES+ -0.05161006*_S9_NUMWEBVISITSMONTH+ -0.009614781*_S10_RFMSTAT+
-0.006477144*_S11_RECENCY+ 0.2662240883*_S12_TEENHOME+ 0.0017486593*_S13_YEAR_BIRTH;
36375     +/*----------------------------------------------*/
36376     +* Component 3 at stage 8;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 8;
36377     +/*----------------------------------------------*/
36378     +;
MPRINT(EM_DIAGRAM):   ;
36379     +_SPRIN83=
36380     +-0.000232895*Marital_Status_1_+
36381     +-0.004880779*Marital_Status_2_+
36382     +0.0006083294*Marital_Status_3_+
36383     +0.0082855013*Marital_Status_4_+
36384     +-0.007529226*Marital_Status_5_+
36385     +-0.066896457*_S1_ACCEPTEDCMPTOTAL+
36386     +-0.584544523*_S2_FRQ+
36387     +0.6315682517*_S3_INCOME+
36388     +-0.173384958*_S4_MNT+
36389     +0.0199300933*_S5_MNTGOLDPRODS+
36390     +-0.065996201*_S6_MNTMEATPRODUCTS+
36391     +0.3742607477*_S7_NUMCATALOGPURCHASES+
36392     +0.1066403357*_S8_NUMDEALSPURCHASES+
36393     +0.2338771409*_S9_NUMWEBVISITSMONTH+
36394     +0.0170511776*_S10_RFMSTAT+
36395     +0.0109890941*_S11_RECENCY+
36396     +-0.115442279*_S12_TEENHOME+
36397     +-0.010452951*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN83= -0.000232895*Marital_Status_1_+ -0.004880779*Marital_Status_2_+ 0.0006083294*Marital_Status_3_+ 0.0082855013*Marital_Status_4_+ -0.007529226*Marital_Status_5_+ -0.066896457*_S1_ACCEPTEDCMPTOTAL+ -0.584544523*_S2_FRQ+
0.6315682517*_S3_INCOME+ -0.173384958*_S4_MNT+ 0.0199300933*_S5_MNTGOLDPRODS+ -0.065996201*_S6_MNTMEATPRODUCTS+ 0.3742607477*_S7_NUMCATALOGPURCHASES+ 0.1066403357*_S8_NUMDEALSPURCHASES+ 0.2338771409*_S9_NUMWEBVISITSMONTH+ 0.0170511776*_S10_RFMSTAT+
0.0109890941*_S11_RECENCY+ -0.115442279*_S12_TEENHOME+ -0.010452951*_S13_YEAR_BIRTH;
36398     +/*----------------------------------------------*/
36399     +* Component 4 at stage 8;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 8;
36400     +/*----------------------------------------------*/
36401     +;
MPRINT(EM_DIAGRAM):   ;
36402     +_SPRIN84=
36403     +0.0062762631*Marital_Status_1_+
36404     +-0.010875887*Marital_Status_2_+
36405     +-0.001735199*Marital_Status_3_+
36406     +0.003215339*Marital_Status_4_+
36407     +0.0164402875*Marital_Status_5_+
36408     +0.0819675329*_S1_ACCEPTEDCMPTOTAL+
36409     +-0.462873318*_S2_FRQ+
36410     +0.0469918013*_S3_INCOME+
36411     +0.2304506395*_S4_MNT+
36412     +0.0977211562*_S5_MNTGOLDPRODS+
36413     +0.5904759878*_S6_MNTMEATPRODUCTS+
36414     +-0.545547887*_S7_NUMCATALOGPURCHASES+
36415     +0.2139463159*_S8_NUMDEALSPURCHASES+
36416     +-0.117021636*_S9_NUMWEBVISITSMONTH+
36417     +0.0161900995*_S10_RFMSTAT+
36418     +0.028974563*_S11_RECENCY+
36419     +0.0823235285*_S12_TEENHOME+
36420     +0.0096368551*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN84= 0.0062762631*Marital_Status_1_+ -0.010875887*Marital_Status_2_+ -0.001735199*Marital_Status_3_+ 0.003215339*Marital_Status_4_+ 0.0164402875*Marital_Status_5_+ 0.0819675329*_S1_ACCEPTEDCMPTOTAL+ -0.462873318*_S2_FRQ+
0.0469918013*_S3_INCOME+ 0.2304506395*_S4_MNT+ 0.0977211562*_S5_MNTGOLDPRODS+ 0.5904759878*_S6_MNTMEATPRODUCTS+ -0.545547887*_S7_NUMCATALOGPURCHASES+ 0.2139463159*_S8_NUMDEALSPURCHASES+ -0.117021636*_S9_NUMWEBVISITSMONTH+ 0.0161900995*_S10_RFMSTAT+
0.028974563*_S11_RECENCY+ 0.0823235285*_S12_TEENHOME+ 0.0096368551*_S13_YEAR_BIRTH;
36421     +/*----------------------------------------------*/
36422     +* Component 5 at stage 8;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 8;
36423     +/*----------------------------------------------*/
36424     +;
MPRINT(EM_DIAGRAM):   ;
36425     +_SPRIN85=
36426     +0.0251132215*Marital_Status_1_+
36427     +-0.025395883*Marital_Status_2_+
36428     +-0.017975806*Marital_Status_3_+
36429     +-0.010924123*Marital_Status_4_+
36430     +0.0991213763*Marital_Status_5_+
36431     +0.001222243*_S1_ACCEPTEDCMPTOTAL+
36432     +0.1550412507*_S2_FRQ+
36433     +0.0627898484*_S3_INCOME+
36434     +0.0644523337*_S4_MNT+
36435     +-0.783639627*_S5_MNTGOLDPRODS+
36436     +0.1567513421*_S6_MNTMEATPRODUCTS+
36437     +0.0854886204*_S7_NUMCATALOGPURCHASES+
36438     +0.3566620158*_S8_NUMDEALSPURCHASES+
36439     +0.0492555841*_S9_NUMWEBVISITSMONTH+
36440     +0.243420967*_S10_RFMSTAT+
36441     +0.2657921379*_S11_RECENCY+
36442     +-0.022914665*_S12_TEENHOME+
36443     +0.2242595425*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN85= 0.0251132215*Marital_Status_1_+ -0.025395883*Marital_Status_2_+ -0.017975806*Marital_Status_3_+ -0.010924123*Marital_Status_4_+ 0.0991213763*Marital_Status_5_+ 0.001222243*_S1_ACCEPTEDCMPTOTAL+ 0.1550412507*_S2_FRQ+
0.0627898484*_S3_INCOME+ 0.0644523337*_S4_MNT+ -0.783639627*_S5_MNTGOLDPRODS+ 0.1567513421*_S6_MNTMEATPRODUCTS+ 0.0854886204*_S7_NUMCATALOGPURCHASES+ 0.3566620158*_S8_NUMDEALSPURCHASES+ 0.0492555841*_S9_NUMWEBVISITSMONTH+ 0.243420967*_S10_RFMSTAT+
0.2657921379*_S11_RECENCY+ -0.022914665*_S12_TEENHOME+ 0.2242595425*_S13_YEAR_BIRTH;
36444     +/*----------------------------------------------*/
36445     +* Component 6 at stage 8;
MPRINT(EM_DIAGRAM):   * Component 6 at stage 8;
36446     +/*----------------------------------------------*/
36447     +;
MPRINT(EM_DIAGRAM):   ;
36448     +_SPRIN86=
36449     +0.1626998739*Marital_Status_1_+
36450     +-0.79909083*Marital_Status_2_+
36451     +0.3388553128*Marital_Status_3_+
36452     +0.4475609678*Marital_Status_4_+
36453     +0.0873267528*Marital_Status_5_+
36454     +-0.062015793*_S1_ACCEPTEDCMPTOTAL+
36455     +0.0140882535*_S2_FRQ+
36456     +-0.006689305*_S3_INCOME+
36457     +0.0052515467*_S4_MNT+
36458     +0.0129809178*_S5_MNTGOLDPRODS+
36459     +-0.008873172*_S6_MNTMEATPRODUCTS+
36460     +0.008355514*_S7_NUMCATALOGPURCHASES+
36461     +0.0225316639*_S8_NUMDEALSPURCHASES+
36462     +0.0094785602*_S9_NUMWEBVISITSMONTH+
36463     +-0.010018638*_S10_RFMSTAT+
36464     +-0.018714474*_S11_RECENCY+
36465     +0.0581880557*_S12_TEENHOME+
36466     +-0.057923258*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN86= 0.1626998739*Marital_Status_1_+ -0.79909083*Marital_Status_2_+ 0.3388553128*Marital_Status_3_+ 0.4475609678*Marital_Status_4_+ 0.0873267528*Marital_Status_5_+ -0.062015793*_S1_ACCEPTEDCMPTOTAL+ 0.0140882535*_S2_FRQ+
-0.006689305*_S3_INCOME+ 0.0052515467*_S4_MNT+ 0.0129809178*_S5_MNTGOLDPRODS+ -0.008873172*_S6_MNTMEATPRODUCTS+ 0.008355514*_S7_NUMCATALOGPURCHASES+ 0.0225316639*_S8_NUMDEALSPURCHASES+ 0.0094785602*_S9_NUMWEBVISITSMONTH+ -0.010018638*_S10_RFMSTAT+
-0.018714474*_S11_RECENCY+ 0.0581880557*_S12_TEENHOME+ -0.057923258*_S13_YEAR_BIRTH;
36467     +;
MPRINT(EM_DIAGRAM):   ;
36468     +/*----------------------------------------------*/
36469     +* Component 1 at stage 9;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 9;
36470     +/*----------------------------------------------*/
36471     +;
MPRINT(EM_DIAGRAM):   ;
36472     +_SPRIN91=
36473     +0.0062762631*Marital_Status_1_+
36474     +-0.010875887*Marital_Status_2_+
36475     +-0.001735199*Marital_Status_3_+
36476     +0.003215339*Marital_Status_4_+
36477     +0.0164402875*Marital_Status_5_+
36478     +0.0819675329*_S1_ACCEPTEDCMPTOTAL+
36479     +-0.462873318*_S2_FRQ+
36480     +0.0469918013*_S3_INCOME+
36481     +0.2304506395*_S4_MNT+
36482     +0.0977211562*_S5_MNTGOLDPRODS+
36483     +0.5904759878*_S6_MNTMEATPRODUCTS+
36484     +-0.545547887*_S7_NUMCATALOGPURCHASES+
36485     +0.2139463159*_S8_NUMDEALSPURCHASES+
36486     +-0.117021636*_S9_NUMWEBVISITSMONTH+
36487     +0.0161900995*_S10_RFMSTAT+
36488     +0.028974563*_S11_RECENCY+
36489     +0.0823235285*_S12_TEENHOME+
36490     +0.0096368551*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN91= 0.0062762631*Marital_Status_1_+ -0.010875887*Marital_Status_2_+ -0.001735199*Marital_Status_3_+ 0.003215339*Marital_Status_4_+ 0.0164402875*Marital_Status_5_+ 0.0819675329*_S1_ACCEPTEDCMPTOTAL+ -0.462873318*_S2_FRQ+
0.0469918013*_S3_INCOME+ 0.2304506395*_S4_MNT+ 0.0977211562*_S5_MNTGOLDPRODS+ 0.5904759878*_S6_MNTMEATPRODUCTS+ -0.545547887*_S7_NUMCATALOGPURCHASES+ 0.2139463159*_S8_NUMDEALSPURCHASES+ -0.117021636*_S9_NUMWEBVISITSMONTH+ 0.0161900995*_S10_RFMSTAT+
0.028974563*_S11_RECENCY+ 0.0823235285*_S12_TEENHOME+ 0.0096368551*_S13_YEAR_BIRTH;
36491     +/*----------------------------------------------*/
36492     +* Component 2 at stage 9;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 9;
36493     +/*----------------------------------------------*/
36494     +;
MPRINT(EM_DIAGRAM):   ;
36495     +_SPRIN92=
36496     +0.10761459*Marital_Status_1_+
36497     +0.0028979951*Marital_Status_2_+
36498     +-0.15064667*Marital_Status_3_+
36499     +-0.043533602*Marital_Status_4_+
36500     +0.272779799*Marital_Status_5_+
36501     +-0.796500815*_S1_ACCEPTEDCMPTOTAL+
36502     +0.0948384767*_S2_FRQ+
36503     +-0.024901753*_S3_INCOME+
36504     +0.036811217*_S4_MNT+
36505     +0.2470337929*_S5_MNTGOLDPRODS+
36506     +0.1168111721*_S6_MNTMEATPRODUCTS+
36507     +0.0697126712*_S7_NUMCATALOGPURCHASES+
36508     +0.171968035*_S8_NUMDEALSPURCHASES+
36509     +-0.102108299*_S9_NUMWEBVISITSMONTH+
36510     +-0.022671576*_S10_RFMSTAT+
36511     +-0.022630633*_S11_RECENCY+
36512     +-0.113962381*_S12_TEENHOME+
36513     +0.3323945855*_S13_YEAR_BIRTH;
MPRINT(EM_DIAGRAM):   _SPRIN92= 0.10761459*Marital_Status_1_+ 0.0028979951*Marital_Status_2_+ -0.15064667*Marital_Status_3_+ -0.043533602*Marital_Status_4_+ 0.272779799*Marital_Status_5_+ -0.796500815*_S1_ACCEPTEDCMPTOTAL+ 0.0948384767*_S2_FRQ+
-0.024901753*_S3_INCOME+ 0.036811217*_S4_MNT+ 0.2470337929*_S5_MNTGOLDPRODS+ 0.1168111721*_S6_MNTMEATPRODUCTS+ 0.0697126712*_S7_NUMCATALOGPURCHASES+ 0.171968035*_S8_NUMDEALSPURCHASES+ -0.102108299*_S9_NUMWEBVISITSMONTH+ -0.022671576*_S10_RFMSTAT+
-0.022630633*_S11_RECENCY+ -0.113962381*_S12_TEENHOME+ 0.3323945855*_S13_YEAR_BIRTH;
36514     +;
MPRINT(EM_DIAGRAM):   ;
36515     +DROP
36516     +_SPRIN01
36517     +_SPRIN02
36518     +_SPRIN03
36519     +_SPRIN04
36520     +_SPRIN05
36521     +_SPRIN06
36522     +_SPRIN11
36523     +_SPRIN12
36524     +_SPRIN13
36525     +_SPRIN14
36526     +_SPRIN15
36527     +_SPRIN16
36528     +_SPRIN21
36529     +_SPRIN22
36530     +_SPRIN23
36531     +_SPRIN24
36532     +_SPRIN25
36533     +_SPRIN26
36534     +_SPRIN31
36535     +_SPRIN32
36536     +_SPRIN33
36537     +_SPRIN34
36538     +_SPRIN35
36539     +_SPRIN36
36540     +_SPRIN41
36541     +_SPRIN42
36542     +_SPRIN43
36543     +_SPRIN44
36544     +_SPRIN45
36545     +_SPRIN46
36546     +_SPRIN51
36547     +_SPRIN52
36548     +_SPRIN53
36549     +_SPRIN54
36550     +_SPRIN55
36551     +_SPRIN56
36552     +_SPRIN61
36553     +_SPRIN62
36554     +_SPRIN63
36555     +_SPRIN64
36556     +_SPRIN65
36557     +_SPRIN66
36558     +_SPRIN71
36559     +_SPRIN72
36560     +_SPRIN73
36561     +_SPRIN74
36562     +_SPRIN75
36563     +_SPRIN76
36564     +_SPRIN81
36565     +_SPRIN82
36566     +_SPRIN83
36567     +_SPRIN84
36568     +_SPRIN85
36569     +_SPRIN86
36570     +_SPRIN91
36571     +_SPRIN92
36572     +;
MPRINT(EM_DIAGRAM):   DROP _SPRIN01 _SPRIN02 _SPRIN03 _SPRIN04 _SPRIN05 _SPRIN06 _SPRIN11 _SPRIN12 _SPRIN13 _SPRIN14 _SPRIN15 _SPRIN16 _SPRIN21 _SPRIN22 _SPRIN23 _SPRIN24 _SPRIN25 _SPRIN26 _SPRIN31 _SPRIN32 _SPRIN33 _SPRIN34 _SPRIN35 _SPRIN36 _SPRIN41
_SPRIN42 _SPRIN43 _SPRIN44 _SPRIN45 _SPRIN46 _SPRIN51 _SPRIN52 _SPRIN53 _SPRIN54 _SPRIN55 _SPRIN56 _SPRIN61 _SPRIN62 _SPRIN63 _SPRIN64 _SPRIN65 _SPRIN66 _SPRIN71 _SPRIN72 _SPRIN73 _SPRIN74 _SPRIN75 _SPRIN76 _SPRIN81 _SPRIN82 _SPRIN83 _SPRIN84 _SPRIN85
_SPRIN86 _SPRIN91 _SPRIN92 ;
36573     +;
MPRINT(EM_DIAGRAM):   ;
36574     +/**********************************************************/
36575     +* Selected activation function at stage 0 = SQUARE;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 0 = SQUARE;
36576     +/**********************************************************/
36577     +;
MPRINT(EM_DIAGRAM):   ;
36578     +_YHAT0=2.3051746655
36579     ++(-0.19417747735271+-0.09675674343036*_SPRIN01)*_SPRIN01
36580     ++(-0.73738191586107+0.10241745858513*_SPRIN02)*_SPRIN02
36581     ++(0.83980885598055+0.11134826564668*_SPRIN03)*_SPRIN03
36582     ++(-0.71440430592942+-0.02156468071721*_SPRIN04)*_SPRIN04
36583     ++(0.3888922091179+-0.09102340636711*_SPRIN05)*_SPRIN05
36584     ++(-1.72630985278122+0.74459644036963*_SPRIN06)*_SPRIN06
36585     +;
MPRINT(EM_DIAGRAM):   _YHAT0=2.3051746655 +(-0.19417747735271+-0.09675674343036*_SPRIN01)*_SPRIN01 +(-0.73738191586107+0.10241745858513*_SPRIN02)*_SPRIN02 +(0.83980885598055+0.11134826564668*_SPRIN03)*_SPRIN03
+(-0.71440430592942+-0.02156468071721*_SPRIN04)*_SPRIN04 +(0.3888922091179+-0.09102340636711*_SPRIN05)*_SPRIN05 +(-1.72630985278122+0.74459644036963*_SPRIN06)*_SPRIN06 ;
36586     +/*--- Target level is binary, take a logistic link function --*/
36587     +if _YHAT0 > 0 then _YHAT0=1/(1+exp(-_YHAT0));
MPRINT(EM_DIAGRAM):   if _YHAT0 > 0 then _YHAT0=1/(1+exp(-_YHAT0));
36588     +else _YHAT0=exp(_YHAT0)/(1+exp(_YHAT0));
MPRINT(EM_DIAGRAM):   else _YHAT0=exp(_YHAT0)/(1+exp(_YHAT0));
36589     +;
MPRINT(EM_DIAGRAM):   ;
36590     +/**********************************************************/
36591     +* Selected activation function at stage 1 = SQUARE;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 1 = SQUARE;
36592     +/**********************************************************/
36593     +;
MPRINT(EM_DIAGRAM):   ;
36594     +_RHAT1=0.0912609475
36595     ++(-0.09414206806686+-0.08955473760048*_SPRIN11)*_SPRIN11
36596     ++(-0.06159600973948+-0.0229773274237*_SPRIN12)*_SPRIN12
36597     ++(-0.03147887768318+-0.00081705200046*_SPRIN13)*_SPRIN13
36598     ++(0.02645910500953+-0.00410154704032*_SPRIN14)*_SPRIN14
36599     ++(-0.01566048269006+-0.00324215290335*_SPRIN15)*_SPRIN15
36600     ++(-0.02908862244111+0.00627165946881*_SPRIN16)*_SPRIN16
36601     +;
MPRINT(EM_DIAGRAM):   _RHAT1=0.0912609475 +(-0.09414206806686+-0.08955473760048*_SPRIN11)*_SPRIN11 +(-0.06159600973948+-0.0229773274237*_SPRIN12)*_SPRIN12 +(-0.03147887768318+-0.00081705200046*_SPRIN13)*_SPRIN13
+(0.02645910500953+-0.00410154704032*_SPRIN14)*_SPRIN14 +(-0.01566048269006+-0.00324215290335*_SPRIN15)*_SPRIN15 +(-0.02908862244111+0.00627165946881*_SPRIN16)*_SPRIN16 ;
36602     +;
MPRINT(EM_DIAGRAM):   ;
36603     +/**********************************************************/
36604     +* Selected activation function at stage 2 = SQUARE;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 2 = SQUARE;
36605     +/**********************************************************/
36606     +;
MPRINT(EM_DIAGRAM):   ;
36607     +_RHAT2=-0.061139758
36608     ++(0.02738748366125+-0.00830707250435*_SPRIN21)*_SPRIN21
36609     ++(-0.04901368010529+-0.02148094283953*_SPRIN22)*_SPRIN22
36610     ++(-0.03353018598261+-0.00886501990858*_SPRIN23)*_SPRIN23
36611     ++(-0.01654875556624+-0.00018156660883*_SPRIN24)*_SPRIN24
36612     ++(0.00920354282415+0.00148518604673*_SPRIN25)*_SPRIN25
36613     ++(-0.00150763273699+0.00559168627378*_SPRIN26)*_SPRIN26
36614     +;
MPRINT(EM_DIAGRAM):   _RHAT2=-0.061139758 +(0.02738748366125+-0.00830707250435*_SPRIN21)*_SPRIN21 +(-0.04901368010529+-0.02148094283953*_SPRIN22)*_SPRIN22 +(-0.03353018598261+-0.00886501990858*_SPRIN23)*_SPRIN23
+(-0.01654875556624+-0.00018156660883*_SPRIN24)*_SPRIN24 +(0.00920354282415+0.00148518604673*_SPRIN25)*_SPRIN25 +(-0.00150763273699+0.00559168627378*_SPRIN26)*_SPRIN26 ;
36615     +;
MPRINT(EM_DIAGRAM):   ;
36616     +/**********************************************************/
36617     +* Selected activation function at stage 3 = SQUARE;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 3 = SQUARE;
36618     +/**********************************************************/
36619     +;
MPRINT(EM_DIAGRAM):   ;
36620     +_RHAT3=0.0083373964
36621     ++(0.01481233075223+0.00384015188599*_SPRIN31)*_SPRIN31
36622     ++(-0.0227217190976+-0.00015520748667*_SPRIN32)*_SPRIN32
36623     ++(0.01573409451527+0.00672324318002*_SPRIN33)*_SPRIN33
36624     ++(0.00113614446577+-0.01098354677089*_SPRIN34)*_SPRIN34
36625     ++(-0.0052207649963+-0.03254992505232*_SPRIN35)*_SPRIN35
36626     ++(0.01531501521437+0.00533283175422*_SPRIN36)*_SPRIN36
36627     +;
MPRINT(EM_DIAGRAM):   _RHAT3=0.0083373964 +(0.01481233075223+0.00384015188599*_SPRIN31)*_SPRIN31 +(-0.0227217190976+-0.00015520748667*_SPRIN32)*_SPRIN32 +(0.01573409451527+0.00672324318002*_SPRIN33)*_SPRIN33
+(0.00113614446577+-0.01098354677089*_SPRIN34)*_SPRIN34 +(-0.0052207649963+-0.03254992505232*_SPRIN35)*_SPRIN35 +(0.01531501521437+0.00533283175422*_SPRIN36)*_SPRIN36 ;
36628     +;
MPRINT(EM_DIAGRAM):   ;
36629     +/**********************************************************/
36630     +* Selected activation function at stage 4 = SQUARE;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 4 = SQUARE;
36631     +/**********************************************************/
36632     +;
MPRINT(EM_DIAGRAM):   ;
36633     +_RHAT4=-0.00554739
36634     ++(-0.01203221160804+0.00005736691618*_SPRIN41)*_SPRIN41
36635     ++(-0.01356612566468+-0.01582620321917*_SPRIN42)*_SPRIN42
36636     ++(-0.00838141751483+0.00078082164673*_SPRIN43)*_SPRIN43
36637     ++(-0.01280728724481+0.00324363702825*_SPRIN44)*_SPRIN44
36638     ++(0.00519289119207+0.00039284356754*_SPRIN45)*_SPRIN45
36639     ++(-0.00664404657125+0.00492890774894*_SPRIN46)*_SPRIN46
36640     +;
MPRINT(EM_DIAGRAM):   _RHAT4=-0.00554739 +(-0.01203221160804+0.00005736691618*_SPRIN41)*_SPRIN41 +(-0.01356612566468+-0.01582620321917*_SPRIN42)*_SPRIN42 +(-0.00838141751483+0.00078082164673*_SPRIN43)*_SPRIN43
+(-0.01280728724481+0.00324363702825*_SPRIN44)*_SPRIN44 +(0.00519289119207+0.00039284356754*_SPRIN45)*_SPRIN45 +(-0.00664404657125+0.00492890774894*_SPRIN46)*_SPRIN46 ;
36641     +;
MPRINT(EM_DIAGRAM):   ;
36642     +/**********************************************************/
36643     +* Selected activation function at stage 5 = COS;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 5 = COS;
36644     +/**********************************************************/
36645     +;
MPRINT(EM_DIAGRAM):   ;
36646     +_RHAT5=0.6814156602
36647     ++0.52640942147498*COS(0.56447298643238*_SPRIN51*(2/ARCOS(-1)))
36648     ++-0.15653015472306*COS(0.48231868499132*_SPRIN52*(2/ARCOS(-1)))
36649     ++0.6387628420103*COS(0.58539105980677*_SPRIN53*(2/ARCOS(-1)))
36650     ++-0.05774639168704*COS(0.52309795290476*_SPRIN54*(2/ARCOS(-1)))
36651     ++-0.2178611501511*COS(0.00394022714554*_SPRIN55*(2/ARCOS(-1)))
36652     ++-1.42397576006384*COS(-0.04585038403294*_SPRIN56*(2/ARCOS(-1)))
36653     +;
MPRINT(EM_DIAGRAM):   _RHAT5=0.6814156602 +0.52640942147498*COS(0.56447298643238*_SPRIN51*(2/ARCOS(-1))) +-0.15653015472306*COS(0.48231868499132*_SPRIN52*(2/ARCOS(-1))) +0.6387628420103*COS(0.58539105980677*_SPRIN53*(2/ARCOS(-1)))
+-0.05774639168704*COS(0.52309795290476*_SPRIN54*(2/ARCOS(-1))) +-0.2178611501511*COS(0.00394022714554*_SPRIN55*(2/ARCOS(-1))) +-1.42397576006384*COS(-0.04585038403294*_SPRIN56*(2/ARCOS(-1))) ;
36654     +;
MPRINT(EM_DIAGRAM):   ;
36655     +/**********************************************************/
36656     +* Selected activation function at stage 6 = LOGIST;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 6 = LOGIST;
36657     +/**********************************************************/
36658     +;
MPRINT(EM_DIAGRAM):   ;
36659     +_RHAT6=0.1024244257
36660     +;
MPRINT(EM_DIAGRAM):   _RHAT6=0.1024244257 ;
36661     +if -(-0.36028947353548*_SPRIN61) <= 0
36662     +then _tmpLogit=1/(1+exp(-(-0.36028947353548*_SPRIN61)));
MPRINT(EM_DIAGRAM):   if -(-0.36028947353548*_SPRIN61) <= 0 then _tmpLogit=1/(1+exp(-(-0.36028947353548*_SPRIN61)));
36663     +else _tmpLogit=exp((-0.36028947353548*_SPRIN61))
36664     +/(1+exp((-0.36028947353548*_SPRIN61)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-0.36028947353548*_SPRIN61)) /(1+exp((-0.36028947353548*_SPRIN61)));
36665     +_RHAT6=_RHAT6+0.0595045685*_tmpLogit;
MPRINT(EM_DIAGRAM):   _RHAT6=_RHAT6+0.0595045685*_tmpLogit;
36666     +if -(1.44518407488071*_SPRIN62) <= 0
36667     +then _tmpLogit=1/(1+exp(-(1.44518407488071*_SPRIN62)));
MPRINT(EM_DIAGRAM):   if -(1.44518407488071*_SPRIN62) <= 0 then _tmpLogit=1/(1+exp(-(1.44518407488071*_SPRIN62)));
36668     +else _tmpLogit=exp((1.44518407488071*_SPRIN62))
36669     +/(1+exp((1.44518407488071*_SPRIN62)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((1.44518407488071*_SPRIN62)) /(1+exp((1.44518407488071*_SPRIN62)));
36670     +_RHAT6=_RHAT6+-0.095204136*_tmpLogit;
MPRINT(EM_DIAGRAM):   _RHAT6=_RHAT6+-0.095204136*_tmpLogit;
36671     +if -(-0.03345485179207*_SPRIN63) <= 0
36672     +then _tmpLogit=1/(1+exp(-(-0.03345485179207*_SPRIN63)));
MPRINT(EM_DIAGRAM):   if -(-0.03345485179207*_SPRIN63) <= 0 then _tmpLogit=1/(1+exp(-(-0.03345485179207*_SPRIN63)));
36673     +else _tmpLogit=exp((-0.03345485179207*_SPRIN63))
36674     +/(1+exp((-0.03345485179207*_SPRIN63)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-0.03345485179207*_SPRIN63)) /(1+exp((-0.03345485179207*_SPRIN63)));
36675     +_RHAT6=_RHAT6+-0.095059898*_tmpLogit;
MPRINT(EM_DIAGRAM):   _RHAT6=_RHAT6+-0.095059898*_tmpLogit;
36676     +if -(-0.01545111237618*_SPRIN64) <= 0
36677     +then _tmpLogit=1/(1+exp(-(-0.01545111237618*_SPRIN64)));
MPRINT(EM_DIAGRAM):   if -(-0.01545111237618*_SPRIN64) <= 0 then _tmpLogit=1/(1+exp(-(-0.01545111237618*_SPRIN64)));
36678     +else _tmpLogit=exp((-0.01545111237618*_SPRIN64))
36679     +/(1+exp((-0.01545111237618*_SPRIN64)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-0.01545111237618*_SPRIN64)) /(1+exp((-0.01545111237618*_SPRIN64)));
36680     +_RHAT6=_RHAT6+0.1046933746*_tmpLogit;
MPRINT(EM_DIAGRAM):   _RHAT6=_RHAT6+0.1046933746*_tmpLogit;
36681     +if -(-0.12187454464049*_SPRIN65) <= 0
36682     +then _tmpLogit=1/(1+exp(-(-0.12187454464049*_SPRIN65)));
MPRINT(EM_DIAGRAM):   if -(-0.12187454464049*_SPRIN65) <= 0 then _tmpLogit=1/(1+exp(-(-0.12187454464049*_SPRIN65)));
36683     +else _tmpLogit=exp((-0.12187454464049*_SPRIN65))
36684     +/(1+exp((-0.12187454464049*_SPRIN65)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-0.12187454464049*_SPRIN65)) /(1+exp((-0.12187454464049*_SPRIN65)));
36685     +_RHAT6=_RHAT6+-0.109170043*_tmpLogit;
MPRINT(EM_DIAGRAM):   _RHAT6=_RHAT6+-0.109170043*_tmpLogit;
36686     +if -(0.09098922417204*_SPRIN66) <= 0
36687     +then _tmpLogit=1/(1+exp(-(0.09098922417204*_SPRIN66)));
MPRINT(EM_DIAGRAM):   if -(0.09098922417204*_SPRIN66) <= 0 then _tmpLogit=1/(1+exp(-(0.09098922417204*_SPRIN66)));
36688     +else _tmpLogit=exp((0.09098922417204*_SPRIN66))
36689     +/(1+exp((0.09098922417204*_SPRIN66)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((0.09098922417204*_SPRIN66)) /(1+exp((0.09098922417204*_SPRIN66)));
36690     +_RHAT6=_RHAT6+-0.095013123*_tmpLogit;
MPRINT(EM_DIAGRAM):   _RHAT6=_RHAT6+-0.095013123*_tmpLogit;
36691     +;
MPRINT(EM_DIAGRAM):   ;
36692     +;
MPRINT(EM_DIAGRAM):   ;
36693     +/**********************************************************/
36694     +* Selected activation function at stage 7 = SQUARE;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 7 = SQUARE;
36695     +/**********************************************************/
36696     +;
MPRINT(EM_DIAGRAM):   ;
36697     +_RHAT7=-0.000880203
36698     ++(-0.00965050649163+0.00858904968641*_SPRIN71)*_SPRIN71
36699     ++(-0.00955350123449+-0.01461149286314*_SPRIN72)*_SPRIN72
36700     ++(-0.01017810368788+0.00291428753593*_SPRIN73)*_SPRIN73
36701     ++(-0.00217156751647+0.00037190508221*_SPRIN74)*_SPRIN74
36702     ++(0.00117674972917+0.00203212475874*_SPRIN75)*_SPRIN75
36703     ++(0.00015660369416+-0.00280883926824*_SPRIN76)*_SPRIN76
36704     +;
MPRINT(EM_DIAGRAM):   _RHAT7=-0.000880203 +(-0.00965050649163+0.00858904968641*_SPRIN71)*_SPRIN71 +(-0.00955350123449+-0.01461149286314*_SPRIN72)*_SPRIN72 +(-0.01017810368788+0.00291428753593*_SPRIN73)*_SPRIN73
+(-0.00217156751647+0.00037190508221*_SPRIN74)*_SPRIN74 +(0.00117674972917+0.00203212475874*_SPRIN75)*_SPRIN75 +(0.00015660369416+-0.00280883926824*_SPRIN76)*_SPRIN76 ;
36705     +;
MPRINT(EM_DIAGRAM):   ;
36706     +/**********************************************************/
36707     +* Selected activation function at stage 8 = EXP;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 8 = EXP;
36708     +/**********************************************************/
36709     +;
MPRINT(EM_DIAGRAM):   ;
36710     +_RHAT8=0.130433163
36711     ++0.09340258104045*exp(0.02644155785566*_SPRIN81)
36712     ++-0.11197747139862*exp(0.04836367094031*_SPRIN82)
36713     ++-0.07674733883759*exp(0.13760265571187*_SPRIN83)
36714     ++-0.0137457899687*exp(0.06701027571715*_SPRIN84)
36715     ++-0.12581596061505*exp(0.00982684134311*_SPRIN85)
36716     ++0.10358175995545*exp(-0.01449313295342*_SPRIN86)
36717     +;
MPRINT(EM_DIAGRAM):   _RHAT8=0.130433163 +0.09340258104045*exp(0.02644155785566*_SPRIN81) +-0.11197747139862*exp(0.04836367094031*_SPRIN82) +-0.07674733883759*exp(0.13760265571187*_SPRIN83) +-0.0137457899687*exp(0.06701027571715*_SPRIN84)
+-0.12581596061505*exp(0.00982684134311*_SPRIN85) +0.10358175995545*exp(-0.01449313295342*_SPRIN86) ;
36718     +;
MPRINT(EM_DIAGRAM):   ;
36719     +/**********************************************************/
36720     +* Selected activation function at stage 9 = SIN;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 9 = SIN;
36721     +/**********************************************************/
36722     +;
MPRINT(EM_DIAGRAM):   ;
36723     +_RHAT9=-0.05425292
36724     ++0.14215422313658*SIN(-0.23302370170271*_SPRIN91*(2/ARCOS(-1)))
36725     ++-0.19445264661544*SIN(-0.2175526786484*_SPRIN92*(2/ARCOS(-1)))
36726     +;
MPRINT(EM_DIAGRAM):   _RHAT9=-0.05425292 +0.14215422313658*SIN(-0.23302370170271*_SPRIN91*(2/ARCOS(-1))) +-0.19445264661544*SIN(-0.2175526786484*_SPRIN92*(2/ARCOS(-1))) ;
36727     +;
MPRINT(EM_DIAGRAM):   ;
36728     +_tmpPredict
36729     +=_YHAT0
36730     ++_RHAT1
36731     ++_RHAT2
36732     ++_RHAT3
36733     ++_RHAT4
36734     ++_RHAT5
36735     ++_RHAT6
36736     ++_RHAT7
36737     ++_RHAT8
36738     ++_RHAT9
36739     +;
MPRINT(EM_DIAGRAM):   _tmpPredict =_YHAT0 +_RHAT1 +_RHAT2 +_RHAT3 +_RHAT4 +_RHAT5 +_RHAT6 +_RHAT7 +_RHAT8 +_RHAT9 ;
36740     +_tmpPredict=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   _tmpPredict=1-_tmpPredict;
36741     +If _tmpPredict > 1 then _tmpPredict=1;
MPRINT(EM_DIAGRAM):   If _tmpPredict > 1 then _tmpPredict=1;
36742     +else if _tmpPredict < 0 then _tmpPredict=0;
MPRINT(EM_DIAGRAM):   else if _tmpPredict < 0 then _tmpPredict=0;
36743     +P_DepVar1=_tmpPredict;
MPRINT(EM_DIAGRAM):   P_DepVar1=_tmpPredict;
36744     +label P_DepVar1 = "Predicted: DepVar=1";
MPRINT(EM_DIAGRAM):   label P_DepVar1 = "Predicted: DepVar=1";
36745     +P_DepVar0=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   P_DepVar0=1-_tmpPredict;
36746     +label P_DepVar0 = "Predicted: DepVar=0";
MPRINT(EM_DIAGRAM):   label P_DepVar0 = "Predicted: DepVar=0";
36747     +if P_DepVar1 ge 0.5 then I_DepVar="1";
MPRINT(EM_DIAGRAM):   if P_DepVar1 ge 0.5 then I_DepVar="1";
36748     +else I_DepVar="0";
MPRINT(EM_DIAGRAM):   else I_DepVar="0";
36749     +if F_DepVar NE "1" AND F_DepVar NE "0" then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE "1" AND F_DepVar NE "0" then do;
36750     +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
36751     +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
36752     +end;
MPRINT(EM_DIAGRAM):   end;
36753     +else do;
MPRINT(EM_DIAGRAM):   else do;
36754     +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
36755     +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
36756     +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
36757     +WHEN("1") R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN("1") R_DepVar1 = R_DepVar1 +1;
36758     +WHEN("0") R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN("0") R_DepVar0 = R_DepVar0 +1;
36759     +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
36760     +end;
MPRINT(EM_DIAGRAM):   end;
36761     +END;
MPRINT(EM_DIAGRAM):   END;
36762     +;
MPRINT(EM_DIAGRAM):   ;
36763     +DROP _YHAT0
36764     +_RHAT1
36765     +_RHAT2
36766     +_RHAT3
36767     +_RHAT4
36768     +_RHAT5
36769     +_RHAT6
36770     +_RHAT7
36771     +_RHAT8
36772     +_RHAT9
36773     +_tmpLogit
36774     +_tmpPredict
36775     +Marital_Status_1_
36776     +Marital_Status_2_
36777     +Marital_Status_3_
36778     +Marital_Status_4_
36779     +Marital_Status_5_
36780     +_S1_ACCEPTEDCMPTOTAL
36781     +_S2_FRQ
36782     +_S3_INCOME
36783     +_S4_MNT
36784     +_S5_MNTGOLDPRODS
36785     +_S6_MNTMEATPRODUCTS
36786     +_S7_NUMCATALOGPURCHASES
36787     +_S8_NUMDEALSPURCHASES
36788     +_S9_NUMWEBVISITSMONTH
36789     +_S10_RFMSTAT
36790     +_S11_RECENCY
36791     +_S12_TEENHOME
36792     +_S13_YEAR_BIRTH
36793     +;
MPRINT(EM_DIAGRAM):   DROP _YHAT0 _RHAT1 _RHAT2 _RHAT3 _RHAT4 _RHAT5 _RHAT6 _RHAT7 _RHAT8 _RHAT9 _tmpLogit _tmpPredict Marital_Status_1_ Marital_Status_2_ Marital_Status_3_ Marital_Status_4_ Marital_Status_5_ _S1_ACCEPTEDCMPTOTAL _S2_FRQ _S3_INCOME
_S4_MNT _S5_MNTGOLDPRODS _S6_MNTMEATPRODUCTS _S7_NUMCATALOGPURCHASES _S8_NUMDEALSPURCHASES _S9_NUMWEBVISITSMONTH _S10_RFMSTAT _S11_RECENCY _S12_TEENHOME _S13_YEAR_BIRTH ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
36794      run;
 
NOTE: DATA STEP view saved on file EMWS8.DMNEURAL6_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
36795      quit;
36796      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ _ERR_ _AVERR_ _DFT_ _DFE_ _MSE_ _RMSE_ _NW_ _FPE_ _RFPE_ _AIC_ _SBC_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.DMNeural6_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ _ERR_ _AVERR_ _DFT_ _DFE_ _MSE_ _RMSE_ _NW_ _FPE_ _RFPE_ _AIC_ _SBC_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" _DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong
Classifications" _DISF_= "Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   label _DFE_= "Train: Degrees of Freedom for Error" _DFT_= "Train: Total Degrees of Freedom" _DFM_= "Train: Model Degrees of Freedom" _MSE_= "Train: Mean Squared Error" _RMSE_= "Train: Root Mean Squared Error" _NW_= "Train:
Number of Weights" _FPE_ = "Train: Final Prediction Error" _RFPE_ = "Train: Root Final Prediction Error" _AIC_= "Train: Akaike's Information Criterion" _SBC_= "Train: Schwarz's Bayesian Criterion" _ERR_= "Train: Error Function" _AVERR_= "Train: Average
Error Function";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ _RASE_ _ERR_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar="1" then do;
MPRINT(CALFITSTATSNOMINAL):   if P_DepVar1<1e-10 then _ERR_+(-2*(1e10*P_DepVar1-10*LOG(10)-1));
MPRINT(CALFITSTATSNOMINAL):   else _ERR_+(-2*log(P_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar="0" then do;
MPRINT(CALFITSTATSNOMINAL):   if P_DepVar0<1e-10 then _ERR_+(-2*(1e10*P_DepVar0-10*LOG(10)-1));
MPRINT(CALFITSTATSNOMINAL):   else _ERR_+(-2*log(P_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   _AVERR_=_ERR_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _NW_=122;
MPRINT(CALFITSTATSNOMINAL):   _DFM_=122;
MPRINT(CALFITSTATSNOMINAL):   _DFT_=_DIV_-_NOBS_;
MPRINT(CALFITSTATSNOMINAL):   _DFE_=_DFT_-_DFM_;
MPRINT(CALFITSTATSNOMINAL):   if _DFE_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MSE_=_ASE_ *_DFT_/_DFE_;
MPRINT(CALFITSTATSNOMINAL):   _RMSE_=sqrt(_MSE_);
MPRINT(CALFITSTATSNOMINAL):   _FPE_ =_ASE_*(_DFT_+_DFM_)/_DFE_;
MPRINT(CALFITSTATSNOMINAL):   _RFPE_=sqrt(_FPE_);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _AIC_=_ERR_+2*_DFM_;
MPRINT(CALFITSTATSNOMINAL):   if _DFT_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _SBC_=_ERR_+_DFM_*log(_DFT_);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural6_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.DMNeural6_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" _DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong
Classifications" _DISF_= "Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ _RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural6_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.DMNeural6_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
36856      data _tmpds1_;
MPRINT(EM_DIAGRAM):    data _tmpds1_;
36857      set EMWS8.DMNeural6_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_ESTIMATE;
36858      if _TYPE_ ^='_PARMS_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_ ^='_PARMS_' then delete;
36859      length STATISTICS $30;
MPRINT(EM_DIAGRAM):   length STATISTICS $30;
36860      STATISTICS = 'Sum of Square Errors';
MPRINT(EM_DIAGRAM):   STATISTICS = 'Sum of Square Errors';
36861      KEEP _NAME_ _STAGE_ STATISTICS _MEAN_;
MPRINT(EM_DIAGRAM):   KEEP _NAME_ _STAGE_ STATISTICS _MEAN_;
36862      Label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_optfn, noquote))";
MPRINT(EM_DIAGRAM):   Label _NAME_ = "Optimization Function";
36863      Label _STAGE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stage, noquote))";
MPRINT(EM_DIAGRAM):   Label _STAGE_ = "Training Stage";
36864      Label _MEAN_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stat, noquote))";
MPRINT(EM_DIAGRAM):   Label _MEAN_ = "Statistic";
36865      Label STATISTICS = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stats, noquote))";
MPRINT(EM_DIAGRAM):   Label STATISTICS = "Statistics";
36866      rename _NAME_ =OPTIMIZATION;
MPRINT(EM_DIAGRAM):   rename _NAME_ =OPTIMIZATION;
36867      rename _STAGE_=STAGE;
MPRINT(EM_DIAGRAM):   rename _STAGE_=STAGE;
36868      rename _MEAN_ = VALUE;
MPRINT(EM_DIAGRAM):   rename _MEAN_ = VALUE;
36869      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 142 observations read from the data set EMWS8.DMNEURAL6_ESTIMATE.
NOTE: The data set WORK._TMPDS1_ has 80 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
36870      data _tmpds2_;
MPRINT(EM_DIAGRAM):   data _tmpds2_;
36871      set EMWS8.DMNeural6_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_ESTIMATE;
36872      if _TYPE_ ^='_PARMS_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_ ^='_PARMS_' then delete;
36873      length STATISTICS $30;
MPRINT(EM_DIAGRAM):   length STATISTICS $30;
36874      STATISTICS = 'Accuracy Percent';
MPRINT(EM_DIAGRAM):   STATISTICS = 'Accuracy Percent';
36875      KEEP _NAME_ _STAGE_ STATISTICS _STDEV_;
MPRINT(EM_DIAGRAM):   KEEP _NAME_ _STAGE_ STATISTICS _STDEV_;
36876      Label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_optfn, noquote))";
MPRINT(EM_DIAGRAM):   Label _NAME_ = "Optimization Function";
36877      Label _STAGE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stage, noquote))";
MPRINT(EM_DIAGRAM):   Label _STAGE_ = "Training Stage";
36878      Label _STDEV_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stat, noquote))";
MPRINT(EM_DIAGRAM):   Label _STDEV_ = "Statistic";
36879      Label STATISTICS = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stats, noquote))";
MPRINT(EM_DIAGRAM):   Label STATISTICS = "Statistics";
36880      rename _NAME_ =OPTIMIZATION;
MPRINT(EM_DIAGRAM):   rename _NAME_ =OPTIMIZATION;
36881      rename _STAGE_=STAGE;
MPRINT(EM_DIAGRAM):   rename _STAGE_=STAGE;
36882      rename _STDEV_ = VALUE;
MPRINT(EM_DIAGRAM):   rename _STDEV_ = VALUE;
36883      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 142 observations read from the data set EMWS8.DMNEURAL6_ESTIMATE.
NOTE: The data set WORK._TMPDS2_ has 80 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
36884      data EMWS8.DMNeural6_PLOTSTAGE;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural6_PLOTSTAGE;
36885      set _tmpds1_ _tmpds2_;
MPRINT(EM_DIAGRAM):   set _tmpds1_ _tmpds2_;
36886      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 80 observations read from the data set WORK._TMPDS1_.
NOTE: There were 80 observations read from the data set WORK._TMPDS2_.
NOTE: The data set EMWS8.DMNEURAL6_PLOTSTAGE has 160 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * DMNeural6: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
36887      *------------------------------------------------------------*;
36888      * DMNeural6: Computing metadata for TRAIN data;
36889      *------------------------------------------------------------*;
 
NOTE: View EMWS8.DMNEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.29 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural6\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.DMNeural6_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.DMNeural6_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.DMNeural6_TRAIN out=WORK.M139FDZG noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M139FDZG;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M139FDZG(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M139FDZG;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M139FDZG;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M31_94P0 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M31_94P0;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M31_94P0;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M33QXEBA(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M31_94P0;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M31_94P0;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M31_94P0;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
The SAS System
 
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M31_94P0;
MPRINT(EMADVISECOLUMNS):   set WORK.M31_94P0;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural6_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "DMNeural6";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "DMNeural6";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "DMNeural6";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "DMNeural6";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "DMNeural6";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "DMNeural6";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "DMNeural6";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "DMNeural6";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "DMNeural6";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "DMNeural6";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * DMNeural6: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
37201      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
37202      set EMWS8.DMNeural6_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_EMINFO;
37203      where DATA='DMNeural6' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='DMNeural6' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
37204      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.DMNEURAL6_EMINFO.
      WHERE (DATA='DMNeural6') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
37205      data EMWS8.DMNeural6_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural6_EMINFO;
37206      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
37207      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
37208      cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.DMNEURAL6_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
37212      run;
37213      data EMWS8.DMNeural6_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural6_EMINFO;
37214      set EMWS8.DMNeural6_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_EMINFO WORK.MODELTEMP_INFO;
37215      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.DMNEURAL6_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.DMNEURAL6_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
37216      proc sort data = EMWS8.DMNeural6_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.DMNeural6_EMINFO NOTHREADS;
37217      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
37218      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.DMNEURAL6_EMINFO.
NOTE: The data set EMWS8.DMNEURAL6_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
37219      proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
37220      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
37221      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
37222      proc sort data = EMWS8.DMNeural6_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.DMNeural6_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
37223      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
37224      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.DMNEURAL6_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
37225      data EMWS8.DMNeural6_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural6_EMINFO;
37226      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
37227      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
37228      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.DMNEURAL6_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
37229      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
37230      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
37231      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
37232      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS8.DMNEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS8.DMNEURAL6_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.17 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                19.17 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3KC9WG4 "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural6\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3KC9WG4 new;
MPRINT(EM_DIAGRAM):   run;
37256      data EMWS8.DMNeural6_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural6_EMOUTFIT;
37257      set EMWS8.DMNeural6_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_EMOUTFIT;
37258      length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
37259      label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
37260      if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
37261      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.DMNEURAL6_EMOUTFIT.
NOTE: The data set EMWS8.DMNEURAL6_EMOUTFIT has 1 observations and 31 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
37262      proc sort data=EMWS8.DMNeural6_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.DMNeural6_EMREPORTFIT nothreads;
37263      by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
37264      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS8.DMNEURAL6_EMREPORTFIT.
NOTE: The data set EMWS8.DMNEURAL6_EMREPORTFIT has 20 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
37265      %let _EMwarndup = 0;
37266      %let _EMtargetdup =;
37267      %let _EMASEtargetdup =;
37268      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
37269      set EMWS8.DMNeural6_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_EMOUTFIT;
37270      if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
37271      call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
37272      call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
37273      call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
37274      end;
MPRINT(EM_DIAGRAM):   end;
37275      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.DMNEURAL6_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
37276      proc sort data=EMWS8.Meta2_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Meta2_CMeta_TRAIN out=WORK.SUBSETINMETA;
37277      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
37278      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.META2_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 36 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
37279      proc sort data=EMWS8.DMNeural6_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.DMNeural6_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
37280      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
37281      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.DMNEURAL6_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
37282      data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
37283      merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
37284      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
37285      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 36 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
37286      data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
37287      set EMWS8.DMNeural6_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_CMeta_TRAIN;
37288      where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
37289      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.DMNEURAL6_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 7 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
37290      data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
37291      set EMWS8.DMNeural6_TRAIN(keep=
37292      F_DepVar
37293      I_DepVar
37294      P_DepVar0
37295      P_DepVar1
37296      R_DepVar0
37297      R_DepVar1
37298      _WARN_
37299      DepVar
37300      );
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 _WARN_ DepVar );
37301      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.DMNEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.DMNEURAL6_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.DMNeural6_02N641J nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.DMNeural6_02N641J;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32 CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.DMNeural6_02N641J(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural6_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.DMNeural6_02N641J;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.DMNeural6_02N641J;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_ _LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural6_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE = (NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT
MAXPROB MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST (KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS
SCR_CP_EVENTS SCR_P_NONEVENTS SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0 NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0 FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 -
EVENTS100 NONEVENTS1 - NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359 _NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1 SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100 SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP / NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS)) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 - SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 - SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 - SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 - SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 - SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 - SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 - SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 - SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 - SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 - SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 - SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 - SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 - SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 - SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 - SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 - SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 - SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 - SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 - SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural6_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural6_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
41567      data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
41568      set EMWS8.DMNeural6_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_CMeta_TRAIN;
41569      where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
41569    ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
41570      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.DMNEURAL6_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 7 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
41571      data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
41572      set EMWS8.DMNeural6_VALIDATE(keep=
41573      F_DepVar
41574      I_DepVar
41575      P_DepVar0
41576      P_DepVar1
41577      R_DepVar0
41578      R_DepVar1
41579      _WARN_
41580      DepVar
41581      );
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 _WARN_ DepVar );
41582      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.DMNEURAL6_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.META2_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.DMNEURAL6_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.DMNeural6_3V804BF nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.DMNeural6_3V804BF;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.DMNeural6_3V804BF(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural6_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_EMCLASSIFICATION WORK.DMNeural6_3V804BF;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.DMNeural6_3V804BF;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural6_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural6_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural6_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
45857      %let _cn = %sysfunc(getoption(CENTER));
45858      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
45859      proc print data=EMWS8.DMNeural6_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.DMNeural6_EMREPORTFIT noobs label;
45860      var STAT LABEL TRAIN
45861      VALIDATE
45862      ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
45863      by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
45864      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
45865      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
45866      run;
 
NOTE: There were 20 observations read from the data set EMWS8.DMNEURAL6_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 38.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45867      title10;
MPRINT(EM_DIAGRAM):   title10;
45868      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
45869      proc sort data=EMWS8.DMNeural6_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.DMNeural6_EMCLASSIFICATION nothreads;
45870      by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
45871      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.DMNEURAL6_EMCLASSIFICATION.
NOTE: The data set EMWS8.DMNEURAL6_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
45872      %let _cn = %sysfunc(getoption(CENTER));
45873      options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
45874      proc print data=EMWS8.DMNeural6_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.DMNeural6_EMCLASSIFICATION noobs label;
45875      var from into pct_row pct_col count percent
45876      ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
45877      by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
45878      label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
45879      label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
45880      label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
45881      label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
45882      label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
45883      label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
45884      where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
45885      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
45886      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
45887      run;
 
NOTE: There were 8 observations read from the data set EMWS8.DMNEURAL6_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 39.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45888      title9;
MPRINT(EM_DIAGRAM):   title9;
45889      title10;
MPRINT(EM_DIAGRAM):   title10;
45890      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
45891      %let _cn = %sysfunc(getoption(CENTER));
45892      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
45893      data EMWS8.DMNeural6_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural6_EMEVENTREPORT;
45894      length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
45894    ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
45895      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
45895    !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
45895    ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
45895    ! FALSEEVENT
45896      = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
45896    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
45896    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
45897         "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
45898      FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
45899      FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
45900      TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
45901      TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
45902      set EMWS8.DMNeural6_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural6_EMEVENTREPORT;
45903      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.DMNEURAL6_EMEVENTREPORT.
NOTE: The data set EMWS8.DMNEURAL6_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
45904      proc print data=EMWS8.DMNeural6_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.DMNeural6_EMEVENTREPORT noobs label;
45905      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
45906      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
45907      by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
45908      run;
 
NOTE: There were 2 observations read from the data set EMWS8.DMNEURAL6_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 40.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45909      title10;
MPRINT(EM_DIAGRAM):   title10;
45910      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
45911      proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
45912      modify DMNeural6_EMRANK;
MPRINT(EM_DIAGRAM):   modify DMNeural6_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
45913      label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
45914      label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
45914    ! ;
MPRINT(EM_DIAGRAM):   run;
45915      run;
 
NOTE: MODIFY was successful for EMWS8.DMNEURAL6_EMRANK.DATA.
45916      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
45917      %let _cn = %sysfunc(getoption(CENTER));
45918      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
45919      proc print data=EMWS8.DMNeural6_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.DMNeural6_EMRANK label noobs;
45920      var
45921      decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
45922      by
45923      notsorted DATAROLE
45924      notsorted TARGET
45925      notsorted TARGETLABEL
45926      ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
45927      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
45928      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
45929      run;
 
NOTE: There were 40 observations read from the data set EMWS8.DMNEURAL6_EMRANK.
NOTE: The PROCEDURE PRINT printed page 41.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45930      title10;
MPRINT(EM_DIAGRAM):   title10;
45931      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
45932      proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
45933      modify DMNeural6_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify DMNeural6_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
45934      label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
45934    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
45935      label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
45935    ! ;
MPRINT(EM_DIAGRAM):   run;
45936      run;
 
NOTE: MODIFY was successful for EMWS8.DMNEURAL6_EMSCOREDIST.DATA.
45937      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.DMNeural6_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
