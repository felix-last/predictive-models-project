*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                16.46 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.43 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                16.43 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O129__N3
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O129__N3 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.43 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMTRAIN.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMSCORE.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMREPORT.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.43 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
1104978    proc freq data=EMWS8.AutoNeural25_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.AutoNeural25_VariableSet noprint;
1104979    table ROLE*LEVEL/out=WORK.AutoNeural25META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.AutoNeural25META;
1104980    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 51 observations read from the data set EMWS8.AUTONEURAL25_VARIABLESET.
NOTE: The data set WORK.AUTONEURAL25META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1104981    proc print data=WORK.AutoNeural25META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural25META label noobs;
1104982    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1104983    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1104983  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1104983  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1104984    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1104985    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1104986    run;
 
NOTE: There were 6 observations read from the data set WORK.AUTONEURAL25META.
NOTE: The PROCEDURE PRINT printed page 798.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1104987    title10;
MPRINT(EM_DIAGRAM):   title10;
1104988    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN EMWS8 BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN EMWS8 BINNING_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.BINNING_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural25_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural25_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.AutoNeural25_DepVar_DD
_TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural25_DepVar_DD
out=EMWS8.AutoNeural25_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
1105035    data WORK.AutoNeural25_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural25_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1105036    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1105037    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1105037  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1105037  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1105038       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1105038  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1105038  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1105039    set EMWS8.AUTONEURAL25_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL25_DEPVAR_DM( where=(_TYPE_="TARGET"));
1105040    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1105041    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1105042    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1105043    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1105044    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1105045    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1105046    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1105047    end;
MPRINT(EM_DIAGRAM):   end;
1105048    output;
MPRINT(EM_DIAGRAM):   output;
1105049    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL25_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.AUTONEURAL25_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1105050    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1105051    proc print data=WORK.AutoNeural25_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural25_EVENT noobs label;
1105052    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1105053    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1105054    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1105055    run;
 
NOTE: There were 1 observations read from the data set WORK.AUTONEURAL25_EVENT.
NOTE: The PROCEDURE PRINT printed page 799.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105056    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1105057    proc print data = EMWS8.AutoNeural25_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural25_DepVar_DM noobs label;
1105058    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1105059    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1105060    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1105060  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1105060  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1105061    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1105062    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1105063    run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL25_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 800.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105064    title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural25: Preparing metadata for Training;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M0I3JO2O;
MPRINT(EM_DIAGRAM):   set WORK.M0I3JO2O;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
1105073    data WORK.M0I3JO2O;
MPRINT(EM_DIAGRAM):    data WORK.M0I3JO2O;
1105074    set WORK.M0I3JO2O end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M0I3JO2O end=eof;
1105075    output;
MPRINT(EM_DIAGRAM):   output;
1105076    if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
1105077    NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
1105078    ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
1105079    LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
1105080    TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
1105081    output;
MPRINT(EM_DIAGRAM):   output;
1105082    end;
MPRINT(EM_DIAGRAM):   end;
1105083    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M0I3JO2O.
NOTE: The data set WORK.M0I3JO2O has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL25_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
1105084    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1105085    * AutoNeural25: Create decision matrix;
MPRINT(EM_DIAGRAM):   * AutoNeural25: Create decision matrix;
1105086    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1105087    data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
1105088      length   DepVar                           $  32
1105089               COUNT                                8
1105090               DATAPRIOR                            8
1105091               TRAINPRIOR                           8
1105092               DECPRIOR                             8
1105093               DECISION1                            8
1105094               DECISION2                            8
1105095               ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
1105096
1105097      label    COUNT="Level Counts"
1105098               DATAPRIOR="Data Proportions"
1105099               TRAINPRIOR="Training Proportions"
1105100               DECPRIOR="Decision Priors"
1105101               DECISION1="1"
1105102               DECISION2="0"
1105103               ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
1105104      format   COUNT 10.
1105105               ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
1105106    DepVar="1"; COUNT=359; DATAPRIOR=0.151221567; TRAINPRIOR=0.15122156697556;
1105106  ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.151221567;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
1105107    output;
MPRINT(EM_DIAGRAM):   output;
1105108    DepVar="0"; COUNT=2015; DATAPRIOR=0.848778433; TRAINPRIOR=0.84877843302443;
1105108  ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.848778433;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
1105109    output;
MPRINT(EM_DIAGRAM):   output;
1105110    ;
MPRINT(EM_DIAGRAM):   ;
1105111    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105112    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1105113    modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
1105114    label DECISION1= '1';
1105115    label DECISION2= '0';
1105116    run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
1105117    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
1105118    data EM_AutoNeural25;
MPRINT(EM_DIAGRAM):   data EM_AutoNeural25;
1105119    set EMWS8.BINNING_TRAIN(keep=
1105120    DepVar GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt
1105121    GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts
1105122    GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases
1105123    GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth );
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN(keep= DepVar GRP_AcceptedCmp5
GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds
GRP_MntMeatProducts GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases
GRP_NumDistPurchases GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq
GRP_Recency Year_Birth );
1105124    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: The data set WORK.EM_AUTONEURAL25 has 2374 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * AutoNeural25: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1105125    *------------------------------------------------------------* ;
1105126    * AutoNeural25: DMDBClass Macro ;
1105127    *------------------------------------------------------------* ;
1105128    %macro DMDBClass;
1105129        DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC)
1105130       GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC)
1105131       GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC)
1105132       GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC)
1105133       GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
1105134    %mend DMDBClass;
1105135    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1105136    * AutoNeural25: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural25: DMDBVar Macro ;
1105137    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1105138    %macro DMDBVar;
1105139        Year_Birth
1105140    %mend DMDBVar;
1105141    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1105142    * AutoNeural25: Create DMDB;
MPRINT(EM_DIAGRAM):   * AutoNeural25: Create DMDB;
1105143    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1105144    proc dmdb batch data=WORK.EM_AutoNeural25
1105145    dmdbcat=WORK.AutoNeural25_DMDB
1105146    maxlevel = 513
1105147    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_AutoNeural25 dmdbcat=WORK.AutoNeural25_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
1105148    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC)
GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC)
GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC)
GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC)
GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
1105149    var %DMDBVar;
MPRINT(DMDBVAR):   Year_Birth
MPRINT(EM_DIAGRAM):  ;
1105150    target
1105151    DepVar
1105152    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1105153    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set WORK.EM_AUTONEURAL25.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1105154    quit;
1105155    *--- end code ---*;
 
1105156    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1105157    * AutoNeural25: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural25: Interval Inputs Macro ;
1105158    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1105159    %macro INTINPUTS;
1105160        Year_Birth
1105161    %mend INTINPUTS;
1105162    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1105163    * AutoNeural25: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural25: Binary Inputs Macro ;
1105164    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1105165    %macro BININPUTS;
1105166
1105167    %mend BININPUTS;
1105168    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1105169    * AutoNeural25: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural25: Nominal Inputs Macro ;
1105170    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1105171    %macro NOMINPUTS;
1105172        GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt
1105173       GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts
1105174       GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases
1105175       GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
1105176    %mend NOMINPUTS;
1105177    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1105178    * AutoNeural25: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural25: Ordinal Inputs Macro ;
1105179    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1105180    %macro ORDINPUTS;
1105181
1105182    %mend ORDINPUTS;
1105183    * set printing options;
MPRINT(EM_DIAGRAM):   * set printing options;
1105184    ;
MPRINT(EM_DIAGRAM):   ;
1105185    options linesize = 80;
MPRINT(EM_DIAGRAM):   options linesize = 80;
1105186    options pagesize = 6000;
The SAS System
 
MPRINT(EM_DIAGRAM):   options pagesize = 6000;
1105187    options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
1105188    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1105189    options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
1105190    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1105191    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_autonet_title  ,
1105191  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "AutoNet";
MPRINT(EM_DIAGRAM):   *;
1105192    *;
 
1105193    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105194    * Autoneural: search / FUNNEL LAYERS;
MPRINT(EM_DIAGRAM):   * Autoneural: search / FUNNEL LAYERS;
1105195    ;
MPRINT(EM_DIAGRAM):   ;
1105196    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105197    *;
MPRINT(EM_DIAGRAM):   *;
 
1105198    *;
MPRINT(EM_DIAGRAM):    *;
1105199    proc neural data=EM_AutoNeural25 dmdbcat=WORK.AutoNeural25_DMDB
1105200    validdata=EMWS8.BINNING_VALIDATE
1105201    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural25
dmdbcat=WORK.AutoNeural25_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1105202    *;
MPRINT(EM_DIAGRAM):   *;
1105203    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1105204    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1105205    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1105206    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1105207    target DepVar / level=NOMINAL id=DepVar
1105208    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1105209    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105210    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1105211    ;
MPRINT(EM_DIAGRAM):   ;
1105212    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105213    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1105214    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1105215    *;
MPRINT(EM_DIAGRAM):   *;
1105216    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1105217    *;
MPRINT(EM_DIAGRAM):   *;
1105218    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1105219    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1105219  ! Search # 1 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=1800
maxiter=50 tech = Default;
NOTE:  Synchronizing the objectives and the Solution.
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 144 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1105220    train estiter=1 outest=_anest outfit=_anfit maxtime=1800 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1105221    tech = Default;
1105222    ;
1105223    run;
 
NOTE: The data set WORK.EM_AUTONEURAL25 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           1.70 seconds
      cpu time            1.54 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.71 seconds
      cpu time            1.54 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1105224    *;
1105225    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1105226    var _iter_ _aic_ _averr_ _misc_
1105227    _vaverr_ _vmisc_
1105228    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1105229    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 801.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105230    *------------------------------------------------------------*;
1105231    * Extract best iteration;
1105232    ;
1105233    *------------------------------------------------------------*;
1105234    %global _iter;
1105235    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1105236    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1105237    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1105238    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1105239    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1105240    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1105241    end;
MPRINT(EM_DIAGRAM):   end;
1105242    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1105243    *;
 
1105244    data EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural25_ESTDS;
1105245    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1105246    if _ITER_ eq 49 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 49 then do;
1105247    output;
MPRINT(EM_DIAGRAM):   output;
1105248    stop;
MPRINT(EM_DIAGRAM):   stop;
1105249    end;
MPRINT(EM_DIAGRAM):   end;
1105250    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1105251    *;
1105252    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1105253    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1105254    if _ITER_ eq 49 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 49 and _NAME_ eq "OVERALL" then do;
1105255    output;
MPRINT(EM_DIAGRAM):   output;
1105256    stop;
MPRINT(EM_DIAGRAM):   stop;
1105257    end;
MPRINT(EM_DIAGRAM):   end;
1105258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 100 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105259    *;
MPRINT(EM_DIAGRAM):    *;
1105260    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1105261    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1105261  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1105262    proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
1105263    var _iter_ _aic_ _averr_ _misc_
1105264    _vaverr_ _vmisc_
1105265    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1105266    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 802.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105267    title9;
MPRINT(EM_DIAGRAM):   title9;
1105268    title10;
MPRINT(EM_DIAGRAM):   title10;
1105269    %sysfunc(sasmsg(sashelp.dmine, starthistory_note , NOQUOTE));
MPRINT(EM_DIAGRAM):    * Start history;
MPRINT(EM_DIAGRAM):  ;
1105270    data EMWS8.AutoNeural25_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_HISTORY;
1105271    length _func_ _status_ _step_ $16;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16;
1105272    label _func_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_function_vlabel  ,
1105272  !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _func_ = "Function";
1105273    label _status_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_status_vlabel  ,
1105273  !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _status_ = "Status";
1105274    label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel
1105274  ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Iteration";
1105275    label _step_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_step_vlabel  ,
1105275  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _step_ = "Step";
1105276    _func_ = '';
MPRINT(EM_DIAGRAM):   _func_ = '';
1105277    _status_ = '';
MPRINT(EM_DIAGRAM):   _status_ = '';
1105278    _step_ = 'FUNNEL LAYERS 1';
MPRINT(EM_DIAGRAM):   _step_ = 'FUNNEL LAYERS 1';
1105279    set
1105280    _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0))
1105281    ;
MPRINT(EM_DIAGRAM):   set _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0)) ;
1105282    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANFIT.
      WHERE (_name_='OVERALL') and (_iter_=0);
NOTE: The data set EMWS8.AUTONEURAL25_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1105283    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1105284    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105285    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1105286    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105287    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1105288    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105289    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1105290    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105291    *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
1105292    ;
MPRINT(EM_DIAGRAM):   ;
1105293    data WORK.SAVEDS_AUTONEUR_0O07C6I;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_0O07C6I;
1105294    set EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_ESTDS;
1105295    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL25_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_0O07C6I has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105296    data EMWS8.AutoNeural25_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_BESTDS;
1105297    set EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_ESTDS;
1105298    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL25_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL25_BESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105299    data WORK.BFITDS_AUTONEUR_0O07C6I;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_0O07C6I;
1105300    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105301    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_0O07C6I has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1105302    * Add function info to new history;
MPRINT(EM_DIAGRAM):    * Add function info to new history;
1105303    ;
MPRINT(EM_DIAGRAM):   ;
1105304    data EMWS8.AutoNeural25_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_HISTORY;
1105305    set EMWS8.AutoNeural25_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_HISTORY;
1105306    _func_ = 'DIRECT';
MPRINT(EM_DIAGRAM):   _func_ = 'DIRECT';
1105307    _status_ = 'initial';
MPRINT(EM_DIAGRAM):   _status_ = 'initial';
1105308    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL25_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105309    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1105310    ;
MPRINT(EM_DIAGRAM):   ;
1105311    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1105312    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105313    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1105314    _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
1105315    _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
1105316    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1105317    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1105318    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105319    data EMWS8.AutoNeural25_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_HISTORY;
1105320    set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
1105321    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_HISTORY has 2 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105322    *;
MPRINT(EM_DIAGRAM):    *;
1105323    proc neural data=EM_AutoNeural25 dmdbcat=WORK.AutoNeural25_DMDB
1105324    validdata=EMWS8.BINNING_VALIDATE
1105325    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural25
dmdbcat=WORK.AutoNeural25_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1105326    *;
MPRINT(EM_DIAGRAM):   *;
1105327    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1105328    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1105329    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1105330    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1105331    target DepVar / level=NOMINAL id=DepVar
1105332    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1105333    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105334    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1105335    ;
MPRINT(EM_DIAGRAM):   ;
1105336    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105337    Hidden 3 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=LOG;
1105338    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1105339    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1105340    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1105341    *;
MPRINT(EM_DIAGRAM):   *;
1105342    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1105343    *;
MPRINT(EM_DIAGRAM):   *;
1105344    initial
1105345    ;
MPRINT(EM_DIAGRAM):   initial ;
1105346    *;
MPRINT(EM_DIAGRAM):   *;
1105347    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1105348    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1105348  ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 12 outest=_anpre pretime=74 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 25 observations and 406 variables.
MPRINT(EM_DIAGRAM):   *;
1105349    prelim 12 outest=_anpre pretime=74 preiter=25
1105350    tech = Default
1105351    ;
1105352    *;
1105353    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1105354    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1105354  ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=899
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 406 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1105355    train estiter=1 outest=_anest outfit=_anfit maxtime=899 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1105356    tech = Default;
1105357    ;
1105358    run;
 
NOTE: The data set WORK.EM_AUTONEURAL25 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           13.59 seconds
      cpu time            13.29 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 803.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           13.60 seconds
      cpu time            13.32 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1105359    *;
1105360    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1105361    var _iter_ _aic_ _averr_ _misc_
1105362    _vaverr_ _vmisc_
1105363    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1105364    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 804.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105365    *------------------------------------------------------------*;
1105366    * Extract best iteration;
1105367    ;
1105368    *------------------------------------------------------------*;
1105369    %global _iter;
1105370    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1105371    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1105372    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1105373    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1105374    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1105375    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1105376    end;
MPRINT(EM_DIAGRAM):   end;
1105377    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1105378    *;
 
1105379    data EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural25_ESTDS;
1105380    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1105381    if _ITER_ eq 1 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 then do;
1105382    output;
MPRINT(EM_DIAGRAM):   output;
1105383    stop;
MPRINT(EM_DIAGRAM):   stop;
1105384    end;
MPRINT(EM_DIAGRAM):   end;
1105385    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 406
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1105386    *;
1105387    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1105388    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1105389    if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
1105390    output;
MPRINT(EM_DIAGRAM):   output;
1105391    stop;
MPRINT(EM_DIAGRAM):   stop;
1105392    end;
MPRINT(EM_DIAGRAM):   end;
1105393    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105394    *;
MPRINT(EM_DIAGRAM):    *;
1105395    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1105396    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1105396  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1105397    proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
1105398    var _iter_ _aic_ _averr_ _misc_
1105399    _vaverr_ _vmisc_
1105400    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1105401    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 805.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105402    title9;
MPRINT(EM_DIAGRAM):   title9;
1105403    title10;
MPRINT(EM_DIAGRAM):   title10;
1105404    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1105405    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105406    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1105407    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105408    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1105409    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105410    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1105411    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105412    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1105413    ;
MPRINT(EM_DIAGRAM):   ;
1105414    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1105415    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105416    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1105417    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
1105418    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1105419    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1105420    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1105421    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105422    data EMWS8.AutoNeural25_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_HISTORY;
1105423    set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
1105424    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set
      EMWS8.AUTONEURAL25_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_HISTORY has 3 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105425    *;
MPRINT(EM_DIAGRAM):    *;
1105426    proc neural data=EM_AutoNeural25 dmdbcat=WORK.AutoNeural25_DMDB
1105427    validdata=EMWS8.BINNING_VALIDATE
1105428    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural25
dmdbcat=WORK.AutoNeural25_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1105429    *;
MPRINT(EM_DIAGRAM):   *;
1105430    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1105431    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1105432    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1105433    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1105434    target DepVar / level=NOMINAL id=DepVar
1105435    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1105436    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105437    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1105438    ;
MPRINT(EM_DIAGRAM):   ;
1105439    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105440    Hidden 3 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=SINE;
1105441    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1105442    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1105443    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1105444    *;
MPRINT(EM_DIAGRAM):   *;
1105445    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1105446    *;
MPRINT(EM_DIAGRAM):   *;
1105447    initial
1105448    ;
MPRINT(EM_DIAGRAM):   initial ;
1105449    *;
MPRINT(EM_DIAGRAM):   *;
1105450    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1105451    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1105451  ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 12 outest=_anpre pretime=74 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 25 observations and 406 variables.
MPRINT(EM_DIAGRAM):   *;
1105452    prelim 12 outest=_anpre pretime=74 preiter=25
1105453    tech = Default
1105454    ;
1105455    *;
1105456    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1105457    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1105457  ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=896
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 406 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1105458    train estiter=1 outest=_anest outfit=_anfit maxtime=896 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1105459    tech = Default;
1105460    ;
1105461    run;
 
NOTE: The data set WORK.EM_AUTONEURAL25 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           13.87 seconds
      cpu time            13.57 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 806.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           13.88 seconds
      cpu time            13.58 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1105462    *;
1105463    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1105464    var _iter_ _aic_ _averr_ _misc_
1105465    _vaverr_ _vmisc_
1105466    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1105467    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 807.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105468    *------------------------------------------------------------*;
1105469    * Extract best iteration;
1105470    ;
1105471    *------------------------------------------------------------*;
1105472    %global _iter;
1105473    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1105474    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1105475    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1105476    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1105477    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1105478    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1105479    end;
MPRINT(EM_DIAGRAM):   end;
1105480    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1105481    *;
 
1105482    data EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural25_ESTDS;
1105483    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1105484    if _ITER_ eq 18 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 18 then do;
1105485    output;
MPRINT(EM_DIAGRAM):   output;
1105486    stop;
MPRINT(EM_DIAGRAM):   stop;
1105487    end;
MPRINT(EM_DIAGRAM):   end;
1105488    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 406
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1105489    *;
1105490    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1105491    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1105492    if _ITER_ eq 18 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 18 and _NAME_ eq "OVERALL" then do;
1105493    output;
MPRINT(EM_DIAGRAM):   output;
1105494    stop;
MPRINT(EM_DIAGRAM):   stop;
1105495    end;
MPRINT(EM_DIAGRAM):   end;
1105496    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 38 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1105497    *;
MPRINT(EM_DIAGRAM):    *;
1105498    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1105499    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1105499  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1105500    proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
1105501    var _iter_ _aic_ _averr_ _misc_
1105502    _vaverr_ _vmisc_
1105503    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1105504    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 808.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105505    title9;
MPRINT(EM_DIAGRAM):   title9;
1105506    title10;
MPRINT(EM_DIAGRAM):   title10;
1105507    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1105508    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105509    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1105510    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105511    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1105512    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105513    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1105514    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105515    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1105516    ;
MPRINT(EM_DIAGRAM):   ;
1105517    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1105518    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105519    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1105520    _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
1105521    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1105522    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1105523    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1105524    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105525    data EMWS8.AutoNeural25_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_HISTORY;
1105526    set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
1105527    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set
      EMWS8.AUTONEURAL25_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_HISTORY has 4 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1105528    *;
MPRINT(EM_DIAGRAM):    *;
1105529    proc neural data=EM_AutoNeural25 dmdbcat=WORK.AutoNeural25_DMDB
1105530    validdata=EMWS8.BINNING_VALIDATE
1105531    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural25
dmdbcat=WORK.AutoNeural25_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1105532    *;
MPRINT(EM_DIAGRAM):   *;
1105533    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1105534    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1105535    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1105536    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1105537    target DepVar / level=NOMINAL id=DepVar
1105538    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1105539    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105540    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1105541    ;
MPRINT(EM_DIAGRAM):   ;
1105542    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105543    Hidden 3 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=SOFTMAX;
1105544    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1105545    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1105546    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1105547    *;
MPRINT(EM_DIAGRAM):   *;
1105548    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1105549    *;
MPRINT(EM_DIAGRAM):   *;
1105550    initial
1105551    ;
MPRINT(EM_DIAGRAM):   initial ;
1105552    *;
MPRINT(EM_DIAGRAM):   *;
1105553    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1105554    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1105554  ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 12 outest=_anpre pretime=74 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 25 observations and 277 variables.
MPRINT(EM_DIAGRAM):   *;
1105555    prelim 12 outest=_anpre pretime=74 preiter=25
1105556    tech = Default
1105557    ;
1105558    *;
1105559    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1105560    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1105560  ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=892
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 277 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1105561    train estiter=1 outest=_anest outfit=_anfit maxtime=892 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1105562    tech = Default;
1105563    ;
1105564    run;
 
NOTE: The data set WORK.EM_AUTONEURAL25 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           13.52 seconds
      cpu time            13.27 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 809.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           13.53 seconds
      cpu time            13.27 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1105565    *;
1105566    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1105567    var _iter_ _aic_ _averr_ _misc_
1105568    _vaverr_ _vmisc_
1105569    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1105570    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 810.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105571    *------------------------------------------------------------*;
1105572    * Extract best iteration;
1105573    ;
1105574    *------------------------------------------------------------*;
1105575    %global _iter;
1105576    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1105577    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1105578    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1105579    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1105580    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1105581    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1105582    end;
MPRINT(EM_DIAGRAM):   end;
1105583    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1105584    *;
 
1105585    data EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural25_ESTDS;
1105586    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1105587    if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
1105588    output;
MPRINT(EM_DIAGRAM):   output;
1105589    stop;
MPRINT(EM_DIAGRAM):   stop;
1105590    end;
MPRINT(EM_DIAGRAM):   end;
1105591    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 277
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1105592    *;
1105593    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1105594    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1105595    if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
1105596    output;
MPRINT(EM_DIAGRAM):   output;
1105597    stop;
MPRINT(EM_DIAGRAM):   stop;
1105598    end;
MPRINT(EM_DIAGRAM):   end;
1105599    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1105600    *;
MPRINT(EM_DIAGRAM):    *;
1105601    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1105602    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1105602  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1105603    proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
1105604    var _iter_ _aic_ _averr_ _misc_
1105605    _vaverr_ _vmisc_
1105606    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1105607    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 811.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105608    title9;
MPRINT(EM_DIAGRAM):   title9;
1105609    title10;
MPRINT(EM_DIAGRAM):   title10;
1105610    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1105611    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105612    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1105613    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105614    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1105615    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105616    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1105617    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1105618    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1105619    ;
MPRINT(EM_DIAGRAM):   ;
1105620    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1105621    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105622    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1105623    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
1105624    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1105625    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1105626    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1105627    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105628    data EMWS8.AutoNeural25_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_HISTORY;
1105629    set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
1105630    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set
      EMWS8.AUTONEURAL25_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_HISTORY has 5 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105631    *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
1105632    ;
MPRINT(EM_DIAGRAM):   ;
1105633    data EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_ESTDS;
1105634    set EMWS8.AutoNeural25_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_BESTDS;
1105635    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105636    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1105637    set WORK.BFITDS_AUTONEUR_0O07C6I;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_0O07C6I;
1105638    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_0O07C6I.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105639    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1105640    ;
MPRINT(EM_DIAGRAM):   ;
1105641    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1105642    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105643    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1105644    _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
1105645    _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
1105646    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1105647    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1105648    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105649    data EMWS8.AutoNeural25_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_HISTORY;
1105650    set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
1105651    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set
      EMWS8.AUTONEURAL25_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_HISTORY has 6 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105652    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1105653    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105654    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1105655    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105656    *;
MPRINT(EM_DIAGRAM):    *;
1105657    proc neural data=EM_AutoNeural25 dmdbcat=WORK.AutoNeural25_DMDB
1105658    validdata=EMWS8.BINNING_VALIDATE
1105659    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural25
dmdbcat=WORK.AutoNeural25_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1105660    *;
MPRINT(EM_DIAGRAM):   *;
1105661    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1105662    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1105663    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1105664    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1105665    target DepVar / level=NOMINAL id=DepVar
1105666    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1105667    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105668    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1105669    ;
MPRINT(EM_DIAGRAM):   ;
1105670    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105671    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1105672    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1105673    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105674    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1105675    ;
MPRINT(EM_DIAGRAM):   ;
1105676    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105677    Hidden 3 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=LOG;
1105678    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1105679    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1105680    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1105681    *;
MPRINT(EM_DIAGRAM):   *;
1105682    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1105683    *;
MPRINT(EM_DIAGRAM):   *;
1105684    initial
1105685    inest = EMWS8.AutoNeural25_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural25_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 144
      variables.
1105686    ;
MPRINT(EM_DIAGRAM):   ;
1105687    *;
MPRINT(EM_DIAGRAM):   *;
1105688    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1105689    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1105689  ! Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC :
Prelim";
1105690    prelim 12 outest=_anpre pretime=74 preiter=25
MPRINT(EM_DIAGRAM):   prelim 12 outest=_anpre pretime=74 preiter=25 tech =
Default inest = EMWS8.AutoNeural25_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 25 observations and 534 variables.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 144
      variables.
MPRINT(EM_DIAGRAM):   *;
1105691    tech = Default
1105692    inest = EMWS8.AutoNeural25_ESTDS bylabel
1105693    ;
1105694    *;
1105695    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1105696    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1105696  ! Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=889
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 534 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1105697    train estiter=1 outest=_anest outfit=_anfit maxtime=889 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1105698    tech = Default;
1105699    ;
1105700    run;
 
NOTE: The data set WORK.EM_AUTONEURAL25 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           21.18 seconds
      cpu time            21.09 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 812.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           21.19 seconds
      cpu time            21.09 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1105701    *;
1105702    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1105703    var _iter_ _aic_ _averr_ _misc_
1105704    _vaverr_ _vmisc_
1105705    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1105706    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 813.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105707    *------------------------------------------------------------*;
1105708    * Extract best iteration;
1105709    ;
1105710    *------------------------------------------------------------*;
1105711    %global _iter;
1105712    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1105713    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1105714    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1105715    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1105716    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1105717    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1105718    end;
MPRINT(EM_DIAGRAM):   end;
1105719    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1105720    *;
 
1105721    data EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural25_ESTDS;
1105722    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1105723    if _ITER_ eq 22 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 22 then do;
1105724    output;
MPRINT(EM_DIAGRAM):   output;
1105725    stop;
MPRINT(EM_DIAGRAM):   stop;
1105726    end;
MPRINT(EM_DIAGRAM):   end;
1105727    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1105728    *;
1105729    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1105730    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1105731    if _ITER_ eq 22 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 22 and _NAME_ eq "OVERALL" then do;
1105732    output;
MPRINT(EM_DIAGRAM):   output;
1105733    stop;
MPRINT(EM_DIAGRAM):   stop;
1105734    end;
MPRINT(EM_DIAGRAM):   end;
1105735    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1105736    *;
MPRINT(EM_DIAGRAM):    *;
1105737    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1105738    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1105738  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1105739    proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
1105740    var _iter_ _aic_ _averr_ _misc_
1105741    _vaverr_ _vmisc_
1105742    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1105743    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 814.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105744    title9;
MPRINT(EM_DIAGRAM):   title9;
1105745    title10;
MPRINT(EM_DIAGRAM):   title10;
1105746    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1105747    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105748    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1105749    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105750    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1105751    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105752    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1105753    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105754    *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
1105755    ;
MPRINT(EM_DIAGRAM):   ;
1105756    data WORK.SAVEDS_AUTONEUR_0O07C6I;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_0O07C6I;
1105757    set EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_ESTDS;
1105758    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL25_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_0O07C6I has 1 observations and 534
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105759    data EMWS8.AutoNeural25_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_BESTDS;
1105760    set EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_ESTDS;
1105761    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL25_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL25_BESTDS has 1 observations and 534
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105762    data WORK.BFITDS_AUTONEUR_0O07C6I;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_0O07C6I;
1105763    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105764    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_0O07C6I has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105765    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1105766    ;
MPRINT(EM_DIAGRAM):   ;
1105767    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1105768    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105769    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1105770    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
1105771    _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
1105772    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
1105773    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
1105774    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1105775    data EMWS8.AutoNeural25_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_HISTORY;
1105776    set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
1105777    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set
      EMWS8.AUTONEURAL25_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_HISTORY has 7 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105778    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1105779    ;
MPRINT(EM_DIAGRAM):   ;
1105780    data EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_ESTDS;
1105781    set EMWS8.AutoNeural25_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_BESTDS;
1105782    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1105783    *;
MPRINT(EM_DIAGRAM):    *;
1105784    proc neural data=EM_AutoNeural25 dmdbcat=WORK.AutoNeural25_DMDB
1105785    validdata=EMWS8.BINNING_VALIDATE
1105786    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural25
dmdbcat=WORK.AutoNeural25_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1105787    *;
MPRINT(EM_DIAGRAM):   *;
1105788    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1105789    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1105790    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1105791    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1105792    target DepVar / level=NOMINAL id=DepVar
1105793    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1105794    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105795    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1105796    ;
MPRINT(EM_DIAGRAM):   ;
1105797    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105798    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1105799    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1105800    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105801    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1105802    ;
MPRINT(EM_DIAGRAM):   ;
1105803    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105804    Hidden 3 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=SINE;
1105805    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1105806    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1105807    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1105808    *;
MPRINT(EM_DIAGRAM):   *;
1105809    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1105810    *;
MPRINT(EM_DIAGRAM):   *;
1105811    initial
1105812    inest = EMWS8.AutoNeural25_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural25_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
1105813    ;
MPRINT(EM_DIAGRAM):   ;
1105814    *;
MPRINT(EM_DIAGRAM):   *;
1105815    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1105816    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1105816  ! Search # 2 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : SINE :
Prelim";
1105817    prelim 12 outest=_anpre pretime=73 preiter=25
MPRINT(EM_DIAGRAM):   prelim 12 outest=_anpre pretime=73 preiter=25 tech =
Default inest = EMWS8.AutoNeural25_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 534 variables.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
MPRINT(EM_DIAGRAM):   *;
1105818    tech = Default
1105819    inest = EMWS8.AutoNeural25_ESTDS bylabel
1105820    ;
1105821    *;
1105822    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1105823    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1105823  ! Search # 2 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=883
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 534 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1105824    train estiter=1 outest=_anest outfit=_anfit maxtime=883 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1105825    tech = Default;
1105826    ;
1105827    run;
 
NOTE: The data set WORK.EM_AUTONEURAL25 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           3.93 seconds
      cpu time            3.89 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 815.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           3.94 seconds
      cpu time            3.89 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1105828    *;
1105829    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1105830    var _iter_ _aic_ _averr_ _misc_
1105831    _vaverr_ _vmisc_
1105832    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1105833    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 816.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105834    *------------------------------------------------------------*;
1105835    * Extract best iteration;
1105836    ;
1105837    *------------------------------------------------------------*;
1105838    %global _iter;
1105839    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1105840    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1105841    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1105842    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1105843    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1105844    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1105845    end;
MPRINT(EM_DIAGRAM):   end;
1105846    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1105847    *;
 
1105848    data EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural25_ESTDS;
1105849    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1105850    if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
1105851    output;
MPRINT(EM_DIAGRAM):   output;
1105852    stop;
MPRINT(EM_DIAGRAM):   stop;
1105853    end;
MPRINT(EM_DIAGRAM):   end;
1105854    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1105855    *;
1105856    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1105857    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1105858    if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
1105859    output;
MPRINT(EM_DIAGRAM):   output;
1105860    stop;
MPRINT(EM_DIAGRAM):   stop;
1105861    end;
MPRINT(EM_DIAGRAM):   end;
1105862    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105863    *;
MPRINT(EM_DIAGRAM):    *;
1105864    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1105865    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1105865  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1105866    proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
1105867    var _iter_ _aic_ _averr_ _misc_
1105868    _vaverr_ _vmisc_
1105869    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1105870    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 817.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105871    title9;
MPRINT(EM_DIAGRAM):   title9;
1105872    title10;
MPRINT(EM_DIAGRAM):   title10;
1105873    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1105874    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105875    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1105876    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1105877    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1105878    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105879    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1105880    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105881    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1105882    ;
MPRINT(EM_DIAGRAM):   ;
1105883    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1105884    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105885    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1105886    _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
1105887    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1105888    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
1105889    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
1105890    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105891    data EMWS8.AutoNeural25_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_HISTORY;
1105892    set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
1105893    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set
      EMWS8.AUTONEURAL25_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_HISTORY has 8 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105894    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1105895    ;
MPRINT(EM_DIAGRAM):   ;
1105896    data EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_ESTDS;
1105897    set EMWS8.AutoNeural25_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_BESTDS;
1105898    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105899    *;
MPRINT(EM_DIAGRAM):    *;
1105900    proc neural data=EM_AutoNeural25 dmdbcat=WORK.AutoNeural25_DMDB
1105901    validdata=EMWS8.BINNING_VALIDATE
1105902    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural25
dmdbcat=WORK.AutoNeural25_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1105903    *;
MPRINT(EM_DIAGRAM):   *;
1105904    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1105905    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1105906    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1105907    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1105908    target DepVar / level=NOMINAL id=DepVar
1105909    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1105910    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105911    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1105912    ;
MPRINT(EM_DIAGRAM):   ;
1105913    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105914    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1105915    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1105916    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105917    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1105918    ;
MPRINT(EM_DIAGRAM):   ;
1105919    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105920    Hidden 3 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=SOFTMAX;
1105921    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1105922    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1105923    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1105924    *;
MPRINT(EM_DIAGRAM):   *;
1105925    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1105926    *;
MPRINT(EM_DIAGRAM):   *;
1105927    initial
1105928    inest = EMWS8.AutoNeural25_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural25_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
1105929    ;
MPRINT(EM_DIAGRAM):   ;
1105930    *;
MPRINT(EM_DIAGRAM):   *;
1105931    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1105932    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1105932  ! Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX :
Prelim";
1105933    prelim 12 outest=_anpre pretime=73 preiter=25
MPRINT(EM_DIAGRAM):   prelim 12 outest=_anpre pretime=73 preiter=25 tech =
Default inest = EMWS8.AutoNeural25_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 405 variables.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
MPRINT(EM_DIAGRAM):   *;
1105934    tech = Default
1105935    inest = EMWS8.AutoNeural25_ESTDS bylabel
1105936    ;
1105937    *;
1105938    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1105939    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1105939  ! Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=882
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 405 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1105940    train estiter=1 outest=_anest outfit=_anfit maxtime=882 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1105941    tech = Default;
1105942    ;
1105943    run;
 
NOTE: The data set WORK.EM_AUTONEURAL25 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           2.78 seconds
      cpu time            2.76 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 818.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.78 seconds
      cpu time            2.76 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1105944    *;
1105945    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1105946    var _iter_ _aic_ _averr_ _misc_
1105947    _vaverr_ _vmisc_
1105948    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1105949    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 819.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1105950    *------------------------------------------------------------*;
1105951    * Extract best iteration;
1105952    ;
1105953    *------------------------------------------------------------*;
1105954    %global _iter;
1105955    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1105956    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1105957    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1105958    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1105959    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1105960    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1105961    end;
MPRINT(EM_DIAGRAM):   end;
1105962    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1105963    *;
 
1105964    data EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural25_ESTDS;
1105965    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1105966    if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
1105967    output;
MPRINT(EM_DIAGRAM):   output;
1105968    stop;
MPRINT(EM_DIAGRAM):   stop;
1105969    end;
MPRINT(EM_DIAGRAM):   end;
1105970    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 405
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1105971    *;
1105972    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1105973    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1105974    if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
1105975    output;
MPRINT(EM_DIAGRAM):   output;
1105976    stop;
MPRINT(EM_DIAGRAM):   stop;
1105977    end;
MPRINT(EM_DIAGRAM):   end;
1105978    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105979    *;
MPRINT(EM_DIAGRAM):    *;
1105980    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1105981    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1105981  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1105982    proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
1105983    var _iter_ _aic_ _averr_ _misc_
1105984    _vaverr_ _vmisc_
1105985    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1105986    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 820.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105987    title9;
MPRINT(EM_DIAGRAM):   title9;
1105988    title10;
MPRINT(EM_DIAGRAM):   title10;
1105989    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1105990    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105991    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1105992    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1105993    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1105994    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1105995    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1105996    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1105997    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1105998    ;
MPRINT(EM_DIAGRAM):   ;
1105999    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1106000    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1106001    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1106002    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
1106003    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1106004    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
1106005    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
1106006    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1106007    data EMWS8.AutoNeural25_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_HISTORY;
1106008    set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
1106009    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set
      EMWS8.AUTONEURAL25_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_HISTORY has 9 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106010    *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
1106011    ;
MPRINT(EM_DIAGRAM):   ;
1106012    data EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_ESTDS;
1106013    set EMWS8.AutoNeural25_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_BESTDS;
1106014    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1106015    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1106016    set WORK.BFITDS_AUTONEUR_0O07C6I;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_0O07C6I;
1106017    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_0O07C6I.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106018    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1106019    ;
MPRINT(EM_DIAGRAM):   ;
1106020    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1106021    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1106022    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1106023    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
1106024    _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
1106025    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
1106026    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
1106027    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106028    data EMWS8.AutoNeural25_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_HISTORY;
1106029    set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
1106030    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set
      EMWS8.AUTONEURAL25_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_HISTORY has 10 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106031    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1106032    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1106033    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1106034    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106035    *;
MPRINT(EM_DIAGRAM):    *;
1106036    proc neural data=EM_AutoNeural25 dmdbcat=WORK.AutoNeural25_DMDB
1106037    validdata=EMWS8.BINNING_VALIDATE
1106038    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural25
dmdbcat=WORK.AutoNeural25_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1106039    *;
MPRINT(EM_DIAGRAM):   *;
1106040    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1106041    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1106042    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1106043    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1106044    target DepVar / level=NOMINAL id=DepVar
1106045    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1106046    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106047    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1106048    ;
MPRINT(EM_DIAGRAM):   ;
1106049    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106050    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1106051    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1106052    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106053    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1106054    ;
MPRINT(EM_DIAGRAM):   ;
1106055    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106056    Hidden 3 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=LOG;
1106057    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1106058    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1106059    Hidden 3 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x2_ act=LOG;
1106060    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1106061    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1106062    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106063    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1106064    ;
MPRINT(EM_DIAGRAM):   ;
1106065    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106066    Hidden 3 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H2x1_ act=LOG;
1106067    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1106068    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1106069    connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
1106070    *;
MPRINT(EM_DIAGRAM):   *;
1106071    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1106072    *;
MPRINT(EM_DIAGRAM):   *;
1106073    initial
1106074    inest = EMWS8.AutoNeural25_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural25_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
1106075    ;
MPRINT(EM_DIAGRAM):   ;
1106076    *;
MPRINT(EM_DIAGRAM):   *;
1106077    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1106078    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1106078  ! Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC :
Prelim";
1106079    prelim 15 outest=_anpre pretime=58 preiter=25
MPRINT(EM_DIAGRAM):   prelim 15 outest=_anpre pretime=58 preiter=25 tech =
Default inest = EMWS8.AutoNeural25_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 31 observations and 942 variables.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
MPRINT(EM_DIAGRAM):   *;
1106080    tech = Default
1106081    inest = EMWS8.AutoNeural25_ESTDS bylabel
1106082    ;
1106083    *;
1106084    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1106085    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1106085  ! Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=882
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 942 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1106086    train estiter=1 outest=_anest outfit=_anfit maxtime=882 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1106087    tech = Default;
1106088    ;
1106089    run;
 
NOTE: The data set WORK.EM_AUTONEURAL25 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           39.70 seconds
      cpu time            37.50 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 821.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           39.71 seconds
      cpu time            37.51 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1106090    *;
1106091    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1106092    var _iter_ _aic_ _averr_ _misc_
1106093    _vaverr_ _vmisc_
1106094    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1106095    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 822.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106096    *------------------------------------------------------------*;
1106097    * Extract best iteration;
1106098    ;
1106099    *------------------------------------------------------------*;
1106100    %global _iter;
1106101    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1106102    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1106103    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1106104    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1106105    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1106106    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1106107    end;
MPRINT(EM_DIAGRAM):   end;
1106108    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1106109    *;
 
1106110    data EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural25_ESTDS;
1106111    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1106112    if _ITER_ eq 13 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 13 then do;
1106113    output;
MPRINT(EM_DIAGRAM):   output;
1106114    stop;
MPRINT(EM_DIAGRAM):   stop;
1106115    end;
MPRINT(EM_DIAGRAM):   end;
1106116    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 942
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1106117    *;
1106118    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1106119    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1106120    if _ITER_ eq 13 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 13 and _NAME_ eq "OVERALL" then do;
1106121    output;
MPRINT(EM_DIAGRAM):   output;
1106122    stop;
MPRINT(EM_DIAGRAM):   stop;
1106123    end;
MPRINT(EM_DIAGRAM):   end;
1106124    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 28 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106125    *;
MPRINT(EM_DIAGRAM):    *;
1106126    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1106127    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1106127  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1106128    proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
1106129    var _iter_ _aic_ _averr_ _misc_
1106130    _vaverr_ _vmisc_
1106131    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1106132    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 823.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106133    title9;
MPRINT(EM_DIAGRAM):   title9;
1106134    title10;
MPRINT(EM_DIAGRAM):   title10;
1106135    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1106136    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1106137    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1106138    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1106139    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1106140    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1106141    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1106142    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106143    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1106144    ;
MPRINT(EM_DIAGRAM):   ;
1106145    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1106146    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1106147    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1106148    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
1106149    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1106150    _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
1106151    _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
1106152    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106153    data EMWS8.AutoNeural25_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_HISTORY;
1106154    set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
1106155    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set
      EMWS8.AUTONEURAL25_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_HISTORY has 11 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106156    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1106157    ;
MPRINT(EM_DIAGRAM):   ;
1106158    data EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_ESTDS;
1106159    set EMWS8.AutoNeural25_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_BESTDS;
1106160    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1106161    *;
MPRINT(EM_DIAGRAM):    *;
1106162    proc neural data=EM_AutoNeural25 dmdbcat=WORK.AutoNeural25_DMDB
1106163    validdata=EMWS8.BINNING_VALIDATE
1106164    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural25
dmdbcat=WORK.AutoNeural25_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1106165    *;
MPRINT(EM_DIAGRAM):   *;
1106166    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1106167    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1106168    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1106169    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1106170    target DepVar / level=NOMINAL id=DepVar
1106171    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1106172    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106173    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1106174    ;
MPRINT(EM_DIAGRAM):   ;
1106175    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106176    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1106177    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1106178    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106179    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1106180    ;
MPRINT(EM_DIAGRAM):   ;
1106181    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106182    Hidden 3 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=LOG;
1106183    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1106184    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1106185    Hidden 3 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x2_ act=LOG;
1106186    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1106187    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1106188    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106189    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1106190    ;
MPRINT(EM_DIAGRAM):   ;
1106191    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106192    Hidden 3 / id = H2x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H2x1_ act=SINE;
1106193    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1106194    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1106195    connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
1106196    *;
MPRINT(EM_DIAGRAM):   *;
1106197    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1106198    *;
MPRINT(EM_DIAGRAM):   *;
1106199    initial
1106200    inest = EMWS8.AutoNeural25_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural25_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
1106201    ;
MPRINT(EM_DIAGRAM):   ;
1106202    *;
MPRINT(EM_DIAGRAM):   *;
1106203    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1106204    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1106204  ! Search # 3 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : SINE :
Prelim";
1106205    prelim 15 outest=_anpre pretime=58 preiter=25
MPRINT(EM_DIAGRAM):   prelim 15 outest=_anpre pretime=58 preiter=25 tech =
Default inest = EMWS8.AutoNeural25_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 31 observations and 942 variables.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
MPRINT(EM_DIAGRAM):   *;
1106206    tech = Default
1106207    inest = EMWS8.AutoNeural25_ESTDS bylabel
1106208    ;
1106209    *;
1106210    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1106211    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1106211  ! Search # 3 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=872
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 942 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1106212    train estiter=1 outest=_anest outfit=_anfit maxtime=872 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1106213    tech = Default;
1106214    ;
1106215    run;
 
NOTE: The data set WORK.EM_AUTONEURAL25 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           31.60 seconds
      cpu time            31.21 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 824.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           31.61 seconds
      cpu time            31.21 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1106216    *;
1106217    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1106218    var _iter_ _aic_ _averr_ _misc_
1106219    _vaverr_ _vmisc_
1106220    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1106221    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 825.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106222    *------------------------------------------------------------*;
1106223    * Extract best iteration;
1106224    ;
1106225    *------------------------------------------------------------*;
1106226    %global _iter;
1106227    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1106228    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1106229    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1106230    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1106231    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1106232    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1106233    end;
MPRINT(EM_DIAGRAM):   end;
1106234    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1106235    *;
 
1106236    data EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural25_ESTDS;
1106237    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1106238    if _ITER_ eq 6 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 then do;
1106239    output;
MPRINT(EM_DIAGRAM):   output;
1106240    stop;
MPRINT(EM_DIAGRAM):   stop;
1106241    end;
MPRINT(EM_DIAGRAM):   end;
1106242    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 942
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1106243    *;
1106244    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1106245    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1106246    if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
1106247    output;
MPRINT(EM_DIAGRAM):   output;
1106248    stop;
MPRINT(EM_DIAGRAM):   stop;
1106249    end;
MPRINT(EM_DIAGRAM):   end;
1106250    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1106251    *;
MPRINT(EM_DIAGRAM):    *;
1106252    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1106253    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1106253  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1106254    proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
1106255    var _iter_ _aic_ _averr_ _misc_
1106256    _vaverr_ _vmisc_
1106257    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1106258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 826.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106259    title9;
MPRINT(EM_DIAGRAM):   title9;
1106260    title10;
MPRINT(EM_DIAGRAM):   title10;
1106261    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1106262    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1106263    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1106264    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106265    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1106266    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1106267    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1106268    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1106269    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1106270    ;
MPRINT(EM_DIAGRAM):   ;
1106271    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1106272    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1106273    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1106274    _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
1106275    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1106276    _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
1106277    _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
1106278    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106279    data EMWS8.AutoNeural25_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_HISTORY;
1106280    set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
1106281    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set
      EMWS8.AUTONEURAL25_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_HISTORY has 12 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106282    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1106283    ;
MPRINT(EM_DIAGRAM):   ;
1106284    data EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_ESTDS;
1106285    set EMWS8.AutoNeural25_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_BESTDS;
1106286    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106287    *;
MPRINT(EM_DIAGRAM):    *;
1106288    proc neural data=EM_AutoNeural25 dmdbcat=WORK.AutoNeural25_DMDB
1106289    validdata=EMWS8.BINNING_VALIDATE
1106290    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural25
dmdbcat=WORK.AutoNeural25_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1106291    *;
MPRINT(EM_DIAGRAM):   *;
1106292    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1106293    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1106294    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1106295    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1106296    target DepVar / level=NOMINAL id=DepVar
1106297    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1106298    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106299    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1106300    ;
MPRINT(EM_DIAGRAM):   ;
1106301    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106302    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1106303    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1106304    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106305    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1106306    ;
MPRINT(EM_DIAGRAM):   ;
1106307    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106308    Hidden 3 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=LOG;
1106309    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1106310    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1106311    Hidden 3 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x2_ act=LOG;
1106312    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1106313    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1106314    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106315    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1106316    ;
MPRINT(EM_DIAGRAM):   ;
1106317    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106318    Hidden 3 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H2x1_ act=SOFTMAX;
1106319    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1106320    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1106321    connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
1106322    *;
MPRINT(EM_DIAGRAM):   *;
1106323    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1106324    *;
MPRINT(EM_DIAGRAM):   *;
1106325    initial
1106326    inest = EMWS8.AutoNeural25_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural25_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
1106327    ;
MPRINT(EM_DIAGRAM):   ;
1106328    *;
MPRINT(EM_DIAGRAM):   *;
1106329    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1106330    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1106330  ! Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX :
Prelim";
1106331    prelim 15 outest=_anpre pretime=57 preiter=25
MPRINT(EM_DIAGRAM):   prelim 15 outest=_anpre pretime=57 preiter=25 tech =
Default inest = EMWS8.AutoNeural25_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 31 observations and 935 variables.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
MPRINT(EM_DIAGRAM):   *;
1106332    tech = Default
1106333    inest = EMWS8.AutoNeural25_ESTDS bylabel
1106334    ;
1106335    *;
1106336    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1106337    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1106337  ! Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=864
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 935 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1106338    train estiter=1 outest=_anest outfit=_anfit maxtime=864 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1106339    tech = Default;
1106340    ;
1106341    run;
 
NOTE: The data set WORK.EM_AUTONEURAL25 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           33.10 seconds
      cpu time            32.80 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 827.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           33.11 seconds
      cpu time            32.82 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1106342    *;
1106343    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1106344    var _iter_ _aic_ _averr_ _misc_
1106345    _vaverr_ _vmisc_
1106346    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1106347    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 828.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106348    *------------------------------------------------------------*;
1106349    * Extract best iteration;
1106350    ;
1106351    *------------------------------------------------------------*;
1106352    %global _iter;
1106353    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1106354    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1106355    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1106356    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1106357    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1106358    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1106359    end;
MPRINT(EM_DIAGRAM):   end;
1106360    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1106361    *;
 
1106362    data EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural25_ESTDS;
1106363    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1106364    if _ITER_ eq 3 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 then do;
1106365    output;
MPRINT(EM_DIAGRAM):   output;
1106366    stop;
MPRINT(EM_DIAGRAM):   stop;
1106367    end;
MPRINT(EM_DIAGRAM):   end;
1106368    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 935
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1106369    *;
1106370    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1106371    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1106372    if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
1106373    output;
MPRINT(EM_DIAGRAM):   output;
1106374    stop;
MPRINT(EM_DIAGRAM):   stop;
1106375    end;
MPRINT(EM_DIAGRAM):   end;
1106376    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106377    *;
MPRINT(EM_DIAGRAM):    *;
1106378    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1106379    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1106379  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1106380    proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
1106381    var _iter_ _aic_ _averr_ _misc_
1106382    _vaverr_ _vmisc_
1106383    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1106384    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 829.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106385    title9;
MPRINT(EM_DIAGRAM):   title9;
1106386    title10;
MPRINT(EM_DIAGRAM):   title10;
1106387    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1106388    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1106389    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1106390    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106391    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1106392    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1106393    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1106394    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1106395    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1106396    ;
MPRINT(EM_DIAGRAM):   ;
1106397    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1106398    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1106399    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1106400    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
1106401    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1106402    _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
1106403    _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
1106404    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106405    data EMWS8.AutoNeural25_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_HISTORY;
1106406    set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
1106407    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set
      EMWS8.AUTONEURAL25_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_HISTORY has 13 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106408    data EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural25_ESTDS;
1106409    set WORK.SAVEDS_AUTONEUR_0O07C6I;
MPRINT(EM_DIAGRAM):   set WORK.SAVEDS_AUTONEUR_0O07C6I;
1106410    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.SAVEDS_AUTONEUR_0O07C6I.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1106411    *;
MPRINT(EM_DIAGRAM):    *;
1106412    proc neural data=EM_AutoNeural25 dmdbcat=WORK.AutoNeural25_DMDB
1106413    validdata=EMWS8.BINNING_VALIDATE
1106414    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural25
dmdbcat=WORK.AutoNeural25_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1106415    *;
MPRINT(EM_DIAGRAM):   *;
1106416    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1106417    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1106418    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1106419    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1106420    target DepVar / level=NOMINAL id=DepVar
1106421    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1106422    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106423    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1106424    ;
MPRINT(EM_DIAGRAM):   ;
1106425    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106426    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1106427    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1106428    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106429    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1106430    ;
MPRINT(EM_DIAGRAM):   ;
1106431    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106432    Hidden 3 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=LOG;
1106433    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1106434    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1106435    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1106436    *;
MPRINT(EM_DIAGRAM):   *;
1106437    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1106438    *;
MPRINT(EM_DIAGRAM):   *;
1106439    initial
1106440    inest = EMWS8.AutoNeural25_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural25_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
1106441    ;
MPRINT(EM_DIAGRAM):   ;
1106442    *;
MPRINT(EM_DIAGRAM):   *;
1106443    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1106444    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1106444  ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Prelim";
1106445    prelim 12 outest=_anpre pretime=71 preiter=25
MPRINT(EM_DIAGRAM):   prelim 12 outest=_anpre pretime=71 preiter=25 tech =
Default inest = EMWS8.AutoNeural25_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 534 variables.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
MPRINT(EM_DIAGRAM):   *;
1106446    tech = Default
1106447    inest = EMWS8.AutoNeural25_ESTDS bylabel
1106448    ;
1106449    *;
1106450    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1106451    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1106451  ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=855
maxiter=5 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 5 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 8 observations and 534 variables.
NOTE: The data set WORK._ANFIT has 14 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1106452    train estiter=1 outest=_anest outfit=_anfit maxtime=855 maxiter=5
MPRINT(EM_DIAGRAM):   run;
1106453    tech = Default;
1106454    ;
1106455    run;
 
NOTE: The data set WORK.EM_AUTONEURAL25 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           2.12 seconds
      cpu time            2.10 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 830.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.12 seconds
      cpu time            2.10 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1106456    *;
1106457    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1106458    var _iter_ _aic_ _averr_ _misc_
1106459    _vaverr_ _vmisc_
1106460    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1106461    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 831.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106462    *------------------------------------------------------------*;
1106463    * Extract best iteration;
1106464    ;
1106465    *------------------------------------------------------------*;
1106466    %global _iter;
1106467    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1106468    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1106469    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1106470    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1106471    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1106472    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1106473    end;
MPRINT(EM_DIAGRAM):   end;
1106474    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1106475    *;
 
1106476    data EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural25_ESTDS;
1106477    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1106478    if _ITER_ eq 3 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 then do;
1106479    output;
MPRINT(EM_DIAGRAM):   output;
1106480    stop;
MPRINT(EM_DIAGRAM):   stop;
1106481    end;
MPRINT(EM_DIAGRAM):   end;
1106482    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1106483    *;
1106484    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1106485    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1106486    if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
1106487    output;
MPRINT(EM_DIAGRAM):   output;
1106488    stop;
MPRINT(EM_DIAGRAM):   stop;
1106489    end;
MPRINT(EM_DIAGRAM):   end;
1106490    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106491    *;
MPRINT(EM_DIAGRAM):    *;
1106492    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1106493    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1106493  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1106494    proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural25_OUTFIT noobs;
1106495    var _iter_ _aic_ _averr_ _misc_
1106496    _vaverr_ _vmisc_
1106497    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1106498    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 832.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106499    title9;
MPRINT(EM_DIAGRAM):   title9;
1106500    title10;
MPRINT(EM_DIAGRAM):   title10;
1106501    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1106502    ;
MPRINT(EM_DIAGRAM):   ;
1106503    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1106504    set EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT;
1106505    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1106506    _func_ = "";
MPRINT(EM_DIAGRAM):   _func_ = "";
1106507    _status_ = "Final";
MPRINT(EM_DIAGRAM):   _status_ = "Final";
1106508    _step_ = "";
MPRINT(EM_DIAGRAM):   _step_ = "";
1106509    _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
1106510    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106511    data EMWS8.AutoNeural25_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_HISTORY;
1106512    set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_HISTORY EMWS8.AutoNeural25_OUTFIT;
1106513    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set
      EMWS8.AUTONEURAL25_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL25_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_HISTORY has 14 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1106514    title9 " ";
MPRINT(EM_DIAGRAM):    title9 " ";
1106515    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_finaltrainhistory_title
1106515  ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Final Training History";
1106516    proc print data=EMWS8.AutoNeural25_HISTORY noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural25_HISTORY noobs;
1106517    var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
1106518    _vaverr_ _vmisc_
1106519    ;
MPRINT(EM_DIAGRAM):   var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
_vaverr_ _vmisc_ ;
1106520    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set
      EMWS8.AUTONEURAL25_HISTORY.
NOTE: The PROCEDURE PRINT printed page 833.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106521    data work.keep_history;
MPRINT(EM_DIAGRAM):   data work.keep_history;
1106522    set EMWS8.AutoNeural25_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_HISTORY;
1106523    if _status_='keep';
MPRINT(EM_DIAGRAM):   if _status_='keep';
1106524    if _func_='DIRECT' then neurons=0;
MPRINT(EM_DIAGRAM):   if _func_='DIRECT' then neurons=0;
1106525    else neurons=3;
MPRINT(EM_DIAGRAM):   else neurons=3;
1106526    label neurons="%sysfunc(sasmsg(sashelp.dmine,
1106526  ! rpt_numberneurons_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label neurons= "Number of Neurons";
1106527    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set
      EMWS8.AUTONEURAL25_HISTORY.
NOTE: The data set WORK.KEEP_HISTORY has 2 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106528    title8 " ";
MPRINT(EM_DIAGRAM):   title8 " ";
1106529    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_finalmodel_title  ,
1106529  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Final Model";
1106530    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_stopping_title  ,
1106530  ! NOQUOTE, %nrbquote(Termination criteria were satisfied: overfitting
1106530  ! based on _VMISC_)))";
MPRINT(EM_DIAGRAM):   title10 "Stopping: Termination criteria were satisfied:
overfitting based on _VMISC_";
1106531    proc print data=work.keep_history noobs;
MPRINT(EM_DIAGRAM):   proc print data=work.keep_history noobs;
1106532    var _func_ _averr_
1106533    _vaverr_
1106534    neurons;
MPRINT(EM_DIAGRAM):   var _func_ _averr_ _vaverr_ neurons;
1106535    sum neurons;
MPRINT(EM_DIAGRAM):   sum neurons;
1106536    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.KEEP_HISTORY.
NOTE: The PROCEDURE PRINT printed page 834.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106537    title8;
MPRINT(EM_DIAGRAM):   title8;
1106538    title9;
MPRINT(EM_DIAGRAM):   title9;
1106539    title10;
MPRINT(EM_DIAGRAM):   title10;
1106540    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106541    * AutoNeural Final Network;
MPRINT(EM_DIAGRAM):   * AutoNeural Final Network;
1106542    ;
MPRINT(EM_DIAGRAM):   ;
1106543    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106544    *;
MPRINT(EM_DIAGRAM):   *;
1106545    proc neural data=EM_AutoNeural25 dmdbcat=WORK.AutoNeural25_DMDB
1106546    validdata=EMWS8.BINNING_VALIDATE
1106547    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural25
dmdbcat=WORK.AutoNeural25_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1106548    *;
MPRINT(EM_DIAGRAM):   *;
1106549    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1106550    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1106551    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1106552    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1106553    target DepVar / level=NOMINAL id=DepVar
1106554    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1106555    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106556    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1106557    ;
MPRINT(EM_DIAGRAM):   ;
1106558    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106559    Hidden 3 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=LOG;
1106560    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1106561    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1106562    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1106563    *;
MPRINT(EM_DIAGRAM):   *;
1106564    initial inest= EMWS8.AutoNeural25_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest= EMWS8.AutoNeural25_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL25_ESTDS has 1 observations and 534
      variables.
1106565    train tech=none;
MPRINT(EM_DIAGRAM):   train tech=none;
NOTE: No optimization performed.
1106566    code
1106566  ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\SCO
1106566  ! RECODE.sas"
1106567    group=AutoNeural25
1106568    ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\SCORECODE.sas"
 group=AutoNeural25 ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\SCORECODE.sas
      opened.
1106569    ;
MPRINT(EM_DIAGRAM):   ;
1106570    code
1106570  ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\RES
1106570  ! IDUALSCORECODE.sas"
1106571    group=AutoNeural25
1106572    residual
1106573    ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\RESIDUALSCOREC
ODE.sas" group=AutoNeural25 residual ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\RESIDUALSCOREC
      ODE.sas opened.
1106574    ;
MPRINT(EM_DIAGRAM):   ;
1106575    score data=EMWS8.BINNING_TRAIN out=_NULL_
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
1106576    outfit=WORK.FIT1
1106577    role=TRAIN
1106578    outkey=EMWS8.AutoNeural25_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.BINNING_TRAIN out=_NULL_
outfit=WORK.FIT1 role=TRAIN outkey=EMWS8.AutoNeural25_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL25_OUTKEY has 143 observations and 8
      variables.
NOTE: The data set EMWS8.BINNING_TRAIN has . observations and 62 variables.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
1106579    score data=EMWS8.BINNING_VALIDATE out=_NULL_
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
1106580    outfit=WORK.FIT2
1106581    outkey=EMWS8.AutoNeural25_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.BINNING_VALIDATE out=_NULL_
outfit=WORK.FIT2 outkey=EMWS8.AutoNeural25_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL25_OUTKEY has 143 observations and 8
      variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
1106582    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_AUTONEURAL25 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.32 seconds
      cpu time            0.29 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.32 seconds
      cpu time            0.32 seconds
 
 
1106583    data EMWS8.AutoNeural25_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_OUTFIT;
1106584    merge WORK.FIT1 WORK.FIT2;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2;
1106585    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 2 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106586    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106587    * Generate Weights Plotting data set;
MPRINT(EM_DIAGRAM):   * Generate Weights Plotting data set;
1106588    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1106589    data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_
1106589  ! _averr_ _p_num_ where= (_type_ eq "PARMS"));
MPRINT(EM_DIAGRAM):   data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_
_obj_ _objerr_ _averr_ _p_num_ where= (_type_ eq "PARMS"));
1106590    set EMWS8.AutoNeural25_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_ESTDS;
1106591    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL25_ESTDS.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 526 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106592    proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
1106593    by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
1106594    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 526 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1106595    proc transpose data=tempweight out=EMWS8.AutoNeural25_WEIGHTS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight
out=EMWS8.AutoNeural25_WEIGHTS;
1106596    by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
1106597    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS8.AUTONEURAL25_WEIGHTS has 524 observations and 3
      variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1106598    data EMWS8.AutoNeural25_WEIGHTS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_WEIGHTS;
1106599    set EMWS8.AutoNeural25_WEIGHTS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_WEIGHTS;
1106600    FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
MPRINT(EM_DIAGRAM):   FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
1106601    TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
1106602    WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
1106603    if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
1106604    label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  ,
1106604  ! NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  ,
1106604  ! NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  ,
1106604  ! NOQUOTE))" WEIGHT =
1106605       "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT
= "Weight";
1106606    keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
1106607    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 524 observations read from the data set
      EMWS8.AUTONEURAL25_WEIGHTS.
NOTE: The data set EMWS8.AUTONEURAL25_WEIGHTS has 519 observations and 4
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   * restore printing options;
MPRINT(EM_DIAGRAM):   ;
1106608    * restore printing options;
1106609    ;
1106610    title10;
MPRINT(EM_DIAGRAM):   title10;
1106611    options linesize=95;
MPRINT(EM_DIAGRAM):   options linesize=95;
1106612    options pagesize=10000;
MPRINT(EM_DIAGRAM):   options pagesize=10000;
1106613    options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
1106614    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1106615    options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
MPRINT(EM_DIAGRAM):   *;
1106616    *;
1106617    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1106618    delete EM_AutoNeural25;
MPRINT(EM_DIAGRAM):   delete EM_AutoNeural25;
1106619    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_AUTONEURAL25 (memtype=DATA).
1106620    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1106621    data EMWS8.AutoNeural25_HISTORY;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural25_HISTORY;
1106622    set EMWS8.AutoNeural25_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_HISTORY;
1106623    label _T_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainstep_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _T_ = "Training Step";
1106624    label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  ,
1106624  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Training Iterations";
1106625    _T_ = _N_ -1;
MPRINT(EM_DIAGRAM):   _T_ = _N_ -1;
1106626    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS8.AUTONEURAL25_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL25_HISTORY has 14 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.46 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                16.46 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0HM9DTT
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0HM9DTT new;
MPRINT(EM_DIAGRAM):   run;
1106728    filename emflow
1106728  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural25: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1106729    *------------------------------------------------------------*;
1106730    * AutoNeural25: Scoring DATA data;
1106731    *------------------------------------------------------------*;
1106732    data EMWS8.AutoNeural25_TRAIN
1106733    / view=EMWS8.AutoNeural25_TRAIN
1106734    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_TRAIN / view=EMWS8.AutoNeural25_TRAIN ;
1106735    set EMWS8.BINNING_TRAIN
1106736    ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
1106737    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMFLOWSCORE.sas.
1106738   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1106739   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1106740   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1106741   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1106742   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1106743   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1106744   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1106745   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1106746   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1106747   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1106748   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1106749   +LENGTH _WARN_ $4
1106750   +      F_DepVar  $ 12
1106751   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1106752   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1106753   +
1106754   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1106755   +
1106756   +      label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
1106757   +
1106758   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1106759   +
1106760   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1106761   +
1106762   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1106763   +
1106764   +      label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
1106765   +
1106766   +      label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
1106767   +
1106768   +      label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
1106769   +
1106770   +      label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
1106771   +
1106772   +      label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
1106773   +
1106774   +      label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
1106775   +
1106776   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1106777   +
1106778   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1106779   +
1106780   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1106781   +
1106782   +      label GRP_Income5 = 'Dummy: GRP_Income=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Income5 = 'Dummy: GRP_Income=5' ;
1106783   +
1106784   +      label GRP_Income6 = 'Dummy: GRP_Income=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Income6 = 'Dummy: GRP_Income=6' ;
1106785   +
1106786   +      label GRP_Income7 = 'Dummy: GRP_Income=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Income7 = 'Dummy: GRP_Income=7' ;
1106787   +
1106788   +      label GRP_Income8 = 'Dummy: GRP_Income=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Income8 = 'Dummy: GRP_Income=8' ;
1106789   +
1106790   +      label GRP_Income9 = 'Dummy: GRP_Income=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Income9 = 'Dummy: GRP_Income=9' ;
1106791   +
1106792   +      label GRP_Income10 = 'Dummy: GRP_Income=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Income10 = 'Dummy: GRP_Income=10' ;
1106793   +
1106794   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1106795   +
1106796   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1106797   +
1106798   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1106799   +
1106800   +      label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
1106801   +
1106802   +      label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
1106803   +
1106804   +      label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
1106805   +
1106806   +      label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
1106807   +
1106808   +      label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
1106809   +
1106810   +      label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
1106811   +
1106812   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1106813   +
1106814   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1106815   +
1106816   +      label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
1106817   +
1106818   +      label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
1106819   +
1106820   +      label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
1106821   +
1106822   +      label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
1106823   +
1106824   +      label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
1106825   +
1106826   +      label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
1106827   +
1106828   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1106829   +
1106830   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1106831   +
1106832   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1106833   +
1106834   +      label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
1106835   +
1106836   +      label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
1106837   +
1106838   +      label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
1106839   +
1106840   +      label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
1106841   +
1106842   +      label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
1106843   +
1106844   +      label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
1106845   +
1106846   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1106847   +
1106848   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1106849   +
1106850   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1106851   +
1106852   +      label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
1106853   +
1106854   +      label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
1106855   +
1106856   +      label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
1106857   +
1106858   +      label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
1106859   +
1106860   +      label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
1106861   +
1106862   +      label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
1106863   +
1106864   +      label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
1106865   +
1106866   +      label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
1106867   +
1106868   +      label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
1106869   +
1106870   +      label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
1106871   +
1106872   +      label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
1106873   +
1106874   +      label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
1106875   +
1106876   +      label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
1106877   +
1106878   +      label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
1106879   +
1106880   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1106881   +
1106882   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1106883   +
1106884   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1106885   +
1106886   +      label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
1106887   +
1106888   +      label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
1106889   +
1106890   +      label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
1106891   +
1106892   +      label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
1106893   +
1106894   +      label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
1106895   +
1106896   +      label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
1106897   +
1106898   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1106899   +
1106900   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1106901   +
1106902   +      label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
1106903   +
1106904   +      label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
1106905   +
1106906   +      label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
1106907   +
1106908   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1106909   +
1106910   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1106911   +
1106912   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1106913   +
1106914   +      label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
1106915   +
1106916   +      label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
1106917   +
1106918   +      label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
1106919   +
1106920   +      label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
1106921   +
1106922   +      label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
1106923   +
1106924   +      label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
1106925   +
1106926   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1106927   +
1106928   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1106929   +
1106930   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1106931   +
1106932   +      label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
1106933   +
1106934   +      label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
1106935   +
1106936   +      label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
1106937   +
1106938   +      label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
1106939   +
1106940   +      label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
1106941   +
1106942   +      label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
1106943   +
1106944   +      label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
1106945   +
1106946   +      label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
1106947   +
1106948   +      label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
1106949   +
1106950   +      label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
1106951   +
1106952   +      label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
1106953   +
1106954   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1106955   +
1106956   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1106957   +
1106958   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1106959   +
1106960   +      label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
1106961   +
1106962   +      label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
1106963   +
1106964   +      label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
1106965   +
1106966   +      label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
1106967   +
1106968   +      label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
1106969   +
1106970   +      label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
1106971   +
1106972   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1106973   +
1106974   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1106975   +
1106976   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1106977   +
1106978   +      label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
1106979   +
1106980   +      label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
1106981   +
1106982   +      label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
1106983   +
1106984   +      label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
1106985   +
1106986   +      label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
1106987   +
1106988   +      label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
1106989   +
1106990   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1106991   +
1106992   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1106993   +
1106994   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1106995   +
1106996   +      label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
1106997   +
1106998   +      label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
1106999   +
1107000   +      label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
1107001   +
1107002   +      label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
1107003   +
1107004   +      label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
1107005   +
1107006   +      label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
1107007   +
1107008   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1107009   +
1107010   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1107011   +
1107012   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1107013   +
1107014   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1107015   +
1107016   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1107017   +
1107018   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1107019   +
1107020   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1107021   +
1107022   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1107023   +
1107024   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1107025   +
1107026   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1107027   +
1107028   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1107029   +
1107030   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1107031   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1107032   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1107033   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1107034   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1107035   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1107036   +end;
MPRINT(EM_DIAGRAM):   end;
1107037   +else do;
MPRINT(EM_DIAGRAM):   else do;
1107038   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1107039   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1107040   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1107041   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1107042   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1107043   +   end;
MPRINT(EM_DIAGRAM):   end;
1107044   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1107045   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1107046   +   end;
MPRINT(EM_DIAGRAM):   end;
1107047   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1107048   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1107049   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1107050   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1107051   +   end;
MPRINT(EM_DIAGRAM):   end;
1107052   +end;
MPRINT(EM_DIAGRAM):   end;
1107053   +
1107054   +*** Generate dummy variables for GRP_AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmpTotal ;
1107055   +drop GRP_AcceptedCmpTotal3 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmpTotal3 ;
1107056   +if missing( GRP_AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmpTotal ) then do;
1107057   +   GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
1107058   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1107059   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1107060   +end;
MPRINT(EM_DIAGRAM):   end;
1107061   +else do;
MPRINT(EM_DIAGRAM):   else do;
1107062   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1107063   +   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
1107064   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1107065   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1107066   +      GRP_AcceptedCmpTotal3 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = 1;
1107067   +   end;
MPRINT(EM_DIAGRAM):   end;
1107068   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1107069   +      GRP_AcceptedCmpTotal3 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = -1;
1107070   +   end;
MPRINT(EM_DIAGRAM):   end;
1107071   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1107072   +      GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
1107073   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1107074   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1107075   +   end;
MPRINT(EM_DIAGRAM):   end;
1107076   +end;
MPRINT(EM_DIAGRAM):   end;
1107077   +
1107078   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1107079   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8 GRP_Frq9
1107080   +        GRP_Frq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8
GRP_Frq9 GRP_Frq10 ;
1107081   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1107082   +GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1107083   +GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1107084   +GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1107085   +GRP_Frq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 0;
1107086   +GRP_Frq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 0;
1107087   +GRP_Frq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 0;
1107088   +GRP_Frq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 0;
1107089   +GRP_Frq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 0;
1107090   +GRP_Frq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 0;
1107091   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1107092   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1107093   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1107094   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1107095   +   GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
1107096   +   GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
1107097   +   GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
1107098   +   GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
1107099   +   GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
1107100   +   GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
1107101   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1107102   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1107103   +end;
MPRINT(EM_DIAGRAM):   end;
1107104   +else do;
MPRINT(EM_DIAGRAM):   else do;
1107105   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1107106   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1107107   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1107108   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1107109   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1107110   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1107111   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1107112   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1107113   +               GRP_Frq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 1;
1107114   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107115   +            end;
MPRINT(EM_DIAGRAM):   end;
1107116   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1107117   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1107118   +                  GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1107119   +                  GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1107120   +                  GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1107121   +                  GRP_Frq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = -1;
1107122   +                  GRP_Frq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = -1;
1107123   +                  GRP_Frq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = -1;
1107124   +                  GRP_Frq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = -1;
1107125   +                  GRP_Frq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = -1;
1107126   +                  GRP_Frq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = -1;
1107127   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107128   +               end;
MPRINT(EM_DIAGRAM):   end;
1107129   +            end;
MPRINT(EM_DIAGRAM):   end;
1107130   +         end;
MPRINT(EM_DIAGRAM):   end;
1107131   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107132   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1107133   +               GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1107134   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107135   +            end;
MPRINT(EM_DIAGRAM):   end;
1107136   +         end;
MPRINT(EM_DIAGRAM):   end;
1107137   +      end;
MPRINT(EM_DIAGRAM):   end;
1107138   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1107139   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1107140   +            GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1107141   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107142   +         end;
MPRINT(EM_DIAGRAM):   end;
1107143   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107144   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1107145   +               GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1107146   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107147   +            end;
MPRINT(EM_DIAGRAM):   end;
1107148   +         end;
MPRINT(EM_DIAGRAM):   end;
1107149   +      end;
MPRINT(EM_DIAGRAM):   end;
1107150   +   end;
MPRINT(EM_DIAGRAM):   end;
1107151   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1107152   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1107153   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1107154   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1107155   +               GRP_Frq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 1;
1107156   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107157   +            end;
MPRINT(EM_DIAGRAM):   end;
1107158   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1107159   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1107160   +                  GRP_Frq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 1;
1107161   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107162   +               end;
MPRINT(EM_DIAGRAM):   end;
1107163   +            end;
MPRINT(EM_DIAGRAM):   end;
1107164   +         end;
MPRINT(EM_DIAGRAM):   end;
1107165   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107166   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1107167   +               GRP_Frq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 1;
1107168   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107169   +            end;
MPRINT(EM_DIAGRAM):   end;
1107170   +         end;
MPRINT(EM_DIAGRAM):   end;
1107171   +      end;
MPRINT(EM_DIAGRAM):   end;
1107172   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1107173   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1107174   +            GRP_Frq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 1;
1107175   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107176   +         end;
MPRINT(EM_DIAGRAM):   end;
1107177   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107178   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1107179   +               GRP_Frq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 1;
1107180   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107181   +            end;
MPRINT(EM_DIAGRAM):   end;
1107182   +         end;
MPRINT(EM_DIAGRAM):   end;
1107183   +      end;
MPRINT(EM_DIAGRAM):   end;
1107184   +   end;
MPRINT(EM_DIAGRAM):   end;
1107185   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1107186   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1107187   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1107188   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1107189   +      GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
1107190   +      GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
1107191   +      GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
1107192   +      GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
1107193   +      GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
1107194   +      GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
1107195   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1107196   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1107197   +   end;
MPRINT(EM_DIAGRAM):   end;
1107198   +end;
MPRINT(EM_DIAGRAM):   end;
1107199   +
1107200   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1107201   +drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6 GRP_Income7
1107202   +        GRP_Income8 GRP_Income9 GRP_Income10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6
GRP_Income7 GRP_Income8 GRP_Income9 GRP_Income10 ;
1107203   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1107204   +GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1107205   +GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1107206   +GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1107207   +GRP_Income5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 0;
1107208   +GRP_Income6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 0;
1107209   +GRP_Income7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 0;
1107210   +GRP_Income8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 0;
1107211   +GRP_Income9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 0;
1107212   +GRP_Income10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 0;
1107213   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1107214   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1107215   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1107216   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1107217   +   GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
1107218   +   GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
1107219   +   GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
1107220   +   GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
1107221   +   GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
1107222   +   GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
1107223   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1107224   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1107225   +end;
MPRINT(EM_DIAGRAM):   end;
1107226   +else do;
MPRINT(EM_DIAGRAM):   else do;
1107227   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1107228   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1107229   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1107230   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1107231   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1107232   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1107233   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1107234   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1107235   +               GRP_Income10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 1;
1107236   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107237   +            end;
MPRINT(EM_DIAGRAM):   end;
1107238   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1107239   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1107240   +                  GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1107241   +                  GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1107242   +                  GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1107243   +                  GRP_Income5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = -1;
1107244   +                  GRP_Income6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = -1;
1107245   +                  GRP_Income7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = -1;
1107246   +                  GRP_Income8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = -1;
1107247   +                  GRP_Income9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = -1;
1107248   +                  GRP_Income10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = -1;
1107249   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107250   +               end;
MPRINT(EM_DIAGRAM):   end;
1107251   +            end;
MPRINT(EM_DIAGRAM):   end;
1107252   +         end;
MPRINT(EM_DIAGRAM):   end;
1107253   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107254   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1107255   +               GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1107256   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107257   +            end;
MPRINT(EM_DIAGRAM):   end;
1107258   +         end;
MPRINT(EM_DIAGRAM):   end;
1107259   +      end;
MPRINT(EM_DIAGRAM):   end;
1107260   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1107261   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1107262   +            GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1107263   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107264   +         end;
MPRINT(EM_DIAGRAM):   end;
1107265   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107266   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1107267   +               GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1107268   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107269   +            end;
MPRINT(EM_DIAGRAM):   end;
1107270   +         end;
MPRINT(EM_DIAGRAM):   end;
1107271   +      end;
MPRINT(EM_DIAGRAM):   end;
1107272   +   end;
MPRINT(EM_DIAGRAM):   end;
1107273   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1107274   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1107275   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1107276   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1107277   +               GRP_Income5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 1;
1107278   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107279   +            end;
MPRINT(EM_DIAGRAM):   end;
1107280   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1107281   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1107282   +                  GRP_Income6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 1;
1107283   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107284   +               end;
MPRINT(EM_DIAGRAM):   end;
1107285   +            end;
MPRINT(EM_DIAGRAM):   end;
1107286   +         end;
MPRINT(EM_DIAGRAM):   end;
1107287   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107288   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1107289   +               GRP_Income7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 1;
1107290   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107291   +            end;
MPRINT(EM_DIAGRAM):   end;
1107292   +         end;
MPRINT(EM_DIAGRAM):   end;
1107293   +      end;
MPRINT(EM_DIAGRAM):   end;
1107294   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1107295   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1107296   +            GRP_Income8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 1;
1107297   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107298   +         end;
MPRINT(EM_DIAGRAM):   end;
1107299   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107300   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1107301   +               GRP_Income9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 1;
1107302   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107303   +            end;
MPRINT(EM_DIAGRAM):   end;
1107304   +         end;
MPRINT(EM_DIAGRAM):   end;
1107305   +      end;
MPRINT(EM_DIAGRAM):   end;
1107306   +   end;
MPRINT(EM_DIAGRAM):   end;
1107307   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1107308   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1107309   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1107310   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1107311   +      GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
1107312   +      GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
1107313   +      GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
1107314   +      GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
1107315   +      GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
1107316   +      GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
1107317   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1107318   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1107319   +   end;
MPRINT(EM_DIAGRAM):   end;
1107320   +end;
MPRINT(EM_DIAGRAM):   end;
1107321   +
1107322   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1107323   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8 GRP_Mnt9
1107324   +        GRP_Mnt10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8
GRP_Mnt9 GRP_Mnt10 ;
1107325   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1107326   +GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1107327   +GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1107328   +GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1107329   +GRP_Mnt5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 0;
1107330   +GRP_Mnt6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 0;
1107331   +GRP_Mnt7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 0;
1107332   +GRP_Mnt8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 0;
1107333   +GRP_Mnt9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 0;
1107334   +GRP_Mnt10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 0;
1107335   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1107336   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1107337   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1107338   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1107339   +   GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
1107340   +   GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
1107341   +   GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
1107342   +   GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
1107343   +   GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
1107344   +   GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
1107345   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1107346   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1107347   +end;
MPRINT(EM_DIAGRAM):   end;
1107348   +else do;
MPRINT(EM_DIAGRAM):   else do;
1107349   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1107350   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1107351   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1107352   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1107353   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1107354   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1107355   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1107356   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1107357   +               GRP_Mnt10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 1;
1107358   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107359   +            end;
MPRINT(EM_DIAGRAM):   end;
1107360   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1107361   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1107362   +                  GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1107363   +                  GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1107364   +                  GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1107365   +                  GRP_Mnt5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = -1;
1107366   +                  GRP_Mnt6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = -1;
1107367   +                  GRP_Mnt7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = -1;
1107368   +                  GRP_Mnt8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = -1;
1107369   +                  GRP_Mnt9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = -1;
1107370   +                  GRP_Mnt10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = -1;
1107371   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107372   +               end;
MPRINT(EM_DIAGRAM):   end;
1107373   +            end;
MPRINT(EM_DIAGRAM):   end;
1107374   +         end;
MPRINT(EM_DIAGRAM):   end;
1107375   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107376   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1107377   +               GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1107378   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107379   +            end;
MPRINT(EM_DIAGRAM):   end;
1107380   +         end;
MPRINT(EM_DIAGRAM):   end;
1107381   +      end;
MPRINT(EM_DIAGRAM):   end;
1107382   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1107383   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1107384   +            GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1107385   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107386   +         end;
MPRINT(EM_DIAGRAM):   end;
1107387   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107388   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1107389   +               GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1107390   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107391   +            end;
MPRINT(EM_DIAGRAM):   end;
1107392   +         end;
MPRINT(EM_DIAGRAM):   end;
1107393   +      end;
MPRINT(EM_DIAGRAM):   end;
1107394   +   end;
MPRINT(EM_DIAGRAM):   end;
1107395   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1107396   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1107397   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1107398   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1107399   +               GRP_Mnt5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 1;
1107400   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107401   +            end;
MPRINT(EM_DIAGRAM):   end;
1107402   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1107403   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1107404   +                  GRP_Mnt6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 1;
1107405   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107406   +               end;
MPRINT(EM_DIAGRAM):   end;
1107407   +            end;
MPRINT(EM_DIAGRAM):   end;
1107408   +         end;
MPRINT(EM_DIAGRAM):   end;
1107409   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107410   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1107411   +               GRP_Mnt7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 1;
1107412   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107413   +            end;
MPRINT(EM_DIAGRAM):   end;
1107414   +         end;
MPRINT(EM_DIAGRAM):   end;
1107415   +      end;
MPRINT(EM_DIAGRAM):   end;
1107416   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1107417   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1107418   +            GRP_Mnt8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 1;
1107419   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107420   +         end;
MPRINT(EM_DIAGRAM):   end;
1107421   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107422   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1107423   +               GRP_Mnt9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 1;
1107424   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107425   +            end;
MPRINT(EM_DIAGRAM):   end;
1107426   +         end;
MPRINT(EM_DIAGRAM):   end;
1107427   +      end;
MPRINT(EM_DIAGRAM):   end;
1107428   +   end;
MPRINT(EM_DIAGRAM):   end;
1107429   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1107430   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1107431   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1107432   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1107433   +      GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
1107434   +      GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
1107435   +      GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
1107436   +      GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
1107437   +      GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
1107438   +      GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
1107439   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1107440   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1107441   +   end;
MPRINT(EM_DIAGRAM):   end;
1107442   +end;
MPRINT(EM_DIAGRAM):   end;
1107443   +
1107444   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1107445   +drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
1107446   +        GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8
1107447   +        GRP_MntFishProducts9 GRP_MntFishProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8 GRP_MntFishProducts9
GRP_MntFishProducts10 ;
1107448   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1107449   +GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1107450   +GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1107451   +GRP_MntFishProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 0;
1107452   +GRP_MntFishProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 0;
1107453   +GRP_MntFishProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 0;
1107454   +GRP_MntFishProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 0;
1107455   +GRP_MntFishProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 0;
1107456   +GRP_MntFishProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 0;
1107457   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1107458   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1107459   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1107460   +   GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
1107461   +   GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
1107462   +   GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
1107463   +   GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
1107464   +   GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
1107465   +   GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
1107466   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1107467   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1107468   +end;
MPRINT(EM_DIAGRAM):   end;
1107469   +else do;
MPRINT(EM_DIAGRAM):   else do;
1107470   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1107471   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1107472   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1107473   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1107474   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1107475   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1107476   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1107477   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1107478   +               GRP_MntFishProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 1;
1107479   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107480   +            end;
MPRINT(EM_DIAGRAM):   end;
1107481   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1107482   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1107483   +                  GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1107484   +                  GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1107485   +                  GRP_MntFishProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = -1;
1107486   +                  GRP_MntFishProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = -1;
1107487   +                  GRP_MntFishProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = -1;
1107488   +                  GRP_MntFishProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = -1;
1107489   +                  GRP_MntFishProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = -1;
1107490   +                  GRP_MntFishProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = -1;
1107491   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107492   +               end;
MPRINT(EM_DIAGRAM):   end;
1107493   +            end;
MPRINT(EM_DIAGRAM):   end;
1107494   +         end;
MPRINT(EM_DIAGRAM):   end;
1107495   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107496   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1107497   +               GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1107498   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107499   +            end;
MPRINT(EM_DIAGRAM):   end;
1107500   +         end;
MPRINT(EM_DIAGRAM):   end;
1107501   +      end;
MPRINT(EM_DIAGRAM):   end;
1107502   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1107503   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1107504   +            GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1107505   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107506   +         end;
MPRINT(EM_DIAGRAM):   end;
1107507   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107508   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1107509   +               GRP_MntFishProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 1;
1107510   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107511   +            end;
MPRINT(EM_DIAGRAM):   end;
1107512   +         end;
MPRINT(EM_DIAGRAM):   end;
1107513   +      end;
MPRINT(EM_DIAGRAM):   end;
1107514   +   end;
MPRINT(EM_DIAGRAM):   end;
1107515   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1107516   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1107517   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1107518   +            GRP_MntFishProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 1;
1107519   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107520   +         end;
MPRINT(EM_DIAGRAM):   end;
1107521   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107522   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1107523   +               GRP_MntFishProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 1;
1107524   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107525   +            end;
MPRINT(EM_DIAGRAM):   end;
1107526   +         end;
MPRINT(EM_DIAGRAM):   end;
1107527   +      end;
MPRINT(EM_DIAGRAM):   end;
1107528   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1107529   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1107530   +            GRP_MntFishProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 1;
1107531   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107532   +         end;
MPRINT(EM_DIAGRAM):   end;
1107533   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107534   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1107535   +               GRP_MntFishProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 1;
1107536   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107537   +            end;
MPRINT(EM_DIAGRAM):   end;
1107538   +         end;
MPRINT(EM_DIAGRAM):   end;
1107539   +      end;
MPRINT(EM_DIAGRAM):   end;
1107540   +   end;
MPRINT(EM_DIAGRAM):   end;
1107541   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1107542   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1107543   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1107544   +      GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
1107545   +      GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
1107546   +      GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
1107547   +      GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
1107548   +      GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
1107549   +      GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
1107550   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1107551   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1107552   +   end;
MPRINT(EM_DIAGRAM):   end;
1107553   +end;
MPRINT(EM_DIAGRAM):   end;
1107554   +
1107555   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1107556   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 GRP_MntGoldProds5
1107557   +        GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8
1107558   +        GRP_MntGoldProds9 GRP_MntGoldProds10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4
GRP_MntGoldProds5 GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8 GRP_MntGoldProds9
GRP_MntGoldProds10 ;
1107559   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1107560   +GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1107561   +GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1107562   +GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1107563   +GRP_MntGoldProds5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 0;
1107564   +GRP_MntGoldProds6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 0;
1107565   +GRP_MntGoldProds7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 0;
1107566   +GRP_MntGoldProds8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 0;
1107567   +GRP_MntGoldProds9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 0;
1107568   +GRP_MntGoldProds10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 0;
1107569   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1107570   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1107571   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1107572   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1107573   +   GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
1107574   +   GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
1107575   +   GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
1107576   +   GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
1107577   +   GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
1107578   +   GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
1107579   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1107580   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1107581   +end;
MPRINT(EM_DIAGRAM):   end;
1107582   +else do;
MPRINT(EM_DIAGRAM):   else do;
1107583   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1107584   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1107585   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1107586   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1107587   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1107588   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1107589   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1107590   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1107591   +               GRP_MntGoldProds10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 1;
1107592   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107593   +            end;
MPRINT(EM_DIAGRAM):   end;
1107594   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1107595   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1107596   +                  GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1107597   +                  GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1107598   +                  GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1107599   +                  GRP_MntGoldProds5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = -1;
1107600   +                  GRP_MntGoldProds6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = -1;
1107601   +                  GRP_MntGoldProds7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = -1;
1107602   +                  GRP_MntGoldProds8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = -1;
1107603   +                  GRP_MntGoldProds9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = -1;
1107604   +                  GRP_MntGoldProds10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = -1;
1107605   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107606   +               end;
MPRINT(EM_DIAGRAM):   end;
1107607   +            end;
MPRINT(EM_DIAGRAM):   end;
1107608   +         end;
MPRINT(EM_DIAGRAM):   end;
1107609   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107610   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1107611   +               GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1107612   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107613   +            end;
MPRINT(EM_DIAGRAM):   end;
1107614   +         end;
MPRINT(EM_DIAGRAM):   end;
1107615   +      end;
MPRINT(EM_DIAGRAM):   end;
1107616   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1107617   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1107618   +            GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1107619   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107620   +         end;
MPRINT(EM_DIAGRAM):   end;
1107621   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107622   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1107623   +               GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1107624   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107625   +            end;
MPRINT(EM_DIAGRAM):   end;
1107626   +         end;
MPRINT(EM_DIAGRAM):   end;
1107627   +      end;
MPRINT(EM_DIAGRAM):   end;
1107628   +   end;
MPRINT(EM_DIAGRAM):   end;
1107629   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1107630   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1107631   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1107632   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1107633   +               GRP_MntGoldProds5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 1;
1107634   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107635   +            end;
MPRINT(EM_DIAGRAM):   end;
1107636   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1107637   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1107638   +                  GRP_MntGoldProds6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 1;
1107639   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107640   +               end;
MPRINT(EM_DIAGRAM):   end;
1107641   +            end;
MPRINT(EM_DIAGRAM):   end;
1107642   +         end;
MPRINT(EM_DIAGRAM):   end;
1107643   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107644   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1107645   +               GRP_MntGoldProds7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 1;
1107646   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107647   +            end;
MPRINT(EM_DIAGRAM):   end;
1107648   +         end;
MPRINT(EM_DIAGRAM):   end;
1107649   +      end;
MPRINT(EM_DIAGRAM):   end;
1107650   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1107651   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1107652   +            GRP_MntGoldProds8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 1;
1107653   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107654   +         end;
MPRINT(EM_DIAGRAM):   end;
1107655   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107656   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1107657   +               GRP_MntGoldProds9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 1;
1107658   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107659   +            end;
MPRINT(EM_DIAGRAM):   end;
1107660   +         end;
MPRINT(EM_DIAGRAM):   end;
1107661   +      end;
MPRINT(EM_DIAGRAM):   end;
1107662   +   end;
MPRINT(EM_DIAGRAM):   end;
1107663   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1107664   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1107665   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1107666   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1107667   +      GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
1107668   +      GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
1107669   +      GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
1107670   +      GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
1107671   +      GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
1107672   +      GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
1107673   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1107674   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1107675   +   end;
MPRINT(EM_DIAGRAM):   end;
1107676   +end;
MPRINT(EM_DIAGRAM):   end;
1107677   +
1107678   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1107679   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
1107680   +        GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7
1107681   +        GRP_MntMeatProducts8 GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7 GRP_MntMeatProducts8
GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
1107682   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1107683   +GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1107684   +GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1107685   +GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1107686   +GRP_MntMeatProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 0;
1107687   +GRP_MntMeatProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 0;
1107688   +GRP_MntMeatProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 0;
1107689   +GRP_MntMeatProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 0;
1107690   +GRP_MntMeatProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 0;
1107691   +GRP_MntMeatProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 0;
1107692   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1107693   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1107694   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1107695   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1107696   +   GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
1107697   +   GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
1107698   +   GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
1107699   +   GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
1107700   +   GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
1107701   +   GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
1107702   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1107703   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1107704   +end;
MPRINT(EM_DIAGRAM):   end;
1107705   +else do;
MPRINT(EM_DIAGRAM):   else do;
1107706   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1107707   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1107708   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1107709   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1107710   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1107711   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1107712   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1107713   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1107714   +               GRP_MntMeatProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 1;
1107715   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107716   +            end;
MPRINT(EM_DIAGRAM):   end;
1107717   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1107718   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1107719   +                  GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1107720   +                  GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1107721   +                  GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1107722   +                  GRP_MntMeatProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = -1;
1107723   +                  GRP_MntMeatProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = -1;
1107724   +                  GRP_MntMeatProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = -1;
1107725   +                  GRP_MntMeatProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = -1;
1107726   +                  GRP_MntMeatProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = -1;
1107727   +                  GRP_MntMeatProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = -1;
1107728   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107729   +               end;
MPRINT(EM_DIAGRAM):   end;
1107730   +            end;
MPRINT(EM_DIAGRAM):   end;
1107731   +         end;
MPRINT(EM_DIAGRAM):   end;
1107732   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107733   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1107734   +               GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1107735   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107736   +            end;
MPRINT(EM_DIAGRAM):   end;
1107737   +         end;
MPRINT(EM_DIAGRAM):   end;
1107738   +      end;
MPRINT(EM_DIAGRAM):   end;
1107739   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1107740   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1107741   +            GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1107742   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107743   +         end;
MPRINT(EM_DIAGRAM):   end;
1107744   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107745   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1107746   +               GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1107747   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107748   +            end;
MPRINT(EM_DIAGRAM):   end;
1107749   +         end;
MPRINT(EM_DIAGRAM):   end;
1107750   +      end;
MPRINT(EM_DIAGRAM):   end;
1107751   +   end;
MPRINT(EM_DIAGRAM):   end;
1107752   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1107753   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1107754   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1107755   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1107756   +               GRP_MntMeatProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 1;
1107757   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107758   +            end;
MPRINT(EM_DIAGRAM):   end;
1107759   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1107760   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1107761   +                  GRP_MntMeatProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 1;
1107762   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107763   +               end;
MPRINT(EM_DIAGRAM):   end;
1107764   +            end;
MPRINT(EM_DIAGRAM):   end;
1107765   +         end;
MPRINT(EM_DIAGRAM):   end;
1107766   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107767   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1107768   +               GRP_MntMeatProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 1;
1107769   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107770   +            end;
MPRINT(EM_DIAGRAM):   end;
1107771   +         end;
MPRINT(EM_DIAGRAM):   end;
1107772   +      end;
MPRINT(EM_DIAGRAM):   end;
1107773   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1107774   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1107775   +            GRP_MntMeatProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 1;
1107776   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107777   +         end;
MPRINT(EM_DIAGRAM):   end;
1107778   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107779   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1107780   +               GRP_MntMeatProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 1;
1107781   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107782   +            end;
MPRINT(EM_DIAGRAM):   end;
1107783   +         end;
MPRINT(EM_DIAGRAM):   end;
1107784   +      end;
MPRINT(EM_DIAGRAM):   end;
1107785   +   end;
MPRINT(EM_DIAGRAM):   end;
1107786   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1107787   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1107788   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1107789   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1107790   +      GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
1107791   +      GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
1107792   +      GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
1107793   +      GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
1107794   +      GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
1107795   +      GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
1107796   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1107797   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1107798   +   end;
MPRINT(EM_DIAGRAM):   end;
1107799   +end;
MPRINT(EM_DIAGRAM):   end;
1107800   +
1107801   +*** Generate dummy variables for GRP_MntSweetProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntSweetProducts ;
1107802   +drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
1107803   +        GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8
1107804   +        GRP_MntSweetProducts9 GRP_MntSweetProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8 GRP_MntSweetProducts9
GRP_MntSweetProducts10 ;
1107805   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1107806   +GRP_MntSweetProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 0;
1107807   +GRP_MntSweetProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 0;
1107808   +GRP_MntSweetProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 0;
1107809   +GRP_MntSweetProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 0;
1107810   +GRP_MntSweetProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 0;
1107811   +GRP_MntSweetProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 0;
1107812   +GRP_MntSweetProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 0;
1107813   +GRP_MntSweetProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 0;
1107814   +if missing( GRP_MntSweetProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntSweetProducts ) then do;
1107815   +   GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
1107816   +   GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
1107817   +   GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
1107818   +   GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
1107819   +   GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
1107820   +   GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
1107821   +   GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
1107822   +   GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
1107823   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1107824   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1107825   +end;
MPRINT(EM_DIAGRAM):   end;
1107826   +else do;
MPRINT(EM_DIAGRAM):   else do;
1107827   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1107828   +   _dm12 = put( GRP_MntSweetProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntSweetProducts , BEST12. );
1107829   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1107830   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1107831   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1107832   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1107833   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1107834   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1107835   +               GRP_MntSweetProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 1;
1107836   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107837   +            end;
MPRINT(EM_DIAGRAM):   end;
1107838   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1107839   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1107840   +                  GRP_MntSweetProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = -1;
1107841   +                  GRP_MntSweetProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = -1;
1107842   +                  GRP_MntSweetProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = -1;
1107843   +                  GRP_MntSweetProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = -1;
1107844   +                  GRP_MntSweetProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = -1;
1107845   +                  GRP_MntSweetProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = -1;
1107846   +                  GRP_MntSweetProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = -1;
1107847   +                  GRP_MntSweetProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = -1;
1107848   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107849   +               end;
MPRINT(EM_DIAGRAM):   end;
1107850   +            end;
MPRINT(EM_DIAGRAM):   end;
1107851   +         end;
MPRINT(EM_DIAGRAM):   end;
1107852   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107853   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1107854   +               GRP_MntSweetProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 1;
1107855   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107856   +            end;
MPRINT(EM_DIAGRAM):   end;
1107857   +         end;
MPRINT(EM_DIAGRAM):   end;
1107858   +      end;
MPRINT(EM_DIAGRAM):   end;
1107859   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1107860   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1107861   +            GRP_MntSweetProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 1;
1107862   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107863   +         end;
MPRINT(EM_DIAGRAM):   end;
1107864   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107865   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1107866   +               GRP_MntSweetProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 1;
1107867   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107868   +            end;
MPRINT(EM_DIAGRAM):   end;
1107869   +         end;
MPRINT(EM_DIAGRAM):   end;
1107870   +      end;
MPRINT(EM_DIAGRAM):   end;
1107871   +   end;
MPRINT(EM_DIAGRAM):   end;
1107872   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1107873   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1107874   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1107875   +            GRP_MntSweetProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 1;
1107876   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107877   +         end;
MPRINT(EM_DIAGRAM):   end;
1107878   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107879   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1107880   +               GRP_MntSweetProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 1;
1107881   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107882   +            end;
MPRINT(EM_DIAGRAM):   end;
1107883   +         end;
MPRINT(EM_DIAGRAM):   end;
1107884   +      end;
MPRINT(EM_DIAGRAM):   end;
1107885   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1107886   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1107887   +            GRP_MntSweetProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 1;
1107888   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107889   +         end;
MPRINT(EM_DIAGRAM):   end;
1107890   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107891   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1107892   +               GRP_MntSweetProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 1;
1107893   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107894   +            end;
MPRINT(EM_DIAGRAM):   end;
1107895   +         end;
MPRINT(EM_DIAGRAM):   end;
1107896   +      end;
MPRINT(EM_DIAGRAM):   end;
1107897   +   end;
MPRINT(EM_DIAGRAM):   end;
1107898   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1107899   +      GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
1107900   +      GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
1107901   +      GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
1107902   +      GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
1107903   +      GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
1107904   +      GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
1107905   +      GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
1107906   +      GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
1107907   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1107908   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1107909   +   end;
MPRINT(EM_DIAGRAM):   end;
1107910   +end;
MPRINT(EM_DIAGRAM):   end;
1107911   +
1107912   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1107913   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5 GRP_MntWines6
1107914   +        GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5
GRP_MntWines6 GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
1107915   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1107916   +GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1107917   +GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1107918   +GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1107919   +GRP_MntWines5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 0;
1107920   +GRP_MntWines6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 0;
1107921   +GRP_MntWines7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 0;
1107922   +GRP_MntWines8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 0;
1107923   +GRP_MntWines9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 0;
1107924   +GRP_MntWines10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 0;
1107925   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1107926   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1107927   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1107928   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1107929   +   GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
1107930   +   GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
1107931   +   GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
1107932   +   GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
1107933   +   GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
1107934   +   GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
1107935   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1107936   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1107937   +end;
MPRINT(EM_DIAGRAM):   end;
1107938   +else do;
MPRINT(EM_DIAGRAM):   else do;
1107939   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1107940   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1107941   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1107942   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1107943   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1107944   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1107945   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1107946   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1107947   +               GRP_MntWines10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 1;
1107948   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107949   +            end;
MPRINT(EM_DIAGRAM):   end;
1107950   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1107951   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1107952   +                  GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1107953   +                  GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1107954   +                  GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1107955   +                  GRP_MntWines5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = -1;
1107956   +                  GRP_MntWines6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = -1;
1107957   +                  GRP_MntWines7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = -1;
1107958   +                  GRP_MntWines8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = -1;
1107959   +                  GRP_MntWines9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = -1;
1107960   +                  GRP_MntWines10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = -1;
1107961   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107962   +               end;
MPRINT(EM_DIAGRAM):   end;
1107963   +            end;
MPRINT(EM_DIAGRAM):   end;
1107964   +         end;
MPRINT(EM_DIAGRAM):   end;
1107965   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107966   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1107967   +               GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1107968   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107969   +            end;
MPRINT(EM_DIAGRAM):   end;
1107970   +         end;
MPRINT(EM_DIAGRAM):   end;
1107971   +      end;
MPRINT(EM_DIAGRAM):   end;
1107972   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1107973   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1107974   +            GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1107975   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107976   +         end;
MPRINT(EM_DIAGRAM):   end;
1107977   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1107978   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1107979   +               GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1107980   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107981   +            end;
MPRINT(EM_DIAGRAM):   end;
1107982   +         end;
MPRINT(EM_DIAGRAM):   end;
1107983   +      end;
MPRINT(EM_DIAGRAM):   end;
1107984   +   end;
MPRINT(EM_DIAGRAM):   end;
1107985   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1107986   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1107987   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1107988   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1107989   +               GRP_MntWines5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 1;
1107990   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107991   +            end;
MPRINT(EM_DIAGRAM):   end;
1107992   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1107993   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1107994   +                  GRP_MntWines6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 1;
1107995   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1107996   +               end;
MPRINT(EM_DIAGRAM):   end;
1107997   +            end;
MPRINT(EM_DIAGRAM):   end;
1107998   +         end;
MPRINT(EM_DIAGRAM):   end;
1107999   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108000   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1108001   +               GRP_MntWines7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 1;
1108002   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108003   +            end;
MPRINT(EM_DIAGRAM):   end;
1108004   +         end;
MPRINT(EM_DIAGRAM):   end;
1108005   +      end;
MPRINT(EM_DIAGRAM):   end;
1108006   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1108007   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1108008   +            GRP_MntWines8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 1;
1108009   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108010   +         end;
MPRINT(EM_DIAGRAM):   end;
1108011   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108012   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1108013   +               GRP_MntWines9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 1;
1108014   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108015   +            end;
MPRINT(EM_DIAGRAM):   end;
1108016   +         end;
MPRINT(EM_DIAGRAM):   end;
1108017   +      end;
MPRINT(EM_DIAGRAM):   end;
1108018   +   end;
MPRINT(EM_DIAGRAM):   end;
1108019   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1108020   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1108021   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1108022   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1108023   +      GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
1108024   +      GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
1108025   +      GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
1108026   +      GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
1108027   +      GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
1108028   +      GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
1108029   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1108030   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1108031   +   end;
MPRINT(EM_DIAGRAM):   end;
1108032   +end;
MPRINT(EM_DIAGRAM):   end;
1108033   +
1108034   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1108035   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
1108036   +        GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6
1108037   +        GRP_NumCatalogPurchases7 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6 GRP_NumCatalogPurchases7 ;
1108038   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1108039   +GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1108040   +GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1108041   +GRP_NumCatalogPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 0;
1108042   +GRP_NumCatalogPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 0;
1108043   +GRP_NumCatalogPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 0;
1108044   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1108045   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1108046   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1108047   +   GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
1108048   +   GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
1108049   +   GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
1108050   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1108051   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1108052   +end;
MPRINT(EM_DIAGRAM):   end;
1108053   +else do;
MPRINT(EM_DIAGRAM):   else do;
1108054   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1108055   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1108056   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1108057   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1108058   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1108059   +      if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1108060   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1108061   +            GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1108062   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108063   +         end;
MPRINT(EM_DIAGRAM):   end;
1108064   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108065   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1108066   +               GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1108067   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108068   +            end;
MPRINT(EM_DIAGRAM):   end;
1108069   +         end;
MPRINT(EM_DIAGRAM):   end;
1108070   +      end;
MPRINT(EM_DIAGRAM):   end;
1108071   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1108072   +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1108073   +            GRP_NumCatalogPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 1;
1108074   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108075   +         end;
MPRINT(EM_DIAGRAM):   end;
1108076   +      end;
MPRINT(EM_DIAGRAM):   end;
1108077   +   end;
MPRINT(EM_DIAGRAM):   end;
1108078   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1108079   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1108080   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1108081   +            GRP_NumCatalogPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 1;
1108082   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108083   +         end;
MPRINT(EM_DIAGRAM):   end;
1108084   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108085   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1108086   +               GRP_NumCatalogPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 1;
1108087   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108088   +            end;
MPRINT(EM_DIAGRAM):   end;
1108089   +         end;
MPRINT(EM_DIAGRAM):   end;
1108090   +      end;
MPRINT(EM_DIAGRAM):   end;
1108091   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1108092   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1108093   +            GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1108094   +            GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1108095   +            GRP_NumCatalogPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = -1;
1108096   +            GRP_NumCatalogPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = -1;
1108097   +            GRP_NumCatalogPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = -1;
1108098   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108099   +         end;
MPRINT(EM_DIAGRAM):   end;
1108100   +      end;
MPRINT(EM_DIAGRAM):   end;
1108101   +   end;
MPRINT(EM_DIAGRAM):   end;
1108102   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1108103   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1108104   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1108105   +      GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
1108106   +      GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
1108107   +      GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
1108108   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1108109   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1108110   +   end;
MPRINT(EM_DIAGRAM):   end;
1108111   +end;
MPRINT(EM_DIAGRAM):   end;
1108112   +
1108113   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1108114   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
1108115   +        GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7
1108116   +        GRP_NumDistPurchases8 GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7 GRP_NumDistPurchases8
GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
1108117   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1108118   +GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1108119   +GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1108120   +GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1108121   +GRP_NumDistPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 0;
1108122   +GRP_NumDistPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 0;
1108123   +GRP_NumDistPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 0;
1108124   +GRP_NumDistPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 0;
1108125   +GRP_NumDistPurchases9 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 0;
1108126   +GRP_NumDistPurchases10 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 0;
1108127   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1108128   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1108129   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1108130   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1108131   +   GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
1108132   +   GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
1108133   +   GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
1108134   +   GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
1108135   +   GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
1108136   +   GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
1108137   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1108138   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1108139   +end;
MPRINT(EM_DIAGRAM):   end;
1108140   +else do;
MPRINT(EM_DIAGRAM):   else do;
1108141   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1108142   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1108143   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1108144   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1108145   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1108146   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1108147   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1108148   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1108149   +               GRP_NumDistPurchases10 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 1;
1108150   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108151   +            end;
MPRINT(EM_DIAGRAM):   end;
1108152   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1108153   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1108154   +                  GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1108155   +                  GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1108156   +                  GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1108157   +                  GRP_NumDistPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = -1;
1108158   +                  GRP_NumDistPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = -1;
1108159   +                  GRP_NumDistPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = -1;
1108160   +                  GRP_NumDistPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = -1;
1108161   +                  GRP_NumDistPurchases9 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = -1;
1108162   +                  GRP_NumDistPurchases10 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = -1;
1108163   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108164   +               end;
MPRINT(EM_DIAGRAM):   end;
1108165   +            end;
MPRINT(EM_DIAGRAM):   end;
1108166   +         end;
MPRINT(EM_DIAGRAM):   end;
1108167   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108168   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1108169   +               GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1108170   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108171   +            end;
MPRINT(EM_DIAGRAM):   end;
1108172   +         end;
MPRINT(EM_DIAGRAM):   end;
1108173   +      end;
MPRINT(EM_DIAGRAM):   end;
1108174   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1108175   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1108176   +            GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1108177   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108178   +         end;
MPRINT(EM_DIAGRAM):   end;
1108179   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108180   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1108181   +               GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1108182   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108183   +            end;
MPRINT(EM_DIAGRAM):   end;
1108184   +         end;
MPRINT(EM_DIAGRAM):   end;
1108185   +      end;
MPRINT(EM_DIAGRAM):   end;
1108186   +   end;
MPRINT(EM_DIAGRAM):   end;
1108187   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1108188   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1108189   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1108190   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1108191   +               GRP_NumDistPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 1;
1108192   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108193   +            end;
MPRINT(EM_DIAGRAM):   end;
1108194   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1108195   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1108196   +                  GRP_NumDistPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 1;
1108197   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108198   +               end;
MPRINT(EM_DIAGRAM):   end;
1108199   +            end;
MPRINT(EM_DIAGRAM):   end;
1108200   +         end;
MPRINT(EM_DIAGRAM):   end;
1108201   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108202   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1108203   +               GRP_NumDistPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 1;
1108204   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108205   +            end;
MPRINT(EM_DIAGRAM):   end;
1108206   +         end;
MPRINT(EM_DIAGRAM):   end;
1108207   +      end;
MPRINT(EM_DIAGRAM):   end;
1108208   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1108209   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1108210   +            GRP_NumDistPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 1;
1108211   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108212   +         end;
MPRINT(EM_DIAGRAM):   end;
1108213   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108214   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1108215   +               GRP_NumDistPurchases9 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 1;
1108216   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108217   +            end;
MPRINT(EM_DIAGRAM):   end;
1108218   +         end;
MPRINT(EM_DIAGRAM):   end;
1108219   +      end;
MPRINT(EM_DIAGRAM):   end;
1108220   +   end;
MPRINT(EM_DIAGRAM):   end;
1108221   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1108222   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1108223   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1108224   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1108225   +      GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
1108226   +      GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
1108227   +      GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
1108228   +      GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
1108229   +      GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
1108230   +      GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
1108231   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1108232   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1108233   +   end;
MPRINT(EM_DIAGRAM):   end;
1108234   +end;
MPRINT(EM_DIAGRAM):   end;
1108235   +
1108236   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1108237   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
1108238   +        GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7
1108239   +        GRP_NumWebPurchases8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7 GRP_NumWebPurchases8 ;
1108240   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1108241   +GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1108242   +GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1108243   +GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1108244   +GRP_NumWebPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 0;
1108245   +GRP_NumWebPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 0;
1108246   +GRP_NumWebPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 0;
1108247   +GRP_NumWebPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 0;
1108248   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1108249   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1108250   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1108251   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1108252   +   GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
1108253   +   GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
1108254   +   GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
1108255   +   GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
1108256   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1108257   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1108258   +end;
MPRINT(EM_DIAGRAM):   end;
1108259   +else do;
MPRINT(EM_DIAGRAM):   else do;
1108260   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1108261   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1108262   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1108263   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1108264   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1108265   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1108266   +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1108267   +            GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1108268   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108269   +         end;
MPRINT(EM_DIAGRAM):   end;
1108270   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108271   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1108272   +               GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1108273   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108274   +            end;
MPRINT(EM_DIAGRAM):   end;
1108275   +         end;
MPRINT(EM_DIAGRAM):   end;
1108276   +      end;
MPRINT(EM_DIAGRAM):   end;
1108277   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1108278   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1108279   +            GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1108280   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108281   +         end;
MPRINT(EM_DIAGRAM):   end;
1108282   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108283   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1108284   +               GRP_NumWebPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 1;
1108285   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108286   +            end;
MPRINT(EM_DIAGRAM):   end;
1108287   +         end;
MPRINT(EM_DIAGRAM):   end;
1108288   +      end;
MPRINT(EM_DIAGRAM):   end;
1108289   +   end;
MPRINT(EM_DIAGRAM):   end;
1108290   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1108291   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1108292   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1108293   +            GRP_NumWebPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 1;
1108294   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108295   +         end;
MPRINT(EM_DIAGRAM):   end;
1108296   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108297   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1108298   +               GRP_NumWebPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 1;
1108299   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108300   +            end;
MPRINT(EM_DIAGRAM):   end;
1108301   +         end;
MPRINT(EM_DIAGRAM):   end;
1108302   +      end;
MPRINT(EM_DIAGRAM):   end;
1108303   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1108304   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1108305   +            GRP_NumWebPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 1;
1108306   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108307   +         end;
MPRINT(EM_DIAGRAM):   end;
1108308   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108309   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1108310   +               GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1108311   +               GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1108312   +               GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1108313   +               GRP_NumWebPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = -1;
1108314   +               GRP_NumWebPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = -1;
1108315   +               GRP_NumWebPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = -1;
1108316   +               GRP_NumWebPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = -1;
1108317   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108318   +            end;
MPRINT(EM_DIAGRAM):   end;
1108319   +         end;
MPRINT(EM_DIAGRAM):   end;
1108320   +      end;
MPRINT(EM_DIAGRAM):   end;
1108321   +   end;
MPRINT(EM_DIAGRAM):   end;
1108322   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1108323   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1108324   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1108325   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1108326   +      GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
1108327   +      GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
1108328   +      GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
1108329   +      GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
1108330   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1108331   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1108332   +   end;
MPRINT(EM_DIAGRAM):   end;
1108333   +end;
MPRINT(EM_DIAGRAM):   end;
1108334   +
1108335   +*** Generate dummy variables for GRP_NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebVisitsMonth ;
1108336   +drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3 GRP_NumWebVisitsMonth4
1108337   +        GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
1108338   +        GRP_NumWebVisitsMonth8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3
GRP_NumWebVisitsMonth4 GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
GRP_NumWebVisitsMonth8 ;
1108339   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1108340   +GRP_NumWebVisitsMonth2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 0;
1108341   +GRP_NumWebVisitsMonth3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 0;
1108342   +GRP_NumWebVisitsMonth4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 0;
1108343   +GRP_NumWebVisitsMonth5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 0;
1108344   +GRP_NumWebVisitsMonth6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 0;
1108345   +GRP_NumWebVisitsMonth7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 0;
1108346   +GRP_NumWebVisitsMonth8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 0;
1108347   +if missing( GRP_NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebVisitsMonth ) then do;
1108348   +   GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
1108349   +   GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
1108350   +   GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
1108351   +   GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
1108352   +   GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
1108353   +   GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
1108354   +   GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
1108355   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1108356   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1108357   +end;
MPRINT(EM_DIAGRAM):   end;
1108358   +else do;
MPRINT(EM_DIAGRAM):   else do;
1108359   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1108360   +   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
1108361   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1108362   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1108363   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1108364   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1108365   +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1108366   +            GRP_NumWebVisitsMonth2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 1;
1108367   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108368   +         end;
MPRINT(EM_DIAGRAM):   end;
1108369   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108370   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1108371   +               GRP_NumWebVisitsMonth3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 1;
1108372   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108373   +            end;
MPRINT(EM_DIAGRAM):   end;
1108374   +         end;
MPRINT(EM_DIAGRAM):   end;
1108375   +      end;
MPRINT(EM_DIAGRAM):   end;
1108376   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1108377   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1108378   +            GRP_NumWebVisitsMonth4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 1;
1108379   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108380   +         end;
MPRINT(EM_DIAGRAM):   end;
1108381   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108382   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1108383   +               GRP_NumWebVisitsMonth5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 1;
1108384   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108385   +            end;
MPRINT(EM_DIAGRAM):   end;
1108386   +         end;
MPRINT(EM_DIAGRAM):   end;
1108387   +      end;
MPRINT(EM_DIAGRAM):   end;
1108388   +   end;
MPRINT(EM_DIAGRAM):   end;
1108389   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1108390   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1108391   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1108392   +            GRP_NumWebVisitsMonth6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 1;
1108393   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108394   +         end;
MPRINT(EM_DIAGRAM):   end;
1108395   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108396   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1108397   +               GRP_NumWebVisitsMonth7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 1;
1108398   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108399   +            end;
MPRINT(EM_DIAGRAM):   end;
1108400   +         end;
MPRINT(EM_DIAGRAM):   end;
1108401   +      end;
MPRINT(EM_DIAGRAM):   end;
1108402   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1108403   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1108404   +            GRP_NumWebVisitsMonth8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 1;
1108405   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108406   +         end;
MPRINT(EM_DIAGRAM):   end;
1108407   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108408   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1108409   +               GRP_NumWebVisitsMonth2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = -1;
1108410   +               GRP_NumWebVisitsMonth3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = -1;
1108411   +               GRP_NumWebVisitsMonth4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = -1;
1108412   +               GRP_NumWebVisitsMonth5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = -1;
1108413   +               GRP_NumWebVisitsMonth6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = -1;
1108414   +               GRP_NumWebVisitsMonth7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = -1;
1108415   +               GRP_NumWebVisitsMonth8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = -1;
1108416   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108417   +            end;
MPRINT(EM_DIAGRAM):   end;
1108418   +         end;
MPRINT(EM_DIAGRAM):   end;
1108419   +      end;
MPRINT(EM_DIAGRAM):   end;
1108420   +   end;
MPRINT(EM_DIAGRAM):   end;
1108421   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1108422   +      GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
1108423   +      GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
1108424   +      GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
1108425   +      GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
1108426   +      GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
1108427   +      GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
1108428   +      GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
1108429   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1108430   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1108431   +   end;
MPRINT(EM_DIAGRAM):   end;
1108432   +end;
MPRINT(EM_DIAGRAM):   end;
1108433   +
1108434   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1108435   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
1108436   +        GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
1108437   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1108438   +GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1108439   +GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1108440   +GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1108441   +GRP_RFMstat5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 0;
1108442   +GRP_RFMstat6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 0;
1108443   +GRP_RFMstat7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 0;
1108444   +GRP_RFMstat8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 0;
1108445   +GRP_RFMstat9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 0;
1108446   +GRP_RFMstat10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 0;
1108447   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1108448   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1108449   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1108450   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1108451   +   GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
1108452   +   GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
1108453   +   GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
1108454   +   GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
1108455   +   GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
1108456   +   GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
1108457   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1108458   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1108459   +end;
MPRINT(EM_DIAGRAM):   end;
1108460   +else do;
MPRINT(EM_DIAGRAM):   else do;
1108461   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1108462   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1108463   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1108464   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1108465   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1108466   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1108467   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1108468   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1108469   +               GRP_RFMstat10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 1;
1108470   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108471   +            end;
MPRINT(EM_DIAGRAM):   end;
1108472   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1108473   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1108474   +                  GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1108475   +                  GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1108476   +                  GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1108477   +                  GRP_RFMstat5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = -1;
1108478   +                  GRP_RFMstat6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = -1;
1108479   +                  GRP_RFMstat7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = -1;
1108480   +                  GRP_RFMstat8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = -1;
1108481   +                  GRP_RFMstat9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = -1;
1108482   +                  GRP_RFMstat10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = -1;
1108483   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108484   +               end;
MPRINT(EM_DIAGRAM):   end;
1108485   +            end;
MPRINT(EM_DIAGRAM):   end;
1108486   +         end;
MPRINT(EM_DIAGRAM):   end;
1108487   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108488   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1108489   +               GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1108490   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108491   +            end;
MPRINT(EM_DIAGRAM):   end;
1108492   +         end;
MPRINT(EM_DIAGRAM):   end;
1108493   +      end;
MPRINT(EM_DIAGRAM):   end;
1108494   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1108495   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1108496   +            GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1108497   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108498   +         end;
MPRINT(EM_DIAGRAM):   end;
1108499   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108500   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1108501   +               GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1108502   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108503   +            end;
MPRINT(EM_DIAGRAM):   end;
1108504   +         end;
MPRINT(EM_DIAGRAM):   end;
1108505   +      end;
MPRINT(EM_DIAGRAM):   end;
1108506   +   end;
MPRINT(EM_DIAGRAM):   end;
1108507   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1108508   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1108509   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1108510   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1108511   +               GRP_RFMstat5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 1;
1108512   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108513   +            end;
MPRINT(EM_DIAGRAM):   end;
1108514   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1108515   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1108516   +                  GRP_RFMstat6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 1;
1108517   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108518   +               end;
MPRINT(EM_DIAGRAM):   end;
1108519   +            end;
MPRINT(EM_DIAGRAM):   end;
1108520   +         end;
MPRINT(EM_DIAGRAM):   end;
1108521   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108522   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1108523   +               GRP_RFMstat7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 1;
1108524   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108525   +            end;
MPRINT(EM_DIAGRAM):   end;
1108526   +         end;
MPRINT(EM_DIAGRAM):   end;
1108527   +      end;
MPRINT(EM_DIAGRAM):   end;
1108528   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1108529   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1108530   +            GRP_RFMstat8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 1;
1108531   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108532   +         end;
MPRINT(EM_DIAGRAM):   end;
1108533   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108534   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1108535   +               GRP_RFMstat9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 1;
1108536   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108537   +            end;
MPRINT(EM_DIAGRAM):   end;
1108538   +         end;
MPRINT(EM_DIAGRAM):   end;
1108539   +      end;
MPRINT(EM_DIAGRAM):   end;
1108540   +   end;
MPRINT(EM_DIAGRAM):   end;
1108541   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1108542   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1108543   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1108544   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1108545   +      GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
1108546   +      GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
1108547   +      GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
1108548   +      GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
1108549   +      GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
1108550   +      GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
1108551   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1108552   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1108553   +   end;
MPRINT(EM_DIAGRAM):   end;
1108554   +end;
MPRINT(EM_DIAGRAM):   end;
1108555   +
1108556   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1108557   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
1108558   +        GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
1108559   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1108560   +GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1108561   +GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1108562   +GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1108563   +GRP_RMntFrq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 0;
1108564   +GRP_RMntFrq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 0;
1108565   +GRP_RMntFrq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 0;
1108566   +GRP_RMntFrq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 0;
1108567   +GRP_RMntFrq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 0;
1108568   +GRP_RMntFrq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 0;
1108569   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1108570   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1108571   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1108572   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1108573   +   GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
1108574   +   GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
1108575   +   GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
1108576   +   GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
1108577   +   GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
1108578   +   GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
1108579   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1108580   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1108581   +end;
MPRINT(EM_DIAGRAM):   end;
1108582   +else do;
MPRINT(EM_DIAGRAM):   else do;
1108583   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1108584   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1108585   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1108586   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1108587   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1108588   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1108589   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1108590   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1108591   +               GRP_RMntFrq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 1;
1108592   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108593   +            end;
MPRINT(EM_DIAGRAM):   end;
1108594   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1108595   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1108596   +                  GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1108597   +                  GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1108598   +                  GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1108599   +                  GRP_RMntFrq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = -1;
1108600   +                  GRP_RMntFrq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = -1;
1108601   +                  GRP_RMntFrq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = -1;
1108602   +                  GRP_RMntFrq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = -1;
1108603   +                  GRP_RMntFrq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = -1;
1108604   +                  GRP_RMntFrq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = -1;
1108605   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108606   +               end;
MPRINT(EM_DIAGRAM):   end;
1108607   +            end;
MPRINT(EM_DIAGRAM):   end;
1108608   +         end;
MPRINT(EM_DIAGRAM):   end;
1108609   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108610   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1108611   +               GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1108612   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108613   +            end;
MPRINT(EM_DIAGRAM):   end;
1108614   +         end;
MPRINT(EM_DIAGRAM):   end;
1108615   +      end;
MPRINT(EM_DIAGRAM):   end;
1108616   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1108617   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1108618   +            GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1108619   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108620   +         end;
MPRINT(EM_DIAGRAM):   end;
1108621   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108622   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1108623   +               GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1108624   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108625   +            end;
MPRINT(EM_DIAGRAM):   end;
1108626   +         end;
MPRINT(EM_DIAGRAM):   end;
1108627   +      end;
MPRINT(EM_DIAGRAM):   end;
1108628   +   end;
MPRINT(EM_DIAGRAM):   end;
1108629   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1108630   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1108631   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1108632   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1108633   +               GRP_RMntFrq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 1;
1108634   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108635   +            end;
MPRINT(EM_DIAGRAM):   end;
1108636   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1108637   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1108638   +                  GRP_RMntFrq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 1;
1108639   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108640   +               end;
MPRINT(EM_DIAGRAM):   end;
1108641   +            end;
MPRINT(EM_DIAGRAM):   end;
1108642   +         end;
MPRINT(EM_DIAGRAM):   end;
1108643   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108644   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1108645   +               GRP_RMntFrq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 1;
1108646   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108647   +            end;
MPRINT(EM_DIAGRAM):   end;
1108648   +         end;
MPRINT(EM_DIAGRAM):   end;
1108649   +      end;
MPRINT(EM_DIAGRAM):   end;
1108650   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1108651   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1108652   +            GRP_RMntFrq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 1;
1108653   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108654   +         end;
MPRINT(EM_DIAGRAM):   end;
1108655   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108656   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1108657   +               GRP_RMntFrq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 1;
1108658   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108659   +            end;
MPRINT(EM_DIAGRAM):   end;
1108660   +         end;
MPRINT(EM_DIAGRAM):   end;
1108661   +      end;
MPRINT(EM_DIAGRAM):   end;
1108662   +   end;
MPRINT(EM_DIAGRAM):   end;
1108663   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1108664   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1108665   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1108666   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1108667   +      GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
1108668   +      GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
1108669   +      GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
1108670   +      GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
1108671   +      GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
1108672   +      GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
1108673   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1108674   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1108675   +   end;
MPRINT(EM_DIAGRAM):   end;
1108676   +end;
MPRINT(EM_DIAGRAM):   end;
1108677   +
1108678   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1108679   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
1108680   +        GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
1108681   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1108682   +GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1108683   +GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1108684   +GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1108685   +GRP_Recency5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 0;
1108686   +GRP_Recency6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 0;
1108687   +GRP_Recency7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 0;
1108688   +GRP_Recency8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 0;
1108689   +GRP_Recency9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 0;
1108690   +GRP_Recency10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 0;
1108691   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1108692   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1108693   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1108694   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1108695   +   GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
1108696   +   GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
1108697   +   GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
1108698   +   GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
1108699   +   GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
1108700   +   GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
1108701   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1108702   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1108703   +end;
MPRINT(EM_DIAGRAM):   end;
1108704   +else do;
MPRINT(EM_DIAGRAM):   else do;
1108705   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1108706   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1108707   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1108708   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1108709   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1108710   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1108711   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1108712   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1108713   +               GRP_Recency10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 1;
1108714   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108715   +            end;
MPRINT(EM_DIAGRAM):   end;
1108716   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1108717   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1108718   +                  GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1108719   +                  GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1108720   +                  GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1108721   +                  GRP_Recency5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = -1;
1108722   +                  GRP_Recency6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = -1;
1108723   +                  GRP_Recency7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = -1;
1108724   +                  GRP_Recency8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = -1;
1108725   +                  GRP_Recency9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = -1;
1108726   +                  GRP_Recency10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = -1;
1108727   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108728   +               end;
MPRINT(EM_DIAGRAM):   end;
1108729   +            end;
MPRINT(EM_DIAGRAM):   end;
1108730   +         end;
MPRINT(EM_DIAGRAM):   end;
1108731   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108732   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1108733   +               GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1108734   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108735   +            end;
MPRINT(EM_DIAGRAM):   end;
1108736   +         end;
MPRINT(EM_DIAGRAM):   end;
1108737   +      end;
MPRINT(EM_DIAGRAM):   end;
1108738   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1108739   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1108740   +            GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1108741   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108742   +         end;
MPRINT(EM_DIAGRAM):   end;
1108743   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108744   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1108745   +               GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1108746   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108747   +            end;
MPRINT(EM_DIAGRAM):   end;
1108748   +         end;
MPRINT(EM_DIAGRAM):   end;
1108749   +      end;
MPRINT(EM_DIAGRAM):   end;
1108750   +   end;
MPRINT(EM_DIAGRAM):   end;
1108751   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1108752   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1108753   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1108754   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1108755   +               GRP_Recency5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 1;
1108756   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108757   +            end;
MPRINT(EM_DIAGRAM):   end;
1108758   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1108759   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1108760   +                  GRP_Recency6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 1;
1108761   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108762   +               end;
MPRINT(EM_DIAGRAM):   end;
1108763   +            end;
MPRINT(EM_DIAGRAM):   end;
1108764   +         end;
MPRINT(EM_DIAGRAM):   end;
1108765   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108766   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1108767   +               GRP_Recency7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 1;
1108768   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108769   +            end;
MPRINT(EM_DIAGRAM):   end;
1108770   +         end;
MPRINT(EM_DIAGRAM):   end;
1108771   +      end;
MPRINT(EM_DIAGRAM):   end;
1108772   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1108773   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1108774   +            GRP_Recency8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 1;
1108775   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108776   +         end;
MPRINT(EM_DIAGRAM):   end;
1108777   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1108778   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1108779   +               GRP_Recency9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 1;
1108780   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1108781   +            end;
MPRINT(EM_DIAGRAM):   end;
1108782   +         end;
MPRINT(EM_DIAGRAM):   end;
1108783   +      end;
MPRINT(EM_DIAGRAM):   end;
1108784   +   end;
MPRINT(EM_DIAGRAM):   end;
1108785   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1108786   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1108787   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1108788   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1108789   +      GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
1108790   +      GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
1108791   +      GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
1108792   +      GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
1108793   +      GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
1108794   +      GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
1108795   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1108796   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1108797   +   end;
MPRINT(EM_DIAGRAM):   end;
1108798   +end;
MPRINT(EM_DIAGRAM):   end;
1108799   +
1108800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1108801   +*** Checking missing input Interval
1108802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1108803   +
1108804   +IF NMISS(
1108805   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1108806   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1108807   +
1108808   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1108809   +END;
MPRINT(EM_DIAGRAM):   END;
1108810   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1108811   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1108812   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1108813   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1108814   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1108815   +END;
MPRINT(EM_DIAGRAM):   END;
1108816   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1108817   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1108818   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1108819   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1108820   +END;
MPRINT(EM_DIAGRAM):   END;
1108821   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1108822   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1108823   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1108824   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1108825   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1108826   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1108827   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1108828   +   H1x1_1  =     48.9465081991162 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 48.9465081991162 * S_Year_Birth ;
1108829   +   H1x1_2  =     2.02087365254286 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.02087365254286 * S_Year_Birth ;
1108830   +   H1x1_3  =      2.4592532691129 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.4592532691129 * S_Year_Birth ;
1108831   +   H1x1_1  = H1x1_1  +     0.71676376330119 * GRP_AcceptedCmp52
1108832   +          +    -0.92635980793428 * GRP_AcceptedCmpTotal3
1108833   +          +    -0.28730763810705 * GRP_Frq2  +     0.51925889916312 * GRP_Frq3
1108834   +          +     -0.6431651730272 * GRP_Frq4  +    -1.23700914617998 * GRP_Frq5
1108835   +          +    -0.16744940694414 * GRP_Frq6  +    -0.30152573091873 * GRP_Frq7
1108836   +          +     -1.3314768147468 * GRP_Frq8  +     0.17126339432009 * GRP_Frq9
1108837   +          +     -0.0889204149078 * GRP_Frq10  +      0.4741194060187 *
1108838   +        GRP_Income2  +     1.56070730507658 * GRP_Income3
1108839   +          +     0.53746893731356 * GRP_Income4  +    -0.76738101410035 *
1108840   +        GRP_Income5  +     0.85451657926949 * GRP_Income6
1108841   +          +     0.76132605887735 * GRP_Income7  +     0.06592406535671 *
1108842   +        GRP_Income8  +     1.97305302340144 * GRP_Income9
1108843   +          +     1.02012810874527 * GRP_Income10  +     0.02631203134579 *
1108844   +        GRP_Mnt2  +    -1.30050547549954 * GRP_Mnt3  +    -0.36906367733678 *
1108845   +        GRP_Mnt4  +     1.04522826393693 * GRP_Mnt5  +     0.62644301984134 *
1108846   +        GRP_Mnt6  +     1.15385855214269 * GRP_Mnt7  +    -0.82602046556465 *
1108847   +        GRP_Mnt8  +     -0.4111324432654 * GRP_Mnt9  +    -0.56476276333863 *
1108848   +        GRP_Mnt10  +     0.52471556990605 * GRP_MntFishProducts3
1108849   +          +     0.16044770035396 * GRP_MntFishProducts4
1108850   +          +    -1.17374131153541 * GRP_MntFishProducts5
1108851   +          +    -0.83131801764513 * GRP_MntFishProducts6
1108852   +          +     1.14299447378441 * GRP_MntFishProducts7
1108853   +          +    -0.15781477960507 * GRP_MntFishProducts8
1108854   +          +    -1.12153624062142 * GRP_MntFishProducts9
1108855   +          +     0.23353899882952 * GRP_MntFishProducts10
1108856   +          +      0.9934704930855 * GRP_MntGoldProds2
1108857   +          +     0.55747340998385 * GRP_MntGoldProds3
1108858   +          +    -0.17034801431646 * GRP_MntGoldProds4
1108859   +          +     1.21830221546251 * GRP_MntGoldProds5
1108860   +          +    -1.22259417805613 * GRP_MntGoldProds6
1108861   +          +    -0.36828783291156 * GRP_MntGoldProds7
1108862   +          +     0.78525677330014 * GRP_MntGoldProds8
1108863   +          +     0.47984476584191 * GRP_MntGoldProds9
1108864   +          +     0.03467373901273 * GRP_MntGoldProds10
1108865   +          +    -0.57349410415913 * GRP_MntMeatProducts2
1108866   +          +     0.65134044606103 * GRP_MntMeatProducts3
1108867   +          +     0.36788044128902 * GRP_MntMeatProducts4
1108868   +          +     0.29120969129561 * GRP_MntMeatProducts5
1108869   +          +    -1.36110766617809 * GRP_MntMeatProducts6
1108870   +          +    -0.33627963920768 * GRP_MntMeatProducts7
1108871   +          +     0.29864505305537 * GRP_MntMeatProducts8
1108872   +          +     0.20571131972856 * GRP_MntMeatProducts9
1108873   +          +     0.50414797440093 * GRP_MntMeatProducts10
1108874   +          +    -1.72121615822238 * GRP_MntSweetProducts3
1108875   +          +     -0.6848717524032 * GRP_MntSweetProducts4
1108876   +          +     0.21764928333182 * GRP_MntSweetProducts5
1108877   +          +      0.5156326916797 * GRP_MntSweetProducts6
1108878   +          +    -1.81239268036233 * GRP_MntSweetProducts7
1108879   +          +     1.69793128774016 * GRP_MntSweetProducts8
1108880   +          +     0.21494191976556 * GRP_MntSweetProducts9
1108881   +          +    -1.36662509099176 * GRP_MntSweetProducts10
1108882   +          +    -0.62845147000994 * GRP_MntWines2  +     0.95185291016713 *
1108883   +        GRP_MntWines3  +    -0.69708425204065 * GRP_MntWines4
1108884   +          +    -1.23435797956339 * GRP_MntWines5  +     -1.5220790223763 *
1108885   +        GRP_MntWines6  +      0.2067568077444 * GRP_MntWines7
1108886   +          +     0.87704257787756 * GRP_MntWines8  +    -1.99552292812582 *
1108887   +        GRP_MntWines9  +    -0.07587861352893 * GRP_MntWines10
1108888   +          +     0.35815441966601 * GRP_NumCatalogPurchases3
1108889   +          +     0.07176464499033 * GRP_NumCatalogPurchases4
1108890   +          +     0.29459918891622 * GRP_NumCatalogPurchases5
1108891   +          +     0.31886968573327 * GRP_NumCatalogPurchases6
1108892   +          +    -1.51387976023239 * GRP_NumCatalogPurchases7
1108893   +          +     1.20860019572302 * GRP_NumDistPurchases2
1108894   +          +     0.46210628473586 * GRP_NumDistPurchases3
1108895   +          +    -2.56072327490522 * GRP_NumDistPurchases4
1108896   +          +     1.03435677588053 * GRP_NumDistPurchases5
1108897   +          +     0.04522378064572 * GRP_NumDistPurchases6
1108898   +          +    -0.85331194553641 * GRP_NumDistPurchases7
1108899   +          +    -1.22935279264677 * GRP_NumDistPurchases8
1108900   +          +    -0.65851400385577 * GRP_NumDistPurchases9
1108901   +          +    -1.01774823358732 * GRP_NumDistPurchases10
1108902   +          +    -0.86377318792053 * GRP_NumWebPurchases2
1108903   +          +     0.21661789250787 * GRP_NumWebPurchases3
1108904   +          +    -1.30691605989363 * GRP_NumWebPurchases4
1108905   +          +    -0.48532556674706 * GRP_NumWebPurchases5
1108906   +          +     0.59310004264709 * GRP_NumWebPurchases6
1108907   +          +     0.43335009213506 * GRP_NumWebPurchases7
1108908   +          +     -0.7639814067765 * GRP_NumWebPurchases8
1108909   +          +     1.38321438368337 * GRP_NumWebVisitsMonth2
1108910   +          +     0.47188296824861 * GRP_NumWebVisitsMonth3
1108911   +          +    -1.78625193231398 * GRP_NumWebVisitsMonth4
1108912   +          +     1.64086827442453 * GRP_NumWebVisitsMonth5
1108913   +          +     0.03446991492896 * GRP_NumWebVisitsMonth6
1108914   +          +    -0.45614880997983 * GRP_NumWebVisitsMonth7
1108915   +          +     0.42333060077089 * GRP_NumWebVisitsMonth8
1108916   +          +    -0.26497911055373 * GRP_RFMstat2  +     1.41331191509815 *
1108917   +        GRP_RFMstat3  +    -0.72899210329908 * GRP_RFMstat4
1108918   +          +    -0.51925237587027 * GRP_RFMstat5  +    -0.12861049633485 *
1108919   +        GRP_RFMstat6  +    -1.05799117155955 * GRP_RFMstat7
1108920   +          +     0.92142033704749 * GRP_RFMstat8  +      0.4817018906046 *
1108921   +        GRP_RFMstat9  +    -1.21700873377512 * GRP_RFMstat10
1108922   +          +    -0.44993227310411 * GRP_RMntFrq2  +     1.02278288492285 *
1108923   +        GRP_RMntFrq3  +    -0.52153555031696 * GRP_RMntFrq4
1108924   +          +     1.28928411047852 * GRP_RMntFrq5  +    -1.71778296055387 *
1108925   +        GRP_RMntFrq6  +    -0.19028690696286 * GRP_RMntFrq7
1108926   +          +    -0.62011590396692 * GRP_RMntFrq8  +     1.45129397542294 *
1108927   +        GRP_RMntFrq9  +     0.06615784080128 * GRP_RMntFrq10
1108928   +          +    -0.32041425963328 * GRP_Recency2  +     -0.9881569760974 *
1108929   +        GRP_Recency3  +    -0.51344461817292 * GRP_Recency4
1108930   +          +     1.16861419470805 * GRP_Recency5  +     0.18835458430028 *
1108931   +        GRP_Recency6  +     2.84664593413438 * GRP_Recency7
1108932   +          +     -0.1813906971641 * GRP_Recency8  +    -0.16805479054549 *
1108933   +        GRP_Recency9  +     0.02055980478388 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.71676376330119 * GRP_AcceptedCmp52 +
-0.92635980793428 * GRP_AcceptedCmpTotal3 + -0.28730763810705 * GRP_Frq2 + 0.51925889916312 *
GRP_Frq3 + -0.6431651730272 * GRP_Frq4 + -1.23700914617998 * GRP_Frq5 + -0.16744940694414 *
GRP_Frq6 + -0.30152573091873 * GRP_Frq7 + -1.3314768147468 * GRP_Frq8 + 0.17126339432009 *
GRP_Frq9 + -0.0889204149078 * GRP_Frq10 + 0.4741194060187 * GRP_Income2 + 1.56070730507658 *
GRP_Income3 + 0.53746893731356 * GRP_Income4 + -0.76738101410035 * GRP_Income5 +
0.85451657926949 * GRP_Income6 + 0.76132605887735 * GRP_Income7 + 0.06592406535671 *
GRP_Income8 + 1.97305302340144 * GRP_Income9 + 1.02012810874527 * GRP_Income10 +
0.02631203134579 * GRP_Mnt2 + -1.30050547549954 * GRP_Mnt3 + -0.36906367733678 * GRP_Mnt4 +
1.04522826393693 * GRP_Mnt5 + 0.62644301984134 * GRP_Mnt6 + 1.15385855214269 * GRP_Mnt7 +
-0.82602046556465 * GRP_Mnt8 + -0.4111324432654 * GRP_Mnt9 + -0.56476276333863 * GRP_Mnt10 +
0.52471556990605 * GRP_MntFishProducts3 + 0.16044770035396 * GRP_MntFishProducts4 +
-1.17374131153541 * GRP_MntFishProducts5 + -0.83131801764513 * GRP_MntFishProducts6 +
1.14299447378441 * GRP_MntFishProducts7 + -0.15781477960507 * GRP_MntFishProducts8 +
-1.12153624062142 * GRP_MntFishProducts9 + 0.23353899882952 * GRP_MntFishProducts10 +
0.9934704930855 * GRP_MntGoldProds2 + 0.55747340998385 * GRP_MntGoldProds3 + -0.17034801431646
* GRP_MntGoldProds4 + 1.21830221546251 * GRP_MntGoldProds5 + -1.22259417805613 *
GRP_MntGoldProds6 + -0.36828783291156 * GRP_MntGoldProds7 + 0.78525677330014 *
GRP_MntGoldProds8 + 0.47984476584191 * GRP_MntGoldProds9 + 0.03467373901273 *
GRP_MntGoldProds10 + -0.57349410415913 * GRP_MntMeatProducts2 + 0.65134044606103 *
GRP_MntMeatProducts3 + 0.36788044128902 * GRP_MntMeatProducts4 + 0.29120969129561 *
GRP_MntMeatProducts5 + -1.36110766617809 * GRP_MntMeatProducts6 + -0.33627963920768 *
GRP_MntMeatProducts7 + 0.29864505305537 * GRP_MntMeatProducts8 + 0.20571131972856 *
GRP_MntMeatProducts9 + 0.50414797440093 * GRP_MntMeatProducts10 + -1.72121615822238 *
GRP_MntSweetProducts3 + -0.6848717524032 * GRP_MntSweetProducts4 + 0.21764928333182 *
GRP_MntSweetProducts5 + 0.5156326916797 * GRP_MntSweetProducts6 + -1.81239268036233 *
GRP_MntSweetProducts7 + 1.69793128774016 * GRP_MntSweetProducts8 + 0.21494191976556 *
GRP_MntSweetProducts9 + -1.36662509099176 * GRP_MntSweetProducts10 + -0.62845147000994 *
GRP_MntWines2 + 0.95185291016713 * GRP_MntWines3 + -0.69708425204065 * GRP_MntWines4 +
-1.23435797956339 * GRP_MntWines5 + -1.5220790223763 * GRP_MntWines6 + 0.2067568077444 *
GRP_MntWines7 + 0.87704257787756 * GRP_MntWines8 + -1.99552292812582 * GRP_MntWines9 +
-0.07587861352893 * GRP_MntWines10 + 0.35815441966601 * GRP_NumCatalogPurchases3 +
0.07176464499033 * GRP_NumCatalogPurchases4 + 0.29459918891622 * GRP_NumCatalogPurchases5 +
0.31886968573327 * GRP_NumCatalogPurchases6 + -1.51387976023239 * GRP_NumCatalogPurchases7 +
1.20860019572302 * GRP_NumDistPurchases2 + 0.46210628473586 * GRP_NumDistPurchases3 +
-2.56072327490522 * GRP_NumDistPurchases4 + 1.03435677588053 * GRP_NumDistPurchases5 +
0.04522378064572 * GRP_NumDistPurchases6 + -0.85331194553641 * GRP_NumDistPurchases7 +
-1.22935279264677 * GRP_NumDistPurchases8 + -0.65851400385577 * GRP_NumDistPurchases9 +
-1.01774823358732 * GRP_NumDistPurchases10 + -0.86377318792053 * GRP_NumWebPurchases2 +
0.21661789250787 * GRP_NumWebPurchases3 + -1.30691605989363 * GRP_NumWebPurchases4 +
-0.48532556674706 * GRP_NumWebPurchases5 + 0.59310004264709 * GRP_NumWebPurchases6 +
0.43335009213506 * GRP_NumWebPurchases7 + -0.7639814067765 * GRP_NumWebPurchases8 +
1.38321438368337 * GRP_NumWebVisitsMonth2 + 0.47188296824861 * GRP_NumWebVisitsMonth3 +
-1.78625193231398 * GRP_NumWebVisitsMonth4 + 1.64086827442453 * GRP_NumWebVisitsMonth5 +
0.03446991492896 * GRP_NumWebVisitsMonth6 + -0.45614880997983 * GRP_NumWebVisitsMonth7 +
0.42333060077089 * GRP_NumWebVisitsMonth8 + -0.26497911055373 * GRP_RFMstat2 +
1.41331191509815 * GRP_RFMstat3 + -0.72899210329908 * GRP_RFMstat4 + -0.51925237587027 *
GRP_RFMstat5 + -0.12861049633485 * GRP_RFMstat6 + -1.05799117155955 * GRP_RFMstat7 +
0.92142033704749 * GRP_RFMstat8 + 0.4817018906046 * GRP_RFMstat9 + -1.21700873377512 *
GRP_RFMstat10 + -0.44993227310411 * GRP_RMntFrq2 + 1.02278288492285 * GRP_RMntFrq3 +
-0.52153555031696 * GRP_RMntFrq4 + 1.28928411047852 * GRP_RMntFrq5 + -1.71778296055387 *
GRP_RMntFrq6 + -0.19028690696286 * GRP_RMntFrq7 + -0.62011590396692 * GRP_RMntFrq8 +
1.45129397542294 * GRP_RMntFrq9 + 0.06615784080128 * GRP_RMntFrq10 + -0.32041425963328 *
GRP_Recency2 + -0.9881569760974 * GRP_Recency3 + -0.51344461817292 * GRP_Recency4 +
1.16861419470805 * GRP_Recency5 + 0.18835458430028 * GRP_Recency6 + 2.84664593413438 *
GRP_Recency7 + -0.1813906971641 * GRP_Recency8 + -0.16805479054549 * GRP_Recency9 +
0.02055980478388 * GRP_Recency10 ;
1108934   +   H1x1_2  = H1x1_2  +     1.54906602910059 * GRP_AcceptedCmp52
1108935   +          +     2.27617601085527 * GRP_AcceptedCmpTotal3
1108936   +          +     1.48540449527868 * GRP_Frq2  +    -0.60923069898807 * GRP_Frq3
1108937   +          +     -0.0368535358215 * GRP_Frq4  +    -1.18941365357904 * GRP_Frq5
1108938   +          +     1.22445800124678 * GRP_Frq6  +     -1.3516431363703 * GRP_Frq7
1108939   +          +    -0.48231848710081 * GRP_Frq8  +    -0.46429007154719 * GRP_Frq9
1108940   +          +    -0.59573416306808 * GRP_Frq10  +     0.15720399083979 *
1108941   +        GRP_Income2  +    -0.61345730206179 * GRP_Income3
1108942   +          +    -2.60180837454575 * GRP_Income4  +     1.68721717972638 *
1108943   +        GRP_Income5  +    -1.14043189774882 * GRP_Income6
1108944   +          +    -1.65034796071558 * GRP_Income7  +     0.96537091831533 *
1108945   +        GRP_Income8  +      1.9815044443061 * GRP_Income9
1108946   +          +    -0.82350660692239 * GRP_Income10  +     2.86005545579867 *
1108947   +        GRP_Mnt2  +    -1.64805200594142 * GRP_Mnt3  +     0.82206598750464 *
1108948   +        GRP_Mnt4  +      -1.785895388304 * GRP_Mnt5  +    -1.17108148178058 *
1108949   +        GRP_Mnt6  +     0.08089063222924 * GRP_Mnt7  +    -0.09820504774867 *
1108950   +        GRP_Mnt8  +    -2.15609481865681 * GRP_Mnt9  +     0.32675137919046 *
1108951   +        GRP_Mnt10  +     1.22381214535693 * GRP_MntFishProducts3
1108952   +          +    -0.78126288260758 * GRP_MntFishProducts4
1108953   +          +    -1.21111214275067 * GRP_MntFishProducts5
1108954   +          +     0.28720250492064 * GRP_MntFishProducts6
1108955   +          +      0.4852822639139 * GRP_MntFishProducts7
1108956   +          +    -2.04291612093927 * GRP_MntFishProducts8
1108957   +          +    -0.24795489067995 * GRP_MntFishProducts9
1108958   +          +    -1.76136796298463 * GRP_MntFishProducts10
1108959   +          +      0.4263187803616 * GRP_MntGoldProds2
1108960   +          +     1.84909440915903 * GRP_MntGoldProds3
1108961   +          +    -0.39798177649193 * GRP_MntGoldProds4
1108962   +          +    -2.54755160294536 * GRP_MntGoldProds5
1108963   +          +    -1.28982494547534 * GRP_MntGoldProds6
1108964   +          +    -1.67021273990857 * GRP_MntGoldProds7
1108965   +          +     -2.3042297184959 * GRP_MntGoldProds8
1108966   +          +     3.09097855619745 * GRP_MntGoldProds9
1108967   +          +     1.93600988736611 * GRP_MntGoldProds10
1108968   +          +     0.09848257045454 * GRP_MntMeatProducts2
1108969   +          +     1.08304168417965 * GRP_MntMeatProducts3
1108970   +          +     1.91882445829551 * GRP_MntMeatProducts4
1108971   +          +     0.35520536863258 * GRP_MntMeatProducts5
1108972   +          +    -1.11205797114044 * GRP_MntMeatProducts6
1108973   +          +     0.43563318671882 * GRP_MntMeatProducts7
1108974   +          +    -0.74270605349827 * GRP_MntMeatProducts8
1108975   +          +    -0.29550693297591 * GRP_MntMeatProducts9
1108976   +          +      0.2766601721624 * GRP_MntMeatProducts10
1108977   +          +     0.75058577420898 * GRP_MntSweetProducts3
1108978   +          +    -0.56185376554629 * GRP_MntSweetProducts4
1108979   +          +    -1.05152828789454 * GRP_MntSweetProducts5
1108980   +          +     1.00220971259397 * GRP_MntSweetProducts6
1108981   +          +    -0.77193622487428 * GRP_MntSweetProducts7
1108982   +          +     0.26442183085042 * GRP_MntSweetProducts8
1108983   +          +     1.25825351006964 * GRP_MntSweetProducts9
1108984   +          +    -0.00709190308776 * GRP_MntSweetProducts10
1108985   +          +     1.88786953703682 * GRP_MntWines2  +    -2.10043706907947 *
1108986   +        GRP_MntWines3  +    -0.37517500522875 * GRP_MntWines4
1108987   +          +    -0.18006973196751 * GRP_MntWines5  +    -0.95199068268302 *
1108988   +        GRP_MntWines6  +     0.06801155856486 * GRP_MntWines7
1108989   +          +     0.34478968361592 * GRP_MntWines8  +     2.54128029741065 *
1108990   +        GRP_MntWines9  +     0.23106135005771 * GRP_MntWines10
1108991   +          +     0.39725833376834 * GRP_NumCatalogPurchases3
1108992   +          +    -0.67139494868643 * GRP_NumCatalogPurchases4
1108993   +          +      1.5447002000778 * GRP_NumCatalogPurchases5
1108994   +          +     0.09330433399681 * GRP_NumCatalogPurchases6
1108995   +          +     0.62825597584327 * GRP_NumCatalogPurchases7
1108996   +          +     1.18162241824504 * GRP_NumDistPurchases2
1108997   +          +     -1.9946583037891 * GRP_NumDistPurchases3
1108998   +          +     1.89348453467246 * GRP_NumDistPurchases4
1108999   +          +    -1.04666376883699 * GRP_NumDistPurchases5
1109000   +          +     0.25268529470975 * GRP_NumDistPurchases6
1109001   +          +     1.86652956276603 * GRP_NumDistPurchases7
1109002   +          +    -0.69782473674049 * GRP_NumDistPurchases8
1109003   +          +       -1.15138058126 * GRP_NumDistPurchases9
1109004   +          +    -3.19969298738512 * GRP_NumDistPurchases10
1109005   +          +     1.12885105205807 * GRP_NumWebPurchases2
1109006   +          +     2.25528779471396 * GRP_NumWebPurchases3
1109007   +          +    -0.23663724121963 * GRP_NumWebPurchases4
1109008   +          +    -0.78009469666272 * GRP_NumWebPurchases5
1109009   +          +     1.77370357588641 * GRP_NumWebPurchases6
1109010   +          +     1.22392891369749 * GRP_NumWebPurchases7
1109011   +          +    -1.61655624441792 * GRP_NumWebPurchases8
1109012   +          +    -0.13001746156436 * GRP_NumWebVisitsMonth2
1109013   +          +    -0.72575926018145 * GRP_NumWebVisitsMonth3
1109014   +          +    -0.94816479697152 * GRP_NumWebVisitsMonth4
1109015   +          +     1.16144102182867 * GRP_NumWebVisitsMonth5
1109016   +          +     1.70938770020645 * GRP_NumWebVisitsMonth6
1109017   +          +    -0.48304241282132 * GRP_NumWebVisitsMonth7
1109018   +          +     0.70529232466454 * GRP_NumWebVisitsMonth8
1109019   +          +     0.65772145666627 * GRP_RFMstat2  +     2.86660915599885 *
1109020   +        GRP_RFMstat3  +    -0.22923576328844 * GRP_RFMstat4
1109021   +          +     0.03385950626308 * GRP_RFMstat5  +     0.62446884850413 *
1109022   +        GRP_RFMstat6  +    -1.56316157740304 * GRP_RFMstat7
1109023   +          +     0.98813608226531 * GRP_RFMstat8  +    -0.63565291977652 *
1109024   +        GRP_RFMstat9  +    -0.82989429531226 * GRP_RFMstat10
1109025   +          +     0.11925727600741 * GRP_RMntFrq2  +    -0.46501464175926 *
1109026   +        GRP_RMntFrq3  +    -3.30325300706323 * GRP_RMntFrq4
1109027   +          +    -1.34536441554295 * GRP_RMntFrq5  +    -3.84413028109146 *
1109028   +        GRP_RMntFrq6  +     0.47106170435895 * GRP_RMntFrq7
1109029   +          +    -0.72605486027727 * GRP_RMntFrq8  +     0.63627621829641 *
1109030   +        GRP_RMntFrq9  +    -4.54092878045381 * GRP_RMntFrq10
1109031   +          +     0.58944361382169 * GRP_Recency2  +    -1.67787675914457 *
1109032   +        GRP_Recency3  +    -0.91945083634427 * GRP_Recency4
1109033   +          +    -0.23606342713401 * GRP_Recency5  +     0.82900786271425 *
1109034   +        GRP_Recency6  +     0.17592316512272 * GRP_Recency7
1109035   +          +     1.95888212107252 * GRP_Recency8  +      -1.118949694735 *
1109036   +        GRP_Recency9  +     -0.6213199815951 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.54906602910059 * GRP_AcceptedCmp52 +
2.27617601085527 * GRP_AcceptedCmpTotal3 + 1.48540449527868 * GRP_Frq2 + -0.60923069898807 *
GRP_Frq3 + -0.0368535358215 * GRP_Frq4 + -1.18941365357904 * GRP_Frq5 + 1.22445800124678 *
GRP_Frq6 + -1.3516431363703 * GRP_Frq7 + -0.48231848710081 * GRP_Frq8 + -0.46429007154719 *
GRP_Frq9 + -0.59573416306808 * GRP_Frq10 + 0.15720399083979 * GRP_Income2 + -0.61345730206179
* GRP_Income3 + -2.60180837454575 * GRP_Income4 + 1.68721717972638 * GRP_Income5 +
-1.14043189774882 * GRP_Income6 + -1.65034796071558 * GRP_Income7 + 0.96537091831533 *
GRP_Income8 + 1.9815044443061 * GRP_Income9 + -0.82350660692239 * GRP_Income10 +
2.86005545579867 * GRP_Mnt2 + -1.64805200594142 * GRP_Mnt3 + 0.82206598750464 * GRP_Mnt4 +
-1.785895388304 * GRP_Mnt5 + -1.17108148178058 * GRP_Mnt6 + 0.08089063222924 * GRP_Mnt7 +
-0.09820504774867 * GRP_Mnt8 + -2.15609481865681 * GRP_Mnt9 + 0.32675137919046 * GRP_Mnt10 +
1.22381214535693 * GRP_MntFishProducts3 + -0.78126288260758 * GRP_MntFishProducts4 +
-1.21111214275067 * GRP_MntFishProducts5 + 0.28720250492064 * GRP_MntFishProducts6 +
0.4852822639139 * GRP_MntFishProducts7 + -2.04291612093927 * GRP_MntFishProducts8 +
-0.24795489067995 * GRP_MntFishProducts9 + -1.76136796298463 * GRP_MntFishProducts10 +
0.4263187803616 * GRP_MntGoldProds2 + 1.84909440915903 * GRP_MntGoldProds3 + -0.39798177649193
* GRP_MntGoldProds4 + -2.54755160294536 * GRP_MntGoldProds5 + -1.28982494547534 *
GRP_MntGoldProds6 + -1.67021273990857 * GRP_MntGoldProds7 + -2.3042297184959 *
GRP_MntGoldProds8 + 3.09097855619745 * GRP_MntGoldProds9 + 1.93600988736611 *
GRP_MntGoldProds10 + 0.09848257045454 * GRP_MntMeatProducts2 + 1.08304168417965 *
GRP_MntMeatProducts3 + 1.91882445829551 * GRP_MntMeatProducts4 + 0.35520536863258 *
GRP_MntMeatProducts5 + -1.11205797114044 * GRP_MntMeatProducts6 + 0.43563318671882 *
GRP_MntMeatProducts7 + -0.74270605349827 * GRP_MntMeatProducts8 + -0.29550693297591 *
GRP_MntMeatProducts9 + 0.2766601721624 * GRP_MntMeatProducts10 + 0.75058577420898 *
GRP_MntSweetProducts3 + -0.56185376554629 * GRP_MntSweetProducts4 + -1.05152828789454 *
GRP_MntSweetProducts5 + 1.00220971259397 * GRP_MntSweetProducts6 + -0.77193622487428 *
GRP_MntSweetProducts7 + 0.26442183085042 * GRP_MntSweetProducts8 + 1.25825351006964 *
GRP_MntSweetProducts9 + -0.00709190308776 * GRP_MntSweetProducts10 + 1.88786953703682 *
GRP_MntWines2 + -2.10043706907947 * GRP_MntWines3 + -0.37517500522875 * GRP_MntWines4 +
-0.18006973196751 * GRP_MntWines5 + -0.95199068268302 * GRP_MntWines6 + 0.06801155856486 *
GRP_MntWines7 + 0.34478968361592 * GRP_MntWines8 + 2.54128029741065 * GRP_MntWines9 +
0.23106135005771 * GRP_MntWines10 + 0.39725833376834 * GRP_NumCatalogPurchases3 +
-0.67139494868643 * GRP_NumCatalogPurchases4 + 1.5447002000778 * GRP_NumCatalogPurchases5 +
0.09330433399681 * GRP_NumCatalogPurchases6 + 0.62825597584327 * GRP_NumCatalogPurchases7 +
1.18162241824504 * GRP_NumDistPurchases2 + -1.9946583037891 * GRP_NumDistPurchases3 +
1.89348453467246 * GRP_NumDistPurchases4 + -1.04666376883699 * GRP_NumDistPurchases5 +
0.25268529470975 * GRP_NumDistPurchases6 + 1.86652956276603 * GRP_NumDistPurchases7 +
-0.69782473674049 * GRP_NumDistPurchases8 + -1.15138058126 * GRP_NumDistPurchases9 +
-3.19969298738512 * GRP_NumDistPurchases10 + 1.12885105205807 * GRP_NumWebPurchases2 +
2.25528779471396 * GRP_NumWebPurchases3 + -0.23663724121963 * GRP_NumWebPurchases4 +
-0.78009469666272 * GRP_NumWebPurchases5 + 1.77370357588641 * GRP_NumWebPurchases6 +
1.22392891369749 * GRP_NumWebPurchases7 + -1.61655624441792 * GRP_NumWebPurchases8 +
-0.13001746156436 * GRP_NumWebVisitsMonth2 + -0.72575926018145 * GRP_NumWebVisitsMonth3 +
-0.94816479697152 * GRP_NumWebVisitsMonth4 + 1.16144102182867 * GRP_NumWebVisitsMonth5 +
1.70938770020645 * GRP_NumWebVisitsMonth6 + -0.48304241282132 * GRP_NumWebVisitsMonth7 +
0.70529232466454 * GRP_NumWebVisitsMonth8 + 0.65772145666627 * GRP_RFMstat2 + 2.86660915599885
* GRP_RFMstat3 + -0.22923576328844 * GRP_RFMstat4 + 0.03385950626308 * GRP_RFMstat5 +
0.62446884850413 * GRP_RFMstat6 + -1.56316157740304 * GRP_RFMstat7 + 0.98813608226531 *
GRP_RFMstat8 + -0.63565291977652 * GRP_RFMstat9 + -0.82989429531226 * GRP_RFMstat10 +
0.11925727600741 * GRP_RMntFrq2 + -0.46501464175926 * GRP_RMntFrq3 + -3.30325300706323 *
GRP_RMntFrq4 + -1.34536441554295 * GRP_RMntFrq5 + -3.84413028109146 * GRP_RMntFrq6 +
0.47106170435895 * GRP_RMntFrq7 + -0.72605486027727 * GRP_RMntFrq8 + 0.63627621829641 *
GRP_RMntFrq9 + -4.54092878045381 * GRP_RMntFrq10 + 0.58944361382169 * GRP_Recency2 +
-1.67787675914457 * GRP_Recency3 + -0.91945083634427 * GRP_Recency4 + -0.23606342713401 *
GRP_Recency5 + 0.82900786271425 * GRP_Recency6 + 0.17592316512272 * GRP_Recency7 +
1.95888212107252 * GRP_Recency8 + -1.118949694735 * GRP_Recency9 + -0.6213199815951 *
GRP_Recency10 ;
1109037   +   H1x1_3  = H1x1_3  +     0.93426558045547 * GRP_AcceptedCmp52
1109038   +          +     0.58768630988717 * GRP_AcceptedCmpTotal3
1109039   +          +    -1.51960343620707 * GRP_Frq2  +    -1.98554513483427 * GRP_Frq3
1109040   +          +     0.99517325158626 * GRP_Frq4  +    -1.43534788488184 * GRP_Frq5
1109041   +          +    -1.74159367781906 * GRP_Frq6  +    -2.24167428586446 * GRP_Frq7
1109042   +          +    -1.26021179170898 * GRP_Frq8  +     0.10708963233949 * GRP_Frq9
1109043   +          +    -0.08287659877378 * GRP_Frq10  +    -0.29602203429318 *
1109044   +        GRP_Income2  +    -1.70148026213507 * GRP_Income3
1109045   +          +     0.28159451624585 * GRP_Income4  +      0.6177722344415 *
1109046   +        GRP_Income5  +    -2.23556766589076 * GRP_Income6
1109047   +          +     3.93505019030186 * GRP_Income7  +     -2.0824621480124 *
1109048   +        GRP_Income8  +     1.88660584456731 * GRP_Income9
1109049   +          +     0.90295722629145 * GRP_Income10  +     0.04984689303414 *
1109050   +        GRP_Mnt2  +    -0.50038201931754 * GRP_Mnt3  +    -1.62831680351379 *
1109051   +        GRP_Mnt4  +      1.4492453889036 * GRP_Mnt5  +    -0.19189043815297 *
1109052   +        GRP_Mnt6  +     0.64443706548299 * GRP_Mnt7  +     0.17668938010528 *
1109053   +        GRP_Mnt8  +     1.28610426388581 * GRP_Mnt9  +    -2.01393224902779 *
1109054   +        GRP_Mnt10  +     -2.3797115089998 * GRP_MntFishProducts3
1109055   +          +     1.20810501566648 * GRP_MntFishProducts4
1109056   +          +    -0.31798087525347 * GRP_MntFishProducts5
1109057   +          +    -0.69237701732465 * GRP_MntFishProducts6
1109058   +          +    -0.54891111072215 * GRP_MntFishProducts7
1109059   +          +    -0.62013170184324 * GRP_MntFishProducts8
1109060   +          +     1.17121982810796 * GRP_MntFishProducts9
1109061   +          +    -3.62687099938455 * GRP_MntFishProducts10
1109062   +          +     2.07559340651906 * GRP_MntGoldProds2
1109063   +          +     0.78435949490522 * GRP_MntGoldProds3
1109064   +          +      1.0403239403189 * GRP_MntGoldProds4
1109065   +          +    -0.66844808788018 * GRP_MntGoldProds5
1109066   +          +    -0.48019660076402 * GRP_MntGoldProds6
1109067   +          +      0.6062935347869 * GRP_MntGoldProds7
1109068   +          +    -0.38141722319712 * GRP_MntGoldProds8
1109069   +          +    -1.92694153724383 * GRP_MntGoldProds9
1109070   +          +     -2.3811309398323 * GRP_MntGoldProds10
1109071   +          +     0.10759987908894 * GRP_MntMeatProducts2
1109072   +          +     2.14459189351851 * GRP_MntMeatProducts3
1109073   +          +    -2.45166597704042 * GRP_MntMeatProducts4
1109074   +          +     -0.7650846730976 * GRP_MntMeatProducts5
1109075   +          +    -3.51160870099496 * GRP_MntMeatProducts6
1109076   +          +     -0.8259206362298 * GRP_MntMeatProducts7
1109077   +          +     0.29979404593461 * GRP_MntMeatProducts8
1109078   +          +     -0.9589168823801 * GRP_MntMeatProducts9
1109079   +          +     -0.2853616099647 * GRP_MntMeatProducts10
1109080   +          +     0.49848568055456 * GRP_MntSweetProducts3
1109081   +          +    -0.72776474415712 * GRP_MntSweetProducts4
1109082   +          +     0.74313666927565 * GRP_MntSweetProducts5
1109083   +          +     0.84606469030976 * GRP_MntSweetProducts6
1109084   +          +    -0.38145119762704 * GRP_MntSweetProducts7
1109085   +          +    -1.43497411133169 * GRP_MntSweetProducts8
1109086   +          +    -0.84817446071124 * GRP_MntSweetProducts9
1109087   +          +    -0.09240038512346 * GRP_MntSweetProducts10
1109088   +          +    -1.08774185820812 * GRP_MntWines2  +    -0.39031626452132 *
1109089   +        GRP_MntWines3  +    -0.58688830577606 * GRP_MntWines4
1109090   +          +     0.22911849699923 * GRP_MntWines5  +     2.74308065676411 *
1109091   +        GRP_MntWines6  +    -1.07317065256082 * GRP_MntWines7
1109092   +          +    -1.81019667683263 * GRP_MntWines8  +    -0.17488280044697 *
1109093   +        GRP_MntWines9  +     0.76965731666557 * GRP_MntWines10
1109094   +          +     1.45683083695577 * GRP_NumCatalogPurchases3
1109095   +          +     2.55194057820162 * GRP_NumCatalogPurchases4
1109096   +          +    -0.63390649143698 * GRP_NumCatalogPurchases5
1109097   +          +    -0.55465371468416 * GRP_NumCatalogPurchases6
1109098   +          +    -1.41375459861532 * GRP_NumCatalogPurchases7
1109099   +          +     0.71013591832499 * GRP_NumDistPurchases2
1109100   +          +    -0.99941348822511 * GRP_NumDistPurchases3
1109101   +          +    -1.71222646914551 * GRP_NumDistPurchases4
1109102   +          +     -0.8355751544695 * GRP_NumDistPurchases5
1109103   +          +     1.09722441702491 * GRP_NumDistPurchases6
1109104   +          +    -0.36564797968298 * GRP_NumDistPurchases7
1109105   +          +    -1.39173348713836 * GRP_NumDistPurchases8
1109106   +          +    -1.61047806766864 * GRP_NumDistPurchases9
1109107   +          +    -0.31673455057836 * GRP_NumDistPurchases10
1109108   +          +     1.71749014777959 * GRP_NumWebPurchases2
1109109   +          +    -0.61464421268827 * GRP_NumWebPurchases3
1109110   +          +     0.55447637104071 * GRP_NumWebPurchases4
1109111   +          +    -1.81323137433091 * GRP_NumWebPurchases5
1109112   +          +    -1.22214842263814 * GRP_NumWebPurchases6
1109113   +          +     0.28275706587518 * GRP_NumWebPurchases7
1109114   +          +     1.22923531582435 * GRP_NumWebPurchases8
1109115   +          +     2.85238831013779 * GRP_NumWebVisitsMonth2
1109116   +          +    -3.29385804821776 * GRP_NumWebVisitsMonth3
1109117   +          +     2.20618829723914 * GRP_NumWebVisitsMonth4
1109118   +          +     3.24203514545625 * GRP_NumWebVisitsMonth5
1109119   +          +    -0.84086906040118 * GRP_NumWebVisitsMonth6
1109120   +          +      0.3333837280375 * GRP_NumWebVisitsMonth7
1109121   +          +    -1.25762217338287 * GRP_NumWebVisitsMonth8
1109122   +          +     1.30519643221337 * GRP_RFMstat2  +    -0.02627804260872 *
1109123   +        GRP_RFMstat3  +     1.14984082845421 * GRP_RFMstat4
1109124   +          +     0.83225475534069 * GRP_RFMstat5  +    -0.42428538184132 *
1109125   +        GRP_RFMstat6  +     1.94081253380073 * GRP_RFMstat7
1109126   +          +    -0.76825104075311 * GRP_RFMstat8  +    -0.46997664130688 *
1109127   +        GRP_RFMstat9  +     0.65545683682605 * GRP_RFMstat10
1109128   +          +     0.22000711002242 * GRP_RMntFrq2  +    -0.02562020055082 *
1109129   +        GRP_RMntFrq3  +    -2.48187788965499 * GRP_RMntFrq4
1109130   +          +     0.66508637059331 * GRP_RMntFrq5  +     1.45751327667919 *
1109131   +        GRP_RMntFrq6  +    -1.96809727947204 * GRP_RMntFrq7
1109132   +          +     -0.8082292555095 * GRP_RMntFrq8  +     1.11614264001551 *
1109133   +        GRP_RMntFrq9  +    -1.43870507651779 * GRP_RMntFrq10
1109134   +          +    -0.57256200762816 * GRP_Recency2  +    -1.71538421405636 *
1109135   +        GRP_Recency3  +    -2.19388644962641 * GRP_Recency4
1109136   +          +    -1.37716674588339 * GRP_Recency5  +     1.63969065912165 *
1109137   +        GRP_Recency6  +     -1.6515031413567 * GRP_Recency7
1109138   +          +      2.3895996064376 * GRP_Recency8  +     2.13861252560781 *
1109139   +        GRP_Recency9  +    -0.93183650754976 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.93426558045547 * GRP_AcceptedCmp52 +
0.58768630988717 * GRP_AcceptedCmpTotal3 + -1.51960343620707 * GRP_Frq2 + -1.98554513483427 *
GRP_Frq3 + 0.99517325158626 * GRP_Frq4 + -1.43534788488184 * GRP_Frq5 + -1.74159367781906 *
GRP_Frq6 + -2.24167428586446 * GRP_Frq7 + -1.26021179170898 * GRP_Frq8 + 0.10708963233949 *
GRP_Frq9 + -0.08287659877378 * GRP_Frq10 + -0.29602203429318 * GRP_Income2 + -1.70148026213507
* GRP_Income3 + 0.28159451624585 * GRP_Income4 + 0.6177722344415 * GRP_Income5 +
-2.23556766589076 * GRP_Income6 + 3.93505019030186 * GRP_Income7 + -2.0824621480124 *
GRP_Income8 + 1.88660584456731 * GRP_Income9 + 0.90295722629145 * GRP_Income10 +
0.04984689303414 * GRP_Mnt2 + -0.50038201931754 * GRP_Mnt3 + -1.62831680351379 * GRP_Mnt4 +
1.4492453889036 * GRP_Mnt5 + -0.19189043815297 * GRP_Mnt6 + 0.64443706548299 * GRP_Mnt7 +
0.17668938010528 * GRP_Mnt8 + 1.28610426388581 * GRP_Mnt9 + -2.01393224902779 * GRP_Mnt10 +
-2.3797115089998 * GRP_MntFishProducts3 + 1.20810501566648 * GRP_MntFishProducts4 +
-0.31798087525347 * GRP_MntFishProducts5 + -0.69237701732465 * GRP_MntFishProducts6 +
-0.54891111072215 * GRP_MntFishProducts7 + -0.62013170184324 * GRP_MntFishProducts8 +
1.17121982810796 * GRP_MntFishProducts9 + -3.62687099938455 * GRP_MntFishProducts10 +
2.07559340651906 * GRP_MntGoldProds2 + 0.78435949490522 * GRP_MntGoldProds3 + 1.0403239403189
* GRP_MntGoldProds4 + -0.66844808788018 * GRP_MntGoldProds5 + -0.48019660076402 *
GRP_MntGoldProds6 + 0.6062935347869 * GRP_MntGoldProds7 + -0.38141722319712 *
GRP_MntGoldProds8 + -1.92694153724383 * GRP_MntGoldProds9 + -2.3811309398323 *
GRP_MntGoldProds10 + 0.10759987908894 * GRP_MntMeatProducts2 + 2.14459189351851 *
GRP_MntMeatProducts3 + -2.45166597704042 * GRP_MntMeatProducts4 + -0.7650846730976 *
GRP_MntMeatProducts5 + -3.51160870099496 * GRP_MntMeatProducts6 + -0.8259206362298 *
GRP_MntMeatProducts7 + 0.29979404593461 * GRP_MntMeatProducts8 + -0.9589168823801 *
GRP_MntMeatProducts9 + -0.2853616099647 * GRP_MntMeatProducts10 + 0.49848568055456 *
GRP_MntSweetProducts3 + -0.72776474415712 * GRP_MntSweetProducts4 + 0.74313666927565 *
GRP_MntSweetProducts5 + 0.84606469030976 * GRP_MntSweetProducts6 + -0.38145119762704 *
GRP_MntSweetProducts7 + -1.43497411133169 * GRP_MntSweetProducts8 + -0.84817446071124 *
GRP_MntSweetProducts9 + -0.09240038512346 * GRP_MntSweetProducts10 + -1.08774185820812 *
GRP_MntWines2 + -0.39031626452132 * GRP_MntWines3 + -0.58688830577606 * GRP_MntWines4 +
0.22911849699923 * GRP_MntWines5 + 2.74308065676411 * GRP_MntWines6 + -1.07317065256082 *
GRP_MntWines7 + -1.81019667683263 * GRP_MntWines8 + -0.17488280044697 * GRP_MntWines9 +
0.76965731666557 * GRP_MntWines10 + 1.45683083695577 * GRP_NumCatalogPurchases3 +
2.55194057820162 * GRP_NumCatalogPurchases4 + -0.63390649143698 * GRP_NumCatalogPurchases5 +
-0.55465371468416 * GRP_NumCatalogPurchases6 + -1.41375459861532 * GRP_NumCatalogPurchases7 +
0.71013591832499 * GRP_NumDistPurchases2 + -0.99941348822511 * GRP_NumDistPurchases3 +
-1.71222646914551 * GRP_NumDistPurchases4 + -0.8355751544695 * GRP_NumDistPurchases5 +
1.09722441702491 * GRP_NumDistPurchases6 + -0.36564797968298 * GRP_NumDistPurchases7 +
-1.39173348713836 * GRP_NumDistPurchases8 + -1.61047806766864 * GRP_NumDistPurchases9 +
-0.31673455057836 * GRP_NumDistPurchases10 + 1.71749014777959 * GRP_NumWebPurchases2 +
-0.61464421268827 * GRP_NumWebPurchases3 + 0.55447637104071 * GRP_NumWebPurchases4 +
-1.81323137433091 * GRP_NumWebPurchases5 + -1.22214842263814 * GRP_NumWebPurchases6 +
0.28275706587518 * GRP_NumWebPurchases7 + 1.22923531582435 * GRP_NumWebPurchases8 +
2.85238831013779 * GRP_NumWebVisitsMonth2 + -3.29385804821776 * GRP_NumWebVisitsMonth3 +
2.20618829723914 * GRP_NumWebVisitsMonth4 + 3.24203514545625 * GRP_NumWebVisitsMonth5 +
-0.84086906040118 * GRP_NumWebVisitsMonth6 + 0.3333837280375 * GRP_NumWebVisitsMonth7 +
-1.25762217338287 * GRP_NumWebVisitsMonth8 + 1.30519643221337 * GRP_RFMstat2 +
-0.02627804260872 * GRP_RFMstat3 + 1.14984082845421 * GRP_RFMstat4 + 0.83225475534069 *
GRP_RFMstat5 + -0.42428538184132 * GRP_RFMstat6 + 1.94081253380073 * GRP_RFMstat7 +
-0.76825104075311 * GRP_RFMstat8 + -0.46997664130688 * GRP_RFMstat9 + 0.65545683682605 *
GRP_RFMstat10 + 0.22000711002242 * GRP_RMntFrq2 + -0.02562020055082 * GRP_RMntFrq3 +
-2.48187788965499 * GRP_RMntFrq4 + 0.66508637059331 * GRP_RMntFrq5 + 1.45751327667919 *
GRP_RMntFrq6 + -1.96809727947204 * GRP_RMntFrq7 + -0.8082292555095 * GRP_RMntFrq8 +
1.11614264001551 * GRP_RMntFrq9 + -1.43870507651779 * GRP_RMntFrq10 + -0.57256200762816 *
GRP_Recency2 + -1.71538421405636 * GRP_Recency3 + -2.19388644962641 * GRP_Recency4 +
-1.37716674588339 * GRP_Recency5 + 1.63969065912165 * GRP_Recency6 + -1.6515031413567 *
GRP_Recency7 + 2.3895996064376 * GRP_Recency8 + 2.13861252560781 * GRP_Recency9 +
-0.93183650754976 * GRP_Recency10 ;
1109140   +   H1x1_1  =    -0.72291715628882 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.72291715628882 + H1x1_1 ;
1109141   +   H1x1_2  =    -0.26964559997869 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.26964559997869 + H1x1_2 ;
1109142   +   H1x1_3  =     0.02355688048223 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02355688048223 + H1x1_3 ;
1109143   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1109144   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1109145   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1109146   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1109147   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1109148   +END;
MPRINT(EM_DIAGRAM):   END;
1109149   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1109150   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1109151   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1109152   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1109153   +END;
MPRINT(EM_DIAGRAM):   END;
1109154   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1109155   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1109156   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1109157   +
1109158   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1109159   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1109160   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1109161   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1109162   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1109163   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1109164   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1109165   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1109166   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1109167   +end;
MPRINT(EM_DIAGRAM):   end;
1109168   +else do;
MPRINT(EM_DIAGRAM):   else do;
1109169   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1109170   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1109171   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1109172   +   end;
MPRINT(EM_DIAGRAM):   end;
1109173   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1109174   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1109175   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1109176   +   end;
MPRINT(EM_DIAGRAM):   end;
1109177   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1109178   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1109179   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1109180   +   end;
MPRINT(EM_DIAGRAM):   end;
1109181   +end;
MPRINT(EM_DIAGRAM):   end;
1109182   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1109183   +   P_DepVar1  =    -0.57143452341404 * H1x1_1  +    -7.51528087621546 * H1x1_2
1109184   +          +    -7.29696024025406 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.57143452341404 * H1x1_1 + -7.51528087621546 * H1x1_2 +
-7.29696024025406 * H1x1_3 ;
1109185   +   P_DepVar1  =     1.14031494500233 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.14031494500233 + P_DepVar1 ;
1109186   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1109187   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1109188   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1109189   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1109190   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1109191   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1109192   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1109193   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1109194   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1109195   +END;
MPRINT(EM_DIAGRAM):   END;
1109196   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1109197   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1109198   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1109199   +END;
MPRINT(EM_DIAGRAM):   END;
1109200   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1109201   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1109202   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1109203   +END;
MPRINT(EM_DIAGRAM):   END;
1109204   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1109205   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1109206   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1109207   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1109208   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1109209   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1109210   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1109211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1109212   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1109213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1109214   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1109215   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1109216   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1109217   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1109218   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1109219   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1109220   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1109221   +END;
MPRINT(EM_DIAGRAM):   END;
1109222   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1109223   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1109224   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1109225   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1109226    run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL25_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1109227    quit;
1109228    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1109229    filename emflow
1109229  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural25: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1109230    *------------------------------------------------------------*;
1109231    * AutoNeural25: Scoring VALIDATE data;
1109232    *------------------------------------------------------------*;
1109233    data EMWS8.AutoNeural25_VALIDATE
1109234    / view=EMWS8.AutoNeural25_VALIDATE
1109235    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_VALIDATE / view=EMWS8.AutoNeural25_VALIDATE ;
1109236    set EMWS8.BINNING_VALIDATE
1109237    ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
1109238    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMFLOWSCORE.sas.
1109239   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1109240   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1109241   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1109242   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1109243   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1109244   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1109245   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1109246   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1109247   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1109248   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1109249   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1109250   +LENGTH _WARN_ $4
1109251   +      F_DepVar  $ 12
1109252   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1109253   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1109254   +
1109255   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1109256   +
1109257   +      label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
1109258   +
1109259   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1109260   +
1109261   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1109262   +
1109263   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1109264   +
1109265   +      label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
1109266   +
1109267   +      label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
1109268   +
1109269   +      label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
1109270   +
1109271   +      label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
1109272   +
1109273   +      label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
1109274   +
1109275   +      label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
1109276   +
1109277   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1109278   +
1109279   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1109280   +
1109281   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1109282   +
1109283   +      label GRP_Income5 = 'Dummy: GRP_Income=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Income5 = 'Dummy: GRP_Income=5' ;
1109284   +
1109285   +      label GRP_Income6 = 'Dummy: GRP_Income=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Income6 = 'Dummy: GRP_Income=6' ;
1109286   +
1109287   +      label GRP_Income7 = 'Dummy: GRP_Income=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Income7 = 'Dummy: GRP_Income=7' ;
1109288   +
1109289   +      label GRP_Income8 = 'Dummy: GRP_Income=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Income8 = 'Dummy: GRP_Income=8' ;
1109290   +
1109291   +      label GRP_Income9 = 'Dummy: GRP_Income=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Income9 = 'Dummy: GRP_Income=9' ;
1109292   +
1109293   +      label GRP_Income10 = 'Dummy: GRP_Income=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Income10 = 'Dummy: GRP_Income=10' ;
1109294   +
1109295   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1109296   +
1109297   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1109298   +
1109299   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1109300   +
1109301   +      label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
1109302   +
1109303   +      label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
1109304   +
1109305   +      label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
1109306   +
1109307   +      label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
1109308   +
1109309   +      label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
1109310   +
1109311   +      label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
1109312   +
1109313   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1109314   +
1109315   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1109316   +
1109317   +      label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
1109318   +
1109319   +      label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
1109320   +
1109321   +      label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
1109322   +
1109323   +      label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
1109324   +
1109325   +      label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
1109326   +
1109327   +      label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
1109328   +
1109329   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1109330   +
1109331   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1109332   +
1109333   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1109334   +
1109335   +      label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
1109336   +
1109337   +      label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
1109338   +
1109339   +      label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
1109340   +
1109341   +      label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
1109342   +
1109343   +      label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
1109344   +
1109345   +      label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
1109346   +
1109347   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1109348   +
1109349   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1109350   +
1109351   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1109352   +
1109353   +      label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
1109354   +
1109355   +      label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
1109356   +
1109357   +      label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
1109358   +
1109359   +      label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
1109360   +
1109361   +      label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
1109362   +
1109363   +      label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
1109364   +
1109365   +      label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
1109366   +
1109367   +      label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
1109368   +
1109369   +      label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
1109370   +
1109371   +      label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
1109372   +
1109373   +      label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
1109374   +
1109375   +      label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
1109376   +
1109377   +      label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
1109378   +
1109379   +      label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
1109380   +
1109381   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1109382   +
1109383   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1109384   +
1109385   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1109386   +
1109387   +      label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
1109388   +
1109389   +      label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
1109390   +
1109391   +      label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
1109392   +
1109393   +      label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
1109394   +
1109395   +      label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
1109396   +
1109397   +      label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
1109398   +
1109399   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1109400   +
1109401   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1109402   +
1109403   +      label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
1109404   +
1109405   +      label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
1109406   +
1109407   +      label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
1109408   +
1109409   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1109410   +
1109411   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1109412   +
1109413   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1109414   +
1109415   +      label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
1109416   +
1109417   +      label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
1109418   +
1109419   +      label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
1109420   +
1109421   +      label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
1109422   +
1109423   +      label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
1109424   +
1109425   +      label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
1109426   +
1109427   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1109428   +
1109429   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1109430   +
1109431   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1109432   +
1109433   +      label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
1109434   +
1109435   +      label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
1109436   +
1109437   +      label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
1109438   +
1109439   +      label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
1109440   +
1109441   +      label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
1109442   +
1109443   +      label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
1109444   +
1109445   +      label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
1109446   +
The SAS System
 
1109447   +      label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
1109448   +
1109449   +      label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
1109450   +
1109451   +      label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
1109452   +
1109453   +      label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
1109454   +
1109455   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1109456   +
1109457   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1109458   +
1109459   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1109460   +
1109461   +      label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
1109462   +
1109463   +      label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
1109464   +
1109465   +      label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
1109466   +
1109467   +      label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
1109468   +
1109469   +      label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
1109470   +
1109471   +      label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
1109472   +
1109473   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1109474   +
1109475   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1109476   +
1109477   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1109478   +
1109479   +      label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
1109480   +
1109481   +      label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
1109482   +
1109483   +      label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
1109484   +
1109485   +      label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
1109486   +
1109487   +      label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
1109488   +
1109489   +      label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
1109490   +
1109491   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1109492   +
1109493   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1109494   +
1109495   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1109496   +
1109497   +      label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
1109498   +
1109499   +      label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
1109500   +
1109501   +      label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
1109502   +
1109503   +      label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
1109504   +
1109505   +      label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
1109506   +
1109507   +      label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
1109508   +
1109509   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1109510   +
1109511   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1109512   +
1109513   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1109514   +
1109515   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1109516   +
1109517   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1109518   +
1109519   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1109520   +
1109521   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1109522   +
1109523   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1109524   +
1109525   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1109526   +
1109527   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1109528   +
1109529   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1109530   +
1109531   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1109532   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1109533   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1109534   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1109535   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1109536   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1109537   +end;
MPRINT(EM_DIAGRAM):   end;
1109538   +else do;
MPRINT(EM_DIAGRAM):   else do;
1109539   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1109540   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1109541   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1109542   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1109543   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1109544   +   end;
MPRINT(EM_DIAGRAM):   end;
1109545   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1109546   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1109547   +   end;
MPRINT(EM_DIAGRAM):   end;
1109548   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1109549   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1109550   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1109551   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1109552   +   end;
MPRINT(EM_DIAGRAM):   end;
1109553   +end;
MPRINT(EM_DIAGRAM):   end;
1109554   +
1109555   +*** Generate dummy variables for GRP_AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmpTotal ;
1109556   +drop GRP_AcceptedCmpTotal3 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmpTotal3 ;
1109557   +if missing( GRP_AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmpTotal ) then do;
1109558   +   GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
1109559   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1109560   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1109561   +end;
MPRINT(EM_DIAGRAM):   end;
1109562   +else do;
MPRINT(EM_DIAGRAM):   else do;
1109563   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1109564   +   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
1109565   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1109566   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1109567   +      GRP_AcceptedCmpTotal3 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = 1;
1109568   +   end;
MPRINT(EM_DIAGRAM):   end;
1109569   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1109570   +      GRP_AcceptedCmpTotal3 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = -1;
1109571   +   end;
MPRINT(EM_DIAGRAM):   end;
1109572   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1109573   +      GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
1109574   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1109575   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1109576   +   end;
MPRINT(EM_DIAGRAM):   end;
1109577   +end;
MPRINT(EM_DIAGRAM):   end;
1109578   +
1109579   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1109580   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8 GRP_Frq9
1109581   +        GRP_Frq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8
GRP_Frq9 GRP_Frq10 ;
1109582   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1109583   +GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1109584   +GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1109585   +GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1109586   +GRP_Frq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 0;
1109587   +GRP_Frq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 0;
1109588   +GRP_Frq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 0;
1109589   +GRP_Frq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 0;
1109590   +GRP_Frq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 0;
1109591   +GRP_Frq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 0;
1109592   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1109593   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1109594   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1109595   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1109596   +   GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
1109597   +   GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
1109598   +   GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
1109599   +   GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
1109600   +   GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
1109601   +   GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
1109602   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1109603   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1109604   +end;
MPRINT(EM_DIAGRAM):   end;
1109605   +else do;
MPRINT(EM_DIAGRAM):   else do;
1109606   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1109607   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1109608   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1109609   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1109610   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1109611   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1109612   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1109613   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1109614   +               GRP_Frq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 1;
1109615   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109616   +            end;
MPRINT(EM_DIAGRAM):   end;
1109617   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1109618   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1109619   +                  GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1109620   +                  GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1109621   +                  GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1109622   +                  GRP_Frq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = -1;
1109623   +                  GRP_Frq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = -1;
1109624   +                  GRP_Frq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = -1;
1109625   +                  GRP_Frq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = -1;
1109626   +                  GRP_Frq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = -1;
1109627   +                  GRP_Frq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = -1;
1109628   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109629   +               end;
MPRINT(EM_DIAGRAM):   end;
1109630   +            end;
MPRINT(EM_DIAGRAM):   end;
1109631   +         end;
MPRINT(EM_DIAGRAM):   end;
1109632   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1109633   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1109634   +               GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1109635   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109636   +            end;
MPRINT(EM_DIAGRAM):   end;
1109637   +         end;
MPRINT(EM_DIAGRAM):   end;
1109638   +      end;
MPRINT(EM_DIAGRAM):   end;
1109639   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1109640   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1109641   +            GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1109642   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109643   +         end;
MPRINT(EM_DIAGRAM):   end;
1109644   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1109645   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1109646   +               GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1109647   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109648   +            end;
MPRINT(EM_DIAGRAM):   end;
1109649   +         end;
MPRINT(EM_DIAGRAM):   end;
1109650   +      end;
MPRINT(EM_DIAGRAM):   end;
1109651   +   end;
MPRINT(EM_DIAGRAM):   end;
1109652   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1109653   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1109654   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1109655   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1109656   +               GRP_Frq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 1;
1109657   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109658   +            end;
MPRINT(EM_DIAGRAM):   end;
1109659   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1109660   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1109661   +                  GRP_Frq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 1;
1109662   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109663   +               end;
MPRINT(EM_DIAGRAM):   end;
1109664   +            end;
MPRINT(EM_DIAGRAM):   end;
1109665   +         end;
MPRINT(EM_DIAGRAM):   end;
1109666   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1109667   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1109668   +               GRP_Frq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 1;
1109669   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109670   +            end;
MPRINT(EM_DIAGRAM):   end;
1109671   +         end;
MPRINT(EM_DIAGRAM):   end;
1109672   +      end;
MPRINT(EM_DIAGRAM):   end;
1109673   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1109674   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1109675   +            GRP_Frq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 1;
1109676   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109677   +         end;
MPRINT(EM_DIAGRAM):   end;
1109678   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1109679   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1109680   +               GRP_Frq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 1;
1109681   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109682   +            end;
MPRINT(EM_DIAGRAM):   end;
1109683   +         end;
MPRINT(EM_DIAGRAM):   end;
1109684   +      end;
MPRINT(EM_DIAGRAM):   end;
1109685   +   end;
MPRINT(EM_DIAGRAM):   end;
1109686   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1109687   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1109688   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1109689   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1109690   +      GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
1109691   +      GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
1109692   +      GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
1109693   +      GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
1109694   +      GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
1109695   +      GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
1109696   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1109697   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1109698   +   end;
MPRINT(EM_DIAGRAM):   end;
1109699   +end;
MPRINT(EM_DIAGRAM):   end;
1109700   +
1109701   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1109702   +drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6 GRP_Income7
1109703   +        GRP_Income8 GRP_Income9 GRP_Income10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6
GRP_Income7 GRP_Income8 GRP_Income9 GRP_Income10 ;
1109704   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1109705   +GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1109706   +GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1109707   +GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1109708   +GRP_Income5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 0;
1109709   +GRP_Income6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 0;
1109710   +GRP_Income7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 0;
1109711   +GRP_Income8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 0;
1109712   +GRP_Income9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 0;
1109713   +GRP_Income10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 0;
1109714   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1109715   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1109716   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1109717   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1109718   +   GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
1109719   +   GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
1109720   +   GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
1109721   +   GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
1109722   +   GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
1109723   +   GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
1109724   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1109725   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1109726   +end;
MPRINT(EM_DIAGRAM):   end;
1109727   +else do;
MPRINT(EM_DIAGRAM):   else do;
1109728   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1109729   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1109730   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1109731   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1109732   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1109733   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1109734   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1109735   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1109736   +               GRP_Income10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 1;
1109737   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109738   +            end;
MPRINT(EM_DIAGRAM):   end;
1109739   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1109740   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1109741   +                  GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1109742   +                  GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1109743   +                  GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1109744   +                  GRP_Income5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = -1;
1109745   +                  GRP_Income6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = -1;
1109746   +                  GRP_Income7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = -1;
1109747   +                  GRP_Income8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = -1;
1109748   +                  GRP_Income9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = -1;
1109749   +                  GRP_Income10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = -1;
1109750   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109751   +               end;
MPRINT(EM_DIAGRAM):   end;
1109752   +            end;
MPRINT(EM_DIAGRAM):   end;
1109753   +         end;
MPRINT(EM_DIAGRAM):   end;
1109754   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1109755   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1109756   +               GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1109757   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109758   +            end;
MPRINT(EM_DIAGRAM):   end;
1109759   +         end;
MPRINT(EM_DIAGRAM):   end;
1109760   +      end;
MPRINT(EM_DIAGRAM):   end;
1109761   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1109762   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1109763   +            GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1109764   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109765   +         end;
MPRINT(EM_DIAGRAM):   end;
1109766   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1109767   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1109768   +               GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1109769   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109770   +            end;
MPRINT(EM_DIAGRAM):   end;
1109771   +         end;
MPRINT(EM_DIAGRAM):   end;
1109772   +      end;
MPRINT(EM_DIAGRAM):   end;
1109773   +   end;
MPRINT(EM_DIAGRAM):   end;
1109774   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1109775   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1109776   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1109777   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1109778   +               GRP_Income5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 1;
1109779   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109780   +            end;
MPRINT(EM_DIAGRAM):   end;
1109781   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1109782   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1109783   +                  GRP_Income6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 1;
1109784   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109785   +               end;
MPRINT(EM_DIAGRAM):   end;
1109786   +            end;
MPRINT(EM_DIAGRAM):   end;
1109787   +         end;
MPRINT(EM_DIAGRAM):   end;
1109788   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1109789   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1109790   +               GRP_Income7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 1;
1109791   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109792   +            end;
MPRINT(EM_DIAGRAM):   end;
1109793   +         end;
MPRINT(EM_DIAGRAM):   end;
1109794   +      end;
MPRINT(EM_DIAGRAM):   end;
1109795   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1109796   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1109797   +            GRP_Income8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 1;
1109798   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109799   +         end;
MPRINT(EM_DIAGRAM):   end;
1109800   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1109801   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1109802   +               GRP_Income9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 1;
1109803   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109804   +            end;
MPRINT(EM_DIAGRAM):   end;
1109805   +         end;
MPRINT(EM_DIAGRAM):   end;
1109806   +      end;
MPRINT(EM_DIAGRAM):   end;
1109807   +   end;
MPRINT(EM_DIAGRAM):   end;
1109808   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1109809   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1109810   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1109811   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1109812   +      GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
1109813   +      GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
1109814   +      GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
1109815   +      GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
1109816   +      GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
1109817   +      GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
1109818   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1109819   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1109820   +   end;
MPRINT(EM_DIAGRAM):   end;
1109821   +end;
MPRINT(EM_DIAGRAM):   end;
1109822   +
1109823   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1109824   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8 GRP_Mnt9
1109825   +        GRP_Mnt10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8
GRP_Mnt9 GRP_Mnt10 ;
1109826   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1109827   +GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1109828   +GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1109829   +GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1109830   +GRP_Mnt5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 0;
1109831   +GRP_Mnt6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 0;
1109832   +GRP_Mnt7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 0;
1109833   +GRP_Mnt8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 0;
1109834   +GRP_Mnt9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 0;
1109835   +GRP_Mnt10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 0;
1109836   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1109837   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1109838   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1109839   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1109840   +   GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
1109841   +   GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
1109842   +   GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
1109843   +   GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
1109844   +   GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
1109845   +   GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
1109846   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1109847   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1109848   +end;
MPRINT(EM_DIAGRAM):   end;
1109849   +else do;
MPRINT(EM_DIAGRAM):   else do;
1109850   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1109851   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1109852   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1109853   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1109854   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1109855   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1109856   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1109857   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1109858   +               GRP_Mnt10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 1;
1109859   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109860   +            end;
MPRINT(EM_DIAGRAM):   end;
1109861   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1109862   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1109863   +                  GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1109864   +                  GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1109865   +                  GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1109866   +                  GRP_Mnt5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = -1;
1109867   +                  GRP_Mnt6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = -1;
1109868   +                  GRP_Mnt7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = -1;
1109869   +                  GRP_Mnt8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = -1;
1109870   +                  GRP_Mnt9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = -1;
1109871   +                  GRP_Mnt10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = -1;
1109872   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109873   +               end;
MPRINT(EM_DIAGRAM):   end;
1109874   +            end;
MPRINT(EM_DIAGRAM):   end;
1109875   +         end;
MPRINT(EM_DIAGRAM):   end;
1109876   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1109877   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1109878   +               GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1109879   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109880   +            end;
MPRINT(EM_DIAGRAM):   end;
1109881   +         end;
MPRINT(EM_DIAGRAM):   end;
1109882   +      end;
MPRINT(EM_DIAGRAM):   end;
1109883   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1109884   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1109885   +            GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1109886   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109887   +         end;
MPRINT(EM_DIAGRAM):   end;
1109888   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1109889   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1109890   +               GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1109891   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109892   +            end;
MPRINT(EM_DIAGRAM):   end;
1109893   +         end;
MPRINT(EM_DIAGRAM):   end;
1109894   +      end;
MPRINT(EM_DIAGRAM):   end;
1109895   +   end;
MPRINT(EM_DIAGRAM):   end;
1109896   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1109897   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1109898   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1109899   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1109900   +               GRP_Mnt5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 1;
1109901   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109902   +            end;
MPRINT(EM_DIAGRAM):   end;
1109903   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1109904   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1109905   +                  GRP_Mnt6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 1;
1109906   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109907   +               end;
MPRINT(EM_DIAGRAM):   end;
1109908   +            end;
MPRINT(EM_DIAGRAM):   end;
1109909   +         end;
MPRINT(EM_DIAGRAM):   end;
1109910   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1109911   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1109912   +               GRP_Mnt7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 1;
1109913   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109914   +            end;
MPRINT(EM_DIAGRAM):   end;
1109915   +         end;
MPRINT(EM_DIAGRAM):   end;
1109916   +      end;
MPRINT(EM_DIAGRAM):   end;
1109917   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1109918   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1109919   +            GRP_Mnt8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 1;
1109920   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109921   +         end;
MPRINT(EM_DIAGRAM):   end;
1109922   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1109923   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1109924   +               GRP_Mnt9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 1;
1109925   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109926   +            end;
MPRINT(EM_DIAGRAM):   end;
1109927   +         end;
MPRINT(EM_DIAGRAM):   end;
1109928   +      end;
MPRINT(EM_DIAGRAM):   end;
1109929   +   end;
MPRINT(EM_DIAGRAM):   end;
1109930   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1109931   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1109932   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1109933   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1109934   +      GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
1109935   +      GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
1109936   +      GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
1109937   +      GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
1109938   +      GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
1109939   +      GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
1109940   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1109941   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1109942   +   end;
MPRINT(EM_DIAGRAM):   end;
1109943   +end;
MPRINT(EM_DIAGRAM):   end;
1109944   +
1109945   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1109946   +drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
1109947   +        GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8
1109948   +        GRP_MntFishProducts9 GRP_MntFishProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8 GRP_MntFishProducts9
GRP_MntFishProducts10 ;
1109949   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1109950   +GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1109951   +GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1109952   +GRP_MntFishProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 0;
1109953   +GRP_MntFishProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 0;
1109954   +GRP_MntFishProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 0;
1109955   +GRP_MntFishProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 0;
1109956   +GRP_MntFishProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 0;
1109957   +GRP_MntFishProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 0;
1109958   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1109959   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1109960   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1109961   +   GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
1109962   +   GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
1109963   +   GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
1109964   +   GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
1109965   +   GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
1109966   +   GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
1109967   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1109968   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1109969   +end;
MPRINT(EM_DIAGRAM):   end;
1109970   +else do;
MPRINT(EM_DIAGRAM):   else do;
1109971   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1109972   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1109973   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1109974   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1109975   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1109976   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1109977   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1109978   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1109979   +               GRP_MntFishProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 1;
1109980   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109981   +            end;
MPRINT(EM_DIAGRAM):   end;
1109982   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1109983   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1109984   +                  GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1109985   +                  GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1109986   +                  GRP_MntFishProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = -1;
1109987   +                  GRP_MntFishProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = -1;
1109988   +                  GRP_MntFishProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = -1;
1109989   +                  GRP_MntFishProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = -1;
1109990   +                  GRP_MntFishProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = -1;
1109991   +                  GRP_MntFishProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = -1;
1109992   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1109993   +               end;
MPRINT(EM_DIAGRAM):   end;
1109994   +            end;
MPRINT(EM_DIAGRAM):   end;
1109995   +         end;
MPRINT(EM_DIAGRAM):   end;
1109996   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1109997   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1109998   +               GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1109999   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110000   +            end;
MPRINT(EM_DIAGRAM):   end;
1110001   +         end;
MPRINT(EM_DIAGRAM):   end;
1110002   +      end;
MPRINT(EM_DIAGRAM):   end;
1110003   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1110004   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1110005   +            GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1110006   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110007   +         end;
MPRINT(EM_DIAGRAM):   end;
1110008   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110009   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1110010   +               GRP_MntFishProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 1;
1110011   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110012   +            end;
MPRINT(EM_DIAGRAM):   end;
1110013   +         end;
MPRINT(EM_DIAGRAM):   end;
1110014   +      end;
MPRINT(EM_DIAGRAM):   end;
1110015   +   end;
MPRINT(EM_DIAGRAM):   end;
1110016   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1110017   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1110018   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1110019   +            GRP_MntFishProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 1;
1110020   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110021   +         end;
MPRINT(EM_DIAGRAM):   end;
1110022   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110023   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1110024   +               GRP_MntFishProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 1;
1110025   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110026   +            end;
MPRINT(EM_DIAGRAM):   end;
1110027   +         end;
MPRINT(EM_DIAGRAM):   end;
1110028   +      end;
MPRINT(EM_DIAGRAM):   end;
1110029   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1110030   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1110031   +            GRP_MntFishProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 1;
1110032   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110033   +         end;
MPRINT(EM_DIAGRAM):   end;
1110034   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110035   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1110036   +               GRP_MntFishProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 1;
1110037   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110038   +            end;
MPRINT(EM_DIAGRAM):   end;
1110039   +         end;
MPRINT(EM_DIAGRAM):   end;
1110040   +      end;
MPRINT(EM_DIAGRAM):   end;
1110041   +   end;
MPRINT(EM_DIAGRAM):   end;
1110042   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1110043   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1110044   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1110045   +      GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
1110046   +      GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
1110047   +      GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
1110048   +      GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
1110049   +      GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
1110050   +      GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
1110051   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1110052   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1110053   +   end;
MPRINT(EM_DIAGRAM):   end;
1110054   +end;
MPRINT(EM_DIAGRAM):   end;
1110055   +
1110056   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1110057   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 GRP_MntGoldProds5
1110058   +        GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8
1110059   +        GRP_MntGoldProds9 GRP_MntGoldProds10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4
GRP_MntGoldProds5 GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8 GRP_MntGoldProds9
GRP_MntGoldProds10 ;
1110060   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1110061   +GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1110062   +GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1110063   +GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1110064   +GRP_MntGoldProds5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 0;
1110065   +GRP_MntGoldProds6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 0;
1110066   +GRP_MntGoldProds7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 0;
1110067   +GRP_MntGoldProds8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 0;
1110068   +GRP_MntGoldProds9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 0;
1110069   +GRP_MntGoldProds10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 0;
1110070   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1110071   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1110072   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1110073   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1110074   +   GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
1110075   +   GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
1110076   +   GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
1110077   +   GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
1110078   +   GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
1110079   +   GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
1110080   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1110081   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1110082   +end;
MPRINT(EM_DIAGRAM):   end;
1110083   +else do;
MPRINT(EM_DIAGRAM):   else do;
1110084   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1110085   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1110086   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1110087   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1110088   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1110089   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1110090   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1110091   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1110092   +               GRP_MntGoldProds10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 1;
1110093   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110094   +            end;
MPRINT(EM_DIAGRAM):   end;
1110095   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1110096   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1110097   +                  GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1110098   +                  GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1110099   +                  GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1110100   +                  GRP_MntGoldProds5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = -1;
1110101   +                  GRP_MntGoldProds6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = -1;
1110102   +                  GRP_MntGoldProds7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = -1;
1110103   +                  GRP_MntGoldProds8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = -1;
1110104   +                  GRP_MntGoldProds9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = -1;
1110105   +                  GRP_MntGoldProds10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = -1;
1110106   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110107   +               end;
MPRINT(EM_DIAGRAM):   end;
1110108   +            end;
MPRINT(EM_DIAGRAM):   end;
1110109   +         end;
MPRINT(EM_DIAGRAM):   end;
1110110   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110111   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1110112   +               GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1110113   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110114   +            end;
MPRINT(EM_DIAGRAM):   end;
1110115   +         end;
MPRINT(EM_DIAGRAM):   end;
1110116   +      end;
MPRINT(EM_DIAGRAM):   end;
1110117   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1110118   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1110119   +            GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1110120   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110121   +         end;
MPRINT(EM_DIAGRAM):   end;
1110122   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110123   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1110124   +               GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1110125   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110126   +            end;
MPRINT(EM_DIAGRAM):   end;
1110127   +         end;
MPRINT(EM_DIAGRAM):   end;
1110128   +      end;
MPRINT(EM_DIAGRAM):   end;
1110129   +   end;
MPRINT(EM_DIAGRAM):   end;
1110130   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1110131   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1110132   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1110133   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1110134   +               GRP_MntGoldProds5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 1;
1110135   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110136   +            end;
MPRINT(EM_DIAGRAM):   end;
1110137   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1110138   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1110139   +                  GRP_MntGoldProds6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 1;
1110140   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110141   +               end;
MPRINT(EM_DIAGRAM):   end;
1110142   +            end;
MPRINT(EM_DIAGRAM):   end;
1110143   +         end;
MPRINT(EM_DIAGRAM):   end;
1110144   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110145   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1110146   +               GRP_MntGoldProds7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 1;
1110147   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110148   +            end;
MPRINT(EM_DIAGRAM):   end;
1110149   +         end;
MPRINT(EM_DIAGRAM):   end;
1110150   +      end;
MPRINT(EM_DIAGRAM):   end;
1110151   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1110152   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1110153   +            GRP_MntGoldProds8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 1;
1110154   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110155   +         end;
MPRINT(EM_DIAGRAM):   end;
1110156   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110157   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1110158   +               GRP_MntGoldProds9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 1;
1110159   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110160   +            end;
MPRINT(EM_DIAGRAM):   end;
1110161   +         end;
MPRINT(EM_DIAGRAM):   end;
1110162   +      end;
MPRINT(EM_DIAGRAM):   end;
1110163   +   end;
MPRINT(EM_DIAGRAM):   end;
1110164   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1110165   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1110166   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1110167   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1110168   +      GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
1110169   +      GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
1110170   +      GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
1110171   +      GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
1110172   +      GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
1110173   +      GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
1110174   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1110175   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1110176   +   end;
MPRINT(EM_DIAGRAM):   end;
1110177   +end;
MPRINT(EM_DIAGRAM):   end;
1110178   +
1110179   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1110180   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
1110181   +        GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7
1110182   +        GRP_MntMeatProducts8 GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7 GRP_MntMeatProducts8
GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
1110183   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1110184   +GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1110185   +GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1110186   +GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1110187   +GRP_MntMeatProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 0;
1110188   +GRP_MntMeatProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 0;
1110189   +GRP_MntMeatProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 0;
1110190   +GRP_MntMeatProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 0;
1110191   +GRP_MntMeatProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 0;
1110192   +GRP_MntMeatProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 0;
1110193   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1110194   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1110195   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1110196   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1110197   +   GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
1110198   +   GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
1110199   +   GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
1110200   +   GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
1110201   +   GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
1110202   +   GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
1110203   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1110204   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1110205   +end;
MPRINT(EM_DIAGRAM):   end;
1110206   +else do;
MPRINT(EM_DIAGRAM):   else do;
1110207   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1110208   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1110209   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1110210   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1110211   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1110212   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1110213   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1110214   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1110215   +               GRP_MntMeatProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 1;
1110216   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110217   +            end;
MPRINT(EM_DIAGRAM):   end;
1110218   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1110219   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1110220   +                  GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1110221   +                  GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1110222   +                  GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1110223   +                  GRP_MntMeatProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = -1;
1110224   +                  GRP_MntMeatProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = -1;
1110225   +                  GRP_MntMeatProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = -1;
1110226   +                  GRP_MntMeatProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = -1;
1110227   +                  GRP_MntMeatProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = -1;
1110228   +                  GRP_MntMeatProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = -1;
1110229   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110230   +               end;
MPRINT(EM_DIAGRAM):   end;
1110231   +            end;
MPRINT(EM_DIAGRAM):   end;
1110232   +         end;
MPRINT(EM_DIAGRAM):   end;
1110233   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110234   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1110235   +               GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1110236   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110237   +            end;
MPRINT(EM_DIAGRAM):   end;
1110238   +         end;
MPRINT(EM_DIAGRAM):   end;
1110239   +      end;
MPRINT(EM_DIAGRAM):   end;
1110240   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1110241   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1110242   +            GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1110243   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110244   +         end;
MPRINT(EM_DIAGRAM):   end;
1110245   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110246   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1110247   +               GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1110248   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110249   +            end;
MPRINT(EM_DIAGRAM):   end;
1110250   +         end;
MPRINT(EM_DIAGRAM):   end;
1110251   +      end;
MPRINT(EM_DIAGRAM):   end;
1110252   +   end;
MPRINT(EM_DIAGRAM):   end;
1110253   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1110254   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1110255   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1110256   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1110257   +               GRP_MntMeatProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 1;
1110258   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110259   +            end;
MPRINT(EM_DIAGRAM):   end;
1110260   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1110261   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1110262   +                  GRP_MntMeatProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 1;
1110263   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110264   +               end;
MPRINT(EM_DIAGRAM):   end;
1110265   +            end;
MPRINT(EM_DIAGRAM):   end;
1110266   +         end;
MPRINT(EM_DIAGRAM):   end;
1110267   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110268   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1110269   +               GRP_MntMeatProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 1;
1110270   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110271   +            end;
MPRINT(EM_DIAGRAM):   end;
1110272   +         end;
MPRINT(EM_DIAGRAM):   end;
1110273   +      end;
MPRINT(EM_DIAGRAM):   end;
1110274   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1110275   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1110276   +            GRP_MntMeatProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 1;
1110277   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110278   +         end;
MPRINT(EM_DIAGRAM):   end;
1110279   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110280   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1110281   +               GRP_MntMeatProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 1;
1110282   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110283   +            end;
MPRINT(EM_DIAGRAM):   end;
1110284   +         end;
MPRINT(EM_DIAGRAM):   end;
1110285   +      end;
MPRINT(EM_DIAGRAM):   end;
1110286   +   end;
MPRINT(EM_DIAGRAM):   end;
1110287   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1110288   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1110289   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1110290   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1110291   +      GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
1110292   +      GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
1110293   +      GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
1110294   +      GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
1110295   +      GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
1110296   +      GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
1110297   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1110298   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1110299   +   end;
MPRINT(EM_DIAGRAM):   end;
1110300   +end;
MPRINT(EM_DIAGRAM):   end;
1110301   +
1110302   +*** Generate dummy variables for GRP_MntSweetProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntSweetProducts ;
1110303   +drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
1110304   +        GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8
1110305   +        GRP_MntSweetProducts9 GRP_MntSweetProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8 GRP_MntSweetProducts9
GRP_MntSweetProducts10 ;
1110306   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1110307   +GRP_MntSweetProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 0;
1110308   +GRP_MntSweetProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 0;
1110309   +GRP_MntSweetProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 0;
1110310   +GRP_MntSweetProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 0;
1110311   +GRP_MntSweetProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 0;
1110312   +GRP_MntSweetProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 0;
1110313   +GRP_MntSweetProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 0;
1110314   +GRP_MntSweetProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 0;
1110315   +if missing( GRP_MntSweetProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntSweetProducts ) then do;
1110316   +   GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
1110317   +   GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
1110318   +   GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
1110319   +   GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
1110320   +   GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
1110321   +   GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
1110322   +   GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
1110323   +   GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
1110324   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1110325   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1110326   +end;
MPRINT(EM_DIAGRAM):   end;
1110327   +else do;
MPRINT(EM_DIAGRAM):   else do;
1110328   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1110329   +   _dm12 = put( GRP_MntSweetProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntSweetProducts , BEST12. );
1110330   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1110331   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1110332   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1110333   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1110334   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1110335   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1110336   +               GRP_MntSweetProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 1;
1110337   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110338   +            end;
MPRINT(EM_DIAGRAM):   end;
1110339   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1110340   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1110341   +                  GRP_MntSweetProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = -1;
1110342   +                  GRP_MntSweetProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = -1;
1110343   +                  GRP_MntSweetProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = -1;
1110344   +                  GRP_MntSweetProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = -1;
1110345   +                  GRP_MntSweetProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = -1;
1110346   +                  GRP_MntSweetProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = -1;
1110347   +                  GRP_MntSweetProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = -1;
1110348   +                  GRP_MntSweetProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = -1;
1110349   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110350   +               end;
MPRINT(EM_DIAGRAM):   end;
1110351   +            end;
MPRINT(EM_DIAGRAM):   end;
1110352   +         end;
MPRINT(EM_DIAGRAM):   end;
1110353   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110354   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1110355   +               GRP_MntSweetProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 1;
1110356   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110357   +            end;
MPRINT(EM_DIAGRAM):   end;
1110358   +         end;
MPRINT(EM_DIAGRAM):   end;
1110359   +      end;
MPRINT(EM_DIAGRAM):   end;
1110360   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1110361   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1110362   +            GRP_MntSweetProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 1;
1110363   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110364   +         end;
MPRINT(EM_DIAGRAM):   end;
1110365   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110366   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1110367   +               GRP_MntSweetProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 1;
1110368   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110369   +            end;
MPRINT(EM_DIAGRAM):   end;
1110370   +         end;
MPRINT(EM_DIAGRAM):   end;
1110371   +      end;
MPRINT(EM_DIAGRAM):   end;
1110372   +   end;
MPRINT(EM_DIAGRAM):   end;
1110373   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1110374   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1110375   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1110376   +            GRP_MntSweetProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 1;
1110377   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110378   +         end;
MPRINT(EM_DIAGRAM):   end;
1110379   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110380   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1110381   +               GRP_MntSweetProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 1;
1110382   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110383   +            end;
MPRINT(EM_DIAGRAM):   end;
1110384   +         end;
MPRINT(EM_DIAGRAM):   end;
1110385   +      end;
MPRINT(EM_DIAGRAM):   end;
1110386   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1110387   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1110388   +            GRP_MntSweetProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 1;
1110389   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110390   +         end;
MPRINT(EM_DIAGRAM):   end;
1110391   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110392   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1110393   +               GRP_MntSweetProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 1;
1110394   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110395   +            end;
MPRINT(EM_DIAGRAM):   end;
1110396   +         end;
MPRINT(EM_DIAGRAM):   end;
1110397   +      end;
MPRINT(EM_DIAGRAM):   end;
1110398   +   end;
MPRINT(EM_DIAGRAM):   end;
1110399   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1110400   +      GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
1110401   +      GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
1110402   +      GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
1110403   +      GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
1110404   +      GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
1110405   +      GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
1110406   +      GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
1110407   +      GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
1110408   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1110409   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1110410   +   end;
MPRINT(EM_DIAGRAM):   end;
1110411   +end;
MPRINT(EM_DIAGRAM):   end;
1110412   +
1110413   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1110414   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5 GRP_MntWines6
1110415   +        GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5
GRP_MntWines6 GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
1110416   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1110417   +GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1110418   +GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1110419   +GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1110420   +GRP_MntWines5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 0;
1110421   +GRP_MntWines6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 0;
1110422   +GRP_MntWines7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 0;
1110423   +GRP_MntWines8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 0;
1110424   +GRP_MntWines9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 0;
1110425   +GRP_MntWines10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 0;
1110426   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1110427   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1110428   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1110429   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1110430   +   GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
1110431   +   GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
1110432   +   GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
1110433   +   GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
1110434   +   GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
1110435   +   GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
1110436   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1110437   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1110438   +end;
MPRINT(EM_DIAGRAM):   end;
1110439   +else do;
MPRINT(EM_DIAGRAM):   else do;
1110440   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1110441   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1110442   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1110443   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1110444   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1110445   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1110446   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1110447   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1110448   +               GRP_MntWines10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 1;
1110449   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110450   +            end;
MPRINT(EM_DIAGRAM):   end;
1110451   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1110452   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1110453   +                  GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1110454   +                  GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1110455   +                  GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1110456   +                  GRP_MntWines5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = -1;
1110457   +                  GRP_MntWines6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = -1;
1110458   +                  GRP_MntWines7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = -1;
1110459   +                  GRP_MntWines8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = -1;
1110460   +                  GRP_MntWines9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = -1;
1110461   +                  GRP_MntWines10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = -1;
1110462   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110463   +               end;
MPRINT(EM_DIAGRAM):   end;
1110464   +            end;
MPRINT(EM_DIAGRAM):   end;
1110465   +         end;
MPRINT(EM_DIAGRAM):   end;
1110466   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110467   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1110468   +               GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1110469   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110470   +            end;
MPRINT(EM_DIAGRAM):   end;
1110471   +         end;
MPRINT(EM_DIAGRAM):   end;
1110472   +      end;
MPRINT(EM_DIAGRAM):   end;
1110473   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1110474   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1110475   +            GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1110476   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110477   +         end;
MPRINT(EM_DIAGRAM):   end;
1110478   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110479   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1110480   +               GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1110481   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110482   +            end;
MPRINT(EM_DIAGRAM):   end;
1110483   +         end;
MPRINT(EM_DIAGRAM):   end;
1110484   +      end;
MPRINT(EM_DIAGRAM):   end;
1110485   +   end;
MPRINT(EM_DIAGRAM):   end;
1110486   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1110487   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1110488   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1110489   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1110490   +               GRP_MntWines5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 1;
1110491   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110492   +            end;
MPRINT(EM_DIAGRAM):   end;
1110493   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1110494   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1110495   +                  GRP_MntWines6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 1;
1110496   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110497   +               end;
MPRINT(EM_DIAGRAM):   end;
1110498   +            end;
MPRINT(EM_DIAGRAM):   end;
1110499   +         end;
MPRINT(EM_DIAGRAM):   end;
1110500   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110501   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1110502   +               GRP_MntWines7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 1;
1110503   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110504   +            end;
MPRINT(EM_DIAGRAM):   end;
1110505   +         end;
MPRINT(EM_DIAGRAM):   end;
1110506   +      end;
MPRINT(EM_DIAGRAM):   end;
1110507   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1110508   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1110509   +            GRP_MntWines8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 1;
1110510   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110511   +         end;
MPRINT(EM_DIAGRAM):   end;
1110512   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110513   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1110514   +               GRP_MntWines9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 1;
1110515   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110516   +            end;
MPRINT(EM_DIAGRAM):   end;
1110517   +         end;
MPRINT(EM_DIAGRAM):   end;
1110518   +      end;
MPRINT(EM_DIAGRAM):   end;
1110519   +   end;
MPRINT(EM_DIAGRAM):   end;
1110520   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1110521   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1110522   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1110523   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1110524   +      GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
1110525   +      GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
1110526   +      GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
1110527   +      GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
1110528   +      GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
1110529   +      GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
1110530   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1110531   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1110532   +   end;
MPRINT(EM_DIAGRAM):   end;
1110533   +end;
MPRINT(EM_DIAGRAM):   end;
1110534   +
1110535   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1110536   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
1110537   +        GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6
1110538   +        GRP_NumCatalogPurchases7 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6 GRP_NumCatalogPurchases7 ;
1110539   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1110540   +GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1110541   +GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1110542   +GRP_NumCatalogPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 0;
1110543   +GRP_NumCatalogPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 0;
1110544   +GRP_NumCatalogPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 0;
1110545   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1110546   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1110547   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1110548   +   GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
1110549   +   GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
1110550   +   GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
1110551   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1110552   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1110553   +end;
MPRINT(EM_DIAGRAM):   end;
1110554   +else do;
MPRINT(EM_DIAGRAM):   else do;
1110555   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1110556   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1110557   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1110558   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1110559   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1110560   +      if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1110561   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1110562   +            GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1110563   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110564   +         end;
MPRINT(EM_DIAGRAM):   end;
1110565   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110566   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1110567   +               GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1110568   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110569   +            end;
MPRINT(EM_DIAGRAM):   end;
1110570   +         end;
MPRINT(EM_DIAGRAM):   end;
1110571   +      end;
MPRINT(EM_DIAGRAM):   end;
1110572   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1110573   +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1110574   +            GRP_NumCatalogPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 1;
1110575   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110576   +         end;
MPRINT(EM_DIAGRAM):   end;
1110577   +      end;
MPRINT(EM_DIAGRAM):   end;
1110578   +   end;
MPRINT(EM_DIAGRAM):   end;
1110579   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1110580   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1110581   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1110582   +            GRP_NumCatalogPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 1;
1110583   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110584   +         end;
MPRINT(EM_DIAGRAM):   end;
1110585   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110586   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1110587   +               GRP_NumCatalogPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 1;
1110588   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110589   +            end;
MPRINT(EM_DIAGRAM):   end;
1110590   +         end;
MPRINT(EM_DIAGRAM):   end;
1110591   +      end;
MPRINT(EM_DIAGRAM):   end;
1110592   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1110593   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1110594   +            GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1110595   +            GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1110596   +            GRP_NumCatalogPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = -1;
1110597   +            GRP_NumCatalogPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = -1;
1110598   +            GRP_NumCatalogPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = -1;
1110599   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110600   +         end;
MPRINT(EM_DIAGRAM):   end;
1110601   +      end;
MPRINT(EM_DIAGRAM):   end;
1110602   +   end;
MPRINT(EM_DIAGRAM):   end;
1110603   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1110604   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1110605   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1110606   +      GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
1110607   +      GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
1110608   +      GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
1110609   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1110610   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1110611   +   end;
MPRINT(EM_DIAGRAM):   end;
1110612   +end;
MPRINT(EM_DIAGRAM):   end;
1110613   +
1110614   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1110615   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
1110616   +        GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7
1110617   +        GRP_NumDistPurchases8 GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7 GRP_NumDistPurchases8
GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
1110618   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1110619   +GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1110620   +GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1110621   +GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1110622   +GRP_NumDistPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 0;
1110623   +GRP_NumDistPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 0;
1110624   +GRP_NumDistPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 0;
1110625   +GRP_NumDistPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 0;
1110626   +GRP_NumDistPurchases9 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 0;
1110627   +GRP_NumDistPurchases10 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 0;
1110628   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1110629   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1110630   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1110631   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1110632   +   GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
1110633   +   GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
1110634   +   GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
1110635   +   GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
1110636   +   GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
1110637   +   GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
1110638   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1110639   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1110640   +end;
MPRINT(EM_DIAGRAM):   end;
1110641   +else do;
MPRINT(EM_DIAGRAM):   else do;
1110642   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1110643   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1110644   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1110645   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1110646   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1110647   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1110648   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1110649   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1110650   +               GRP_NumDistPurchases10 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 1;
1110651   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110652   +            end;
MPRINT(EM_DIAGRAM):   end;
1110653   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1110654   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1110655   +                  GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1110656   +                  GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1110657   +                  GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1110658   +                  GRP_NumDistPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = -1;
1110659   +                  GRP_NumDistPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = -1;
1110660   +                  GRP_NumDistPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = -1;
1110661   +                  GRP_NumDistPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = -1;
1110662   +                  GRP_NumDistPurchases9 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = -1;
1110663   +                  GRP_NumDistPurchases10 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = -1;
1110664   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110665   +               end;
MPRINT(EM_DIAGRAM):   end;
1110666   +            end;
MPRINT(EM_DIAGRAM):   end;
1110667   +         end;
MPRINT(EM_DIAGRAM):   end;
1110668   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110669   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1110670   +               GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1110671   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110672   +            end;
MPRINT(EM_DIAGRAM):   end;
1110673   +         end;
MPRINT(EM_DIAGRAM):   end;
1110674   +      end;
MPRINT(EM_DIAGRAM):   end;
1110675   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1110676   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1110677   +            GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1110678   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110679   +         end;
MPRINT(EM_DIAGRAM):   end;
1110680   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110681   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1110682   +               GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1110683   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110684   +            end;
MPRINT(EM_DIAGRAM):   end;
1110685   +         end;
MPRINT(EM_DIAGRAM):   end;
1110686   +      end;
MPRINT(EM_DIAGRAM):   end;
1110687   +   end;
MPRINT(EM_DIAGRAM):   end;
1110688   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1110689   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1110690   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1110691   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1110692   +               GRP_NumDistPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 1;
1110693   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110694   +            end;
MPRINT(EM_DIAGRAM):   end;
1110695   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1110696   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1110697   +                  GRP_NumDistPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 1;
1110698   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110699   +               end;
MPRINT(EM_DIAGRAM):   end;
1110700   +            end;
MPRINT(EM_DIAGRAM):   end;
1110701   +         end;
MPRINT(EM_DIAGRAM):   end;
1110702   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110703   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1110704   +               GRP_NumDistPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 1;
1110705   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110706   +            end;
MPRINT(EM_DIAGRAM):   end;
1110707   +         end;
MPRINT(EM_DIAGRAM):   end;
1110708   +      end;
MPRINT(EM_DIAGRAM):   end;
1110709   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1110710   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1110711   +            GRP_NumDistPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 1;
1110712   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110713   +         end;
MPRINT(EM_DIAGRAM):   end;
1110714   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110715   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1110716   +               GRP_NumDistPurchases9 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 1;
1110717   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110718   +            end;
MPRINT(EM_DIAGRAM):   end;
1110719   +         end;
MPRINT(EM_DIAGRAM):   end;
1110720   +      end;
MPRINT(EM_DIAGRAM):   end;
1110721   +   end;
MPRINT(EM_DIAGRAM):   end;
1110722   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1110723   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1110724   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1110725   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1110726   +      GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
1110727   +      GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
1110728   +      GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
1110729   +      GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
1110730   +      GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
1110731   +      GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
1110732   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1110733   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1110734   +   end;
MPRINT(EM_DIAGRAM):   end;
1110735   +end;
MPRINT(EM_DIAGRAM):   end;
1110736   +
1110737   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1110738   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
1110739   +        GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7
1110740   +        GRP_NumWebPurchases8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7 GRP_NumWebPurchases8 ;
1110741   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1110742   +GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1110743   +GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1110744   +GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1110745   +GRP_NumWebPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 0;
1110746   +GRP_NumWebPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 0;
1110747   +GRP_NumWebPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 0;
1110748   +GRP_NumWebPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 0;
1110749   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1110750   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1110751   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1110752   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1110753   +   GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
1110754   +   GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
1110755   +   GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
1110756   +   GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
1110757   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1110758   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1110759   +end;
MPRINT(EM_DIAGRAM):   end;
1110760   +else do;
MPRINT(EM_DIAGRAM):   else do;
1110761   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1110762   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1110763   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1110764   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1110765   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1110766   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1110767   +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1110768   +            GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1110769   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110770   +         end;
MPRINT(EM_DIAGRAM):   end;
1110771   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110772   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1110773   +               GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1110774   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110775   +            end;
MPRINT(EM_DIAGRAM):   end;
1110776   +         end;
MPRINT(EM_DIAGRAM):   end;
1110777   +      end;
MPRINT(EM_DIAGRAM):   end;
1110778   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1110779   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1110780   +            GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1110781   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110782   +         end;
MPRINT(EM_DIAGRAM):   end;
1110783   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110784   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1110785   +               GRP_NumWebPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 1;
1110786   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110787   +            end;
MPRINT(EM_DIAGRAM):   end;
1110788   +         end;
MPRINT(EM_DIAGRAM):   end;
1110789   +      end;
MPRINT(EM_DIAGRAM):   end;
1110790   +   end;
MPRINT(EM_DIAGRAM):   end;
1110791   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1110792   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1110793   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1110794   +            GRP_NumWebPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 1;
1110795   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110796   +         end;
MPRINT(EM_DIAGRAM):   end;
1110797   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110798   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1110799   +               GRP_NumWebPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 1;
1110800   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110801   +            end;
MPRINT(EM_DIAGRAM):   end;
1110802   +         end;
MPRINT(EM_DIAGRAM):   end;
1110803   +      end;
MPRINT(EM_DIAGRAM):   end;
1110804   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1110805   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1110806   +            GRP_NumWebPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 1;
1110807   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110808   +         end;
MPRINT(EM_DIAGRAM):   end;
1110809   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110810   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1110811   +               GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1110812   +               GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1110813   +               GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1110814   +               GRP_NumWebPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = -1;
1110815   +               GRP_NumWebPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = -1;
1110816   +               GRP_NumWebPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = -1;
1110817   +               GRP_NumWebPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = -1;
1110818   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110819   +            end;
MPRINT(EM_DIAGRAM):   end;
1110820   +         end;
MPRINT(EM_DIAGRAM):   end;
1110821   +      end;
MPRINT(EM_DIAGRAM):   end;
1110822   +   end;
MPRINT(EM_DIAGRAM):   end;
1110823   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1110824   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1110825   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1110826   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1110827   +      GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
1110828   +      GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
1110829   +      GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
1110830   +      GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
1110831   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1110832   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1110833   +   end;
MPRINT(EM_DIAGRAM):   end;
1110834   +end;
MPRINT(EM_DIAGRAM):   end;
1110835   +
1110836   +*** Generate dummy variables for GRP_NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebVisitsMonth ;
1110837   +drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3 GRP_NumWebVisitsMonth4
1110838   +        GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
1110839   +        GRP_NumWebVisitsMonth8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3
GRP_NumWebVisitsMonth4 GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
GRP_NumWebVisitsMonth8 ;
1110840   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1110841   +GRP_NumWebVisitsMonth2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 0;
1110842   +GRP_NumWebVisitsMonth3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 0;
1110843   +GRP_NumWebVisitsMonth4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 0;
1110844   +GRP_NumWebVisitsMonth5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 0;
1110845   +GRP_NumWebVisitsMonth6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 0;
1110846   +GRP_NumWebVisitsMonth7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 0;
1110847   +GRP_NumWebVisitsMonth8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 0;
1110848   +if missing( GRP_NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebVisitsMonth ) then do;
1110849   +   GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
1110850   +   GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
1110851   +   GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
1110852   +   GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
1110853   +   GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
1110854   +   GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
1110855   +   GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
1110856   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1110857   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1110858   +end;
MPRINT(EM_DIAGRAM):   end;
1110859   +else do;
MPRINT(EM_DIAGRAM):   else do;
1110860   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1110861   +   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
1110862   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1110863   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1110864   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1110865   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1110866   +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1110867   +            GRP_NumWebVisitsMonth2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 1;
1110868   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110869   +         end;
MPRINT(EM_DIAGRAM):   end;
1110870   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110871   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1110872   +               GRP_NumWebVisitsMonth3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 1;
1110873   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110874   +            end;
MPRINT(EM_DIAGRAM):   end;
1110875   +         end;
MPRINT(EM_DIAGRAM):   end;
1110876   +      end;
MPRINT(EM_DIAGRAM):   end;
1110877   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1110878   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1110879   +            GRP_NumWebVisitsMonth4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 1;
1110880   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110881   +         end;
MPRINT(EM_DIAGRAM):   end;
1110882   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110883   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1110884   +               GRP_NumWebVisitsMonth5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 1;
1110885   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110886   +            end;
MPRINT(EM_DIAGRAM):   end;
1110887   +         end;
MPRINT(EM_DIAGRAM):   end;
1110888   +      end;
MPRINT(EM_DIAGRAM):   end;
1110889   +   end;
MPRINT(EM_DIAGRAM):   end;
1110890   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1110891   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1110892   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1110893   +            GRP_NumWebVisitsMonth6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 1;
1110894   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110895   +         end;
MPRINT(EM_DIAGRAM):   end;
1110896   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110897   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1110898   +               GRP_NumWebVisitsMonth7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 1;
1110899   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110900   +            end;
MPRINT(EM_DIAGRAM):   end;
1110901   +         end;
MPRINT(EM_DIAGRAM):   end;
1110902   +      end;
MPRINT(EM_DIAGRAM):   end;
1110903   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1110904   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1110905   +            GRP_NumWebVisitsMonth8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 1;
1110906   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110907   +         end;
MPRINT(EM_DIAGRAM):   end;
1110908   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110909   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1110910   +               GRP_NumWebVisitsMonth2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = -1;
1110911   +               GRP_NumWebVisitsMonth3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = -1;
1110912   +               GRP_NumWebVisitsMonth4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = -1;
1110913   +               GRP_NumWebVisitsMonth5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = -1;
1110914   +               GRP_NumWebVisitsMonth6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = -1;
1110915   +               GRP_NumWebVisitsMonth7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = -1;
1110916   +               GRP_NumWebVisitsMonth8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = -1;
1110917   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110918   +            end;
MPRINT(EM_DIAGRAM):   end;
1110919   +         end;
MPRINT(EM_DIAGRAM):   end;
1110920   +      end;
MPRINT(EM_DIAGRAM):   end;
1110921   +   end;
MPRINT(EM_DIAGRAM):   end;
1110922   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1110923   +      GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
1110924   +      GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
1110925   +      GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
1110926   +      GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
1110927   +      GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
1110928   +      GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
1110929   +      GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
1110930   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1110931   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1110932   +   end;
MPRINT(EM_DIAGRAM):   end;
1110933   +end;
MPRINT(EM_DIAGRAM):   end;
1110934   +
1110935   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1110936   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
1110937   +        GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
1110938   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1110939   +GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1110940   +GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1110941   +GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1110942   +GRP_RFMstat5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 0;
1110943   +GRP_RFMstat6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 0;
1110944   +GRP_RFMstat7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 0;
1110945   +GRP_RFMstat8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 0;
1110946   +GRP_RFMstat9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 0;
1110947   +GRP_RFMstat10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 0;
1110948   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1110949   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1110950   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1110951   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1110952   +   GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
1110953   +   GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
1110954   +   GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
1110955   +   GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
1110956   +   GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
1110957   +   GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
1110958   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1110959   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1110960   +end;
MPRINT(EM_DIAGRAM):   end;
1110961   +else do;
MPRINT(EM_DIAGRAM):   else do;
1110962   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1110963   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1110964   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1110965   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1110966   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1110967   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1110968   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1110969   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1110970   +               GRP_RFMstat10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 1;
1110971   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110972   +            end;
MPRINT(EM_DIAGRAM):   end;
1110973   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1110974   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1110975   +                  GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1110976   +                  GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1110977   +                  GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1110978   +                  GRP_RFMstat5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = -1;
1110979   +                  GRP_RFMstat6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = -1;
1110980   +                  GRP_RFMstat7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = -1;
1110981   +                  GRP_RFMstat8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = -1;
1110982   +                  GRP_RFMstat9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = -1;
1110983   +                  GRP_RFMstat10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = -1;
1110984   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110985   +               end;
MPRINT(EM_DIAGRAM):   end;
1110986   +            end;
MPRINT(EM_DIAGRAM):   end;
1110987   +         end;
MPRINT(EM_DIAGRAM):   end;
1110988   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1110989   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1110990   +               GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1110991   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110992   +            end;
MPRINT(EM_DIAGRAM):   end;
1110993   +         end;
MPRINT(EM_DIAGRAM):   end;
1110994   +      end;
MPRINT(EM_DIAGRAM):   end;
1110995   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1110996   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1110997   +            GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1110998   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1110999   +         end;
MPRINT(EM_DIAGRAM):   end;
1111000   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1111001   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1111002   +               GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1111003   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111004   +            end;
MPRINT(EM_DIAGRAM):   end;
1111005   +         end;
MPRINT(EM_DIAGRAM):   end;
1111006   +      end;
MPRINT(EM_DIAGRAM):   end;
1111007   +   end;
MPRINT(EM_DIAGRAM):   end;
1111008   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1111009   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1111010   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1111011   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1111012   +               GRP_RFMstat5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 1;
1111013   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111014   +            end;
MPRINT(EM_DIAGRAM):   end;
1111015   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1111016   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1111017   +                  GRP_RFMstat6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 1;
1111018   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111019   +               end;
MPRINT(EM_DIAGRAM):   end;
1111020   +            end;
MPRINT(EM_DIAGRAM):   end;
1111021   +         end;
MPRINT(EM_DIAGRAM):   end;
1111022   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1111023   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1111024   +               GRP_RFMstat7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 1;
1111025   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111026   +            end;
MPRINT(EM_DIAGRAM):   end;
1111027   +         end;
MPRINT(EM_DIAGRAM):   end;
1111028   +      end;
MPRINT(EM_DIAGRAM):   end;
1111029   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1111030   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1111031   +            GRP_RFMstat8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 1;
1111032   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111033   +         end;
MPRINT(EM_DIAGRAM):   end;
1111034   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1111035   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1111036   +               GRP_RFMstat9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 1;
1111037   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111038   +            end;
MPRINT(EM_DIAGRAM):   end;
1111039   +         end;
MPRINT(EM_DIAGRAM):   end;
1111040   +      end;
MPRINT(EM_DIAGRAM):   end;
1111041   +   end;
MPRINT(EM_DIAGRAM):   end;
1111042   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1111043   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1111044   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1111045   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1111046   +      GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
1111047   +      GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
1111048   +      GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
1111049   +      GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
1111050   +      GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
1111051   +      GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
1111052   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1111053   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1111054   +   end;
MPRINT(EM_DIAGRAM):   end;
1111055   +end;
MPRINT(EM_DIAGRAM):   end;
1111056   +
1111057   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1111058   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
1111059   +        GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
1111060   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1111061   +GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1111062   +GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1111063   +GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1111064   +GRP_RMntFrq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 0;
1111065   +GRP_RMntFrq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 0;
1111066   +GRP_RMntFrq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 0;
1111067   +GRP_RMntFrq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 0;
1111068   +GRP_RMntFrq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 0;
1111069   +GRP_RMntFrq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 0;
1111070   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1111071   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1111072   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1111073   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1111074   +   GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
1111075   +   GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
1111076   +   GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
1111077   +   GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
1111078   +   GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
1111079   +   GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
1111080   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1111081   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1111082   +end;
MPRINT(EM_DIAGRAM):   end;
1111083   +else do;
MPRINT(EM_DIAGRAM):   else do;
1111084   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1111085   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1111086   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1111087   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1111088   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1111089   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1111090   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1111091   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1111092   +               GRP_RMntFrq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 1;
1111093   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111094   +            end;
MPRINT(EM_DIAGRAM):   end;
1111095   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1111096   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1111097   +                  GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1111098   +                  GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1111099   +                  GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1111100   +                  GRP_RMntFrq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = -1;
1111101   +                  GRP_RMntFrq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = -1;
1111102   +                  GRP_RMntFrq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = -1;
1111103   +                  GRP_RMntFrq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = -1;
1111104   +                  GRP_RMntFrq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = -1;
1111105   +                  GRP_RMntFrq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = -1;
1111106   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111107   +               end;
MPRINT(EM_DIAGRAM):   end;
1111108   +            end;
MPRINT(EM_DIAGRAM):   end;
1111109   +         end;
MPRINT(EM_DIAGRAM):   end;
1111110   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1111111   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1111112   +               GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1111113   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111114   +            end;
MPRINT(EM_DIAGRAM):   end;
1111115   +         end;
MPRINT(EM_DIAGRAM):   end;
1111116   +      end;
MPRINT(EM_DIAGRAM):   end;
1111117   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1111118   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1111119   +            GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1111120   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111121   +         end;
MPRINT(EM_DIAGRAM):   end;
1111122   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1111123   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1111124   +               GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1111125   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111126   +            end;
MPRINT(EM_DIAGRAM):   end;
1111127   +         end;
MPRINT(EM_DIAGRAM):   end;
1111128   +      end;
MPRINT(EM_DIAGRAM):   end;
1111129   +   end;
MPRINT(EM_DIAGRAM):   end;
1111130   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1111131   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1111132   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1111133   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1111134   +               GRP_RMntFrq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 1;
1111135   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111136   +            end;
MPRINT(EM_DIAGRAM):   end;
1111137   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1111138   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1111139   +                  GRP_RMntFrq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 1;
1111140   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111141   +               end;
MPRINT(EM_DIAGRAM):   end;
1111142   +            end;
MPRINT(EM_DIAGRAM):   end;
1111143   +         end;
MPRINT(EM_DIAGRAM):   end;
1111144   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1111145   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1111146   +               GRP_RMntFrq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 1;
1111147   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111148   +            end;
MPRINT(EM_DIAGRAM):   end;
1111149   +         end;
MPRINT(EM_DIAGRAM):   end;
1111150   +      end;
MPRINT(EM_DIAGRAM):   end;
1111151   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1111152   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1111153   +            GRP_RMntFrq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 1;
1111154   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111155   +         end;
MPRINT(EM_DIAGRAM):   end;
1111156   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1111157   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1111158   +               GRP_RMntFrq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 1;
1111159   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111160   +            end;
MPRINT(EM_DIAGRAM):   end;
1111161   +         end;
MPRINT(EM_DIAGRAM):   end;
1111162   +      end;
MPRINT(EM_DIAGRAM):   end;
1111163   +   end;
MPRINT(EM_DIAGRAM):   end;
1111164   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1111165   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1111166   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1111167   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1111168   +      GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
1111169   +      GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
1111170   +      GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
1111171   +      GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
1111172   +      GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
1111173   +      GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
1111174   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1111175   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1111176   +   end;
MPRINT(EM_DIAGRAM):   end;
1111177   +end;
MPRINT(EM_DIAGRAM):   end;
1111178   +
1111179   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1111180   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
1111181   +        GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
1111182   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1111183   +GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1111184   +GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1111185   +GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1111186   +GRP_Recency5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 0;
1111187   +GRP_Recency6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 0;
1111188   +GRP_Recency7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 0;
1111189   +GRP_Recency8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 0;
1111190   +GRP_Recency9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 0;
1111191   +GRP_Recency10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 0;
1111192   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1111193   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1111194   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1111195   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1111196   +   GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
1111197   +   GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
1111198   +   GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
1111199   +   GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
1111200   +   GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
1111201   +   GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
1111202   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1111203   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1111204   +end;
MPRINT(EM_DIAGRAM):   end;
1111205   +else do;
MPRINT(EM_DIAGRAM):   else do;
1111206   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1111207   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1111208   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1111209   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1111210   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1111211   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1111212   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1111213   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1111214   +               GRP_Recency10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 1;
1111215   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111216   +            end;
MPRINT(EM_DIAGRAM):   end;
1111217   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1111218   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1111219   +                  GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1111220   +                  GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1111221   +                  GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1111222   +                  GRP_Recency5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = -1;
1111223   +                  GRP_Recency6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = -1;
1111224   +                  GRP_Recency7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = -1;
1111225   +                  GRP_Recency8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = -1;
1111226   +                  GRP_Recency9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = -1;
1111227   +                  GRP_Recency10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = -1;
1111228   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111229   +               end;
MPRINT(EM_DIAGRAM):   end;
1111230   +            end;
MPRINT(EM_DIAGRAM):   end;
1111231   +         end;
MPRINT(EM_DIAGRAM):   end;
1111232   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1111233   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1111234   +               GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1111235   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111236   +            end;
MPRINT(EM_DIAGRAM):   end;
1111237   +         end;
MPRINT(EM_DIAGRAM):   end;
1111238   +      end;
MPRINT(EM_DIAGRAM):   end;
1111239   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1111240   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1111241   +            GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1111242   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111243   +         end;
MPRINT(EM_DIAGRAM):   end;
1111244   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1111245   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1111246   +               GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1111247   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111248   +            end;
MPRINT(EM_DIAGRAM):   end;
1111249   +         end;
MPRINT(EM_DIAGRAM):   end;
1111250   +      end;
MPRINT(EM_DIAGRAM):   end;
1111251   +   end;
MPRINT(EM_DIAGRAM):   end;
1111252   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1111253   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1111254   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1111255   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1111256   +               GRP_Recency5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 1;
1111257   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111258   +            end;
MPRINT(EM_DIAGRAM):   end;
1111259   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1111260   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1111261   +                  GRP_Recency6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 1;
1111262   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111263   +               end;
MPRINT(EM_DIAGRAM):   end;
1111264   +            end;
MPRINT(EM_DIAGRAM):   end;
1111265   +         end;
MPRINT(EM_DIAGRAM):   end;
1111266   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1111267   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1111268   +               GRP_Recency7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 1;
1111269   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111270   +            end;
MPRINT(EM_DIAGRAM):   end;
1111271   +         end;
MPRINT(EM_DIAGRAM):   end;
1111272   +      end;
MPRINT(EM_DIAGRAM):   end;
1111273   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1111274   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1111275   +            GRP_Recency8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 1;
1111276   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111277   +         end;
MPRINT(EM_DIAGRAM):   end;
1111278   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1111279   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1111280   +               GRP_Recency9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 1;
1111281   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1111282   +            end;
MPRINT(EM_DIAGRAM):   end;
1111283   +         end;
MPRINT(EM_DIAGRAM):   end;
1111284   +      end;
MPRINT(EM_DIAGRAM):   end;
1111285   +   end;
MPRINT(EM_DIAGRAM):   end;
1111286   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1111287   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1111288   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1111289   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1111290   +      GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
1111291   +      GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
1111292   +      GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
1111293   +      GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
1111294   +      GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
1111295   +      GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
1111296   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1111297   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1111298   +   end;
MPRINT(EM_DIAGRAM):   end;
1111299   +end;
MPRINT(EM_DIAGRAM):   end;
1111300   +
1111301   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1111302   +*** Checking missing input Interval
1111303   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1111304   +
1111305   +IF NMISS(
1111306   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1111307   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1111308   +
1111309   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1111310   +END;
MPRINT(EM_DIAGRAM):   END;
1111311   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1111312   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1111313   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1111314   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1111315   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1111316   +END;
MPRINT(EM_DIAGRAM):   END;
1111317   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1111318   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1111319   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1111320   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1111321   +END;
MPRINT(EM_DIAGRAM):   END;
1111322   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1111323   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1111324   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1111325   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1111326   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1111327   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1111328   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1111329   +   H1x1_1  =     48.9465081991162 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 48.9465081991162 * S_Year_Birth ;
1111330   +   H1x1_2  =     2.02087365254286 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.02087365254286 * S_Year_Birth ;
1111331   +   H1x1_3  =      2.4592532691129 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.4592532691129 * S_Year_Birth ;
1111332   +   H1x1_1  = H1x1_1  +     0.71676376330119 * GRP_AcceptedCmp52
1111333   +          +    -0.92635980793428 * GRP_AcceptedCmpTotal3
1111334   +          +    -0.28730763810705 * GRP_Frq2  +     0.51925889916312 * GRP_Frq3
1111335   +          +     -0.6431651730272 * GRP_Frq4  +    -1.23700914617998 * GRP_Frq5
1111336   +          +    -0.16744940694414 * GRP_Frq6  +    -0.30152573091873 * GRP_Frq7
1111337   +          +     -1.3314768147468 * GRP_Frq8  +     0.17126339432009 * GRP_Frq9
1111338   +          +     -0.0889204149078 * GRP_Frq10  +      0.4741194060187 *
1111339   +        GRP_Income2  +     1.56070730507658 * GRP_Income3
1111340   +          +     0.53746893731356 * GRP_Income4  +    -0.76738101410035 *
1111341   +        GRP_Income5  +     0.85451657926949 * GRP_Income6
1111342   +          +     0.76132605887735 * GRP_Income7  +     0.06592406535671 *
1111343   +        GRP_Income8  +     1.97305302340144 * GRP_Income9
1111344   +          +     1.02012810874527 * GRP_Income10  +     0.02631203134579 *
1111345   +        GRP_Mnt2  +    -1.30050547549954 * GRP_Mnt3  +    -0.36906367733678 *
1111346   +        GRP_Mnt4  +     1.04522826393693 * GRP_Mnt5  +     0.62644301984134 *
1111347   +        GRP_Mnt6  +     1.15385855214269 * GRP_Mnt7  +    -0.82602046556465 *
1111348   +        GRP_Mnt8  +     -0.4111324432654 * GRP_Mnt9  +    -0.56476276333863 *
1111349   +        GRP_Mnt10  +     0.52471556990605 * GRP_MntFishProducts3
1111350   +          +     0.16044770035396 * GRP_MntFishProducts4
1111351   +          +    -1.17374131153541 * GRP_MntFishProducts5
1111352   +          +    -0.83131801764513 * GRP_MntFishProducts6
1111353   +          +     1.14299447378441 * GRP_MntFishProducts7
1111354   +          +    -0.15781477960507 * GRP_MntFishProducts8
1111355   +          +    -1.12153624062142 * GRP_MntFishProducts9
1111356   +          +     0.23353899882952 * GRP_MntFishProducts10
1111357   +          +      0.9934704930855 * GRP_MntGoldProds2
1111358   +          +     0.55747340998385 * GRP_MntGoldProds3
1111359   +          +    -0.17034801431646 * GRP_MntGoldProds4
1111360   +          +     1.21830221546251 * GRP_MntGoldProds5
1111361   +          +    -1.22259417805613 * GRP_MntGoldProds6
1111362   +          +    -0.36828783291156 * GRP_MntGoldProds7
1111363   +          +     0.78525677330014 * GRP_MntGoldProds8
1111364   +          +     0.47984476584191 * GRP_MntGoldProds9
1111365   +          +     0.03467373901273 * GRP_MntGoldProds10
1111366   +          +    -0.57349410415913 * GRP_MntMeatProducts2
1111367   +          +     0.65134044606103 * GRP_MntMeatProducts3
1111368   +          +     0.36788044128902 * GRP_MntMeatProducts4
1111369   +          +     0.29120969129561 * GRP_MntMeatProducts5
1111370   +          +    -1.36110766617809 * GRP_MntMeatProducts6
1111371   +          +    -0.33627963920768 * GRP_MntMeatProducts7
1111372   +          +     0.29864505305537 * GRP_MntMeatProducts8
1111373   +          +     0.20571131972856 * GRP_MntMeatProducts9
1111374   +          +     0.50414797440093 * GRP_MntMeatProducts10
1111375   +          +    -1.72121615822238 * GRP_MntSweetProducts3
1111376   +          +     -0.6848717524032 * GRP_MntSweetProducts4
1111377   +          +     0.21764928333182 * GRP_MntSweetProducts5
1111378   +          +      0.5156326916797 * GRP_MntSweetProducts6
1111379   +          +    -1.81239268036233 * GRP_MntSweetProducts7
1111380   +          +     1.69793128774016 * GRP_MntSweetProducts8
1111381   +          +     0.21494191976556 * GRP_MntSweetProducts9
1111382   +          +    -1.36662509099176 * GRP_MntSweetProducts10
1111383   +          +    -0.62845147000994 * GRP_MntWines2  +     0.95185291016713 *
1111384   +        GRP_MntWines3  +    -0.69708425204065 * GRP_MntWines4
1111385   +          +    -1.23435797956339 * GRP_MntWines5  +     -1.5220790223763 *
1111386   +        GRP_MntWines6  +      0.2067568077444 * GRP_MntWines7
1111387   +          +     0.87704257787756 * GRP_MntWines8  +    -1.99552292812582 *
1111388   +        GRP_MntWines9  +    -0.07587861352893 * GRP_MntWines10
1111389   +          +     0.35815441966601 * GRP_NumCatalogPurchases3
1111390   +          +     0.07176464499033 * GRP_NumCatalogPurchases4
1111391   +          +     0.29459918891622 * GRP_NumCatalogPurchases5
1111392   +          +     0.31886968573327 * GRP_NumCatalogPurchases6
1111393   +          +    -1.51387976023239 * GRP_NumCatalogPurchases7
1111394   +          +     1.20860019572302 * GRP_NumDistPurchases2
1111395   +          +     0.46210628473586 * GRP_NumDistPurchases3
1111396   +          +    -2.56072327490522 * GRP_NumDistPurchases4
1111397   +          +     1.03435677588053 * GRP_NumDistPurchases5
1111398   +          +     0.04522378064572 * GRP_NumDistPurchases6
1111399   +          +    -0.85331194553641 * GRP_NumDistPurchases7
1111400   +          +    -1.22935279264677 * GRP_NumDistPurchases8
1111401   +          +    -0.65851400385577 * GRP_NumDistPurchases9
1111402   +          +    -1.01774823358732 * GRP_NumDistPurchases10
1111403   +          +    -0.86377318792053 * GRP_NumWebPurchases2
1111404   +          +     0.21661789250787 * GRP_NumWebPurchases3
1111405   +          +    -1.30691605989363 * GRP_NumWebPurchases4
1111406   +          +    -0.48532556674706 * GRP_NumWebPurchases5
1111407   +          +     0.59310004264709 * GRP_NumWebPurchases6
1111408   +          +     0.43335009213506 * GRP_NumWebPurchases7
1111409   +          +     -0.7639814067765 * GRP_NumWebPurchases8
1111410   +          +     1.38321438368337 * GRP_NumWebVisitsMonth2
1111411   +          +     0.47188296824861 * GRP_NumWebVisitsMonth3
1111412   +          +    -1.78625193231398 * GRP_NumWebVisitsMonth4
1111413   +          +     1.64086827442453 * GRP_NumWebVisitsMonth5
1111414   +          +     0.03446991492896 * GRP_NumWebVisitsMonth6
1111415   +          +    -0.45614880997983 * GRP_NumWebVisitsMonth7
1111416   +          +     0.42333060077089 * GRP_NumWebVisitsMonth8
1111417   +          +    -0.26497911055373 * GRP_RFMstat2  +     1.41331191509815 *
1111418   +        GRP_RFMstat3  +    -0.72899210329908 * GRP_RFMstat4
1111419   +          +    -0.51925237587027 * GRP_RFMstat5  +    -0.12861049633485 *
1111420   +        GRP_RFMstat6  +    -1.05799117155955 * GRP_RFMstat7
1111421   +          +     0.92142033704749 * GRP_RFMstat8  +      0.4817018906046 *
1111422   +        GRP_RFMstat9  +    -1.21700873377512 * GRP_RFMstat10
1111423   +          +    -0.44993227310411 * GRP_RMntFrq2  +     1.02278288492285 *
1111424   +        GRP_RMntFrq3  +    -0.52153555031696 * GRP_RMntFrq4
1111425   +          +     1.28928411047852 * GRP_RMntFrq5  +    -1.71778296055387 *
1111426   +        GRP_RMntFrq6  +    -0.19028690696286 * GRP_RMntFrq7
1111427   +          +    -0.62011590396692 * GRP_RMntFrq8  +     1.45129397542294 *
1111428   +        GRP_RMntFrq9  +     0.06615784080128 * GRP_RMntFrq10
1111429   +          +    -0.32041425963328 * GRP_Recency2  +     -0.9881569760974 *
1111430   +        GRP_Recency3  +    -0.51344461817292 * GRP_Recency4
1111431   +          +     1.16861419470805 * GRP_Recency5  +     0.18835458430028 *
1111432   +        GRP_Recency6  +     2.84664593413438 * GRP_Recency7
1111433   +          +     -0.1813906971641 * GRP_Recency8  +    -0.16805479054549 *
1111434   +        GRP_Recency9  +     0.02055980478388 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.71676376330119 * GRP_AcceptedCmp52 +
-0.92635980793428 * GRP_AcceptedCmpTotal3 + -0.28730763810705 * GRP_Frq2 + 0.51925889916312 *
GRP_Frq3 + -0.6431651730272 * GRP_Frq4 + -1.23700914617998 * GRP_Frq5 + -0.16744940694414 *
GRP_Frq6 + -0.30152573091873 * GRP_Frq7 + -1.3314768147468 * GRP_Frq8 + 0.17126339432009 *
GRP_Frq9 + -0.0889204149078 * GRP_Frq10 + 0.4741194060187 * GRP_Income2 + 1.56070730507658 *
GRP_Income3 + 0.53746893731356 * GRP_Income4 + -0.76738101410035 * GRP_Income5 +
0.85451657926949 * GRP_Income6 + 0.76132605887735 * GRP_Income7 + 0.06592406535671 *
GRP_Income8 + 1.97305302340144 * GRP_Income9 + 1.02012810874527 * GRP_Income10 +
0.02631203134579 * GRP_Mnt2 + -1.30050547549954 * GRP_Mnt3 + -0.36906367733678 * GRP_Mnt4 +
1.04522826393693 * GRP_Mnt5 + 0.62644301984134 * GRP_Mnt6 + 1.15385855214269 * GRP_Mnt7 +
-0.82602046556465 * GRP_Mnt8 + -0.4111324432654 * GRP_Mnt9 + -0.56476276333863 * GRP_Mnt10 +
0.52471556990605 * GRP_MntFishProducts3 + 0.16044770035396 * GRP_MntFishProducts4 +
-1.17374131153541 * GRP_MntFishProducts5 + -0.83131801764513 * GRP_MntFishProducts6 +
1.14299447378441 * GRP_MntFishProducts7 + -0.15781477960507 * GRP_MntFishProducts8 +
-1.12153624062142 * GRP_MntFishProducts9 + 0.23353899882952 * GRP_MntFishProducts10 +
0.9934704930855 * GRP_MntGoldProds2 + 0.55747340998385 * GRP_MntGoldProds3 + -0.17034801431646
* GRP_MntGoldProds4 + 1.21830221546251 * GRP_MntGoldProds5 + -1.22259417805613 *
GRP_MntGoldProds6 + -0.36828783291156 * GRP_MntGoldProds7 + 0.78525677330014 *
GRP_MntGoldProds8 + 0.47984476584191 * GRP_MntGoldProds9 + 0.03467373901273 *
GRP_MntGoldProds10 + -0.57349410415913 * GRP_MntMeatProducts2 + 0.65134044606103 *
GRP_MntMeatProducts3 + 0.36788044128902 * GRP_MntMeatProducts4 + 0.29120969129561 *
GRP_MntMeatProducts5 + -1.36110766617809 * GRP_MntMeatProducts6 + -0.33627963920768 *
GRP_MntMeatProducts7 + 0.29864505305537 * GRP_MntMeatProducts8 + 0.20571131972856 *
GRP_MntMeatProducts9 + 0.50414797440093 * GRP_MntMeatProducts10 + -1.72121615822238 *
GRP_MntSweetProducts3 + -0.6848717524032 * GRP_MntSweetProducts4 + 0.21764928333182 *
GRP_MntSweetProducts5 + 0.5156326916797 * GRP_MntSweetProducts6 + -1.81239268036233 *
GRP_MntSweetProducts7 + 1.69793128774016 * GRP_MntSweetProducts8 + 0.21494191976556 *
GRP_MntSweetProducts9 + -1.36662509099176 * GRP_MntSweetProducts10 + -0.62845147000994 *
GRP_MntWines2 + 0.95185291016713 * GRP_MntWines3 + -0.69708425204065 * GRP_MntWines4 +
-1.23435797956339 * GRP_MntWines5 + -1.5220790223763 * GRP_MntWines6 + 0.2067568077444 *
GRP_MntWines7 + 0.87704257787756 * GRP_MntWines8 + -1.99552292812582 * GRP_MntWines9 +
-0.07587861352893 * GRP_MntWines10 + 0.35815441966601 * GRP_NumCatalogPurchases3 +
0.07176464499033 * GRP_NumCatalogPurchases4 + 0.29459918891622 * GRP_NumCatalogPurchases5 +
0.31886968573327 * GRP_NumCatalogPurchases6 + -1.51387976023239 * GRP_NumCatalogPurchases7 +
1.20860019572302 * GRP_NumDistPurchases2 + 0.46210628473586 * GRP_NumDistPurchases3 +
-2.56072327490522 * GRP_NumDistPurchases4 + 1.03435677588053 * GRP_NumDistPurchases5 +
0.04522378064572 * GRP_NumDistPurchases6 + -0.85331194553641 * GRP_NumDistPurchases7 +
-1.22935279264677 * GRP_NumDistPurchases8 + -0.65851400385577 * GRP_NumDistPurchases9 +
-1.01774823358732 * GRP_NumDistPurchases10 + -0.86377318792053 * GRP_NumWebPurchases2 +
0.21661789250787 * GRP_NumWebPurchases3 + -1.30691605989363 * GRP_NumWebPurchases4 +
-0.48532556674706 * GRP_NumWebPurchases5 + 0.59310004264709 * GRP_NumWebPurchases6 +
0.43335009213506 * GRP_NumWebPurchases7 + -0.7639814067765 * GRP_NumWebPurchases8 +
1.38321438368337 * GRP_NumWebVisitsMonth2 + 0.47188296824861 * GRP_NumWebVisitsMonth3 +
-1.78625193231398 * GRP_NumWebVisitsMonth4 + 1.64086827442453 * GRP_NumWebVisitsMonth5 +
0.03446991492896 * GRP_NumWebVisitsMonth6 + -0.45614880997983 * GRP_NumWebVisitsMonth7 +
0.42333060077089 * GRP_NumWebVisitsMonth8 + -0.26497911055373 * GRP_RFMstat2 +
1.41331191509815 * GRP_RFMstat3 + -0.72899210329908 * GRP_RFMstat4 + -0.51925237587027 *
GRP_RFMstat5 + -0.12861049633485 * GRP_RFMstat6 + -1.05799117155955 * GRP_RFMstat7 +
0.92142033704749 * GRP_RFMstat8 + 0.4817018906046 * GRP_RFMstat9 + -1.21700873377512 *
GRP_RFMstat10 + -0.44993227310411 * GRP_RMntFrq2 + 1.02278288492285 * GRP_RMntFrq3 +
-0.52153555031696 * GRP_RMntFrq4 + 1.28928411047852 * GRP_RMntFrq5 + -1.71778296055387 *
GRP_RMntFrq6 + -0.19028690696286 * GRP_RMntFrq7 + -0.62011590396692 * GRP_RMntFrq8 +
1.45129397542294 * GRP_RMntFrq9 + 0.06615784080128 * GRP_RMntFrq10 + -0.32041425963328 *
GRP_Recency2 + -0.9881569760974 * GRP_Recency3 + -0.51344461817292 * GRP_Recency4 +
1.16861419470805 * GRP_Recency5 + 0.18835458430028 * GRP_Recency6 + 2.84664593413438 *
GRP_Recency7 + -0.1813906971641 * GRP_Recency8 + -0.16805479054549 * GRP_Recency9 +
0.02055980478388 * GRP_Recency10 ;
1111435   +   H1x1_2  = H1x1_2  +     1.54906602910059 * GRP_AcceptedCmp52
1111436   +          +     2.27617601085527 * GRP_AcceptedCmpTotal3
1111437   +          +     1.48540449527868 * GRP_Frq2  +    -0.60923069898807 * GRP_Frq3
1111438   +          +     -0.0368535358215 * GRP_Frq4  +    -1.18941365357904 * GRP_Frq5
1111439   +          +     1.22445800124678 * GRP_Frq6  +     -1.3516431363703 * GRP_Frq7
1111440   +          +    -0.48231848710081 * GRP_Frq8  +    -0.46429007154719 * GRP_Frq9
1111441   +          +    -0.59573416306808 * GRP_Frq10  +     0.15720399083979 *
1111442   +        GRP_Income2  +    -0.61345730206179 * GRP_Income3
1111443   +          +    -2.60180837454575 * GRP_Income4  +     1.68721717972638 *
1111444   +        GRP_Income5  +    -1.14043189774882 * GRP_Income6
1111445   +          +    -1.65034796071558 * GRP_Income7  +     0.96537091831533 *
1111446   +        GRP_Income8  +      1.9815044443061 * GRP_Income9
1111447   +          +    -0.82350660692239 * GRP_Income10  +     2.86005545579867 *
1111448   +        GRP_Mnt2  +    -1.64805200594142 * GRP_Mnt3  +     0.82206598750464 *
1111449   +        GRP_Mnt4  +      -1.785895388304 * GRP_Mnt5  +    -1.17108148178058 *
1111450   +        GRP_Mnt6  +     0.08089063222924 * GRP_Mnt7  +    -0.09820504774867 *
1111451   +        GRP_Mnt8  +    -2.15609481865681 * GRP_Mnt9  +     0.32675137919046 *
1111452   +        GRP_Mnt10  +     1.22381214535693 * GRP_MntFishProducts3
1111453   +          +    -0.78126288260758 * GRP_MntFishProducts4
1111454   +          +    -1.21111214275067 * GRP_MntFishProducts5
1111455   +          +     0.28720250492064 * GRP_MntFishProducts6
1111456   +          +      0.4852822639139 * GRP_MntFishProducts7
1111457   +          +    -2.04291612093927 * GRP_MntFishProducts8
1111458   +          +    -0.24795489067995 * GRP_MntFishProducts9
1111459   +          +    -1.76136796298463 * GRP_MntFishProducts10
1111460   +          +      0.4263187803616 * GRP_MntGoldProds2
1111461   +          +     1.84909440915903 * GRP_MntGoldProds3
1111462   +          +    -0.39798177649193 * GRP_MntGoldProds4
1111463   +          +    -2.54755160294536 * GRP_MntGoldProds5
1111464   +          +    -1.28982494547534 * GRP_MntGoldProds6
1111465   +          +    -1.67021273990857 * GRP_MntGoldProds7
1111466   +          +     -2.3042297184959 * GRP_MntGoldProds8
1111467   +          +     3.09097855619745 * GRP_MntGoldProds9
1111468   +          +     1.93600988736611 * GRP_MntGoldProds10
1111469   +          +     0.09848257045454 * GRP_MntMeatProducts2
1111470   +          +     1.08304168417965 * GRP_MntMeatProducts3
1111471   +          +     1.91882445829551 * GRP_MntMeatProducts4
1111472   +          +     0.35520536863258 * GRP_MntMeatProducts5
1111473   +          +    -1.11205797114044 * GRP_MntMeatProducts6
1111474   +          +     0.43563318671882 * GRP_MntMeatProducts7
1111475   +          +    -0.74270605349827 * GRP_MntMeatProducts8
1111476   +          +    -0.29550693297591 * GRP_MntMeatProducts9
1111477   +          +      0.2766601721624 * GRP_MntMeatProducts10
1111478   +          +     0.75058577420898 * GRP_MntSweetProducts3
1111479   +          +    -0.56185376554629 * GRP_MntSweetProducts4
1111480   +          +    -1.05152828789454 * GRP_MntSweetProducts5
1111481   +          +     1.00220971259397 * GRP_MntSweetProducts6
1111482   +          +    -0.77193622487428 * GRP_MntSweetProducts7
1111483   +          +     0.26442183085042 * GRP_MntSweetProducts8
1111484   +          +     1.25825351006964 * GRP_MntSweetProducts9
1111485   +          +    -0.00709190308776 * GRP_MntSweetProducts10
1111486   +          +     1.88786953703682 * GRP_MntWines2  +    -2.10043706907947 *
1111487   +        GRP_MntWines3  +    -0.37517500522875 * GRP_MntWines4
1111488   +          +    -0.18006973196751 * GRP_MntWines5  +    -0.95199068268302 *
1111489   +        GRP_MntWines6  +     0.06801155856486 * GRP_MntWines7
1111490   +          +     0.34478968361592 * GRP_MntWines8  +     2.54128029741065 *
1111491   +        GRP_MntWines9  +     0.23106135005771 * GRP_MntWines10
1111492   +          +     0.39725833376834 * GRP_NumCatalogPurchases3
1111493   +          +    -0.67139494868643 * GRP_NumCatalogPurchases4
1111494   +          +      1.5447002000778 * GRP_NumCatalogPurchases5
1111495   +          +     0.09330433399681 * GRP_NumCatalogPurchases6
1111496   +          +     0.62825597584327 * GRP_NumCatalogPurchases7
1111497   +          +     1.18162241824504 * GRP_NumDistPurchases2
1111498   +          +     -1.9946583037891 * GRP_NumDistPurchases3
1111499   +          +     1.89348453467246 * GRP_NumDistPurchases4
1111500   +          +    -1.04666376883699 * GRP_NumDistPurchases5
1111501   +          +     0.25268529470975 * GRP_NumDistPurchases6
1111502   +          +     1.86652956276603 * GRP_NumDistPurchases7
1111503   +          +    -0.69782473674049 * GRP_NumDistPurchases8
1111504   +          +       -1.15138058126 * GRP_NumDistPurchases9
1111505   +          +    -3.19969298738512 * GRP_NumDistPurchases10
1111506   +          +     1.12885105205807 * GRP_NumWebPurchases2
1111507   +          +     2.25528779471396 * GRP_NumWebPurchases3
1111508   +          +    -0.23663724121963 * GRP_NumWebPurchases4
1111509   +          +    -0.78009469666272 * GRP_NumWebPurchases5
1111510   +          +     1.77370357588641 * GRP_NumWebPurchases6
1111511   +          +     1.22392891369749 * GRP_NumWebPurchases7
1111512   +          +    -1.61655624441792 * GRP_NumWebPurchases8
1111513   +          +    -0.13001746156436 * GRP_NumWebVisitsMonth2
1111514   +          +    -0.72575926018145 * GRP_NumWebVisitsMonth3
1111515   +          +    -0.94816479697152 * GRP_NumWebVisitsMonth4
1111516   +          +     1.16144102182867 * GRP_NumWebVisitsMonth5
1111517   +          +     1.70938770020645 * GRP_NumWebVisitsMonth6
1111518   +          +    -0.48304241282132 * GRP_NumWebVisitsMonth7
1111519   +          +     0.70529232466454 * GRP_NumWebVisitsMonth8
1111520   +          +     0.65772145666627 * GRP_RFMstat2  +     2.86660915599885 *
1111521   +        GRP_RFMstat3  +    -0.22923576328844 * GRP_RFMstat4
1111522   +          +     0.03385950626308 * GRP_RFMstat5  +     0.62446884850413 *
1111523   +        GRP_RFMstat6  +    -1.56316157740304 * GRP_RFMstat7
1111524   +          +     0.98813608226531 * GRP_RFMstat8  +    -0.63565291977652 *
1111525   +        GRP_RFMstat9  +    -0.82989429531226 * GRP_RFMstat10
1111526   +          +     0.11925727600741 * GRP_RMntFrq2  +    -0.46501464175926 *
1111527   +        GRP_RMntFrq3  +    -3.30325300706323 * GRP_RMntFrq4
1111528   +          +    -1.34536441554295 * GRP_RMntFrq5  +    -3.84413028109146 *
1111529   +        GRP_RMntFrq6  +     0.47106170435895 * GRP_RMntFrq7
1111530   +          +    -0.72605486027727 * GRP_RMntFrq8  +     0.63627621829641 *
1111531   +        GRP_RMntFrq9  +    -4.54092878045381 * GRP_RMntFrq10
1111532   +          +     0.58944361382169 * GRP_Recency2  +    -1.67787675914457 *
1111533   +        GRP_Recency3  +    -0.91945083634427 * GRP_Recency4
1111534   +          +    -0.23606342713401 * GRP_Recency5  +     0.82900786271425 *
1111535   +        GRP_Recency6  +     0.17592316512272 * GRP_Recency7
1111536   +          +     1.95888212107252 * GRP_Recency8  +      -1.118949694735 *
1111537   +        GRP_Recency9  +     -0.6213199815951 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.54906602910059 * GRP_AcceptedCmp52 +
2.27617601085527 * GRP_AcceptedCmpTotal3 + 1.48540449527868 * GRP_Frq2 + -0.60923069898807 *
GRP_Frq3 + -0.0368535358215 * GRP_Frq4 + -1.18941365357904 * GRP_Frq5 + 1.22445800124678 *
GRP_Frq6 + -1.3516431363703 * GRP_Frq7 + -0.48231848710081 * GRP_Frq8 + -0.46429007154719 *
GRP_Frq9 + -0.59573416306808 * GRP_Frq10 + 0.15720399083979 * GRP_Income2 + -0.61345730206179
* GRP_Income3 + -2.60180837454575 * GRP_Income4 + 1.68721717972638 * GRP_Income5 +
-1.14043189774882 * GRP_Income6 + -1.65034796071558 * GRP_Income7 + 0.96537091831533 *
GRP_Income8 + 1.9815044443061 * GRP_Income9 + -0.82350660692239 * GRP_Income10 +
2.86005545579867 * GRP_Mnt2 + -1.64805200594142 * GRP_Mnt3 + 0.82206598750464 * GRP_Mnt4 +
-1.785895388304 * GRP_Mnt5 + -1.17108148178058 * GRP_Mnt6 + 0.08089063222924 * GRP_Mnt7 +
-0.09820504774867 * GRP_Mnt8 + -2.15609481865681 * GRP_Mnt9 + 0.32675137919046 * GRP_Mnt10 +
1.22381214535693 * GRP_MntFishProducts3 + -0.78126288260758 * GRP_MntFishProducts4 +
-1.21111214275067 * GRP_MntFishProducts5 + 0.28720250492064 * GRP_MntFishProducts6 +
0.4852822639139 * GRP_MntFishProducts7 + -2.04291612093927 * GRP_MntFishProducts8 +
-0.24795489067995 * GRP_MntFishProducts9 + -1.76136796298463 * GRP_MntFishProducts10 +
0.4263187803616 * GRP_MntGoldProds2 + 1.84909440915903 * GRP_MntGoldProds3 + -0.39798177649193
* GRP_MntGoldProds4 + -2.54755160294536 * GRP_MntGoldProds5 + -1.28982494547534 *
GRP_MntGoldProds6 + -1.67021273990857 * GRP_MntGoldProds7 + -2.3042297184959 *
GRP_MntGoldProds8 + 3.09097855619745 * GRP_MntGoldProds9 + 1.93600988736611 *
GRP_MntGoldProds10 + 0.09848257045454 * GRP_MntMeatProducts2 + 1.08304168417965 *
GRP_MntMeatProducts3 + 1.91882445829551 * GRP_MntMeatProducts4 + 0.35520536863258 *
GRP_MntMeatProducts5 + -1.11205797114044 * GRP_MntMeatProducts6 + 0.43563318671882 *
GRP_MntMeatProducts7 + -0.74270605349827 * GRP_MntMeatProducts8 + -0.29550693297591 *
GRP_MntMeatProducts9 + 0.2766601721624 * GRP_MntMeatProducts10 + 0.75058577420898 *
GRP_MntSweetProducts3 + -0.56185376554629 * GRP_MntSweetProducts4 + -1.05152828789454 *
GRP_MntSweetProducts5 + 1.00220971259397 * GRP_MntSweetProducts6 + -0.77193622487428 *
GRP_MntSweetProducts7 + 0.26442183085042 * GRP_MntSweetProducts8 + 1.25825351006964 *
GRP_MntSweetProducts9 + -0.00709190308776 * GRP_MntSweetProducts10 + 1.88786953703682 *
GRP_MntWines2 + -2.10043706907947 * GRP_MntWines3 + -0.37517500522875 * GRP_MntWines4 +
-0.18006973196751 * GRP_MntWines5 + -0.95199068268302 * GRP_MntWines6 + 0.06801155856486 *
GRP_MntWines7 + 0.34478968361592 * GRP_MntWines8 + 2.54128029741065 * GRP_MntWines9 +
0.23106135005771 * GRP_MntWines10 + 0.39725833376834 * GRP_NumCatalogPurchases3 +
-0.67139494868643 * GRP_NumCatalogPurchases4 + 1.5447002000778 * GRP_NumCatalogPurchases5 +
0.09330433399681 * GRP_NumCatalogPurchases6 + 0.62825597584327 * GRP_NumCatalogPurchases7 +
1.18162241824504 * GRP_NumDistPurchases2 + -1.9946583037891 * GRP_NumDistPurchases3 +
1.89348453467246 * GRP_NumDistPurchases4 + -1.04666376883699 * GRP_NumDistPurchases5 +
0.25268529470975 * GRP_NumDistPurchases6 + 1.86652956276603 * GRP_NumDistPurchases7 +
-0.69782473674049 * GRP_NumDistPurchases8 + -1.15138058126 * GRP_NumDistPurchases9 +
-3.19969298738512 * GRP_NumDistPurchases10 + 1.12885105205807 * GRP_NumWebPurchases2 +
2.25528779471396 * GRP_NumWebPurchases3 + -0.23663724121963 * GRP_NumWebPurchases4 +
-0.78009469666272 * GRP_NumWebPurchases5 + 1.77370357588641 * GRP_NumWebPurchases6 +
1.22392891369749 * GRP_NumWebPurchases7 + -1.61655624441792 * GRP_NumWebPurchases8 +
-0.13001746156436 * GRP_NumWebVisitsMonth2 + -0.72575926018145 * GRP_NumWebVisitsMonth3 +
-0.94816479697152 * GRP_NumWebVisitsMonth4 + 1.16144102182867 * GRP_NumWebVisitsMonth5 +
1.70938770020645 * GRP_NumWebVisitsMonth6 + -0.48304241282132 * GRP_NumWebVisitsMonth7 +
0.70529232466454 * GRP_NumWebVisitsMonth8 + 0.65772145666627 * GRP_RFMstat2 + 2.86660915599885
* GRP_RFMstat3 + -0.22923576328844 * GRP_RFMstat4 + 0.03385950626308 * GRP_RFMstat5 +
0.62446884850413 * GRP_RFMstat6 + -1.56316157740304 * GRP_RFMstat7 + 0.98813608226531 *
GRP_RFMstat8 + -0.63565291977652 * GRP_RFMstat9 + -0.82989429531226 * GRP_RFMstat10 +
0.11925727600741 * GRP_RMntFrq2 + -0.46501464175926 * GRP_RMntFrq3 + -3.30325300706323 *
GRP_RMntFrq4 + -1.34536441554295 * GRP_RMntFrq5 + -3.84413028109146 * GRP_RMntFrq6 +
0.47106170435895 * GRP_RMntFrq7 + -0.72605486027727 * GRP_RMntFrq8 + 0.63627621829641 *
GRP_RMntFrq9 + -4.54092878045381 * GRP_RMntFrq10 + 0.58944361382169 * GRP_Recency2 +
-1.67787675914457 * GRP_Recency3 + -0.91945083634427 * GRP_Recency4 + -0.23606342713401 *
GRP_Recency5 + 0.82900786271425 * GRP_Recency6 + 0.17592316512272 * GRP_Recency7 +
1.95888212107252 * GRP_Recency8 + -1.118949694735 * GRP_Recency9 + -0.6213199815951 *
GRP_Recency10 ;
1111538   +   H1x1_3  = H1x1_3  +     0.93426558045547 * GRP_AcceptedCmp52
1111539   +          +     0.58768630988717 * GRP_AcceptedCmpTotal3
1111540   +          +    -1.51960343620707 * GRP_Frq2  +    -1.98554513483427 * GRP_Frq3
1111541   +          +     0.99517325158626 * GRP_Frq4  +    -1.43534788488184 * GRP_Frq5
1111542   +          +    -1.74159367781906 * GRP_Frq6  +    -2.24167428586446 * GRP_Frq7
1111543   +          +    -1.26021179170898 * GRP_Frq8  +     0.10708963233949 * GRP_Frq9
1111544   +          +    -0.08287659877378 * GRP_Frq10  +    -0.29602203429318 *
1111545   +        GRP_Income2  +    -1.70148026213507 * GRP_Income3
1111546   +          +     0.28159451624585 * GRP_Income4  +      0.6177722344415 *
1111547   +        GRP_Income5  +    -2.23556766589076 * GRP_Income6
1111548   +          +     3.93505019030186 * GRP_Income7  +     -2.0824621480124 *
1111549   +        GRP_Income8  +     1.88660584456731 * GRP_Income9
1111550   +          +     0.90295722629145 * GRP_Income10  +     0.04984689303414 *
1111551   +        GRP_Mnt2  +    -0.50038201931754 * GRP_Mnt3  +    -1.62831680351379 *
1111552   +        GRP_Mnt4  +      1.4492453889036 * GRP_Mnt5  +    -0.19189043815297 *
1111553   +        GRP_Mnt6  +     0.64443706548299 * GRP_Mnt7  +     0.17668938010528 *
1111554   +        GRP_Mnt8  +     1.28610426388581 * GRP_Mnt9  +    -2.01393224902779 *
1111555   +        GRP_Mnt10  +     -2.3797115089998 * GRP_MntFishProducts3
1111556   +          +     1.20810501566648 * GRP_MntFishProducts4
1111557   +          +    -0.31798087525347 * GRP_MntFishProducts5
1111558   +          +    -0.69237701732465 * GRP_MntFishProducts6
1111559   +          +    -0.54891111072215 * GRP_MntFishProducts7
1111560   +          +    -0.62013170184324 * GRP_MntFishProducts8
1111561   +          +     1.17121982810796 * GRP_MntFishProducts9
1111562   +          +    -3.62687099938455 * GRP_MntFishProducts10
1111563   +          +     2.07559340651906 * GRP_MntGoldProds2
1111564   +          +     0.78435949490522 * GRP_MntGoldProds3
1111565   +          +      1.0403239403189 * GRP_MntGoldProds4
1111566   +          +    -0.66844808788018 * GRP_MntGoldProds5
1111567   +          +    -0.48019660076402 * GRP_MntGoldProds6
1111568   +          +      0.6062935347869 * GRP_MntGoldProds7
1111569   +          +    -0.38141722319712 * GRP_MntGoldProds8
1111570   +          +    -1.92694153724383 * GRP_MntGoldProds9
1111571   +          +     -2.3811309398323 * GRP_MntGoldProds10
1111572   +          +     0.10759987908894 * GRP_MntMeatProducts2
1111573   +          +     2.14459189351851 * GRP_MntMeatProducts3
1111574   +          +    -2.45166597704042 * GRP_MntMeatProducts4
1111575   +          +     -0.7650846730976 * GRP_MntMeatProducts5
1111576   +          +    -3.51160870099496 * GRP_MntMeatProducts6
1111577   +          +     -0.8259206362298 * GRP_MntMeatProducts7
1111578   +          +     0.29979404593461 * GRP_MntMeatProducts8
1111579   +          +     -0.9589168823801 * GRP_MntMeatProducts9
1111580   +          +     -0.2853616099647 * GRP_MntMeatProducts10
1111581   +          +     0.49848568055456 * GRP_MntSweetProducts3
1111582   +          +    -0.72776474415712 * GRP_MntSweetProducts4
1111583   +          +     0.74313666927565 * GRP_MntSweetProducts5
1111584   +          +     0.84606469030976 * GRP_MntSweetProducts6
1111585   +          +    -0.38145119762704 * GRP_MntSweetProducts7
1111586   +          +    -1.43497411133169 * GRP_MntSweetProducts8
1111587   +          +    -0.84817446071124 * GRP_MntSweetProducts9
1111588   +          +    -0.09240038512346 * GRP_MntSweetProducts10
1111589   +          +    -1.08774185820812 * GRP_MntWines2  +    -0.39031626452132 *
1111590   +        GRP_MntWines3  +    -0.58688830577606 * GRP_MntWines4
1111591   +          +     0.22911849699923 * GRP_MntWines5  +     2.74308065676411 *
1111592   +        GRP_MntWines6  +    -1.07317065256082 * GRP_MntWines7
1111593   +          +    -1.81019667683263 * GRP_MntWines8  +    -0.17488280044697 *
1111594   +        GRP_MntWines9  +     0.76965731666557 * GRP_MntWines10
1111595   +          +     1.45683083695577 * GRP_NumCatalogPurchases3
1111596   +          +     2.55194057820162 * GRP_NumCatalogPurchases4
1111597   +          +    -0.63390649143698 * GRP_NumCatalogPurchases5
1111598   +          +    -0.55465371468416 * GRP_NumCatalogPurchases6
1111599   +          +    -1.41375459861532 * GRP_NumCatalogPurchases7
1111600   +          +     0.71013591832499 * GRP_NumDistPurchases2
1111601   +          +    -0.99941348822511 * GRP_NumDistPurchases3
1111602   +          +    -1.71222646914551 * GRP_NumDistPurchases4
1111603   +          +     -0.8355751544695 * GRP_NumDistPurchases5
1111604   +          +     1.09722441702491 * GRP_NumDistPurchases6
1111605   +          +    -0.36564797968298 * GRP_NumDistPurchases7
1111606   +          +    -1.39173348713836 * GRP_NumDistPurchases8
1111607   +          +    -1.61047806766864 * GRP_NumDistPurchases9
1111608   +          +    -0.31673455057836 * GRP_NumDistPurchases10
1111609   +          +     1.71749014777959 * GRP_NumWebPurchases2
1111610   +          +    -0.61464421268827 * GRP_NumWebPurchases3
1111611   +          +     0.55447637104071 * GRP_NumWebPurchases4
1111612   +          +    -1.81323137433091 * GRP_NumWebPurchases5
1111613   +          +    -1.22214842263814 * GRP_NumWebPurchases6
1111614   +          +     0.28275706587518 * GRP_NumWebPurchases7
1111615   +          +     1.22923531582435 * GRP_NumWebPurchases8
1111616   +          +     2.85238831013779 * GRP_NumWebVisitsMonth2
1111617   +          +    -3.29385804821776 * GRP_NumWebVisitsMonth3
1111618   +          +     2.20618829723914 * GRP_NumWebVisitsMonth4
1111619   +          +     3.24203514545625 * GRP_NumWebVisitsMonth5
1111620   +          +    -0.84086906040118 * GRP_NumWebVisitsMonth6
1111621   +          +      0.3333837280375 * GRP_NumWebVisitsMonth7
1111622   +          +    -1.25762217338287 * GRP_NumWebVisitsMonth8
1111623   +          +     1.30519643221337 * GRP_RFMstat2  +    -0.02627804260872 *
1111624   +        GRP_RFMstat3  +     1.14984082845421 * GRP_RFMstat4
1111625   +          +     0.83225475534069 * GRP_RFMstat5  +    -0.42428538184132 *
1111626   +        GRP_RFMstat6  +     1.94081253380073 * GRP_RFMstat7
1111627   +          +    -0.76825104075311 * GRP_RFMstat8  +    -0.46997664130688 *
1111628   +        GRP_RFMstat9  +     0.65545683682605 * GRP_RFMstat10
1111629   +          +     0.22000711002242 * GRP_RMntFrq2  +    -0.02562020055082 *
1111630   +        GRP_RMntFrq3  +    -2.48187788965499 * GRP_RMntFrq4
1111631   +          +     0.66508637059331 * GRP_RMntFrq5  +     1.45751327667919 *
1111632   +        GRP_RMntFrq6  +    -1.96809727947204 * GRP_RMntFrq7
1111633   +          +     -0.8082292555095 * GRP_RMntFrq8  +     1.11614264001551 *
1111634   +        GRP_RMntFrq9  +    -1.43870507651779 * GRP_RMntFrq10
1111635   +          +    -0.57256200762816 * GRP_Recency2  +    -1.71538421405636 *
1111636   +        GRP_Recency3  +    -2.19388644962641 * GRP_Recency4
1111637   +          +    -1.37716674588339 * GRP_Recency5  +     1.63969065912165 *
1111638   +        GRP_Recency6  +     -1.6515031413567 * GRP_Recency7
1111639   +          +      2.3895996064376 * GRP_Recency8  +     2.13861252560781 *
1111640   +        GRP_Recency9  +    -0.93183650754976 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.93426558045547 * GRP_AcceptedCmp52 +
0.58768630988717 * GRP_AcceptedCmpTotal3 + -1.51960343620707 * GRP_Frq2 + -1.98554513483427 *
GRP_Frq3 + 0.99517325158626 * GRP_Frq4 + -1.43534788488184 * GRP_Frq5 + -1.74159367781906 *
GRP_Frq6 + -2.24167428586446 * GRP_Frq7 + -1.26021179170898 * GRP_Frq8 + 0.10708963233949 *
GRP_Frq9 + -0.08287659877378 * GRP_Frq10 + -0.29602203429318 * GRP_Income2 + -1.70148026213507
* GRP_Income3 + 0.28159451624585 * GRP_Income4 + 0.6177722344415 * GRP_Income5 +
-2.23556766589076 * GRP_Income6 + 3.93505019030186 * GRP_Income7 + -2.0824621480124 *
GRP_Income8 + 1.88660584456731 * GRP_Income9 + 0.90295722629145 * GRP_Income10 +
0.04984689303414 * GRP_Mnt2 + -0.50038201931754 * GRP_Mnt3 + -1.62831680351379 * GRP_Mnt4 +
1.4492453889036 * GRP_Mnt5 + -0.19189043815297 * GRP_Mnt6 + 0.64443706548299 * GRP_Mnt7 +
0.17668938010528 * GRP_Mnt8 + 1.28610426388581 * GRP_Mnt9 + -2.01393224902779 * GRP_Mnt10 +
-2.3797115089998 * GRP_MntFishProducts3 + 1.20810501566648 * GRP_MntFishProducts4 +
-0.31798087525347 * GRP_MntFishProducts5 + -0.69237701732465 * GRP_MntFishProducts6 +
-0.54891111072215 * GRP_MntFishProducts7 + -0.62013170184324 * GRP_MntFishProducts8 +
1.17121982810796 * GRP_MntFishProducts9 + -3.62687099938455 * GRP_MntFishProducts10 +
2.07559340651906 * GRP_MntGoldProds2 + 0.78435949490522 * GRP_MntGoldProds3 + 1.0403239403189
* GRP_MntGoldProds4 + -0.66844808788018 * GRP_MntGoldProds5 + -0.48019660076402 *
GRP_MntGoldProds6 + 0.6062935347869 * GRP_MntGoldProds7 + -0.38141722319712 *
GRP_MntGoldProds8 + -1.92694153724383 * GRP_MntGoldProds9 + -2.3811309398323 *
GRP_MntGoldProds10 + 0.10759987908894 * GRP_MntMeatProducts2 + 2.14459189351851 *
GRP_MntMeatProducts3 + -2.45166597704042 * GRP_MntMeatProducts4 + -0.7650846730976 *
GRP_MntMeatProducts5 + -3.51160870099496 * GRP_MntMeatProducts6 + -0.8259206362298 *
GRP_MntMeatProducts7 + 0.29979404593461 * GRP_MntMeatProducts8 + -0.9589168823801 *
GRP_MntMeatProducts9 + -0.2853616099647 * GRP_MntMeatProducts10 + 0.49848568055456 *
GRP_MntSweetProducts3 + -0.72776474415712 * GRP_MntSweetProducts4 + 0.74313666927565 *
GRP_MntSweetProducts5 + 0.84606469030976 * GRP_MntSweetProducts6 + -0.38145119762704 *
GRP_MntSweetProducts7 + -1.43497411133169 * GRP_MntSweetProducts8 + -0.84817446071124 *
GRP_MntSweetProducts9 + -0.09240038512346 * GRP_MntSweetProducts10 + -1.08774185820812 *
GRP_MntWines2 + -0.39031626452132 * GRP_MntWines3 + -0.58688830577606 * GRP_MntWines4 +
0.22911849699923 * GRP_MntWines5 + 2.74308065676411 * GRP_MntWines6 + -1.07317065256082 *
GRP_MntWines7 + -1.81019667683263 * GRP_MntWines8 + -0.17488280044697 * GRP_MntWines9 +
0.76965731666557 * GRP_MntWines10 + 1.45683083695577 * GRP_NumCatalogPurchases3 +
2.55194057820162 * GRP_NumCatalogPurchases4 + -0.63390649143698 * GRP_NumCatalogPurchases5 +
-0.55465371468416 * GRP_NumCatalogPurchases6 + -1.41375459861532 * GRP_NumCatalogPurchases7 +
0.71013591832499 * GRP_NumDistPurchases2 + -0.99941348822511 * GRP_NumDistPurchases3 +
-1.71222646914551 * GRP_NumDistPurchases4 + -0.8355751544695 * GRP_NumDistPurchases5 +
1.09722441702491 * GRP_NumDistPurchases6 + -0.36564797968298 * GRP_NumDistPurchases7 +
-1.39173348713836 * GRP_NumDistPurchases8 + -1.61047806766864 * GRP_NumDistPurchases9 +
-0.31673455057836 * GRP_NumDistPurchases10 + 1.71749014777959 * GRP_NumWebPurchases2 +
-0.61464421268827 * GRP_NumWebPurchases3 + 0.55447637104071 * GRP_NumWebPurchases4 +
-1.81323137433091 * GRP_NumWebPurchases5 + -1.22214842263814 * GRP_NumWebPurchases6 +
0.28275706587518 * GRP_NumWebPurchases7 + 1.22923531582435 * GRP_NumWebPurchases8 +
2.85238831013779 * GRP_NumWebVisitsMonth2 + -3.29385804821776 * GRP_NumWebVisitsMonth3 +
2.20618829723914 * GRP_NumWebVisitsMonth4 + 3.24203514545625 * GRP_NumWebVisitsMonth5 +
-0.84086906040118 * GRP_NumWebVisitsMonth6 + 0.3333837280375 * GRP_NumWebVisitsMonth7 +
-1.25762217338287 * GRP_NumWebVisitsMonth8 + 1.30519643221337 * GRP_RFMstat2 +
-0.02627804260872 * GRP_RFMstat3 + 1.14984082845421 * GRP_RFMstat4 + 0.83225475534069 *
GRP_RFMstat5 + -0.42428538184132 * GRP_RFMstat6 + 1.94081253380073 * GRP_RFMstat7 +
-0.76825104075311 * GRP_RFMstat8 + -0.46997664130688 * GRP_RFMstat9 + 0.65545683682605 *
GRP_RFMstat10 + 0.22000711002242 * GRP_RMntFrq2 + -0.02562020055082 * GRP_RMntFrq3 +
-2.48187788965499 * GRP_RMntFrq4 + 0.66508637059331 * GRP_RMntFrq5 + 1.45751327667919 *
GRP_RMntFrq6 + -1.96809727947204 * GRP_RMntFrq7 + -0.8082292555095 * GRP_RMntFrq8 +
1.11614264001551 * GRP_RMntFrq9 + -1.43870507651779 * GRP_RMntFrq10 + -0.57256200762816 *
GRP_Recency2 + -1.71538421405636 * GRP_Recency3 + -2.19388644962641 * GRP_Recency4 +
-1.37716674588339 * GRP_Recency5 + 1.63969065912165 * GRP_Recency6 + -1.6515031413567 *
GRP_Recency7 + 2.3895996064376 * GRP_Recency8 + 2.13861252560781 * GRP_Recency9 +
-0.93183650754976 * GRP_Recency10 ;
1111641   +   H1x1_1  =    -0.72291715628882 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.72291715628882 + H1x1_1 ;
1111642   +   H1x1_2  =    -0.26964559997869 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.26964559997869 + H1x1_2 ;
1111643   +   H1x1_3  =     0.02355688048223 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02355688048223 + H1x1_3 ;
1111644   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1111645   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1111646   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1111647   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1111648   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1111649   +END;
MPRINT(EM_DIAGRAM):   END;
1111650   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1111651   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1111652   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1111653   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1111654   +END;
MPRINT(EM_DIAGRAM):   END;
1111655   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1111656   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1111657   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1111658   +
1111659   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1111660   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1111661   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1111662   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1111663   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1111664   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1111665   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1111666   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1111667   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1111668   +end;
MPRINT(EM_DIAGRAM):   end;
1111669   +else do;
MPRINT(EM_DIAGRAM):   else do;
1111670   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1111671   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1111672   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1111673   +   end;
MPRINT(EM_DIAGRAM):   end;
1111674   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1111675   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1111676   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1111677   +   end;
MPRINT(EM_DIAGRAM):   end;
1111678   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1111679   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1111680   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1111681   +   end;
MPRINT(EM_DIAGRAM):   end;
1111682   +end;
MPRINT(EM_DIAGRAM):   end;
1111683   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1111684   +   P_DepVar1  =    -0.57143452341404 * H1x1_1  +    -7.51528087621546 * H1x1_2
1111685   +          +    -7.29696024025406 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.57143452341404 * H1x1_1 + -7.51528087621546 * H1x1_2 +
-7.29696024025406 * H1x1_3 ;
1111686   +   P_DepVar1  =     1.14031494500233 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.14031494500233 + P_DepVar1 ;
1111687   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1111688   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1111689   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1111690   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1111691   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1111692   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1111693   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1111694   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1111695   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1111696   +END;
MPRINT(EM_DIAGRAM):   END;
1111697   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1111698   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1111699   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1111700   +END;
MPRINT(EM_DIAGRAM):   END;
1111701   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1111702   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1111703   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1111704   +END;
MPRINT(EM_DIAGRAM):   END;
1111705   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1111706   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1111707   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1111708   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1111709   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1111710   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1111711   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1111712   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1111713   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1111714   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1111715   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1111716   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1111717   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1111718   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1111719   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1111720   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1111721   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1111722   +END;
MPRINT(EM_DIAGRAM):   END;
1111723   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1111724   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1111725   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1111726   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1111727    run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL25_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1111728    quit;
1111729    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1111730    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1111731    * AutoNeural25: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural25: Computing metadata for TRAIN data;
1111732    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.AUTONEURAL25_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural25_TRAIN out=_tempAdvisor
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural25_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural25_TRAIN out=WORK.M2STMBA7
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2STMBA7;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2STMBA7(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2STMBA7;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2STMBA7;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M20QPUB0 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M20QPUB0;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M20QPUB0;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3JQK5F3(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M20QPUB0;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M20QPUB0;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M20QPUB0;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M20QPUB0;
MPRINT(EMADVISECOLUMNS):   set WORK.M20QPUB0;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural25";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural25";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural25";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural25";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural25";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural25";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural25";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural25";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural25";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural25";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural25: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1112044    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1112045    set EMWS8.AutoNeural25_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_EMINFO;
1112046    where DATA='AutoNeural25' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural25' and KEY ^in('DECDATA', 'DECMETA',
'IMPORTANCE', 'MODEL');
1112047    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL25_EMINFO.
      WHERE (DATA='AutoNeural25') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1112048    data EMWS8.AutoNeural25_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural25_EMINFO;
1112049    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1112050    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1112051    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.AUTONEURAL25_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1112055    run;
1112056    data EMWS8.AutoNeural25_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_EMINFO;
1112057    set EMWS8.AutoNeural25_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_EMINFO WORK.MODELTEMP_INFO;
1112058    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL25_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL25_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1112059    proc sort data = EMWS8.AutoNeural25_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural25_EMINFO NOTHREADS;
1112060    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1112061    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL25_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL25_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1112062    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1112063    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1112064    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1112065    proc sort data = EMWS8.AutoNeural25_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural25_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1112066    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1112067    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL25_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1112068    data EMWS8.AutoNeural25_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_EMINFO;
1112069    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1112070    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1112071    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL25_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1112072    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1112073    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1112074    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1112075    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS8.AUTONEURAL25_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.AUTONEURAL25_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.46 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                16.46 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O36ST7OO
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O36ST7OO new;
MPRINT(EM_DIAGRAM):   run;
1112099    proc sort data=EMWS8.AutoNeural25_OUTFIT nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural25_OUTFIT nodupkey;
1112100    by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
1112101    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL25_OUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS8.AUTONEURAL25_OUTFIT has 2 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1112102    data EMWS8.AutoNeural25_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_EMOUTFIT(rename=(_NAME_=TARGET));
1112103    set EMWS8.AutoNeural25_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_OUTFIT(where=(_NAME_ eq 'OVERALL'));
1112104    label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
1112105    if _NAME_='OVERALL' then _NAME_='DepVar';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='DepVar';
1112106    drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
1112107    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL25_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS8.AUTONEURAL25_EMOUTFIT has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1112108    data EMWS8.AutoNeural25_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural25_EMOUTFIT;
1112109    set EMWS8.AutoNeural25_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_EMOUTFIT;
1112110    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1112111    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1112111  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1112112    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1112113    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL25_EMOUTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_EMOUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1112114    proc sort data=EMWS8.AutoNeural25_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural25_EMREPORTFIT nothreads;
1112115    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1112116    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL25_EMREPORTFIT.
NOTE: The data set EMWS8.AUTONEURAL25_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1112117    %let _EMwarndup = 0;
1112118    %let _EMtargetdup =;
1112119    %let _EMASEtargetdup =;
1112120    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1112121    set EMWS8.AutoNeural25_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_EMOUTFIT;
1112122    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1112123    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1112124    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1112125    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1112126    end;
MPRINT(EM_DIAGRAM):   end;
1112127    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL25_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1112128    proc sort data=EMWS8.BINNING_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.BINNING_CMeta_TRAIN out=WORK.SUBSETINMETA;
1112129    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1112130    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set EMWS8.BINNING_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 53 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1112131    proc sort data=EMWS8.AutoNeural25_VariableSet out=WORK.SUBSETVARSET(keep=NAME
1112131  ! REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural25_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
1112132    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1112133    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 51 observations read from the data set EMWS8.AUTONEURAL25_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 51 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1112134    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1112135    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1112136    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1112137    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 51 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 53 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1112138    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1112139    set EMWS8.AutoNeural25_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_CMeta_TRAIN;
1112140    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1112140  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1112141    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL25_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1112142    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1112143    set EMWS8.AutoNeural25_TRAIN(keep=
1112144    F_DepVar
1112145    I_DepVar
1112146    P_DepVar0
1112147    P_DepVar1
1112148    R_DepVar0
1112149    R_DepVar1
1112150    U_DepVar
1112151    _WARN_
1112152    DepVar
1112153    );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1112154    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL25_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL25_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural25_30437ZX nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural25_30437ZX;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural25_30437ZX(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural25_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural25_30437ZX;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural25_30437ZX;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural25_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 6.5190868E-7 OVLMAX 0.7577370614 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1116420    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1116421    set EMWS8.AutoNeural25_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_CMeta_TRAIN;
1116422    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1116422  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1116423    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL25_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1116424    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1116425    set EMWS8.AutoNeural25_VALIDATE(keep=
1116426    F_DepVar
1116427    I_DepVar
1116428    P_DepVar0
1116429    P_DepVar1
1116430    R_DepVar0
1116431    R_DepVar1
1116432    U_DepVar
1116433    _WARN_
1116434    DepVar
1116435    );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0
P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1116436    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.AUTONEURAL25_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.BINNING_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL25_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural25_0VYCWA6 nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural25_0VYCWA6;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural25_0VYCWA6(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural25_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_EMCLASSIFICATION WORK.AutoNeural25_0VYCWA6;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural25_0VYCWA6;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural25_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 6.5190868E-7 OVLMAX 0.7577368922 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1120711    %let _cn = %sysfunc(getoption(CENTER));
1120712    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1120713    proc print data=EMWS8.AutoNeural25_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural25_EMREPORTFIT noobs label;
1120714    var STAT LABEL TRAIN
1120715    VALIDATE
1120716    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1120717    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1120718    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1120719    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1120720    run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL25_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 835.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1120721    title10;
MPRINT(EM_DIAGRAM):   title10;
1120722    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1120723    proc sort data=EMWS8.AutoNeural25_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural25_EMCLASSIFICATION nothreads;
1120724    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1120725    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL25_EMCLASSIFICATION.
NOTE: The data set EMWS8.AUTONEURAL25_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1120726    %let _cn = %sysfunc(getoption(CENTER));
1120727    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1120728    proc print data=EMWS8.AutoNeural25_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural25_EMCLASSIFICATION noobs label;
1120729    var from into pct_row pct_col count percent
1120730    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1120731    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1120732    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1120733    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1120734    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1120735    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1120736    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1120737    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1120738    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1120739    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1120740    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1120741    run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL25_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 836.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1120742    title9;
MPRINT(EM_DIAGRAM):   title9;
1120743    title10;
MPRINT(EM_DIAGRAM):   title10;
1120744    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1120745    %let _cn = %sysfunc(getoption(CENTER));
1120746    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1120747    data EMWS8.AutoNeural25_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural25_EMEVENTREPORT;
1120748    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1120748  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1120749    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1120749  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1120749  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1120749  ! FALSEEVENT
1120750    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1120750  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1120750  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1120751       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1120752    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1120753    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1120754    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1120755    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1120756    set EMWS8.AutoNeural25_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural25_EMEVENTREPORT;
1120757    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL25_EMEVENTREPORT.
NOTE: The data set EMWS8.AUTONEURAL25_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1120758    proc print data=EMWS8.AutoNeural25_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural25_EMEVENTREPORT noobs label;
1120759    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1120760    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1120761    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1120762    run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL25_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 837.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1120763    title10;
MPRINT(EM_DIAGRAM):   title10;
1120764    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1120765    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1120766    modify AutoNeural25_EMRANK;
MPRINT(EM_DIAGRAM):   modify AutoNeural25_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1120767    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1120768    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1120768  ! ;
MPRINT(EM_DIAGRAM):   run;
1120769    run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL25_EMRANK.DATA.
1120770    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.17 seconds
      cpu time            0.18 seconds
 
 
1120771    %let _cn = %sysfunc(getoption(CENTER));
1120772    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1120773    proc print data=EMWS8.AutoNeural25_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural25_EMRANK label noobs;
1120774    var
1120775    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1120776    by
1120777    notsorted DATAROLE
1120778    notsorted TARGET
1120779    notsorted TARGETLABEL
1120780    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1120781    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1120782    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1120783    run;
 
NOTE: There were 40 observations read from the data set EMWS8.AUTONEURAL25_EMRANK.
NOTE: The PROCEDURE PRINT printed page 838.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1120784    title10;
MPRINT(EM_DIAGRAM):   title10;
1120785    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1120786    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1120787    modify AutoNeural25_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify AutoNeural25_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1120788    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1120788  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1120789    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1120789  ! ;
MPRINT(EM_DIAGRAM):   run;
1120790    run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL25_EMSCOREDIST.DATA.
1120791    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.17 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural25_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
