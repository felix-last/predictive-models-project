MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "10 de Março de 
2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "06H12m" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                10 de Março de 2016
Time:                06H12m
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3H2SWY4 
"E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural5\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3H2SWY4 new;
MPRINT(EM_DIAGRAM):   run;
185243     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
185244     set EMWS8.Neural5_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural5_OUTKEY;
185245     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
185246     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 35 observations read from the data set EMWS8.NEURAL5_OUTKEY.
NOTE: The data set WORK.OUTKEY has 3 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

185247     filename emflow
185247   ! "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural5: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
185248     *------------------------------------------------------------*;
185249     * Neural5: Scoring DATA data;
185250     *------------------------------------------------------------*;
185251     data EMWS8.Neural5_TRAIN
185252     / view=EMWS8.Neural5_TRAIN
185253     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural5_TRAIN / view=EMWS8.Neural5_TRAIN ;
185254     set EMWS8.PRINCOMP_TRAIN
185255     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_TRAIN ;
185256     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural5\EMFLOWSCORE.sas.
185257    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
185258    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
185259    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
185260    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
185261    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
185262    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
185263    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
185264    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
185265    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
185266    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
185267    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
185268    +LENGTH _WARN_ $4
185269    +      F_DepVar  $ 12
185270    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
185271    +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
185272    +
185273    +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
185274    +
185275    +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
185276    +
185277    +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
185278    +
185279    +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
185280    +
185281    +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
185282    +
185283    +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
185284    +
185285    +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
185286    +
185287    +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
185288    +
185289    +      label S_PC_18 = 'Standard: PC_18' ;
MPRINT(EM_DIAGRAM):   label S_PC_18 = 'Standard: PC_18' ;
185290    +
185291    +      label S_PC_19 = 'Standard: PC_19' ;
MPRINT(EM_DIAGRAM):   label S_PC_19 = 'Standard: PC_19' ;
185292    +
185293    +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
185294    +
185295    +      label S_PC_20 = 'Standard: PC_20' ;
MPRINT(EM_DIAGRAM):   label S_PC_20 = 'Standard: PC_20' ;
185296    +
185297    +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
185298    +
185299    +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
185300    +
185301    +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
185302    +
185303    +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
185304    +
185305    +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
185306    +
185307    +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
185308    +
185309    +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
185310    +
185311    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
185312    +
185313    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
185314    +
185315    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
185316    +
185317    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
185318    +
185319    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
185320    +
185321    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
185322    +
185323    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
185324    +
185325    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
185326    +
185327    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
185328    +
185329    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
185330    +
185331    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
185332    +
185333    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185334    +*** Checking missing input Interval
185335    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
185336    +
185337    +IF NMISS(
185338    +   PC_1 ,
185339    +   PC_10 ,
185340    +   PC_11 ,
185341    +   PC_12 ,
185342    +   PC_13 ,
185343    +   PC_14 ,
185344    +   PC_15 ,
185345    +   PC_16 ,
185346    +   PC_17 ,
185347    +   PC_18 ,
185348    +   PC_19 ,
185349    +   PC_2 ,
185350    +   PC_20 ,
185351    +   PC_3 ,
185352    +   PC_4 ,
185353    +   PC_5 ,
185354    +   PC_6 ,
185355    +   PC_7 ,
185356    +   PC_8 ,
185357    +   PC_9   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_18 , PC_19 , PC_2 , PC_20 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 ) THEN 
DO;
185358    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
185359    +
185360    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
185361    +END;
MPRINT(EM_DIAGRAM):   END;
185362    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185363    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
185364    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185365    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
185366    +   S_PC_1  = -2.9091149997299E-15 +     0.33258410789275 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -2.9091149997299E-15 + 0.33258410789275 * PC_1 ;
185367    +   S_PC_10  =  9.4139881630002E-16 +     0.95642096229329 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = 9.4139881630002E-16 + 0.95642096229329 * PC_10 ;
185368    +   S_PC_11  = -4.8568716302667E-15 +     0.98515792632482 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = -4.8568716302667E-15 + 0.98515792632482 * PC_11 ;
185369    +   S_PC_12  =  -1.544801809949E-15 +     1.01713929497733 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -1.544801809949E-15 + 1.01713929497733 * PC_12 ;
185370    +   S_PC_13  = -8.2211417768132E-16 +     1.04295917669268 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = -8.2211417768132E-16 + 1.04295917669268 * PC_13 ;
185371    +   S_PC_14  =  3.1036726720486E-17 +     1.08045626609849 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = 3.1036726720486E-17 + 1.08045626609849 * PC_14 ;
185372    +   S_PC_15  =  -1.066033180354E-15 +     1.17432651465789 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -1.066033180354E-15 + 1.17432651465789 * PC_15 ;
185373    +   S_PC_16  = -1.0358103285074E-15 +     1.22100880890388 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -1.0358103285074E-15 + 1.22100880890388 * PC_16 ;
185374    +   S_PC_17  =  -2.462156936438E-15 +     1.32547591624883 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = -2.462156936438E-15 + 1.32547591624883 * PC_17 ;
185375    +   S_PC_18  = -4.8466570909833E-16 +     1.38536800877319 * PC_18 ;
MPRINT(EM_DIAGRAM):   S_PC_18 = -4.8466570909833E-16 + 1.38536800877319 * PC_18 ;
185376    +   S_PC_19  =  -7.134749074506E-15 +     1.46181079715479 * PC_19 ;
MPRINT(EM_DIAGRAM):   S_PC_19 = -7.134749074506E-15 + 1.46181079715479 * PC_19 ;
185377    +   S_PC_2  =  6.9336706238808E-16 +     0.49377461893848 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.9336706238808E-16 + 0.49377461893848 * PC_2 ;
185378    +   S_PC_20  =  -1.676677278498E-15 +     1.91794072839992 * PC_20 ;
MPRINT(EM_DIAGRAM):   S_PC_20 = -1.676677278498E-15 + 1.91794072839992 * PC_20 ;
185379    +   S_PC_3  =  1.6042377095594E-15 +     0.69825320789627 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 1.6042377095594E-15 + 0.69825320789627 * PC_3 ;
185380    +   S_PC_4  = -6.0650204234062E-15 +     0.71190873926042 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -6.0650204234062E-15 + 0.71190873926042 * PC_4 ;
185381    +   S_PC_5  =  1.3855154199771E-15 +     0.82566321395447 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = 1.3855154199771E-15 + 0.82566321395447 * PC_5 ;
185382    +   S_PC_6  = -6.2176933434597E-15 +     0.84875049848914 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = -6.2176933434597E-15 + 0.84875049848914 * PC_6 ;
185383    +   S_PC_7  = -3.5067709325792E-15 +     0.85820298471078 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = -3.5067709325792E-15 + 0.85820298471078 * PC_7 ;
185384    +   S_PC_8  = -3.0988852821524E-15 +     0.90019129209771 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -3.0988852821524E-15 + 0.90019129209771 * PC_8 ;
185385    +   S_PC_9  = -1.9153640988538E-15 +     0.93038569552474 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -1.9153640988538E-15 + 0.93038569552474 * PC_9 ;
185386    +END;
MPRINT(EM_DIAGRAM):   END;
185387    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
185388    +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
185389    +   ELSE S_PC_1  = -2.9091149997299E-15 +     0.33258410789275 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -2.9091149997299E-15 + 0.33258410789275 * PC_1 ;
185390    +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
185391    +   ELSE S_PC_10  =  9.4139881630002E-16 +     0.95642096229329 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = 9.4139881630002E-16 + 0.95642096229329 * PC_10 ;
185392    +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
185393    +   ELSE S_PC_11  = -4.8568716302667E-15 +     0.98515792632482 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = -4.8568716302667E-15 + 0.98515792632482 * PC_11 ;
185394    +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
185395    +   ELSE S_PC_12  =  -1.544801809949E-15 +     1.01713929497733 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -1.544801809949E-15 + 1.01713929497733 * PC_12 ;
185396    +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
185397    +   ELSE S_PC_13  = -8.2211417768132E-16 +     1.04295917669268 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = -8.2211417768132E-16 + 1.04295917669268 * PC_13 ;
185398    +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
185399    +   ELSE S_PC_14  =  3.1036726720486E-17 +     1.08045626609849 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = 3.1036726720486E-17 + 1.08045626609849 * PC_14 ;
185400    +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
185401    +   ELSE S_PC_15  =  -1.066033180354E-15 +     1.17432651465789 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -1.066033180354E-15 + 1.17432651465789 * PC_15 ;
185402    +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
185403    +   ELSE S_PC_16  = -1.0358103285074E-15 +     1.22100880890388 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -1.0358103285074E-15 + 1.22100880890388 * PC_16 ;
185404    +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
185405    +   ELSE S_PC_17  =  -2.462156936438E-15 +     1.32547591624883 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = -2.462156936438E-15 + 1.32547591624883 * PC_17 ;
185406    +   IF MISSING( PC_18 ) THEN S_PC_18  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_18 ) THEN S_PC_18 = . ;
185407    +   ELSE S_PC_18  = -4.8466570909833E-16 +     1.38536800877319 * PC_18 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_18 = -4.8466570909833E-16 + 1.38536800877319 * PC_18 ;
185408    +   IF MISSING( PC_19 ) THEN S_PC_19  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_19 ) THEN S_PC_19 = . ;
185409    +   ELSE S_PC_19  =  -7.134749074506E-15 +     1.46181079715479 * PC_19 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_19 = -7.134749074506E-15 + 1.46181079715479 * PC_19 ;
185410    +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
185411    +   ELSE S_PC_2  =  6.9336706238808E-16 +     0.49377461893848 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.9336706238808E-16 + 0.49377461893848 * PC_2 ;
185412    +   IF MISSING( PC_20 ) THEN S_PC_20  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_20 ) THEN S_PC_20 = . ;
185413    +   ELSE S_PC_20  =  -1.676677278498E-15 +     1.91794072839992 * PC_20 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_20 = -1.676677278498E-15 + 1.91794072839992 * PC_20 ;
185414    +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
185415    +   ELSE S_PC_3  =  1.6042377095594E-15 +     0.69825320789627 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 1.6042377095594E-15 + 0.69825320789627 * PC_3 ;
185416    +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
185417    +   ELSE S_PC_4  = -6.0650204234062E-15 +     0.71190873926042 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -6.0650204234062E-15 + 0.71190873926042 * PC_4 ;
185418    +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
185419    +   ELSE S_PC_5  =  1.3855154199771E-15 +     0.82566321395447 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = 1.3855154199771E-15 + 0.82566321395447 * PC_5 ;
185420    +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
185421    +   ELSE S_PC_6  = -6.2176933434597E-15 +     0.84875049848914 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = -6.2176933434597E-15 + 0.84875049848914 * PC_6 ;
185422    +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
185423    +   ELSE S_PC_7  = -3.5067709325792E-15 +     0.85820298471078 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = -3.5067709325792E-15 + 0.85820298471078 * PC_7 ;
185424    +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
185425    +   ELSE S_PC_8  = -3.0988852821524E-15 +     0.90019129209771 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -3.0988852821524E-15 + 0.90019129209771 * PC_8 ;
185426    +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
185427    +   ELSE S_PC_9  = -1.9153640988538E-15 +     0.93038569552474 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -1.9153640988538E-15 + 0.93038569552474 * PC_9 ;
185428    +END;
MPRINT(EM_DIAGRAM):   END;
185429    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185430    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
185431    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185432    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
185433    +   H11  =    -0.99306900214106 * S_PC_1  +     -0.0513831833596 * S_PC_10
185434    +          +     -0.0716512988168 * S_PC_11  +     0.27258581041106 * S_PC_12
185435    +          +     0.78565780600643 * S_PC_13  +     0.69541013361208 * S_PC_14
185436    +          +     -0.0244517543293 * S_PC_15  +      0.4277432899897 * S_PC_16
185437    +          +     0.05688645411725 * S_PC_17  +     0.23351220124053 * S_PC_18
185438    +          +    -0.56189160596739 * S_PC_19  +     0.41269896776602 * S_PC_2
185439    +          +       0.019242998432 * S_PC_20  +     -0.1542660437783 * S_PC_3
185440    +          +    -0.18723069351383 * S_PC_4  +    -0.10544727421904 * S_PC_5
185441    +          +     0.51365839780343 * S_PC_6  +     0.16877670147239 * S_PC_7
185442    +          +     0.37455122829671 * S_PC_8  +    -0.23621037343678 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H11 = -0.99306900214106 * S_PC_1 + -0.0513831833596 * S_PC_10 + 
-0.0716512988168 * S_PC_11 + 0.27258581041106 * S_PC_12 + 0.78565780600643 * S_PC_13 + 
0.69541013361208 * S_PC_14 + -0.0244517543293 * S_PC_15 + 0.4277432899897 * S_PC_16 + 
0.05688645411725 * S_PC_17 + 0.23351220124053 * S_PC_18 + -0.56189160596739 * S_PC_19 + 
0.41269896776602 * S_PC_2 + 0.019242998432 * S_PC_20 + -0.1542660437783 * S_PC_3 + 
-0.18723069351383 * S_PC_4 + -0.10544727421904 * S_PC_5 + 0.51365839780343 * S_PC_6 + 
0.16877670147239 * S_PC_7 + 0.37455122829671 * S_PC_8 + -0.23621037343678 * S_PC_9 ;
185443    +   H12  =    -1.54255895740992 * S_PC_1  +    -0.01713925211396 * S_PC_10
185444    +          +    -0.09013631634862 * S_PC_11  +     0.32132516606218 * S_PC_12
185445    +          +    -0.02582588438199 * S_PC_13  +    -0.95355761446917 * S_PC_14
185446    +          +     0.08461342849405 * S_PC_15  +     0.23335763993129 * S_PC_16
185447    +          +    -0.07089172219834 * S_PC_17  +     -0.7498148628123 * S_PC_18
185448    +          +     0.05832506847588 * S_PC_19  +     1.02201002495551 * S_PC_2
185449    +          +     0.74375784598799 * S_PC_20  +     0.93091182344245 * S_PC_3
185450    +          +     0.40183151116666 * S_PC_4  +    -0.16149844257096 * S_PC_5
185451    +          +     -0.3421558559102 * S_PC_6  +     0.06185440351233 * S_PC_7
185452    +          +    -0.54416142882545 * S_PC_8  +     0.19545165586575 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H12 = -1.54255895740992 * S_PC_1 + -0.01713925211396 * S_PC_10 + 
-0.09013631634862 * S_PC_11 + 0.32132516606218 * S_PC_12 + -0.02582588438199 * S_PC_13 + 
-0.95355761446917 * S_PC_14 + 0.08461342849405 * S_PC_15 + 0.23335763993129 * S_PC_16 + 
-0.07089172219834 * S_PC_17 + -0.7498148628123 * S_PC_18 + 0.05832506847588 * S_PC_19 + 
1.02201002495551 * S_PC_2 + 0.74375784598799 * S_PC_20 + 0.93091182344245 * S_PC_3 + 
0.40183151116666 * S_PC_4 + -0.16149844257096 * S_PC_5 + -0.3421558559102 * S_PC_6 + 
0.06185440351233 * S_PC_7 + -0.54416142882545 * S_PC_8 + 0.19545165586575 * S_PC_9 ;
185453    +   H13  =      0.7696492369308 * S_PC_1  +     0.10183239415264 * S_PC_10
185454    +          +    -0.97131946292477 * S_PC_11  +     0.77441832298683 * S_PC_12
185455    +          +     0.91494452782266 * S_PC_13  +    -0.05082084785156 * S_PC_14
185456    +          +     0.11089819038182 * S_PC_15  +     0.11551801566191 * S_PC_16
185457    +          +     0.31282223007587 * S_PC_17  +    -0.11514270181576 * S_PC_18
185458    +          +    -0.28546630271105 * S_PC_19  +     0.78720113359122 * S_PC_2
185459    +          +    -0.19179498789121 * S_PC_20  +      0.7953092188774 * S_PC_3
185460    +          +    -0.65601840591794 * S_PC_4  +    -0.09055628743895 * S_PC_5
185461    +          +     0.17362794049055 * S_PC_6  +     0.61739715974005 * S_PC_7
185462    +          +    -0.10866994727207 * S_PC_8  +    -0.31414229902981 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H13 = 0.7696492369308 * S_PC_1 + 0.10183239415264 * S_PC_10 + 
-0.97131946292477 * S_PC_11 + 0.77441832298683 * S_PC_12 + 0.91494452782266 * S_PC_13 + 
-0.05082084785156 * S_PC_14 + 0.11089819038182 * S_PC_15 + 0.11551801566191 * S_PC_16 + 
0.31282223007587 * S_PC_17 + -0.11514270181576 * S_PC_18 + -0.28546630271105 * S_PC_19 + 
0.78720113359122 * S_PC_2 + -0.19179498789121 * S_PC_20 + 0.7953092188774 * S_PC_3 + 
-0.65601840591794 * S_PC_4 + -0.09055628743895 * S_PC_5 + 0.17362794049055 * S_PC_6 + 
0.61739715974005 * S_PC_7 + -0.10866994727207 * S_PC_8 + -0.31414229902981 * S_PC_9 ;
185463    +   H11  =     0.60586583906357 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.60586583906357 + H11 ;
185464    +   H12  =      1.2525277592628 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.2525277592628 + H12 ;
185465    +   H13  =    -1.89630099193719 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.89630099193719 + H13 ;
185466    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
185467    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
185468    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
185469    +END;
MPRINT(EM_DIAGRAM):   END;
185470    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
185471    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
185472    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
185473    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
185474    +END;
MPRINT(EM_DIAGRAM):   END;
185475    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185476    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
185477    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185478    +
185479    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
185480    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
185481    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
185482    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
185483    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
185484    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
185485    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
185486    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
185487    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
185488    +end;
MPRINT(EM_DIAGRAM):   end;
185489    +else do;
MPRINT(EM_DIAGRAM):   else do;
185490    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
185491    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
185492    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
185493    +   end;
MPRINT(EM_DIAGRAM):   end;
185494    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
185495    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
185496    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
185497    +   end;
MPRINT(EM_DIAGRAM):   end;
185498    +   else do;
MPRINT(EM_DIAGRAM):   else do;
185499    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
185500    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
185501    +   end;
MPRINT(EM_DIAGRAM):   end;
185502    +end;
MPRINT(EM_DIAGRAM):   end;
185503    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
185504    +   P_DepVar1  =    -2.61833479523352 * H11  +    -2.22364976391319 * H12
185505    +          +     2.80212192737867 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.61833479523352 * H11 + -2.22364976391319 * H12 + 
2.80212192737867 * H13 ;
185506    +   P_DepVar1  =    -2.41153326657964 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.41153326657964 + P_DepVar1 ;
185507    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
185508    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
185509    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
185510    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
185511    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
185512    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
185513    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
185514    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
185515    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
185516    +END;
MPRINT(EM_DIAGRAM):   END;
185517    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
185518    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
185519    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
185520    +END;
MPRINT(EM_DIAGRAM):   END;
185521    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
185522    +   P_DepVar1  =     0.06989576946658;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.06989576946658;
185523    +   P_DepVar0  =     0.93010423053341;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.93010423053341;
185524    +END;
MPRINT(EM_DIAGRAM):   END;
185525    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
185526    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
185527    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
185528    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
185529    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
185530    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
185531    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
185532    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185533    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
185534    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185535    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
185536    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
185537    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
185538    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
185539    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
185540    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
185541    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
185542    +END;
MPRINT(EM_DIAGRAM):   END;
185543    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
185544    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
185545    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
185546    +drop
185547    +H11
185548    +H12
185549    +H13
185550    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
185551    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
185552     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL5_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
185553     quit;
185554     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
185555     filename emflow
185555   ! "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural5: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
185556     *------------------------------------------------------------*;
185557     * Neural5: Scoring VALIDATE data;
185558     *------------------------------------------------------------*;
185559     data EMWS8.Neural5_VALIDATE
185560     / view=EMWS8.Neural5_VALIDATE
185561     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural5_VALIDATE / view=EMWS8.Neural5_VALIDATE ;
185562     set EMWS8.PRINCOMP_VALIDATE
185563     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_VALIDATE ;
185564     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural5\EMFLOWSCORE.sas.
185565    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
185566    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
185567    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
185568    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
185569    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
185570    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
185571    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
185572    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
185573    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
185574    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
185575    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
185576    +LENGTH _WARN_ $4
185577    +      F_DepVar  $ 12
185578    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
185579    +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
185580    +
185581    +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
185582    +
185583    +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
185584    +
185585    +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
185586    +
185587    +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
185588    +
185589    +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
185590    +
185591    +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
185592    +
185593    +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
185594    +
185595    +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
185596    +
185597    +      label S_PC_18 = 'Standard: PC_18' ;
MPRINT(EM_DIAGRAM):   label S_PC_18 = 'Standard: PC_18' ;
185598    +
185599    +      label S_PC_19 = 'Standard: PC_19' ;
MPRINT(EM_DIAGRAM):   label S_PC_19 = 'Standard: PC_19' ;
185600    +
185601    +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
185602    +
185603    +      label S_PC_20 = 'Standard: PC_20' ;
MPRINT(EM_DIAGRAM):   label S_PC_20 = 'Standard: PC_20' ;
185604    +
185605    +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
185606    +
185607    +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
185608    +
185609    +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
185610    +
185611    +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
185612    +
185613    +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
185614    +
185615    +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
185616    +
185617    +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
185618    +
185619    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
185620    +
185621    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
185622    +
185623    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
185624    +
185625    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
185626    +
185627    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
185628    +
185629    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
185630    +
185631    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
185632    +
185633    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
185634    +
185635    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
185636    +
185637    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
185638    +
185639    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
185640    +
185641    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185642    +*** Checking missing input Interval
185643    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
185644    +
185645    +IF NMISS(
185646    +   PC_1 ,
185647    +   PC_10 ,
185648    +   PC_11 ,
185649    +   PC_12 ,
185650    +   PC_13 ,
185651    +   PC_14 ,
185652    +   PC_15 ,
185653    +   PC_16 ,
185654    +   PC_17 ,
185655    +   PC_18 ,
185656    +   PC_19 ,
185657    +   PC_2 ,
185658    +   PC_20 ,
185659    +   PC_3 ,
185660    +   PC_4 ,
185661    +   PC_5 ,
185662    +   PC_6 ,
185663    +   PC_7 ,
185664    +   PC_8 ,
185665    +   PC_9   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_18 , PC_19 , PC_2 , PC_20 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 ) THEN 
DO;
185666    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
185667    +
185668    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
185669    +END;
MPRINT(EM_DIAGRAM):   END;
185670    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185671    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
185672    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185673    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
185674    +   S_PC_1  = -2.9091149997299E-15 +     0.33258410789275 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -2.9091149997299E-15 + 0.33258410789275 * PC_1 ;
185675    +   S_PC_10  =  9.4139881630002E-16 +     0.95642096229329 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = 9.4139881630002E-16 + 0.95642096229329 * PC_10 ;
185676    +   S_PC_11  = -4.8568716302667E-15 +     0.98515792632482 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = -4.8568716302667E-15 + 0.98515792632482 * PC_11 ;
185677    +   S_PC_12  =  -1.544801809949E-15 +     1.01713929497733 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -1.544801809949E-15 + 1.01713929497733 * PC_12 ;
185678    +   S_PC_13  = -8.2211417768132E-16 +     1.04295917669268 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = -8.2211417768132E-16 + 1.04295917669268 * PC_13 ;
185679    +   S_PC_14  =  3.1036726720486E-17 +     1.08045626609849 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = 3.1036726720486E-17 + 1.08045626609849 * PC_14 ;
185680    +   S_PC_15  =  -1.066033180354E-15 +     1.17432651465789 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -1.066033180354E-15 + 1.17432651465789 * PC_15 ;
185681    +   S_PC_16  = -1.0358103285074E-15 +     1.22100880890388 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -1.0358103285074E-15 + 1.22100880890388 * PC_16 ;
185682    +   S_PC_17  =  -2.462156936438E-15 +     1.32547591624883 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = -2.462156936438E-15 + 1.32547591624883 * PC_17 ;
185683    +   S_PC_18  = -4.8466570909833E-16 +     1.38536800877319 * PC_18 ;
MPRINT(EM_DIAGRAM):   S_PC_18 = -4.8466570909833E-16 + 1.38536800877319 * PC_18 ;
185684    +   S_PC_19  =  -7.134749074506E-15 +     1.46181079715479 * PC_19 ;
MPRINT(EM_DIAGRAM):   S_PC_19 = -7.134749074506E-15 + 1.46181079715479 * PC_19 ;
185685    +   S_PC_2  =  6.9336706238808E-16 +     0.49377461893848 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.9336706238808E-16 + 0.49377461893848 * PC_2 ;
185686    +   S_PC_20  =  -1.676677278498E-15 +     1.91794072839992 * PC_20 ;
MPRINT(EM_DIAGRAM):   S_PC_20 = -1.676677278498E-15 + 1.91794072839992 * PC_20 ;
185687    +   S_PC_3  =  1.6042377095594E-15 +     0.69825320789627 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 1.6042377095594E-15 + 0.69825320789627 * PC_3 ;
185688    +   S_PC_4  = -6.0650204234062E-15 +     0.71190873926042 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -6.0650204234062E-15 + 0.71190873926042 * PC_4 ;
185689    +   S_PC_5  =  1.3855154199771E-15 +     0.82566321395447 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = 1.3855154199771E-15 + 0.82566321395447 * PC_5 ;
185690    +   S_PC_6  = -6.2176933434597E-15 +     0.84875049848914 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = -6.2176933434597E-15 + 0.84875049848914 * PC_6 ;
185691    +   S_PC_7  = -3.5067709325792E-15 +     0.85820298471078 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = -3.5067709325792E-15 + 0.85820298471078 * PC_7 ;
185692    +   S_PC_8  = -3.0988852821524E-15 +     0.90019129209771 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -3.0988852821524E-15 + 0.90019129209771 * PC_8 ;
185693    +   S_PC_9  = -1.9153640988538E-15 +     0.93038569552474 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -1.9153640988538E-15 + 0.93038569552474 * PC_9 ;
185694    +END;
MPRINT(EM_DIAGRAM):   END;
185695    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
185696    +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
185697    +   ELSE S_PC_1  = -2.9091149997299E-15 +     0.33258410789275 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -2.9091149997299E-15 + 0.33258410789275 * PC_1 ;
185698    +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
185699    +   ELSE S_PC_10  =  9.4139881630002E-16 +     0.95642096229329 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = 9.4139881630002E-16 + 0.95642096229329 * PC_10 ;
185700    +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
185701    +   ELSE S_PC_11  = -4.8568716302667E-15 +     0.98515792632482 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = -4.8568716302667E-15 + 0.98515792632482 * PC_11 ;
185702    +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
185703    +   ELSE S_PC_12  =  -1.544801809949E-15 +     1.01713929497733 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -1.544801809949E-15 + 1.01713929497733 * PC_12 ;
185704    +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
185705    +   ELSE S_PC_13  = -8.2211417768132E-16 +     1.04295917669268 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = -8.2211417768132E-16 + 1.04295917669268 * PC_13 ;
185706    +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
185707    +   ELSE S_PC_14  =  3.1036726720486E-17 +     1.08045626609849 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = 3.1036726720486E-17 + 1.08045626609849 * PC_14 ;
185708    +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
185709    +   ELSE S_PC_15  =  -1.066033180354E-15 +     1.17432651465789 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -1.066033180354E-15 + 1.17432651465789 * PC_15 ;
185710    +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
185711    +   ELSE S_PC_16  = -1.0358103285074E-15 +     1.22100880890388 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -1.0358103285074E-15 + 1.22100880890388 * PC_16 ;
185712    +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
185713    +   ELSE S_PC_17  =  -2.462156936438E-15 +     1.32547591624883 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = -2.462156936438E-15 + 1.32547591624883 * PC_17 ;
185714    +   IF MISSING( PC_18 ) THEN S_PC_18  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_18 ) THEN S_PC_18 = . ;
185715    +   ELSE S_PC_18  = -4.8466570909833E-16 +     1.38536800877319 * PC_18 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_18 = -4.8466570909833E-16 + 1.38536800877319 * PC_18 ;
185716    +   IF MISSING( PC_19 ) THEN S_PC_19  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_19 ) THEN S_PC_19 = . ;
185717    +   ELSE S_PC_19  =  -7.134749074506E-15 +     1.46181079715479 * PC_19 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_19 = -7.134749074506E-15 + 1.46181079715479 * PC_19 ;
185718    +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
185719    +   ELSE S_PC_2  =  6.9336706238808E-16 +     0.49377461893848 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.9336706238808E-16 + 0.49377461893848 * PC_2 ;
185720    +   IF MISSING( PC_20 ) THEN S_PC_20  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_20 ) THEN S_PC_20 = . ;
185721    +   ELSE S_PC_20  =  -1.676677278498E-15 +     1.91794072839992 * PC_20 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_20 = -1.676677278498E-15 + 1.91794072839992 * PC_20 ;
185722    +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
185723    +   ELSE S_PC_3  =  1.6042377095594E-15 +     0.69825320789627 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 1.6042377095594E-15 + 0.69825320789627 * PC_3 ;
185724    +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
185725    +   ELSE S_PC_4  = -6.0650204234062E-15 +     0.71190873926042 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -6.0650204234062E-15 + 0.71190873926042 * PC_4 ;
185726    +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
185727    +   ELSE S_PC_5  =  1.3855154199771E-15 +     0.82566321395447 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = 1.3855154199771E-15 + 0.82566321395447 * PC_5 ;
185728    +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
185729    +   ELSE S_PC_6  = -6.2176933434597E-15 +     0.84875049848914 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = -6.2176933434597E-15 + 0.84875049848914 * PC_6 ;
185730    +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
185731    +   ELSE S_PC_7  = -3.5067709325792E-15 +     0.85820298471078 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = -3.5067709325792E-15 + 0.85820298471078 * PC_7 ;
185732    +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
185733    +   ELSE S_PC_8  = -3.0988852821524E-15 +     0.90019129209771 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -3.0988852821524E-15 + 0.90019129209771 * PC_8 ;
185734    +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
185735    +   ELSE S_PC_9  = -1.9153640988538E-15 +     0.93038569552474 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -1.9153640988538E-15 + 0.93038569552474 * PC_9 ;
185736    +END;
MPRINT(EM_DIAGRAM):   END;
185737    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185738    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
185739    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185740    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
185741    +   H11  =    -0.99306900214106 * S_PC_1  +     -0.0513831833596 * S_PC_10
185742    +          +     -0.0716512988168 * S_PC_11  +     0.27258581041106 * S_PC_12
185743    +          +     0.78565780600643 * S_PC_13  +     0.69541013361208 * S_PC_14
185744    +          +     -0.0244517543293 * S_PC_15  +      0.4277432899897 * S_PC_16
185745    +          +     0.05688645411725 * S_PC_17  +     0.23351220124053 * S_PC_18
185746    +          +    -0.56189160596739 * S_PC_19  +     0.41269896776602 * S_PC_2
185747    +          +       0.019242998432 * S_PC_20  +     -0.1542660437783 * S_PC_3
185748    +          +    -0.18723069351383 * S_PC_4  +    -0.10544727421904 * S_PC_5
185749    +          +     0.51365839780343 * S_PC_6  +     0.16877670147239 * S_PC_7
185750    +          +     0.37455122829671 * S_PC_8  +    -0.23621037343678 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H11 = -0.99306900214106 * S_PC_1 + -0.0513831833596 * S_PC_10 + 
-0.0716512988168 * S_PC_11 + 0.27258581041106 * S_PC_12 + 0.78565780600643 * S_PC_13 + 
0.69541013361208 * S_PC_14 + -0.0244517543293 * S_PC_15 + 0.4277432899897 * S_PC_16 + 
0.05688645411725 * S_PC_17 + 0.23351220124053 * S_PC_18 + -0.56189160596739 * S_PC_19 + 
0.41269896776602 * S_PC_2 + 0.019242998432 * S_PC_20 + -0.1542660437783 * S_PC_3 + 
-0.18723069351383 * S_PC_4 + -0.10544727421904 * S_PC_5 + 0.51365839780343 * S_PC_6 + 
0.16877670147239 * S_PC_7 + 0.37455122829671 * S_PC_8 + -0.23621037343678 * S_PC_9 ;
185751    +   H12  =    -1.54255895740992 * S_PC_1  +    -0.01713925211396 * S_PC_10
185752    +          +    -0.09013631634862 * S_PC_11  +     0.32132516606218 * S_PC_12
185753    +          +    -0.02582588438199 * S_PC_13  +    -0.95355761446917 * S_PC_14
185754    +          +     0.08461342849405 * S_PC_15  +     0.23335763993129 * S_PC_16
185755    +          +    -0.07089172219834 * S_PC_17  +     -0.7498148628123 * S_PC_18
185756    +          +     0.05832506847588 * S_PC_19  +     1.02201002495551 * S_PC_2
185757    +          +     0.74375784598799 * S_PC_20  +     0.93091182344245 * S_PC_3
185758    +          +     0.40183151116666 * S_PC_4  +    -0.16149844257096 * S_PC_5
185759    +          +     -0.3421558559102 * S_PC_6  +     0.06185440351233 * S_PC_7
185760    +          +    -0.54416142882545 * S_PC_8  +     0.19545165586575 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H12 = -1.54255895740992 * S_PC_1 + -0.01713925211396 * S_PC_10 + 
-0.09013631634862 * S_PC_11 + 0.32132516606218 * S_PC_12 + -0.02582588438199 * S_PC_13 + 
-0.95355761446917 * S_PC_14 + 0.08461342849405 * S_PC_15 + 0.23335763993129 * S_PC_16 + 
-0.07089172219834 * S_PC_17 + -0.7498148628123 * S_PC_18 + 0.05832506847588 * S_PC_19 + 
1.02201002495551 * S_PC_2 + 0.74375784598799 * S_PC_20 + 0.93091182344245 * S_PC_3 + 
0.40183151116666 * S_PC_4 + -0.16149844257096 * S_PC_5 + -0.3421558559102 * S_PC_6 + 
0.06185440351233 * S_PC_7 + -0.54416142882545 * S_PC_8 + 0.19545165586575 * S_PC_9 ;
185761    +   H13  =      0.7696492369308 * S_PC_1  +     0.10183239415264 * S_PC_10
185762    +          +    -0.97131946292477 * S_PC_11  +     0.77441832298683 * S_PC_12
185763    +          +     0.91494452782266 * S_PC_13  +    -0.05082084785156 * S_PC_14
185764    +          +     0.11089819038182 * S_PC_15  +     0.11551801566191 * S_PC_16
185765    +          +     0.31282223007587 * S_PC_17  +    -0.11514270181576 * S_PC_18
185766    +          +    -0.28546630271105 * S_PC_19  +     0.78720113359122 * S_PC_2
185767    +          +    -0.19179498789121 * S_PC_20  +      0.7953092188774 * S_PC_3
185768    +          +    -0.65601840591794 * S_PC_4  +    -0.09055628743895 * S_PC_5
185769    +          +     0.17362794049055 * S_PC_6  +     0.61739715974005 * S_PC_7
185770    +          +    -0.10866994727207 * S_PC_8  +    -0.31414229902981 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H13 = 0.7696492369308 * S_PC_1 + 0.10183239415264 * S_PC_10 + 
-0.97131946292477 * S_PC_11 + 0.77441832298683 * S_PC_12 + 0.91494452782266 * S_PC_13 + 
-0.05082084785156 * S_PC_14 + 0.11089819038182 * S_PC_15 + 0.11551801566191 * S_PC_16 + 
0.31282223007587 * S_PC_17 + -0.11514270181576 * S_PC_18 + -0.28546630271105 * S_PC_19 + 
0.78720113359122 * S_PC_2 + -0.19179498789121 * S_PC_20 + 0.7953092188774 * S_PC_3 + 
-0.65601840591794 * S_PC_4 + -0.09055628743895 * S_PC_5 + 0.17362794049055 * S_PC_6 + 
0.61739715974005 * S_PC_7 + -0.10866994727207 * S_PC_8 + -0.31414229902981 * S_PC_9 ;
185771    +   H11  =     0.60586583906357 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.60586583906357 + H11 ;
185772    +   H12  =      1.2525277592628 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.2525277592628 + H12 ;
185773    +   H13  =    -1.89630099193719 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.89630099193719 + H13 ;
185774    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
185775    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
185776    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
185777    +END;
MPRINT(EM_DIAGRAM):   END;
185778    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
185779    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
185780    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
185781    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
185782    +END;
MPRINT(EM_DIAGRAM):   END;
185783    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185784    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
185785    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185786    +
185787    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
185788    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
185789    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
185790    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
185791    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
185792    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
185793    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
185794    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
185795    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
185796    +end;
MPRINT(EM_DIAGRAM):   end;
185797    +else do;
MPRINT(EM_DIAGRAM):   else do;
185798    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
185799    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
185800    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
185801    +   end;
MPRINT(EM_DIAGRAM):   end;
185802    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
185803    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
185804    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
185805    +   end;
MPRINT(EM_DIAGRAM):   end;
185806    +   else do;
MPRINT(EM_DIAGRAM):   else do;
185807    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
185808    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
185809    +   end;
MPRINT(EM_DIAGRAM):   end;
185810    +end;
MPRINT(EM_DIAGRAM):   end;
185811    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
185812    +   P_DepVar1  =    -2.61833479523352 * H11  +    -2.22364976391319 * H12
185813    +          +     2.80212192737867 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.61833479523352 * H11 + -2.22364976391319 * H12 + 
2.80212192737867 * H13 ;
185814    +   P_DepVar1  =    -2.41153326657964 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.41153326657964 + P_DepVar1 ;
185815    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
185816    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
185817    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
185818    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
185819    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
185820    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
185821    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
185822    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
185823    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
185824    +END;
MPRINT(EM_DIAGRAM):   END;
185825    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
185826    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
185827    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
185828    +END;
MPRINT(EM_DIAGRAM):   END;
185829    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
185830    +   P_DepVar1  =     0.06989576946658;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.06989576946658;
185831    +   P_DepVar0  =     0.93010423053341;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.93010423053341;
185832    +END;
MPRINT(EM_DIAGRAM):   END;
185833    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
185834    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
185835    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
185836    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
185837    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
185838    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
185839    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
185840    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185841    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
185842    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185843    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
185844    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
185845    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
185846    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
185847    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
185848    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
185849    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
185850    +END;
MPRINT(EM_DIAGRAM):   END;
185851    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
185852    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
185853    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
185854    +drop
185855    +H11
185856    +H12
185857    +H13
185858    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
185859    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
185860     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL5_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
185861     quit;
185862     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
185863     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
185864     * Neural5: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural5: Computing metadata for TRAIN data;
185865     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL5_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural5\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural5_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural5_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural5_TRAIN out=WORK.M1W_ZJO0 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1W_ZJO0;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1W_ZJO0(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1W_ZJO0;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1W_ZJO0;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3ADF_CZ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3ADF_CZ;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3ADF_CZ;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M39EPZ4S(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3ADF_CZ;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3ADF_CZ;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3ADF_CZ;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3ADF_CZ;
MPRINT(EMADVISECOLUMNS):   set WORK.M3ADF_CZ;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.PRINCOMP_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.PRINCOMP_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural5_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural5";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural5";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural5: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
186177     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
186178     set EMWS8.Neural5_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural5_EMINFO;
186179     where DATA='Neural5' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural5' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
186180     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL5_EMINFO.
      WHERE (DATA='Neural5') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

186181     data EMWS8.Neural5_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural5_EMINFO;
186182     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
186183     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
186184     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL5_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
186188     run;
186189     data EMWS8.Neural5_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural5_EMINFO;
186190     set EMWS8.Neural5_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural5_EMINFO WORK.MODELTEMP_INFO;
186191     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL5_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL5_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

186192     proc sort data = EMWS8.Neural5_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural5_EMINFO NOTHREADS;
186193     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
186194     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL5_EMINFO.
NOTE: The data set EMWS8.NEURAL5_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

186195     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
186196     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
186197     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

186198     proc sort data = EMWS8.Neural5_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural5_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
186199     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
186200     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL5_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

186201     data EMWS8.Neural5_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural5_EMINFO;
186202     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
186203     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
186204     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL5_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

186205     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
186206     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
186207     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
186208     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: View EMWS8.NEURAL5_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL5_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
