MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "16. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.17 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                16. April 2016
Time:                18.17 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1GEDQOU "C:\\predictive-models-project\Workspaces\EMWS8\Filter3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1GEDQOU new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\\predictive-models-project\Workspaces\EMWS8\Filter3\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "16. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.17 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Filter3\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Filter3\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Filter3\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\\predictive-models-project\Workspaces\EMWS8\Filter3\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "16. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.17 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Filter3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Filter3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Filter3\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\\predictive-models-project\Workspaces\EMWS8\Filter3\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\\predictive-models-project\Workspaces\EMWS8\Filter3\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
20764      proc freq data=EMWS8.Filter3_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Filter3_VariableSet noprint;
20765      table ROLE*LEVEL/out=WORK.Filter3META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Filter3META;
20766      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.FILTER3_VARIABLESET.
NOTE: The data set WORK.FILTER3META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20767      proc print data=WORK.Filter3META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Filter3META label noobs;
20768      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
20769      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
20770      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
20771      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
20772      run;

NOTE: There were 6 observations read from the data set WORK.FILTER3META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20773      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Filter3: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M3AAAYMK;
MPRINT(EM_DIAGRAM):   set WORK.M3AAAYMK;
MPRINT(EM_DIAGRAM):   if CALCMETHOD eq 'DEFAULT' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'INPUT' then CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if level='INTERVAL' then CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   else CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if KEEPMISSING eq 'D' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'INPUT' then KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if level='INTERVAL' then KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   else KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if CALCMETHOD='NONE' and KEEPMISSING='Y' then delete;
MPRINT(EM_DIAGRAM):   run;
20796      filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
MPRINT(EM_DIAGRAM):    filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
20797      %inc cdist;
NOTE: %INCLUDE (level 1) file CDIST is file SASHELP.EMUTIL.EM_CLASSDIST.SOURCE.
20798     +%macro class_profile(DATA=, OUTPUT=_CLASS, VARS=, METADATA=, WHERE=, STAT=_STAT, FREQ=);
20799     +   %if %INDEX(&EM_DEBUG, LOG SOURCE) %then %do;
20800     +       %put *** Statistics for Class variables ***;
20801     +       %put >>> DATA= &data  OUTPUT= &output;
20802     +       %put >>> VAR= &vars;
20803     +       %put >>> WHERE=  &where;
20804     +       %put >>> FREQ=  &freq;
20805     +   %end;
20807     +      /* Process metadata data set */
20808     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
20809     +   %if %sysfunc(exist(&metadata))>0 and ("&metadata" ne "") %then %do;
20810     +       %let FREQ=;
20811     +       %let _nobs=0;
20812     +       data _null;
20813     +          set &metadata(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
20814     +          if eof then call symput('_nobs', put(_N_, best.));
20815     +       run;
20816     +       %if "&_nobs" ne "0" %then %do;
20817     +           data _null_;
20818     +              file _mac;
20819     +              length _VARS $80; retain _vars;
20820     +              if _n_ =1 then put '%macro _vars;';
20821     +              set &metadata end=eof;
20822     +              where LEVEL ne 'INTERVAL' or ROLE='FREQ';
20823     +              if ROLE='FREQ' then call symput('FREQ', NAME);
20824     +              else do;
20825     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
20826     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
20827     +                 else do;
20828     +                    put _Vars;
20829     +                    _vars = strip(NAME);
20830     +                 end;
20831     +              end;
20832     +              if eof then do;
20833     +                 put _Vars;
20834     +                 put '%mend _vars;';
20835     +              end;
20836     +           run;
20837     +       %end;
20838     +       %else %do;
20839     +           data _null_;
20840     +              file _mac;
20841     +              put '%macro _vars;';
20842     +              put '%mend _vars;';
20843     +           run;
20844     +       %end;
20845     +   %end;
20846     +   %else %do;
20847     +       data _null_;
20848     +          file _mac;
20849     +          put '%macro _vars;';
20850     +          put '%mend _vars;';
20851     +       run;
20852     +   %end;
20853     +   %inc _mac;
20854     +   filename _mac;
20856     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
20858     +   /* Check if FREQ variable is in the data set */
20859     +   %if &freq ne %then %do;
20860     +       data _null_;
20861     +          dsid = open("&data");
20862     +          if dsid>0 then do;
20863     +               if varnum(dsid, "&FREQ")<1 then
20864     +                  call symput('FREQ', '');
20865     +               dsid = close(dsid);
20866     +          end;
20867     +       run;
20868     +   %end;
20870     +   proc dmdb data=&DATA  nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
20871     +      class %_Vars &vars;
20872     +      %if &FREQ ne %then %do;
20873     +          freq &FREQ;
20874     +      %end;
20875     +      %if %bquote(&WHERE) ne %then %do;
20876     +            where &WHERE;
20877     +      %end;
20878     +   run;
20879     +   proc sort data=_tempclass;
20880     +      by VARIABLE;
20881     +   run;
20882     +   data &output;
20883     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
20884     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
20885     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
20886     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
20887     +      set _tempclass;
20888     +      format COUNT;
20889     +      keep VARIABLE COUNT PERCENT VALUE;
20890     +   run;
20891     +   proc means data=&output noprint;
20892     +      class VARIABLE;
20893     +      var COUNT;
20894     +      output out=&STAT N=NUMCAT;
20895     +   run;
20896     +   data &STAT;
20897     +      set &STAT;
20898     +      where _TYPE_=1;
20899     +      KEEP VARIABLE NUMCAT;
20900     +      label NUMCAT   = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
20901     +      format NUMCAT 8.;
20902     +   run;
20903     +   proc datasets lib=work nolist;
20904     +      delete _tempclass;
20905     +   run;
20906     +   quit;
20908     +   %doend:
20909     +%mend class_profile;
NOTE: %INCLUDE (level 1) ending.
20911      filename cdist;
MPRINT(EM_DIAGRAM):   filename cdist;
NOTE: Fileref CDIST has been deassigned.
20912      %class_profile(DATA=EMWS8.FIMPORT_train, OUTPUT=EMWS8.Filter3_CLASSDIST, METADATA=EMWS8.Filter3_VariableSet, STAT=_STAT);
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null;
MPRINT(CLASS_PROFILE):   set EMWS8.Filter3_VariableSet(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(CLASS_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 11 observations read from the data set EMWS8.FILTER3_VARIABLESET.
      WHERE (LEVEL not = 'INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 11 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   length _VARS $80;
MPRINT(CLASS_PROFILE):   retain _vars;
MPRINT(CLASS_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(CLASS_PROFILE):   set EMWS8.Filter3_VariableSet end=eof;
MPRINT(CLASS_PROFILE):   where LEVEL ne 'INTERVAL' or ROLE='FREQ';
MPRINT(CLASS_PROFILE):   if ROLE='FREQ' then call symput('FREQ', NAME);
MPRINT(CLASS_PROFILE):   else do;
MPRINT(CLASS_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(CLASS_PROFILE):   else do;
MPRINT(CLASS_PROFILE):   put _Vars;
MPRINT(CLASS_PROFILE):   _vars = strip(NAME);
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   if eof then do;
MPRINT(CLASS_PROFILE):   put _Vars;
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Samstag, 16. April 2016 18.17 Uhr,
      Last Modified=Samstag, 16. April 2016 18.17 Uhr,
      Filename=C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary Files\_TD44916_WN7LF-LEAVE_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO

NOTE: 4 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 73.
NOTE: There were 11 observations read from the data set EMWS8.FILTER3_VARIABLESET.
      WHERE (LEVEL not = 'INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
20913     +%macro _vars;
20914     +AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5 Complain
20915     +DepVar Education Element4 Group Marital_Status
20916     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=EMWS8.FIMPORT_train nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(_VARS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5 Complain DepVar Education Element4 Group Marital_Status
MPRINT(CLASS_PROFILE):   ;
MPRINT(CLASS_PROFILE):   run;

NOTE: Records processed = 3500   Memory used = 511K.
NOTE: View EMWS8.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: The data set WORK._TEMPCLASS has 26 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 26 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 26 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data EMWS8.Filter3_CLASSDIST;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 26 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set EMWS8.FILTER3_CLASSDIST has 26 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc means data=EMWS8.Filter3_CLASSDIST noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER3_CLASSDIST.
NOTE: The data set WORK._STAT has 12 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 11 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 11 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;

NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

20917      data EMWS8.Filter3_CLASSDIST;
MPRINT(EM_DIAGRAM):    data EMWS8.Filter3_CLASSDIST;
20918      set EMWS8.Filter3_CLASSDIST;
MPRINT(EM_DIAGRAM):   set EMWS8.Filter3_CLASSDIST;
20919      length Filter $1;
MPRINT(EM_DIAGRAM):   length Filter $1;
20920      retain Filter 'N';
MPRINT(EM_DIAGRAM):   retain Filter 'N';
20921      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER3_CLASSDIST.
NOTE: The data set EMWS8.FILTER3_CLASSDIST has 26 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20922      proc sort data=EMWS8.Filter3_CLASSDIST;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter3_CLASSDIST;
20923      by variable value;
MPRINT(EM_DIAGRAM):   by variable value;
20924      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER3_CLASSDIST.
NOTE: The data set EMWS8.FILTER3_CLASSDIST has 26 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20925      data EMWS8.Filter3_CLASSFILTER / view=EMWS8.Filter3_CLASSFILTER;
MPRINT(EM_DIAGRAM):    data EMWS8.Filter3_CLASSFILTER / view=EMWS8.Filter3_CLASSFILTER;
20926      set EMWS8.Filter3_CLASSDIST;
MPRINT(EM_DIAGRAM):   set EMWS8.Filter3_CLASSDIST;
20927      where Filter eq 'Y';
MPRINT(EM_DIAGRAM):   where Filter eq 'Y';
20928      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file EMWS8.FILTER3_CLASSFILTER.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20929      %let EM_CODEBAR = *------------------------------------------------------------*;
20930      filename cdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
MPRINT(EM_DIAGRAM):    filename cdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
20931      %inc cdist;
NOTE: %INCLUDE (level 1) file CDIST is file SASHELP.EMUTIL.EM_VARDIST.SOURCE.
20932     +%macro var_profile(DATA=, OUTPUT=_INTERVAL, VARS=, METADATA=, COMPUTESTAT=Y, STAT=_STAT, PCTLSTAT=_PCTLSTAT, FREQ=,
20933     +                   BINDATA=, BIN=Y, NUMBARS=8, MINMAX=N);
20934     +   %let _em_nodeid = EM;
20935     +   %if %symexist(EM_NODEID) %then %do;
20936     +       %let _em_nodeid = &em_nodeid;
20937     +   %end;
20939     +   %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingsummarystats_note, NOQUOTE, &_em_nodeid));
20940     +   %put &EM_CODEBAR;
20941     +   %put * &msgString;
20942     +   %put &EM_CODEBAR;
20944     +   /* Process metadata data set */
20945     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
20946     +   %if %sysfunc(exist(&metadata))>0 and (&metadata ne ) %then %do;
20947     +       %let FREQ=;
20948     +       %let _nobs=0;
20949     +       data _null;
20950     +          set &metadata(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
20951     +          if eof then call symput('_nobs', put(_N_, best.));
20952     +       run;
20953     +       %if "&_nobs" ne "0" %then %do;
20954     +           data _null_;
20955     +              file _mac;
20956     +              length _VARS $80; retain _vars;
20957     +              if _n_ =1 then put '%macro _vars;';
20958     +              set &metadata end=eof;
20959     +              where LEVEL = 'INTERVAL' or ROLE='FREQ';
20960     +              if ROLE='FREQ' then call symput('FREQ', trim(NAME));
20961     +              else do;
20962     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
20963     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
20964     +                 else do;
20965     +                    put _Vars;
20966     +                    _vars = strip(NAME);
20967     +                 end;
20968     +              end;
20970     +              if eof then do;
20971     +                 put _Vars;
20972     +                 put '%mend _vars;';
20973     +              end;
20974     +           run;
20975     +       %end;
20976     +       %else %do;
20977     +           data _null_;
20978     +              file _mac;
20979     +              put '%macro _vars;';
20980     +              put '%mend _vars;';
20981     +           run;
20982     +       %end;
20983     +   %end;
20984     +   %else %do;
20985     +       data _null_;
20986     +          file _mac;
20987     +          put '%macro _vars;';
20988     +          put '%mend _vars;';
20989     +       run;
20990     +   %end;
20991     +   %inc _mac;
20992     +   filename _mac;
20994     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
20996     +   /* Check if FREQ variable is in the data set */
20997     +   %if &freq ne %then %do;
20998     +       data _null_;
20999     +          dsid = open("&data");
21000     +          if dsid>0 then do;
21001     +               if varnum(dsid, "&FREQ")<1 then
21002     +                  call symput('FREQ', '');
21003     +               dsid = close(dsid);
21004     +          end;
21005     +       run;
21006     +   %end;
21008     +   %if &bindata eq %then %do;
21009     +       %let bindata = _BOUNDS;
21010     +       proc datasets lib=work nolist mt=(DATA VIEW);
21011     +          delete _BOUNDS;
21012     +       run;
21013     +   %end;
21015     +   %global _EM_VARDISTOBS_MAX;
21016     +   %let _EM_VARDISTOBS_MAX = 1000000;
21018     +   %if %symexist(EM_VARDISTOBS_MAX) %then %do;
21019     +       %let _EM_VARDISTOBS_MAX= %eval(&EM_VARDISTOBS_MAX);
21020     +   %end;
21022     +   %if &computeStat = Y %then %do;
21023     +       proc dmdb data=&DATA(obs=&_EM_VARDISTOBS_MAX) varout=&STAT(rename=(NAME=VARIABLE));
21024     +          var %_Vars &vars;
21025     +          %if &FREQ ne %then %do;
21026     +              freq &FREQ;
21027     +          %end;
21028     +       run;
21029     +       proc sort data=&stat;
21030     +          by VARIABLE;
21031     +       run;
21033     +       %if ^%sysfunc(indexc(&STAT, .)) %then %do;
21034     +           %let _library = WORK;
21035     +           %let _member  = &STAT;
21036     +      %end;
21037     +      %else %do;
21038     +          %let _library = %scan(&STAT, 1, .);
21039     +          %let _member  = %scan(&STAT, 2, .);
21040     +      %end;
21042     +      proc datasets library=&_library nolist;
21043     +         modify &_member;
21044     +         label NMISS    = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
21045     +         label MIN      = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
21046     +         label MAX      = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
21047     +         label MEAN     = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
21048     +         label STD      = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
21049     +         label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
21050     +         label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
21051     +      run;
21052     +      quit;
21053     +   %end;
21055     +   %if &BIN ne N %then %do;
21056     +       %if %sysfunc(exist(&bindata))<1 %then %do;
21057     +           %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingmidpoints_note, NOQUOTE, &_em_nodeid));
21058     +           %put &EM_CODEBAR;
21059     +           %put * &msgString;
21060     +           %put &EM_CODEBAR;
21061     +           filename fref catalog 'work.em.profileformat.source';
21063     +            %let _maxlevel = %eval(&numbars + 1);
21064     +            proc dmdb data=&data(obs=&_EM_VARDISTOBS_MAX) classout=_CLASSOUT maxlevel=&_maxlevel;
21065     +               class %_vars &vars;
21066     +            run;
21067     +            proc freq data=_CLASSOUT ORDER=DATA noprint;
21068     +               table NAME / OUT = _COUNT(where=(COUNT<&_maxlevel));
21069     +            run;
21070     +           proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
21071     +              by NAME;
21072     +           run;
21073     +           proc sort data=_CLASSOUT;
21074     +              by NAME;
21075     +          run;
21076     +          proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
21077     +             var NRAW;
21078     +             by NAME;
21079     +          run;
21080     +          proc delete data=WORK._CLASSOUT;
21081     +          run;
21082     +          data _null_;
21083     +             dsid = open('_DISCRETEMID');
21084     +             if dsid then do;
21085     +                call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
21086     +                dsid = close(dsid);
21087     +             end;
21088     +          run;
21089     +          data _DISCRETEMID;
21090     +             merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
21091     +             keep VARIABLE _MIDPOINT1--_MIDPOINT&numclassbars _NUMCLASSBINS_;
21092     +             by VARIABLE;
21093     +             if _b then output;
21094     +          run;
21096     +          data _EMVARDIST / view=_EMVARDIST;
21097     +             set &DATA(keep=%_VARS &vars &FREQ  obs=&_EM_VARDISTOBS_MAX);
21098     +          run;
21099     +          proc stdize data=_EMVARDIST outstat=&pctlstat  out=_null_ pctlpts=(0 5 25 50 75 95 100);
21100     +             var %_vars &vars;
21101     +             %if &FREQ ne %then %do;
21102     +                 freq &FREQ / notrunc;
21103     +             %end;
21104     +          run;
21105     +          proc datasets lib=WORK NOLIST;
21106     +             delete _EMVARDIST / mt=view;
21107     +          run;
21108     +          quit;
21109     +          %if %upcase(&minmax) = Y %then %do;
21110     +              proc transpose data=&pctlstat out=_MINMAXDATA(rename=(_NAME_=VARIABLE COL1=MIN COL2=MAX));
21111     +                 where  _type_ in('P0', 'P100');
21112     +              run;
21113     +              data _MINMAXDATA(keep=Variable Value Pos);
21114     +                 set _MINMAXDATA;
21115     +                 label VARIABLE  = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
21116     +                 Value = min; Pos=1; output;
21117     +                 Value = max; Pos=3; output;
21118     +              run;
21119     +          %end;
21120     +          proc transpose data=&pctlstat out=&bindata(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5
21121     +                                                             COL3=P95 COL4=MAX));
21122     +             where  _type_ in('P0', 'P5', 'P95', 'P100');
21123     +          run;
21124     +          proc sort data=&bindata;
21125     +             by VARIABLE;
21126     +          run;
21128     +          %let new_numbars=%eval(&NUMBARS+12);
21129     +          data &bindata;
21130     +             set &bindata;
21131     +             length Format $12;
21132     +             array _midpoint{&new_NUMBARS};
21133     +             array _bounds{&new_NUMBARS};
21134     +             if (max - min)>1e-10 then do;
21135     +                step = abs(P95-P5)/&NUMBARS;
21136     +                lstep = abs(p5- min)/5;
21137     +                ustep = abs(max-p95)/5;
21138     +                /* No outlying values */;
21139     +                if lstep<=step and ustep<=step then do;
21140     +                   step = abs(MIN-MAX)/&NUMBARS;
21141     +                   START=MIN;
21142     +                   do i=1 to &numbars;
21143     +                      _bounds(i)   = MIN + i*step;      if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
21144     +                      _midpoint(i) = MIN+ (i-0.5)*step; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
21145     +                   end;
21146     +                   %let new_numbars = &numbars;
21147     +                end;
21148     +                else do;
21149     +                   if lstep<=step then do;
21150     +                      step = abs(MIN-P95)/&NUMBARS;
21151     +                      /* Start Histogram at MIN value */
21152     +                      do i=1 to &NUMBARS;
21153     +                         _bounds(i)   = MIN + i*step;       if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
21154     +                         _midpoint(i) = MIN+ (i-0.5)*step;  if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
21155     +                      end;
21156     +                      /* Make BINS with upper outliers width */
21157     +                      do i=1 to 5;
21158     +                         numbars = &numbars + i;
21159     +                         _bounds(numbars)   = P95 + i*ustep;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
21160     +                         _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
21161     +                      end;
21162     +                       %let new_numbars = %eval(&numbars+5);
21163     +                   end;
21164     +                   else do;
21165     +                      /* Make BINS with lower outliers width */
21166     +                      do i=1 to 5;
21167     +                         _bounds(i)   = P5 - (5-i)*lstep; if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
21168     +                         _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
21169     +                      end;
21170     +                      if ustep<= step then do;
21171     +                         step = abs(P5-MAX)/&NUMBARS;
21172     +                         /* End Histogram at MAX value */
21173     +                         do i=1 to &NUMBARS;
21174     +                            numbars = i+5;
21175     +                            _bounds(numbars)   = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
21176     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
21177     +                         end;
21178     +                          %let new_numbars = %eval(&numbars+5);
21179     +                      end;
21180     +                      else do;
21181     +                         do i=1 to &NUMBARS;
21182     +                            numbars = i+5;
21183     +                            _bounds(numbars)  = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
21184     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
21185     +                         end;
21186     +                         /* Make BINS with upper outliers width */
21187     +                         do i=1 to 5;
21188     +                            numbars = &numbars+5+i;
21189     +                            _bounds(numbars)   = P95 + i*ustep; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
21190     +                            _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
21191     +                         end;
21192     +                         %let new_numbars = %eval(&numbars+10);
21193     +                      end;
21194     +                   end;
21195     +                end;
21196     +             end;
21197     +             else do;
21198     +                _bounds(1)   = MIN;
21199     +                _midpoint(1) = MIN;
21200     +             end;
21201     +             Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
21202     +          run;
21203     +          %if %sysfunc(exist(_DISCRETEMID)) %then %do;
21204     +              data &bindata;
21205     +                 merge &bindata _DISCRETEMID(in = _b);
21206     +                 by VARIABLE;
21207     +                 if _b then _DISCRETE=1;
21208     +                 else _DISCRETE=0;
21209     +              run;
21210     +          %end;
21212     +          data _null_;
21213     +             file fref;
21214     +             set &bindata end=eof;
21215     +             array _bounds{&NEW_NUMBARS};
21216     +             array _midpoint{&NEW_NUMBARS};
21217     +             if _n_=1 then
21218     +                put 'proc format;';
21220     +             put 'value ' Format;
21221     +             if _DISCRETE then do;
21222     +                 do i=1 to &numbars;
21223     +                    _MID = _midpoint{i};
21224     +                    if _MID ne . and i<= _NUMCLASSBINS_ then
21225     +                       put _MID '="' _MID '"';
21226     +                 end;
21227     +                 put ';';
21228     +             end;
21229     +             else do;
21230     +                if min eq max then do;
21231     +                   put 'low - high ="' MIN '";';
21232     +                end;
21233     +                else do;
21234     +                   _LB  = MIN;
21235     +                   _MID = _midpoint{1};
21236     +                   _UB  = _bounds{1};
21237     +                   put 'LOW -' _UB '="' _MID '"';
21239     +                   do i=1 to &NEW_NUMBARS-1;
21240     +                      _LB  = _bounds{i};
21241     +                      j=i+1;
21242     +                      _MID = _midpoint{j};
21243     +                      _UB  = _bounds{j};
21244     +                      if (_UB ne .) and (_LB ne _UB) then do;
21245     +                         if _UB>=MAX then
21246     +                            put _LB '-HIGH="' _MID '"';
21247     +                         else
21248     +                            put _LB '-' _UB '="' _MID '"';
21249     +                      end;
21250     +                   end;
21251     +                end;
21252     +             end;
21253     +             put ';';
21254     +             if eof then put 'run;';
21255     +          run;
21257     +          %inc fref;
21259     +          filename fref;
21260     +      %end;
21262     +      data _binneddata / view=_binneddata;
21263     +         set &DATA(obs=&_EM_VARDISTOBS_MAX);
21265     +         %let dsid    =%sysfunc(open(&bindata));
21266     +         %let namenum = %sysfunc(varnum(&dsid, VARIABLE));
21267     +         %let fmtnum  = %sysfunc(varnum(&dsid, FORMAT));
21268     +         %let obs = %sysfunc(fetch(&dsid));
21270     +         %if (&obs=0) %then %do;
21271     +             format
21272     +         %end;
21274     +         %let _count = 0;
21275     +         %do %while(&obs=0);
21276     +             %let _count = %eval(&_count +1);
21277     +             %let _name = %sysfunc(getvarc(&dsid, &namenum));
21278     +             %let _fmtname = %sysfunc(getvarc(&dsid, &fmtnum));
21279     +             %do;
21280     +                &_name &_fmtname..
21281     +             %end;
21282     +             %let obs = %sysfunc(fetch(&dsid));
21283     +         %end;
21284     +         %let dsid=%sysfunc(close(&dsid));
21285     +         ;
21286     +      run;
21287     +   %end;
21289     +    %if &bin ne N %then %do;
21290     +        proc dmdb data=_binneddata(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
21291     +    %end;
21292     +    %else %do;
21293     +        proc dmdb data = &data(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
21294     +    %end;
21295     +      class %_vars &vars;
21296     +      %if &FREQ ne %then %do;
21297     +          freq &FREQ;
21298     +      %end;
21299     +   run;
21300     +   data &output;
21301     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
21302     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
21303     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
21304     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
21305     +      set _temptab;
21306     +      format VALUE 12.3 count;
21307     +      value = inputn(level, 'best12.');
21308     +      keep VARIABLE COUNT PERCENT VALUE;
21309     +   run;
21310     +   %if &BIN ne N and %sysfunc(exist(_MINMAXDATA)) and &minmax=Y %then %do;
21311     +       data &output;
21312     +          set &output(in=_a) _MINMAXDATA;
21313     +          if _a then Pos=2;
21314     +       run;
21315     +       proc sort data=&output out=&output(drop=pos);
21316     +          by VARIABLE POS VALUE;
21317     +          where VALUE ne .;
21318     +       run;
21319     +   %end;
21320     +   proc datasets lib=work nolist mt=(DATA VIEW);
21321     +      delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
21322     +   run;
21323     +   quit;
21325     +   %doend:
21326     +%mend var_profile;
NOTE: %INCLUDE (level 1) ending.
21327      filename cdist;
MPRINT(EM_DIAGRAM):   filename cdist;
NOTE: Fileref CDIST has been deassigned.
21328      %var_profile(DATA=EMWS8.FIMPORT_train, OUTPUT=EMWS8.Filter3_VARDIST, METADATA=EMWS8.Filter3_VariableSet, COMPUTESTAT=N, FREQ=, BIN=Y, NUMBARS= 16, minmax=Y);
*------------------------------------------------------------*
* Filter3: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set EMWS8.Filter3_VariableSet(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;

NOTE: There were 22 observations read from the data set EMWS8.FILTER3_VARIABLESET.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 22 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set EMWS8.Filter3_VariableSet end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Samstag, 16. April 2016 18.17 Uhr,
      Last Modified=Samstag, 16. April 2016 18.17 Uhr,
      Filename=C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary Files\_TD44916_WN7LF-LEAVE_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO

NOTE: 6 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 79.
NOTE: There were 22 observations read from the data set EMWS8.FILTER3_VARIABLESET.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
21329     +%macro _vars;
21330     +Dt_Customer Element1 Element2 Element3 Income Kidhome MntFishProducts MntFruits
21331     +MntGoldProds MntMeatProducts MntSweetProducts MntWines NumCatalogPurchases
21332     +NumDealsPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth Recency
21333     +Teenhome Year_Birth Z_CostContact Z_Revenue
21334     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename fref catalog 'work.em.profileformat.source';

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=EMWS8.FIMPORT_train(obs=1000000) classout=_CLASSOUT maxlevel=17;
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   Dt_Customer Element1 Element2 Element3 Income Kidhome MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts MntWines NumCatalogPurchases NumDealsPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth Recency 
Teenhome Year_Birth Z_CostContact Z_Revenue
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 3500   Memory used = 511K.
NOTE: View EMWS8.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: The data set WORK._CLASSOUT has 251 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VAR_PROFILE):   proc freq data=_CLASSOUT ORDER=DATA noprint;
MPRINT(VAR_PROFILE):   table NAME / OUT = _COUNT(where=(COUNT<17));
MPRINT(VAR_PROFILE):   run;

NOTE: There were 251 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 11 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 11 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 11 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_CLASSOUT;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 251 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 251 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
MPRINT(VAR_PROFILE):   var NRAW;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 251 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 22 observations and 18 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc delete data=WORK._CLASSOUT;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   dsid = open('_DISCRETEMID');
MPRINT(VAR_PROFILE):   if dsid then do;
MPRINT(VAR_PROFILE):   call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
MPRINT(VAR_PROFILE):   dsid = close(dsid);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _DISCRETEMID;
MPRINT(VAR_PROFILE):   merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   keep VARIABLE _MIDPOINT1--_MIDPOINT17 _NUMCLASSBINS_;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then output;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 22 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 11 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 11 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _EMVARDIST / view=_EMVARDIST;
MPRINT(VAR_PROFILE):   set EMWS8.FIMPORT_train(keep
MPRINT(VAR_PROFILE):  =Dt_Customer Element1 Element2 Element3 Income Kidhome MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts MntWines NumCatalogPurchases NumDealsPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth Recency 
Teenhome Year_Birth Z_CostContact Z_Revenue obs=1000000);
MPRINT(VAR_PROFILE):   run;

NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
      

MPRINT(VAR_PROFILE):   proc stdize data=_EMVARDIST outstat=_PCTLSTAT out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(VAR_PROFILE):   var
MPRINT(_VARS):   Dt_Customer Element1 Element2 Element3 Income Kidhome MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts MntWines NumCatalogPurchases NumDealsPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth Recency 
Teenhome Year_Birth Z_CostContact Z_Revenue
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;

WARNING: The scale estimator for variable Element1 is less than or equal to 0. Variable Element1 will not be standardized and a missing value is assigned to its scale estimator.
WARNING: The scale estimator for variable Element2 is less than or equal to 0. Variable Element2 will not be standardized and a missing value is assigned to its scale estimator.
WARNING: The scale estimator for variable Element3 is less than or equal to 0. Variable Element3 will not be standardized and a missing value is assigned to its scale estimator.
WARNING: The scale estimator for variable Z_CostContact is less than or equal to 0. Variable Z_CostContact will not be standardized and a missing value is assigned to its scale estimator.
WARNING: The scale estimator for variable Z_Revenue is less than or equal to 0. Variable Z_Revenue will not be standardized and a missing value is assigned to its scale estimator.
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: View WORK._EMVARDIST.VIEW used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
      
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: There were 3500 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK._PCTLSTAT has 15 observations and 23 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.17 seconds
      cpu time            0.18 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=WORK NOLIST;
MPRINT(VAR_PROFILE):   delete _EMVARDIST / mt=view;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=_MINMAXDATA(rename=(_NAME_=VARIABLE COL1=MIN COL2=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P100');
MPRINT(VAR_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100');
NOTE: The data set WORK._MINMAXDATA has 22 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data _MINMAXDATA(keep=Variable Value Pos);
MPRINT(VAR_PROFILE):   set _MINMAXDATA;
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   Value = min;
MPRINT(VAR_PROFILE):   Pos=1;
MPRINT(VAR_PROFILE):   output;
MPRINT(VAR_PROFILE):   Value = max;
MPRINT(VAR_PROFILE):   Pos=3;
MPRINT(VAR_PROFILE):   output;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 22 observations read from the data set WORK._MINMAXDATA.
NOTE: The data set WORK._MINMAXDATA has 44 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=_BOUNDS(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5 COL3=P95 COL4=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P5', 'P95', 'P100');
MPRINT(VAR_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK._BOUNDS has 22 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_BOUNDS;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 22 observations read from the data set WORK._BOUNDS.
NOTE: The data set WORK._BOUNDS has 22 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data _BOUNDS;
MPRINT(VAR_PROFILE):   set _BOUNDS;
MPRINT(VAR_PROFILE):   length Format $12;
MPRINT(VAR_PROFILE):   array _midpoint{28};
MPRINT(VAR_PROFILE):   array _bounds{28};
MPRINT(VAR_PROFILE):   if (max - min)>1e-10 then do;
MPRINT(VAR_PROFILE):   step = abs(P95-P5)/16;
MPRINT(VAR_PROFILE):   lstep = abs(p5- min)/5;
MPRINT(VAR_PROFILE):   ustep = abs(max-p95)/5;
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   if lstep<=step and ustep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-MAX)/16;
MPRINT(VAR_PROFILE):   START=MIN;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if lstep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-P95)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16 + i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   _bounds(i) = P5 - (5-i)*lstep;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if ustep<= step then do;
MPRINT(VAR_PROFILE):   step = abs(P5-MAX)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16+5+i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):  if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _bounds(1) = MIN;
MPRINT(VAR_PROFILE):   _midpoint(1) = MIN;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
MPRINT(VAR_PROFILE):   run;

NOTE: There were 22 observations read from the data set WORK._BOUNDS.
NOTE: The data set WORK._BOUNDS has 22 observations and 69 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _BOUNDS;
MPRINT(VAR_PROFILE):   merge _BOUNDS _DISCRETEMID(in = _b);
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then _DISCRETE=1;
MPRINT(VAR_PROFILE):   else _DISCRETE=0;
MPRINT(VAR_PROFILE):   run;

WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This may cause unexpected results.
NOTE: There were 22 observations read from the data set WORK._BOUNDS.
NOTE: There were 11 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK._BOUNDS has 22 observations and 71 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file fref;
MPRINT(VAR_PROFILE):   set _BOUNDS end=eof;
MPRINT(VAR_PROFILE):   array _bounds{26};
MPRINT(VAR_PROFILE):   array _midpoint{26};
MPRINT(VAR_PROFILE):   if _n_=1 then put 'proc format;';
MPRINT(VAR_PROFILE):   put 'value ' Format;
MPRINT(VAR_PROFILE):   if _DISCRETE then do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _MID = _midpoint{i};
MPRINT(VAR_PROFILE):   if _MID ne . and i<= _NUMCLASSBINS_ then put _MID '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if min eq max then do;
MPRINT(VAR_PROFILE):   put 'low - high ="' MIN '";';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _LB = MIN;
MPRINT(VAR_PROFILE):   _MID = _midpoint{1};
MPRINT(VAR_PROFILE):   _UB = _bounds{1};
MPRINT(VAR_PROFILE):   put 'LOW -' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   do i=1 to 26-1;
MPRINT(VAR_PROFILE):   _LB = _bounds{i};
MPRINT(VAR_PROFILE):   j=i+1;
MPRINT(VAR_PROFILE):   _MID = _midpoint{j};
MPRINT(VAR_PROFILE):   _UB = _bounds{j};
MPRINT(VAR_PROFILE):   if (_UB ne .) and (_LB ne _UB) then do;
MPRINT(VAR_PROFILE):   if _UB>=MAX then put _LB '-HIGH="' _MID '"';
MPRINT(VAR_PROFILE):   else put _LB '-' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   if eof then put 'run;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Samstag, 16. April 2016 18.17 Uhr,
      Last Modified=Samstag, 16. April 2016 18.17 Uhr,
      Filename=C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary Files\_TD44916_WN7LF-LEAVE_\Prc2\em.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO

NOTE: 337 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 37.
NOTE: There were 22 observations read from the data set WORK._BOUNDS.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file FREF is file WORK.EM.PROFILEFORMAT.SOURCE.
21335     +proc format;
MPRINT(VAR_PROFILE):   proc format;
21336     +value F1_
21337     +LOW -19247.6875 ="19225.84375 "
21338     +19247.6875 -19291.375 ="19269.53125 "
21339     +19291.375 -19335.0625 ="19313.21875 "
21340     +19335.0625 -19378.75 ="19356.90625 "
21341     +19378.75 -19422.4375 ="19400.59375 "
21342     +19422.4375 -19466.125 ="19444.28125 "
21343     +19466.125 -19509.8125 ="19487.96875 "
21344     +19509.8125 -19553.5 ="19531.65625 "
21345     +19553.5 -19597.1875 ="19575.34375 "
21346     +19597.1875 -19640.875 ="19619.03125 "
21347     +19640.875 -19684.5625 ="19662.71875 "
21348     +19684.5625 -19728.25 ="19706.40625 "
21349     +19728.25 -19771.9375 ="19750.09375 "
21350     +19771.9375 -19815.625 ="19793.78125 "
21351     +19815.625 -19859.3125 ="19837.46875 "
21352     +19859.3125 -HIGH="19881.15625 "
21353     +;
MPRINT(VAR_PROFILE):   value F1_ LOW -19247.6875 ="19225.84375 " 19247.6875 -19291.375 ="19269.53125 " 19291.375 -19335.0625 ="19313.21875 " 19335.0625 -19378.75 ="19356.90625 " 19378.75 -19422.4375 ="19400.59375 " 19422.4375 -19466.125 ="19444.28125 " 
19466.125 -19509.8125 ="19487.96875 " 19509.8125 -19553.5 ="19531.65625 " 19553.5 -19597.1875 ="19575.34375 " 19597.1875 -19640.875 ="19619.03125 " 19640.875 -19684.5625 ="19662.71875 " 19684.5625 -19728.25 ="19706.40625 " 19728.25 -19771.9375 
="19750.09375 " 19771.9375 -19815.625 ="19793.78125 " 19815.625 -19859.3125 ="19837.46875 " 19859.3125 -HIGH="19881.15625 " ;
NOTE: Format F1_ has been output.
21354     +value F2_
21355     +2015024 ="2015024 "
21356     +;
MPRINT(VAR_PROFILE):   value F2_ 2015024 ="2015024 " ;
NOTE: Format F2_ has been output.
MPRINT(VAR_PROFILE):   ;
21357     +;
21358     +value F3_
21359     +2015027 ="2015027 "
21360     +;
MPRINT(VAR_PROFILE):   value F3_ 2015027 ="2015027 " ;
NOTE: Format F3_ has been output.
MPRINT(VAR_PROFILE):   ;
21361     +;
21362     +value F4_
21363     +2015001 ="2015001 "
21364     +;
MPRINT(VAR_PROFILE):   value F4_ 2015001 ="2015001 " ;
NOTE: Format F4_ has been output.
MPRINT(VAR_PROFILE):   ;
21365     +;
21366     +value F5_
21367     +LOW -7355.5625 ="4705.78125 "
21368     +7355.5625 -12655.125 ="10005.34375 "
21369     +12655.125 -17954.6875 ="15304.90625 "
21370     +17954.6875 -23254.25 ="20604.46875 "
21371     +23254.25 -28553.8125 ="25904.03125 "
21372     +28553.8125 -33853.375 ="31203.59375 "
21373     +33853.375 -39152.9375 ="36503.15625 "
21374     +39152.9375 -44452.5 ="41802.71875 "
21375     +44452.5 -49752.0625 ="47102.28125 "
21376     +49752.0625 -55051.625 ="52401.84375 "
21377     +55051.625 -60351.1875 ="57701.40625 "
21378     +60351.1875 -65650.75 ="63000.96875 "
21379     +65650.75 -70950.3125 ="68300.53125 "
21380     +70950.3125 -76249.875 ="73600.09375 "
21381     +76249.875 -81549.4375 ="78899.65625 "
21382     +81549.4375 -86849 ="84199.21875 "
21383     +86849 -101849.2 ="99199.41875 "
21384     +101849.2 -116849.4 ="114199.61875 "
21385     +116849.4 -131849.6 ="129199.81875 "
21386     +131849.6 -146849.8 ="144200.01875 "
21387     +146849.8 -HIGH="159200.21875 "
21388     +;
MPRINT(VAR_PROFILE):   value F5_ LOW -7355.5625 ="4705.78125 " 7355.5625 -12655.125 ="10005.34375 " 12655.125 -17954.6875 ="15304.90625 " 17954.6875 -23254.25 ="20604.46875 " 23254.25 -28553.8125 ="25904.03125 " 28553.8125 -33853.375 ="31203.59375 " 
33853.375 -39152.9375 ="36503.15625 " 39152.9375 -44452.5 ="41802.71875 " 44452.5 -49752.0625 ="47102.28125 " 49752.0625 -55051.625 ="52401.84375 " 55051.625 -60351.1875 ="57701.40625 " 60351.1875 -65650.75 ="63000.96875 " 65650.75 -70950.3125 
="68300.53125 " 70950.3125 -76249.875 ="73600.09375 " 76249.875 -81549.4375 ="78899.65625 " 81549.4375 -86849 ="84199.21875 " 86849 -101849.2 ="99199.41875 " 101849.2 -116849.4 ="114199.61875 " 116849.4 -131849.6 ="129199.81875 " 131849.6 -146849.8 
="144200.01875 " 146849.8 -HIGH="159200.21875 " ;
NOTE: Format F5_ has been output.
21389     +value F6_
21390     +0 ="0 "
21391     +1 ="1 "
21392     +2 ="2 "
21393     +;
MPRINT(VAR_PROFILE):   value F6_ 0 ="0 " 1 ="1 " 2 ="2 " ;
NOTE: Format F6_ has been output.
MPRINT(VAR_PROFILE):   ;
21394     +;
21395     +value F7_
21396     +LOW -9.4375 ="4.71875 "
21397     +9.4375 -18.875 ="14.15625 "
21398     +18.875 -28.3125 ="23.59375 "
21399     +28.3125 -37.75 ="33.03125 "
21400     +37.75 -47.1875 ="42.46875 "
21401     +47.1875 -56.625 ="51.90625 "
21402     +56.625 -66.0625 ="61.34375 "
21403     +66.0625 -75.5 ="70.78125 "
21404     +75.5 -84.9375 ="80.21875 "
21405     +84.9375 -94.375 ="89.65625 "
21406     +94.375 -103.8125 ="99.09375 "
21407     +103.8125 -113.25 ="108.53125 "
21408     +113.25 -122.6875 ="117.96875 "
21409     +122.6875 -132.125 ="127.40625 "
21410     +132.125 -141.5625 ="136.84375 "
21411     +141.5625 -151 ="146.28125 "
21412     +151 -172.6 ="167.88125 "
21413     +172.6 -194.2 ="189.48125 "
21414     +194.2 -215.8 ="211.08125 "
21415     +215.8 -237.4 ="232.68125 "
21416     +237.4 -HIGH="254.28125 "
21417     +;
MPRINT(VAR_PROFILE):   value F7_ LOW -9.4375 ="4.71875 " 9.4375 -18.875 ="14.15625 " 18.875 -28.3125 ="23.59375 " 28.3125 -37.75 ="33.03125 " 37.75 -47.1875 ="42.46875 " 47.1875 -56.625 ="51.90625 " 56.625 -66.0625 ="61.34375 " 66.0625 -75.5 ="70.78125 " 
75.5 -84.9375 ="80.21875 " 84.9375 -94.375 ="89.65625 " 94.375 -103.8125 ="99.09375 " 103.8125 -113.25 ="108.53125 " 113.25 -122.6875 ="117.96875 " 122.6875 -132.125 ="127.40625 " 132.125 -141.5625 ="136.84375 " 141.5625 -151 ="146.28125 " 151 -172.6 
="167.88125 " 172.6 -194.2 ="189.48125 " 194.2 -215.8 ="211.08125 " 215.8 -237.4 ="232.68125 " 237.4 -HIGH="254.28125 " ;
NOTE: Format F7_ has been output.
21418     +value F8_
21419     +LOW -7.6875 ="3.84375 "
21420     +7.6875 -15.375 ="11.53125 "
21421     +15.375 -23.0625 ="19.21875 "
21422     +23.0625 -30.75 ="26.90625 "
21423     +30.75 -38.4375 ="34.59375 "
21424     +38.4375 -46.125 ="42.28125 "
21425     +46.125 -53.8125 ="49.96875 "
21426     +53.8125 -61.5 ="57.65625 "
21427     +61.5 -69.1875 ="65.34375 "
21428     +69.1875 -76.875 ="73.03125 "
21429     +76.875 -84.5625 ="80.71875 "
21430     +84.5625 -92.25 ="88.40625 "
21431     +92.25 -99.9375 ="96.09375 "
21432     +99.9375 -107.625 ="103.78125 "
21433     +107.625 -115.3125 ="111.46875 "
21434     +115.3125 -123 ="119.15625 "
21435     +123 -138.2 ="134.35625 "
21436     +138.2 -153.4 ="149.55625 "
21437     +153.4 -168.6 ="164.75625 "
21438     +168.6 -183.8 ="179.95625 "
21439     +183.8 -HIGH="195.15625 "
21440     +;
MPRINT(VAR_PROFILE):   value F8_ LOW -7.6875 ="3.84375 " 7.6875 -15.375 ="11.53125 " 15.375 -23.0625 ="19.21875 " 23.0625 -30.75 ="26.90625 " 30.75 -38.4375 ="34.59375 " 38.4375 -46.125 ="42.28125 " 46.125 -53.8125 ="49.96875 " 53.8125 -61.5 ="57.65625 " 
61.5 -69.1875 ="65.34375 " 69.1875 -76.875 ="73.03125 " 76.875 -84.5625 ="80.71875 " 84.5625 -92.25 ="88.40625 " 92.25 -99.9375 ="96.09375 " 99.9375 -107.625 ="103.78125 " 107.625 -115.3125 ="111.46875 " 115.3125 -123 ="119.15625 " 123 -138.2 ="134.35625 
" 138.2 -153.4 ="149.55625 " 153.4 -168.6 ="164.75625 " 168.6 -183.8 ="179.95625 " 183.8 -HIGH="195.15625 " ;
NOTE: Format F8_ has been output.
21441     +value F9_
21442     +LOW -9.5625 ="4.78125 "
21443     +9.5625 -19.125 ="14.34375 "
21444     +19.125 -28.6875 ="23.90625 "
21445     +28.6875 -38.25 ="33.46875 "
21446     +38.25 -47.8125 ="43.03125 "
21447     +47.8125 -57.375 ="52.59375 "
21448     +57.375 -66.9375 ="62.15625 "
21449     +66.9375 -76.5 ="71.71875 "
21450     +76.5 -86.0625 ="81.28125 "
21451     +86.0625 -95.625 ="90.84375 "
21452     +95.625 -105.1875 ="100.40625 "
21453     +105.1875 -114.75 ="109.96875 "
21454     +114.75 -124.3125 ="119.53125 "
21455     +124.3125 -133.875 ="129.09375 "
21456     +133.875 -143.4375 ="138.65625 "
21457     +143.4375 -153 ="148.21875 "
21458     +153 -172.2 ="167.41875 "
21459     +172.2 -191.4 ="186.61875 "
21460     +191.4 -210.6 ="205.81875 "
21461     +210.6 -229.8 ="225.01875 "
21462     +229.8 -HIGH="244.21875 "
21463     +;
MPRINT(VAR_PROFILE):   value F9_ LOW -9.5625 ="4.78125 " 9.5625 -19.125 ="14.34375 " 19.125 -28.6875 ="23.90625 " 28.6875 -38.25 ="33.46875 " 38.25 -47.8125 ="43.03125 " 47.8125 -57.375 ="52.59375 " 57.375 -66.9375 ="62.15625 " 66.9375 -76.5 ="71.71875 " 
76.5 -86.0625 ="81.28125 " 86.0625 -95.625 ="90.84375 " 95.625 -105.1875 ="100.40625 " 105.1875 -114.75 ="109.96875 " 114.75 -124.3125 ="119.53125 " 124.3125 -133.875 ="129.09375 " 133.875 -143.4375 ="138.65625 " 143.4375 -153 ="148.21875 " 153 -172.2 
="167.41875 " 172.2 -191.4 ="186.61875 " 191.4 -210.6 ="205.81875 " 210.6 -229.8 ="225.01875 " 229.8 -HIGH="244.21875 " ;
NOTE: Format F9_ has been output.
21464     +value F10_
21465     +LOW -44.4375 ="22.21875 "
21466     +44.4375 -88.875 ="66.65625 "
21467     +88.875 -133.3125 ="111.09375 "
21468     +133.3125 -177.75 ="155.53125 "
21469     +177.75 -222.1875 ="199.96875 "
21470     +222.1875 -266.625 ="244.40625 "
21471     +266.625 -311.0625 ="288.84375 "
21472     +311.0625 -355.5 ="333.28125 "
21473     +355.5 -399.9375 ="377.71875 "
21474     +399.9375 -444.375 ="422.15625 "
21475     +444.375 -488.8125 ="466.59375 "
21476     +488.8125 -533.25 ="511.03125 "
21477     +533.25 -577.6875 ="555.46875 "
21478     +577.6875 -622.125 ="599.90625 "
21479     +622.125 -666.5625 ="644.34375 "
21480     +666.5625 -711 ="688.78125 "
21481     +711 -903.6 ="881.38125 "
21482     +903.6 -1096.2 ="1073.98125 "
21483     +1096.2 -1288.8 ="1266.58125 "
21484     +1288.8 -1481.4 ="1459.18125 "
21485     +1481.4 -HIGH="1651.78125 "
21486     +;
MPRINT(VAR_PROFILE):   value F10_ LOW -44.4375 ="22.21875 " 44.4375 -88.875 ="66.65625 " 88.875 -133.3125 ="111.09375 " 133.3125 -177.75 ="155.53125 " 177.75 -222.1875 ="199.96875 " 222.1875 -266.625 ="244.40625 " 266.625 -311.0625 ="288.84375 " 311.0625 
-355.5 ="333.28125 " 355.5 -399.9375 ="377.71875 " 399.9375 -444.375 ="422.15625 " 444.375 -488.8125 ="466.59375 " 488.8125 -533.25 ="511.03125 " 533.25 -577.6875 ="555.46875 " 577.6875 -622.125 ="599.90625 " 622.125 -666.5625 ="644.34375 " 666.5625 -711 
="688.78125 " 711 -903.6 ="881.38125 " 903.6 -1096.2 ="1073.98125 " 1096.2 -1288.8 ="1266.58125 " 1288.8 -1481.4 ="1459.18125 " 1481.4 -HIGH="1651.78125 " ;
NOTE: Format F10_ has been output.
21487     +value F11_
21488     +LOW -7.625 ="3.8125 "
21489     +7.625 -15.25 ="11.4375 "
21490     +15.25 -22.875 ="19.0625 "
21491     +22.875 -30.5 ="26.6875 "
21492     +30.5 -38.125 ="34.3125 "
21493     +38.125 -45.75 ="41.9375 "
21494     +45.75 -53.375 ="49.5625 "
21495     +53.375 -61 ="57.1875 "
21496     +61 -68.625 ="64.8125 "
21497     +68.625 -76.25 ="72.4375 "
21498     +76.25 -83.875 ="80.0625 "
21499     +83.875 -91.5 ="87.6875 "
21500     +91.5 -99.125 ="95.3125 "
21501     +99.125 -106.75 ="102.9375 "
21502     +106.75 -114.375 ="110.5625 "
21503     +114.375 -122 ="118.1875 "
21504     +122 -137.4 ="133.5875 "
21505     +137.4 -152.8 ="148.9875 "
21506     +152.8 -168.2 ="164.3875 "
21507     +168.2 -183.6 ="179.7875 "
21508     +183.6 -HIGH="195.1875 "
21509     +;
MPRINT(VAR_PROFILE):   value F11_ LOW -7.625 ="3.8125 " 7.625 -15.25 ="11.4375 " 15.25 -22.875 ="19.0625 " 22.875 -30.5 ="26.6875 " 30.5 -38.125 ="34.3125 " 38.125 -45.75 ="41.9375 " 45.75 -53.375 ="49.5625 " 53.375 -61 ="57.1875 " 61 -68.625 ="64.8125 " 
68.625 -76.25 ="72.4375 " 76.25 -83.875 ="80.0625 " 83.875 -91.5 ="87.6875 " 91.5 -99.125 ="95.3125 " 99.125 -106.75 ="102.9375 " 106.75 -114.375 ="110.5625 " 114.375 -122 ="118.1875 " 122 -137.4 ="133.5875 " 137.4 -152.8 ="148.9875 " 152.8 -168.2 
="164.3875 " 168.2 -183.6 ="179.7875 " 183.6 -HIGH="195.1875 " ;
NOTE: Format F11_ has been output.
21510     +value F12_
21511     +LOW -63.09375 ="31.546875 "
21512     +63.09375 -126.1875 ="94.640625 "
21513     +126.1875 -189.28125 ="157.734375 "
21514     +189.28125 -252.375 ="220.828125 "
21515     +252.375 -315.46875 ="283.921875 "
21516     +315.46875 -378.5625 ="347.015625 "
21517     +378.5625 -441.65625 ="410.109375 "
21518     +441.65625 -504.75 ="473.203125 "
21519     +504.75 -567.84375 ="536.296875 "
21520     +567.84375 -630.9375 ="599.390625 "
21521     +630.9375 -694.03125 ="662.484375 "
21522     +694.03125 -757.125 ="725.578125 "
21523     +757.125 -820.21875 ="788.671875 "
21524     +820.21875 -883.3125 ="851.765625 "
21525     +883.3125 -946.40625 ="914.859375 "
21526     +946.40625 -1009.5 ="977.953125 "
21527     +1009.5 -1107.2 ="1075.653125 "
21528     +1107.2 -1204.9 ="1173.353125 "
21529     +1204.9 -1302.6 ="1271.053125 "
21530     +1302.6 -1400.3 ="1368.753125 "
21531     +1400.3 -HIGH="1466.453125 "
21532     +;
MPRINT(VAR_PROFILE):   value F12_ LOW -63.09375 ="31.546875 " 63.09375 -126.1875 ="94.640625 " 126.1875 -189.28125 ="157.734375 " 189.28125 -252.375 ="220.828125 " 252.375 -315.46875 ="283.921875 " 315.46875 -378.5625 ="347.015625 " 378.5625 -441.65625 
="410.109375 " 441.65625 -504.75 ="473.203125 " 504.75 -567.84375 ="536.296875 " 567.84375 -630.9375 ="599.390625 " 630.9375 -694.03125 ="662.484375 " 694.03125 -757.125 ="725.578125 " 757.125 -820.21875 ="788.671875 " 820.21875 -883.3125 ="851.765625 " 
883.3125 -946.40625 ="914.859375 " 946.40625 -1009.5 ="977.953125 " 1009.5 -1107.2 ="1075.653125 " 1107.2 -1204.9 ="1173.353125 " 1204.9 -1302.6 ="1271.053125 " 1302.6 -1400.3 ="1368.753125 " 1400.3 -HIGH="1466.453125 " ;
NOTE: Format F12_ has been output.
21533     +value F13_
21534     +0 ="0 "
21535     +1 ="1 "
21536     +2 ="2 "
21537     +3 ="3 "
21538     +4 ="4 "
21539     +5 ="5 "
21540     +6 ="6 "
21541     +7 ="7 "
21542     +8 ="8 "
21543     +9 ="9 "
21544     +10 ="10 "
21545     +11 ="11 "
21546     +28 ="28 "
21547     +29 ="29 "
21548     +;
MPRINT(VAR_PROFILE):   value F13_ 0 ="0 " 1 ="1 " 2 ="2 " 3 ="3 " 4 ="4 " 5 ="5 " 6 ="6 " 7 ="7 " 8 ="8 " 9 ="9 " 10 ="10 " 11 ="11 " 28 ="28 " 29 ="29 " ;
NOTE: Format F13_ has been output.
MPRINT(VAR_PROFILE):   ;
21549     +;
21550     +value F14_
21551     +LOW -0.375 ="0.1875 "
21552     +0.375 -0.75 ="0.5625 "
21553     +0.75 -1.125 ="0.9375 "
21554     +1.125 -1.5 ="1.3125 "
21555     +1.5 -1.875 ="1.6875 "
21556     +1.875 -2.25 ="2.0625 "
21557     +2.25 -2.625 ="2.4375 "
21558     +2.625 -3 ="2.8125 "
21559     +3 -3.375 ="3.1875 "
21560     +3.375 -3.75 ="3.5625 "
21561     +3.75 -4.125 ="3.9375 "
21562     +4.125 -4.5 ="4.3125 "
21563     +4.5 -4.875 ="4.6875 "
21564     +4.875 -5.25 ="5.0625 "
21565     +5.25 -5.625 ="5.4375 "
21566     +5.625 -6 ="5.8125 "
21567     +6 -8 ="7.8125 "
21568     +8 -10 ="9.8125 "
21569     +10 -12 ="11.8125 "
21570     +12 -14 ="13.8125 "
21571     +14 -HIGH="15.8125 "
21572     +;
MPRINT(VAR_PROFILE):   value F14_ LOW -0.375 ="0.1875 " 0.375 -0.75 ="0.5625 " 0.75 -1.125 ="0.9375 " 1.125 -1.5 ="1.3125 " 1.5 -1.875 ="1.6875 " 1.875 -2.25 ="2.0625 " 2.25 -2.625 ="2.4375 " 2.625 -3 ="2.8125 " 3 -3.375 ="3.1875 " 3.375 -3.75 ="3.5625 " 
3.75 -4.125 ="3.9375 " 4.125 -4.5 ="4.3125 " 4.5 -4.875 ="4.6875 " 4.875 -5.25 ="5.0625 " 5.25 -5.625 ="5.4375 " 5.625 -6 ="5.8125 " 6 -8 ="7.8125 " 8 -10 ="9.8125 " 10 -12 ="11.8125 " 12 -14 ="13.8125 " 14 -HIGH="15.8125 " ;
NOTE: Format F14_ has been output.
21573     +value F15_
21574     +0 ="0 "
21575     +1 ="1 "
21576     +2 ="2 "
21577     +3 ="3 "
21578     +4 ="4 "
21579     +5 ="5 "
21580     +6 ="6 "
21581     +7 ="7 "
21582     +8 ="8 "
21583     +9 ="9 "
21584     +10 ="10 "
21585     +11 ="11 "
21586     +12 ="12 "
21587     +13 ="13 "
21588     +;
MPRINT(VAR_PROFILE):   value F15_ 0 ="0 " 1 ="1 " 2 ="2 " 3 ="3 " 4 ="4 " 5 ="5 " 6 ="6 " 7 ="7 " 8 ="8 " 9 ="9 " 10 ="10 " 11 ="11 " 12 ="12 " 13 ="13 " ;
NOTE: Format F15_ has been output.
MPRINT(VAR_PROFILE):   ;
21589     +;
21590     +value F16_
21591     +0 ="0 "
21592     +1 ="1 "
21593     +2 ="2 "
21594     +3 ="3 "
21595     +4 ="4 "
21596     +5 ="5 "
21597     +6 ="6 "
21598     +7 ="7 "
21599     +8 ="8 "
21600     +9 ="9 "
21601     +10 ="10 "
21602     +11 ="11 "
21603     +;
MPRINT(VAR_PROFILE):   value F16_ 0 ="0 " 1 ="1 " 2 ="2 " 3 ="3 " 4 ="4 " 5 ="5 " 6 ="6 " 7 ="7 " 8 ="8 " 9 ="9 " 10 ="10 " 11 ="11 " ;
NOTE: Format F16_ has been output.
MPRINT(VAR_PROFILE):   ;
21604     +;
21605     +value F17_
21606     +0 ="0 "
21607     +1 ="1 "
21608     +2 ="2 "
21609     +3 ="3 "
21610     +4 ="4 "
21611     +5 ="5 "
21612     +6 ="6 "
21613     +7 ="7 "
21614     +8 ="8 "
21615     +9 ="9 "
21616     +10 ="10 "
21617     +19 ="19 "
21618     +20 ="20 "
21619     +;
MPRINT(VAR_PROFILE):   value F17_ 0 ="0 " 1 ="1 " 2 ="2 " 3 ="3 " 4 ="4 " 5 ="5 " 6 ="6 " 7 ="7 " 8 ="8 " 9 ="9 " 10 ="10 " 19 ="19 " 20 ="20 " ;
NOTE: Format F17_ has been output.
MPRINT(VAR_PROFILE):   ;
21620     +;
21621     +value F18_
21622     +LOW -6.1875 ="3.09375 "
21623     +6.1875 -12.375 ="9.28125 "
21624     +12.375 -18.5625 ="15.46875 "
21625     +18.5625 -24.75 ="21.65625 "
21626     +24.75 -30.9375 ="27.84375 "
21627     +30.9375 -37.125 ="34.03125 "
21628     +37.125 -43.3125 ="40.21875 "
21629     +43.3125 -49.5 ="46.40625 "
21630     +49.5 -55.6875 ="52.59375 "
21631     +55.6875 -61.875 ="58.78125 "
21632     +61.875 -68.0625 ="64.96875 "
21633     +68.0625 -74.25 ="71.15625 "
21634     +74.25 -80.4375 ="77.34375 "
21635     +80.4375 -86.625 ="83.53125 "
21636     +86.625 -92.8125 ="89.71875 "
21637     +92.8125 -HIGH="95.90625 "
21638     +;
MPRINT(VAR_PROFILE):   value F18_ LOW -6.1875 ="3.09375 " 6.1875 -12.375 ="9.28125 " 12.375 -18.5625 ="15.46875 " 18.5625 -24.75 ="21.65625 " 24.75 -30.9375 ="27.84375 " 30.9375 -37.125 ="34.03125 " 37.125 -43.3125 ="40.21875 " 43.3125 -49.5 ="46.40625 " 
49.5 -55.6875 ="52.59375 " 55.6875 -61.875 ="58.78125 " 61.875 -68.0625 ="64.96875 " 68.0625 -74.25 ="71.15625 " 74.25 -80.4375 ="77.34375 " 80.4375 -86.625 ="83.53125 " 86.625 -92.8125 ="89.71875 " 92.8125 -HIGH="95.90625 " ;
NOTE: Format F18_ has been output.
21639     +value F19_
21640     +0 ="0 "
21641     +1 ="1 "
21642     +2 ="2 "
21643     +;
MPRINT(VAR_PROFILE):   value F19_ 0 ="0 " 1 ="1 " 2 ="2 " ;
NOTE: Format F19_ has been output.
MPRINT(VAR_PROFILE):   ;
21644     +;
21645     +value F20_
21646     +LOW -1943.5 ="1941.75 "
21647     +1943.5 -1947 ="1945.25 "
21648     +1947 -1950.5 ="1948.75 "
21649     +1950.5 -1954 ="1952.25 "
21650     +1954 -1957.5 ="1955.75 "
21651     +1957.5 -1961 ="1959.25 "
21652     +1961 -1964.5 ="1962.75 "
21653     +1964.5 -1968 ="1966.25 "
21654     +1968 -1971.5 ="1969.75 "
21655     +1971.5 -1975 ="1973.25 "
21656     +1975 -1978.5 ="1976.75 "
21657     +1978.5 -1982 ="1980.25 "
21658     +1982 -1985.5 ="1983.75 "
21659     +1985.5 -1989 ="1987.25 "
21660     +1989 -1992.5 ="1990.75 "
21661     +1992.5 -HIGH="1994.25 "
21662     +;
MPRINT(VAR_PROFILE):   value F20_ LOW -1943.5 ="1941.75 " 1943.5 -1947 ="1945.25 " 1947 -1950.5 ="1948.75 " 1950.5 -1954 ="1952.25 " 1954 -1957.5 ="1955.75 " 1957.5 -1961 ="1959.25 " 1961 -1964.5 ="1962.75 " 1964.5 -1968 ="1966.25 " 1968 -1971.5 ="1969.75 
" 1971.5 -1975 ="1973.25 " 1975 -1978.5 ="1976.75 " 1978.5 -1982 ="1980.25 " 1982 -1985.5 ="1983.75 " 1985.5 -1989 ="1987.25 " 1989 -1992.5 ="1990.75 " 1992.5 -HIGH="1994.25 " ;
NOTE: Format F20_ has been output.
21663     +value F21_
21664     +3 ="3 "
21665     +;
MPRINT(VAR_PROFILE):   value F21_ 3 ="3 " ;
NOTE: Format F21_ has been output.
MPRINT(VAR_PROFILE):   ;
21666     +;
21667     +value F22_
21668     +11 ="11 "
21669     +;
MPRINT(VAR_PROFILE):   value F22_ 11 ="11 " ;
NOTE: Format F22_ has been output.
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
21670     +;
21671     +run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename fref;
NOTE: Fileref FREF has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS8.FIMPORT_train(obs=1000000);
MPRINT(VAR_PROFILE):   format Dt_Customer F1_. Element1 F2_. Element2 F3_. Element3 F4_. Income F5_. Kidhome F6_. MntFishProducts F7_. MntFruits F8_. MntGoldProds F9_. MntMeatProducts F10_. MntSweetProducts F11_. MntWines F12_. NumCatalogPurchases F13_. 
NumDealsPurchases F14_. NumStorePurchases F15_. NumWebPurchases F16_. NumWebVisitsMonth F17_. Recency F18_. Teenhome F19_. Year_Birth F20_. Z_CostContact F21_. Z_Revenue F22_. ;
MPRINT(VAR_PROFILE):   run;

NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   Dt_Customer Element1 Element2 Element3 Income Kidhome MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts MntWines NumCatalogPurchases NumDealsPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth Recency 
Teenhome Year_Birth Z_CostContact Z_Revenue
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 3500   Memory used = 511K.
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: There were 3500 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 267 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(VAR_PROFILE):   data EMWS8.Filter3_VARDIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 267 observations read from the data set WORK._TEMPTAB.
NOTE: The data set EMWS8.FILTER3_VARDIST has 267 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data EMWS8.Filter3_VARDIST;
MPRINT(VAR_PROFILE):   set EMWS8.Filter3_VARDIST(in=_a) _MINMAXDATA;
MPRINT(VAR_PROFILE):   if _a then Pos=2;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 267 observations read from the data set EMWS8.FILTER3_VARDIST.
NOTE: There were 44 observations read from the data set WORK._MINMAXDATA.
NOTE: The data set EMWS8.FILTER3_VARDIST has 311 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=EMWS8.Filter3_VARDIST out=EMWS8.Filter3_VARDIST(drop=pos);
MPRINT(VAR_PROFILE):   by VARIABLE POS VALUE;
MPRINT(VAR_PROFILE):   where VALUE ne .;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 311 observations read from the data set EMWS8.FILTER3_VARDIST.
      WHERE VALUE not = .;
NOTE: The data set EMWS8.FILTER3_VARDIST has 311 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
NOTE: Deleting WORK._MINMAXDATA (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    data WORK.M1TF8DLV;
MPRINT(EM_DIAGRAM):   retain _MAXLEVEL 25;
MPRINT(EM_DIAGRAM):   set WORK.M1TF8DLV end=eof;
MPRINT(EM_DIAGRAM):   if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
MPRINT(EM_DIAGRAM):   drop _MAXLEVEL;
MPRINT(EM_DIAGRAM):   if MAXVALUES = . then MAXVALUES =25;
MPRINT(EM_DIAGRAM):   if MAXVALUES>_MAXLEVEL then _MAXLEVEL=MAXVALUES;
MPRINT(EM_DIAGRAM):   if eof then call symput('_MAXLEVEL', strip(put(_MAXLEVEL, best.)));
MPRINT(EM_DIAGRAM):   run;
21682      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
21683      * Filter3: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter3: DMDBClass Macro ;
21684      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21685      %macro DMDBClass;
21686      
21687      %mend DMDBClass;
21688      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21689      * Filter3: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter3: DMDBVar Macro ;
21690      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21691      %macro DMDBVar;
21692          Income MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth
21693      %mend DMDBVar;
21694      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21695      * Filter3: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter3: Create DMDB;
21696      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21697      proc dmdb batch data=EMWS8.FIMPORT_train
21698      varout=WORK._EMFILTERVAR
21699      maxlevel = 26
21700      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.FIMPORT_train varout=WORK._EMFILTERVAR maxlevel = 26 ;
MPRINT(EM_DIAGRAM):   var
21701      var %DMDBVar;
MPRINT(DMDBVAR):   Income MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth
MPRINT(EM_DIAGRAM):  ;
21702      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 3500   Memory used = 511K.
NOTE: View EMWS8.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: The data set WORK._EMFILTERVAR has 5 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
21703      quit;
21704      *--- end code ---*;

21705      data WORK.M1TF8DLV;
MPRINT(EM_DIAGRAM):    data WORK.M1TF8DLV;
21706      set WORK.M1TF8DLV;
MPRINT(EM_DIAGRAM):   set WORK.M1TF8DLV;
21707      if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
MPRINT(EM_DIAGRAM):   if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
21708      if LEVEL ne 'INTERVAL' and KEEPMISSING='N';
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' and KEEPMISSING='N';
21709      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK.M1TF8DLV.
NOTE: The data set WORK.M1TF8DLV has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

21710      %let _FilterIntervalNum= 0;
21711      proc sort data=EMWS8.Filter3_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Filter3_INTERVAL;
21712      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21713      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set EMWS8.FILTER3_INTERVAL.
NOTE: The data set EMWS8.FILTER3_INTERVAL has 5 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

21714      filename _X "C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary Files\_TD44916_WN7LF-LEAVE_\Prc2\INTERVALFILTERCODE.txt";
MPRINT(EM_DIAGRAM):   filename _X "C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary Files\_TD44916_WN7LF-LEAVE_\Prc2\INTERVALFILTERCODE.txt";
21715      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
21716      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
21717      set EMWS8.Filter3_INTERVAL end=eof;
MPRINT(EM_DIAGRAM):   set EMWS8.Filter3_INTERVAL end=eof;
21718      file _X;
MPRINT(EM_DIAGRAM):   file _X;
21719      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N')
21720      ;
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N') ;
21721      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21722      if _N_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _N_ = 1 then do;
21723      string = ' (';
MPRINT(EM_DIAGRAM):   string = ' (';
21724      end;
MPRINT(EM_DIAGRAM):   end;
21725      else do;
MPRINT(EM_DIAGRAM):   else do;
21726      string = ' and (';
MPRINT(EM_DIAGRAM):   string = ' and (';
21727      end;
MPRINT(EM_DIAGRAM):   end;
21728      if INTERVALMIN ne . or INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . or INTERVALMAX ne . then do;
21729      if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
MPRINT(EM_DIAGRAM):   if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
21730      else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
MPRINT(EM_DIAGRAM):   else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
21731      if INTERVALMIN ne . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . and INTERVALMAX ne . then do;
21732      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
21733      end;
MPRINT(EM_DIAGRAM):   end;
21734      else if INTERVALMIN eq . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN eq . and INTERVALMAX ne . then do;
21735      string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
21736      end;
MPRINT(EM_DIAGRAM):   end;
21737      else if INTERVALMIN ne . and INTERVALMAX eq . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN ne . and INTERVALMAX eq . then do;
21738      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
21739      end;
MPRINT(EM_DIAGRAM):   end;
21740      end;
MPRINT(EM_DIAGRAM):   end;
21741      else do;
MPRINT(EM_DIAGRAM):   else do;
21742      string = trim(string)!!' '!!strip(name)!!' ne .';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' '!!strip(name)!!' ne .';
21743      end;
MPRINT(EM_DIAGRAM):   end;
21744      string = trim(string)!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!')';
21745      put string;
MPRINT(EM_DIAGRAM):   put string;
21746      if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
21747      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary Files\_TD44916_WN7LF-LEAVE_\Prc2\INTERVALFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=16. April 2016 18.17 Uhr,
      Create Time=16. April 2016 18.17 Uhr

NOTE: 5 records were written to the file _X.
      The minimum record length was 34.
      The maximum record length was 60.
NOTE: There were 5 observations read from the data set EMWS8.FILTER3_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

21748      %let _FilterIntervalNum= 0;
21749      proc sort data=EMWS8.Filter3_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Filter3_INTERVAL;
21750      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21751      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

21752      filename _X "C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary Files\_TD44916_WN7LF-LEAVE_\Prc2\INTERVALPUBLISHFILTERCODE.txt";
MPRINT(EM_DIAGRAM):   filename _X "C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary Files\_TD44916_WN7LF-LEAVE_\Prc2\INTERVALPUBLISHFILTERCODE.txt";
21753      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
21754      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
21755      set EMWS8.Filter3_INTERVAL end=eof;
MPRINT(EM_DIAGRAM):   set EMWS8.Filter3_INTERVAL end=eof;
21756      file _X;
MPRINT(EM_DIAGRAM):   file _X;
21757      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N')
21758      and ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N') and ROLE ne 'TARGET';
21759      ;
MPRINT(EM_DIAGRAM):   ;
21760      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21761      if _N_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _N_ = 1 then do;
21762      string = ' (';
MPRINT(EM_DIAGRAM):   string = ' (';
21763      end;
MPRINT(EM_DIAGRAM):   end;
21764      else do;
MPRINT(EM_DIAGRAM):   else do;
21765      string = ' and (';
MPRINT(EM_DIAGRAM):   string = ' and (';
21766      end;
MPRINT(EM_DIAGRAM):   end;
21767      if INTERVALMIN ne . or INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . or INTERVALMAX ne . then do;
21768      if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
MPRINT(EM_DIAGRAM):   if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
21769      else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
MPRINT(EM_DIAGRAM):   else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
21770      if INTERVALMIN ne . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . and INTERVALMAX ne . then do;
21771      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
21772      end;
MPRINT(EM_DIAGRAM):   end;
21773      else if INTERVALMIN eq . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN eq . and INTERVALMAX ne . then do;
21774      string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
21775      end;
MPRINT(EM_DIAGRAM):   end;
21776      else if INTERVALMIN ne . and INTERVALMAX eq . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN ne . and INTERVALMAX eq . then do;
21777      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
21778      end;
MPRINT(EM_DIAGRAM):   end;
21779      end;
MPRINT(EM_DIAGRAM):   end;
21780      else do;
MPRINT(EM_DIAGRAM):   else do;
21781      string = trim(string)!!' '!!strip(name)!!' ne .';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' '!!strip(name)!!' ne .';
21782      end;
MPRINT(EM_DIAGRAM):   end;
21783      string = trim(string)!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!')';
21784      put string;
MPRINT(EM_DIAGRAM):   put string;
21785      if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
21786      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary Files\_TD44916_WN7LF-LEAVE_\Prc2\INTERVALPUBLISHFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=16. April 2016 18.17 Uhr,
      Create Time=16. April 2016 18.17 Uhr

NOTE: 5 records were written to the file _X.
      The minimum record length was 34.
      The maximum record length was 60.
NOTE: There were 5 observations read from the data set EMWS8.FILTER3_INTERVAL.
      WHERE ((INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N')) and (ROLE not = 'TARGET');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
21787      data EMWS8.Filter3_TRAIN / view=EMWS8.Filter3_TRAIN;
MPRINT(EM_DIAGRAM):    data EMWS8.Filter3_TRAIN / view=EMWS8.Filter3_TRAIN;
21788      set EMWS8.FIMPORT_train;
MPRINT(EM_DIAGRAM):   set EMWS8.FIMPORT_train;
21789      if
21790      not (
21791      ( Income eq . or (Income<=107000))
21792      and ( MntMeatProducts eq . or (MntMeatProducts<=964))
21793      and ( NumCatalogPurchases eq . or (NumCatalogPurchases<=14))
21794      and ( NumDealsPurchases eq . or (NumDealsPurchases<=10.5))
21795      and ( NumWebVisitsMonth eq . or (NumWebVisitsMonth<=13.42))
21796      )
21797      ;
MPRINT(EM_DIAGRAM):   if not ( ( Income eq . or (Income<=107000)) and ( MntMeatProducts eq . or (MntMeatProducts<=964)) and ( NumCatalogPurchases eq . or (NumCatalogPurchases<=14)) and ( NumDealsPurchases eq . or (NumDealsPurchases<=10.5)) and ( 
NumWebVisitsMonth eq . or (NumWebVisitsMonth<=13.42)) ) ;
21798      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file EMWS8.FILTER3_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

21799      data WORK.Filter3FILTERVAR;
MPRINT(EM_DIAGRAM):    data WORK.Filter3FILTERVAR;
21800      set
21801      EMWS8.Filter3_INTERVAL(where=(INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N'))
21802      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Filter3_INTERVAL(where=(INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N')) ;
21803      keep NAME;
MPRINT(EM_DIAGRAM):   keep NAME;
21804      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set EMWS8.FILTER3_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: The data set WORK.FILTER3FILTERVAR has 5 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

21805      proc sort data= WORK.Filter3FILTERVAR nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data= WORK.Filter3FILTERVAR nodupkey;
21806      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21807      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK.FILTER3FILTERVAR.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK.FILTER3FILTERVAR has 5 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

21808      proc sort data=WORK.M11ABCQ6;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.M11ABCQ6;
21809      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21810      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK.M11ABCQ6.
NOTE: The data set WORK.M11ABCQ6 has 33 observations and 26 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

21811      data WORK.Filter3DMDBC;
MPRINT(EM_DIAGRAM):   data WORK.Filter3DMDBC;
21812      merge WORK.M11ABCQ6 WORK.Filter3FILTERVAR(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.M11ABCQ6 WORK.Filter3FILTERVAR(in=_b);
21813      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21814      if (REPORT = 'Y' or ROLE in('FREQ','TARGET') or _b) then output;
MPRINT(EM_DIAGRAM):   if (REPORT = 'Y' or ROLE in('FREQ','TARGET') or _b) then output;
21815      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK.M11ABCQ6.
NOTE: There were 5 observations read from the data set WORK.FILTER3FILTERVAR.
NOTE: The data set WORK.FILTER3DMDBC has 6 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

21816      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
21817      * Filter3: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter3: DMDBClass Macro ;
21818      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21819      %macro DMDBClass;
21820          DepVar(DESC)
21821      %mend DMDBClass;
21822      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21823      * Filter3: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter3: DMDBVar Macro ;
21824      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21825      %macro DMDBVar;
21826          Income MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth
21827      %mend DMDBVar;
21828      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21829      * Filter3: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter3: Create DMDB;
21830      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21831      proc dmdb batch data=EMWS8.FIMPORT_train
21832      dmdbcat=WORK.Filter3_DMDB
21833      varout=WORK.FILTER_VARSTATS
21834      maxlevel = 513
21835      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.FIMPORT_train dmdbcat=WORK.Filter3_DMDB varout=WORK.FILTER_VARSTATS maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
21836      class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
21837      var %DMDBVar;
MPRINT(DMDBVAR):   Income MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth
MPRINT(EM_DIAGRAM):  ;
21838      target
21839      DepVar
21840      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
21841      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 3500   Memory used = 511K.
NOTE: View EMWS8.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: The data set WORK.FILTER_VARSTATS has 5 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
21842      quit;
21843      *--- end code ---*;

21844      data WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):    data WORK.FILTER_VARSTATS;
21845      length DATAROLE $10 TYPE $8 NAME $32;
MPRINT(EM_DIAGRAM):   length DATAROLE $10 TYPE $8 NAME $32;
21846      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
21847      label N = "%sysfunc(sasmsg(sashelp.dmine, rpt_nonMiss_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label N = "Non Missing";
21848      label NMISS = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NMISS = "Missing";
21849      label MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MIN = "Minimum";
21850      label MAX = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MAX = "Maximum";
21851      label MEAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MEAN = "Mean";
21852      label STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label STD = "Standard Deviation";
21853      label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SKEWNESS = "Skewness";
21854      label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label KURTOSIS = "Kurtosis";
21855      label NUMCAT = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NUMCAT = "Number of Levels";
21856      retain DATAROLE "TRAIN" type "ORIGINAL";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" type "ORIGINAL";
21857      set WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   set WORK.FILTER_VARSTATS;
21858      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable NUMCAT is uninitialized.
NOTE: There were 5 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set WORK.FILTER_VARSTATS has 5 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

21859      proc append base=EMWS8.Filter3_STATS data=WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Filter3_STATS data=WORK.FILTER_VARSTATS;
21860      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK.FILTER_VARSTATS to EMWS8.FILTER3_STATS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 5 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set EMWS8.FILTER3_STATS has 5 observations and 11 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
