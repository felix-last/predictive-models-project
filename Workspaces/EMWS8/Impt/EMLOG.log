*------------------------------------------------------------*
User:                VM-SAS
Date:                05 de Março de 2016
Time:                11H22m
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "05 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11H22m" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                05 de Março de 2016
Time:                11H22m
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O17IXQ53 "E:\Datamining\DataMining_Lab\Tugas\Workspaces\EMWS8\Impt\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O17IXQ53 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "E:\Datamining\DataMining_Lab\Tugas\Workspaces\EMWS8\Impt\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "05 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11H22m" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                VM-SAS";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "E:\Datamining\DataMining_Lab\Tugas\Workspaces\EMWS8\Impt\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "E:\Datamining\DataMining_Lab\Tugas\Workspaces\EMWS8\Impt\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "E:\Datamining\DataMining_Lab\Tugas\Workspaces\EMWS8\Impt\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "E:\Datamining\DataMining_Lab\Tugas\Workspaces\EMWS8\Impt\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "05 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11H22m" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                VM-SAS";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "E:\Datamining\DataMining_Lab\Tugas\Workspaces\EMWS8\Impt\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "E:\Datamining\DataMining_Lab\Tugas\Workspaces\EMWS8\Impt\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "E:\Datamining\DataMining_Lab\Tugas\Workspaces\EMWS8\Impt\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'E:\Datamining\DataMining_Lab\Tugas\Workspaces\EMWS8\Impt\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
29576      proc freq data=EMWS8.Impt_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Impt_VariableSet noprint;
29577      table ROLE*LEVEL/out=WORK.ImptMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.ImptMETA;
29578      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 29 observations read from the data set EMWS8.IMPT_VARIABLESET.
NOTE: The data set WORK.IMPTMETA has 7 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
29579      proc print data=WORK.ImptMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ImptMETA label noobs;
29580      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
29581      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
29582      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
29583      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
29584      run;
 
NOTE: There were 7 observations read from the data set WORK.IMPTMETA.
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29585      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M3H1IVLH;
MPRINT(EM_DIAGRAM):   set WORK.M3H1IVLH;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (ROLE ne 'REJECTED' and USE = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role = 'INPUT' and METHOD='DEFAULT' then do;
MPRINT(EM_DIAGRAM):   if level ne 'INTERVAL' then METHOD = "COUNT";
MPRINT(EM_DIAGRAM):   else METHOD = "TREE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if role = 'TARGET' and METHOD='DEFAULT' then do;
MPRINT(EM_DIAGRAM):   if level ne 'INTERVAL' then METHOD = "NONE";
MPRINT(EM_DIAGRAM):   else METHOD = "NONE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
29603      data WORK.Impt_TREEINPUTS;
MPRINT(EM_DIAGRAM):    data WORK.Impt_TREEINPUTS;
29604      set WORK.M3QLY8GT;
MPRINT(EM_DIAGRAM):   set WORK.M3QLY8GT;
29605      if ROLE ne 'FREQ' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'FREQ' then do;
29606      if ((ROLE in('TARGET','REJECTED') and useTree='D') or useTree='N') then delete;
MPRINT(EM_DIAGRAM):   if ((ROLE in('TARGET','REJECTED') and useTree='D') or useTree='N') then delete;
29607      ROLE = 'INPUT';
MPRINT(EM_DIAGRAM):   ROLE = 'INPUT';
29608      end;
MPRINT(EM_DIAGRAM):   end;
29609      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M3QLY8GT.
NOTE: The data set WORK.IMPT_TREEINPUTS has 18 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29610      data WORK.M3QLY8GT;
MPRINT(EM_DIAGRAM):   data WORK.M3QLY8GT;
29611      set WORK.M3QLY8GT;
MPRINT(EM_DIAGRAM):   set WORK.M3QLY8GT;
29612      if METHOD in("TREE", "TREESURR") then role = 'TARGET';
MPRINT(EM_DIAGRAM):   if METHOD in("TREE", "TREESURR") then role = 'TARGET';
29613      else if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if (role = 'REJECTED') then role = 'INPUT';
29614      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M3QLY8GT.
NOTE: The data set WORK.M3QLY8GT has 19 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
29615      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
29616      * Impt: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Impt: DMDBClass Macro ;
29617      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
29618      %macro DMDBClass;
29619          REP_DepVar(DESC) REP_Dependents(ASC) REP_Education(ASC) REP_Gender(ASC)
29620         REP_Marital_Status(ASC)
29621      %mend DMDBClass;
29622      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
29623      * Impt: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Impt: DMDBVar Macro ;
29624      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
29625      %macro DMDBVar;
29626          CatPurchase Clothes Dt_Customer Frq Income Mnt NetPurchase REP_HouseKeeping
29627         REP_Kitchen REP_Toys Rcn Recomendation SmallAppliances Year_Birth
29628      %mend DMDBVar;
29629      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29630      * Impt: Create DMDB;
MPRINT(EM_DIAGRAM):   * Impt: Create DMDB;
29631      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29632      proc dmdb batch data=EMWS8.Repl_TRAIN
29633      dmdbcat=WORK.Impt_DMDB
29634      classout=WORK.Impt_DMDBCLASSOUT
29635      varout=WORK.IMPUTE_0RLH6J__DMDBVAROUT
29636      maxlevel = 513
29637      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Repl_TRAIN dmdbcat=WORK.Impt_DMDB classout=WORK.Impt_DMDBCLASSOUT varout=WORK.IMPUTE_0RLH6J__DMDBVAROUT maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
29638      class %DMDBClass;
MPRINT(DMDBCLASS):   REP_DepVar(DESC) REP_Dependents(ASC) REP_Education(ASC) REP_Gender(ASC) REP_Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
29639      var %DMDBVar;
MPRINT(DMDBVAR):   CatPurchase Clothes Dt_Customer Frq Income Mnt NetPurchase REP_HouseKeeping REP_Kitchen REP_Toys Rcn Recomendation SmallAppliances Year_Birth
MPRINT(EM_DIAGRAM):  ;
29640      target
29641      CatPurchase
29642      Clothes
29643      Dt_Customer
29644      Frq
29645      Income
29646      Mnt
29647      NetPurchase
29648      REP_DepVar
29649      REP_HouseKeeping
29650      REP_Kitchen
29651      REP_Toys
29652      Rcn
29653      Recomendation
29654      SmallAppliances
29655      Year_Birth
29656      ;
MPRINT(EM_DIAGRAM):   target CatPurchase Clothes Dt_Customer Frq Income Mnt NetPurchase REP_DepVar REP_HouseKeeping REP_Kitchen REP_Toys Rcn Recomendation SmallAppliances Year_Birth ;
29657      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2500   Memory used = 511K.
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: View EMWS8.REPL_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
 
NOTE: There were 2500 observations read from the data set EMWS8.PLOT_TRAIN.
NOTE: There were 2500 observations read from the data set EMWS8.REPL_TRAIN.
NOTE: The data set WORK.IMPT_DMDBCLASSOUT has 19 observations and 9 variables.
NOTE: The data set WORK.IMPUTE_0RLH6J__DMDBVAROUT has 14 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.12 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
29658      quit;
29659      *--- end code ---*;
 
29660      proc sort data=WORK.Impt_DMDBCLASSOUT;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.Impt_DMDBCLASSOUT;
29661      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29662      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.IMPT_DMDBCLASSOUT.
NOTE: The data set WORK.IMPT_DMDBCLASSOUT has 19 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
29663      data WORK.Impt_DMDBCLASSOUT;
MPRINT(EM_DIAGRAM):   data WORK.Impt_DMDBCLASSOUT;
29664      retain missFlag;
MPRINT(EM_DIAGRAM):   retain missFlag;
29665      set WORK.Impt_DMDBCLASSOUT;
MPRINT(EM_DIAGRAM):   set WORK.Impt_DMDBCLASSOUT;
29666      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29667      output;
MPRINT(EM_DIAGRAM):   output;
29668      if first.name then missflag = 0;
MPRINT(EM_DIAGRAM):   if first.name then missflag = 0;
29669      if (TYPE='C' and CRAW='') or (TYPE='N' and NRAW=.) then missflag = 1;
MPRINT(EM_DIAGRAM):   if (TYPE='C' and CRAW='') or (TYPE='N' and NRAW=.) then missflag = 1;
29670      if last.name and ^missFlag then do;
MPRINT(EM_DIAGRAM):   if last.name and ^missFlag then do;
29671      if type = 'C' then do;
MPRINT(EM_DIAGRAM):   if type = 'C' then do;
29672      LEVEL= '';
MPRINT(EM_DIAGRAM):   LEVEL= '';
29673      CRAW = '';
MPRINT(EM_DIAGRAM):   CRAW = '';
29674      NRAW = .;
MPRINT(EM_DIAGRAM):   NRAW = .;
29675      end;
MPRINT(EM_DIAGRAM):   end;
29676      else do;
MPRINT(EM_DIAGRAM):   else do;
29677      LEVEL='.';
MPRINT(EM_DIAGRAM):   LEVEL='.';
29678      CRAW = '.';
MPRINT(EM_DIAGRAM):   CRAW = '.';
29679      NRAW= .;
MPRINT(EM_DIAGRAM):   NRAW= .;
29680      end;
MPRINT(EM_DIAGRAM):   end;
29681      FREQUENCY = 0;
MPRINT(EM_DIAGRAM):   FREQUENCY = 0;
29682      FREQPERCENT = 0;
MPRINT(EM_DIAGRAM):   FREQPERCENT = 0;
29683      NMISSPERCENT = 0;
MPRINT(EM_DIAGRAM):   NMISSPERCENT = 0;
29684      output;
MPRINT(EM_DIAGRAM):   output;
29685      end;
MPRINT(EM_DIAGRAM):   end;
29686      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.IMPT_DMDBCLASSOUT.
NOTE: The data set WORK.IMPT_DMDBCLASSOUT has 21 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29687      data WORK.Impt_MISS(KEEP=NAME NMISS PERCENTMISS);
MPRINT(EM_DIAGRAM):    data WORK.Impt_MISS(KEEP=NAME NMISS PERCENTMISS);
29688      length NAME $32;
MPRINT(EM_DIAGRAM):   length NAME $32;
29689      set
29690      WORK.Impt_DMDBCLASSOUT(rename=(freqpercent=PERCENTMISS frequency=NMISS) where=((TYPE='C' and CRAW='') or (TYPE='N' and NRAW=.)))
29691      WORK.IMPUTE_0RLH6J__DMDBVAROUT
29692      ;
MPRINT(EM_DIAGRAM):   set WORK.Impt_DMDBCLASSOUT(rename=(freqpercent=PERCENTMISS frequency=NMISS) where=((TYPE='C' and CRAW='') or (TYPE='N' and NRAW=.))) WORK.IMPUTE_0RLH6J__DMDBVAROUT ;
29693      if (NMISS ne . and N ne .) then PERCENTMISS = (NMISS/(NMISS+N))*100;
MPRINT(EM_DIAGRAM):   if (NMISS ne . and N ne .) then PERCENTMISS = (NMISS/(NMISS+N))*100;
29694      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.IMPT_DMDBCLASSOUT.
      WHERE ((TYPE='C') and (CRAW=' ')) or ((TYPE='N') and (NRAW=.));
NOTE: There were 14 observations read from the data set WORK.IMPUTE_0RLH6J__DMDBVAROUT.
NOTE: The data set WORK.IMPT_MISS has 19 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
29695      proc sort data=WORK.M3H1IVLH NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M3H1IVLH NOTHREADS;
29696      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29697      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M3H1IVLH.
NOTE: The data set WORK.M3H1IVLH has 19 observations and 23 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29698      proc sort data=WORK.Impt_MISS NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Impt_MISS NOTHREADS;
29699      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29700      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.IMPT_MISS.
NOTE: The data set WORK.IMPT_MISS has 19 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
29701      data WORK.M3H1IVLH;
MPRINT(EM_DIAGRAM):   data WORK.M3H1IVLH;
29702      merge WORK.M3H1IVLH WORK.Impt_MISS(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.M3H1IVLH WORK.Impt_MISS(in=_b);
29703      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29704      if _b then output;
MPRINT(EM_DIAGRAM):   if _b then output;
29705      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M3H1IVLH.
NOTE: There were 19 observations read from the data set WORK.IMPT_MISS.
NOTE: The data set WORK.M3H1IVLH has 19 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29706      data WORK.M3H1IVLH;
MPRINT(EM_DIAGRAM):   data WORK.M3H1IVLH;
29707      set WORK.M3H1IVLH;
MPRINT(EM_DIAGRAM):   set WORK.M3H1IVLH;
29708      if 0<PERCENTMISS<50 and method ne 'NONE' then IMPUTE = 1;
MPRINT(EM_DIAGRAM):   if 0<PERCENTMISS<50 and method ne 'NONE' then IMPUTE = 1;
29709      else IMPUTE = 0;
MPRINT(EM_DIAGRAM):   else IMPUTE = 0;
29710      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M3H1IVLH.
NOTE: The data set WORK.M3H1IVLH has 19 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
29711      proc dmdb data=WORK.M3H1IVLH outtable=WORK.NEWNAMES nameserver;
MPRINT(EM_DIAGRAM):    proc dmdb data=WORK.M3H1IVLH outtable=WORK.NEWNAMES nameserver;
29712      names NAME;
MPRINT(EM_DIAGRAM):   names NAME;
29713      prefix M_ IMP_;
MPRINT(EM_DIAGRAM):   prefix M_ IMP_;
29714      where IMPUTE=1;
MPRINT(EM_DIAGRAM):   where IMPUTE=1;
29715      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.M3H1IVLH.
      WHERE IMPUTE=1;
NOTE: The data set WORK.NEWNAMES has 7 observations and 3 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29716      data WORK.M3H1IVLH;
MPRINT(EM_DIAGRAM):   data WORK.M3H1IVLH;
29717      merge WORK.M3H1IVLH WORK.NEWNAMES;
MPRINT(EM_DIAGRAM):   merge WORK.M3H1IVLH WORK.NEWNAMES;
29718      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29719      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M3H1IVLH.
NOTE: There were 7 observations read from the data set WORK.NEWNAMES.
NOTE: The data set WORK.M3H1IVLH has 19 observations and 28 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
29720      proc dmdb data=WORK.M3H1IVLH outtable=WORK.NEWNAMES nameserver;
MPRINT(EM_DIAGRAM):   proc dmdb data=WORK.M3H1IVLH outtable=WORK.NEWNAMES nameserver;
29721      names NAME;
MPRINT(EM_DIAGRAM):   names NAME;
29722      prefix M_;
MPRINT(EM_DIAGRAM):   prefix M_;
29723      where IMPUTE=0;
MPRINT(EM_DIAGRAM):   where IMPUTE=0;
29724      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK.M3H1IVLH.
      WHERE IMPUTE=0;
NOTE: The data set WORK.NEWNAMES has 12 observations and 2 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
29725      data WORK.M3H1IVLH;
MPRINT(EM_DIAGRAM):   data WORK.M3H1IVLH;
29726      merge WORK.M3H1IVLH WORK.NEWNAMES;
MPRINT(EM_DIAGRAM):   merge WORK.M3H1IVLH WORK.NEWNAMES;
29727      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29728      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M3H1IVLH.
NOTE: There were 12 observations read from the data set WORK.NEWNAMES.
NOTE: The data set WORK.M3H1IVLH has 19 observations and 28 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29729      data WORK.Impt;
MPRINT(EM_DIAGRAM):    data WORK.Impt;
29730      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.IMPT has 1 observations and 0 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29731      data WORK._IMPUTEDS;
MPRINT(EM_DIAGRAM):    data WORK._IMPUTEDS;
29732      REP_Education = 'Graduation';
MPRINT(EM_DIAGRAM):   REP_Education = 'Graduation';
29733      REP_Gender = 'F';
MPRINT(EM_DIAGRAM):   REP_Gender = 'F';
29734      REP_Marital_Status = 'Married';
MPRINT(EM_DIAGRAM):   REP_Marital_Status = 'Married';
29735      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._IMPUTEDS has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29736      data WORK.Impt;
MPRINT(EM_DIAGRAM):   data WORK.Impt;
29737      merge WORK.Impt WORK._IMPUTEDS;
MPRINT(EM_DIAGRAM):   merge WORK.Impt WORK._IMPUTEDS;
29738      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.IMPT.
NOTE: There were 1 observations read from the data set WORK._IMPUTEDS.
NOTE: The data set WORK.IMPT has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Preparing metadata for Tree Imputation;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M1ASZYXD;
MPRINT(EM_DIAGRAM):   retain found 0;
MPRINT(EM_DIAGRAM):   set WORK.M1ASZYXD end=eof;
The SAS System
 
MPRINT(EM_DIAGRAM):   length USE $1;
MPRINT(EM_DIAGRAM):   if NAME = 'Income' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   found = 1;
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if eof and ^found then do;
MPRINT(EM_DIAGRAM):   NAME = 'Income';
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   LABEL = 'Income';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
MPRINT(EM_DIAGRAM):   LENGTH = length;
MPRINT(EM_DIAGRAM):   FORMAT = 'BEST.';
MPRINT(EM_DIAGRAM):   ORDER = '';
MPRINT(EM_DIAGRAM):   LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create Decision Tree using Target Income;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
The specified value Split Size is not valid.
The value for Split Size has been reset to the default value of missing.
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create decision matrix;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data WORK.EM_Impt / view=WORK.EM_Impt;
MPRINT(EM_DIAGRAM):   set EMWS8.Repl_TRAIN(keep
MPRINT(EM_DIAGRAM):  =CatPurchase Clothes Dt_Customer Frq Mnt NetPurchase REP_Dependents REP_Education REP_Gender REP_HouseKeeping REP_Kitchen REP_Marital_Status REP_Toys Rcn Recomendation SmallAppliances Year_Birth Income);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Binary and Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Run ARBOR procedure;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    proc arbor data=WORK.EM_Impt Leafsize=5 Mincatsize = 5 Maxbranch=2 Maxdepth=6 alpha = 0.02 Padjust= CHAIDBEFORE DEPTH MAXRULES=5 Missing=USEINSEARCH ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
MPRINT(INTINPUTS):   CatPurchase Clothes Dt_Customer Frq Mnt NetPurchase REP_HouseKeeping REP_Kitchen REP_Toys Rcn Recomendation SmallAppliances Year_Birth
MPRINT(EM_DIAGRAM):   / level = interval;
MPRINT(EM_DIAGRAM):   input
MPRINT(NOMINPUTS):   REP_Dependents REP_Education REP_Gender REP_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal;
MPRINT(EM_DIAGRAM):   target Income / level=INTERVAL Criterion=PROBF ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   save MODEL=WORK.OUTTREE_TREE_3SOS_G3 SEQUENCE=WORK.OUTSEQ_TREE_3SOS_G3 IMPORTANCE=WORK.OUTIMPORT_TREE_3SOS_G3 NODESTAT=WORK.OUTNODES_TREE_3SOS_G3 SUMMARY=WORK.OUTSUMMARY_TREE_3SOS_G3 STATSBYNODE=WORK.OUTSTATS_TREE_3SOS_G3
Pathlistnonmissing = WORK.OUTPATH_TREE_3SOS_G3 Rules = WORK.OUTRULES_TREE_3SOS_G3 ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_3SOS_G3.SCORECODE.SOURCE group=Impt NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_3SOS_G3.RESIDUALSCORECODE.SOURCE group=Impt residual NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   score data=WORK.EM_Impt out=_NULL_ outfit=WORK.OUTFIT_TREE_3SOS_G3 role=TRAIN ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data WORK.OUTIMPORT_TREE_3SOS_G3;
MPRINT(EM_DIAGRAM):   set WORK.OUTIMPORT_TREE_3SOS_G3;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename x "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD2168_VM-SAS-PC_\Prc2\DESCRIBE.SOURCE" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):    data temp;
MPRINT(EM_DIAGRAM):   length varname $27;
MPRINT(EM_DIAGRAM):   retain varname;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_3SOS_G3;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.OUTNODES_TREE_3SOS_G3 out=outnodes;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data temp;
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node N P_Income );
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   if _a;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file x;
MPRINT(EM_DIAGRAM):   set temp;
MPRINT(EM_DIAGRAM):   by node descending varname;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode = node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.node then do;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put " Node = " node;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.node then do;
MPRINT(EM_DIAGRAM):   put "then ";
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " N;
MPRINT(EM_DIAGRAM):   put " Predicted: Income  = " P_Income;
MPRINT(EM_DIAGRAM):   put " ";
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename x;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Preparing metadata for Tree Imputation;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M1F4AN_L;
MPRINT(EM_DIAGRAM):   retain found 0;
MPRINT(EM_DIAGRAM):   set WORK.M1F4AN_L end=eof;
MPRINT(EM_DIAGRAM):   length USE $1;
MPRINT(EM_DIAGRAM):   if NAME = 'REP_HouseKeeping' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   found = 1;
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if eof and ^found then do;
MPRINT(EM_DIAGRAM):   NAME = 'REP_HouseKeeping';
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   LABEL = 'Replacement: HouseKeeping';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
MPRINT(EM_DIAGRAM):   LENGTH = length;
MPRINT(EM_DIAGRAM):   FORMAT = '';
MPRINT(EM_DIAGRAM):   ORDER = '';
MPRINT(EM_DIAGRAM):   LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create Decision Tree using Target REP_HouseKeeping;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
The specified value Split Size is not valid.
The value for Split Size has been reset to the default value of missing.
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create decision matrix;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data WORK.EM_Impt / view=WORK.EM_Impt;
MPRINT(EM_DIAGRAM):   set EMWS8.Repl_TRAIN(keep
MPRINT(EM_DIAGRAM):  =CatPurchase Clothes Dt_Customer Frq Income Mnt NetPurchase REP_Dependents REP_Education REP_Gender REP_Kitchen REP_Marital_Status REP_Toys Rcn Recomendation SmallAppliances Year_Birth REP_HouseKeeping);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Binary and Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Run ARBOR procedure;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    proc arbor data=WORK.EM_Impt Leafsize=5 Mincatsize = 5 Maxbranch=2 Maxdepth=6 alpha = 0.02 Padjust= CHAIDBEFORE DEPTH MAXRULES=5 Missing=USEINSEARCH ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
MPRINT(INTINPUTS):   CatPurchase Clothes Dt_Customer Frq Income Mnt NetPurchase REP_Kitchen REP_Toys Rcn Recomendation SmallAppliances Year_Birth
MPRINT(EM_DIAGRAM):   / level = interval;
MPRINT(EM_DIAGRAM):   input
MPRINT(NOMINPUTS):   REP_Dependents REP_Education REP_Gender REP_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal;
MPRINT(EM_DIAGRAM):   target REP_HouseKeeping / level=INTERVAL Criterion=PROBF ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   save MODEL=WORK.OUTTREE_TREE_02Q_GE7 SEQUENCE=WORK.OUTSEQ_TREE_02Q_GE7 IMPORTANCE=WORK.OUTIMPORT_TREE_02Q_GE7 NODESTAT=WORK.OUTNODES_TREE_02Q_GE7 SUMMARY=WORK.OUTSUMMARY_TREE_02Q_GE7 STATSBYNODE=WORK.OUTSTATS_TREE_02Q_GE7
Pathlistnonmissing = WORK.OUTPATH_TREE_02Q_GE7 Rules = WORK.OUTRULES_TREE_02Q_GE7 ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_02Q_GE7.SCORECODE.SOURCE group=Impt NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_02Q_GE7.RESIDUALSCORECODE.SOURCE group=Impt residual NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   score data=WORK.EM_Impt out=_NULL_ outfit=WORK.OUTFIT_TREE_02Q_GE7 role=TRAIN ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data WORK.OUTIMPORT_TREE_02Q_GE7;
MPRINT(EM_DIAGRAM):   set WORK.OUTIMPORT_TREE_02Q_GE7;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename x "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD2168_VM-SAS-PC_\Prc2\DESCRIBE.SOURCE" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):    data temp;
MPRINT(EM_DIAGRAM):   length varname $27;
MPRINT(EM_DIAGRAM):   retain varname;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_02Q_GE7;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.OUTNODES_TREE_02Q_GE7 out=outnodes;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data temp;
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node N P_REP_HouseKeeping );
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   if _a;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file x;
MPRINT(EM_DIAGRAM):   set temp;
MPRINT(EM_DIAGRAM):   by node descending varname;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode = node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.node then do;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put " Node = " node;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.node then do;
MPRINT(EM_DIAGRAM):   put "then ";
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " N;
MPRINT(EM_DIAGRAM):   put " Predicted: REP_HouseKeeping  = " P_REP_HouseKeeping;
MPRINT(EM_DIAGRAM):   put " ";
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename x;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Preparing metadata for Tree Imputation;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M2W7MIO0;
MPRINT(EM_DIAGRAM):   retain found 0;
MPRINT(EM_DIAGRAM):   set WORK.M2W7MIO0 end=eof;
MPRINT(EM_DIAGRAM):   length USE $1;
MPRINT(EM_DIAGRAM):   if NAME = 'REP_Kitchen' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   found = 1;
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if eof and ^found then do;
MPRINT(EM_DIAGRAM):   NAME = 'REP_Kitchen';
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   LABEL = 'Replacement: Kitchen';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
MPRINT(EM_DIAGRAM):   LENGTH = length;
MPRINT(EM_DIAGRAM):   FORMAT = '';
MPRINT(EM_DIAGRAM):   ORDER = '';
MPRINT(EM_DIAGRAM):   LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create Decision Tree using Target REP_Kitchen;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
The specified value Split Size is not valid.
The value for Split Size has been reset to the default value of missing.
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create decision matrix;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data WORK.EM_Impt / view=WORK.EM_Impt;
MPRINT(EM_DIAGRAM):   set EMWS8.Repl_TRAIN(keep
MPRINT(EM_DIAGRAM):  =CatPurchase Clothes Dt_Customer Frq Income Mnt NetPurchase REP_Dependents REP_Education REP_Gender REP_HouseKeeping REP_Marital_Status REP_Toys Rcn Recomendation SmallAppliances Year_Birth REP_Kitchen);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Binary and Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Run ARBOR procedure;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    proc arbor data=WORK.EM_Impt Leafsize=5 Mincatsize = 5 Maxbranch=2 Maxdepth=6 alpha = 0.02 Padjust= CHAIDBEFORE DEPTH MAXRULES=5 Missing=USEINSEARCH ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
MPRINT(INTINPUTS):   CatPurchase Clothes Dt_Customer Frq Income Mnt NetPurchase REP_HouseKeeping REP_Toys Rcn Recomendation SmallAppliances Year_Birth
MPRINT(EM_DIAGRAM):   / level = interval;
MPRINT(EM_DIAGRAM):   input
MPRINT(NOMINPUTS):   REP_Dependents REP_Education REP_Gender REP_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal;
MPRINT(EM_DIAGRAM):   target REP_Kitchen / level=INTERVAL Criterion=PROBF ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   save MODEL=WORK.OUTTREE_TREE_3839N0C SEQUENCE=WORK.OUTSEQ_TREE_3839N0C IMPORTANCE=WORK.OUTIMPORT_TREE_3839N0C NODESTAT=WORK.OUTNODES_TREE_3839N0C SUMMARY=WORK.OUTSUMMARY_TREE_3839N0C STATSBYNODE=WORK.OUTSTATS_TREE_3839N0C
Pathlistnonmissing = WORK.OUTPATH_TREE_3839N0C Rules = WORK.OUTRULES_TREE_3839N0C ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_3839N0C.SCORECODE.SOURCE group=Impt NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_3839N0C.RESIDUALSCORECODE.SOURCE group=Impt residual NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   score data=WORK.EM_Impt out=_NULL_ outfit=WORK.OUTFIT_TREE_3839N0C role=TRAIN ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data WORK.OUTIMPORT_TREE_3839N0C;
MPRINT(EM_DIAGRAM):   set WORK.OUTIMPORT_TREE_3839N0C;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename x "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD2168_VM-SAS-PC_\Prc2\DESCRIBE.SOURCE" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):    data temp;
MPRINT(EM_DIAGRAM):   length varname $27;
MPRINT(EM_DIAGRAM):   retain varname;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_3839N0C;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.OUTNODES_TREE_3839N0C out=outnodes;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data temp;
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node N P_REP_Kitchen );
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   if _a;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file x;
MPRINT(EM_DIAGRAM):   set temp;
MPRINT(EM_DIAGRAM):   by node descending varname;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode = node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.node then do;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put " Node = " node;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.node then do;
MPRINT(EM_DIAGRAM):   put "then ";
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " N;
MPRINT(EM_DIAGRAM):   put " Predicted: REP_Kitchen  = " P_REP_Kitchen;
MPRINT(EM_DIAGRAM):   put " ";
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename x;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Preparing metadata for Tree Imputation;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M2QEYN5U;
MPRINT(EM_DIAGRAM):   retain found 0;
MPRINT(EM_DIAGRAM):   set WORK.M2QEYN5U end=eof;
MPRINT(EM_DIAGRAM):   length USE $1;
MPRINT(EM_DIAGRAM):   if NAME = 'REP_Toys' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   found = 1;
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if eof and ^found then do;
MPRINT(EM_DIAGRAM):   NAME = 'REP_Toys';
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   LABEL = 'Replacement: Toys';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
MPRINT(EM_DIAGRAM):   LENGTH = length;
MPRINT(EM_DIAGRAM):   FORMAT = '';
MPRINT(EM_DIAGRAM):   ORDER = '';
MPRINT(EM_DIAGRAM):   LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   USE='Y';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create Decision Tree using Target REP_Toys;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
The specified value Split Size is not valid.
The value for Split Size has been reset to the default value of missing.
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Create decision matrix;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data WORK.EM_Impt / view=WORK.EM_Impt;
MPRINT(EM_DIAGRAM):   set EMWS8.Repl_TRAIN(keep
MPRINT(EM_DIAGRAM):  =CatPurchase Clothes Dt_Customer Frq Income Mnt NetPurchase REP_Dependents REP_Education REP_Gender REP_HouseKeeping REP_Kitchen REP_Marital_Status Rcn Recomendation SmallAppliances Year_Birth REP_Toys);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Binary and Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Impt: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Run ARBOR procedure;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    proc arbor data=WORK.EM_Impt Leafsize=5 Mincatsize = 5 Maxbranch=2 Maxdepth=6 alpha = 0.02 Padjust= CHAIDBEFORE DEPTH MAXRULES=5 Missing=USEINSEARCH ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
MPRINT(INTINPUTS):   CatPurchase Clothes Dt_Customer Frq Income Mnt NetPurchase REP_HouseKeeping REP_Kitchen Rcn Recomendation SmallAppliances Year_Birth
MPRINT(EM_DIAGRAM):   / level = interval;
MPRINT(EM_DIAGRAM):   input
MPRINT(NOMINPUTS):   REP_Dependents REP_Education REP_Gender REP_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal;
MPRINT(EM_DIAGRAM):   target REP_Toys / level=INTERVAL Criterion=PROBF ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   save MODEL=WORK.OUTTREE_TREE_014BIQ9 SEQUENCE=WORK.OUTSEQ_TREE_014BIQ9 IMPORTANCE=WORK.OUTIMPORT_TREE_014BIQ9 NODESTAT=WORK.OUTNODES_TREE_014BIQ9 SUMMARY=WORK.OUTSUMMARY_TREE_014BIQ9 STATSBYNODE=WORK.OUTSTATS_TREE_014BIQ9
Pathlistnonmissing = WORK.OUTPATH_TREE_014BIQ9 Rules = WORK.OUTRULES_TREE_014BIQ9 ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_014BIQ9.SCORECODE.SOURCE group=Impt NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   code metabase=WORK.TREE_014BIQ9.RESIDUALSCORECODE.SOURCE group=Impt residual NOLEAFID;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   score data=WORK.EM_Impt out=_NULL_ outfit=WORK.OUTFIT_TREE_014BIQ9 role=TRAIN ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data WORK.OUTIMPORT_TREE_014BIQ9;
MPRINT(EM_DIAGRAM):   set WORK.OUTIMPORT_TREE_014BIQ9;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename x "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD2168_VM-SAS-PC_\Prc2\DESCRIBE.SOURCE" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):    data temp;
MPRINT(EM_DIAGRAM):   length varname $27;
MPRINT(EM_DIAGRAM):   retain varname;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_014BIQ9;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.OUTNODES_TREE_014BIQ9 out=outnodes;
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data temp;
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node N P_REP_Toys );
MPRINT(EM_DIAGRAM):   by node;
MPRINT(EM_DIAGRAM):   if _a;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file x;
MPRINT(EM_DIAGRAM):   set temp;
MPRINT(EM_DIAGRAM):   by node descending varname;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode = node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.node then do;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put " Node = " node;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if first.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.varname then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if last.node then do;
MPRINT(EM_DIAGRAM):   put "then ";
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " N;
MPRINT(EM_DIAGRAM):   put " Predicted: REP_Toys  = " P_REP_Toys;
MPRINT(EM_DIAGRAM):   put " ";
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   oldnode=node;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename x;
NOTE: View EMWS8.REPL_TRAIN.VIEW used (Total process time):
      real time           4.21 seconds
      cpu time            2.48 seconds
 
NOTE: View EMWS8.REPL_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
30771      proc transpose data=WORK.Impt out=WORK._IMPVALUE(drop =_LABEL_ rename=(_NAME_=NAME COL1=VALUE));
MPRINT(EM_DIAGRAM):    proc transpose data=WORK.Impt out=WORK._IMPVALUE(drop =_LABEL_ rename=(_NAME_=NAME COL1=VALUE));
30772      var
30773      REP_Education
30774      REP_Gender
30775      REP_Marital_Status
30776      ;
MPRINT(EM_DIAGRAM):   var REP_Education REP_Gender REP_Marital_Status ;
30777      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 1 observations read from the data set WORK.IMPT.
NOTE: The data set WORK._IMPVALUE has 3 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
30778      proc sort data=WORK._IMPVALUE NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._IMPVALUE NOTHREADS;
30779      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
30780      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._IMPVALUE.
NOTE: The data set WORK._IMPVALUE has 3 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30781      data EMWS8.Impt_META;
MPRINT(EM_DIAGRAM):   data EMWS8.Impt_META;
30782      merge WORK.M3H1IVLH WORK._IMPVALUE;
MPRINT(EM_DIAGRAM):   merge WORK.M3H1IVLH WORK._IMPVALUE;
30783      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
30784      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M3H1IVLH.
NOTE: There were 3 observations read from the data set WORK._IMPVALUE.
NOTE: The data set EMWS8.IMPT_META has 19 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
30785      proc print data=EMWS8.Impt_META(obs=500) label noobs;
MPRINT(EM_DIAGRAM):    proc print data=EMWS8.Impt_META(obs=500) label noobs;
30786      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,          NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,         NOQUOTE))" PERCENTMISS = "%sysfunc(sasmsg(sashelp.dmine, rpt_percentmissing_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" PERCENTMISS = "Percent Missing";
30787      var NAME LABEL PERCENTMISS;
MPRINT(EM_DIAGRAM):   var NAME LABEL PERCENTMISS;
30788      where IMP eq '' and PERCENTMISS>50;
MPRINT(EM_DIAGRAM):   where IMP eq '' and PERCENTMISS>50;
30789      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_rejectedsummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Rejected Variables Summary";
30790      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_numberobs_title,         NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Number Of Observations";
MPRINT(EM_DIAGRAM):   run;
30791      run;
 
NOTE: No observations were selected from data set EMWS8.IMPT_META.
NOTE: There were 0 observations read from the data set EMWS8.IMPT_META.
      WHERE (IMP=' ') and (PERCENTMISS>50);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "05 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11H22m" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                05 de Março de 2016
Time:                11H22m
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2SSR50M "E:\Datamining\DataMining_Lab\Tugas\Workspaces\EMWS8\Impt\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2SSR50M new;
MPRINT(EM_DIAGRAM):   run;
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
30893      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
30894      set EMWS8.Impt_META end=eof;
MPRINT(EM_DIAGRAM):   set EMWS8.Impt_META end=eof;
30895      length string $34;
MPRINT(EM_DIAGRAM):   length string $34;
30896      retain missTotal;
MPRINT(EM_DIAGRAM):   retain missTotal;
30897      file #LN00482;
MPRINT(EM_DIAGRAM):   file #LN00482;
30898      if _n_=1 then misstotal = percentmiss;
MPRINT(EM_DIAGRAM):   if _n_=1 then misstotal = percentmiss;
30899      missTotal = percentmiss+misstotal;
MPRINT(EM_DIAGRAM):   missTotal = percentmiss+misstotal;
30900      if IMP ne '' and METHOD ne 'NONE' then do;
MPRINT(EM_DIAGRAM):   if IMP ne '' and METHOD ne 'NONE' then do;
30901      string = '"'!!strip(NAME)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(NAME)!!'"';
30902      put 'if NAME = ' string 'then delete;';
MPRINT(EM_DIAGRAM):   put 'if NAME = ' string 'then delete;';
30903      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
30904      string = '"'!!strip(IMP)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(IMP)!!'"';
30905      put 'if NAME    = ' string ' then do;';
MPRINT(EM_DIAGRAM):   put 'if NAME    = ' string ' then do;';
30906      string = '"'!!strip(ROLE)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(ROLE)!!'"';
30907      put '   ROLE    = ' string ';';
MPRINT(EM_DIAGRAM):   put '   ROLE    = ' string ';';
30908      string = '"'!!strip(FAMILY)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(FAMILY)!!'"';
30909      put '   FAMILY  = ' string ';';
MPRINT(EM_DIAGRAM):   put '   FAMILY  = ' string ';';
30910      string = '"'!!strip(REPORT)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(REPORT)!!'"';
30911      put '   REPORT  = ' string ';';
MPRINT(EM_DIAGRAM):   put '   REPORT  = ' string ';';
30912      string = '"'!!strip(LEVEL)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(LEVEL)!!'"';
30913      put '   LEVEL   = ' string ';';
MPRINT(EM_DIAGRAM):   put '   LEVEL   = ' string ';';
30914      string = '"'!!strip(ORDER)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(ORDER)!!'"';
30915      put '   ORDER   = ' string ';';
MPRINT(EM_DIAGRAM):   put '   ORDER   = ' string ';';
30916      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
30917      end;
MPRINT(EM_DIAGRAM):   end;
30918      if percentmiss>50 and ROLE ne 'TARGET' then do;
MPRINT(EM_DIAGRAM):   if percentmiss>50 and ROLE ne 'TARGET' then do;
30919      string = '"'!!strip(NAME)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(NAME)!!'"';
30920      put 'if NAME = ' string ' then do;';
MPRINT(EM_DIAGRAM):   put 'if NAME = ' string ' then do;';
30921      put '   ROLE ="REJECTED";';
MPRINT(EM_DIAGRAM):   put '   ROLE ="REJECTED";';
30922      put '   COMMENT = "Percent of missing exceeds 50%";';
MPRINT(EM_DIAGRAM):   put '   COMMENT = "Percent of missing exceeds 50%";';
30923      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
30924      end;
MPRINT(EM_DIAGRAM):   end;
30925      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file #LN00482 is:
      Filename=E:\Datamining\DataMining_Lab\Tugas\Workspaces\EMWS8\Impt\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=03 de Março de 2016 08H46m,
      Create Time=03 de Março de 2016 08H46m
 
NOTE: 63 records were written to the file #LN00482.
      The minimum record length was 4.
      The maximum record length was 47.
NOTE: There were 19 observations read from the data set EMWS8.IMPT_META.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
30926      filename emflow "E:\Datamining\DataMining_Lab\Tugas\Workspaces\EMWS8\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "E:\Datamining\DataMining_Lab\Tugas\Workspaces\EMWS8\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
30927      *------------------------------------------------------------*;
30928      * Impt: Scoring DATA data;
30929      *------------------------------------------------------------*;
30930      data EMWS8.Impt_TRAIN
30931      / view=EMWS8.Impt_TRAIN
30932      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Impt_TRAIN / view=EMWS8.Impt_TRAIN ;
30933      set EMWS8.Repl_TRAIN
30934      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Repl_TRAIN ;
30935      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file E:\Datamining\DataMining_Lab\Tugas\Workspaces\EMWS8\Impt\EMFLOWSCORE.sas.
30936     +*;
MPRINT(EM_DIAGRAM):   *;
30937     +*MOST FREQUENT VALUE (COUNT);
MPRINT(EM_DIAGRAM):   *MOST FREQUENT VALUE (COUNT);
30938     +*;
MPRINT(EM_DIAGRAM):   *;
30939     +length IMP_REP_Education $10;
MPRINT(EM_DIAGRAM):   length IMP_REP_Education $10;
30940     +format IMP_REP_Education $10.0;
MPRINT(EM_DIAGRAM):   format IMP_REP_Education $10.0;
30941     +label IMP_REP_Education = 'Imputed: Replacement: Education';
MPRINT(EM_DIAGRAM):   label IMP_REP_Education = 'Imputed: Replacement: Education';
30942     +IMP_REP_Education = REP_Education;
MPRINT(EM_DIAGRAM):   IMP_REP_Education = REP_Education;
30943     +if REP_Education = '' then IMP_REP_Education = 'Graduation';
MPRINT(EM_DIAGRAM):   if REP_Education = '' then IMP_REP_Education = 'Graduation';
30944     +length IMP_REP_Gender $1;
MPRINT(EM_DIAGRAM):   length IMP_REP_Gender $1;
30945     +format IMP_REP_Gender $1.0;
MPRINT(EM_DIAGRAM):   format IMP_REP_Gender $1.0;
30946     +label IMP_REP_Gender = 'Imputed: Replacement: Gender';
MPRINT(EM_DIAGRAM):   label IMP_REP_Gender = 'Imputed: Replacement: Gender';
30947     +IMP_REP_Gender = REP_Gender;
MPRINT(EM_DIAGRAM):   IMP_REP_Gender = REP_Gender;
30948     +if REP_Gender = '' then IMP_REP_Gender = 'F';
MPRINT(EM_DIAGRAM):   if REP_Gender = '' then IMP_REP_Gender = 'F';
30949     +length IMP_REP_Marital_Status $12;
MPRINT(EM_DIAGRAM):   length IMP_REP_Marital_Status $12;
30950     +format IMP_REP_Marital_Status $12.0;
MPRINT(EM_DIAGRAM):   format IMP_REP_Marital_Status $12.0;
30951     +label IMP_REP_Marital_Status = 'Imputed: Replacement: Marital_Status';
MPRINT(EM_DIAGRAM):   label IMP_REP_Marital_Status = 'Imputed: Replacement: Marital_Status';
30952     +IMP_REP_Marital_Status = REP_Marital_Status;
MPRINT(EM_DIAGRAM):   IMP_REP_Marital_Status = REP_Marital_Status;
30953     +if REP_Marital_Status = '' then IMP_REP_Marital_Status = 'Married';
MPRINT(EM_DIAGRAM):   if REP_Marital_Status = '' then IMP_REP_Marital_Status = 'Married';
30954     +*;
MPRINT(EM_DIAGRAM):   *;
30955     +* TREE IMPUTATION;
MPRINT(EM_DIAGRAM):   * TREE IMPUTATION;
30956     +*;
MPRINT(EM_DIAGRAM):   *;
30957     +*;
MPRINT(EM_DIAGRAM):   *;
30958     +* IMPUTE VARIABLE: Income;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: Income;
30959     +*;
MPRINT(EM_DIAGRAM):   *;
30960     +format IMP_Income BEST.;
MPRINT(EM_DIAGRAM):   format IMP_Income BEST.;
30961     +label IMP_Income = 'Imputed: Income';
MPRINT(EM_DIAGRAM):   label IMP_Income = 'Imputed: Income';
30962     +IMP_Income = Income;
MPRINT(EM_DIAGRAM):   IMP_Income = Income;
30963     +if IMP_Income eq . then do;
MPRINT(EM_DIAGRAM):   if IMP_Income eq . then do;
30964     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
30965     +****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
30966     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
30967     +****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
30968     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
30969     +****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
30970     +LABEL P_Income = 'Predicted: Income';
MPRINT(EM_DIAGRAM):   LABEL P_Income = 'Predicted: Income';
30971     +LABEL _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings';
30972     +****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
30973     +IF NOT MISSING(Year_Birth ) AND
30974     +1968.5 <= Year_Birth THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year_Birth ) AND 1968.5 <= Year_Birth THEN DO;
30975     +IF NOT MISSING(Year_Birth ) AND
30976     +1983.5 <= Year_Birth THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year_Birth ) AND 1983.5 <= Year_Birth THEN DO;
30977     +IF NOT MISSING(Year_Birth ) AND
30978     +Year_Birth < 1988.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year_Birth ) AND Year_Birth < 1988.5 THEN DO;
30979     +IF NOT MISSING(Mnt ) AND
30980     +94.12 <= Mnt THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Mnt ) AND 94.12 <= Mnt THEN DO;
30981     +P_Income = 51792.6258620689;
MPRINT(EM_DIAGRAM):   P_Income = 51792.6258620689;
30982     +END;
MPRINT(EM_DIAGRAM):   END;
30983     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
30984     +P_Income = 42384.7182926829;
MPRINT(EM_DIAGRAM):   P_Income = 42384.7182926829;
30985     +END;
MPRINT(EM_DIAGRAM):   END;
30986     +END;
MPRINT(EM_DIAGRAM):   END;
30987     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
30988     +IF NOT MISSING(Mnt ) AND
30989     +93.08 <= Mnt THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Mnt ) AND 93.08 <= Mnt THEN DO;
30990     +IF NOT MISSING(Year_Birth ) AND
30991     +Year_Birth < 1992.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year_Birth ) AND Year_Birth < 1992.5 THEN DO;
30992     +P_Income = 45360.075;
MPRINT(EM_DIAGRAM):   P_Income = 45360.075;
30993     +END;
MPRINT(EM_DIAGRAM):   END;
30994     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
30995     +P_Income = 36021.93;
MPRINT(EM_DIAGRAM):   P_Income = 36021.93;
30996     +END;
MPRINT(EM_DIAGRAM):   END;
30997     +END;
MPRINT(EM_DIAGRAM):   END;
30998     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
30999     +IF NOT MISSING(Year_Birth ) AND
31000     +Year_Birth < 1991.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year_Birth ) AND Year_Birth < 1991.5 THEN DO;
31001     +P_Income = 35359.3398876404;
MPRINT(EM_DIAGRAM):   P_Income = 35359.3398876404;
31002     +END;
MPRINT(EM_DIAGRAM):   END;
31003     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31004     +P_Income = 29282.8300531914;
MPRINT(EM_DIAGRAM):   P_Income = 29282.8300531914;
31005     +END;
MPRINT(EM_DIAGRAM):   END;
31006     +END;
MPRINT(EM_DIAGRAM):   END;
31007     +END;
MPRINT(EM_DIAGRAM):   END;
31008     +END;
MPRINT(EM_DIAGRAM):   END;
31009     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31010     +IF NOT MISSING(Mnt ) AND
31011     +109.2 <= Mnt THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Mnt ) AND 109.2 <= Mnt THEN DO;
31012     +IF NOT MISSING(Year_Birth ) AND
31013     +1975.5 <= Year_Birth THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year_Birth ) AND 1975.5 <= Year_Birth THEN DO;
31014     +IF NOT MISSING(Mnt ) AND
31015     +536.12 <= Mnt THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Mnt ) AND 536.12 <= Mnt THEN DO;
31016     +P_Income = 67967.2777777777;
MPRINT(EM_DIAGRAM):   P_Income = 67967.2777777777;
31017     +END;
MPRINT(EM_DIAGRAM):   END;
31018     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31019     +P_Income = 58692.8584158416;
MPRINT(EM_DIAGRAM):   P_Income = 58692.8584158416;
31020     +END;
MPRINT(EM_DIAGRAM):   END;
31021     +END;
MPRINT(EM_DIAGRAM):   END;
31022     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31023     +IF NOT MISSING(Mnt ) AND
31024     +381.16 <= Mnt THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Mnt ) AND 381.16 <= Mnt THEN DO;
31025     +P_Income = 73606.2104166666;
MPRINT(EM_DIAGRAM):   P_Income = 73606.2104166666;
31026     +END;
MPRINT(EM_DIAGRAM):   END;
31027     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31028     +IF NOT MISSING(Dt_Customer ) AND
31029     +19533 <= Dt_Customer THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Dt_Customer ) AND 19533 <= Dt_Customer THEN DO;
31030     +P_Income = 70189.4375;
MPRINT(EM_DIAGRAM):   P_Income = 70189.4375;
31031     +END;
MPRINT(EM_DIAGRAM):   END;
31032     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31033     +P_Income = 62547.7602272727;
MPRINT(EM_DIAGRAM):   P_Income = 62547.7602272727;
31034     +END;
MPRINT(EM_DIAGRAM):   END;
31035     +END;
MPRINT(EM_DIAGRAM):   END;
31036     +END;
MPRINT(EM_DIAGRAM):   END;
31037     +END;
MPRINT(EM_DIAGRAM):   END;
31038     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31039     +IF NOT MISSING(Year_Birth ) AND
31040     +Year_Birth < 1974.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year_Birth ) AND Year_Birth < 1974.5 THEN DO;
31041     +P_Income = 60885.965;
MPRINT(EM_DIAGRAM):   P_Income = 60885.965;
31042     +END;
MPRINT(EM_DIAGRAM):   END;
31043     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31044     +P_Income = 50018.507918552;
MPRINT(EM_DIAGRAM):   P_Income = 50018.507918552;
31045     +END;
MPRINT(EM_DIAGRAM):   END;
31046     +END;
MPRINT(EM_DIAGRAM):   END;
31047     +END;
MPRINT(EM_DIAGRAM):   END;
31048     +END;
MPRINT(EM_DIAGRAM):   END;
31049     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31050     +IF NOT MISSING(Year_Birth ) AND
31051     +Year_Birth < 1951.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year_Birth ) AND Year_Birth < 1951.5 THEN DO;
31052     +IF NOT MISSING(Mnt ) AND
31053     +1602.12 <= Mnt THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Mnt ) AND 1602.12 <= Mnt THEN DO;
31054     +IF NOT MISSING(Year_Birth ) AND
31055     +1944.5 <= Year_Birth THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year_Birth ) AND 1944.5 <= Year_Birth THEN DO;
31056     +P_Income = 109554.352941176;
MPRINT(EM_DIAGRAM):   P_Income = 109554.352941176;
31057     +END;
MPRINT(EM_DIAGRAM):   END;
31058     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31059     +IF NOT MISSING(Mnt ) AND
31060     +2185.56 <= Mnt THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Mnt ) AND 2185.56 <= Mnt THEN DO;
31061     +P_Income = 126223.521052631;
MPRINT(EM_DIAGRAM):   P_Income = 126223.521052631;
31062     +END;
MPRINT(EM_DIAGRAM):   END;
31063     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31064     +IF NOT MISSING(Dt_Customer ) AND
31065     +Dt_Customer < 19501 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Dt_Customer ) AND Dt_Customer < 19501 THEN DO;
31066     +P_Income = 112988.731578947;
MPRINT(EM_DIAGRAM):   P_Income = 112988.731578947;
31067     +END;
MPRINT(EM_DIAGRAM):   END;
31068     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31069     +P_Income = 121554.279411764;
MPRINT(EM_DIAGRAM):   P_Income = 121554.279411764;
31070     +END;
MPRINT(EM_DIAGRAM):   END;
31071     +END;
MPRINT(EM_DIAGRAM):   END;
31072     +END;
MPRINT(EM_DIAGRAM):   END;
31073     +END;
MPRINT(EM_DIAGRAM):   END;
31074     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31075     +IF NOT MISSING(Mnt ) AND
31076     +Mnt < 932.88 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Mnt ) AND Mnt < 932.88 THEN DO;
31077     +P_Income = 96244.2833333333;
MPRINT(EM_DIAGRAM):   P_Income = 96244.2833333333;
31078     +END;
MPRINT(EM_DIAGRAM):   END;
31079     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31080     +IF NOT MISSING(Year_Birth ) AND
31081     +Year_Birth < 1943.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year_Birth ) AND Year_Birth < 1943.5 THEN DO;
31082     +P_Income = 111193.566129032;
MPRINT(EM_DIAGRAM):   P_Income = 111193.566129032;
31083     +END;
MPRINT(EM_DIAGRAM):   END;
31084     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31085     +IF NOT MISSING(Dt_Customer ) AND
31086     +19749.5 <= Dt_Customer THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Dt_Customer ) AND 19749.5 <= Dt_Customer THEN DO;
31087     +P_Income = 108965.112162162;
MPRINT(EM_DIAGRAM):   P_Income = 108965.112162162;
31088     +END;
MPRINT(EM_DIAGRAM):   END;
31089     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31090     +P_Income = 101652.857727272;
MPRINT(EM_DIAGRAM):   P_Income = 101652.857727272;
31091     +END;
MPRINT(EM_DIAGRAM):   END;
31092     +END;
MPRINT(EM_DIAGRAM):   END;
31093     +END;
MPRINT(EM_DIAGRAM):   END;
31094     +END;
MPRINT(EM_DIAGRAM):   END;
31095     +END;
MPRINT(EM_DIAGRAM):   END;
31096     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31097     +IF NOT MISSING(Year_Birth ) AND
31098     +Year_Birth < 1959.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year_Birth ) AND Year_Birth < 1959.5 THEN DO;
31099     +IF NOT MISSING(Mnt ) AND
31100     +Mnt < 648.96 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Mnt ) AND Mnt < 648.96 THEN DO;
31101     +IF NOT MISSING(Mnt ) AND
31102     +Mnt < 334.36 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Mnt ) AND Mnt < 334.36 THEN DO;
31103     +P_Income = 78161.4909090909;
MPRINT(EM_DIAGRAM):   P_Income = 78161.4909090909;
31104     +END;
MPRINT(EM_DIAGRAM):   END;
31105     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31106     +IF NOT MISSING(Dt_Customer ) AND
31107     +19669.5 <= Dt_Customer THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Dt_Customer ) AND 19669.5 <= Dt_Customer THEN DO;
31108     +P_Income = 92220.6409090909;
MPRINT(EM_DIAGRAM):   P_Income = 92220.6409090909;
31109     +END;
MPRINT(EM_DIAGRAM):   END;
31110     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31111     +P_Income = 84575.12;
MPRINT(EM_DIAGRAM):   P_Income = 84575.12;
31112     +END;
MPRINT(EM_DIAGRAM):   END;
31113     +END;
MPRINT(EM_DIAGRAM):   END;
31114     +END;
MPRINT(EM_DIAGRAM):   END;
31115     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31116     +IF NOT MISSING(Mnt ) AND
31117     +1332.24 <= Mnt THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Mnt ) AND 1332.24 <= Mnt THEN DO;
31118     +P_Income = 100136.364406779;
MPRINT(EM_DIAGRAM):   P_Income = 100136.364406779;
31119     +END;
MPRINT(EM_DIAGRAM):   END;
31120     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31121     +P_Income = 93087.8516129032;
MPRINT(EM_DIAGRAM):   P_Income = 93087.8516129032;
31122     +END;
MPRINT(EM_DIAGRAM):   END;
31123     +END;
MPRINT(EM_DIAGRAM):   END;
31124     +END;
MPRINT(EM_DIAGRAM):   END;
31125     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31126     +IF NOT MISSING(Mnt ) AND
31127     +731.64 <= Mnt THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Mnt ) AND 731.64 <= Mnt THEN DO;
31128     +IF NOT MISSING(Dt_Customer ) AND
31129     +Dt_Customer < 19402 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Dt_Customer ) AND Dt_Customer < 19402 THEN DO;
31130     +P_Income = 82426.9586538461;
MPRINT(EM_DIAGRAM):   P_Income = 82426.9586538461;
31131     +END;
MPRINT(EM_DIAGRAM):   END;
31132     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31133     +P_Income = 89224.4602941176;
MPRINT(EM_DIAGRAM):   P_Income = 89224.4602941176;
31134     +END;
MPRINT(EM_DIAGRAM):   END;
31135     +END;
MPRINT(EM_DIAGRAM):   END;
31136     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31137     +IF NOT MISSING(Mnt ) AND
31138     +Mnt < 125.32 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Mnt ) AND Mnt < 125.32 THEN DO;
31139     +P_Income = 66476.9336538461;
MPRINT(EM_DIAGRAM):   P_Income = 66476.9336538461;
31140     +END;
MPRINT(EM_DIAGRAM):   END;
31141     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31142     +IF NOT MISSING(Dt_Customer ) AND
31143     +19677.5 <= Dt_Customer THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Dt_Customer ) AND 19677.5 <= Dt_Customer THEN DO;
31144     +P_Income = 80942.7272727272;
MPRINT(EM_DIAGRAM):   P_Income = 80942.7272727272;
31145     +END;
MPRINT(EM_DIAGRAM):   END;
31146     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31147     +P_Income = 73470.7986486486;
MPRINT(EM_DIAGRAM):   P_Income = 73470.7986486486;
31148     +END;
MPRINT(EM_DIAGRAM):   END;
31149     +END;
MPRINT(EM_DIAGRAM):   END;
31150     +END;
MPRINT(EM_DIAGRAM):   END;
31151     +END;
MPRINT(EM_DIAGRAM):   END;
31152     +END;
MPRINT(EM_DIAGRAM):   END;
31153     +END;
MPRINT(EM_DIAGRAM):   END;
31154     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
31155     +****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
31156     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
31157     +*;
MPRINT(EM_DIAGRAM):   *;
31158     +* ASSIGN VALUE TO: Income;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: Income;
31159     +*;
MPRINT(EM_DIAGRAM):   *;
31160     +IMP_Income = P_INCOME;
MPRINT(EM_DIAGRAM):   IMP_Income = P_INCOME;
31161     +END;
MPRINT(EM_DIAGRAM):   END;
31162     +*;
MPRINT(EM_DIAGRAM):   *;
31163     +* IMPUTE VARIABLE: REP_HouseKeeping;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: REP_HouseKeeping;
31164     +*;
MPRINT(EM_DIAGRAM):   *;
31165     +label IMP_REP_HouseKeeping = 'Imputed: Replacement: HouseKeeping';
MPRINT(EM_DIAGRAM):   label IMP_REP_HouseKeeping = 'Imputed: Replacement: HouseKeeping';
31166     +IMP_REP_HouseKeeping = REP_HouseKeeping;
MPRINT(EM_DIAGRAM):   IMP_REP_HouseKeeping = REP_HouseKeeping;
31167     +if IMP_REP_HouseKeeping eq . then do;
MPRINT(EM_DIAGRAM):   if IMP_REP_HouseKeeping eq . then do;
31168     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
31169     +****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
31170     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
31171     +****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
31172     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
31173     +****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
31174     +LABEL P_REP_HouseKeeping = 'Predicted: REP_HouseKeeping';
MPRINT(EM_DIAGRAM):   LABEL P_REP_HouseKeeping = 'Predicted: REP_HouseKeeping';
31175     +LABEL _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings';
31176     +****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
31177     +IF NOT MISSING(Clothes ) AND
31178     +Clothes < 42.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 42.5 THEN DO;
31179     +IF NOT MISSING(Year_Birth ) AND
31180     +1992.5 <= Year_Birth THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year_Birth ) AND 1992.5 <= Year_Birth THEN DO;
31181     +P_REP_HouseKeeping = 17.7683615819209;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 17.7683615819209;
31182     +END;
MPRINT(EM_DIAGRAM):   END;
31183     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31184     +IF NOT MISSING(SmallAppliances ) AND
31185     +SmallAppliances < 37.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 37.5 THEN DO;
31186     +IF NOT MISSING(Clothes ) AND
31187     +Clothes < 27.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 27.5 THEN DO;
31188     +IF NOT MISSING(REP_Kitchen ) AND
31189     +18.5 <= REP_Kitchen THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_Kitchen ) AND 18.5 <= REP_Kitchen THEN DO;
31190     +IF NOT MISSING(REP_Toys ) AND
31191     +REP_Toys < 18 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_Toys ) AND REP_Toys < 18 THEN DO;
31192     +P_REP_HouseKeeping = 14.4444444444444;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 14.4444444444444;
31193     +END;
MPRINT(EM_DIAGRAM):   END;
31194     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31195     +P_REP_HouseKeeping = 4.93333333333333;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 4.93333333333333;
31196     +END;
MPRINT(EM_DIAGRAM):   END;
31197     +END;
MPRINT(EM_DIAGRAM):   END;
31198     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31199     +P_REP_HouseKeeping = 19.5102040816326;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 19.5102040816326;
31200     +END;
MPRINT(EM_DIAGRAM):   END;
31201     +END;
MPRINT(EM_DIAGRAM):   END;
31202     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31203     +IF NOT MISSING(REP_Toys ) AND
31204     +REP_Toys < 8.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_Toys ) AND REP_Toys < 8.5 THEN DO;
31205     +IF NOT MISSING(REP_Kitchen ) AND
31206     +REP_Kitchen < 9.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_Kitchen ) AND REP_Kitchen < 9.5 THEN DO;
31207     +P_REP_HouseKeeping = 19.9130434782608;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 19.9130434782608;
31208     +END;
MPRINT(EM_DIAGRAM):   END;
31209     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31210     +P_REP_HouseKeeping = 11.7;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 11.7;
31211     +END;
MPRINT(EM_DIAGRAM):   END;
31212     +END;
MPRINT(EM_DIAGRAM):   END;
31213     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31214     +IF NOT MISSING(SmallAppliances ) AND
31215     +SmallAppliances < 22.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 22.5 THEN DO;
31216     +P_REP_HouseKeeping = 14.15;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 14.15;
31217     +END;
MPRINT(EM_DIAGRAM):   END;
31218     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31219     +P_REP_HouseKeeping = 8.70940170940171;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 8.70940170940171;
31220     +END;
MPRINT(EM_DIAGRAM):   END;
31221     +END;
MPRINT(EM_DIAGRAM):   END;
31222     +END;
MPRINT(EM_DIAGRAM):   END;
31223     +END;
MPRINT(EM_DIAGRAM):   END;
31224     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31225     +IF NOT MISSING(Clothes ) AND
31226     +Clothes < 29.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 29.5 THEN DO;
31227     +IF NOT MISSING(SmallAppliances ) AND
31228     +50.5 <= SmallAppliances THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND 50.5 <= SmallAppliances THEN DO;
31229     +IF NOT MISSING(REP_Toys ) AND
31230     +9.5 <= REP_Toys THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_Toys ) AND 9.5 <= REP_Toys THEN DO;
31231     +P_REP_HouseKeeping = 3.5;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 3.5;
31232     +END;
MPRINT(EM_DIAGRAM):   END;
31233     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31234     +P_REP_HouseKeeping = 9.19148936170213;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 9.19148936170213;
31235     +END;
MPRINT(EM_DIAGRAM):   END;
31236     +END;
MPRINT(EM_DIAGRAM):   END;
31237     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31238     +IF NOT MISSING(REP_Toys ) AND
31239     +REP_Toys < 2.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_Toys ) AND REP_Toys < 2.5 THEN DO;
31240     +P_REP_HouseKeeping = 19.7272727272727;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 19.7272727272727;
31241     +END;
MPRINT(EM_DIAGRAM):   END;
31242     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31243     +P_REP_HouseKeeping = 11.3846153846153;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 11.3846153846153;
31244     +END;
MPRINT(EM_DIAGRAM):   END;
31245     +END;
MPRINT(EM_DIAGRAM):   END;
31246     +END;
MPRINT(EM_DIAGRAM):   END;
31247     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31248     +IF NOT MISSING(SmallAppliances ) AND
31249     +SmallAppliances < 44.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 44.5 THEN DO;
31250     +IF NOT MISSING(REP_Toys ) AND
31251     +11.5 <= REP_Toys THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_Toys ) AND 11.5 <= REP_Toys THEN DO;
31252     +P_REP_HouseKeeping = 3.1875;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 3.1875;
31253     +END;
MPRINT(EM_DIAGRAM):   END;
31254     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31255     +P_REP_HouseKeeping = 7.95348837209302;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 7.95348837209302;
31256     +END;
MPRINT(EM_DIAGRAM):   END;
31257     +END;
MPRINT(EM_DIAGRAM):   END;
31258     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31259     +P_REP_HouseKeeping = 4.90756302521008;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 4.90756302521008;
31260     +END;
MPRINT(EM_DIAGRAM):   END;
31261     +END;
MPRINT(EM_DIAGRAM):   END;
31262     +END;
MPRINT(EM_DIAGRAM):   END;
31263     +END;
MPRINT(EM_DIAGRAM):   END;
31264     +END;
MPRINT(EM_DIAGRAM):   END;
31265     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31266     +IF NOT MISSING(Clothes ) AND
31267     +Clothes < 62.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 62.5 THEN DO;
31268     +IF NOT MISSING(SmallAppliances ) AND
31269     +SmallAppliances < 22.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 22.5 THEN DO;
31270     +IF NOT MISSING(REP_Toys ) AND
31271     +11.5 <= REP_Toys THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_Toys ) AND 11.5 <= REP_Toys THEN DO;
31272     +P_REP_HouseKeeping = 5.65217391304347;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 5.65217391304347;
31273     +END;
MPRINT(EM_DIAGRAM):   END;
31274     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31275     +IF NOT MISSING(Clothes ) AND
31276     +Clothes < 54.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 54.5 THEN DO;
31277     +IF NOT MISSING(REP_Kitchen ) AND
31278     +20.5 <= REP_Kitchen THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_Kitchen ) AND 20.5 <= REP_Kitchen THEN DO;
31279     +P_REP_HouseKeeping = 7.5;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 7.5;
31280     +END;
MPRINT(EM_DIAGRAM):   END;
31281     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31282     +P_REP_HouseKeeping = 15.590909090909;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 15.590909090909;
31283     +END;
MPRINT(EM_DIAGRAM):   END;
31284     +END;
MPRINT(EM_DIAGRAM):   END;
31285     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31286     +P_REP_HouseKeeping = 8.84210526315789;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 8.84210526315789;
31287     +END;
MPRINT(EM_DIAGRAM):   END;
31288     +END;
MPRINT(EM_DIAGRAM):   END;
31289     +END;
MPRINT(EM_DIAGRAM):   END;
31290     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31291     +IF NOT MISSING(SmallAppliances ) AND
31292     +33.5 <= SmallAppliances THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND 33.5 <= SmallAppliances THEN DO;
31293     +IF NOT MISSING(Clothes ) AND
31294     +53.5 <= Clothes THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND 53.5 <= Clothes THEN DO;
31295     +P_REP_HouseKeeping = 2.25581395348837;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 2.25581395348837;
31296     +END;
MPRINT(EM_DIAGRAM):   END;
31297     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31298     +IF NOT MISSING(SmallAppliances ) AND
31299     +SmallAppliances < 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 38.5 THEN DO;
31300     +P_REP_HouseKeeping = 5.38095238095238;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 5.38095238095238;
31301     +END;
MPRINT(EM_DIAGRAM):   END;
31302     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31303     +P_REP_HouseKeeping = 3.61363636363636;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 3.61363636363636;
31304     +END;
MPRINT(EM_DIAGRAM):   END;
31305     +END;
MPRINT(EM_DIAGRAM):   END;
31306     +END;
MPRINT(EM_DIAGRAM):   END;
31307     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31308     +IF NOT MISSING(Clothes ) AND
31309     +Clothes < 49.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 49.5 THEN DO;
31310     +P_REP_HouseKeeping = 7.71111111111111;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 7.71111111111111;
31311     +END;
MPRINT(EM_DIAGRAM):   END;
31312     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31313     +IF NOT MISSING(Clothes ) AND
31314     +Clothes < 56.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 56.5 THEN DO;
31315     +P_REP_HouseKeeping = 5.69369369369369;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 5.69369369369369;
31316     +END;
MPRINT(EM_DIAGRAM):   END;
31317     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31318     +P_REP_HouseKeeping = 4.12686567164179;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 4.12686567164179;
31319     +END;
MPRINT(EM_DIAGRAM):   END;
31320     +END;
MPRINT(EM_DIAGRAM):   END;
31321     +END;
MPRINT(EM_DIAGRAM):   END;
31322     +END;
MPRINT(EM_DIAGRAM):   END;
31323     +END;
MPRINT(EM_DIAGRAM):   END;
31324     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31325     +IF NOT MISSING(Clothes ) AND
31326     +76.5 <= Clothes THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND 76.5 <= Clothes THEN DO;
31327     +IF NOT MISSING(Clothes ) AND
31328     +86.5 <= Clothes THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND 86.5 <= Clothes THEN DO;
31329     +IF NOT MISSING(REP_Kitchen ) AND
31330     +0.5 <= REP_Kitchen THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_Kitchen ) AND 0.5 <= REP_Kitchen THEN DO;
31331     +P_REP_HouseKeeping = 0.74626865671641;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 0.74626865671641;
31332     +END;
MPRINT(EM_DIAGRAM):   END;
31333     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31334     +P_REP_HouseKeeping = 0.36559139784946;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 0.36559139784946;
31335     +END;
MPRINT(EM_DIAGRAM):   END;
31336     +END;
MPRINT(EM_DIAGRAM):   END;
31337     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31338     +IF NOT MISSING(SmallAppliances ) AND
31339     +SmallAppliances < 8.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 8.5 THEN DO;
31340     +P_REP_HouseKeeping = 4;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 4;
31341     +END;
MPRINT(EM_DIAGRAM):   END;
31342     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31343     +IF NOT MISSING(SmallAppliances ) AND
31344     +16.5 <= SmallAppliances THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND 16.5 <= SmallAppliances THEN DO;
31345     +P_REP_HouseKeeping = 0.84126984126984;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 0.84126984126984;
31346     +END;
MPRINT(EM_DIAGRAM):   END;
31347     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31348     +P_REP_HouseKeeping = 1.47179487179487;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 1.47179487179487;
31349     +END;
MPRINT(EM_DIAGRAM):   END;
31350     +END;
MPRINT(EM_DIAGRAM):   END;
31351     +END;
MPRINT(EM_DIAGRAM):   END;
31352     +END;
MPRINT(EM_DIAGRAM):   END;
31353     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31354     +IF NOT MISSING(SmallAppliances ) AND
31355     +SmallAppliances < 17.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 17.5 THEN DO;
31356     +IF NOT MISSING(Clothes ) AND
31357     +Clothes < 66.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 66.5 THEN DO;
31358     +P_REP_HouseKeeping = 8.5;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 8.5;
31359     +END;
MPRINT(EM_DIAGRAM):   END;
31360     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31361     +P_REP_HouseKeeping = 3.75;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 3.75;
31362     +END;
MPRINT(EM_DIAGRAM):   END;
31363     +END;
MPRINT(EM_DIAGRAM):   END;
31364     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31365     +IF NOT MISSING(Clothes ) AND
31366     +70.5 <= Clothes THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND 70.5 <= Clothes THEN DO;
31367     +IF NOT MISSING(SmallAppliances ) AND
31368     +21.5 <= SmallAppliances THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND 21.5 <= SmallAppliances THEN DO;
31369     +P_REP_HouseKeeping = 1.36507936507936;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 1.36507936507936;
31370     +END;
MPRINT(EM_DIAGRAM):   END;
31371     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31372     +P_REP_HouseKeeping = 2.17142857142857;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 2.17142857142857;
31373     +END;
MPRINT(EM_DIAGRAM):   END;
31374     +END;
MPRINT(EM_DIAGRAM):   END;
31375     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31376     +IF NOT MISSING(SmallAppliances ) AND
31377     +SmallAppliances < 23.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 23.5 THEN DO;
31378     +P_REP_HouseKeeping = 4.0126582278481;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 4.0126582278481;
31379     +END;
MPRINT(EM_DIAGRAM):   END;
31380     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31381     +P_REP_HouseKeeping = 2.20134228187919;
MPRINT(EM_DIAGRAM):   P_REP_HouseKeeping = 2.20134228187919;
31382     +END;
MPRINT(EM_DIAGRAM):   END;
31383     +END;
MPRINT(EM_DIAGRAM):   END;
31384     +END;
MPRINT(EM_DIAGRAM):   END;
31385     +END;
MPRINT(EM_DIAGRAM):   END;
31386     +END;
MPRINT(EM_DIAGRAM):   END;
31387     +END;
MPRINT(EM_DIAGRAM):   END;
31388     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
31389     +****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
31390     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
31391     +*;
MPRINT(EM_DIAGRAM):   *;
31392     +* ASSIGN VALUE TO: REP_HouseKeeping;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: REP_HouseKeeping;
31393     +*;
MPRINT(EM_DIAGRAM):   *;
31394     +IMP_REP_HouseKeeping = P_REP_HOUSEKEEPING;
MPRINT(EM_DIAGRAM):   IMP_REP_HouseKeeping = P_REP_HOUSEKEEPING;
31395     +END;
MPRINT(EM_DIAGRAM):   END;
31396     +*;
MPRINT(EM_DIAGRAM):   *;
31397     +* IMPUTE VARIABLE: REP_Kitchen;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: REP_Kitchen;
31398     +*;
MPRINT(EM_DIAGRAM):   *;
31399     +label IMP_REP_Kitchen = 'Imputed: Replacement: Kitchen';
MPRINT(EM_DIAGRAM):   label IMP_REP_Kitchen = 'Imputed: Replacement: Kitchen';
31400     +IMP_REP_Kitchen = REP_Kitchen;
MPRINT(EM_DIAGRAM):   IMP_REP_Kitchen = REP_Kitchen;
31401     +if IMP_REP_Kitchen eq . then do;
MPRINT(EM_DIAGRAM):   if IMP_REP_Kitchen eq . then do;
31402     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
31403     +****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
31404     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
31405     +****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
31406     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
31407     +****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
31408     +LABEL P_REP_Kitchen = 'Predicted: REP_Kitchen';
MPRINT(EM_DIAGRAM):   LABEL P_REP_Kitchen = 'Predicted: REP_Kitchen';
31409     +LABEL _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings';
31410     +****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
31411     +LENGTH _ARBFMT_10 $ 10;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_10 $ 10;
31412     +DROP _ARBFMT_10;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_10;
31413     +_ARBFMT_10 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = ' ';
31414     +/* Initialize to avoid warning. */
31415     +****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
31416     +IF NOT MISSING(Clothes ) AND
31417     +Clothes < 37.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 37.5 THEN DO;
31418     +IF NOT MISSING(SmallAppliances ) AND
31419     +39.5 <= SmallAppliances THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND 39.5 <= SmallAppliances THEN DO;
31420     +IF NOT MISSING(Clothes ) AND
31421     +Clothes < 24.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 24.5 THEN DO;
31422     +IF NOT MISSING(Clothes ) AND
31423     +Clothes < 12.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 12.5 THEN DO;
31424     +IF NOT MISSING(REP_Toys ) AND
31425     +REP_Toys < 5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_Toys ) AND REP_Toys < 5 THEN DO;
31426     +P_REP_Kitchen = 28.8;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 28.8;
31427     +END;
MPRINT(EM_DIAGRAM):   END;
31428     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31429     +P_REP_Kitchen = 13.6666666666666;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 13.6666666666666;
31430     +END;
MPRINT(EM_DIAGRAM):   END;
31431     +END;
MPRINT(EM_DIAGRAM):   END;
31432     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31433     +IF NOT MISSING(SmallAppliances ) AND
31434     +49.5 <= SmallAppliances THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND 49.5 <= SmallAppliances THEN DO;
31435     +P_REP_Kitchen = 7.27777777777777;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 7.27777777777777;
31436     +END;
MPRINT(EM_DIAGRAM):   END;
31437     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31438     +P_REP_Kitchen = 12.21875;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 12.21875;
31439     +END;
MPRINT(EM_DIAGRAM):   END;
31440     +END;
MPRINT(EM_DIAGRAM):   END;
31441     +END;
MPRINT(EM_DIAGRAM):   END;
31442     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31443     +IF NOT MISSING(SmallAppliances ) AND
31444     +SmallAppliances < 46.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 46.5 THEN DO;
31445     +P_REP_Kitchen = 8.1;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 8.1;
31446     +END;
MPRINT(EM_DIAGRAM):   END;
31447     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31448     +P_REP_Kitchen = 5.14035087719298;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 5.14035087719298;
31449     +END;
MPRINT(EM_DIAGRAM):   END;
31450     +END;
MPRINT(EM_DIAGRAM):   END;
31451     +END;
MPRINT(EM_DIAGRAM):   END;
31452     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31453     +IF NOT MISSING(Clothes ) AND
31454     +Clothes < 13.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 13.5 THEN DO;
31455     +IF NOT MISSING(REP_Toys ) AND
31456     +REP_Toys < 17.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_Toys ) AND REP_Toys < 17.5 THEN DO;
31457     +IF NOT MISSING(Frq ) AND
31458     +14 <= Frq THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Frq ) AND 14 <= Frq THEN DO;
31459     +P_REP_Kitchen = 15.6;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 15.6;
31460     +END;
MPRINT(EM_DIAGRAM):   END;
31461     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31462     +P_REP_Kitchen = 30.1428571428571;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 30.1428571428571;
31463     +END;
MPRINT(EM_DIAGRAM):   END;
31464     +END;
MPRINT(EM_DIAGRAM):   END;
31465     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31466     +IF NOT MISSING(REP_HouseKeeping ) AND
31467     +REP_HouseKeeping < 7.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_HouseKeeping ) AND REP_HouseKeeping < 7.5 THEN DO;
31468     +P_REP_Kitchen = 26.4736842105263;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 26.4736842105263;
31469     +END;
MPRINT(EM_DIAGRAM):   END;
31470     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31471     +P_REP_Kitchen = 16.75;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 16.75;
31472     +END;
MPRINT(EM_DIAGRAM):   END;
31473     +END;
MPRINT(EM_DIAGRAM):   END;
31474     +END;
MPRINT(EM_DIAGRAM):   END;
31475     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31476     +IF NOT MISSING(REP_HouseKeeping ) AND
31477     +REP_HouseKeeping < 17.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_HouseKeeping ) AND REP_HouseKeeping < 17.5 THEN DO;
31478     +IF NOT MISSING(Clothes ) AND
31479     +Clothes < 27.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 27.5 THEN DO;
31480     +IF NOT MISSING(SmallAppliances ) AND
31481     +SmallAppliances < 28.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 28.5 THEN DO;
31482     +P_REP_Kitchen = 26.7037037037037;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 26.7037037037037;
31483     +END;
MPRINT(EM_DIAGRAM):   END;
31484     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31485     +P_REP_Kitchen = 17.44;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 17.44;
31486     +END;
MPRINT(EM_DIAGRAM):   END;
31487     +END;
MPRINT(EM_DIAGRAM):   END;
31488     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31489     +IF NOT MISSING(REP_Toys ) AND
31490     +REP_Toys < 6.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_Toys ) AND REP_Toys < 6.5 THEN DO;
31491     +P_REP_Kitchen = 19.8571428571428;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 19.8571428571428;
31492     +END;
MPRINT(EM_DIAGRAM):   END;
31493     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31494     +P_REP_Kitchen = 13.6185567010309;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 13.6185567010309;
31495     +END;
MPRINT(EM_DIAGRAM):   END;
31496     +END;
MPRINT(EM_DIAGRAM):   END;
31497     +END;
MPRINT(EM_DIAGRAM):   END;
31498     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31499     +IF NOT MISSING(Recomendation ) AND
31500     +4.5 <= Recomendation THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recomendation ) AND 4.5 <= Recomendation THEN DO;
31501     +P_REP_Kitchen = 16.28;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 16.28;
31502     +END;
MPRINT(EM_DIAGRAM):   END;
31503     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31504     +P_REP_Kitchen = 10.2345679012345;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 10.2345679012345;
31505     +END;
MPRINT(EM_DIAGRAM):   END;
31506     +END;
MPRINT(EM_DIAGRAM):   END;
31507     +END;
MPRINT(EM_DIAGRAM):   END;
31508     +END;
MPRINT(EM_DIAGRAM):   END;
31509     +END;
MPRINT(EM_DIAGRAM):   END;
31510     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31511     +IF NOT MISSING(Clothes ) AND
31512     +Clothes < 58.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 58.5 THEN DO;
31513     +IF NOT MISSING(SmallAppliances ) AND
31514     +SmallAppliances < 27.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 27.5 THEN DO;
31515     +IF NOT MISSING(Clothes ) AND
31516     +49.5 <= Clothes THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND 49.5 <= Clothes THEN DO;
31517     +IF NOT MISSING(REP_Toys ) AND
31518     +REP_Toys < 3.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_Toys ) AND REP_Toys < 3.5 THEN DO;
31519     +P_REP_Kitchen = 11.3076923076923;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 11.3076923076923;
31520     +END;
MPRINT(EM_DIAGRAM):   END;
31521     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31522     +P_REP_Kitchen = 6.47252747252747;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 6.47252747252747;
31523     +END;
MPRINT(EM_DIAGRAM):   END;
31524     +END;
MPRINT(EM_DIAGRAM):   END;
31525     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31526     +IF NOT MISSING(REP_Toys ) AND
31527     +REP_Toys < 6.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_Toys ) AND REP_Toys < 6.5 THEN DO;
31528     +IF NOT MISSING(REP_HouseKeeping ) AND
31529     +REP_HouseKeeping < 12 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_HouseKeeping ) AND REP_HouseKeeping < 12 THEN DO;
31530     +P_REP_Kitchen = 24.2727272727272;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 24.2727272727272;
31531     +END;
MPRINT(EM_DIAGRAM):   END;
31532     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31533     +P_REP_Kitchen = 14.7857142857142;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 14.7857142857142;
31534     +END;
MPRINT(EM_DIAGRAM):   END;
31535     +END;
MPRINT(EM_DIAGRAM):   END;
31536     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31537     +IF NOT MISSING(REP_HouseKeeping ) AND
31538     +REP_HouseKeeping < 8.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_HouseKeeping ) AND REP_HouseKeeping < 8.5 THEN DO;
31539     +P_REP_Kitchen = 13.3235294117647;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 13.3235294117647;
31540     +END;
MPRINT(EM_DIAGRAM):   END;
31541     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31542     +P_REP_Kitchen = 8.31111111111111;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 8.31111111111111;
31543     +END;
MPRINT(EM_DIAGRAM):   END;
31544     +END;
MPRINT(EM_DIAGRAM):   END;
31545     +END;
MPRINT(EM_DIAGRAM):   END;
31546     +END;
MPRINT(EM_DIAGRAM):   END;
31547     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31548     +IF NOT MISSING(Clothes ) AND
31549     +51.5 <= Clothes THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND 51.5 <= Clothes THEN DO;
31550     +IF NOT MISSING(SmallAppliances ) AND
31551     +SmallAppliances < 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 32.5 THEN DO;
31552     +P_REP_Kitchen = 4.84375;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 4.84375;
31553     +END;
MPRINT(EM_DIAGRAM):   END;
31554     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31555     +P_REP_Kitchen = 2.92452830188679;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 2.92452830188679;
31556     +END;
MPRINT(EM_DIAGRAM):   END;
31557     +END;
MPRINT(EM_DIAGRAM):   END;
31558     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31559     +IF NOT MISSING(SmallAppliances ) AND
31560     +41.5 <= SmallAppliances THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND 41.5 <= SmallAppliances THEN DO;
31561     +P_REP_Kitchen = 3.54807692307692;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 3.54807692307692;
31562     +END;
MPRINT(EM_DIAGRAM):   END;
31563     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31564     +IF NOT MISSING(REP_Toys ) AND
31565     +REP_Toys < 2.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_Toys ) AND REP_Toys < 2.5 THEN DO;
31566     +P_REP_Kitchen = 9.07692307692307;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 9.07692307692307;
31567     +END;
MPRINT(EM_DIAGRAM):   END;
31568     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31569     +P_REP_Kitchen = 5.929203539823;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 5.929203539823;
31570     +END;
MPRINT(EM_DIAGRAM):   END;
31571     +END;
MPRINT(EM_DIAGRAM):   END;
31572     +END;
MPRINT(EM_DIAGRAM):   END;
31573     +END;
MPRINT(EM_DIAGRAM):   END;
31574     +END;
MPRINT(EM_DIAGRAM):   END;
31575     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31576     +IF NOT MISSING(Clothes ) AND
31577     +Clothes < 73.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 73.5 THEN DO;
31578     +IF NOT MISSING(SmallAppliances ) AND
31579     +SmallAppliances < 19.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 19.5 THEN DO;
31580     +P_REP_Kitchen = 5.88043478260869;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 5.88043478260869;
31581     +END;
MPRINT(EM_DIAGRAM):   END;
31582     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31583     +IF NOT MISSING(Clothes ) AND
31584     +Clothes < 63.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 63.5 THEN DO;
31585     +IF NOT MISSING(SmallAppliances ) AND
31586     +SmallAppliances < 27.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 27.5 THEN DO;
31587     +P_REP_Kitchen = 5.32203389830508;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 5.32203389830508;
31588     +END;
MPRINT(EM_DIAGRAM):   END;
31589     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31590     +P_REP_Kitchen = 2.52054794520547;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 2.52054794520547;
31591     +END;
MPRINT(EM_DIAGRAM):   END;
31592     +END;
MPRINT(EM_DIAGRAM):   END;
31593     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31594     +IF NOT MISSING(SmallAppliances ) AND
31595     +SmallAppliances < 22.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 22.5 THEN DO;
31596     +P_REP_Kitchen = 3.1159420289855;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 3.1159420289855;
31597     +END;
MPRINT(EM_DIAGRAM):   END;
31598     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31599     +P_REP_Kitchen = 2.02793296089385;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 2.02793296089385;
31600     +END;
MPRINT(EM_DIAGRAM):   END;
31601     +END;
MPRINT(EM_DIAGRAM):   END;
31602     +END;
MPRINT(EM_DIAGRAM):   END;
31603     +END;
MPRINT(EM_DIAGRAM):   END;
31604     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31605     +IF NOT MISSING(Clothes ) AND
31606     +87.5 <= Clothes THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND 87.5 <= Clothes THEN DO;
31607     +IF NOT MISSING(Clothes ) AND
31608     +91.5 <= Clothes THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND 91.5 <= Clothes THEN DO;
31609     +P_REP_Kitchen = 0.21666666666666;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 0.21666666666666;
31610     +END;
MPRINT(EM_DIAGRAM):   END;
31611     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31612     +P_REP_Kitchen = 0.63414634146341;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 0.63414634146341;
31613     +END;
MPRINT(EM_DIAGRAM):   END;
31614     +END;
MPRINT(EM_DIAGRAM):   END;
31615     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31616     +_ARBFMT_10 = PUT( REP_Education , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( REP_Education , $10.);
31617     +%DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('BASIC' ,'2N CYCLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 2.23404255319149;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
31618     +IF _ARBFMT_10 IN ('BASIC' ,'2N CYCLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Kitchen = 1.39384615384615;
31619     +P_REP_Kitchen = 2.23404255319149;
MPRINT(EM_DIAGRAM):   END;
31620     +END;
MPRINT(EM_DIAGRAM):   END;
31621     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
31622     +P_REP_Kitchen = 1.39384615384615;
MPRINT(EM_DIAGRAM):   END;
31623     +END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
31624     +END;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
31625     +END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
31626     +END;
MPRINT(EM_DIAGRAM):   *;
31627     +END;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: REP_Kitchen;
31628     +****************************************************************;
MPRINT(EM_DIAGRAM):   *;
31629     +****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   IMP_REP_Kitchen = P_REP_KITCHEN;
31630     +****************************************************************;
MPRINT(EM_DIAGRAM):   END;
31631     +*;
MPRINT(EM_DIAGRAM):   *;
31632     +* ASSIGN VALUE TO: REP_Kitchen;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: REP_Toys;
31633     +*;
MPRINT(EM_DIAGRAM):   *;
31634     +IMP_REP_Kitchen = P_REP_KITCHEN;
MPRINT(EM_DIAGRAM):   label IMP_REP_Toys = 'Imputed: Replacement: Toys';
31635     +END;
31636     +*;
MPRINT(EM_DIAGRAM):   IMP_REP_Toys = REP_Toys;
31637     +* IMPUTE VARIABLE: REP_Toys;
MPRINT(EM_DIAGRAM):   if IMP_REP_Toys eq . then do;
31638     +*;
MPRINT(EM_DIAGRAM):   ****************************************************************;
31639     +label IMP_REP_Toys = 'Imputed: Replacement: Toys';
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
31640     +IMP_REP_Toys = REP_Toys;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
31641     +if IMP_REP_Toys eq . then do;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
31642     +****************************************************************;
31643     +****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
31644     +****************************************************************;
MPRINT(EM_DIAGRAM):   LABEL P_REP_Toys = 'Predicted: REP_Toys';
31645     +****** LENGTHS OF NEW CHARACTER VARIABLES ******;
31646     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings';
31647     +****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
31648     +LABEL P_REP_Toys = 'Predicted: REP_Toys';
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 40.5 THEN DO;
31649     +LABEL _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 34.5 THEN DO;
31650     +****** ASSIGN OBSERVATION TO NODE ******;
31651     +IF NOT MISSING(Clothes ) AND
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND 28.5 <= Clothes THEN DO;
31652     +Clothes < 40.5 THEN DO;
31653     +IF NOT MISSING(SmallAppliances ) AND
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 25.5 THEN DO;
31654     +SmallAppliances < 34.5 THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 15.5576923076923;
31655     +IF NOT MISSING(Clothes ) AND
MPRINT(EM_DIAGRAM):   END;
31656     +28.5 <= Clothes THEN DO;
31657     +IF NOT MISSING(SmallAppliances ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
31658     +SmallAppliances < 25.5 THEN DO;
31659     +P_REP_Toys = 15.5576923076923;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_Kitchen ) AND 16.5 <= REP_Kitchen THEN DO;
31660     +END;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 6.56521739130434;
31661     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
31662     +IF NOT MISSING(REP_Kitchen ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
31663     +16.5 <= REP_Kitchen THEN DO;
31664     +P_REP_Toys = 6.56521739130434;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_HouseKeeping ) AND REP_HouseKeeping < 15.5 THEN DO;
31665     +END;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 13.8235294117647;
31666     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
31667     +IF NOT MISSING(REP_HouseKeeping ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
31668     +REP_HouseKeeping < 15.5 THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 6.88888888888889;
31669     +P_REP_Toys = 13.8235294117647;
MPRINT(EM_DIAGRAM):   END;
31670     +END;
MPRINT(EM_DIAGRAM):   END;
31671     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
31672     +P_REP_Toys = 6.88888888888889;
31673     +END;
MPRINT(EM_DIAGRAM):   ELSE DO;
31674     +END;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 18.9620853080568;
31675     +END;
MPRINT(EM_DIAGRAM):   END;
31676     +END;
MPRINT(EM_DIAGRAM):   END;
31677     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31678     +P_REP_Toys = 18.9620853080568;
31679     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 23.5 THEN DO;
31680     +END;
31681     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_HouseKeeping ) AND 3.5 <= REP_HouseKeeping THEN DO;
31682     +IF NOT MISSING(Clothes ) AND
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_Kitchen ) AND REP_Kitchen < 5.5 THEN DO;
31683     +Clothes < 23.5 THEN DO;
31684     +IF NOT MISSING(REP_HouseKeeping ) AND
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 46.5 THEN DO;
31685     +3.5 <= REP_HouseKeeping THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 22.3636363636363;
31686     +IF NOT MISSING(REP_Kitchen ) AND
MPRINT(EM_DIAGRAM):   END;
31687     +REP_Kitchen < 5.5 THEN DO;
31688     +IF NOT MISSING(SmallAppliances ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
31689     +SmallAppliances < 46.5 THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 10.8666666666666;
31690     +P_REP_Toys = 22.3636363636363;
MPRINT(EM_DIAGRAM):   END;
31691     +END;
MPRINT(EM_DIAGRAM):   END;
31692     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31693     +P_REP_Toys = 10.8666666666666;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 10.1025641025641;
31694     +END;
MPRINT(EM_DIAGRAM):   END;
31695     +END;
MPRINT(EM_DIAGRAM):   END;
31696     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31697     +P_REP_Toys = 10.1025641025641;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 17.7692307692307;
31698     +END;
MPRINT(EM_DIAGRAM):   END;
31699     +END;
MPRINT(EM_DIAGRAM):   END;
31700     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31701     +P_REP_Toys = 17.7692307692307;
31702     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND 47.5 <= SmallAppliances THEN DO;
31703     +END;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 5.71551724137931;
31704     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
31705     +IF NOT MISSING(SmallAppliances ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
31706     +47.5 <= SmallAppliances THEN DO;
31707     +P_REP_Toys = 5.71551724137931;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_HouseKeeping ) AND REP_HouseKeeping < 3.5 THEN DO;
31708     +END;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 11.78125;
31709     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
31710     +IF NOT MISSING(REP_HouseKeeping ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
31711     +REP_HouseKeeping < 3.5 THEN DO;
31712     +P_REP_Toys = 11.78125;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_Kitchen ) AND 10.5 <= REP_Kitchen THEN DO;
31713     +END;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 5.8;
31714     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
31715     +IF NOT MISSING(REP_Kitchen ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
31716     +10.5 <= REP_Kitchen THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 8.62878787878788;
31717     +P_REP_Toys = 5.8;
MPRINT(EM_DIAGRAM):   END;
31718     +END;
MPRINT(EM_DIAGRAM):   END;
31719     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
31720     +P_REP_Toys = 8.62878787878788;
MPRINT(EM_DIAGRAM):   END;
31721     +END;
MPRINT(EM_DIAGRAM):   END;
31722     +END;
31723     +END;
MPRINT(EM_DIAGRAM):   ELSE DO;
31724     +END;
31725     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 58.5 THEN DO;
31726     +END;
31727     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 30.5 THEN DO;
31728     +IF NOT MISSING(Clothes ) AND
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_Kitchen ) AND REP_Kitchen < 3.5 THEN DO;
31729     +Clothes < 58.5 THEN DO;
31730     +IF NOT MISSING(SmallAppliances ) AND
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND 55.5 <= Clothes THEN DO;
31731     +SmallAppliances < 30.5 THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 6.26666666666666;
31732     +IF NOT MISSING(REP_Kitchen ) AND
MPRINT(EM_DIAGRAM):   END;
31733     +REP_Kitchen < 3.5 THEN DO;
31734     +IF NOT MISSING(Clothes ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
31735     +55.5 <= Clothes THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 15.078947368421;
31736     +P_REP_Toys = 6.26666666666666;
MPRINT(EM_DIAGRAM):   END;
31737     +END;
MPRINT(EM_DIAGRAM):   END;
31738     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31739     +P_REP_Toys = 15.078947368421;
31740     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_HouseKeeping ) AND REP_HouseKeeping < 4.5 THEN DO;
31741     +END;
31742     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND 53.5 <= Clothes THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 7.03333333333333;
31743     +IF NOT MISSING(REP_HouseKeeping ) AND
MPRINT(EM_DIAGRAM):   END;
31744     +REP_HouseKeeping < 4.5 THEN DO;
31745     +IF NOT MISSING(Clothes ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
31746     +53.5 <= Clothes THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 12.9166666666666;
31747     +P_REP_Toys = 7.03333333333333;
MPRINT(EM_DIAGRAM):   END;
31748     +END;
MPRINT(EM_DIAGRAM):   END;
31749     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31750     +P_REP_Toys = 12.9166666666666;
31751     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 44.5 THEN DO;
31752     +END;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 9.45945945945946;
31753     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
31754     +IF NOT MISSING(Clothes ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
31755     +Clothes < 44.5 THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 5.8859649122807;
31756     +P_REP_Toys = 9.45945945945946;
MPRINT(EM_DIAGRAM):   END;
31757     +END;
MPRINT(EM_DIAGRAM):   END;
31758     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
31759     +P_REP_Toys = 5.8859649122807;
31760     +END;
MPRINT(EM_DIAGRAM):   ELSE DO;
31761     +END;
31762     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND 49.5 <= Clothes THEN DO;
31763     +END;
31764     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND 35.5 <= SmallAppliances THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 2.23188405797101;
31765     +IF NOT MISSING(Clothes ) AND
MPRINT(EM_DIAGRAM):   END;
31766     +49.5 <= Clothes THEN DO;
31767     +IF NOT MISSING(SmallAppliances ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
31768     +35.5 <= SmallAppliances THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 3.94444444444444;
31769     +P_REP_Toys = 2.23188405797101;
MPRINT(EM_DIAGRAM):   END;
31770     +END;
MPRINT(EM_DIAGRAM):   END;
31771     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31772     +P_REP_Toys = 3.94444444444444;
31773     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND 40.5 <= SmallAppliances THEN DO;
31774     +END;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 3.09090909090909;
31775     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
31776     +IF NOT MISSING(SmallAppliances ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
31777     +40.5 <= SmallAppliances THEN DO;
31778     +P_REP_Toys = 3.09090909090909;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(REP_Kitchen ) AND REP_Kitchen < 5.5 THEN DO;
31779     +END;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 8.21666666666666;
31780     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
31781     +IF NOT MISSING(REP_Kitchen ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
31782     +REP_Kitchen < 5.5 THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 5.54929577464788;
31783     +P_REP_Toys = 8.21666666666666;
MPRINT(EM_DIAGRAM):   END;
31784     +END;
MPRINT(EM_DIAGRAM):   END;
31785     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
31786     +P_REP_Toys = 5.54929577464788;
MPRINT(EM_DIAGRAM):   END;
31787     +END;
31788     +END;
MPRINT(EM_DIAGRAM):   ELSE DO;
31789     +END;
31790     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 73.5 THEN DO;
31791     +END;
31792     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 19.5 THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 5.26086956521739;
31793     +IF NOT MISSING(Clothes ) AND
MPRINT(EM_DIAGRAM):   END;
31794     +Clothes < 73.5 THEN DO;
31795     +IF NOT MISSING(SmallAppliances ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
31796     +SmallAppliances < 19.5 THEN DO;
31797     +P_REP_Toys = 5.26086956521739;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND 67.5 <= Clothes THEN DO;
31798     +END;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 1.87692307692307;
31799     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
31800     +IF NOT MISSING(Clothes ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
31801     +67.5 <= Clothes THEN DO;
31802     +P_REP_Toys = 1.87692307692307;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 24.5 THEN DO;
31803     +END;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 4.38095238095238;
31804     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
31805     +IF NOT MISSING(SmallAppliances ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
31806     +SmallAppliances < 24.5 THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 2.45989304812834;
31807     +P_REP_Toys = 4.38095238095238;
MPRINT(EM_DIAGRAM):   END;
31808     +END;
MPRINT(EM_DIAGRAM):   END;
31809     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
31810     +P_REP_Toys = 2.45989304812834;
31811     +END;
MPRINT(EM_DIAGRAM):   ELSE DO;
31812     +END;
31813     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND 83.5 <= Clothes THEN DO;
31814     +END;
31815     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND 91.5 <= Clothes THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 0.21666666666666;
31816     +IF NOT MISSING(Clothes ) AND
MPRINT(EM_DIAGRAM):   END;
31817     +83.5 <= Clothes THEN DO;
31818     +IF NOT MISSING(Clothes ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
31819     +91.5 <= Clothes THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 0.73652694610778;
31820     +P_REP_Toys = 0.21666666666666;
MPRINT(EM_DIAGRAM):   END;
31821     +END;
MPRINT(EM_DIAGRAM):   END;
31822     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31823     +P_REP_Toys = 0.73652694610778;
31824     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(SmallAppliances ) AND SmallAppliances < 13.5 THEN DO;
31825     +END;
31826     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 79.5 THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 4.61538461538461;
31827     +IF NOT MISSING(SmallAppliances ) AND
MPRINT(EM_DIAGRAM):   END;
31828     +SmallAppliances < 13.5 THEN DO;
31829     +IF NOT MISSING(Clothes ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
31830     +Clothes < 79.5 THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 2.22857142857142;
31831     +P_REP_Toys = 4.61538461538461;
MPRINT(EM_DIAGRAM):   END;
31832     +END;
MPRINT(EM_DIAGRAM):   END;
31833     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
31834     +P_REP_Toys = 2.22857142857142;
31835     +END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Clothes ) AND Clothes < 76.5 THEN DO;
31836     +END;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 1.90588235294117;
31837     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
31838     +IF NOT MISSING(Clothes ) AND
MPRINT(EM_DIAGRAM):   ELSE DO;
31839     +Clothes < 76.5 THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_Toys = 1.24025974025974;
31840     +P_REP_Toys = 1.90588235294117;
MPRINT(EM_DIAGRAM):   END;
31841     +END;
MPRINT(EM_DIAGRAM):   END;
31842     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
31843     +P_REP_Toys = 1.24025974025974;
MPRINT(EM_DIAGRAM):   END;
31844     +END;
MPRINT(EM_DIAGRAM):   END;
31845     +END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
31846     +END;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
31847     +END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
31848     +END;
MPRINT(EM_DIAGRAM):   *;
31849     +END;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: REP_Toys;
31850     +****************************************************************;
MPRINT(EM_DIAGRAM):   *;
31851     +****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   IMP_REP_Toys = P_REP_TOYS;
31852     +****************************************************************;
MPRINT(EM_DIAGRAM):   END;
31853     +*;
MPRINT(EM_DIAGRAM):   *;
31854     +* ASSIGN VALUE TO: REP_Toys;
MPRINT(EM_DIAGRAM):   * Drop prediction variables since they are for INPUTS not TARGETS;
31855     +*;
MPRINT(EM_DIAGRAM):   * Replace _NODE_ by _XODE_ so it can be safely dropped;
31856     +IMP_REP_Toys = P_REP_TOYS;
MPRINT(EM_DIAGRAM):   *;
31857     +END;
31858     +*;
31859     +* Drop prediction variables since they are for INPUTS not TARGETS;
31860     +* Replace _NODE_ by _XODE_ so it can be safely dropped;
31861     +*;
31862     +drop
MPRINT(EM_DIAGRAM):   drop P_Income P_REP_HouseKeeping P_REP_Kitchen P_REP_Toys ;
31863     +P_Income
31864     +P_REP_HouseKeeping
31865     +P_REP_Kitchen
31866     +P_REP_Toys
31867     +;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
31868      run;
 
NOTE: DATA STEP view saved on file EMWS8.IMPT_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REPL_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
31869      quit;
31870      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
31871      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
31872      * Impt: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Impt: Computing metadata for TRAIN data;
31873      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "E:\Datamining\DataMining_Lab\Tugas\Workspaces\EMWS8\Impt\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Impt_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Impt_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Impt_TRAIN out=WORK.M35WAAH7 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M35WAAH7;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M35WAAH7(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M35WAAH7;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M35WAAH7;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M06L7W2G NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M06L7W2G;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M06L7W2G;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2RS52YX(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M06L7W2G;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M06L7W2G;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M06L7W2G;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M06L7W2G;
MPRINT(EMADVISECOLUMNS):   set WORK.M06L7W2G;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Repl_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Repl_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Impt_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Impt";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME = "Income" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_Income" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "REP_Education" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_REP_Education" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "NOMINAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "REP_Gender" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_REP_Gender" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "BINARY" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "REP_HouseKeeping" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_REP_HouseKeeping" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "REP_Kitchen" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_REP_Kitchen" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "REP_Marital_Status" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_REP_Marital_Status" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "NOMINAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "REP_Toys" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_REP_Toys" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS8.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "05 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11H22m" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                05 de Março de 2016
Time:                11H22m
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1Q1CZPV "E:\Datamining\DataMining_Lab\Tugas\Workspaces\EMWS8\Impt\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1Q1CZPV new;
MPRINT(EM_DIAGRAM):   run;
32258      %let _nimpute = 0;
32259      data EMWS8.Impt_RESULT;
MPRINT(EM_DIAGRAM):    data EMWS8.Impt_RESULT;
32260      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,        NOQUOTE))" METHOD = "%sysfunc(sasmsg(sashelp.dmine, rpt_imputemethod_vlabel, NOQUOTE))" IMPUTED = "%sysfunc(sasmsg(sashelp.dmine, rpt_imputedvar_vlabel,   NOQUOTE))" INDICATOR
32260    !  =
32261         "%sysfunc(sasmsg(sashelp.dmine, rpt_indicatorvar_vlabel, NOQUOTE))" VALUE = "%sysfunc(sasmsg(sashelp.dmine, rpt_imputevalue_vlabel,  NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,        NOQUOTE))" LEVEL =
32262         "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel,       NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,       NOQUOTE))" TRAIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_missingcount_vlabel, NOQUOTE, TRAIN))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" METHOD = "Impute Method" IMPUTED = "Imputed Variable" INDICATOR = "Indicator Variable" VALUE = "Impute Value" ROLE = "Role" LEVEL = "Measurement Level" LABEL = "Label" TRAIN = "Number of Missing for
TRAIN";
32263      set EMWS8.Impt_META(where=(IMPUTED ne '') keep=NAME METHOD IMP VALUE ROLE NMISS LEVEL LABEL rename=(IMP=IMPUTED NMISS=TRAIN)) end=eof;
MPRINT(EM_DIAGRAM):   set EMWS8.Impt_META(where=(IMPUTED ne '') keep=NAME METHOD IMP VALUE ROLE NMISS LEVEL LABEL rename=(IMP=IMPUTED NMISS=TRAIN)) end=eof;
32264      if eof then call symput('_nimpute', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_nimpute', '1');
32265      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable INDICATOR is uninitialized.
NOTE: There were 7 observations read from the data set EMWS8.IMPT_META.
      WHERE IMPUTED not = ' ';
NOTE: The data set EMWS8.IMPT_RESULT has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
32266      proc print data=EMWS8.Impt_RESULT(obs=500) label noobs;
MPRINT(EM_DIAGRAM):    proc print data=EMWS8.Impt_RESULT(obs=500) label noobs;
32267      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_imputationsummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imputation Summary";
32268      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_numberobs_title,         NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Number Of Observations";
MPRINT(EM_DIAGRAM):   run;
32269      run;
 
NOTE: There were 7 observations read from the data set EMWS8.IMPT_RESULT.
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
32270      proc freq data=EMWS8.Impt_RESULT noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Impt_RESULT noprint;
32271      table train /out=WORK.ImptSUMMARY nocum;
MPRINT(EM_DIAGRAM):   table train /out=WORK.ImptSUMMARY nocum;
32272      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.IMPT_RESULT.
NOTE: The data set WORK.IMPTSUMMARY has 7 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
32273      proc sort data=WORK.ImptSUMMARY NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.ImptSUMMARY NOTHREADS;
32274      by descending TRAIN;
MPRINT(EM_DIAGRAM):   by descending TRAIN;
32275      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.IMPTSUMMARY.
NOTE: The data set WORK.IMPTSUMMARY has 7 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
32276      proc print data=WORK.ImptSUMMARY(obs=100) label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ImptSUMMARY(obs=100) label;
32277      label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_varcount_vlabel,  NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_varpercent_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Number of Variables" PERCENT = "Percent of Variables";
32278      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
32279      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_missingvardistribution_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Distribution Training Data";
MPRINT(EM_DIAGRAM):   run;
32280      run;
 
NOTE: There were 7 observations read from the data set WORK.IMPTSUMMARY.
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32281      data EMWS8.Impt_EMSCOREVAR;
MPRINT(EM_DIAGRAM):    data EMWS8.Impt_EMSCOREVAR;
32282      length Name $32 formula $70 file $200;
MPRINT(EM_DIAGRAM):   length Name $32 formula $70 file $200;
32283      keep NAME Formula file;
MPRINT(EM_DIAGRAM):   keep NAME Formula file;
32284      if _N_=1 then do;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
32285      file = "IMPUTECODE\"!!"_POSTALL_.sas";
MPRINT(EM_DIAGRAM):   file = "IMPUTECODE\"!!"_POSTALL_.sas";
32286      output;
MPRINT(EM_DIAGRAM):   output;
32287      end;
MPRINT(EM_DIAGRAM):   end;
32288      set EMWS8.Impt_META end=eof;
MPRINT(EM_DIAGRAM):   set EMWS8.Impt_META end=eof;
32289      *set EMWS8.Impt_RESULT end=eof;
MPRINT(EM_DIAGRAM):   *set EMWS8.Impt_RESULT end=eof;
32290      if M ne '' then do;
MPRINT(EM_DIAGRAM):   if M ne '' then do;
32291      NAME= M;
MPRINT(EM_DIAGRAM):   NAME= M;
32292      file="IMPUTECODE\"!!strip(NAME)!!'.sas';
MPRINT(EM_DIAGRAM):   file="IMPUTECODE\"!!strip(NAME)!!'.sas';
32293      output;
MPRINT(EM_DIAGRAM):   output;
32294      end;
MPRINT(EM_DIAGRAM):   end;
32295      if IMP ne '' then do;
MPRINT(EM_DIAGRAM):   if IMP ne '' then do;
32296      NAME= IMP;
MPRINT(EM_DIAGRAM):   NAME= IMP;
32297      file="IMPUTECODE\"!!strip(NAME)!!'.sas';
MPRINT(EM_DIAGRAM):   file="IMPUTECODE\"!!strip(NAME)!!'.sas';
32298      output;
MPRINT(EM_DIAGRAM):   output;
32299      end;
MPRINT(EM_DIAGRAM):   end;
32300      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable formula is uninitialized.
NOTE: There were 19 observations read from the data set EMWS8.IMPT_META.
NOTE: The data set EMWS8.IMPT_EMSCOREVAR has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
