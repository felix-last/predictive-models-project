MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.06 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                20.06 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1JTVB6G 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1JTVB6G new;
MPRINT(EM_DIAGRAM):   run;
827850     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
827851     set EMWS8.Neural41_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural41_OUTKEY;
827852     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
827853     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 30 observations read from the data set EMWS8.NEURAL41_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

827854     filename emflow
827854   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural41: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
827855     *------------------------------------------------------------*;
827856     * Neural41: Scoring DATA data;
827857     *------------------------------------------------------------*;
827858     data EMWS8.Neural41_TRAIN
827859     / view=EMWS8.Neural41_TRAIN
827860     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural41_TRAIN / view=EMWS8.Neural41_TRAIN ;
827861     set EMWS8.Meta3_TRAIN
827862     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
827863     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas.
827864    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
827865    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
827866    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
827867    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
827868    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
827869    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
827870    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
827871    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
827872    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
827873    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
827874    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
827875    +LENGTH _WARN_ $4
827876    +      F_DepVar  $ 12
827877    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
827878    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
827879    +
827880    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
827881    +
827882    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
827883    +
827884    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
827885    +
827886    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
827887    +
827888    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
827889    +
827890    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
827891    +
827892    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
827893    +
827894    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
827895    +
827896    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
827897    +
827898    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
827899    +
827900    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
827901    +
827902    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
827903    +
827904    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
827905    +
827906    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
827907    +
827908    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
827909    +
827910    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
827911    +
827912    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
827913    +
827914    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
827915    +
827916    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
827917    +
827918    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
827919    +
827920    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
827921    +
827922    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
827923    +
827924    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
827925    +
827926    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
827927    +
827928    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
827929    +
827930    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
827931    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
827932    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
827933    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
827934    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
827935    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
827936    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
827937    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
827938    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
827939    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
827940    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
827941    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
827942    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
827943    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
827944    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827945    +end;
MPRINT(EM_DIAGRAM):   end;
827946    +else do;
MPRINT(EM_DIAGRAM):   else do;
827947    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
827948    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
827949    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
827950    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
827951    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
827952    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
827953    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
827954    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
827955    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
827956    +         end;
MPRINT(EM_DIAGRAM):   end;
827957    +         else do;
MPRINT(EM_DIAGRAM):   else do;
827958    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
827959    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
827960    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
827961    +            end;
MPRINT(EM_DIAGRAM):   end;
827962    +         end;
MPRINT(EM_DIAGRAM):   end;
827963    +      end;
MPRINT(EM_DIAGRAM):   end;
827964    +      else do;
MPRINT(EM_DIAGRAM):   else do;
827965    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
827966    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
827967    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
827968    +         end;
MPRINT(EM_DIAGRAM):   end;
827969    +      end;
MPRINT(EM_DIAGRAM):   end;
827970    +   end;
MPRINT(EM_DIAGRAM):   end;
827971    +   else do;
MPRINT(EM_DIAGRAM):   else do;
827972    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
827973    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
827974    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
827975    +      end;
MPRINT(EM_DIAGRAM):   end;
827976    +      else do;
MPRINT(EM_DIAGRAM):   else do;
827977    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
827978    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
827979    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
827980    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
827981    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
827982    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
827983    +         end;
MPRINT(EM_DIAGRAM):   end;
827984    +      end;
MPRINT(EM_DIAGRAM):   end;
827985    +   end;
MPRINT(EM_DIAGRAM):   end;
827986    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
827987    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
827988    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
827989    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
827990    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
827991    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
827992    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827993    +   end;
MPRINT(EM_DIAGRAM):   end;
827994    +end;
MPRINT(EM_DIAGRAM):   end;
827995    +
827996    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
827997    +*** Checking missing input Interval
827998    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
827999    +
828000    +IF NMISS(
828001    +   AcceptedCmpTotal ,
828002    +   Frq ,
828003    +   Mnt ,
828004    +   MntMeatProducts ,
828005    +   NumCatalogPurchases ,
828006    +   NumDealsPurchases ,
828007    +   NumWebVisitsMonth ,
828008    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
828009    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
828010    +
828011    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
828012    +END;
MPRINT(EM_DIAGRAM):   END;
828013    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828014    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
828015    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828016    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
828017    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
828018    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
828019    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
828020    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
828021    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
828022    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
828023    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
828024    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
828025    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
828026    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
828027    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
828028    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
828029    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
828030    +END;
MPRINT(EM_DIAGRAM):   END;
828031    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
828032    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
828033    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
828034    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
828035    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
828036    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
828037    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
828038    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
828039    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
828040    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
828041    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
828042    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
828043    +   ELSE S_NumCatalogPurchases
828044    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
828045    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
828046    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
828047    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
828048    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
828049    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
828050    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
828051    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
828052    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
828053    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
828054    +END;
MPRINT(EM_DIAGRAM):   END;
828055    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828056    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
828057    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828058    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828059    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
828060    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828061    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
828062    +   H11  =    -0.41170995389365 * S_AcceptedCmpTotal  +     0.95675776354898 *
828063    +        S_Frq  +     0.79241767524066 * S_Mnt  +    -1.11291951115769 *
828064    +        S_MntMeatProducts  +    -0.81016243357955 * S_NumCatalogPurchases
828065    +          +    -0.06020302160033 * S_NumDealsPurchases
828066    +          +    -0.72187271327886 * S_NumWebVisitsMonth
828067    +          +     0.63072705601805 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.41170995389365 * S_AcceptedCmpTotal + 0.95675776354898 * S_Frq 
+ 0.79241767524066 * S_Mnt + -1.11291951115769 * S_MntMeatProducts + -0.81016243357955 * 
S_NumCatalogPurchases + -0.06020302160033 * S_NumDealsPurchases + -0.72187271327886 * 
S_NumWebVisitsMonth + 0.63072705601805 * S_Recency ;
828068    +   H12  =     0.16845165387856 * S_AcceptedCmpTotal  +     0.13952140472368 *
828069    +        S_Frq  +    -0.49680297454001 * S_Mnt  +     0.20077884768409 *
828070    +        S_MntMeatProducts  +    -0.26509457206436 * S_NumCatalogPurchases
828071    +          +     0.44023370306786 * S_NumDealsPurchases
828072    +          +     0.14437092902564 * S_NumWebVisitsMonth
828073    +          +     0.29830280717193 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.16845165387856 * S_AcceptedCmpTotal + 0.13952140472368 * S_Frq + 
-0.49680297454001 * S_Mnt + 0.20077884768409 * S_MntMeatProducts + -0.26509457206436 * 
S_NumCatalogPurchases + 0.44023370306786 * S_NumDealsPurchases + 0.14437092902564 * 
S_NumWebVisitsMonth + 0.29830280717193 * S_Recency ;
828074    +   H13  =     0.17736973005738 * S_AcceptedCmpTotal  +    -1.27691889541485 *
828075    +        S_Frq  +     0.76151337613405 * S_Mnt  +     2.91913897431534 *
828076    +        S_MntMeatProducts  +     0.91968924804036 * S_NumCatalogPurchases
828077    +          +     0.36494720404815 * S_NumDealsPurchases
828078    +          +     0.03877838723538 * S_NumWebVisitsMonth
828079    +          +    -0.07783339271235 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.17736973005738 * S_AcceptedCmpTotal + -1.27691889541485 * S_Frq 
+ 0.76151337613405 * S_Mnt + 2.91913897431534 * S_MntMeatProducts + 0.91968924804036 * 
S_NumCatalogPurchases + 0.36494720404815 * S_NumDealsPurchases + 0.03877838723538 * 
S_NumWebVisitsMonth + -0.07783339271235 * S_Recency ;
828080    +   H14  =     0.06585247678486 * S_AcceptedCmpTotal  +     2.38872321291933 *
828081    +        S_Frq  +     0.55261122983069 * S_Mnt  +    -0.92412810336036 *
828082    +        S_MntMeatProducts  +    -0.85761594899144 * S_NumCatalogPurchases
828083    +          +    -0.87171784420951 * S_NumDealsPurchases
828084    +          +     0.27077171192055 * S_NumWebVisitsMonth
828085    +          +     0.44529508014227 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.06585247678486 * S_AcceptedCmpTotal + 2.38872321291933 * S_Frq + 
0.55261122983069 * S_Mnt + -0.92412810336036 * S_MntMeatProducts + -0.85761594899144 * 
S_NumCatalogPurchases + -0.87171784420951 * S_NumDealsPurchases + 0.27077171192055 * 
S_NumWebVisitsMonth + 0.44529508014227 * S_Recency ;
828086    +   H15  =     0.79261864023919 * S_AcceptedCmpTotal  +     0.22408033839661 *
828087    +        S_Frq  +     0.41205750844428 * S_Mnt  +    -0.05167252147978 *
828088    +        S_MntMeatProducts  +     0.52437372576463 * S_NumCatalogPurchases
828089    +          +    -0.02694744085713 * S_NumDealsPurchases
828090    +          +     0.42930866809604 * S_NumWebVisitsMonth
828091    +          +    -1.23356204218313 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.79261864023919 * S_AcceptedCmpTotal + 0.22408033839661 * S_Frq + 
0.41205750844428 * S_Mnt + -0.05167252147978 * S_MntMeatProducts + 0.52437372576463 * 
S_NumCatalogPurchases + -0.02694744085713 * S_NumDealsPurchases + 0.42930866809604 * 
S_NumWebVisitsMonth + -1.23356204218313 * S_Recency ;
828092    +   H16  =     0.07557739377714 * S_AcceptedCmpTotal  +     0.06732498402011 *
828093    +        S_Frq  +     1.00949697256114 * S_Mnt  +     0.18190372979158 *
828094    +        S_MntMeatProducts  +    -0.20994714743436 * S_NumCatalogPurchases
828095    +          +     1.91827561352967 * S_NumDealsPurchases
828096    +          +    -0.65112089304736 * S_NumWebVisitsMonth
828097    +          +     0.94688864667779 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = 0.07557739377714 * S_AcceptedCmpTotal + 0.06732498402011 * S_Frq + 
1.00949697256114 * S_Mnt + 0.18190372979158 * S_MntMeatProducts + -0.20994714743436 * 
S_NumCatalogPurchases + 1.91827561352967 * S_NumDealsPurchases + -0.65112089304736 * 
S_NumWebVisitsMonth + 0.94688864667779 * S_Recency ;
828098    +   H11  = H11  +    -0.41944609131662 * Marital_StatusDivorced
828099    +          +     0.19571272479408 * Marital_StatusMarried
828100    +          +    -0.16061908960963 * Marital_StatusSingle
828101    +          +     0.01147019501849 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41944609131662 * Marital_StatusDivorced + 
0.19571272479408 * Marital_StatusMarried + -0.16061908960963 * Marital_StatusSingle + 
0.01147019501849 * Marital_StatusTogether ;
828102    +   H12  = H12  +    -0.70326037460175 * Marital_StatusDivorced
828103    +          +    -0.64968872046859 * Marital_StatusMarried
828104    +          +     1.81995301340231 * Marital_StatusSingle
828105    +          +    -1.25679526739636 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.70326037460175 * Marital_StatusDivorced + 
-0.64968872046859 * Marital_StatusMarried + 1.81995301340231 * Marital_StatusSingle + 
-1.25679526739636 * Marital_StatusTogether ;
828106    +   H13  = H13  +    -0.50413590013638 * Marital_StatusDivorced
828107    +          +     0.19296467458933 * Marital_StatusMarried
828108    +          +     -0.2295693568996 * Marital_StatusSingle
828109    +          +     0.51095451752525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.50413590013638 * Marital_StatusDivorced + 
0.19296467458933 * Marital_StatusMarried + -0.2295693568996 * Marital_StatusSingle + 
0.51095451752525 * Marital_StatusTogether ;
828110    +   H14  = H14  +    -0.93810483419419 * Marital_StatusDivorced
828111    +          +    -0.12318541826308 * Marital_StatusMarried
828112    +          +    -0.02882902763243 * Marital_StatusSingle
828113    +          +      0.9552700390789 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.93810483419419 * Marital_StatusDivorced + 
-0.12318541826308 * Marital_StatusMarried + -0.02882902763243 * Marital_StatusSingle + 
0.9552700390789 * Marital_StatusTogether ;
828114    +   H15  = H15  +    -0.16315275571793 * Marital_StatusDivorced
828115    +          +    -0.65544681605691 * Marital_StatusMarried
828116    +          +     0.31269236164873 * Marital_StatusSingle
828117    +          +    -0.37135201633747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.16315275571793 * Marital_StatusDivorced + 
-0.65544681605691 * Marital_StatusMarried + 0.31269236164873 * Marital_StatusSingle + 
-0.37135201633747 * Marital_StatusTogether ;
828118    +   H16  = H16  +    -0.47177568566677 * Marital_StatusDivorced
828119    +          +     0.12269709457787 * Marital_StatusMarried
828120    +          +     0.37106402586008 * Marital_StatusSingle
828121    +          +     0.07580816063395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.47177568566677 * Marital_StatusDivorced + 
0.12269709457787 * Marital_StatusMarried + 0.37106402586008 * Marital_StatusSingle + 
0.07580816063395 * Marital_StatusTogether ;
828122    +   H11  =     0.87814553506559 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.87814553506559 + H11 ;
828123    +   H12  =     1.18416285607678 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.18416285607678 + H12 ;
828124    +   H13  =     1.86220379911993 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86220379911993 + H13 ;
828125    +   H14  =     1.79999645343103 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.79999645343103 + H14 ;
828126    +   H15  =    -2.95745585057281 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.95745585057281 + H15 ;
828127    +   H16  =    -0.63040593626724 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.63040593626724 + H16 ;
828128    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
828129    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
828130    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
828131    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
828132    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
828133    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
828134    +END;
MPRINT(EM_DIAGRAM):   END;
828135    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
828136    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
828137    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
828138    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
828139    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
828140    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
828141    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
828142    +END;
MPRINT(EM_DIAGRAM):   END;
828143    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828144    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
828145    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828146    +
828147    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
828148    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
828149    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
828150    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
828151    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
828152    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
828153    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
828154    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
828155    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
828156    +end;
MPRINT(EM_DIAGRAM):   end;
828157    +else do;
MPRINT(EM_DIAGRAM):   else do;
828158    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
828159    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
828160    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
828161    +   end;
MPRINT(EM_DIAGRAM):   end;
828162    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
828163    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
828164    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
828165    +   end;
MPRINT(EM_DIAGRAM):   end;
828166    +   else do;
MPRINT(EM_DIAGRAM):   else do;
828167    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
828168    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
828169    +   end;
MPRINT(EM_DIAGRAM):   end;
828170    +end;
MPRINT(EM_DIAGRAM):   end;
828171    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
828172    +   P_DepVar1  =    -5.78936073221603 * H11  +     3.14966455677413 * H12
828173    +          +     7.03853349374163 * H13  +    -2.45391654583749 * H14
828174    +          +     4.80213644089029 * H15  +    -1.60369759544804 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.78936073221603 * H11 + 3.14966455677413 * H12 + 
7.03853349374163 * H13 + -2.45391654583749 * H14 + 4.80213644089029 * H15 + -1.60369759544804 
* H16 ;
828175    +   P_DepVar1  =    -1.95361942474066 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.95361942474066 + P_DepVar1 ;
828176    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
828177    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
828178    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
828179    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
828180    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
828181    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
828182    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
828183    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
828184    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
828185    +END;
MPRINT(EM_DIAGRAM):   END;
828186    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
828187    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
828188    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
828189    +END;
MPRINT(EM_DIAGRAM):   END;
828190    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
828191    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
828192    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
828193    +END;
MPRINT(EM_DIAGRAM):   END;
828194    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
828195    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
828196    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
828197    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
828198    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
828199    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
828200    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
828201    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828202    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
828203    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828204    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
828205    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
828206    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
828207    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
828208    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
828209    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
828210    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
828211    +END;
MPRINT(EM_DIAGRAM):   END;
828212    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
828213    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
828214    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
828215    +drop
828216    +H11
828217    +H12
828218    +H13
828219    +H14
828220    +H15
828221    +H16
828222    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
828223    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
828224     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL41_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
828225     quit;
828226     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
828227     filename emflow
828227   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural41: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
828228     *------------------------------------------------------------*;
828229     * Neural41: Scoring VALIDATE data;
828230     *------------------------------------------------------------*;
828231     data EMWS8.Neural41_VALIDATE
828232     / view=EMWS8.Neural41_VALIDATE
828233     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural41_VALIDATE / view=EMWS8.Neural41_VALIDATE ;
828234     set EMWS8.Meta3_VALIDATE
828235     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
828236     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas.
828237    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
828238    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
828239    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
828240    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
828241    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
828242    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
828243    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
828244    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
828245    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
828246    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
828247    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
828248    +LENGTH _WARN_ $4
828249    +      F_DepVar  $ 12
828250    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
828251    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
828252    +
828253    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
828254    +
828255    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
828256    +
828257    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
828258    +
828259    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
828260    +
828261    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
828262    +
828263    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
828264    +
828265    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
828266    +
828267    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
828268    +
828269    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
828270    +
828271    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
828272    +
828273    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
828274    +
828275    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
828276    +
828277    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
828278    +
828279    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
828280    +
828281    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
828282    +
828283    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
828284    +
828285    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
828286    +
828287    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
828288    +
828289    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
828290    +
828291    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
828292    +
828293    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
828294    +
828295    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
828296    +
828297    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
828298    +
828299    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
828300    +
828301    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
828302    +
828303    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
828304    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
828305    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
828306    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
828307    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
828308    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
828309    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
828310    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
828311    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
828312    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
828313    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
828314    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
828315    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
828316    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
828317    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
828318    +end;
MPRINT(EM_DIAGRAM):   end;
828319    +else do;
MPRINT(EM_DIAGRAM):   else do;
828320    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
828321    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
828322    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
828323    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
828324    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
828325    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
828326    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
828327    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
828328    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
828329    +         end;
MPRINT(EM_DIAGRAM):   end;
828330    +         else do;
MPRINT(EM_DIAGRAM):   else do;
828331    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
828332    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
828333    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
828334    +            end;
MPRINT(EM_DIAGRAM):   end;
828335    +         end;
MPRINT(EM_DIAGRAM):   end;
828336    +      end;
MPRINT(EM_DIAGRAM):   end;
828337    +      else do;
MPRINT(EM_DIAGRAM):   else do;
828338    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
828339    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
828340    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
828341    +         end;
MPRINT(EM_DIAGRAM):   end;
828342    +      end;
MPRINT(EM_DIAGRAM):   end;
828343    +   end;
MPRINT(EM_DIAGRAM):   end;
828344    +   else do;
MPRINT(EM_DIAGRAM):   else do;
828345    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
828346    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
828347    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
828348    +      end;
MPRINT(EM_DIAGRAM):   end;
828349    +      else do;
MPRINT(EM_DIAGRAM):   else do;
828350    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
828351    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
828352    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
828353    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
828354    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
828355    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
828356    +         end;
MPRINT(EM_DIAGRAM):   end;
828357    +      end;
MPRINT(EM_DIAGRAM):   end;
828358    +   end;
MPRINT(EM_DIAGRAM):   end;
828359    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
828360    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
828361    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
828362    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
828363    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
828364    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
828365    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
828366    +   end;
MPRINT(EM_DIAGRAM):   end;
828367    +end;
MPRINT(EM_DIAGRAM):   end;
828368    +
828369    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828370    +*** Checking missing input Interval
828371    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
828372    +
828373    +IF NMISS(
828374    +   AcceptedCmpTotal ,
828375    +   Frq ,
828376    +   Mnt ,
828377    +   MntMeatProducts ,
828378    +   NumCatalogPurchases ,
828379    +   NumDealsPurchases ,
828380    +   NumWebVisitsMonth ,
828381    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
828382    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
828383    +
828384    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
828385    +END;
MPRINT(EM_DIAGRAM):   END;
828386    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828387    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
828388    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828389    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
828390    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
828391    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
828392    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
828393    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
828394    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
828395    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
828396    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
828397    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
828398    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
828399    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
828400    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
828401    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
828402    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
828403    +END;
MPRINT(EM_DIAGRAM):   END;
828404    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
828405    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
828406    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
828407    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
828408    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
828409    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
828410    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
828411    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
828412    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
828413    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
828414    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
828415    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
828416    +   ELSE S_NumCatalogPurchases
828417    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
828418    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
828419    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
828420    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
828421    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
828422    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
828423    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
828424    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
828425    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
828426    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
828427    +END;
MPRINT(EM_DIAGRAM):   END;
828428    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828429    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
828430    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828431    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828432    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
828433    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828434    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
828435    +   H11  =    -0.41170995389365 * S_AcceptedCmpTotal  +     0.95675776354898 *
828436    +        S_Frq  +     0.79241767524066 * S_Mnt  +    -1.11291951115769 *
828437    +        S_MntMeatProducts  +    -0.81016243357955 * S_NumCatalogPurchases
828438    +          +    -0.06020302160033 * S_NumDealsPurchases
828439    +          +    -0.72187271327886 * S_NumWebVisitsMonth
828440    +          +     0.63072705601805 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.41170995389365 * S_AcceptedCmpTotal + 0.95675776354898 * S_Frq 
+ 0.79241767524066 * S_Mnt + -1.11291951115769 * S_MntMeatProducts + -0.81016243357955 * 
S_NumCatalogPurchases + -0.06020302160033 * S_NumDealsPurchases + -0.72187271327886 * 
S_NumWebVisitsMonth + 0.63072705601805 * S_Recency ;
828441    +   H12  =     0.16845165387856 * S_AcceptedCmpTotal  +     0.13952140472368 *
828442    +        S_Frq  +    -0.49680297454001 * S_Mnt  +     0.20077884768409 *
828443    +        S_MntMeatProducts  +    -0.26509457206436 * S_NumCatalogPurchases
828444    +          +     0.44023370306786 * S_NumDealsPurchases
828445    +          +     0.14437092902564 * S_NumWebVisitsMonth
828446    +          +     0.29830280717193 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.16845165387856 * S_AcceptedCmpTotal + 0.13952140472368 * S_Frq + 
-0.49680297454001 * S_Mnt + 0.20077884768409 * S_MntMeatProducts + -0.26509457206436 * 
S_NumCatalogPurchases + 0.44023370306786 * S_NumDealsPurchases + 0.14437092902564 * 
S_NumWebVisitsMonth + 0.29830280717193 * S_Recency ;
828447    +   H13  =     0.17736973005738 * S_AcceptedCmpTotal  +    -1.27691889541485 *
828448    +        S_Frq  +     0.76151337613405 * S_Mnt  +     2.91913897431534 *
828449    +        S_MntMeatProducts  +     0.91968924804036 * S_NumCatalogPurchases
828450    +          +     0.36494720404815 * S_NumDealsPurchases
828451    +          +     0.03877838723538 * S_NumWebVisitsMonth
828452    +          +    -0.07783339271235 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.17736973005738 * S_AcceptedCmpTotal + -1.27691889541485 * S_Frq 
+ 0.76151337613405 * S_Mnt + 2.91913897431534 * S_MntMeatProducts + 0.91968924804036 * 
S_NumCatalogPurchases + 0.36494720404815 * S_NumDealsPurchases + 0.03877838723538 * 
S_NumWebVisitsMonth + -0.07783339271235 * S_Recency ;
828453    +   H14  =     0.06585247678486 * S_AcceptedCmpTotal  +     2.38872321291933 *
828454    +        S_Frq  +     0.55261122983069 * S_Mnt  +    -0.92412810336036 *
828455    +        S_MntMeatProducts  +    -0.85761594899144 * S_NumCatalogPurchases
828456    +          +    -0.87171784420951 * S_NumDealsPurchases
828457    +          +     0.27077171192055 * S_NumWebVisitsMonth
828458    +          +     0.44529508014227 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.06585247678486 * S_AcceptedCmpTotal + 2.38872321291933 * S_Frq + 
0.55261122983069 * S_Mnt + -0.92412810336036 * S_MntMeatProducts + -0.85761594899144 * 
S_NumCatalogPurchases + -0.87171784420951 * S_NumDealsPurchases + 0.27077171192055 * 
S_NumWebVisitsMonth + 0.44529508014227 * S_Recency ;
828459    +   H15  =     0.79261864023919 * S_AcceptedCmpTotal  +     0.22408033839661 *
828460    +        S_Frq  +     0.41205750844428 * S_Mnt  +    -0.05167252147978 *
828461    +        S_MntMeatProducts  +     0.52437372576463 * S_NumCatalogPurchases
828462    +          +    -0.02694744085713 * S_NumDealsPurchases
828463    +          +     0.42930866809604 * S_NumWebVisitsMonth
828464    +          +    -1.23356204218313 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.79261864023919 * S_AcceptedCmpTotal + 0.22408033839661 * S_Frq + 
0.41205750844428 * S_Mnt + -0.05167252147978 * S_MntMeatProducts + 0.52437372576463 * 
S_NumCatalogPurchases + -0.02694744085713 * S_NumDealsPurchases + 0.42930866809604 * 
S_NumWebVisitsMonth + -1.23356204218313 * S_Recency ;
828465    +   H16  =     0.07557739377714 * S_AcceptedCmpTotal  +     0.06732498402011 *
828466    +        S_Frq  +     1.00949697256114 * S_Mnt  +     0.18190372979158 *
828467    +        S_MntMeatProducts  +    -0.20994714743436 * S_NumCatalogPurchases
828468    +          +     1.91827561352967 * S_NumDealsPurchases
828469    +          +    -0.65112089304736 * S_NumWebVisitsMonth
828470    +          +     0.94688864667779 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = 0.07557739377714 * S_AcceptedCmpTotal + 0.06732498402011 * S_Frq + 
1.00949697256114 * S_Mnt + 0.18190372979158 * S_MntMeatProducts + -0.20994714743436 * 
S_NumCatalogPurchases + 1.91827561352967 * S_NumDealsPurchases + -0.65112089304736 * 
S_NumWebVisitsMonth + 0.94688864667779 * S_Recency ;
828471    +   H11  = H11  +    -0.41944609131662 * Marital_StatusDivorced
828472    +          +     0.19571272479408 * Marital_StatusMarried
828473    +          +    -0.16061908960963 * Marital_StatusSingle
828474    +          +     0.01147019501849 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41944609131662 * Marital_StatusDivorced + 
0.19571272479408 * Marital_StatusMarried + -0.16061908960963 * Marital_StatusSingle + 
0.01147019501849 * Marital_StatusTogether ;
828475    +   H12  = H12  +    -0.70326037460175 * Marital_StatusDivorced
828476    +          +    -0.64968872046859 * Marital_StatusMarried
828477    +          +     1.81995301340231 * Marital_StatusSingle
828478    +          +    -1.25679526739636 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.70326037460175 * Marital_StatusDivorced + 
-0.64968872046859 * Marital_StatusMarried + 1.81995301340231 * Marital_StatusSingle + 
-1.25679526739636 * Marital_StatusTogether ;
828479    +   H13  = H13  +    -0.50413590013638 * Marital_StatusDivorced
828480    +          +     0.19296467458933 * Marital_StatusMarried
828481    +          +     -0.2295693568996 * Marital_StatusSingle
828482    +          +     0.51095451752525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.50413590013638 * Marital_StatusDivorced + 
0.19296467458933 * Marital_StatusMarried + -0.2295693568996 * Marital_StatusSingle + 
0.51095451752525 * Marital_StatusTogether ;
828483    +   H14  = H14  +    -0.93810483419419 * Marital_StatusDivorced
828484    +          +    -0.12318541826308 * Marital_StatusMarried
828485    +          +    -0.02882902763243 * Marital_StatusSingle
828486    +          +      0.9552700390789 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.93810483419419 * Marital_StatusDivorced + 
-0.12318541826308 * Marital_StatusMarried + -0.02882902763243 * Marital_StatusSingle + 
0.9552700390789 * Marital_StatusTogether ;
828487    +   H15  = H15  +    -0.16315275571793 * Marital_StatusDivorced
828488    +          +    -0.65544681605691 * Marital_StatusMarried
828489    +          +     0.31269236164873 * Marital_StatusSingle
828490    +          +    -0.37135201633747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.16315275571793 * Marital_StatusDivorced + 
-0.65544681605691 * Marital_StatusMarried + 0.31269236164873 * Marital_StatusSingle + 
-0.37135201633747 * Marital_StatusTogether ;
828491    +   H16  = H16  +    -0.47177568566677 * Marital_StatusDivorced
828492    +          +     0.12269709457787 * Marital_StatusMarried
828493    +          +     0.37106402586008 * Marital_StatusSingle
828494    +          +     0.07580816063395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.47177568566677 * Marital_StatusDivorced + 
0.12269709457787 * Marital_StatusMarried + 0.37106402586008 * Marital_StatusSingle + 
0.07580816063395 * Marital_StatusTogether ;
828495    +   H11  =     0.87814553506559 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.87814553506559 + H11 ;
828496    +   H12  =     1.18416285607678 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.18416285607678 + H12 ;
828497    +   H13  =     1.86220379911993 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86220379911993 + H13 ;
828498    +   H14  =     1.79999645343103 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.79999645343103 + H14 ;
828499    +   H15  =    -2.95745585057281 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.95745585057281 + H15 ;
828500    +   H16  =    -0.63040593626724 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.63040593626724 + H16 ;
828501    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
828502    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
828503    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
828504    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
828505    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
828506    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
828507    +END;
MPRINT(EM_DIAGRAM):   END;
828508    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
828509    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
828510    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
828511    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
828512    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
828513    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
828514    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
828515    +END;
MPRINT(EM_DIAGRAM):   END;
828516    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828517    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
828518    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828519    +
828520    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
828521    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
828522    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
828523    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
828524    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
828525    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
828526    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
828527    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
828528    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
828529    +end;
MPRINT(EM_DIAGRAM):   end;
828530    +else do;
MPRINT(EM_DIAGRAM):   else do;
828531    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
828532    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
828533    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
828534    +   end;
MPRINT(EM_DIAGRAM):   end;
828535    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
828536    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
828537    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
828538    +   end;
MPRINT(EM_DIAGRAM):   end;
828539    +   else do;
MPRINT(EM_DIAGRAM):   else do;
828540    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
828541    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
828542    +   end;
MPRINT(EM_DIAGRAM):   end;
828543    +end;
MPRINT(EM_DIAGRAM):   end;
828544    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
828545    +   P_DepVar1  =    -5.78936073221603 * H11  +     3.14966455677413 * H12
828546    +          +     7.03853349374163 * H13  +    -2.45391654583749 * H14
828547    +          +     4.80213644089029 * H15  +    -1.60369759544804 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.78936073221603 * H11 + 3.14966455677413 * H12 + 
7.03853349374163 * H13 + -2.45391654583749 * H14 + 4.80213644089029 * H15 + -1.60369759544804 
* H16 ;
828548    +   P_DepVar1  =    -1.95361942474066 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.95361942474066 + P_DepVar1 ;
828549    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
828550    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
828551    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
828552    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
828553    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
828554    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
828555    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
828556    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
828557    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
828558    +END;
MPRINT(EM_DIAGRAM):   END;
828559    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
828560    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
828561    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
828562    +END;
MPRINT(EM_DIAGRAM):   END;
828563    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
828564    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
828565    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
828566    +END;
MPRINT(EM_DIAGRAM):   END;
828567    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
828568    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
828569    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
828570    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
828571    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
828572    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
828573    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
828574    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828575    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
828576    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828577    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
828578    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
828579    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
828580    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
828581    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
828582    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
828583    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
828584    +END;
MPRINT(EM_DIAGRAM):   END;
828585    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
828586    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
828587    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
828588    +drop
828589    +H11
828590    +H12
828591    +H13
828592    +H14
828593    +H15
828594    +H16
828595    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
828596    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
828597     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL41_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
828598     quit;
828599     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
828600     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
828601     * Neural41: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural41: Computing metadata for TRAIN data;
828602     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL41_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural41_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural41_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural41_TRAIN out=WORK.M1EQL8OC noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1EQL8OC;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1EQL8OC(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1EQL8OC;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1EQL8OC;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1ZXO0I7 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1ZXO0I7;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1ZXO0I7;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3AWHFBR(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1ZXO0I7;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1ZXO0I7;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1ZXO0I7;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1ZXO0I7;
MPRINT(EMADVISECOLUMNS):   set WORK.M1ZXO0I7;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural41_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural41";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural41";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural41: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
828914     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
828915     set EMWS8.Neural41_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural41_EMINFO;
828916     where DATA='Neural41' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural41' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
828917     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL41_EMINFO.
      WHERE (DATA='Neural41') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

828918     data EMWS8.Neural41_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural41_EMINFO;
828919     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
828920     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
828921     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL41_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
828925     run;
828926     data EMWS8.Neural41_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural41_EMINFO;
828927     set EMWS8.Neural41_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural41_EMINFO WORK.MODELTEMP_INFO;
828928     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL41_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL41_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

828929     proc sort data = EMWS8.Neural41_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural41_EMINFO NOTHREADS;
828930     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
828931     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL41_EMINFO.
NOTE: The data set EMWS8.NEURAL41_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

828932     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
828933     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
828934     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

828935     proc sort data = EMWS8.Neural41_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural41_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
828936     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
828937     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL41_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

828938     data EMWS8.Neural41_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural41_EMINFO;
828939     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
828940     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
828941     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL41_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

828942     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
828943     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
828944     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
828945     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL41_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL41_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
