MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.27 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                12.27 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1B0ZR_M 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1B0ZR_M new;
MPRINT(EM_DIAGRAM):   run;
169753     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
169754     set EMWS8.Neural41_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural41_OUTKEY;
169755     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
169756     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 49 observations read from the data set EMWS8.NEURAL41_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

169757     filename emflow
169757   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural41: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169758     *------------------------------------------------------------*;
169759     * Neural41: Scoring DATA data;
169760     *------------------------------------------------------------*;
169761     data EMWS8.Neural41_TRAIN
169762     / view=EMWS8.Neural41_TRAIN
169763     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural41_TRAIN / view=EMWS8.Neural41_TRAIN ;
169764     set EMWS8.Meta3_TRAIN
169765     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
169766     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas.
169767    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
169768    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
169769    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
169770    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
169771    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
169772    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
169773    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
169774    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
169775    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
169776    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
169777    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
169778    +LENGTH _WARN_ $4
169779    +      F_DepVar  $ 12
169780    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
169781    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
169782    +
169783    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
169784    +
169785    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
169786    +
169787    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
169788    +
169789    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
169790    +
169791    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
169792    +
169793    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
169794    +
169795    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
169796    +
169797    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
169798    +
169799    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
169800    +
169801    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
169802    +
169803    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
169804    +
169805    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
169806    +
169807    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
169808    +
169809    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
169810    +
169811    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
169812    +
169813    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
169814    +
169815    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
169816    +
169817    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
169818    +
169819    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
169820    +
169821    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
169822    +
169823    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
169824    +
169825    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
169826    +
169827    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
169828    +
169829    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
169830    +
169831    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
169832    +
169833    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
169834    +
169835    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
169836    +
169837    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
169838    +
169839    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
169840    +
169841    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
169842    +
169843    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
169844    +
169845    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
169846    +
169847    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
169848    +
169849    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
169850    +
169851    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
169852    +
169853    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
169854    +
169855    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
169856    +
169857    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
169858    +
169859    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
169860    +
169861    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
169862    +
169863    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
169864    +
169865    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
169866    +
169867    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
169868    +
169869    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
169870    +
169871    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
169872    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
169873    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
169874    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
169875    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
169876    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169877    +end;
MPRINT(EM_DIAGRAM):   end;
169878    +else do;
MPRINT(EM_DIAGRAM):   else do;
169879    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
169880    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
169881    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
169882    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
169883    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
169884    +   end;
MPRINT(EM_DIAGRAM):   end;
169885    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
169886    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
169887    +   end;
MPRINT(EM_DIAGRAM):   end;
169888    +   else do;
MPRINT(EM_DIAGRAM):   else do;
169889    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
169890    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
169891    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169892    +   end;
MPRINT(EM_DIAGRAM):   end;
169893    +end;
MPRINT(EM_DIAGRAM):   end;
169894    +
169895    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
169896    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
169897    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
169898    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
169899    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
169900    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169901    +end;
MPRINT(EM_DIAGRAM):   end;
169902    +else do;
MPRINT(EM_DIAGRAM):   else do;
169903    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
169904    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
169905    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
169906    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
169907    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
169908    +   end;
MPRINT(EM_DIAGRAM):   end;
169909    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
169910    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
169911    +   end;
MPRINT(EM_DIAGRAM):   end;
169912    +   else do;
MPRINT(EM_DIAGRAM):   else do;
169913    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
169914    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
169915    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169916    +   end;
MPRINT(EM_DIAGRAM):   end;
169917    +end;
MPRINT(EM_DIAGRAM):   end;
169918    +
169919    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
169920    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
169921    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
169922    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
169923    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
169924    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169925    +end;
MPRINT(EM_DIAGRAM):   end;
169926    +else do;
MPRINT(EM_DIAGRAM):   else do;
169927    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
169928    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
169929    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
169930    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
169931    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
169932    +   end;
MPRINT(EM_DIAGRAM):   end;
169933    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
169934    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
169935    +   end;
MPRINT(EM_DIAGRAM):   end;
169936    +   else do;
MPRINT(EM_DIAGRAM):   else do;
169937    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
169938    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
169939    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169940    +   end;
MPRINT(EM_DIAGRAM):   end;
169941    +end;
MPRINT(EM_DIAGRAM):   end;
169942    +
169943    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
169944    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
169945    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
169946    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
169947    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
169948    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169949    +end;
MPRINT(EM_DIAGRAM):   end;
169950    +else do;
MPRINT(EM_DIAGRAM):   else do;
169951    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
169952    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
169953    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
169954    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
169955    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
169956    +   end;
MPRINT(EM_DIAGRAM):   end;
169957    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
169958    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
169959    +   end;
MPRINT(EM_DIAGRAM):   end;
169960    +   else do;
MPRINT(EM_DIAGRAM):   else do;
169961    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
169962    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
169963    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169964    +   end;
MPRINT(EM_DIAGRAM):   end;
169965    +end;
MPRINT(EM_DIAGRAM):   end;
169966    +
169967    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
169968    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
169969    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
169970    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
169971    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
169972    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169973    +end;
MPRINT(EM_DIAGRAM):   end;
169974    +else do;
MPRINT(EM_DIAGRAM):   else do;
169975    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
169976    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
169977    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
169978    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
169979    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
169980    +   end;
MPRINT(EM_DIAGRAM):   end;
169981    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
169982    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
169983    +   end;
MPRINT(EM_DIAGRAM):   end;
169984    +   else do;
MPRINT(EM_DIAGRAM):   else do;
169985    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
169986    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
169987    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169988    +   end;
MPRINT(EM_DIAGRAM):   end;
169989    +end;
MPRINT(EM_DIAGRAM):   end;
169990    +
169991    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
169992    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
169993    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
169994    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
169995    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
169996    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169997    +end;
MPRINT(EM_DIAGRAM):   end;
169998    +else do;
MPRINT(EM_DIAGRAM):   else do;
169999    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
170000    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
170001    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170002    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
170003    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
170004    +   end;
MPRINT(EM_DIAGRAM):   end;
170005    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
170006    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
170007    +   end;
MPRINT(EM_DIAGRAM):   end;
170008    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170009    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
170010    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170011    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170012    +   end;
MPRINT(EM_DIAGRAM):   end;
170013    +end;
MPRINT(EM_DIAGRAM):   end;
170014    +
170015    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
170016    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
170017    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
170018    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
170019    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170020    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170021    +end;
MPRINT(EM_DIAGRAM):   end;
170022    +else do;
MPRINT(EM_DIAGRAM):   else do;
170023    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
170024    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
170025    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170026    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
170027    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
170028    +   end;
MPRINT(EM_DIAGRAM):   end;
170029    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
170030    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
170031    +   end;
MPRINT(EM_DIAGRAM):   end;
170032    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170033    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
170034    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170035    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170036    +   end;
MPRINT(EM_DIAGRAM):   end;
170037    +end;
MPRINT(EM_DIAGRAM):   end;
170038    +
170039    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
170040    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
170041    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
170042    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
170043    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
170044    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
170045    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
170046    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
170047    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
170048    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
170049    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
170050    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
170051    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170052    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170053    +end;
MPRINT(EM_DIAGRAM):   end;
170054    +else do;
MPRINT(EM_DIAGRAM):   else do;
170055    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
170056    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
170057    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170058    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
170059    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
170060    +   end;
MPRINT(EM_DIAGRAM):   end;
170061    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
170062    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
170063    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
170064    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
170065    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
170066    +   end;
MPRINT(EM_DIAGRAM):   end;
170067    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
170068    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
170069    +   end;
MPRINT(EM_DIAGRAM):   end;
170070    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
170071    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
170072    +   end;
MPRINT(EM_DIAGRAM):   end;
170073    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
170074    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
170075    +   end;
MPRINT(EM_DIAGRAM):   end;
170076    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170077    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
170078    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
170079    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
170080    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
170081    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170082    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170083    +   end;
MPRINT(EM_DIAGRAM):   end;
170084    +end;
MPRINT(EM_DIAGRAM):   end;
170085    +
170086    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
170087    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
170088    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
170089    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
170090    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
170091    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
170092    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
170093    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
170094    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
170095    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
170096    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
170097    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
170098    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
170099    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170100    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170101    +end;
MPRINT(EM_DIAGRAM):   end;
170102    +else do;
MPRINT(EM_DIAGRAM):   else do;
170103    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
170104    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
170105    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170106    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
170107    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
170108    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
170109    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
170110    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
170111    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170112    +         end;
MPRINT(EM_DIAGRAM):   end;
170113    +         else do;
MPRINT(EM_DIAGRAM):   else do;
170114    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
170115    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
170116    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170117    +            end;
MPRINT(EM_DIAGRAM):   end;
170118    +         end;
MPRINT(EM_DIAGRAM):   end;
170119    +      end;
MPRINT(EM_DIAGRAM):   end;
170120    +      else do;
MPRINT(EM_DIAGRAM):   else do;
170121    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
170122    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
170123    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170124    +         end;
MPRINT(EM_DIAGRAM):   end;
170125    +      end;
MPRINT(EM_DIAGRAM):   end;
170126    +   end;
MPRINT(EM_DIAGRAM):   end;
170127    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170128    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
170129    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
170130    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170131    +      end;
MPRINT(EM_DIAGRAM):   end;
170132    +      else do;
MPRINT(EM_DIAGRAM):   else do;
170133    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
170134    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
170135    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
170136    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
170137    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
170138    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170139    +         end;
MPRINT(EM_DIAGRAM):   end;
170140    +      end;
MPRINT(EM_DIAGRAM):   end;
170141    +   end;
MPRINT(EM_DIAGRAM):   end;
170142    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
170143    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
170144    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
170145    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
170146    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
170147    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170148    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170149    +   end;
MPRINT(EM_DIAGRAM):   end;
170150    +end;
MPRINT(EM_DIAGRAM):   end;
170151    +
170152    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170153    +*** Checking missing input Interval
170154    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
170155    +
170156    +IF NMISS(
170157    +   AcceptedCmpTotal ,
170158    +   Age ,
170159    +   Frq ,
170160    +   Income ,
170161    +   Kidhome ,
170162    +   MntFishProducts ,
170163    +   MntFruits ,
170164    +   MntGoldProds ,
170165    +   MntSweetProducts ,
170166    +   MonthsAsCustomer ,
170167    +   NumDealsPurchases ,
170168    +   NumWebVisitsMonth ,
170169    +   RFMstat ,
170170    +   RMntFrq ,
170171    +   Recency ,
170172    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
170173    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
170174    +
170175    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170176    +END;
MPRINT(EM_DIAGRAM):   END;
170177    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170178    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
170179    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170180    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
170181    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
170182    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
170183    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
170184    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
170185    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
170186    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
170187    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
170188    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
170189    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
170190    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
170191    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
170192    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
170193    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
170194    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
170195    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
170196    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
170197    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
170198    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
170199    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
170200    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
170201    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
170202    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
170203    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
170204    +END;
MPRINT(EM_DIAGRAM):   END;
170205    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
170206    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
170207    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
170208    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
170209    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
170210    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
170211    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
170212    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
170213    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
170214    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
170215    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
170216    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
170217    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
170218    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
170219    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
170220    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
170221    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
170222    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
170223    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
170224    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
170225    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
170226    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
170227    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
170228    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
170229    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
170230    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
170231    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
170232    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
170233    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
170234    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
170235    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
170236    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
170237    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
170238    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
170239    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
170240    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
170241    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
170242    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
170243    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
170244    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
170245    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
170246    +END;
MPRINT(EM_DIAGRAM):   END;
170247    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170248    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
170249    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170250    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170251    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
170252    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170253    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170254    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
170255    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170256    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
170257    +   H11  =     0.00008202203841 * S_AcceptedCmpTotal  +    -0.13126483592154 *
170258    +        S_Age  +    -0.18503379491116 * S_Frq  +      0.0037482920266 *
170259    +        S_Income  +    -0.52684337240504 * S_Kidhome
170260    +          +     0.07835956947085 * S_MntFishProducts
170261    +          +    -0.04668308882455 * S_MntFruits  +     0.05311471984852 *
170262    +        S_MntGoldProds  +    -0.39576933150762 * S_MntSweetProducts
170263    +          +    -0.44463888327841 * S_MonthsAsCustomer
170264    +          +    -0.20310227710644 * S_NumDealsPurchases
170265    +          +     0.06594467408568 * S_NumWebVisitsMonth
170266    +          +      0.1351556470497 * S_RFMstat  +    -0.29446460505048 *
170267    +        S_RMntFrq  +    -0.68878207173764 * S_Recency
170268    +          +    -0.29241927123525 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00008202203841 * S_AcceptedCmpTotal + -0.13126483592154 * S_Age 
+ -0.18503379491116 * S_Frq + 0.0037482920266 * S_Income + -0.52684337240504 * S_Kidhome + 
0.07835956947085 * S_MntFishProducts + -0.04668308882455 * S_MntFruits + 0.05311471984852 * 
S_MntGoldProds + -0.39576933150762 * S_MntSweetProducts + -0.44463888327841 * 
S_MonthsAsCustomer + -0.20310227710644 * S_NumDealsPurchases + 0.06594467408568 * 
S_NumWebVisitsMonth + 0.1351556470497 * S_RFMstat + -0.29446460505048 * S_RMntFrq + 
-0.68878207173764 * S_Recency + -0.29241927123525 * S_Teenhome ;
170269    +   H12  =     0.38864749644126 * S_AcceptedCmpTotal  +    -0.01077611135972 *
170270    +        S_Age  +     0.24187074268223 * S_Frq  +     0.64180191864108 *
170271    +        S_Income  +     0.91025818069308 * S_Kidhome
170272    +          +     0.26585860774761 * S_MntFishProducts
170273    +          +     -0.3087386188037 * S_MntFruits  +     0.14643568534568 *
170274    +        S_MntGoldProds  +     0.23763200275034 * S_MntSweetProducts
170275    +          +    -0.12421403342454 * S_MonthsAsCustomer
170276    +          +     0.66931066909347 * S_NumDealsPurchases
170277    +          +     0.35050056776957 * S_NumWebVisitsMonth
170278    +          +     0.16127659142199 * S_RFMstat  +     0.04112742589329 *
170279    +        S_RMntFrq  +    -0.83075146355987 * S_Recency
170280    +          +    -0.37723917156575 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.38864749644126 * S_AcceptedCmpTotal + -0.01077611135972 * S_Age 
+ 0.24187074268223 * S_Frq + 0.64180191864108 * S_Income + 0.91025818069308 * S_Kidhome + 
0.26585860774761 * S_MntFishProducts + -0.3087386188037 * S_MntFruits + 0.14643568534568 * 
S_MntGoldProds + 0.23763200275034 * S_MntSweetProducts + -0.12421403342454 * 
S_MonthsAsCustomer + 0.66931066909347 * S_NumDealsPurchases + 0.35050056776957 * 
S_NumWebVisitsMonth + 0.16127659142199 * S_RFMstat + 0.04112742589329 * S_RMntFrq + 
-0.83075146355987 * S_Recency + -0.37723917156575 * S_Teenhome ;
170281    +   H13  =     0.02339384767281 * S_AcceptedCmpTotal  +    -0.17700567590774 *
170282    +        S_Age  +    -0.38060509731554 * S_Frq  +    -0.86026143079344 *
170283    +        S_Income  +     0.63027536562783 * S_Kidhome
170284    +          +     0.15303249164566 * S_MntFishProducts
170285    +          +    -0.04780128957622 * S_MntFruits  +    -0.02064261038049 *
170286    +        S_MntGoldProds  +     0.26238383938455 * S_MntSweetProducts
170287    +          +    -0.21006970062531 * S_MonthsAsCustomer
170288    +          +      0.2955774677605 * S_NumDealsPurchases
170289    +          +    -0.15769947513958 * S_NumWebVisitsMonth
170290    +          +    -0.02874776268384 * S_RFMstat  +     -0.3955429869434 *
170291    +        S_RMntFrq  +      0.3744122250079 * S_Recency
170292    +          +     0.58295521976226 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.02339384767281 * S_AcceptedCmpTotal + -0.17700567590774 * S_Age 
+ -0.38060509731554 * S_Frq + -0.86026143079344 * S_Income + 0.63027536562783 * S_Kidhome + 
0.15303249164566 * S_MntFishProducts + -0.04780128957622 * S_MntFruits + -0.02064261038049 * 
S_MntGoldProds + 0.26238383938455 * S_MntSweetProducts + -0.21006970062531 * 
S_MonthsAsCustomer + 0.2955774677605 * S_NumDealsPurchases + -0.15769947513958 * 
S_NumWebVisitsMonth + -0.02874776268384 * S_RFMstat + -0.3955429869434 * S_RMntFrq + 
0.3744122250079 * S_Recency + 0.58295521976226 * S_Teenhome ;
170293    +   H14  =    -0.22800152627721 * S_AcceptedCmpTotal  +     0.27991667815594 *
170294    +        S_Age  +     0.89001922321833 * S_Frq  +     0.17467731177386 *
170295    +        S_Income  +    -0.00985947331416 * S_Kidhome
170296    +          +    -0.27114701164817 * S_MntFishProducts
170297    +          +     0.32554392037328 * S_MntFruits  +     0.06705670808471 *
170298    +        S_MntGoldProds  +     -0.3590087223323 * S_MntSweetProducts
170299    +          +    -0.02702818828921 * S_MonthsAsCustomer
170300    +          +    -0.63381188911946 * S_NumDealsPurchases
170301    +          +    -0.86143000704363 * S_NumWebVisitsMonth
170302    +          +    -0.16788755655818 * S_RFMstat  +    -0.09712800982817 *
170303    +        S_RMntFrq  +     0.61892338869919 * S_Recency
170304    +          +    -0.21544816860839 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.22800152627721 * S_AcceptedCmpTotal + 0.27991667815594 * S_Age 
+ 0.89001922321833 * S_Frq + 0.17467731177386 * S_Income + -0.00985947331416 * S_Kidhome + 
-0.27114701164817 * S_MntFishProducts + 0.32554392037328 * S_MntFruits + 0.06705670808471 * 
S_MntGoldProds + -0.3590087223323 * S_MntSweetProducts + -0.02702818828921 * 
S_MonthsAsCustomer + -0.63381188911946 * S_NumDealsPurchases + -0.86143000704363 * 
S_NumWebVisitsMonth + -0.16788755655818 * S_RFMstat + -0.09712800982817 * S_RMntFrq + 
0.61892338869919 * S_Recency + -0.21544816860839 * S_Teenhome ;
170305    +   H15  =      0.0846389232492 * S_AcceptedCmpTotal  +    -0.03933692648164 *
170306    +        S_Age  +     0.26004669807852 * S_Frq  +     0.30306661543325 *
170307    +        S_Income  +    -0.24206929946772 * S_Kidhome
170308    +          +    -0.19039689229491 * S_MntFishProducts
170309    +          +    -0.22957509816007 * S_MntFruits  +    -0.35006912387254 *
170310    +        S_MntGoldProds  +    -0.02737135204648 * S_MntSweetProducts
170311    +          +     0.03815221487927 * S_MonthsAsCustomer
170312    +          +    -0.43579024169696 * S_NumDealsPurchases
170313    +          +    -0.27796253880432 * S_NumWebVisitsMonth
170314    +          +     0.15010895791429 * S_RFMstat  +     0.24377797912725 *
170315    +        S_RMntFrq  +     0.50547916383425 * S_Recency
170316    +          +    -0.22622962943787 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.0846389232492 * S_AcceptedCmpTotal + -0.03933692648164 * S_Age + 
0.26004669807852 * S_Frq + 0.30306661543325 * S_Income + -0.24206929946772 * S_Kidhome + 
-0.19039689229491 * S_MntFishProducts + -0.22957509816007 * S_MntFruits + -0.35006912387254 * 
S_MntGoldProds + -0.02737135204648 * S_MntSweetProducts + 0.03815221487927 * 
S_MonthsAsCustomer + -0.43579024169696 * S_NumDealsPurchases + -0.27796253880432 * 
S_NumWebVisitsMonth + 0.15010895791429 * S_RFMstat + 0.24377797912725 * S_RMntFrq + 
0.50547916383425 * S_Recency + -0.22622962943787 * S_Teenhome ;
170317    +   H16  =     0.03788304209102 * S_AcceptedCmpTotal  +    -0.27022676521755 *
170318    +        S_Age  +    -0.17480141247917 * S_Frq  +     0.53345624791204 *
170319    +        S_Income  +    -0.25736924536467 * S_Kidhome
170320    +          +    -0.04400855145817 * S_MntFishProducts
170321    +          +    -0.06651358259718 * S_MntFruits  +     -0.0117104183032 *
170322    +        S_MntGoldProds  +    -0.02790266219853 * S_MntSweetProducts
170323    +          +     0.00265986106691 * S_MonthsAsCustomer
170324    +          +     0.27331919080312 * S_NumDealsPurchases
170325    +          +     0.22836119952787 * S_NumWebVisitsMonth
170326    +          +     0.09245783028838 * S_RFMstat  +     0.10223459152488 *
170327    +        S_RMntFrq  +    -0.90398250269857 * S_Recency
170328    +          +     -0.2621421532112 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.03788304209102 * S_AcceptedCmpTotal + -0.27022676521755 * S_Age 
+ -0.17480141247917 * S_Frq + 0.53345624791204 * S_Income + -0.25736924536467 * S_Kidhome + 
-0.04400855145817 * S_MntFishProducts + -0.06651358259718 * S_MntFruits + -0.0117104183032 * 
S_MntGoldProds + -0.02790266219853 * S_MntSweetProducts + 0.00265986106691 * 
S_MonthsAsCustomer + 0.27331919080312 * S_NumDealsPurchases + 0.22836119952787 * 
S_NumWebVisitsMonth + 0.09245783028838 * S_RFMstat + 0.10223459152488 * S_RMntFrq + 
-0.90398250269857 * S_Recency + -0.2621421532112 * S_Teenhome ;
170329    +   H11  = H11  +     0.24155985997122 * AcceptedCmp10
170330    +          +     0.02727843300562 * AcceptedCmp20  +     0.05990453920581 *
170331    +        AcceptedCmp30  +    -0.43469138041411 * AcceptedCmp40
170332    +          +     0.00076050589964 * AcceptedCmp50  +     0.43307119233671 *
170333    +        Complain0  +     0.23242177664865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.24155985997122 * AcceptedCmp10 + 0.02727843300562 * 
AcceptedCmp20 + 0.05990453920581 * AcceptedCmp30 + -0.43469138041411 * AcceptedCmp40 + 
0.00076050589964 * AcceptedCmp50 + 0.43307119233671 * Complain0 + 0.23242177664865 * 
HigherEducationBinary0 ;
170334    +   H12  = H12  +     0.04034689771488 * AcceptedCmp10
170335    +          +    -0.01358747117911 * AcceptedCmp20  +    -0.29883922116453 *
170336    +        AcceptedCmp30  +     0.58794258522438 * AcceptedCmp40
170337    +          +    -0.40659406037079 * AcceptedCmp50  +     0.59068991602469 *
170338    +        Complain0  +     -0.3122461557933 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04034689771488 * AcceptedCmp10 + -0.01358747117911 * 
AcceptedCmp20 + -0.29883922116453 * AcceptedCmp30 + 0.58794258522438 * AcceptedCmp40 + 
-0.40659406037079 * AcceptedCmp50 + 0.59068991602469 * Complain0 + -0.3122461557933 * 
HigherEducationBinary0 ;
170339    +   H13  = H13  +     0.49941486221932 * AcceptedCmp10
170340    +          +     0.42891153022885 * AcceptedCmp20  +     0.28744085742243 *
170341    +        AcceptedCmp30  +     0.54657253664873 * AcceptedCmp40
170342    +          +     0.10655487579255 * AcceptedCmp50  +     0.11223153893952 *
170343    +        Complain0  +    -0.44704943665138 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.49941486221932 * AcceptedCmp10 + 0.42891153022885 * 
AcceptedCmp20 + 0.28744085742243 * AcceptedCmp30 + 0.54657253664873 * AcceptedCmp40 + 
0.10655487579255 * AcceptedCmp50 + 0.11223153893952 * Complain0 + -0.44704943665138 * 
HigherEducationBinary0 ;
170344    +   H14  = H14  +     0.70510583713907 * AcceptedCmp10
170345    +          +     0.04052111261969 * AcceptedCmp20  +     0.76301816100625 *
170346    +        AcceptedCmp30  +     0.09753552533639 * AcceptedCmp40
170347    +          +     0.40999088454383 * AcceptedCmp50  +     0.19278448059725 *
170348    +        Complain0  +     0.09127136236268 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.70510583713907 * AcceptedCmp10 + 0.04052111261969 * 
AcceptedCmp20 + 0.76301816100625 * AcceptedCmp30 + 0.09753552533639 * AcceptedCmp40 + 
0.40999088454383 * AcceptedCmp50 + 0.19278448059725 * Complain0 + 0.09127136236268 * 
HigherEducationBinary0 ;
170349    +   H15  = H15  +     0.30535300313392 * AcceptedCmp10
170350    +          +    -0.01605332227631 * AcceptedCmp20  +     0.09278623651632 *
170351    +        AcceptedCmp30  +     0.03468239765482 * AcceptedCmp40
170352    +          +     0.19720723485806 * AcceptedCmp50  +    -0.32364247007443 *
170353    +        Complain0  +    -0.20695533150084 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30535300313392 * AcceptedCmp10 + -0.01605332227631 * 
AcceptedCmp20 + 0.09278623651632 * AcceptedCmp30 + 0.03468239765482 * AcceptedCmp40 + 
0.19720723485806 * AcceptedCmp50 + -0.32364247007443 * Complain0 + -0.20695533150084 * 
HigherEducationBinary0 ;
170354    +   H16  = H16  +    -0.19354253973215 * AcceptedCmp10
170355    +          +     0.01566685138596 * AcceptedCmp20  +    -0.28250218144785 *
170356    +        AcceptedCmp30  +    -0.13118265240955 * AcceptedCmp40
170357    +          +    -0.03808858956936 * AcceptedCmp50  +    -0.19850701105147 *
170358    +        Complain0  +     0.14297616111345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.19354253973215 * AcceptedCmp10 + 0.01566685138596 * 
AcceptedCmp20 + -0.28250218144785 * AcceptedCmp30 + -0.13118265240955 * AcceptedCmp40 + 
-0.03808858956936 * AcceptedCmp50 + -0.19850701105147 * Complain0 + 0.14297616111345 * 
HigherEducationBinary0 ;
170359    +   H11  = H11  +     0.05082493200436 * Education2n_Cycle
170360    +          +    -0.08192239267323 * EducationBasic  +    -0.01445849926378 *
170361    +        EducationGraduation  +     0.01459143816519 * EducationMaster
170362    +          +     0.12502276672336 * Marital_StatusDivorced
170363    +          +    -0.02606508453741 * Marital_StatusMarried
170364    +          +      0.0418850245266 * Marital_StatusSingle
170365    +          +     0.02050996572132 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05082493200436 * Education2n_Cycle + -0.08192239267323 * 
EducationBasic + -0.01445849926378 * EducationGraduation + 0.01459143816519 * EducationMaster 
+ 0.12502276672336 * Marital_StatusDivorced + -0.02606508453741 * Marital_StatusMarried + 
0.0418850245266 * Marital_StatusSingle + 0.02050996572132 * Marital_StatusTogether ;
170366    +   H12  = H12  +     -0.1900759238575 * Education2n_Cycle
170367    +          +     0.13535241443003 * EducationBasic  +    -0.00199771592906 *
170368    +        EducationGraduation  +     0.00476193515914 * EducationMaster
170369    +          +      0.1943860669795 * Marital_StatusDivorced
170370    +          +     -0.1529596261268 * Marital_StatusMarried
170371    +          +     0.24187461301348 * Marital_StatusSingle
170372    +          +     0.09157538589749 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1900759238575 * Education2n_Cycle + 0.13535241443003 * 
EducationBasic + -0.00199771592906 * EducationGraduation + 0.00476193515914 * EducationMaster 
+ 0.1943860669795 * Marital_StatusDivorced + -0.1529596261268 * Marital_StatusMarried + 
0.24187461301348 * Marital_StatusSingle + 0.09157538589749 * Marital_StatusTogether ;
170373    +   H13  = H13  +     0.02140936656506 * Education2n_Cycle
170374    +          +     0.05845427475503 * EducationBasic  +    -0.44298208278895 *
170375    +        EducationGraduation  +     0.17149477011717 * EducationMaster
170376    +          +    -0.19677652422622 * Marital_StatusDivorced
170377    +          +     0.75897106429478 * Marital_StatusMarried
170378    +          +    -0.66692260284833 * Marital_StatusSingle
170379    +          +     0.58287349221333 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02140936656506 * Education2n_Cycle + 0.05845427475503 * 
EducationBasic + -0.44298208278895 * EducationGraduation + 0.17149477011717 * EducationMaster 
+ -0.19677652422622 * Marital_StatusDivorced + 0.75897106429478 * Marital_StatusMarried + 
-0.66692260284833 * Marital_StatusSingle + 0.58287349221333 * Marital_StatusTogether ;
170380    +   H14  = H14  +     0.18801855635785 * Education2n_Cycle
170381    +          +    -0.06231007239836 * EducationBasic  +    -0.26915940640311 *
170382    +        EducationGraduation  +    -0.30689797876717 * EducationMaster
170383    +          +    -0.18964222971122 * Marital_StatusDivorced
170384    +          +    -0.15222045956879 * Marital_StatusMarried
170385    +          +     0.15455795695595 * Marital_StatusSingle
170386    +          +    -0.04060840399479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18801855635785 * Education2n_Cycle + -0.06231007239836 * 
EducationBasic + -0.26915940640311 * EducationGraduation + -0.30689797876717 * EducationMaster 
+ -0.18964222971122 * Marital_StatusDivorced + -0.15222045956879 * Marital_StatusMarried + 
0.15455795695595 * Marital_StatusSingle + -0.04060840399479 * Marital_StatusTogether ;
170387    +   H15  = H15  +    -0.12131367369042 * Education2n_Cycle
170388    +          +     0.20547688844423 * EducationBasic  +     0.04965529549437 *
170389    +        EducationGraduation  +    -0.21811990669176 * EducationMaster
170390    +          +    -0.10122776921995 * Marital_StatusDivorced
170391    +          +     0.14126755564161 * Marital_StatusMarried
170392    +          +    -0.18463644418978 * Marital_StatusSingle
170393    +          +     0.23071597384519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.12131367369042 * Education2n_Cycle + 0.20547688844423 * 
EducationBasic + 0.04965529549437 * EducationGraduation + -0.21811990669176 * EducationMaster 
+ -0.10122776921995 * Marital_StatusDivorced + 0.14126755564161 * Marital_StatusMarried + 
-0.18463644418978 * Marital_StatusSingle + 0.23071597384519 * Marital_StatusTogether ;
170394    +   H16  = H16  +     0.02961881390411 * Education2n_Cycle
170395    +          +    -0.46228434914367 * EducationBasic  +    -0.08513280071643 *
170396    +        EducationGraduation  +    -0.20159542694386 * EducationMaster
170397    +          +     0.05009431660662 * Marital_StatusDivorced
170398    +          +    -0.38407798045329 * Marital_StatusMarried
170399    +          +      0.3035257398654 * Marital_StatusSingle
170400    +          +    -0.27725923319119 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02961881390411 * Education2n_Cycle + -0.46228434914367 * 
EducationBasic + -0.08513280071643 * EducationGraduation + -0.20159542694386 * EducationMaster 
+ 0.05009431660662 * Marital_StatusDivorced + -0.38407798045329 * Marital_StatusMarried + 
0.3035257398654 * Marital_StatusSingle + -0.27725923319119 * Marital_StatusTogether ;
170401    +   H11  =      1.3960587011002 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.3960587011002 + H11 ;
170402    +   H12  =     0.18947019063375 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.18947019063375 + H12 ;
170403    +   H13  =     0.55907472867898 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.55907472867898 + H13 ;
170404    +   H14  =     0.28336290184268 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.28336290184268 + H14 ;
170405    +   H15  =     1.08919536550159 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.08919536550159 + H15 ;
170406    +   H16  =    -0.22538308534609 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.22538308534609 + H16 ;
170407    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
170408    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
170409    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
170410    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
170411    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
170412    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
170413    +END;
MPRINT(EM_DIAGRAM):   END;
170414    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
170415    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
170416    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
170417    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
170418    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
170419    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
170420    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
170421    +END;
MPRINT(EM_DIAGRAM):   END;
170422    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170423    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
170424    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170425    +
170426    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
170427    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
170428    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
170429    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
170430    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
170431    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170432    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
170433    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
170434    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
170435    +end;
MPRINT(EM_DIAGRAM):   end;
170436    +else do;
MPRINT(EM_DIAGRAM):   else do;
170437    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
170438    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
170439    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
170440    +   end;
MPRINT(EM_DIAGRAM):   end;
170441    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
170442    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
170443    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
170444    +   end;
MPRINT(EM_DIAGRAM):   end;
170445    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170446    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
170447    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
170448    +   end;
MPRINT(EM_DIAGRAM):   end;
170449    +end;
MPRINT(EM_DIAGRAM):   end;
170450    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
170451    +   P_DepVar1  =      1.1921632715983 * H11  +     2.38386446186622 * H12
170452    +          +    -2.42409896638067 * H13  +    -2.19084949788904 * H14
170453    +          +      -0.380575449439 * H15  +     1.17350595805971 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.1921632715983 * H11 + 2.38386446186622 * H12 + 
-2.42409896638067 * H13 + -2.19084949788904 * H14 + -0.380575449439 * H15 + 1.17350595805971 * 
H16 ;
170454    +   P_DepVar1  =    -1.70154799161574 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.70154799161574 + P_DepVar1 ;
170455    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
170456    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
170457    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
170458    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
170459    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
170460    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
170461    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
170462    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
170463    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
170464    +END;
MPRINT(EM_DIAGRAM):   END;
170465    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
170466    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
170467    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
170468    +END;
MPRINT(EM_DIAGRAM):   END;
170469    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
170470    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
170471    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
170472    +END;
MPRINT(EM_DIAGRAM):   END;
170473    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
170474    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
170475    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
170476    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
170477    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
170478    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
170479    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
170480    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170481    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
170482    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170483    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
170484    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
170485    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
170486    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
170487    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
170488    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
170489    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
170490    +END;
MPRINT(EM_DIAGRAM):   END;
170491    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
170492    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
170493    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
170494    +drop
170495    +H11
170496    +H12
170497    +H13
170498    +H14
170499    +H15
170500    +H16
170501    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
170502    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
170503     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL41_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
170504     quit;
170505     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
170506     filename emflow
170506   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural41: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170507     *------------------------------------------------------------*;
170508     * Neural41: Scoring VALIDATE data;
170509     *------------------------------------------------------------*;
170510     data EMWS8.Neural41_VALIDATE
170511     / view=EMWS8.Neural41_VALIDATE
170512     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural41_VALIDATE / view=EMWS8.Neural41_VALIDATE ;
170513     set EMWS8.Meta3_VALIDATE
170514     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
170515     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas.
170516    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
170517    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
170518    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
170519    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
170520    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
170521    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
170522    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
170523    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
170524    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
170525    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
170526    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
170527    +LENGTH _WARN_ $4
170528    +      F_DepVar  $ 12
170529    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
170530    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
170531    +
170532    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
170533    +
170534    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
170535    +
170536    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
170537    +
170538    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
170539    +
170540    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
170541    +
170542    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
170543    +
170544    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
170545    +
170546    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
170547    +
170548    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
170549    +
170550    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
170551    +
170552    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
170553    +
170554    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
170555    +
170556    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
170557    +
170558    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
170559    +
170560    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
170561    +
170562    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
170563    +
170564    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
170565    +
170566    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
170567    +
170568    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
170569    +
170570    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
170571    +
170572    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
170573    +
170574    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
170575    +
170576    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
170577    +
170578    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
170579    +
170580    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
170581    +
170582    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
170583    +
170584    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
170585    +
170586    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
170587    +
170588    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
170589    +
170590    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
170591    +
170592    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
170593    +
170594    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
170595    +
170596    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
170597    +
170598    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
170599    +
170600    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
170601    +
170602    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
170603    +
170604    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
170605    +
170606    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
170607    +
170608    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
170609    +
170610    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
170611    +
170612    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
170613    +
170614    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
170615    +
170616    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
170617    +
170618    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
170619    +
170620    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
170621    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
170622    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
170623    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
170624    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170625    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170626    +end;
MPRINT(EM_DIAGRAM):   end;
170627    +else do;
MPRINT(EM_DIAGRAM):   else do;
170628    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
170629    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
170630    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170631    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
170632    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
170633    +   end;
MPRINT(EM_DIAGRAM):   end;
170634    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
170635    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
170636    +   end;
MPRINT(EM_DIAGRAM):   end;
170637    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170638    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
170639    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170640    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170641    +   end;
MPRINT(EM_DIAGRAM):   end;
170642    +end;
MPRINT(EM_DIAGRAM):   end;
170643    +
170644    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
170645    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
170646    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
170647    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
170648    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170649    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170650    +end;
MPRINT(EM_DIAGRAM):   end;
170651    +else do;
MPRINT(EM_DIAGRAM):   else do;
170652    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
170653    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
170654    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170655    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
170656    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
170657    +   end;
MPRINT(EM_DIAGRAM):   end;
170658    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
170659    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
170660    +   end;
MPRINT(EM_DIAGRAM):   end;
170661    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170662    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
170663    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170664    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170665    +   end;
MPRINT(EM_DIAGRAM):   end;
170666    +end;
MPRINT(EM_DIAGRAM):   end;
170667    +
170668    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
170669    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
170670    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
170671    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
170672    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170673    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170674    +end;
MPRINT(EM_DIAGRAM):   end;
170675    +else do;
MPRINT(EM_DIAGRAM):   else do;
170676    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
170677    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
170678    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170679    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
170680    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
170681    +   end;
MPRINT(EM_DIAGRAM):   end;
170682    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
170683    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
170684    +   end;
MPRINT(EM_DIAGRAM):   end;
170685    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170686    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
170687    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170688    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170689    +   end;
MPRINT(EM_DIAGRAM):   end;
170690    +end;
MPRINT(EM_DIAGRAM):   end;
170691    +
170692    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
170693    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
170694    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
170695    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
170696    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170697    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170698    +end;
MPRINT(EM_DIAGRAM):   end;
170699    +else do;
MPRINT(EM_DIAGRAM):   else do;
170700    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
170701    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
170702    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170703    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
170704    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
170705    +   end;
MPRINT(EM_DIAGRAM):   end;
170706    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
170707    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
170708    +   end;
MPRINT(EM_DIAGRAM):   end;
170709    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170710    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
170711    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170712    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170713    +   end;
MPRINT(EM_DIAGRAM):   end;
170714    +end;
MPRINT(EM_DIAGRAM):   end;
170715    +
170716    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
170717    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
170718    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
170719    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
170720    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170721    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170722    +end;
MPRINT(EM_DIAGRAM):   end;
170723    +else do;
MPRINT(EM_DIAGRAM):   else do;
170724    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
170725    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
170726    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170727    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
170728    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
170729    +   end;
MPRINT(EM_DIAGRAM):   end;
170730    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
170731    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
170732    +   end;
MPRINT(EM_DIAGRAM):   end;
170733    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170734    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
170735    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170736    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170737    +   end;
MPRINT(EM_DIAGRAM):   end;
170738    +end;
MPRINT(EM_DIAGRAM):   end;
170739    +
170740    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
170741    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
170742    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
170743    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
170744    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170745    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170746    +end;
MPRINT(EM_DIAGRAM):   end;
170747    +else do;
MPRINT(EM_DIAGRAM):   else do;
170748    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
170749    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
170750    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170751    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
170752    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
170753    +   end;
MPRINT(EM_DIAGRAM):   end;
170754    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
170755    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
170756    +   end;
MPRINT(EM_DIAGRAM):   end;
170757    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170758    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
170759    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170760    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170761    +   end;
MPRINT(EM_DIAGRAM):   end;
170762    +end;
MPRINT(EM_DIAGRAM):   end;
170763    +
170764    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
170765    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
170766    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
170767    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
170768    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170769    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170770    +end;
MPRINT(EM_DIAGRAM):   end;
170771    +else do;
MPRINT(EM_DIAGRAM):   else do;
170772    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
170773    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
170774    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170775    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
170776    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
170777    +   end;
MPRINT(EM_DIAGRAM):   end;
170778    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
170779    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
170780    +   end;
MPRINT(EM_DIAGRAM):   end;
170781    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170782    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
170783    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170784    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170785    +   end;
MPRINT(EM_DIAGRAM):   end;
170786    +end;
MPRINT(EM_DIAGRAM):   end;
170787    +
170788    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
170789    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
170790    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
170791    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
170792    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
170793    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
170794    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
170795    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
170796    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
170797    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
170798    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
170799    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
170800    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170801    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170802    +end;
MPRINT(EM_DIAGRAM):   end;
170803    +else do;
MPRINT(EM_DIAGRAM):   else do;
170804    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
170805    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
170806    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170807    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
170808    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
170809    +   end;
MPRINT(EM_DIAGRAM):   end;
170810    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
170811    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
170812    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
170813    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
170814    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
170815    +   end;
MPRINT(EM_DIAGRAM):   end;
170816    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
170817    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
170818    +   end;
MPRINT(EM_DIAGRAM):   end;
170819    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
170820    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
170821    +   end;
MPRINT(EM_DIAGRAM):   end;
170822    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
170823    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
170824    +   end;
MPRINT(EM_DIAGRAM):   end;
170825    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170826    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
170827    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
170828    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
170829    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
170830    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170831    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170832    +   end;
MPRINT(EM_DIAGRAM):   end;
170833    +end;
MPRINT(EM_DIAGRAM):   end;
170834    +
170835    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
170836    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
170837    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
170838    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
170839    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
170840    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
170841    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
170842    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
170843    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
170844    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
170845    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
170846    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
170847    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
170848    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170849    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170850    +end;
MPRINT(EM_DIAGRAM):   end;
170851    +else do;
MPRINT(EM_DIAGRAM):   else do;
170852    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
170853    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
170854    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170855    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
170856    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
170857    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
170858    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
170859    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
170860    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170861    +         end;
MPRINT(EM_DIAGRAM):   end;
170862    +         else do;
MPRINT(EM_DIAGRAM):   else do;
170863    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
170864    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
170865    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170866    +            end;
MPRINT(EM_DIAGRAM):   end;
170867    +         end;
MPRINT(EM_DIAGRAM):   end;
170868    +      end;
MPRINT(EM_DIAGRAM):   end;
170869    +      else do;
MPRINT(EM_DIAGRAM):   else do;
170870    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
170871    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
170872    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170873    +         end;
MPRINT(EM_DIAGRAM):   end;
170874    +      end;
MPRINT(EM_DIAGRAM):   end;
170875    +   end;
MPRINT(EM_DIAGRAM):   end;
170876    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170877    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
170878    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
170879    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170880    +      end;
MPRINT(EM_DIAGRAM):   end;
170881    +      else do;
MPRINT(EM_DIAGRAM):   else do;
170882    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
170883    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
170884    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
170885    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
170886    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
170887    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170888    +         end;
MPRINT(EM_DIAGRAM):   end;
170889    +      end;
MPRINT(EM_DIAGRAM):   end;
170890    +   end;
MPRINT(EM_DIAGRAM):   end;
170891    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
170892    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
170893    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
170894    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
170895    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
170896    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170897    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170898    +   end;
MPRINT(EM_DIAGRAM):   end;
170899    +end;
MPRINT(EM_DIAGRAM):   end;
170900    +
170901    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170902    +*** Checking missing input Interval
170903    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
170904    +
170905    +IF NMISS(
170906    +   AcceptedCmpTotal ,
170907    +   Age ,
170908    +   Frq ,
170909    +   Income ,
170910    +   Kidhome ,
170911    +   MntFishProducts ,
170912    +   MntFruits ,
170913    +   MntGoldProds ,
170914    +   MntSweetProducts ,
170915    +   MonthsAsCustomer ,
170916    +   NumDealsPurchases ,
170917    +   NumWebVisitsMonth ,
170918    +   RFMstat ,
170919    +   RMntFrq ,
170920    +   Recency ,
170921    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
170922    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
170923    +
170924    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170925    +END;
MPRINT(EM_DIAGRAM):   END;
170926    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170927    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
170928    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170929    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
170930    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
170931    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
170932    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
170933    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
170934    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
170935    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
170936    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
170937    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
170938    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
170939    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
170940    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
170941    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
170942    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
170943    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
170944    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
170945    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
170946    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
170947    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
170948    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
170949    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
170950    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
170951    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
170952    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
170953    +END;
MPRINT(EM_DIAGRAM):   END;
170954    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
170955    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
170956    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
170957    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
170958    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
170959    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
170960    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
170961    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
170962    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
170963    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
170964    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
170965    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
170966    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
170967    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
170968    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
170969    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
170970    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
170971    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
170972    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
170973    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
170974    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
170975    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
170976    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
170977    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
170978    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
170979    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
170980    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
170981    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
170982    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
170983    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
170984    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
170985    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
170986    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
170987    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
170988    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
170989    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
170990    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
170991    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
170992    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
170993    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
170994    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
170995    +END;
MPRINT(EM_DIAGRAM):   END;
170996    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170997    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
170998    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170999    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171000    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
171001    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171002    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171003    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
171004    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171005    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
171006    +   H11  =     0.00008202203841 * S_AcceptedCmpTotal  +    -0.13126483592154 *
171007    +        S_Age  +    -0.18503379491116 * S_Frq  +      0.0037482920266 *
171008    +        S_Income  +    -0.52684337240504 * S_Kidhome
171009    +          +     0.07835956947085 * S_MntFishProducts
171010    +          +    -0.04668308882455 * S_MntFruits  +     0.05311471984852 *
171011    +        S_MntGoldProds  +    -0.39576933150762 * S_MntSweetProducts
171012    +          +    -0.44463888327841 * S_MonthsAsCustomer
171013    +          +    -0.20310227710644 * S_NumDealsPurchases
171014    +          +     0.06594467408568 * S_NumWebVisitsMonth
171015    +          +      0.1351556470497 * S_RFMstat  +    -0.29446460505048 *
171016    +        S_RMntFrq  +    -0.68878207173764 * S_Recency
171017    +          +    -0.29241927123525 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00008202203841 * S_AcceptedCmpTotal + -0.13126483592154 * S_Age 
+ -0.18503379491116 * S_Frq + 0.0037482920266 * S_Income + -0.52684337240504 * S_Kidhome + 
0.07835956947085 * S_MntFishProducts + -0.04668308882455 * S_MntFruits + 0.05311471984852 * 
S_MntGoldProds + -0.39576933150762 * S_MntSweetProducts + -0.44463888327841 * 
S_MonthsAsCustomer + -0.20310227710644 * S_NumDealsPurchases + 0.06594467408568 * 
S_NumWebVisitsMonth + 0.1351556470497 * S_RFMstat + -0.29446460505048 * S_RMntFrq + 
-0.68878207173764 * S_Recency + -0.29241927123525 * S_Teenhome ;
171018    +   H12  =     0.38864749644126 * S_AcceptedCmpTotal  +    -0.01077611135972 *
171019    +        S_Age  +     0.24187074268223 * S_Frq  +     0.64180191864108 *
171020    +        S_Income  +     0.91025818069308 * S_Kidhome
171021    +          +     0.26585860774761 * S_MntFishProducts
171022    +          +     -0.3087386188037 * S_MntFruits  +     0.14643568534568 *
171023    +        S_MntGoldProds  +     0.23763200275034 * S_MntSweetProducts
171024    +          +    -0.12421403342454 * S_MonthsAsCustomer
171025    +          +     0.66931066909347 * S_NumDealsPurchases
171026    +          +     0.35050056776957 * S_NumWebVisitsMonth
171027    +          +     0.16127659142199 * S_RFMstat  +     0.04112742589329 *
171028    +        S_RMntFrq  +    -0.83075146355987 * S_Recency
171029    +          +    -0.37723917156575 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.38864749644126 * S_AcceptedCmpTotal + -0.01077611135972 * S_Age 
+ 0.24187074268223 * S_Frq + 0.64180191864108 * S_Income + 0.91025818069308 * S_Kidhome + 
0.26585860774761 * S_MntFishProducts + -0.3087386188037 * S_MntFruits + 0.14643568534568 * 
S_MntGoldProds + 0.23763200275034 * S_MntSweetProducts + -0.12421403342454 * 
S_MonthsAsCustomer + 0.66931066909347 * S_NumDealsPurchases + 0.35050056776957 * 
S_NumWebVisitsMonth + 0.16127659142199 * S_RFMstat + 0.04112742589329 * S_RMntFrq + 
-0.83075146355987 * S_Recency + -0.37723917156575 * S_Teenhome ;
171030    +   H13  =     0.02339384767281 * S_AcceptedCmpTotal  +    -0.17700567590774 *
171031    +        S_Age  +    -0.38060509731554 * S_Frq  +    -0.86026143079344 *
171032    +        S_Income  +     0.63027536562783 * S_Kidhome
171033    +          +     0.15303249164566 * S_MntFishProducts
171034    +          +    -0.04780128957622 * S_MntFruits  +    -0.02064261038049 *
171035    +        S_MntGoldProds  +     0.26238383938455 * S_MntSweetProducts
171036    +          +    -0.21006970062531 * S_MonthsAsCustomer
171037    +          +      0.2955774677605 * S_NumDealsPurchases
171038    +          +    -0.15769947513958 * S_NumWebVisitsMonth
171039    +          +    -0.02874776268384 * S_RFMstat  +     -0.3955429869434 *
171040    +        S_RMntFrq  +      0.3744122250079 * S_Recency
171041    +          +     0.58295521976226 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.02339384767281 * S_AcceptedCmpTotal + -0.17700567590774 * S_Age 
+ -0.38060509731554 * S_Frq + -0.86026143079344 * S_Income + 0.63027536562783 * S_Kidhome + 
0.15303249164566 * S_MntFishProducts + -0.04780128957622 * S_MntFruits + -0.02064261038049 * 
S_MntGoldProds + 0.26238383938455 * S_MntSweetProducts + -0.21006970062531 * 
S_MonthsAsCustomer + 0.2955774677605 * S_NumDealsPurchases + -0.15769947513958 * 
S_NumWebVisitsMonth + -0.02874776268384 * S_RFMstat + -0.3955429869434 * S_RMntFrq + 
0.3744122250079 * S_Recency + 0.58295521976226 * S_Teenhome ;
171042    +   H14  =    -0.22800152627721 * S_AcceptedCmpTotal  +     0.27991667815594 *
171043    +        S_Age  +     0.89001922321833 * S_Frq  +     0.17467731177386 *
171044    +        S_Income  +    -0.00985947331416 * S_Kidhome
171045    +          +    -0.27114701164817 * S_MntFishProducts
171046    +          +     0.32554392037328 * S_MntFruits  +     0.06705670808471 *
171047    +        S_MntGoldProds  +     -0.3590087223323 * S_MntSweetProducts
171048    +          +    -0.02702818828921 * S_MonthsAsCustomer
171049    +          +    -0.63381188911946 * S_NumDealsPurchases
171050    +          +    -0.86143000704363 * S_NumWebVisitsMonth
171051    +          +    -0.16788755655818 * S_RFMstat  +    -0.09712800982817 *
171052    +        S_RMntFrq  +     0.61892338869919 * S_Recency
171053    +          +    -0.21544816860839 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.22800152627721 * S_AcceptedCmpTotal + 0.27991667815594 * S_Age 
+ 0.89001922321833 * S_Frq + 0.17467731177386 * S_Income + -0.00985947331416 * S_Kidhome + 
-0.27114701164817 * S_MntFishProducts + 0.32554392037328 * S_MntFruits + 0.06705670808471 * 
S_MntGoldProds + -0.3590087223323 * S_MntSweetProducts + -0.02702818828921 * 
S_MonthsAsCustomer + -0.63381188911946 * S_NumDealsPurchases + -0.86143000704363 * 
S_NumWebVisitsMonth + -0.16788755655818 * S_RFMstat + -0.09712800982817 * S_RMntFrq + 
0.61892338869919 * S_Recency + -0.21544816860839 * S_Teenhome ;
171054    +   H15  =      0.0846389232492 * S_AcceptedCmpTotal  +    -0.03933692648164 *
171055    +        S_Age  +     0.26004669807852 * S_Frq  +     0.30306661543325 *
171056    +        S_Income  +    -0.24206929946772 * S_Kidhome
171057    +          +    -0.19039689229491 * S_MntFishProducts
171058    +          +    -0.22957509816007 * S_MntFruits  +    -0.35006912387254 *
171059    +        S_MntGoldProds  +    -0.02737135204648 * S_MntSweetProducts
171060    +          +     0.03815221487927 * S_MonthsAsCustomer
171061    +          +    -0.43579024169696 * S_NumDealsPurchases
171062    +          +    -0.27796253880432 * S_NumWebVisitsMonth
171063    +          +     0.15010895791429 * S_RFMstat  +     0.24377797912725 *
171064    +        S_RMntFrq  +     0.50547916383425 * S_Recency
171065    +          +    -0.22622962943787 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.0846389232492 * S_AcceptedCmpTotal + -0.03933692648164 * S_Age + 
0.26004669807852 * S_Frq + 0.30306661543325 * S_Income + -0.24206929946772 * S_Kidhome + 
-0.19039689229491 * S_MntFishProducts + -0.22957509816007 * S_MntFruits + -0.35006912387254 * 
S_MntGoldProds + -0.02737135204648 * S_MntSweetProducts + 0.03815221487927 * 
S_MonthsAsCustomer + -0.43579024169696 * S_NumDealsPurchases + -0.27796253880432 * 
S_NumWebVisitsMonth + 0.15010895791429 * S_RFMstat + 0.24377797912725 * S_RMntFrq + 
0.50547916383425 * S_Recency + -0.22622962943787 * S_Teenhome ;
171066    +   H16  =     0.03788304209102 * S_AcceptedCmpTotal  +    -0.27022676521755 *
171067    +        S_Age  +    -0.17480141247917 * S_Frq  +     0.53345624791204 *
171068    +        S_Income  +    -0.25736924536467 * S_Kidhome
171069    +          +    -0.04400855145817 * S_MntFishProducts
171070    +          +    -0.06651358259718 * S_MntFruits  +     -0.0117104183032 *
171071    +        S_MntGoldProds  +    -0.02790266219853 * S_MntSweetProducts
171072    +          +     0.00265986106691 * S_MonthsAsCustomer
171073    +          +     0.27331919080312 * S_NumDealsPurchases
171074    +          +     0.22836119952787 * S_NumWebVisitsMonth
171075    +          +     0.09245783028838 * S_RFMstat  +     0.10223459152488 *
171076    +        S_RMntFrq  +    -0.90398250269857 * S_Recency
171077    +          +     -0.2621421532112 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.03788304209102 * S_AcceptedCmpTotal + -0.27022676521755 * S_Age 
+ -0.17480141247917 * S_Frq + 0.53345624791204 * S_Income + -0.25736924536467 * S_Kidhome + 
-0.04400855145817 * S_MntFishProducts + -0.06651358259718 * S_MntFruits + -0.0117104183032 * 
S_MntGoldProds + -0.02790266219853 * S_MntSweetProducts + 0.00265986106691 * 
S_MonthsAsCustomer + 0.27331919080312 * S_NumDealsPurchases + 0.22836119952787 * 
S_NumWebVisitsMonth + 0.09245783028838 * S_RFMstat + 0.10223459152488 * S_RMntFrq + 
-0.90398250269857 * S_Recency + -0.2621421532112 * S_Teenhome ;
171078    +   H11  = H11  +     0.24155985997122 * AcceptedCmp10
171079    +          +     0.02727843300562 * AcceptedCmp20  +     0.05990453920581 *
171080    +        AcceptedCmp30  +    -0.43469138041411 * AcceptedCmp40
171081    +          +     0.00076050589964 * AcceptedCmp50  +     0.43307119233671 *
171082    +        Complain0  +     0.23242177664865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.24155985997122 * AcceptedCmp10 + 0.02727843300562 * 
AcceptedCmp20 + 0.05990453920581 * AcceptedCmp30 + -0.43469138041411 * AcceptedCmp40 + 
0.00076050589964 * AcceptedCmp50 + 0.43307119233671 * Complain0 + 0.23242177664865 * 
HigherEducationBinary0 ;
171083    +   H12  = H12  +     0.04034689771488 * AcceptedCmp10
171084    +          +    -0.01358747117911 * AcceptedCmp20  +    -0.29883922116453 *
171085    +        AcceptedCmp30  +     0.58794258522438 * AcceptedCmp40
171086    +          +    -0.40659406037079 * AcceptedCmp50  +     0.59068991602469 *
171087    +        Complain0  +     -0.3122461557933 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04034689771488 * AcceptedCmp10 + -0.01358747117911 * 
AcceptedCmp20 + -0.29883922116453 * AcceptedCmp30 + 0.58794258522438 * AcceptedCmp40 + 
-0.40659406037079 * AcceptedCmp50 + 0.59068991602469 * Complain0 + -0.3122461557933 * 
HigherEducationBinary0 ;
171088    +   H13  = H13  +     0.49941486221932 * AcceptedCmp10
171089    +          +     0.42891153022885 * AcceptedCmp20  +     0.28744085742243 *
171090    +        AcceptedCmp30  +     0.54657253664873 * AcceptedCmp40
171091    +          +     0.10655487579255 * AcceptedCmp50  +     0.11223153893952 *
171092    +        Complain0  +    -0.44704943665138 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.49941486221932 * AcceptedCmp10 + 0.42891153022885 * 
AcceptedCmp20 + 0.28744085742243 * AcceptedCmp30 + 0.54657253664873 * AcceptedCmp40 + 
0.10655487579255 * AcceptedCmp50 + 0.11223153893952 * Complain0 + -0.44704943665138 * 
HigherEducationBinary0 ;
171093    +   H14  = H14  +     0.70510583713907 * AcceptedCmp10
171094    +          +     0.04052111261969 * AcceptedCmp20  +     0.76301816100625 *
171095    +        AcceptedCmp30  +     0.09753552533639 * AcceptedCmp40
171096    +          +     0.40999088454383 * AcceptedCmp50  +     0.19278448059725 *
171097    +        Complain0  +     0.09127136236268 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.70510583713907 * AcceptedCmp10 + 0.04052111261969 * 
AcceptedCmp20 + 0.76301816100625 * AcceptedCmp30 + 0.09753552533639 * AcceptedCmp40 + 
0.40999088454383 * AcceptedCmp50 + 0.19278448059725 * Complain0 + 0.09127136236268 * 
HigherEducationBinary0 ;
171098    +   H15  = H15  +     0.30535300313392 * AcceptedCmp10
171099    +          +    -0.01605332227631 * AcceptedCmp20  +     0.09278623651632 *
171100    +        AcceptedCmp30  +     0.03468239765482 * AcceptedCmp40
171101    +          +     0.19720723485806 * AcceptedCmp50  +    -0.32364247007443 *
171102    +        Complain0  +    -0.20695533150084 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30535300313392 * AcceptedCmp10 + -0.01605332227631 * 
AcceptedCmp20 + 0.09278623651632 * AcceptedCmp30 + 0.03468239765482 * AcceptedCmp40 + 
0.19720723485806 * AcceptedCmp50 + -0.32364247007443 * Complain0 + -0.20695533150084 * 
HigherEducationBinary0 ;
171103    +   H16  = H16  +    -0.19354253973215 * AcceptedCmp10
171104    +          +     0.01566685138596 * AcceptedCmp20  +    -0.28250218144785 *
171105    +        AcceptedCmp30  +    -0.13118265240955 * AcceptedCmp40
171106    +          +    -0.03808858956936 * AcceptedCmp50  +    -0.19850701105147 *
171107    +        Complain0  +     0.14297616111345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.19354253973215 * AcceptedCmp10 + 0.01566685138596 * 
AcceptedCmp20 + -0.28250218144785 * AcceptedCmp30 + -0.13118265240955 * AcceptedCmp40 + 
-0.03808858956936 * AcceptedCmp50 + -0.19850701105147 * Complain0 + 0.14297616111345 * 
HigherEducationBinary0 ;
171108    +   H11  = H11  +     0.05082493200436 * Education2n_Cycle
171109    +          +    -0.08192239267323 * EducationBasic  +    -0.01445849926378 *
171110    +        EducationGraduation  +     0.01459143816519 * EducationMaster
171111    +          +     0.12502276672336 * Marital_StatusDivorced
171112    +          +    -0.02606508453741 * Marital_StatusMarried
171113    +          +      0.0418850245266 * Marital_StatusSingle
171114    +          +     0.02050996572132 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05082493200436 * Education2n_Cycle + -0.08192239267323 * 
EducationBasic + -0.01445849926378 * EducationGraduation + 0.01459143816519 * EducationMaster 
+ 0.12502276672336 * Marital_StatusDivorced + -0.02606508453741 * Marital_StatusMarried + 
0.0418850245266 * Marital_StatusSingle + 0.02050996572132 * Marital_StatusTogether ;
171115    +   H12  = H12  +     -0.1900759238575 * Education2n_Cycle
171116    +          +     0.13535241443003 * EducationBasic  +    -0.00199771592906 *
171117    +        EducationGraduation  +     0.00476193515914 * EducationMaster
171118    +          +      0.1943860669795 * Marital_StatusDivorced
171119    +          +     -0.1529596261268 * Marital_StatusMarried
171120    +          +     0.24187461301348 * Marital_StatusSingle
171121    +          +     0.09157538589749 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1900759238575 * Education2n_Cycle + 0.13535241443003 * 
EducationBasic + -0.00199771592906 * EducationGraduation + 0.00476193515914 * EducationMaster 
+ 0.1943860669795 * Marital_StatusDivorced + -0.1529596261268 * Marital_StatusMarried + 
0.24187461301348 * Marital_StatusSingle + 0.09157538589749 * Marital_StatusTogether ;
171122    +   H13  = H13  +     0.02140936656506 * Education2n_Cycle
171123    +          +     0.05845427475503 * EducationBasic  +    -0.44298208278895 *
171124    +        EducationGraduation  +     0.17149477011717 * EducationMaster
171125    +          +    -0.19677652422622 * Marital_StatusDivorced
171126    +          +     0.75897106429478 * Marital_StatusMarried
171127    +          +    -0.66692260284833 * Marital_StatusSingle
171128    +          +     0.58287349221333 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02140936656506 * Education2n_Cycle + 0.05845427475503 * 
EducationBasic + -0.44298208278895 * EducationGraduation + 0.17149477011717 * EducationMaster 
+ -0.19677652422622 * Marital_StatusDivorced + 0.75897106429478 * Marital_StatusMarried + 
-0.66692260284833 * Marital_StatusSingle + 0.58287349221333 * Marital_StatusTogether ;
171129    +   H14  = H14  +     0.18801855635785 * Education2n_Cycle
171130    +          +    -0.06231007239836 * EducationBasic  +    -0.26915940640311 *
171131    +        EducationGraduation  +    -0.30689797876717 * EducationMaster
171132    +          +    -0.18964222971122 * Marital_StatusDivorced
171133    +          +    -0.15222045956879 * Marital_StatusMarried
171134    +          +     0.15455795695595 * Marital_StatusSingle
171135    +          +    -0.04060840399479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18801855635785 * Education2n_Cycle + -0.06231007239836 * 
EducationBasic + -0.26915940640311 * EducationGraduation + -0.30689797876717 * EducationMaster 
+ -0.18964222971122 * Marital_StatusDivorced + -0.15222045956879 * Marital_StatusMarried + 
0.15455795695595 * Marital_StatusSingle + -0.04060840399479 * Marital_StatusTogether ;
171136    +   H15  = H15  +    -0.12131367369042 * Education2n_Cycle
171137    +          +     0.20547688844423 * EducationBasic  +     0.04965529549437 *
171138    +        EducationGraduation  +    -0.21811990669176 * EducationMaster
171139    +          +    -0.10122776921995 * Marital_StatusDivorced
171140    +          +     0.14126755564161 * Marital_StatusMarried
171141    +          +    -0.18463644418978 * Marital_StatusSingle
171142    +          +     0.23071597384519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.12131367369042 * Education2n_Cycle + 0.20547688844423 * 
EducationBasic + 0.04965529549437 * EducationGraduation + -0.21811990669176 * EducationMaster 
+ -0.10122776921995 * Marital_StatusDivorced + 0.14126755564161 * Marital_StatusMarried + 
-0.18463644418978 * Marital_StatusSingle + 0.23071597384519 * Marital_StatusTogether ;
171143    +   H16  = H16  +     0.02961881390411 * Education2n_Cycle
171144    +          +    -0.46228434914367 * EducationBasic  +    -0.08513280071643 *
171145    +        EducationGraduation  +    -0.20159542694386 * EducationMaster
171146    +          +     0.05009431660662 * Marital_StatusDivorced
171147    +          +    -0.38407798045329 * Marital_StatusMarried
171148    +          +      0.3035257398654 * Marital_StatusSingle
171149    +          +    -0.27725923319119 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02961881390411 * Education2n_Cycle + -0.46228434914367 * 
EducationBasic + -0.08513280071643 * EducationGraduation + -0.20159542694386 * EducationMaster 
+ 0.05009431660662 * Marital_StatusDivorced + -0.38407798045329 * Marital_StatusMarried + 
0.3035257398654 * Marital_StatusSingle + -0.27725923319119 * Marital_StatusTogether ;
171150    +   H11  =      1.3960587011002 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.3960587011002 + H11 ;
171151    +   H12  =     0.18947019063375 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.18947019063375 + H12 ;
171152    +   H13  =     0.55907472867898 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.55907472867898 + H13 ;
171153    +   H14  =     0.28336290184268 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.28336290184268 + H14 ;
171154    +   H15  =     1.08919536550159 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.08919536550159 + H15 ;
171155    +   H16  =    -0.22538308534609 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.22538308534609 + H16 ;
171156    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
171157    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
171158    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
171159    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
171160    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
171161    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
171162    +END;
MPRINT(EM_DIAGRAM):   END;
171163    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
171164    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
171165    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
171166    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
171167    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
171168    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
171169    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
171170    +END;
MPRINT(EM_DIAGRAM):   END;
171171    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171172    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
171173    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171174    +
171175    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
171176    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
171177    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
171178    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
171179    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
171180    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
171181    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
171182    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
171183    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
171184    +end;
MPRINT(EM_DIAGRAM):   end;
171185    +else do;
MPRINT(EM_DIAGRAM):   else do;
171186    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
171187    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
171188    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
171189    +   end;
MPRINT(EM_DIAGRAM):   end;
171190    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
171191    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
171192    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
171193    +   end;
MPRINT(EM_DIAGRAM):   end;
171194    +   else do;
MPRINT(EM_DIAGRAM):   else do;
171195    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
171196    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
171197    +   end;
MPRINT(EM_DIAGRAM):   end;
171198    +end;
MPRINT(EM_DIAGRAM):   end;
171199    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
171200    +   P_DepVar1  =      1.1921632715983 * H11  +     2.38386446186622 * H12
171201    +          +    -2.42409896638067 * H13  +    -2.19084949788904 * H14
171202    +          +      -0.380575449439 * H15  +     1.17350595805971 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.1921632715983 * H11 + 2.38386446186622 * H12 + 
-2.42409896638067 * H13 + -2.19084949788904 * H14 + -0.380575449439 * H15 + 1.17350595805971 * 
H16 ;
171203    +   P_DepVar1  =    -1.70154799161574 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.70154799161574 + P_DepVar1 ;
171204    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
171205    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
171206    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
171207    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
171208    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
171209    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
171210    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
171211    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
171212    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
171213    +END;
MPRINT(EM_DIAGRAM):   END;
171214    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
171215    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
171216    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
171217    +END;
MPRINT(EM_DIAGRAM):   END;
171218    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
171219    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
171220    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
171221    +END;
MPRINT(EM_DIAGRAM):   END;
171222    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
171223    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
171224    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
171225    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
171226    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
171227    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
171228    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
171229    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171230    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
171231    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171232    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
171233    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
171234    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
171235    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
171236    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
171237    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
171238    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
171239    +END;
MPRINT(EM_DIAGRAM):   END;
171240    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
171241    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
171242    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
171243    +drop
171244    +H11
171245    +H12
171246    +H13
171247    +H14
171248    +H15
171249    +H16
171250    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
171251    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
171252     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL41_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
171253     quit;
171254     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
171255     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
171256     * Neural41: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural41: Computing metadata for TRAIN data;
171257     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL41_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural41_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural41_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural41_TRAIN out=WORK.M11N3O6T noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M11N3O6T;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M11N3O6T(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M11N3O6T;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M11N3O6T;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2HU32D9 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2HU32D9;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2HU32D9;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M39Q8MPR(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2HU32D9;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2HU32D9;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2HU32D9;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2HU32D9;
MPRINT(EMADVISECOLUMNS):   set WORK.M2HU32D9;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural41_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural41";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural41";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural41: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
171569     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
171570     set EMWS8.Neural41_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural41_EMINFO;
171571     where DATA='Neural41' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural41' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
171572     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL41_EMINFO.
      WHERE (DATA='Neural41') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

171573     data EMWS8.Neural41_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural41_EMINFO;
171574     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
171575     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
171576     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL41_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
171580     run;
171581     data EMWS8.Neural41_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural41_EMINFO;
171582     set EMWS8.Neural41_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural41_EMINFO WORK.MODELTEMP_INFO;
171583     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL41_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL41_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

171584     proc sort data = EMWS8.Neural41_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural41_EMINFO NOTHREADS;
171585     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
171586     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL41_EMINFO.
NOTE: The data set EMWS8.NEURAL41_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

171587     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
171588     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
171589     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

171590     proc sort data = EMWS8.Neural41_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural41_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
171591     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
171592     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL41_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

171593     data EMWS8.Neural41_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural41_EMINFO;
171594     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
171595     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
171596     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL41_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

171597     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
171598     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
171599     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
171600     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL41_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL41_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
