MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.55 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.55 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1ZF40ST 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1ZF40ST new;
MPRINT(EM_DIAGRAM):   run;
1154404    data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
1154405    set EMWS8.Neural41_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural41_OUTKEY;
1154406    if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
1154407    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 49 observations read from the data set EMWS8.NEURAL41_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1154408    filename emflow
1154408  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural41: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154409    *------------------------------------------------------------*;
1154410    * Neural41: Scoring DATA data;
1154411    *------------------------------------------------------------*;
1154412    data EMWS8.Neural41_TRAIN
1154413    / view=EMWS8.Neural41_TRAIN
1154414    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural41_TRAIN / view=EMWS8.Neural41_TRAIN ;
1154415    set EMWS8.Meta3_TRAIN
1154416    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
1154417    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas.
1154418   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1154419   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1154420   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1154421   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1154422   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1154423   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1154424   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1154425   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1154426   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1154427   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1154428   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1154429   +LENGTH _WARN_ $4
1154430   +      F_DepVar  $ 12
1154431   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1154432   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1154433   +
1154434   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1154435   +
1154436   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1154437   +
1154438   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1154439   +
1154440   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1154441   +
1154442   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1154443   +
1154444   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1154445   +
1154446   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1154447   +
1154448   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1154449   +
1154450   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1154451   +
1154452   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1154453   +
1154454   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1154455   +
1154456   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1154457   +
1154458   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1154459   +
1154460   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1154461   +
1154462   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1154463   +
1154464   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1154465   +
1154466   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1154467   +
1154468   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1154469   +
1154470   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1154471   +
1154472   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1154473   +
1154474   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1154475   +
1154476   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1154477   +
1154478   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1154479   +
1154480   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1154481   +
1154482   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1154483   +
1154484   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1154485   +
1154486   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1154487   +
1154488   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1154489   +
1154490   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1154491   +
1154492   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1154493   +
1154494   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1154495   +
1154496   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1154497   +
1154498   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1154499   +
1154500   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1154501   +
1154502   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1154503   +
1154504   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1154505   +
1154506   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1154507   +
1154508   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1154509   +
1154510   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1154511   +
1154512   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1154513   +
1154514   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1154515   +
1154516   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1154517   +
1154518   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1154519   +
1154520   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1154521   +
1154522   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1154523   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1154524   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1154525   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1154526   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154527   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154528   +end;
MPRINT(EM_DIAGRAM):   end;
1154529   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154530   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154531   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1154532   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154533   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154534   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1154535   +   end;
MPRINT(EM_DIAGRAM):   end;
1154536   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154537   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1154538   +   end;
MPRINT(EM_DIAGRAM):   end;
1154539   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154540   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1154541   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154542   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154543   +   end;
MPRINT(EM_DIAGRAM):   end;
1154544   +end;
MPRINT(EM_DIAGRAM):   end;
1154545   +
1154546   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1154547   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1154548   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1154549   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1154550   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154551   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154552   +end;
MPRINT(EM_DIAGRAM):   end;
1154553   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154554   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154555   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1154556   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154557   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154558   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1154559   +   end;
MPRINT(EM_DIAGRAM):   end;
1154560   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154561   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1154562   +   end;
MPRINT(EM_DIAGRAM):   end;
1154563   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154564   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1154565   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154566   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154567   +   end;
MPRINT(EM_DIAGRAM):   end;
1154568   +end;
MPRINT(EM_DIAGRAM):   end;
1154569   +
1154570   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1154571   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1154572   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1154573   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1154574   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154576   +end;
MPRINT(EM_DIAGRAM):   end;
1154577   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154578   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154579   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1154580   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154581   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154582   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1154583   +   end;
MPRINT(EM_DIAGRAM):   end;
1154584   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154585   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1154586   +   end;
MPRINT(EM_DIAGRAM):   end;
1154587   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154588   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1154589   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154590   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154591   +   end;
MPRINT(EM_DIAGRAM):   end;
1154592   +end;
MPRINT(EM_DIAGRAM):   end;
1154593   +
1154594   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1154595   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1154596   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1154597   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1154598   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154599   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154600   +end;
MPRINT(EM_DIAGRAM):   end;
1154601   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154602   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154603   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1154604   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154605   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154606   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1154607   +   end;
MPRINT(EM_DIAGRAM):   end;
1154608   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154609   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1154610   +   end;
MPRINT(EM_DIAGRAM):   end;
1154611   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154612   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1154613   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154614   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154615   +   end;
MPRINT(EM_DIAGRAM):   end;
1154616   +end;
MPRINT(EM_DIAGRAM):   end;
1154617   +
1154618   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1154619   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1154620   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1154621   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1154622   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154623   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154624   +end;
MPRINT(EM_DIAGRAM):   end;
1154625   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154626   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154627   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1154628   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154629   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154630   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1154631   +   end;
MPRINT(EM_DIAGRAM):   end;
1154632   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154633   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1154634   +   end;
MPRINT(EM_DIAGRAM):   end;
1154635   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154636   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1154637   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154638   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154639   +   end;
MPRINT(EM_DIAGRAM):   end;
1154640   +end;
MPRINT(EM_DIAGRAM):   end;
1154641   +
1154642   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1154643   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1154644   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1154645   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1154646   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154647   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154648   +end;
MPRINT(EM_DIAGRAM):   end;
1154649   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154650   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154651   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1154652   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154653   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154654   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1154655   +   end;
MPRINT(EM_DIAGRAM):   end;
1154656   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154657   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1154658   +   end;
MPRINT(EM_DIAGRAM):   end;
1154659   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154660   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1154661   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154662   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154663   +   end;
MPRINT(EM_DIAGRAM):   end;
1154664   +end;
MPRINT(EM_DIAGRAM):   end;
1154665   +
1154666   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1154667   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1154668   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1154669   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1154670   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154671   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154672   +end;
MPRINT(EM_DIAGRAM):   end;
1154673   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154674   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154675   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1154676   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154677   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1154678   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1154679   +   end;
MPRINT(EM_DIAGRAM):   end;
1154680   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1154681   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1154682   +   end;
MPRINT(EM_DIAGRAM):   end;
1154683   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154684   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1154685   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154686   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154687   +   end;
MPRINT(EM_DIAGRAM):   end;
1154688   +end;
MPRINT(EM_DIAGRAM):   end;
1154689   +
1154690   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1154691   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1154692   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1154693   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1154694   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1154695   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1154696   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1154697   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1154698   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1154699   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1154700   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1154701   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1154702   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154703   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154704   +end;
MPRINT(EM_DIAGRAM):   end;
1154705   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154706   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1154707   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1154708   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154709   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1154710   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1154711   +   end;
MPRINT(EM_DIAGRAM):   end;
1154712   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1154713   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1154714   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1154715   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1154716   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1154717   +   end;
MPRINT(EM_DIAGRAM):   end;
1154718   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1154719   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1154720   +   end;
MPRINT(EM_DIAGRAM):   end;
1154721   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1154722   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1154723   +   end;
MPRINT(EM_DIAGRAM):   end;
1154724   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1154725   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1154726   +   end;
MPRINT(EM_DIAGRAM):   end;
1154727   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154728   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1154729   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1154730   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1154731   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1154732   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154733   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154734   +   end;
MPRINT(EM_DIAGRAM):   end;
1154735   +end;
MPRINT(EM_DIAGRAM):   end;
1154736   +
1154737   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1154738   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1154739   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1154740   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1154741   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1154742   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1154743   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1154744   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1154745   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1154746   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1154747   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1154748   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1154749   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1154750   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154751   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154752   +end;
MPRINT(EM_DIAGRAM):   end;
1154753   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154754   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1154755   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1154756   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154757   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1154758   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1154759   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1154760   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1154761   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1154762   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154763   +         end;
MPRINT(EM_DIAGRAM):   end;
1154764   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154765   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1154766   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1154767   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154768   +            end;
MPRINT(EM_DIAGRAM):   end;
1154769   +         end;
MPRINT(EM_DIAGRAM):   end;
1154770   +      end;
MPRINT(EM_DIAGRAM):   end;
1154771   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1154772   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1154773   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1154774   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154775   +         end;
MPRINT(EM_DIAGRAM):   end;
1154776   +      end;
MPRINT(EM_DIAGRAM):   end;
1154777   +   end;
MPRINT(EM_DIAGRAM):   end;
1154778   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154779   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1154780   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1154781   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154782   +      end;
MPRINT(EM_DIAGRAM):   end;
1154783   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1154784   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1154785   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1154786   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1154787   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1154788   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1154789   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154790   +         end;
MPRINT(EM_DIAGRAM):   end;
1154791   +      end;
MPRINT(EM_DIAGRAM):   end;
1154792   +   end;
MPRINT(EM_DIAGRAM):   end;
1154793   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1154794   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1154795   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1154796   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1154797   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1154798   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154799   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154800   +   end;
MPRINT(EM_DIAGRAM):   end;
1154801   +end;
MPRINT(EM_DIAGRAM):   end;
1154802   +
1154803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154804   +*** Checking missing input Interval
1154805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1154806   +
1154807   +IF NMISS(
1154808   +   AcceptedCmpTotal ,
1154809   +   Age ,
1154810   +   Frq ,
1154811   +   Income ,
1154812   +   Kidhome ,
1154813   +   MntFishProducts ,
1154814   +   MntFruits ,
1154815   +   MntGoldProds ,
1154816   +   MntSweetProducts ,
1154817   +   MonthsAsCustomer ,
1154818   +   NumDealsPurchases ,
1154819   +   NumWebVisitsMonth ,
1154820   +   RFMstat ,
1154821   +   RMntFrq ,
1154822   +   Recency ,
1154823   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1154824   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1154825   +
1154826   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154827   +END;
MPRINT(EM_DIAGRAM):   END;
1154828   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154829   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1154830   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154831   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1154832   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1154833   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1154834   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1154835   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1154836   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1154837   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1154838   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1154839   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1154840   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1154841   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1154842   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1154843   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1154844   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1154845   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1154846   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1154847   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1154848   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1154849   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1154850   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1154851   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1154852   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1154853   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1154854   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1154855   +END;
MPRINT(EM_DIAGRAM):   END;
1154856   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1154857   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1154858   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1154859   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1154860   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1154861   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1154862   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1154863   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1154864   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1154865   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1154866   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1154867   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1154868   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1154869   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1154870   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1154871   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1154872   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1154873   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1154874   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1154875   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1154876   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1154877   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1154878   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1154879   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1154880   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1154881   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1154882   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1154883   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1154884   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1154885   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1154886   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1154887   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1154888   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1154889   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1154890   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1154891   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1154892   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1154893   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1154894   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1154895   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1154896   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1154897   +END;
MPRINT(EM_DIAGRAM):   END;
1154898   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154899   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1154900   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154902   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1154903   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154905   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1154906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154907   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1154908   +   H11  =     0.00111540513846 * S_AcceptedCmpTotal  +    -0.12971131901586 *
1154909   +        S_Age  +    -0.18520628994151 * S_Frq  +     0.00222884615859 *
1154910   +        S_Income  +    -0.52351504306035 * S_Kidhome
1154911   +          +     0.08140325105151 * S_MntFishProducts
1154912   +          +    -0.04386492140302 * S_MntFruits  +     0.05295232764925 *
1154913   +        S_MntGoldProds  +    -0.39891652227681 * S_MntSweetProducts
1154914   +          +    -0.43676985181672 * S_MonthsAsCustomer
1154915   +          +    -0.20260708598657 * S_NumDealsPurchases
1154916   +          +     0.06428019964102 * S_NumWebVisitsMonth
1154917   +          +     0.13467234938466 * S_RFMstat  +    -0.29483834428412 *
1154918   +        S_RMntFrq  +    -0.68447200324777 * S_Recency
1154919   +          +    -0.29437834033294 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00111540513846 * S_AcceptedCmpTotal + -0.12971131901586 * S_Age 
+ -0.18520628994151 * S_Frq + 0.00222884615859 * S_Income + -0.52351504306035 * S_Kidhome + 
0.08140325105151 * S_MntFishProducts + -0.04386492140302 * S_MntFruits + 0.05295232764925 * 
S_MntGoldProds + -0.39891652227681 * S_MntSweetProducts + -0.43676985181672 * 
S_MonthsAsCustomer + -0.20260708598657 * S_NumDealsPurchases + 0.06428019964102 * 
S_NumWebVisitsMonth + 0.13467234938466 * S_RFMstat + -0.29483834428412 * S_RMntFrq + 
-0.68447200324777 * S_Recency + -0.29437834033294 * S_Teenhome ;
1154920   +   H12  =     0.39213879457216 * S_AcceptedCmpTotal  +    -0.01440353989436 *
1154921   +        S_Age  +     0.23865918577825 * S_Frq  +      0.6365049428914 *
1154922   +        S_Income  +     0.91112653634925 * S_Kidhome
1154923   +          +     0.26539332041133 * S_MntFishProducts
1154924   +          +    -0.31480262631724 * S_MntFruits  +     0.14786958565778 *
1154925   +        S_MntGoldProds  +      0.2400589361571 * S_MntSweetProducts
1154926   +          +    -0.12141919451173 * S_MonthsAsCustomer
1154927   +          +     0.66105669553858 * S_NumDealsPurchases
1154928   +          +     0.35126523805992 * S_NumWebVisitsMonth
1154929   +          +     0.15877473113544 * S_RFMstat  +     0.04256559397745 *
1154930   +        S_RMntFrq  +    -0.82322754979428 * S_Recency
1154931   +          +    -0.38093159094381 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.39213879457216 * S_AcceptedCmpTotal + -0.01440353989436 * S_Age 
+ 0.23865918577825 * S_Frq + 0.6365049428914 * S_Income + 0.91112653634925 * S_Kidhome + 
0.26539332041133 * S_MntFishProducts + -0.31480262631724 * S_MntFruits + 0.14786958565778 * 
S_MntGoldProds + 0.2400589361571 * S_MntSweetProducts + -0.12141919451173 * S_MonthsAsCustomer 
+ 0.66105669553858 * S_NumDealsPurchases + 0.35126523805992 * S_NumWebVisitsMonth + 
0.15877473113544 * S_RFMstat + 0.04256559397745 * S_RMntFrq + -0.82322754979428 * S_Recency + 
-0.38093159094381 * S_Teenhome ;
1154932   +   H13  =     0.01698497071572 * S_AcceptedCmpTotal  +    -0.18194797866377 *
1154933   +        S_Age  +    -0.38541123385894 * S_Frq  +    -0.85948176553863 *
1154934   +        S_Income  +     0.62421717479738 * S_Kidhome
1154935   +          +     0.15545639003856 * S_MntFishProducts
1154936   +          +    -0.04951281670167 * S_MntFruits  +    -0.02786799666153 *
1154937   +        S_MntGoldProds  +     0.25863651263316 * S_MntSweetProducts
1154938   +          +     -0.2202976559774 * S_MonthsAsCustomer
1154939   +          +      0.2989117555747 * S_NumDealsPurchases
1154940   +          +    -0.14751065039865 * S_NumWebVisitsMonth
1154941   +          +    -0.02597231393441 * S_RFMstat  +    -0.39431255412396 *
1154942   +        S_RMntFrq  +     0.37177599027897 * S_Recency
1154943   +          +     0.58385986175941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.01698497071572 * S_AcceptedCmpTotal + -0.18194797866377 * S_Age 
+ -0.38541123385894 * S_Frq + -0.85948176553863 * S_Income + 0.62421717479738 * S_Kidhome + 
0.15545639003856 * S_MntFishProducts + -0.04951281670167 * S_MntFruits + -0.02786799666153 * 
S_MntGoldProds + 0.25863651263316 * S_MntSweetProducts + -0.2202976559774 * S_MonthsAsCustomer 
+ 0.2989117555747 * S_NumDealsPurchases + -0.14751065039865 * S_NumWebVisitsMonth + 
-0.02597231393441 * S_RFMstat + -0.39431255412396 * S_RMntFrq + 0.37177599027897 * S_Recency + 
0.58385986175941 * S_Teenhome ;
1154944   +   H14  =    -0.23472826464263 * S_AcceptedCmpTotal  +      0.2784288410174 *
1154945   +        S_Age  +     0.88464843816774 * S_Frq  +     0.17112519951794 *
1154946   +        S_Income  +    -0.00640590904736 * S_Kidhome
1154947   +          +    -0.26951923409269 * S_MntFishProducts
1154948   +          +     0.32894249282173 * S_MntFruits  +     0.07344906774263 *
1154949   +        S_MntGoldProds  +    -0.34990462553578 * S_MntSweetProducts
1154950   +          +    -0.03084445162862 * S_MonthsAsCustomer
1154951   +          +    -0.63431809432586 * S_NumDealsPurchases
1154952   +          +     -0.8623000996519 * S_NumWebVisitsMonth
1154953   +          +    -0.16320962913093 * S_RFMstat  +     -0.0912884569806 *
1154954   +        S_RMntFrq  +     0.62097299931152 * S_Recency
1154955   +          +    -0.21174542653958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.23472826464263 * S_AcceptedCmpTotal + 0.2784288410174 * S_Age + 
0.88464843816774 * S_Frq + 0.17112519951794 * S_Income + -0.00640590904736 * S_Kidhome + 
-0.26951923409269 * S_MntFishProducts + 0.32894249282173 * S_MntFruits + 0.07344906774263 * 
S_MntGoldProds + -0.34990462553578 * S_MntSweetProducts + -0.03084445162862 * 
S_MonthsAsCustomer + -0.63431809432586 * S_NumDealsPurchases + -0.8623000996519 * 
S_NumWebVisitsMonth + -0.16320962913093 * S_RFMstat + -0.0912884569806 * S_RMntFrq + 
0.62097299931152 * S_Recency + -0.21174542653958 * S_Teenhome ;
1154956   +   H15  =     0.08498061851068 * S_AcceptedCmpTotal  +    -0.03874599391049 *
1154957   +        S_Age  +     0.26071229941538 * S_Frq  +      0.3037475539849 *
1154958   +        S_Income  +    -0.24194113790018 * S_Kidhome
1154959   +          +    -0.19083222216875 * S_MntFishProducts
1154960   +          +     -0.2295473697124 * S_MntFruits  +    -0.34933034439567 *
1154961   +        S_MntGoldProds  +    -0.02693984703623 * S_MntSweetProducts
1154962   +          +     0.04053963129428 * S_MonthsAsCustomer
1154963   +          +    -0.43392648307969 * S_NumDealsPurchases
1154964   +          +    -0.27875696570809 * S_NumWebVisitsMonth
1154965   +          +     0.15140901901886 * S_RFMstat  +     0.24456818451854 *
1154966   +        S_RMntFrq  +     0.50440740103916 * S_Recency
1154967   +          +    -0.22578843225375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.08498061851068 * S_AcceptedCmpTotal + -0.03874599391049 * S_Age 
+ 0.26071229941538 * S_Frq + 0.3037475539849 * S_Income + -0.24194113790018 * S_Kidhome + 
-0.19083222216875 * S_MntFishProducts + -0.2295473697124 * S_MntFruits + -0.34933034439567 * 
S_MntGoldProds + -0.02693984703623 * S_MntSweetProducts + 0.04053963129428 * 
S_MonthsAsCustomer + -0.43392648307969 * S_NumDealsPurchases + -0.27875696570809 * 
S_NumWebVisitsMonth + 0.15140901901886 * S_RFMstat + 0.24456818451854 * S_RMntFrq + 
0.50440740103916 * S_Recency + -0.22578843225375 * S_Teenhome ;
1154968   +   H16  =     0.04456496773686 * S_AcceptedCmpTotal  +    -0.27559491111701 *
1154969   +        S_Age  +    -0.17508336034033 * S_Frq  +     0.53227247274911 *
1154970   +        S_Income  +    -0.25899044305101 * S_Kidhome
1154971   +          +    -0.04059351293128 * S_MntFishProducts
1154972   +          +     -0.0638851827999 * S_MntFruits  +    -0.00679153562123 *
1154973   +        S_MntGoldProds  +    -0.03056442128246 * S_MntSweetProducts
1154974   +          +    -0.00021820216919 * S_MonthsAsCustomer
1154975   +          +     0.26994179879371 * S_NumDealsPurchases
1154976   +          +     0.22503342875269 * S_NumWebVisitsMonth
1154977   +          +      0.0842978170878 * S_RFMstat  +     0.10196131382306 *
1154978   +        S_RMntFrq  +    -0.89639874371569 * S_Recency
1154979   +          +     -0.2664087147783 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.04456496773686 * S_AcceptedCmpTotal + -0.27559491111701 * S_Age 
+ -0.17508336034033 * S_Frq + 0.53227247274911 * S_Income + -0.25899044305101 * S_Kidhome + 
-0.04059351293128 * S_MntFishProducts + -0.0638851827999 * S_MntFruits + -0.00679153562123 * 
S_MntGoldProds + -0.03056442128246 * S_MntSweetProducts + -0.00021820216919 * 
S_MonthsAsCustomer + 0.26994179879371 * S_NumDealsPurchases + 0.22503342875269 * 
S_NumWebVisitsMonth + 0.0842978170878 * S_RFMstat + 0.10196131382306 * S_RMntFrq + 
-0.89639874371569 * S_Recency + -0.2664087147783 * S_Teenhome ;
1154980   +   H11  = H11  +     0.24041745169534 * AcceptedCmp10
1154981   +          +     0.02544174782123 * AcceptedCmp20  +     0.05985429287388 *
1154982   +        AcceptedCmp30  +    -0.43610564100855 * AcceptedCmp40
1154983   +          +     -0.0033678658149 * AcceptedCmp50  +      0.4302437669653 *
1154984   +        Complain0  +     0.23399064979433 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.24041745169534 * AcceptedCmp10 + 0.02544174782123 * 
AcceptedCmp20 + 0.05985429287388 * AcceptedCmp30 + -0.43610564100855 * AcceptedCmp40 + 
-0.0033678658149 * AcceptedCmp50 + 0.4302437669653 * Complain0 + 0.23399064979433 * 
HigherEducationBinary0 ;
1154985   +   H12  = H12  +     0.04113908603951 * AcceptedCmp10
1154986   +          +    -0.01093566327356 * AcceptedCmp20  +    -0.29048302676994 *
1154987   +        AcceptedCmp30  +     0.58809451838917 * AcceptedCmp40
1154988   +          +    -0.40651652706331 * AcceptedCmp50  +     0.59503559231942 *
1154989   +        Complain0  +    -0.31162206924656 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04113908603951 * AcceptedCmp10 + -0.01093566327356 * 
AcceptedCmp20 + -0.29048302676994 * AcceptedCmp30 + 0.58809451838917 * AcceptedCmp40 + 
-0.40651652706331 * AcceptedCmp50 + 0.59503559231942 * Complain0 + -0.31162206924656 * 
HigherEducationBinary0 ;
1154990   +   H13  = H13  +     0.49980132733088 * AcceptedCmp10
1154991   +          +     0.42591357833168 * AcceptedCmp20  +     0.29341561692077 *
1154992   +        AcceptedCmp30  +      0.5385511712513 * AcceptedCmp40
1154993   +          +     0.11385275317979 * AcceptedCmp50  +     0.11081932391124 *
1154994   +        Complain0  +    -0.44840720707687 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.49980132733088 * AcceptedCmp10 + 0.42591357833168 * 
AcceptedCmp20 + 0.29341561692077 * AcceptedCmp30 + 0.5385511712513 * AcceptedCmp40 + 
0.11385275317979 * AcceptedCmp50 + 0.11081932391124 * Complain0 + -0.44840720707687 * 
HigherEducationBinary0 ;
1154995   +   H14  = H14  +     0.70002770930064 * AcceptedCmp10
1154996   +          +     0.03624451131553 * AcceptedCmp20  +     0.75509304132809 *
1154997   +        AcceptedCmp30  +     0.10669150880089 * AcceptedCmp40
1154998   +          +     0.40957450849357 * AcceptedCmp50  +     0.19133447423047 *
1154999   +        Complain0  +      0.0901288611482 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.70002770930064 * AcceptedCmp10 + 0.03624451131553 * 
AcceptedCmp20 + 0.75509304132809 * AcceptedCmp30 + 0.10669150880089 * AcceptedCmp40 + 
0.40957450849357 * AcceptedCmp50 + 0.19133447423047 * Complain0 + 0.0901288611482 * 
HigherEducationBinary0 ;
1155000   +   H15  = H15  +     0.30472902210864 * AcceptedCmp10
1155001   +          +     -0.0160831175686 * AcceptedCmp20  +     0.09226996454789 *
1155002   +        AcceptedCmp30  +     0.03526648068533 * AcceptedCmp40
1155003   +          +      0.1969983492734 * AcceptedCmp50  +    -0.32330512066062 *
1155004   +        Complain0  +     -0.2085030313253 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30472902210864 * AcceptedCmp10 + -0.0160831175686 * 
AcceptedCmp20 + 0.09226996454789 * AcceptedCmp30 + 0.03526648068533 * AcceptedCmp40 + 
0.1969983492734 * AcceptedCmp50 + -0.32330512066062 * Complain0 + -0.2085030313253 * 
HigherEducationBinary0 ;
1155005   +   H16  = H16  +    -0.19560821735212 * AcceptedCmp10
1155006   +          +     0.01476856325219 * AcceptedCmp20  +    -0.28505549110679 *
1155007   +        AcceptedCmp30  +    -0.13003702218159 * AcceptedCmp40
1155008   +          +     -0.0444894569881 * AcceptedCmp50  +    -0.19927466163886 *
1155009   +        Complain0  +      0.1418696986192 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.19560821735212 * AcceptedCmp10 + 0.01476856325219 * 
AcceptedCmp20 + -0.28505549110679 * AcceptedCmp30 + -0.13003702218159 * AcceptedCmp40 + 
-0.0444894569881 * AcceptedCmp50 + -0.19927466163886 * Complain0 + 0.1418696986192 * 
HigherEducationBinary0 ;
1155010   +   H11  = H11  +     0.05142300573614 * Education2n_Cycle
1155011   +          +    -0.08044262556314 * EducationBasic  +    -0.01420547642374 *
1155012   +        EducationGraduation  +     0.01590498605031 * EducationMaster
1155013   +          +     0.12486109091842 * Marital_StatusDivorced
1155014   +          +    -0.02537427599041 * Marital_StatusMarried
1155015   +          +     0.04139233887566 * Marital_StatusSingle
1155016   +          +     0.01979901000533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05142300573614 * Education2n_Cycle + -0.08044262556314 * 
EducationBasic + -0.01420547642374 * EducationGraduation + 0.01590498605031 * EducationMaster 
+ 0.12486109091842 * Marital_StatusDivorced + -0.02537427599041 * Marital_StatusMarried + 
0.04139233887566 * Marital_StatusSingle + 0.01979901000533 * Marital_StatusTogether ;
1155017   +   H12  = H12  +    -0.18925528201163 * Education2n_Cycle
1155018   +          +     0.13542558539857 * EducationBasic  +    -0.00318989932343 *
1155019   +        EducationGraduation  +     0.00556061144517 * EducationMaster
1155020   +          +      0.1922952868897 * Marital_StatusDivorced
1155021   +          +    -0.15043025991045 * Marital_StatusMarried
1155022   +          +     0.24380549252268 * Marital_StatusSingle
1155023   +          +      0.0914480494515 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18925528201163 * Education2n_Cycle + 0.13542558539857 * 
EducationBasic + -0.00318989932343 * EducationGraduation + 0.00556061144517 * EducationMaster 
+ 0.1922952868897 * Marital_StatusDivorced + -0.15043025991045 * Marital_StatusMarried + 
0.24380549252268 * Marital_StatusSingle + 0.0914480494515 * Marital_StatusTogether ;
1155024   +   H13  = H13  +     0.01984994959794 * Education2n_Cycle
1155025   +          +     0.05848951032368 * EducationBasic  +    -0.44607095594807 *
1155026   +        EducationGraduation  +     0.17433329582337 * EducationMaster
1155027   +          +    -0.19065058903153 * Marital_StatusDivorced
1155028   +          +     0.75653054479625 * Marital_StatusMarried
1155029   +          +    -0.66014855183925 * Marital_StatusSingle
1155030   +          +     0.57813394995752 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01984994959794 * Education2n_Cycle + 0.05848951032368 * 
EducationBasic + -0.44607095594807 * EducationGraduation + 0.17433329582337 * EducationMaster 
+ -0.19065058903153 * Marital_StatusDivorced + 0.75653054479625 * Marital_StatusMarried + 
-0.66014855183925 * Marital_StatusSingle + 0.57813394995752 * Marital_StatusTogether ;
1155031   +   H14  = H14  +     0.18480056670996 * Education2n_Cycle
1155032   +          +    -0.06350174929241 * EducationBasic  +    -0.27462372414402 *
1155033   +        EducationGraduation  +    -0.30561816795813 * EducationMaster
1155034   +          +    -0.18567969656169 * Marital_StatusDivorced
1155035   +          +    -0.14971561557485 * Marital_StatusMarried
1155036   +          +     0.15498901175156 * Marital_StatusSingle
1155037   +          +    -0.03455782443417 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18480056670996 * Education2n_Cycle + -0.06350174929241 * 
EducationBasic + -0.27462372414402 * EducationGraduation + -0.30561816795813 * EducationMaster 
+ -0.18567969656169 * Marital_StatusDivorced + -0.14971561557485 * Marital_StatusMarried + 
0.15498901175156 * Marital_StatusSingle + -0.03455782443417 * Marital_StatusTogether ;
1155038   +   H15  = H15  +    -0.12232381400482 * Education2n_Cycle
1155039   +          +     0.20473341276352 * EducationBasic  +      0.0491931637595 *
1155040   +        EducationGraduation  +    -0.21833425438085 * EducationMaster
1155041   +          +    -0.10111355311896 * Marital_StatusDivorced
1155042   +          +     0.14131454959607 * Marital_StatusMarried
1155043   +          +    -0.18391621678023 * Marital_StatusSingle
1155044   +          +     0.23175084120404 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.12232381400482 * Education2n_Cycle + 0.20473341276352 * 
EducationBasic + 0.0491931637595 * EducationGraduation + -0.21833425438085 * EducationMaster + 
-0.10111355311896 * Marital_StatusDivorced + 0.14131454959607 * Marital_StatusMarried + 
-0.18391621678023 * Marital_StatusSingle + 0.23175084120404 * Marital_StatusTogether ;
1155045   +   H16  = H16  +     0.03069778538103 * Education2n_Cycle
1155046   +          +    -0.45911946295888 * EducationBasic  +    -0.07922750315693 *
1155047   +        EducationGraduation  +    -0.19964669060264 * EducationMaster
1155048   +          +     0.04572591415975 * Marital_StatusDivorced
1155049   +          +    -0.38535549815638 * Marital_StatusMarried
1155050   +          +     0.30341063880196 * Marital_StatusSingle
1155051   +          +    -0.28342984798633 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03069778538103 * Education2n_Cycle + -0.45911946295888 * 
EducationBasic + -0.07922750315693 * EducationGraduation + -0.19964669060264 * EducationMaster 
+ 0.04572591415975 * Marital_StatusDivorced + -0.38535549815638 * Marital_StatusMarried + 
0.30341063880196 * Marital_StatusSingle + -0.28342984798633 * Marital_StatusTogether ;
1155052   +   H11  =     1.39441509752238 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.39441509752238 + H11 ;
1155053   +   H12  =     0.19328666321992 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.19328666321992 + H12 ;
1155054   +   H13  =     0.55771988222719 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.55771988222719 + H13 ;
1155055   +   H14  =     0.27935543639097 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.27935543639097 + H14 ;
1155056   +   H15  =     1.08911808634908 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.08911808634908 + H15 ;
1155057   +   H16  =    -0.22580376250744 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.22580376250744 + H16 ;
1155058   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1155059   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1155060   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1155061   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1155062   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1155063   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1155064   +END;
MPRINT(EM_DIAGRAM):   END;
1155065   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1155066   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1155067   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1155068   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1155069   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1155070   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1155071   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1155072   +END;
MPRINT(EM_DIAGRAM):   END;
1155073   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155074   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1155075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155076   +
1155077   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1155078   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1155079   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1155080   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1155081   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1155082   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1155083   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1155084   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1155085   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1155086   +end;
MPRINT(EM_DIAGRAM):   end;
1155087   +else do;
MPRINT(EM_DIAGRAM):   else do;
1155088   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1155089   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1155090   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1155091   +   end;
MPRINT(EM_DIAGRAM):   end;
1155092   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1155093   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1155094   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1155095   +   end;
MPRINT(EM_DIAGRAM):   end;
1155096   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1155097   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1155098   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1155099   +   end;
MPRINT(EM_DIAGRAM):   end;
1155100   +end;
MPRINT(EM_DIAGRAM):   end;
1155101   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1155102   +   P_DepVar1  =     1.18423178138253 * H11  +     2.38126931545785 * H12
1155103   +          +    -2.42139186007404 * H13  +      -2.187729844004 * H14
1155104   +          +    -0.38226616805204 * H15  +      1.1710139734699 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.18423178138253 * H11 + 2.38126931545785 * H12 + 
-2.42139186007404 * H13 + -2.187729844004 * H14 + -0.38226616805204 * H15 + 1.1710139734699 * 
H16 ;
1155105   +   P_DepVar1  =    -1.69958173763243 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.69958173763243 + P_DepVar1 ;
1155106   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1155107   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1155108   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1155109   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1155110   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1155111   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1155112   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1155113   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1155114   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1155115   +END;
MPRINT(EM_DIAGRAM):   END;
1155116   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1155117   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1155118   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1155119   +END;
MPRINT(EM_DIAGRAM):   END;
1155120   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1155121   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1155122   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1155123   +END;
MPRINT(EM_DIAGRAM):   END;
1155124   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1155125   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1155126   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1155127   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1155128   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1155129   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1155130   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1155131   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155132   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1155133   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155134   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1155135   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1155136   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1155137   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1155138   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1155139   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1155140   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1155141   +END;
MPRINT(EM_DIAGRAM):   END;
1155142   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1155143   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1155144   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1155145   +drop
1155146   +H11
1155147   +H12
1155148   +H13
1155149   +H14
1155150   +H15
1155151   +H16
1155152   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1155153   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1155154    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL41_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1155155    quit;
1155156    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1155157    filename emflow
1155157  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural41: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1155158    *------------------------------------------------------------*;
1155159    * Neural41: Scoring VALIDATE data;
1155160    *------------------------------------------------------------*;
1155161    data EMWS8.Neural41_VALIDATE
1155162    / view=EMWS8.Neural41_VALIDATE
1155163    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural41_VALIDATE / view=EMWS8.Neural41_VALIDATE ;
1155164    set EMWS8.Meta3_VALIDATE
1155165    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
1155166    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas.
1155167   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1155168   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1155169   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1155170   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1155171   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1155172   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1155173   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1155174   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1155175   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1155176   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1155177   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1155178   +LENGTH _WARN_ $4
1155179   +      F_DepVar  $ 12
1155180   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1155181   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1155182   +
1155183   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1155184   +
1155185   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1155186   +
1155187   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1155188   +
1155189   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1155190   +
1155191   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1155192   +
1155193   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1155194   +
1155195   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1155196   +
1155197   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1155198   +
1155199   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1155200   +
1155201   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1155202   +
1155203   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1155204   +
1155205   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1155206   +
1155207   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1155208   +
1155209   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1155210   +
1155211   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1155212   +
1155213   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1155214   +
1155215   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1155216   +
1155217   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1155218   +
1155219   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1155220   +
1155221   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1155222   +
1155223   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1155224   +
1155225   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1155226   +
1155227   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1155228   +
1155229   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1155230   +
1155231   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1155232   +
1155233   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1155234   +
1155235   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1155236   +
1155237   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1155238   +
1155239   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1155240   +
1155241   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1155242   +
1155243   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1155244   +
1155245   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1155246   +
1155247   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1155248   +
1155249   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1155250   +
1155251   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1155252   +
1155253   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1155254   +
1155255   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1155256   +
1155257   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1155258   +
1155259   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1155260   +
1155261   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1155262   +
1155263   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1155264   +
1155265   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1155266   +
1155267   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1155268   +
1155269   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1155270   +
1155271   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1155272   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1155273   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1155274   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1155275   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1155276   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155277   +end;
MPRINT(EM_DIAGRAM):   end;
1155278   +else do;
MPRINT(EM_DIAGRAM):   else do;
1155279   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1155280   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1155281   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1155282   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1155283   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1155284   +   end;
MPRINT(EM_DIAGRAM):   end;
1155285   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1155286   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1155287   +   end;
MPRINT(EM_DIAGRAM):   end;
1155288   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1155289   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1155290   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1155291   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155292   +   end;
MPRINT(EM_DIAGRAM):   end;
1155293   +end;
MPRINT(EM_DIAGRAM):   end;
1155294   +
1155295   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1155296   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1155297   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1155298   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1155299   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1155300   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155301   +end;
MPRINT(EM_DIAGRAM):   end;
1155302   +else do;
MPRINT(EM_DIAGRAM):   else do;
1155303   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1155304   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1155305   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1155306   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1155307   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1155308   +   end;
MPRINT(EM_DIAGRAM):   end;
1155309   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1155310   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1155311   +   end;
MPRINT(EM_DIAGRAM):   end;
1155312   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1155313   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1155314   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1155315   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155316   +   end;
MPRINT(EM_DIAGRAM):   end;
1155317   +end;
MPRINT(EM_DIAGRAM):   end;
1155318   +
1155319   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1155320   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1155321   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1155322   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1155323   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1155324   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155325   +end;
MPRINT(EM_DIAGRAM):   end;
1155326   +else do;
MPRINT(EM_DIAGRAM):   else do;
1155327   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1155328   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1155329   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1155330   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1155331   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1155332   +   end;
MPRINT(EM_DIAGRAM):   end;
1155333   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1155334   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1155335   +   end;
MPRINT(EM_DIAGRAM):   end;
1155336   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1155337   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1155338   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1155339   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155340   +   end;
MPRINT(EM_DIAGRAM):   end;
1155341   +end;
MPRINT(EM_DIAGRAM):   end;
1155342   +
1155343   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1155344   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1155345   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1155346   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1155347   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1155348   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155349   +end;
MPRINT(EM_DIAGRAM):   end;
1155350   +else do;
MPRINT(EM_DIAGRAM):   else do;
1155351   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1155352   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1155353   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1155354   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1155355   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1155356   +   end;
MPRINT(EM_DIAGRAM):   end;
1155357   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1155358   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1155359   +   end;
MPRINT(EM_DIAGRAM):   end;
1155360   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1155361   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1155362   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1155363   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155364   +   end;
MPRINT(EM_DIAGRAM):   end;
1155365   +end;
MPRINT(EM_DIAGRAM):   end;
1155366   +
1155367   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1155368   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1155369   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1155370   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1155371   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1155372   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155373   +end;
MPRINT(EM_DIAGRAM):   end;
1155374   +else do;
MPRINT(EM_DIAGRAM):   else do;
1155375   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1155376   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1155377   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1155378   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1155379   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1155380   +   end;
MPRINT(EM_DIAGRAM):   end;
1155381   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1155382   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1155383   +   end;
MPRINT(EM_DIAGRAM):   end;
1155384   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1155385   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1155386   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1155387   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155388   +   end;
MPRINT(EM_DIAGRAM):   end;
1155389   +end;
MPRINT(EM_DIAGRAM):   end;
1155390   +
1155391   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1155392   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1155393   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1155394   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1155395   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1155396   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155397   +end;
MPRINT(EM_DIAGRAM):   end;
1155398   +else do;
MPRINT(EM_DIAGRAM):   else do;
1155399   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1155400   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1155401   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1155402   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1155403   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1155404   +   end;
MPRINT(EM_DIAGRAM):   end;
1155405   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1155406   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1155407   +   end;
MPRINT(EM_DIAGRAM):   end;
1155408   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1155409   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1155410   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1155411   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155412   +   end;
MPRINT(EM_DIAGRAM):   end;
1155413   +end;
MPRINT(EM_DIAGRAM):   end;
1155414   +
1155415   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1155416   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1155417   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1155418   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1155419   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1155420   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155421   +end;
MPRINT(EM_DIAGRAM):   end;
1155422   +else do;
MPRINT(EM_DIAGRAM):   else do;
1155423   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1155424   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1155425   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1155426   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1155427   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1155428   +   end;
MPRINT(EM_DIAGRAM):   end;
1155429   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1155430   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1155431   +   end;
MPRINT(EM_DIAGRAM):   end;
1155432   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1155433   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1155434   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1155435   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155436   +   end;
MPRINT(EM_DIAGRAM):   end;
1155437   +end;
MPRINT(EM_DIAGRAM):   end;
1155438   +
1155439   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1155440   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1155441   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1155442   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1155443   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1155444   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1155445   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1155446   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1155447   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1155448   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1155449   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1155450   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1155451   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1155452   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155453   +end;
MPRINT(EM_DIAGRAM):   end;
1155454   +else do;
MPRINT(EM_DIAGRAM):   else do;
1155455   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1155456   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1155457   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1155458   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1155459   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1155460   +   end;
MPRINT(EM_DIAGRAM):   end;
1155461   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1155462   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1155463   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1155464   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1155465   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1155466   +   end;
MPRINT(EM_DIAGRAM):   end;
1155467   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1155468   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1155469   +   end;
MPRINT(EM_DIAGRAM):   end;
1155470   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1155471   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1155472   +   end;
MPRINT(EM_DIAGRAM):   end;
1155473   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1155474   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1155475   +   end;
MPRINT(EM_DIAGRAM):   end;
1155476   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1155477   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1155478   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1155479   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1155480   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1155481   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1155482   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155483   +   end;
MPRINT(EM_DIAGRAM):   end;
1155484   +end;
MPRINT(EM_DIAGRAM):   end;
1155485   +
1155486   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1155487   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1155488   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1155489   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1155490   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1155491   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1155492   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1155493   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1155494   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1155495   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1155496   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1155497   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1155498   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1155499   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1155500   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155501   +end;
MPRINT(EM_DIAGRAM):   end;
1155502   +else do;
MPRINT(EM_DIAGRAM):   else do;
1155503   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1155504   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1155505   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1155506   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1155507   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1155508   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1155509   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1155510   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1155511   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1155512   +         end;
MPRINT(EM_DIAGRAM):   end;
1155513   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1155514   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1155515   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1155516   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1155517   +            end;
MPRINT(EM_DIAGRAM):   end;
1155518   +         end;
MPRINT(EM_DIAGRAM):   end;
1155519   +      end;
MPRINT(EM_DIAGRAM):   end;
1155520   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1155521   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1155522   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1155523   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1155524   +         end;
MPRINT(EM_DIAGRAM):   end;
1155525   +      end;
MPRINT(EM_DIAGRAM):   end;
1155526   +   end;
MPRINT(EM_DIAGRAM):   end;
1155527   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1155528   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1155529   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1155530   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1155531   +      end;
MPRINT(EM_DIAGRAM):   end;
1155532   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1155533   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1155534   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1155535   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1155536   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1155537   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1155538   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1155539   +         end;
MPRINT(EM_DIAGRAM):   end;
1155540   +      end;
MPRINT(EM_DIAGRAM):   end;
1155541   +   end;
MPRINT(EM_DIAGRAM):   end;
1155542   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1155543   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1155544   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1155545   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1155546   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1155547   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1155548   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155549   +   end;
MPRINT(EM_DIAGRAM):   end;
1155550   +end;
MPRINT(EM_DIAGRAM):   end;
1155551   +
1155552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155553   +*** Checking missing input Interval
1155554   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1155555   +
1155556   +IF NMISS(
1155557   +   AcceptedCmpTotal ,
1155558   +   Age ,
1155559   +   Frq ,
1155560   +   Income ,
1155561   +   Kidhome ,
1155562   +   MntFishProducts ,
1155563   +   MntFruits ,
1155564   +   MntGoldProds ,
1155565   +   MntSweetProducts ,
1155566   +   MonthsAsCustomer ,
1155567   +   NumDealsPurchases ,
1155568   +   NumWebVisitsMonth ,
1155569   +   RFMstat ,
1155570   +   RMntFrq ,
1155571   +   Recency ,
1155572   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1155573   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1155574   +
1155575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155576   +END;
MPRINT(EM_DIAGRAM):   END;
1155577   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155578   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1155579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155580   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1155581   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1155582   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1155583   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1155584   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1155585   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1155586   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1155587   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1155588   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1155589   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1155590   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1155591   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1155592   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1155593   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1155594   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1155595   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1155596   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1155597   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1155598   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1155599   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1155600   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1155601   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1155602   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1155603   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1155604   +END;
MPRINT(EM_DIAGRAM):   END;
1155605   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1155606   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1155607   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1155608   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1155609   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1155610   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1155611   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1155612   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1155613   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1155614   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1155615   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1155616   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1155617   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1155618   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1155619   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1155620   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1155621   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1155622   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1155623   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1155624   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1155625   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1155626   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1155627   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1155628   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1155629   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1155630   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1155631   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1155632   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1155633   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1155634   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1155635   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1155636   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1155637   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1155638   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1155639   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1155640   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1155641   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1155642   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1155643   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1155644   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1155645   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1155646   +END;
MPRINT(EM_DIAGRAM):   END;
1155647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155648   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1155649   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155651   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1155652   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155653   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155654   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1155655   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155656   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1155657   +   H11  =     0.00111540513846 * S_AcceptedCmpTotal  +    -0.12971131901586 *
1155658   +        S_Age  +    -0.18520628994151 * S_Frq  +     0.00222884615859 *
1155659   +        S_Income  +    -0.52351504306035 * S_Kidhome
1155660   +          +     0.08140325105151 * S_MntFishProducts
1155661   +          +    -0.04386492140302 * S_MntFruits  +     0.05295232764925 *
1155662   +        S_MntGoldProds  +    -0.39891652227681 * S_MntSweetProducts
1155663   +          +    -0.43676985181672 * S_MonthsAsCustomer
1155664   +          +    -0.20260708598657 * S_NumDealsPurchases
1155665   +          +     0.06428019964102 * S_NumWebVisitsMonth
1155666   +          +     0.13467234938466 * S_RFMstat  +    -0.29483834428412 *
1155667   +        S_RMntFrq  +    -0.68447200324777 * S_Recency
1155668   +          +    -0.29437834033294 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00111540513846 * S_AcceptedCmpTotal + -0.12971131901586 * S_Age 
+ -0.18520628994151 * S_Frq + 0.00222884615859 * S_Income + -0.52351504306035 * S_Kidhome + 
0.08140325105151 * S_MntFishProducts + -0.04386492140302 * S_MntFruits + 0.05295232764925 * 
S_MntGoldProds + -0.39891652227681 * S_MntSweetProducts + -0.43676985181672 * 
S_MonthsAsCustomer + -0.20260708598657 * S_NumDealsPurchases + 0.06428019964102 * 
S_NumWebVisitsMonth + 0.13467234938466 * S_RFMstat + -0.29483834428412 * S_RMntFrq + 
-0.68447200324777 * S_Recency + -0.29437834033294 * S_Teenhome ;
1155669   +   H12  =     0.39213879457216 * S_AcceptedCmpTotal  +    -0.01440353989436 *
1155670   +        S_Age  +     0.23865918577825 * S_Frq  +      0.6365049428914 *
1155671   +        S_Income  +     0.91112653634925 * S_Kidhome
1155672   +          +     0.26539332041133 * S_MntFishProducts
1155673   +          +    -0.31480262631724 * S_MntFruits  +     0.14786958565778 *
1155674   +        S_MntGoldProds  +      0.2400589361571 * S_MntSweetProducts
1155675   +          +    -0.12141919451173 * S_MonthsAsCustomer
1155676   +          +     0.66105669553858 * S_NumDealsPurchases
1155677   +          +     0.35126523805992 * S_NumWebVisitsMonth
1155678   +          +     0.15877473113544 * S_RFMstat  +     0.04256559397745 *
1155679   +        S_RMntFrq  +    -0.82322754979428 * S_Recency
1155680   +          +    -0.38093159094381 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.39213879457216 * S_AcceptedCmpTotal + -0.01440353989436 * S_Age 
+ 0.23865918577825 * S_Frq + 0.6365049428914 * S_Income + 0.91112653634925 * S_Kidhome + 
0.26539332041133 * S_MntFishProducts + -0.31480262631724 * S_MntFruits + 0.14786958565778 * 
S_MntGoldProds + 0.2400589361571 * S_MntSweetProducts + -0.12141919451173 * S_MonthsAsCustomer 
+ 0.66105669553858 * S_NumDealsPurchases + 0.35126523805992 * S_NumWebVisitsMonth + 
0.15877473113544 * S_RFMstat + 0.04256559397745 * S_RMntFrq + -0.82322754979428 * S_Recency + 
-0.38093159094381 * S_Teenhome ;
1155681   +   H13  =     0.01698497071572 * S_AcceptedCmpTotal  +    -0.18194797866377 *
1155682   +        S_Age  +    -0.38541123385894 * S_Frq  +    -0.85948176553863 *
1155683   +        S_Income  +     0.62421717479738 * S_Kidhome
1155684   +          +     0.15545639003856 * S_MntFishProducts
1155685   +          +    -0.04951281670167 * S_MntFruits  +    -0.02786799666153 *
1155686   +        S_MntGoldProds  +     0.25863651263316 * S_MntSweetProducts
1155687   +          +     -0.2202976559774 * S_MonthsAsCustomer
1155688   +          +      0.2989117555747 * S_NumDealsPurchases
1155689   +          +    -0.14751065039865 * S_NumWebVisitsMonth
1155690   +          +    -0.02597231393441 * S_RFMstat  +    -0.39431255412396 *
1155691   +        S_RMntFrq  +     0.37177599027897 * S_Recency
1155692   +          +     0.58385986175941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.01698497071572 * S_AcceptedCmpTotal + -0.18194797866377 * S_Age 
+ -0.38541123385894 * S_Frq + -0.85948176553863 * S_Income + 0.62421717479738 * S_Kidhome + 
0.15545639003856 * S_MntFishProducts + -0.04951281670167 * S_MntFruits + -0.02786799666153 * 
S_MntGoldProds + 0.25863651263316 * S_MntSweetProducts + -0.2202976559774 * S_MonthsAsCustomer 
+ 0.2989117555747 * S_NumDealsPurchases + -0.14751065039865 * S_NumWebVisitsMonth + 
-0.02597231393441 * S_RFMstat + -0.39431255412396 * S_RMntFrq + 0.37177599027897 * S_Recency + 
0.58385986175941 * S_Teenhome ;
1155693   +   H14  =    -0.23472826464263 * S_AcceptedCmpTotal  +      0.2784288410174 *
1155694   +        S_Age  +     0.88464843816774 * S_Frq  +     0.17112519951794 *
1155695   +        S_Income  +    -0.00640590904736 * S_Kidhome
1155696   +          +    -0.26951923409269 * S_MntFishProducts
1155697   +          +     0.32894249282173 * S_MntFruits  +     0.07344906774263 *
1155698   +        S_MntGoldProds  +    -0.34990462553578 * S_MntSweetProducts
1155699   +          +    -0.03084445162862 * S_MonthsAsCustomer
1155700   +          +    -0.63431809432586 * S_NumDealsPurchases
1155701   +          +     -0.8623000996519 * S_NumWebVisitsMonth
1155702   +          +    -0.16320962913093 * S_RFMstat  +     -0.0912884569806 *
1155703   +        S_RMntFrq  +     0.62097299931152 * S_Recency
1155704   +          +    -0.21174542653958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.23472826464263 * S_AcceptedCmpTotal + 0.2784288410174 * S_Age + 
0.88464843816774 * S_Frq + 0.17112519951794 * S_Income + -0.00640590904736 * S_Kidhome + 
-0.26951923409269 * S_MntFishProducts + 0.32894249282173 * S_MntFruits + 0.07344906774263 * 
S_MntGoldProds + -0.34990462553578 * S_MntSweetProducts + -0.03084445162862 * 
S_MonthsAsCustomer + -0.63431809432586 * S_NumDealsPurchases + -0.8623000996519 * 
S_NumWebVisitsMonth + -0.16320962913093 * S_RFMstat + -0.0912884569806 * S_RMntFrq + 
0.62097299931152 * S_Recency + -0.21174542653958 * S_Teenhome ;
1155705   +   H15  =     0.08498061851068 * S_AcceptedCmpTotal  +    -0.03874599391049 *
1155706   +        S_Age  +     0.26071229941538 * S_Frq  +      0.3037475539849 *
1155707   +        S_Income  +    -0.24194113790018 * S_Kidhome
1155708   +          +    -0.19083222216875 * S_MntFishProducts
1155709   +          +     -0.2295473697124 * S_MntFruits  +    -0.34933034439567 *
1155710   +        S_MntGoldProds  +    -0.02693984703623 * S_MntSweetProducts
1155711   +          +     0.04053963129428 * S_MonthsAsCustomer
1155712   +          +    -0.43392648307969 * S_NumDealsPurchases
1155713   +          +    -0.27875696570809 * S_NumWebVisitsMonth
1155714   +          +     0.15140901901886 * S_RFMstat  +     0.24456818451854 *
1155715   +        S_RMntFrq  +     0.50440740103916 * S_Recency
1155716   +          +    -0.22578843225375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.08498061851068 * S_AcceptedCmpTotal + -0.03874599391049 * S_Age 
+ 0.26071229941538 * S_Frq + 0.3037475539849 * S_Income + -0.24194113790018 * S_Kidhome + 
-0.19083222216875 * S_MntFishProducts + -0.2295473697124 * S_MntFruits + -0.34933034439567 * 
S_MntGoldProds + -0.02693984703623 * S_MntSweetProducts + 0.04053963129428 * 
S_MonthsAsCustomer + -0.43392648307969 * S_NumDealsPurchases + -0.27875696570809 * 
S_NumWebVisitsMonth + 0.15140901901886 * S_RFMstat + 0.24456818451854 * S_RMntFrq + 
0.50440740103916 * S_Recency + -0.22578843225375 * S_Teenhome ;
1155717   +   H16  =     0.04456496773686 * S_AcceptedCmpTotal  +    -0.27559491111701 *
1155718   +        S_Age  +    -0.17508336034033 * S_Frq  +     0.53227247274911 *
1155719   +        S_Income  +    -0.25899044305101 * S_Kidhome
1155720   +          +    -0.04059351293128 * S_MntFishProducts
1155721   +          +     -0.0638851827999 * S_MntFruits  +    -0.00679153562123 *
1155722   +        S_MntGoldProds  +    -0.03056442128246 * S_MntSweetProducts
1155723   +          +    -0.00021820216919 * S_MonthsAsCustomer
1155724   +          +     0.26994179879371 * S_NumDealsPurchases
1155725   +          +     0.22503342875269 * S_NumWebVisitsMonth
1155726   +          +      0.0842978170878 * S_RFMstat  +     0.10196131382306 *
1155727   +        S_RMntFrq  +    -0.89639874371569 * S_Recency
1155728   +          +     -0.2664087147783 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.04456496773686 * S_AcceptedCmpTotal + -0.27559491111701 * S_Age 
+ -0.17508336034033 * S_Frq + 0.53227247274911 * S_Income + -0.25899044305101 * S_Kidhome + 
-0.04059351293128 * S_MntFishProducts + -0.0638851827999 * S_MntFruits + -0.00679153562123 * 
S_MntGoldProds + -0.03056442128246 * S_MntSweetProducts + -0.00021820216919 * 
S_MonthsAsCustomer + 0.26994179879371 * S_NumDealsPurchases + 0.22503342875269 * 
S_NumWebVisitsMonth + 0.0842978170878 * S_RFMstat + 0.10196131382306 * S_RMntFrq + 
-0.89639874371569 * S_Recency + -0.2664087147783 * S_Teenhome ;
1155729   +   H11  = H11  +     0.24041745169534 * AcceptedCmp10
1155730   +          +     0.02544174782123 * AcceptedCmp20  +     0.05985429287388 *
1155731   +        AcceptedCmp30  +    -0.43610564100855 * AcceptedCmp40
1155732   +          +     -0.0033678658149 * AcceptedCmp50  +      0.4302437669653 *
1155733   +        Complain0  +     0.23399064979433 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.24041745169534 * AcceptedCmp10 + 0.02544174782123 * 
AcceptedCmp20 + 0.05985429287388 * AcceptedCmp30 + -0.43610564100855 * AcceptedCmp40 + 
-0.0033678658149 * AcceptedCmp50 + 0.4302437669653 * Complain0 + 0.23399064979433 * 
HigherEducationBinary0 ;
1155734   +   H12  = H12  +     0.04113908603951 * AcceptedCmp10
1155735   +          +    -0.01093566327356 * AcceptedCmp20  +    -0.29048302676994 *
1155736   +        AcceptedCmp30  +     0.58809451838917 * AcceptedCmp40
1155737   +          +    -0.40651652706331 * AcceptedCmp50  +     0.59503559231942 *
1155738   +        Complain0  +    -0.31162206924656 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04113908603951 * AcceptedCmp10 + -0.01093566327356 * 
AcceptedCmp20 + -0.29048302676994 * AcceptedCmp30 + 0.58809451838917 * AcceptedCmp40 + 
-0.40651652706331 * AcceptedCmp50 + 0.59503559231942 * Complain0 + -0.31162206924656 * 
HigherEducationBinary0 ;
1155739   +   H13  = H13  +     0.49980132733088 * AcceptedCmp10
1155740   +          +     0.42591357833168 * AcceptedCmp20  +     0.29341561692077 *
1155741   +        AcceptedCmp30  +      0.5385511712513 * AcceptedCmp40
1155742   +          +     0.11385275317979 * AcceptedCmp50  +     0.11081932391124 *
1155743   +        Complain0  +    -0.44840720707687 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.49980132733088 * AcceptedCmp10 + 0.42591357833168 * 
AcceptedCmp20 + 0.29341561692077 * AcceptedCmp30 + 0.5385511712513 * AcceptedCmp40 + 
0.11385275317979 * AcceptedCmp50 + 0.11081932391124 * Complain0 + -0.44840720707687 * 
HigherEducationBinary0 ;
1155744   +   H14  = H14  +     0.70002770930064 * AcceptedCmp10
1155745   +          +     0.03624451131553 * AcceptedCmp20  +     0.75509304132809 *
1155746   +        AcceptedCmp30  +     0.10669150880089 * AcceptedCmp40
1155747   +          +     0.40957450849357 * AcceptedCmp50  +     0.19133447423047 *
1155748   +        Complain0  +      0.0901288611482 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.70002770930064 * AcceptedCmp10 + 0.03624451131553 * 
AcceptedCmp20 + 0.75509304132809 * AcceptedCmp30 + 0.10669150880089 * AcceptedCmp40 + 
0.40957450849357 * AcceptedCmp50 + 0.19133447423047 * Complain0 + 0.0901288611482 * 
HigherEducationBinary0 ;
1155749   +   H15  = H15  +     0.30472902210864 * AcceptedCmp10
1155750   +          +     -0.0160831175686 * AcceptedCmp20  +     0.09226996454789 *
1155751   +        AcceptedCmp30  +     0.03526648068533 * AcceptedCmp40
1155752   +          +      0.1969983492734 * AcceptedCmp50  +    -0.32330512066062 *
1155753   +        Complain0  +     -0.2085030313253 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30472902210864 * AcceptedCmp10 + -0.0160831175686 * 
AcceptedCmp20 + 0.09226996454789 * AcceptedCmp30 + 0.03526648068533 * AcceptedCmp40 + 
0.1969983492734 * AcceptedCmp50 + -0.32330512066062 * Complain0 + -0.2085030313253 * 
HigherEducationBinary0 ;
1155754   +   H16  = H16  +    -0.19560821735212 * AcceptedCmp10
1155755   +          +     0.01476856325219 * AcceptedCmp20  +    -0.28505549110679 *
1155756   +        AcceptedCmp30  +    -0.13003702218159 * AcceptedCmp40
1155757   +          +     -0.0444894569881 * AcceptedCmp50  +    -0.19927466163886 *
1155758   +        Complain0  +      0.1418696986192 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.19560821735212 * AcceptedCmp10 + 0.01476856325219 * 
AcceptedCmp20 + -0.28505549110679 * AcceptedCmp30 + -0.13003702218159 * AcceptedCmp40 + 
-0.0444894569881 * AcceptedCmp50 + -0.19927466163886 * Complain0 + 0.1418696986192 * 
HigherEducationBinary0 ;
1155759   +   H11  = H11  +     0.05142300573614 * Education2n_Cycle
1155760   +          +    -0.08044262556314 * EducationBasic  +    -0.01420547642374 *
1155761   +        EducationGraduation  +     0.01590498605031 * EducationMaster
1155762   +          +     0.12486109091842 * Marital_StatusDivorced
1155763   +          +    -0.02537427599041 * Marital_StatusMarried
1155764   +          +     0.04139233887566 * Marital_StatusSingle
1155765   +          +     0.01979901000533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05142300573614 * Education2n_Cycle + -0.08044262556314 * 
EducationBasic + -0.01420547642374 * EducationGraduation + 0.01590498605031 * EducationMaster 
+ 0.12486109091842 * Marital_StatusDivorced + -0.02537427599041 * Marital_StatusMarried + 
0.04139233887566 * Marital_StatusSingle + 0.01979901000533 * Marital_StatusTogether ;
1155766   +   H12  = H12  +    -0.18925528201163 * Education2n_Cycle
1155767   +          +     0.13542558539857 * EducationBasic  +    -0.00318989932343 *
1155768   +        EducationGraduation  +     0.00556061144517 * EducationMaster
1155769   +          +      0.1922952868897 * Marital_StatusDivorced
1155770   +          +    -0.15043025991045 * Marital_StatusMarried
1155771   +          +     0.24380549252268 * Marital_StatusSingle
1155772   +          +      0.0914480494515 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18925528201163 * Education2n_Cycle + 0.13542558539857 * 
EducationBasic + -0.00318989932343 * EducationGraduation + 0.00556061144517 * EducationMaster 
+ 0.1922952868897 * Marital_StatusDivorced + -0.15043025991045 * Marital_StatusMarried + 
0.24380549252268 * Marital_StatusSingle + 0.0914480494515 * Marital_StatusTogether ;
1155773   +   H13  = H13  +     0.01984994959794 * Education2n_Cycle
1155774   +          +     0.05848951032368 * EducationBasic  +    -0.44607095594807 *
1155775   +        EducationGraduation  +     0.17433329582337 * EducationMaster
1155776   +          +    -0.19065058903153 * Marital_StatusDivorced
1155777   +          +     0.75653054479625 * Marital_StatusMarried
1155778   +          +    -0.66014855183925 * Marital_StatusSingle
1155779   +          +     0.57813394995752 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01984994959794 * Education2n_Cycle + 0.05848951032368 * 
EducationBasic + -0.44607095594807 * EducationGraduation + 0.17433329582337 * EducationMaster 
+ -0.19065058903153 * Marital_StatusDivorced + 0.75653054479625 * Marital_StatusMarried + 
-0.66014855183925 * Marital_StatusSingle + 0.57813394995752 * Marital_StatusTogether ;
1155780   +   H14  = H14  +     0.18480056670996 * Education2n_Cycle
1155781   +          +    -0.06350174929241 * EducationBasic  +    -0.27462372414402 *
1155782   +        EducationGraduation  +    -0.30561816795813 * EducationMaster
1155783   +          +    -0.18567969656169 * Marital_StatusDivorced
1155784   +          +    -0.14971561557485 * Marital_StatusMarried
1155785   +          +     0.15498901175156 * Marital_StatusSingle
1155786   +          +    -0.03455782443417 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18480056670996 * Education2n_Cycle + -0.06350174929241 * 
EducationBasic + -0.27462372414402 * EducationGraduation + -0.30561816795813 * EducationMaster 
+ -0.18567969656169 * Marital_StatusDivorced + -0.14971561557485 * Marital_StatusMarried + 
0.15498901175156 * Marital_StatusSingle + -0.03455782443417 * Marital_StatusTogether ;
1155787   +   H15  = H15  +    -0.12232381400482 * Education2n_Cycle
1155788   +          +     0.20473341276352 * EducationBasic  +      0.0491931637595 *
1155789   +        EducationGraduation  +    -0.21833425438085 * EducationMaster
1155790   +          +    -0.10111355311896 * Marital_StatusDivorced
1155791   +          +     0.14131454959607 * Marital_StatusMarried
1155792   +          +    -0.18391621678023 * Marital_StatusSingle
1155793   +          +     0.23175084120404 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.12232381400482 * Education2n_Cycle + 0.20473341276352 * 
EducationBasic + 0.0491931637595 * EducationGraduation + -0.21833425438085 * EducationMaster + 
-0.10111355311896 * Marital_StatusDivorced + 0.14131454959607 * Marital_StatusMarried + 
-0.18391621678023 * Marital_StatusSingle + 0.23175084120404 * Marital_StatusTogether ;
1155794   +   H16  = H16  +     0.03069778538103 * Education2n_Cycle
1155795   +          +    -0.45911946295888 * EducationBasic  +    -0.07922750315693 *
1155796   +        EducationGraduation  +    -0.19964669060264 * EducationMaster
1155797   +          +     0.04572591415975 * Marital_StatusDivorced
1155798   +          +    -0.38535549815638 * Marital_StatusMarried
1155799   +          +     0.30341063880196 * Marital_StatusSingle
1155800   +          +    -0.28342984798633 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03069778538103 * Education2n_Cycle + -0.45911946295888 * 
EducationBasic + -0.07922750315693 * EducationGraduation + -0.19964669060264 * EducationMaster 
+ 0.04572591415975 * Marital_StatusDivorced + -0.38535549815638 * Marital_StatusMarried + 
0.30341063880196 * Marital_StatusSingle + -0.28342984798633 * Marital_StatusTogether ;
1155801   +   H11  =     1.39441509752238 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.39441509752238 + H11 ;
1155802   +   H12  =     0.19328666321992 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.19328666321992 + H12 ;
1155803   +   H13  =     0.55771988222719 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.55771988222719 + H13 ;
1155804   +   H14  =     0.27935543639097 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.27935543639097 + H14 ;
1155805   +   H15  =     1.08911808634908 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.08911808634908 + H15 ;
1155806   +   H16  =    -0.22580376250744 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.22580376250744 + H16 ;
1155807   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1155808   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1155809   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1155810   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1155811   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1155812   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1155813   +END;
MPRINT(EM_DIAGRAM):   END;
1155814   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1155815   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1155816   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1155817   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1155818   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1155819   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1155820   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1155821   +END;
MPRINT(EM_DIAGRAM):   END;
1155822   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155823   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1155824   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155825   +
1155826   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1155827   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1155828   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1155829   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1155830   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1155831   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1155832   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1155833   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1155834   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1155835   +end;
MPRINT(EM_DIAGRAM):   end;
1155836   +else do;
MPRINT(EM_DIAGRAM):   else do;
1155837   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1155838   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1155839   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1155840   +   end;
MPRINT(EM_DIAGRAM):   end;
1155841   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1155842   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1155843   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1155844   +   end;
MPRINT(EM_DIAGRAM):   end;
1155845   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1155846   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1155847   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1155848   +   end;
MPRINT(EM_DIAGRAM):   end;
1155849   +end;
MPRINT(EM_DIAGRAM):   end;
1155850   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1155851   +   P_DepVar1  =     1.18423178138253 * H11  +     2.38126931545785 * H12
1155852   +          +    -2.42139186007404 * H13  +      -2.187729844004 * H14
1155853   +          +    -0.38226616805204 * H15  +      1.1710139734699 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.18423178138253 * H11 + 2.38126931545785 * H12 + 
-2.42139186007404 * H13 + -2.187729844004 * H14 + -0.38226616805204 * H15 + 1.1710139734699 * 
H16 ;
1155854   +   P_DepVar1  =    -1.69958173763243 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.69958173763243 + P_DepVar1 ;
1155855   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1155856   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1155857   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1155858   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1155859   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1155860   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1155861   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1155862   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1155863   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1155864   +END;
MPRINT(EM_DIAGRAM):   END;
1155865   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1155866   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1155867   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1155868   +END;
MPRINT(EM_DIAGRAM):   END;
1155869   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1155870   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1155871   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1155872   +END;
MPRINT(EM_DIAGRAM):   END;
1155873   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1155874   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1155875   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1155876   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1155877   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1155878   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1155879   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1155880   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155881   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1155882   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155883   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1155884   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1155885   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1155886   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1155887   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1155888   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1155889   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1155890   +END;
MPRINT(EM_DIAGRAM):   END;
1155891   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1155892   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1155893   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1155894   +drop
1155895   +H11
1155896   +H12
1155897   +H13
1155898   +H14
1155899   +H15
1155900   +H16
1155901   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1155902   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1155903    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL41_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1155904    quit;
1155905    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1155906    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1155907    * Neural41: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural41: Computing metadata for TRAIN data;
1155908    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL41_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural41_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural41_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural41_TRAIN out=WORK.M2ND9T6R noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2ND9T6R;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ND9T6R(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2ND9T6R;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ND9T6R;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M07P428I NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M07P428I;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M07P428I;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M15G8_LQ(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M07P428I;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M07P428I;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M07P428I;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M07P428I;
MPRINT(EMADVISECOLUMNS):   set WORK.M07P428I;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural41_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural41";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural41";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural41: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1156220    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1156221    set EMWS8.Neural41_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural41_EMINFO;
1156222    where DATA='Neural41' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural41' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1156223    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL41_EMINFO.
      WHERE (DATA='Neural41') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1156224    data EMWS8.Neural41_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural41_EMINFO;
1156225    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1156226    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1156227    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL41_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1156231    run;
1156232    data EMWS8.Neural41_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural41_EMINFO;
1156233    set EMWS8.Neural41_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural41_EMINFO WORK.MODELTEMP_INFO;
1156234    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL41_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL41_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1156235    proc sort data = EMWS8.Neural41_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural41_EMINFO NOTHREADS;
1156236    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1156237    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL41_EMINFO.
NOTE: The data set EMWS8.NEURAL41_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1156238    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1156239    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1156240    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1156241    proc sort data = EMWS8.Neural41_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural41_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1156242    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1156243    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL41_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1156244    data EMWS8.Neural41_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural41_EMINFO;
1156245    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1156246    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1156247    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL41_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1156248    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1156249    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1156250    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1156251    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL41_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL41_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
