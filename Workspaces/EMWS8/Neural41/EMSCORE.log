MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.29 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.29 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0RUD3EJ 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0RUD3EJ new;
MPRINT(EM_DIAGRAM):   run;
1169908    data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
1169909    set EMWS8.Neural41_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural41_OUTKEY;
1169910    if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
1169911    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 49 observations read from the data set EMWS8.NEURAL41_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1169912    filename emflow
1169912  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural41: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1169913    *------------------------------------------------------------*;
1169914    * Neural41: Scoring DATA data;
1169915    *------------------------------------------------------------*;
1169916    data EMWS8.Neural41_TRAIN
1169917    / view=EMWS8.Neural41_TRAIN
1169918    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural41_TRAIN / view=EMWS8.Neural41_TRAIN ;
1169919    set EMWS8.Meta3_TRAIN
1169920    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
1169921    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas.
1169922   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1169923   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1169924   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1169925   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1169926   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1169927   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1169928   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1169929   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1169930   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1169931   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1169932   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1169933   +LENGTH _WARN_ $4
1169934   +      F_DepVar  $ 12
1169935   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1169936   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1169937   +
1169938   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1169939   +
1169940   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1169941   +
1169942   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1169943   +
1169944   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1169945   +
1169946   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1169947   +
1169948   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1169949   +
1169950   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1169951   +
1169952   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1169953   +
1169954   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1169955   +
1169956   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1169957   +
1169958   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1169959   +
1169960   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1169961   +
1169962   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1169963   +
1169964   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1169965   +
1169966   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1169967   +
1169968   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1169969   +
1169970   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1169971   +
1169972   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1169973   +
1169974   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1169975   +
1169976   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1169977   +
1169978   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1169979   +
1169980   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1169981   +
1169982   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1169983   +
1169984   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1169985   +
1169986   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1169987   +
1169988   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1169989   +
1169990   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1169991   +
1169992   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1169993   +
1169994   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1169995   +
1169996   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1169997   +
1169998   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1169999   +
1170000   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1170001   +
1170002   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1170003   +
1170004   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1170005   +
1170006   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1170007   +
1170008   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1170009   +
1170010   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1170011   +
1170012   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1170013   +
1170014   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1170015   +
1170016   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1170017   +
1170018   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1170019   +
1170020   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1170021   +
1170022   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1170023   +
1170024   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1170025   +
1170026   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1170027   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1170028   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1170029   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1170030   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1170031   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170032   +end;
MPRINT(EM_DIAGRAM):   end;
1170033   +else do;
MPRINT(EM_DIAGRAM):   else do;
1170034   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1170035   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1170036   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1170037   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1170038   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1170039   +   end;
MPRINT(EM_DIAGRAM):   end;
1170040   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1170041   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1170042   +   end;
MPRINT(EM_DIAGRAM):   end;
1170043   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1170044   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1170045   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1170046   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170047   +   end;
MPRINT(EM_DIAGRAM):   end;
1170048   +end;
MPRINT(EM_DIAGRAM):   end;
1170049   +
1170050   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1170051   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1170052   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1170053   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1170054   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1170055   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170056   +end;
MPRINT(EM_DIAGRAM):   end;
1170057   +else do;
MPRINT(EM_DIAGRAM):   else do;
1170058   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1170059   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1170060   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1170061   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1170062   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1170063   +   end;
MPRINT(EM_DIAGRAM):   end;
1170064   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1170065   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1170066   +   end;
MPRINT(EM_DIAGRAM):   end;
1170067   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1170068   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1170069   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1170070   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170071   +   end;
MPRINT(EM_DIAGRAM):   end;
1170072   +end;
MPRINT(EM_DIAGRAM):   end;
1170073   +
1170074   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1170075   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1170076   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1170077   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1170078   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1170079   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170080   +end;
MPRINT(EM_DIAGRAM):   end;
1170081   +else do;
MPRINT(EM_DIAGRAM):   else do;
1170082   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1170083   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1170084   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1170085   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1170086   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1170087   +   end;
MPRINT(EM_DIAGRAM):   end;
1170088   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1170089   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1170090   +   end;
MPRINT(EM_DIAGRAM):   end;
1170091   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1170092   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1170093   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1170094   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170095   +   end;
MPRINT(EM_DIAGRAM):   end;
1170096   +end;
MPRINT(EM_DIAGRAM):   end;
1170097   +
1170098   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1170099   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1170100   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1170101   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1170102   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1170103   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170104   +end;
MPRINT(EM_DIAGRAM):   end;
1170105   +else do;
MPRINT(EM_DIAGRAM):   else do;
1170106   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1170107   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1170108   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1170109   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1170110   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1170111   +   end;
MPRINT(EM_DIAGRAM):   end;
1170112   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1170113   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1170114   +   end;
MPRINT(EM_DIAGRAM):   end;
1170115   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1170116   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1170117   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1170118   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170119   +   end;
MPRINT(EM_DIAGRAM):   end;
1170120   +end;
MPRINT(EM_DIAGRAM):   end;
1170121   +
1170122   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1170123   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1170124   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1170125   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1170126   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1170127   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170128   +end;
MPRINT(EM_DIAGRAM):   end;
1170129   +else do;
MPRINT(EM_DIAGRAM):   else do;
1170130   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1170131   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1170132   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1170133   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1170134   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1170135   +   end;
MPRINT(EM_DIAGRAM):   end;
1170136   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1170137   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1170138   +   end;
MPRINT(EM_DIAGRAM):   end;
1170139   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1170140   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1170141   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1170142   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170143   +   end;
MPRINT(EM_DIAGRAM):   end;
1170144   +end;
MPRINT(EM_DIAGRAM):   end;
1170145   +
1170146   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1170147   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1170148   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1170149   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1170150   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1170151   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170152   +end;
MPRINT(EM_DIAGRAM):   end;
1170153   +else do;
MPRINT(EM_DIAGRAM):   else do;
1170154   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1170155   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1170156   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1170157   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1170158   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1170159   +   end;
MPRINT(EM_DIAGRAM):   end;
1170160   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1170161   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1170162   +   end;
MPRINT(EM_DIAGRAM):   end;
1170163   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1170164   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1170165   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1170166   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170167   +   end;
MPRINT(EM_DIAGRAM):   end;
1170168   +end;
MPRINT(EM_DIAGRAM):   end;
1170169   +
1170170   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1170171   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1170172   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1170173   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1170174   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1170175   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170176   +end;
MPRINT(EM_DIAGRAM):   end;
1170177   +else do;
MPRINT(EM_DIAGRAM):   else do;
1170178   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1170179   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1170180   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1170181   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1170182   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1170183   +   end;
MPRINT(EM_DIAGRAM):   end;
1170184   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1170185   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1170186   +   end;
MPRINT(EM_DIAGRAM):   end;
1170187   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1170188   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1170189   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1170190   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170191   +   end;
MPRINT(EM_DIAGRAM):   end;
1170192   +end;
MPRINT(EM_DIAGRAM):   end;
1170193   +
1170194   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1170195   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1170196   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1170197   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1170198   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1170199   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1170200   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1170201   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1170202   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1170203   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1170204   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1170205   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1170206   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1170207   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170208   +end;
MPRINT(EM_DIAGRAM):   end;
1170209   +else do;
MPRINT(EM_DIAGRAM):   else do;
1170210   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1170211   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1170212   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1170213   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1170214   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1170215   +   end;
MPRINT(EM_DIAGRAM):   end;
1170216   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1170217   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1170218   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1170219   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1170220   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1170221   +   end;
MPRINT(EM_DIAGRAM):   end;
1170222   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1170223   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1170224   +   end;
MPRINT(EM_DIAGRAM):   end;
1170225   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1170226   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1170227   +   end;
MPRINT(EM_DIAGRAM):   end;
1170228   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1170229   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1170230   +   end;
MPRINT(EM_DIAGRAM):   end;
1170231   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1170232   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1170233   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1170234   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1170235   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1170236   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1170237   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170238   +   end;
MPRINT(EM_DIAGRAM):   end;
1170239   +end;
MPRINT(EM_DIAGRAM):   end;
1170240   +
1170241   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1170242   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1170243   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1170244   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1170245   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1170246   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1170247   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1170248   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1170249   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1170250   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1170251   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1170252   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1170253   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1170254   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1170255   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170256   +end;
MPRINT(EM_DIAGRAM):   end;
1170257   +else do;
MPRINT(EM_DIAGRAM):   else do;
1170258   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1170259   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1170260   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1170261   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1170262   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1170263   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1170264   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1170265   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1170266   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1170267   +         end;
MPRINT(EM_DIAGRAM):   end;
1170268   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1170269   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1170270   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1170271   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1170272   +            end;
MPRINT(EM_DIAGRAM):   end;
1170273   +         end;
MPRINT(EM_DIAGRAM):   end;
1170274   +      end;
MPRINT(EM_DIAGRAM):   end;
1170275   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1170276   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1170277   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1170278   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1170279   +         end;
MPRINT(EM_DIAGRAM):   end;
1170280   +      end;
MPRINT(EM_DIAGRAM):   end;
1170281   +   end;
MPRINT(EM_DIAGRAM):   end;
1170282   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1170283   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1170284   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1170285   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1170286   +      end;
MPRINT(EM_DIAGRAM):   end;
1170287   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1170288   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1170289   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1170290   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1170291   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1170292   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1170293   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1170294   +         end;
MPRINT(EM_DIAGRAM):   end;
1170295   +      end;
MPRINT(EM_DIAGRAM):   end;
1170296   +   end;
MPRINT(EM_DIAGRAM):   end;
1170297   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1170298   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1170299   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1170300   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1170301   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1170302   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1170303   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170304   +   end;
MPRINT(EM_DIAGRAM):   end;
1170305   +end;
MPRINT(EM_DIAGRAM):   end;
1170306   +
1170307   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1170308   +*** Checking missing input Interval
1170309   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1170310   +
1170311   +IF NMISS(
1170312   +   AcceptedCmpTotal ,
1170313   +   Age ,
1170314   +   Frq ,
1170315   +   Income ,
1170316   +   Kidhome ,
1170317   +   MntFishProducts ,
1170318   +   MntFruits ,
1170319   +   MntGoldProds ,
1170320   +   MntSweetProducts ,
1170321   +   MonthsAsCustomer ,
1170322   +   NumDealsPurchases ,
1170323   +   NumWebVisitsMonth ,
1170324   +   RFMstat ,
1170325   +   RMntFrq ,
1170326   +   Recency ,
1170327   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1170328   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1170329   +
1170330   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170331   +END;
MPRINT(EM_DIAGRAM):   END;
1170332   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1170333   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1170334   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1170335   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1170336   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1170337   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1170338   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1170339   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1170340   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1170341   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1170342   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1170343   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1170344   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1170345   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1170346   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1170347   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1170348   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1170349   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1170350   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1170351   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1170352   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1170353   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1170354   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1170355   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1170356   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1170357   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1170358   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1170359   +END;
MPRINT(EM_DIAGRAM):   END;
1170360   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1170361   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1170362   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1170363   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1170364   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1170365   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1170366   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1170367   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1170368   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1170369   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1170370   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1170371   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1170372   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1170373   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1170374   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1170375   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1170376   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1170377   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1170378   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1170379   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1170380   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1170381   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1170382   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1170383   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1170384   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1170385   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1170386   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1170387   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1170388   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1170389   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1170390   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1170391   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1170392   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1170393   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1170394   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1170395   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1170396   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1170397   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1170398   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1170399   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1170400   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1170401   +END;
MPRINT(EM_DIAGRAM):   END;
1170402   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1170403   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1170404   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1170405   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1170406   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1170407   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1170408   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1170409   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1170410   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1170411   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1170412   +   H11  =      0.0008226807158 * S_AcceptedCmpTotal  +    -0.13079988413445 *
1170413   +        S_Age  +    -0.18186889239879 * S_Frq  +     0.00434831119231 *
1170414   +        S_Income  +    -0.53011815040389 * S_Kidhome
1170415   +          +     0.07798575279605 * S_MntFishProducts
1170416   +          +    -0.04638001961046 * S_MntFruits  +     0.05519829379656 *
1170417   +        S_MntGoldProds  +    -0.39625749892117 * S_MntSweetProducts
1170418   +          +    -0.43868326715852 * S_MonthsAsCustomer
1170419   +          +    -0.20150528265823 * S_NumDealsPurchases
1170420   +          +     0.06302113040532 * S_NumWebVisitsMonth
1170421   +          +      0.1350599599417 * S_RFMstat  +    -0.29383555338259 *
1170422   +        S_RMntFrq  +    -0.68766827249955 * S_Recency
1170423   +          +    -0.29183727562247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.0008226807158 * S_AcceptedCmpTotal + -0.13079988413445 * S_Age + 
-0.18186889239879 * S_Frq + 0.00434831119231 * S_Income + -0.53011815040389 * S_Kidhome + 
0.07798575279605 * S_MntFishProducts + -0.04638001961046 * S_MntFruits + 0.05519829379656 * 
S_MntGoldProds + -0.39625749892117 * S_MntSweetProducts + -0.43868326715852 * 
S_MonthsAsCustomer + -0.20150528265823 * S_NumDealsPurchases + 0.06302113040532 * 
S_NumWebVisitsMonth + 0.1350599599417 * S_RFMstat + -0.29383555338259 * S_RMntFrq + 
-0.68766827249955 * S_Recency + -0.29183727562247 * S_Teenhome ;
1170424   +   H12  =     0.39055667226149 * S_AcceptedCmpTotal  +    -0.01370934848049 *
1170425   +        S_Age  +     0.24087739377669 * S_Frq  +      0.6385645265661 *
1170426   +        S_Income  +     0.91005509221929 * S_Kidhome
1170427   +          +     0.26314513971971 * S_MntFishProducts
1170428   +          +    -0.31269343103037 * S_MntFruits  +     0.14926981327092 *
1170429   +        S_MntGoldProds  +     0.23823473046762 * S_MntSweetProducts
1170430   +          +    -0.11762692239171 * S_MonthsAsCustomer
1170431   +          +     0.66369415921808 * S_NumDealsPurchases
1170432   +          +     0.34818395961585 * S_NumWebVisitsMonth
1170433   +          +     0.15957643046632 * S_RFMstat  +       0.043074454712 *
1170434   +        S_RMntFrq  +     -0.8279410878863 * S_Recency
1170435   +          +    -0.37857896695074 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.39055667226149 * S_AcceptedCmpTotal + -0.01370934848049 * S_Age 
+ 0.24087739377669 * S_Frq + 0.6385645265661 * S_Income + 0.91005509221929 * S_Kidhome + 
0.26314513971971 * S_MntFishProducts + -0.31269343103037 * S_MntFruits + 0.14926981327092 * 
S_MntGoldProds + 0.23823473046762 * S_MntSweetProducts + -0.11762692239171 * 
S_MonthsAsCustomer + 0.66369415921808 * S_NumDealsPurchases + 0.34818395961585 * 
S_NumWebVisitsMonth + 0.15957643046632 * S_RFMstat + 0.043074454712 * S_RMntFrq + 
-0.8279410878863 * S_Recency + -0.37857896695074 * S_Teenhome ;
1170436   +   H13  =     0.01761535715706 * S_AcceptedCmpTotal  +      -0.178245965481 *
1170437   +        S_Age  +    -0.38345114554341 * S_Frq  +    -0.85875480356991 *
1170438   +        S_Income  +     0.62650302214702 * S_Kidhome
1170439   +          +     0.15114878471783 * S_MntFishProducts
1170440   +          +    -0.04867026102421 * S_MntFruits  +    -0.02464340314012 *
1170441   +        S_MntGoldProds  +     0.25958757216658 * S_MntSweetProducts
1170442   +          +    -0.21247922433607 * S_MonthsAsCustomer
1170443   +          +     0.29870259291589 * S_NumDealsPurchases
1170444   +          +    -0.15551171574573 * S_NumWebVisitsMonth
1170445   +          +    -0.02668833787849 * S_RFMstat  +     -0.3938077247244 *
1170446   +        S_RMntFrq  +     0.37292679100385 * S_Recency
1170447   +          +     0.58536255154591 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.01761535715706 * S_AcceptedCmpTotal + -0.178245965481 * S_Age + 
-0.38345114554341 * S_Frq + -0.85875480356991 * S_Income + 0.62650302214702 * S_Kidhome + 
0.15114878471783 * S_MntFishProducts + -0.04867026102421 * S_MntFruits + -0.02464340314012 * 
S_MntGoldProds + 0.25958757216658 * S_MntSweetProducts + -0.21247922433607 * 
S_MonthsAsCustomer + 0.29870259291589 * S_NumDealsPurchases + -0.15551171574573 * 
S_NumWebVisitsMonth + -0.02668833787849 * S_RFMstat + -0.3938077247244 * S_RMntFrq + 
0.37292679100385 * S_Recency + 0.58536255154591 * S_Teenhome ;
1170448   +   H14  =    -0.23067808386271 * S_AcceptedCmpTotal  +      0.2795284747435 *
1170449   +        S_Age  +     0.88920181420929 * S_Frq  +     0.17396080204168 *
1170450   +        S_Income  +    -0.00823748207218 * S_Kidhome
1170451   +          +    -0.26914878127706 * S_MntFishProducts
1170452   +          +     0.32721028770496 * S_MntFruits  +     0.07070268272045 *
1170453   +        S_MntGoldProds  +    -0.35290123515707 * S_MntSweetProducts
1170454   +          +    -0.02974642168316 * S_MonthsAsCustomer
1170455   +          +    -0.63307764160477 * S_NumDealsPurchases
1170456   +          +    -0.86210034703857 * S_NumWebVisitsMonth
1170457   +          +    -0.16450375531942 * S_RFMstat  +     -0.0920077372506 *
1170458   +        S_RMntFrq  +     0.61882336952278 * S_Recency
1170459   +          +    -0.21217863284358 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.23067808386271 * S_AcceptedCmpTotal + 0.2795284747435 * S_Age + 
0.88920181420929 * S_Frq + 0.17396080204168 * S_Income + -0.00823748207218 * S_Kidhome + 
-0.26914878127706 * S_MntFishProducts + 0.32721028770496 * S_MntFruits + 0.07070268272045 * 
S_MntGoldProds + -0.35290123515707 * S_MntSweetProducts + -0.02974642168316 * 
S_MonthsAsCustomer + -0.63307764160477 * S_NumDealsPurchases + -0.86210034703857 * 
S_NumWebVisitsMonth + -0.16450375531942 * S_RFMstat + -0.0920077372506 * S_RMntFrq + 
0.61882336952278 * S_Recency + -0.21217863284358 * S_Teenhome ;
1170460   +   H15  =     0.08444141658062 * S_AcceptedCmpTotal  +    -0.03922634475077 *
1170461   +        S_Age  +     0.26114587238563 * S_Frq  +     0.30374331939028 *
1170462   +        S_Income  +     -0.2421178734201 * S_Kidhome
1170463   +          +    -0.19019330388039 * S_MntFishProducts
1170464   +          +    -0.22928418606812 * S_MntFruits  +    -0.34980290580426 *
1170465   +        S_MntGoldProds  +    -0.02640373527826 * S_MntSweetProducts
1170466   +          +     0.04217213390907 * S_MonthsAsCustomer
1170467   +          +    -0.43394541277085 * S_NumDealsPurchases
1170468   +          +    -0.27821724458462 * S_NumWebVisitsMonth
1170469   +          +     0.15130301601187 * S_RFMstat  +     0.24450838354469 *
1170470   +        S_RMntFrq  +     0.50442944125738 * S_Recency
1170471   +          +     -0.2256501036913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.08444141658062 * S_AcceptedCmpTotal + -0.03922634475077 * S_Age 
+ 0.26114587238563 * S_Frq + 0.30374331939028 * S_Income + -0.2421178734201 * S_Kidhome + 
-0.19019330388039 * S_MntFishProducts + -0.22928418606812 * S_MntFruits + -0.34980290580426 * 
S_MntGoldProds + -0.02640373527826 * S_MntSweetProducts + 0.04217213390907 * 
S_MonthsAsCustomer + -0.43394541277085 * S_NumDealsPurchases + -0.27821724458462 * 
S_NumWebVisitsMonth + 0.15130301601187 * S_RFMstat + 0.24450838354469 * S_RMntFrq + 
0.50442944125738 * S_Recency + -0.2256501036913 * S_Teenhome ;
1170472   +   H16  =     0.04374591358456 * S_AcceptedCmpTotal  +     -0.2751915893845 *
1170473   +        S_Age  +    -0.17372079221228 * S_Frq  +     0.53295067221555 *
1170474   +        S_Income  +    -0.25554119630622 * S_Kidhome
1170475   +          +    -0.04166493246597 * S_MntFishProducts
1170476   +          +    -0.06487290273448 * S_MntFruits  +    -0.00905943807166 *
1170477   +        S_MntGoldProds  +    -0.02954875571593 * S_MntSweetProducts
1170478   +          +    -0.00047914053162 * S_MonthsAsCustomer
1170479   +          +     0.27113708386032 * S_NumDealsPurchases
1170480   +          +      0.2230890818172 * S_NumWebVisitsMonth
1170481   +          +     0.08637996401688 * S_RFMstat  +     0.10242942070091 *
1170482   +        S_RMntFrq  +    -0.89858232865076 * S_Recency
1170483   +          +    -0.26683150727678 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.04374591358456 * S_AcceptedCmpTotal + -0.2751915893845 * S_Age + 
-0.17372079221228 * S_Frq + 0.53295067221555 * S_Income + -0.25554119630622 * S_Kidhome + 
-0.04166493246597 * S_MntFishProducts + -0.06487290273448 * S_MntFruits + -0.00905943807166 * 
S_MntGoldProds + -0.02954875571593 * S_MntSweetProducts + -0.00047914053162 * 
S_MonthsAsCustomer + 0.27113708386032 * S_NumDealsPurchases + 0.2230890818172 * 
S_NumWebVisitsMonth + 0.08637996401688 * S_RFMstat + 0.10242942070091 * S_RMntFrq + 
-0.89858232865076 * S_Recency + -0.26683150727678 * S_Teenhome ;
1170484   +   H11  = H11  +      0.2420532776991 * AcceptedCmp10
1170485   +          +     0.02694604108098 * AcceptedCmp20  +     0.06010577635911 *
1170486   +        AcceptedCmp30  +    -0.43469683295349 * AcceptedCmp40
1170487   +          +    -0.00225551219247 * AcceptedCmp50  +     0.43197139863535 *
1170488   +        Complain0  +      0.2323752775589 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.2420532776991 * AcceptedCmp10 + 0.02694604108098 * 
AcceptedCmp20 + 0.06010577635911 * AcceptedCmp30 + -0.43469683295349 * AcceptedCmp40 + 
-0.00225551219247 * AcceptedCmp50 + 0.43197139863535 * Complain0 + 0.2323752775589 * 
HigherEducationBinary0 ;
1170489   +   H12  = H12  +      0.0418845409836 * AcceptedCmp10
1170490   +          +    -0.01079705732899 * AcceptedCmp20  +    -0.29526959542283 *
1170491   +        AcceptedCmp30  +     0.58938855079432 * AcceptedCmp40
1170492   +          +    -0.40652812652647 * AcceptedCmp50  +       0.594077548144 *
1170493   +        Complain0  +    -0.31255483011975 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.0418845409836 * AcceptedCmp10 + -0.01079705732899 * 
AcceptedCmp20 + -0.29526959542283 * AcceptedCmp30 + 0.58938855079432 * AcceptedCmp40 + 
-0.40652812652647 * AcceptedCmp50 + 0.594077548144 * Complain0 + -0.31255483011975 * 
HigherEducationBinary0 ;
1170494   +   H13  = H13  +     0.49883844557768 * AcceptedCmp10
1170495   +          +     0.42674404967605 * AcceptedCmp20  +     0.29339018006371 *
1170496   +        AcceptedCmp30  +     0.54178658137703 * AcceptedCmp40
1170497   +          +     0.11058374076127 * AcceptedCmp50  +     0.11090027293948 *
1170498   +        Complain0  +    -0.44686878118331 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.49883844557768 * AcceptedCmp10 + 0.42674404967605 * 
AcceptedCmp20 + 0.29339018006371 * AcceptedCmp30 + 0.54178658137703 * AcceptedCmp40 + 
0.11058374076127 * AcceptedCmp50 + 0.11090027293948 * Complain0 + -0.44686878118331 * 
HigherEducationBinary0 ;
1170499   +   H14  = H14  +     0.70177037762742 * AcceptedCmp10
1170500   +          +     0.03868361905724 * AcceptedCmp20  +      0.7582949125852 *
1170501   +        AcceptedCmp30  +     0.10306711606837 * AcceptedCmp40
1170502   +          +     0.40988843645402 * AcceptedCmp50  +     0.19161446313882 *
1170503   +        Complain0  +     0.09113445636937 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.70177037762742 * AcceptedCmp10 + 0.03868361905724 * 
AcceptedCmp20 + 0.7582949125852 * AcceptedCmp30 + 0.10306711606837 * AcceptedCmp40 + 
0.40988843645402 * AcceptedCmp50 + 0.19161446313882 * Complain0 + 0.09113445636937 * 
HigherEducationBinary0 ;
1170504   +   H15  = H15  +     0.30528471213622 * AcceptedCmp10
1170505   +          +    -0.01583520039877 * AcceptedCmp20  +     0.09319095124312 *
1170506   +        AcceptedCmp30  +     0.03503111555527 * AcceptedCmp40
1170507   +          +     0.19732231305873 * AcceptedCmp50  +    -0.32344950489145 *
1170508   +        Complain0  +    -0.20793136544812 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30528471213622 * AcceptedCmp10 + -0.01583520039877 * 
AcceptedCmp20 + 0.09319095124312 * AcceptedCmp30 + 0.03503111555527 * AcceptedCmp40 + 
0.19732231305873 * AcceptedCmp50 + -0.32344950489145 * Complain0 + -0.20793136544812 * 
HigherEducationBinary0 ;
1170509   +   H16  = H16  +      -0.197363329461 * AcceptedCmp10
1170510   +          +     0.01373408247141 * AcceptedCmp20  +    -0.28302701132077 *
1170511   +        AcceptedCmp30  +    -0.13213187292914 * AcceptedCmp40
1170512   +          +    -0.04492941290682 * AcceptedCmp50  +     -0.1996561599765 *
1170513   +        Complain0  +     0.14532553420948 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.197363329461 * AcceptedCmp10 + 0.01373408247141 * 
AcceptedCmp20 + -0.28302701132077 * AcceptedCmp30 + -0.13213187292914 * AcceptedCmp40 + 
-0.04492941290682 * AcceptedCmp50 + -0.1996561599765 * Complain0 + 0.14532553420948 * 
HigherEducationBinary0 ;
1170514   +   H11  = H11  +     0.05185932264462 * Education2n_Cycle
1170515   +          +    -0.08049073469669 * EducationBasic  +    -0.01273883208394 *
1170516   +        EducationGraduation  +     0.01672434885938 * EducationMaster
1170517   +          +      0.1247897348584 * Marital_StatusDivorced
1170518   +          +    -0.02487802842095 * Marital_StatusMarried
1170519   +          +     0.04087485047811 * Marital_StatusSingle
1170520   +          +     0.02032230199979 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05185932264462 * Education2n_Cycle + -0.08049073469669 * 
EducationBasic + -0.01273883208394 * EducationGraduation + 0.01672434885938 * EducationMaster 
+ 0.1247897348584 * Marital_StatusDivorced + -0.02487802842095 * Marital_StatusMarried + 
0.04087485047811 * Marital_StatusSingle + 0.02032230199979 * Marital_StatusTogether ;
1170521   +   H12  = H12  +    -0.18957172593422 * Education2n_Cycle
1170522   +          +     0.13527696352941 * EducationBasic  +    -0.00239660031532 *
1170523   +        EducationGraduation  +     0.00550624186666 * EducationMaster
1170524   +          +     0.19258280536293 * Marital_StatusDivorced
1170525   +          +     -0.1513365484224 * Marital_StatusMarried
1170526   +          +     0.24428021275955 * Marital_StatusSingle
1170527   +          +     0.09103830773223 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18957172593422 * Education2n_Cycle + 0.13527696352941 * 
EducationBasic + -0.00239660031532 * EducationGraduation + 0.00550624186666 * EducationMaster 
+ 0.19258280536293 * Marital_StatusDivorced + -0.1513365484224 * Marital_StatusMarried + 
0.24428021275955 * Marital_StatusSingle + 0.09103830773223 * Marital_StatusTogether ;
1170528   +   H13  = H13  +     0.02098627668197 * Education2n_Cycle
1170529   +          +      0.0580330260954 * EducationBasic  +    -0.44505513897295 *
1170530   +        EducationGraduation  +     0.17237699716249 * EducationMaster
1170531   +          +    -0.19344679470577 * Marital_StatusDivorced
1170532   +          +     0.75587070758138 * Marital_StatusMarried
1170533   +          +    -0.65993136500147 * Marital_StatusSingle
1170534   +          +     0.58034892534704 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02098627668197 * Education2n_Cycle + 0.0580330260954 * 
EducationBasic + -0.44505513897295 * EducationGraduation + 0.17237699716249 * EducationMaster 
+ -0.19344679470577 * Marital_StatusDivorced + 0.75587070758138 * Marital_StatusMarried + 
-0.65993136500147 * Marital_StatusSingle + 0.58034892534704 * Marital_StatusTogether ;
1170535   +   H14  = H14  +      0.1859168336856 * Education2n_Cycle
1170536   +          +    -0.06308135212768 * EducationBasic  +    -0.27356179131381 *
1170537   +        EducationGraduation  +      -0.306174241941 * EducationMaster
1170538   +          +    -0.18717675910714 * Marital_StatusDivorced
1170539   +          +    -0.15181048866652 * Marital_StatusMarried
1170540   +          +     0.15597021159938 * Marital_StatusSingle
1170541   +          +    -0.03726120161813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.1859168336856 * Education2n_Cycle + -0.06308135212768 * 
EducationBasic + -0.27356179131381 * EducationGraduation + -0.306174241941 * EducationMaster + 
-0.18717675910714 * Marital_StatusDivorced + -0.15181048866652 * Marital_StatusMarried + 
0.15597021159938 * Marital_StatusSingle + -0.03726120161813 * Marital_StatusTogether ;
1170542   +   H15  = H15  +    -0.12193342286067 * Education2n_Cycle
1170543   +          +     0.20525778906074 * EducationBasic  +     0.04967185521727 *
1170544   +        EducationGraduation  +    -0.21821780206446 * EducationMaster
1170545   +          +    -0.10132599459296 * Marital_StatusDivorced
1170546   +          +     0.14113826410264 * Marital_StatusMarried
1170547   +          +    -0.18380525511118 * Marital_StatusSingle
1170548   +          +     0.23156188953493 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.12193342286067 * Education2n_Cycle + 0.20525778906074 * 
EducationBasic + 0.04967185521727 * EducationGraduation + -0.21821780206446 * EducationMaster 
+ -0.10132599459296 * Marital_StatusDivorced + 0.14113826410264 * Marital_StatusMarried + 
-0.18380525511118 * Marital_StatusSingle + 0.23156188953493 * Marital_StatusTogether ;
1170549   +   H16  = H16  +     0.03162941262342 * Education2n_Cycle
1170550   +          +    -0.45867622010455 * EducationBasic  +    -0.08178251039016 *
1170551   +        EducationGraduation  +     -0.1990982641521 * EducationMaster
1170552   +          +     0.04797839463285 * Marital_StatusDivorced
1170553   +          +    -0.38756124755799 * Marital_StatusMarried
1170554   +          +      0.3042262890255 * Marital_StatusSingle
1170555   +          +    -0.28172576605756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03162941262342 * Education2n_Cycle + -0.45867622010455 * 
EducationBasic + -0.08178251039016 * EducationGraduation + -0.1990982641521 * EducationMaster 
+ 0.04797839463285 * Marital_StatusDivorced + -0.38756124755799 * Marital_StatusMarried + 
0.3042262890255 * Marital_StatusSingle + -0.28172576605756 * Marital_StatusTogether ;
1170556   +   H11  =     1.39567717675367 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.39567717675367 + H11 ;
1170557   +   H12  =     0.19220435511693 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.19220435511693 + H12 ;
1170558   +   H13  =     0.55786873663699 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.55786873663699 + H13 ;
1170559   +   H14  =     0.28152400973799 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.28152400973799 + H14 ;
1170560   +   H15  =     1.08936778651476 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.08936778651476 + H15 ;
1170561   +   H16  =     -0.2268073967479 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.2268073967479 + H16 ;
1170562   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1170563   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1170564   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1170565   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1170566   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1170567   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1170568   +END;
MPRINT(EM_DIAGRAM):   END;
1170569   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1170570   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1170571   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1170572   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1170573   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1170574   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1170575   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1170576   +END;
MPRINT(EM_DIAGRAM):   END;
1170577   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1170578   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1170579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1170580   +
1170581   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1170582   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1170583   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1170584   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1170585   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1170586   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1170587   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1170588   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1170589   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1170590   +end;
MPRINT(EM_DIAGRAM):   end;
1170591   +else do;
MPRINT(EM_DIAGRAM):   else do;
1170592   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1170593   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1170594   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1170595   +   end;
MPRINT(EM_DIAGRAM):   end;
1170596   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1170597   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1170598   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1170599   +   end;
MPRINT(EM_DIAGRAM):   end;
1170600   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1170601   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1170602   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1170603   +   end;
MPRINT(EM_DIAGRAM):   end;
1170604   +end;
MPRINT(EM_DIAGRAM):   end;
1170605   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1170606   +   P_DepVar1  =       1.190486795477 * H11  +     2.38320433896182 * H12
1170607   +          +    -2.42159759131581 * H13  +    -2.18917732939624 * H14
1170608   +          +    -0.38101990662686 * H15  +     1.17308047763791 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.190486795477 * H11 + 2.38320433896182 * H12 + 
-2.42159759131581 * H13 + -2.18917732939624 * H14 + -0.38101990662686 * H15 + 1.17308047763791 
* H16 ;
1170609   +   P_DepVar1  =    -1.69959324221607 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.69959324221607 + P_DepVar1 ;
1170610   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1170611   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1170612   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1170613   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1170614   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1170615   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1170616   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1170617   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1170618   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1170619   +END;
MPRINT(EM_DIAGRAM):   END;
1170620   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1170621   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1170622   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1170623   +END;
MPRINT(EM_DIAGRAM):   END;
1170624   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1170625   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1170626   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1170627   +END;
MPRINT(EM_DIAGRAM):   END;
1170628   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1170629   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1170630   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1170631   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1170632   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1170633   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1170634   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1170635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1170636   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1170637   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1170638   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1170639   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1170640   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1170641   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1170642   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1170643   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1170644   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1170645   +END;
MPRINT(EM_DIAGRAM):   END;
1170646   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1170647   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1170648   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1170649   +drop
1170650   +H11
1170651   +H12
1170652   +H13
1170653   +H14
1170654   +H15
1170655   +H16
1170656   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1170657   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1170658    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL41_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1170659    quit;
1170660    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1170661    filename emflow
1170661  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural41: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1170662    *------------------------------------------------------------*;
1170663    * Neural41: Scoring VALIDATE data;
1170664    *------------------------------------------------------------*;
1170665    data EMWS8.Neural41_VALIDATE
1170666    / view=EMWS8.Neural41_VALIDATE
1170667    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural41_VALIDATE / view=EMWS8.Neural41_VALIDATE ;
1170668    set EMWS8.Meta3_VALIDATE
1170669    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
1170670    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMFLOWSCORE.sas.
1170671   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1170672   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1170673   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1170674   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1170675   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1170676   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1170677   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1170678   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1170679   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1170680   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1170681   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1170682   +LENGTH _WARN_ $4
1170683   +      F_DepVar  $ 12
1170684   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1170685   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1170686   +
1170687   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1170688   +
1170689   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1170690   +
1170691   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1170692   +
1170693   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1170694   +
1170695   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1170696   +
1170697   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1170698   +
1170699   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1170700   +
1170701   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1170702   +
1170703   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1170704   +
1170705   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1170706   +
1170707   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1170708   +
1170709   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1170710   +
1170711   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1170712   +
1170713   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1170714   +
1170715   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1170716   +
1170717   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1170718   +
1170719   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1170720   +
1170721   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1170722   +
1170723   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1170724   +
1170725   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1170726   +
1170727   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1170728   +
1170729   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1170730   +
1170731   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1170732   +
1170733   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1170734   +
1170735   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1170736   +
1170737   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1170738   +
1170739   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1170740   +
1170741   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1170742   +
1170743   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1170744   +
1170745   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1170746   +
1170747   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1170748   +
1170749   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1170750   +
1170751   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1170752   +
1170753   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1170754   +
1170755   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1170756   +
1170757   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1170758   +
1170759   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1170760   +
1170761   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1170762   +
1170763   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1170764   +
1170765   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1170766   +
1170767   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1170768   +
1170769   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1170770   +
1170771   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1170772   +
1170773   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1170774   +
1170775   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1170776   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1170777   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1170778   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1170779   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1170780   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170781   +end;
MPRINT(EM_DIAGRAM):   end;
1170782   +else do;
MPRINT(EM_DIAGRAM):   else do;
1170783   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1170784   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1170785   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1170786   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1170787   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1170788   +   end;
MPRINT(EM_DIAGRAM):   end;
1170789   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1170790   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1170791   +   end;
MPRINT(EM_DIAGRAM):   end;
1170792   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1170793   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1170794   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1170795   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170796   +   end;
MPRINT(EM_DIAGRAM):   end;
1170797   +end;
MPRINT(EM_DIAGRAM):   end;
1170798   +
1170799   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1170800   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1170801   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1170802   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1170803   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1170804   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170805   +end;
MPRINT(EM_DIAGRAM):   end;
1170806   +else do;
MPRINT(EM_DIAGRAM):   else do;
1170807   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1170808   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1170809   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1170810   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1170811   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1170812   +   end;
MPRINT(EM_DIAGRAM):   end;
1170813   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1170814   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1170815   +   end;
MPRINT(EM_DIAGRAM):   end;
1170816   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1170817   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1170818   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1170819   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170820   +   end;
MPRINT(EM_DIAGRAM):   end;
1170821   +end;
MPRINT(EM_DIAGRAM):   end;
1170822   +
1170823   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1170824   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1170825   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1170826   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1170827   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1170828   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170829   +end;
MPRINT(EM_DIAGRAM):   end;
1170830   +else do;
MPRINT(EM_DIAGRAM):   else do;
1170831   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1170832   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1170833   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1170834   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1170835   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1170836   +   end;
MPRINT(EM_DIAGRAM):   end;
1170837   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1170838   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1170839   +   end;
MPRINT(EM_DIAGRAM):   end;
1170840   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1170841   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1170842   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1170843   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170844   +   end;
MPRINT(EM_DIAGRAM):   end;
1170845   +end;
MPRINT(EM_DIAGRAM):   end;
1170846   +
1170847   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1170848   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1170849   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1170850   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1170851   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1170852   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170853   +end;
MPRINT(EM_DIAGRAM):   end;
1170854   +else do;
MPRINT(EM_DIAGRAM):   else do;
1170855   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1170856   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1170857   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1170858   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1170859   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1170860   +   end;
MPRINT(EM_DIAGRAM):   end;
1170861   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1170862   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1170863   +   end;
MPRINT(EM_DIAGRAM):   end;
1170864   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1170865   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1170866   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1170867   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170868   +   end;
MPRINT(EM_DIAGRAM):   end;
1170869   +end;
MPRINT(EM_DIAGRAM):   end;
1170870   +
1170871   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1170872   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1170873   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1170874   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1170875   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1170876   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170877   +end;
MPRINT(EM_DIAGRAM):   end;
1170878   +else do;
MPRINT(EM_DIAGRAM):   else do;
1170879   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1170880   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1170881   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1170882   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1170883   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1170884   +   end;
MPRINT(EM_DIAGRAM):   end;
1170885   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1170886   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1170887   +   end;
MPRINT(EM_DIAGRAM):   end;
1170888   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1170889   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1170890   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1170891   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170892   +   end;
MPRINT(EM_DIAGRAM):   end;
1170893   +end;
MPRINT(EM_DIAGRAM):   end;
1170894   +
1170895   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1170896   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1170897   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1170898   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1170899   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1170900   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170901   +end;
MPRINT(EM_DIAGRAM):   end;
1170902   +else do;
MPRINT(EM_DIAGRAM):   else do;
1170903   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1170904   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1170905   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1170906   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1170907   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1170908   +   end;
MPRINT(EM_DIAGRAM):   end;
1170909   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1170910   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1170911   +   end;
MPRINT(EM_DIAGRAM):   end;
1170912   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1170913   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1170914   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1170915   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170916   +   end;
MPRINT(EM_DIAGRAM):   end;
1170917   +end;
MPRINT(EM_DIAGRAM):   end;
1170918   +
1170919   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1170920   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1170921   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1170922   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1170923   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1170924   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170925   +end;
MPRINT(EM_DIAGRAM):   end;
1170926   +else do;
MPRINT(EM_DIAGRAM):   else do;
1170927   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1170928   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1170929   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1170930   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1170931   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1170932   +   end;
MPRINT(EM_DIAGRAM):   end;
1170933   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1170934   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1170935   +   end;
MPRINT(EM_DIAGRAM):   end;
1170936   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1170937   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1170938   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1170939   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170940   +   end;
MPRINT(EM_DIAGRAM):   end;
1170941   +end;
MPRINT(EM_DIAGRAM):   end;
1170942   +
1170943   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1170944   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1170945   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1170946   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1170947   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1170948   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1170949   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1170950   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1170951   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1170952   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1170953   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1170954   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1170955   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1170956   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170957   +end;
MPRINT(EM_DIAGRAM):   end;
1170958   +else do;
MPRINT(EM_DIAGRAM):   else do;
1170959   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1170960   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1170961   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1170962   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1170963   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1170964   +   end;
MPRINT(EM_DIAGRAM):   end;
1170965   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1170966   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1170967   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1170968   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1170969   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1170970   +   end;
MPRINT(EM_DIAGRAM):   end;
1170971   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1170972   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1170973   +   end;
MPRINT(EM_DIAGRAM):   end;
1170974   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1170975   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1170976   +   end;
MPRINT(EM_DIAGRAM):   end;
1170977   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1170978   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1170979   +   end;
MPRINT(EM_DIAGRAM):   end;
1170980   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1170981   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1170982   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1170983   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1170984   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1170985   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1170986   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1170987   +   end;
MPRINT(EM_DIAGRAM):   end;
1170988   +end;
MPRINT(EM_DIAGRAM):   end;
1170989   +
1170990   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1170991   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1170992   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1170993   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1170994   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1170995   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1170996   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1170997   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1170998   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1170999   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1171000   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1171001   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1171002   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1171003   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171004   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171005   +end;
MPRINT(EM_DIAGRAM):   end;
1171006   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171007   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1171008   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1171009   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171010   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1171011   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1171012   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1171013   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1171014   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1171015   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171016   +         end;
MPRINT(EM_DIAGRAM):   end;
1171017   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171018   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1171019   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1171020   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171021   +            end;
MPRINT(EM_DIAGRAM):   end;
1171022   +         end;
MPRINT(EM_DIAGRAM):   end;
1171023   +      end;
MPRINT(EM_DIAGRAM):   end;
1171024   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1171025   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1171026   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1171027   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171028   +         end;
MPRINT(EM_DIAGRAM):   end;
1171029   +      end;
MPRINT(EM_DIAGRAM):   end;
1171030   +   end;
MPRINT(EM_DIAGRAM):   end;
1171031   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171032   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1171033   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1171034   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171035   +      end;
MPRINT(EM_DIAGRAM):   end;
1171036   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1171037   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1171038   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1171039   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1171040   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1171041   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1171042   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171043   +         end;
MPRINT(EM_DIAGRAM):   end;
1171044   +      end;
MPRINT(EM_DIAGRAM):   end;
1171045   +   end;
MPRINT(EM_DIAGRAM):   end;
1171046   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1171047   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1171048   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1171049   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1171050   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1171051   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171052   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171053   +   end;
MPRINT(EM_DIAGRAM):   end;
1171054   +end;
MPRINT(EM_DIAGRAM):   end;
1171055   +
1171056   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171057   +*** Checking missing input Interval
1171058   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1171059   +
1171060   +IF NMISS(
1171061   +   AcceptedCmpTotal ,
1171062   +   Age ,
1171063   +   Frq ,
1171064   +   Income ,
1171065   +   Kidhome ,
1171066   +   MntFishProducts ,
1171067   +   MntFruits ,
1171068   +   MntGoldProds ,
1171069   +   MntSweetProducts ,
1171070   +   MonthsAsCustomer ,
1171071   +   NumDealsPurchases ,
1171072   +   NumWebVisitsMonth ,
1171073   +   RFMstat ,
1171074   +   RMntFrq ,
1171075   +   Recency ,
1171076   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1171077   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1171078   +
1171079   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171080   +END;
MPRINT(EM_DIAGRAM):   END;
1171081   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171082   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1171083   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171084   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1171085   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1171086   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1171087   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1171088   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1171089   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1171090   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1171091   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1171092   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1171093   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1171094   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1171095   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1171096   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1171097   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1171098   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1171099   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1171100   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1171101   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1171102   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1171103   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1171104   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1171105   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1171106   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1171107   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1171108   +END;
MPRINT(EM_DIAGRAM):   END;
1171109   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1171110   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1171111   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1171112   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1171113   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1171114   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1171115   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1171116   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1171117   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1171118   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1171119   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1171120   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1171121   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1171122   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1171123   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1171124   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1171125   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1171126   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1171127   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1171128   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1171129   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1171130   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1171131   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1171132   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1171133   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1171134   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1171135   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1171136   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1171137   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1171138   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1171139   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1171140   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1171141   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1171142   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1171143   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1171144   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1171145   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1171146   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1171147   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1171148   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1171149   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1171150   +END;
MPRINT(EM_DIAGRAM):   END;
1171151   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171152   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1171153   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171154   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171155   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1171156   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171157   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171158   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1171159   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171160   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1171161   +   H11  =      0.0008226807158 * S_AcceptedCmpTotal  +    -0.13079988413445 *
1171162   +        S_Age  +    -0.18186889239879 * S_Frq  +     0.00434831119231 *
1171163   +        S_Income  +    -0.53011815040389 * S_Kidhome
1171164   +          +     0.07798575279605 * S_MntFishProducts
1171165   +          +    -0.04638001961046 * S_MntFruits  +     0.05519829379656 *
1171166   +        S_MntGoldProds  +    -0.39625749892117 * S_MntSweetProducts
1171167   +          +    -0.43868326715852 * S_MonthsAsCustomer
1171168   +          +    -0.20150528265823 * S_NumDealsPurchases
1171169   +          +     0.06302113040532 * S_NumWebVisitsMonth
1171170   +          +      0.1350599599417 * S_RFMstat  +    -0.29383555338259 *
1171171   +        S_RMntFrq  +    -0.68766827249955 * S_Recency
1171172   +          +    -0.29183727562247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.0008226807158 * S_AcceptedCmpTotal + -0.13079988413445 * S_Age + 
-0.18186889239879 * S_Frq + 0.00434831119231 * S_Income + -0.53011815040389 * S_Kidhome + 
0.07798575279605 * S_MntFishProducts + -0.04638001961046 * S_MntFruits + 0.05519829379656 * 
S_MntGoldProds + -0.39625749892117 * S_MntSweetProducts + -0.43868326715852 * 
S_MonthsAsCustomer + -0.20150528265823 * S_NumDealsPurchases + 0.06302113040532 * 
S_NumWebVisitsMonth + 0.1350599599417 * S_RFMstat + -0.29383555338259 * S_RMntFrq + 
-0.68766827249955 * S_Recency + -0.29183727562247 * S_Teenhome ;
1171173   +   H12  =     0.39055667226149 * S_AcceptedCmpTotal  +    -0.01370934848049 *
1171174   +        S_Age  +     0.24087739377669 * S_Frq  +      0.6385645265661 *
1171175   +        S_Income  +     0.91005509221929 * S_Kidhome
1171176   +          +     0.26314513971971 * S_MntFishProducts
1171177   +          +    -0.31269343103037 * S_MntFruits  +     0.14926981327092 *
1171178   +        S_MntGoldProds  +     0.23823473046762 * S_MntSweetProducts
1171179   +          +    -0.11762692239171 * S_MonthsAsCustomer
1171180   +          +     0.66369415921808 * S_NumDealsPurchases
1171181   +          +     0.34818395961585 * S_NumWebVisitsMonth
1171182   +          +     0.15957643046632 * S_RFMstat  +       0.043074454712 *
1171183   +        S_RMntFrq  +     -0.8279410878863 * S_Recency
1171184   +          +    -0.37857896695074 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.39055667226149 * S_AcceptedCmpTotal + -0.01370934848049 * S_Age 
+ 0.24087739377669 * S_Frq + 0.6385645265661 * S_Income + 0.91005509221929 * S_Kidhome + 
0.26314513971971 * S_MntFishProducts + -0.31269343103037 * S_MntFruits + 0.14926981327092 * 
S_MntGoldProds + 0.23823473046762 * S_MntSweetProducts + -0.11762692239171 * 
S_MonthsAsCustomer + 0.66369415921808 * S_NumDealsPurchases + 0.34818395961585 * 
S_NumWebVisitsMonth + 0.15957643046632 * S_RFMstat + 0.043074454712 * S_RMntFrq + 
-0.8279410878863 * S_Recency + -0.37857896695074 * S_Teenhome ;
1171185   +   H13  =     0.01761535715706 * S_AcceptedCmpTotal  +      -0.178245965481 *
1171186   +        S_Age  +    -0.38345114554341 * S_Frq  +    -0.85875480356991 *
1171187   +        S_Income  +     0.62650302214702 * S_Kidhome
1171188   +          +     0.15114878471783 * S_MntFishProducts
1171189   +          +    -0.04867026102421 * S_MntFruits  +    -0.02464340314012 *
1171190   +        S_MntGoldProds  +     0.25958757216658 * S_MntSweetProducts
1171191   +          +    -0.21247922433607 * S_MonthsAsCustomer
1171192   +          +     0.29870259291589 * S_NumDealsPurchases
1171193   +          +    -0.15551171574573 * S_NumWebVisitsMonth
1171194   +          +    -0.02668833787849 * S_RFMstat  +     -0.3938077247244 *
1171195   +        S_RMntFrq  +     0.37292679100385 * S_Recency
1171196   +          +     0.58536255154591 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.01761535715706 * S_AcceptedCmpTotal + -0.178245965481 * S_Age + 
-0.38345114554341 * S_Frq + -0.85875480356991 * S_Income + 0.62650302214702 * S_Kidhome + 
0.15114878471783 * S_MntFishProducts + -0.04867026102421 * S_MntFruits + -0.02464340314012 * 
S_MntGoldProds + 0.25958757216658 * S_MntSweetProducts + -0.21247922433607 * 
S_MonthsAsCustomer + 0.29870259291589 * S_NumDealsPurchases + -0.15551171574573 * 
S_NumWebVisitsMonth + -0.02668833787849 * S_RFMstat + -0.3938077247244 * S_RMntFrq + 
0.37292679100385 * S_Recency + 0.58536255154591 * S_Teenhome ;
1171197   +   H14  =    -0.23067808386271 * S_AcceptedCmpTotal  +      0.2795284747435 *
1171198   +        S_Age  +     0.88920181420929 * S_Frq  +     0.17396080204168 *
1171199   +        S_Income  +    -0.00823748207218 * S_Kidhome
1171200   +          +    -0.26914878127706 * S_MntFishProducts
1171201   +          +     0.32721028770496 * S_MntFruits  +     0.07070268272045 *
1171202   +        S_MntGoldProds  +    -0.35290123515707 * S_MntSweetProducts
1171203   +          +    -0.02974642168316 * S_MonthsAsCustomer
1171204   +          +    -0.63307764160477 * S_NumDealsPurchases
1171205   +          +    -0.86210034703857 * S_NumWebVisitsMonth
1171206   +          +    -0.16450375531942 * S_RFMstat  +     -0.0920077372506 *
1171207   +        S_RMntFrq  +     0.61882336952278 * S_Recency
1171208   +          +    -0.21217863284358 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.23067808386271 * S_AcceptedCmpTotal + 0.2795284747435 * S_Age + 
0.88920181420929 * S_Frq + 0.17396080204168 * S_Income + -0.00823748207218 * S_Kidhome + 
-0.26914878127706 * S_MntFishProducts + 0.32721028770496 * S_MntFruits + 0.07070268272045 * 
S_MntGoldProds + -0.35290123515707 * S_MntSweetProducts + -0.02974642168316 * 
S_MonthsAsCustomer + -0.63307764160477 * S_NumDealsPurchases + -0.86210034703857 * 
S_NumWebVisitsMonth + -0.16450375531942 * S_RFMstat + -0.0920077372506 * S_RMntFrq + 
0.61882336952278 * S_Recency + -0.21217863284358 * S_Teenhome ;
1171209   +   H15  =     0.08444141658062 * S_AcceptedCmpTotal  +    -0.03922634475077 *
1171210   +        S_Age  +     0.26114587238563 * S_Frq  +     0.30374331939028 *
1171211   +        S_Income  +     -0.2421178734201 * S_Kidhome
1171212   +          +    -0.19019330388039 * S_MntFishProducts
1171213   +          +    -0.22928418606812 * S_MntFruits  +    -0.34980290580426 *
1171214   +        S_MntGoldProds  +    -0.02640373527826 * S_MntSweetProducts
1171215   +          +     0.04217213390907 * S_MonthsAsCustomer
1171216   +          +    -0.43394541277085 * S_NumDealsPurchases
1171217   +          +    -0.27821724458462 * S_NumWebVisitsMonth
1171218   +          +     0.15130301601187 * S_RFMstat  +     0.24450838354469 *
1171219   +        S_RMntFrq  +     0.50442944125738 * S_Recency
1171220   +          +     -0.2256501036913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.08444141658062 * S_AcceptedCmpTotal + -0.03922634475077 * S_Age 
+ 0.26114587238563 * S_Frq + 0.30374331939028 * S_Income + -0.2421178734201 * S_Kidhome + 
-0.19019330388039 * S_MntFishProducts + -0.22928418606812 * S_MntFruits + -0.34980290580426 * 
S_MntGoldProds + -0.02640373527826 * S_MntSweetProducts + 0.04217213390907 * 
S_MonthsAsCustomer + -0.43394541277085 * S_NumDealsPurchases + -0.27821724458462 * 
S_NumWebVisitsMonth + 0.15130301601187 * S_RFMstat + 0.24450838354469 * S_RMntFrq + 
0.50442944125738 * S_Recency + -0.2256501036913 * S_Teenhome ;
1171221   +   H16  =     0.04374591358456 * S_AcceptedCmpTotal  +     -0.2751915893845 *
1171222   +        S_Age  +    -0.17372079221228 * S_Frq  +     0.53295067221555 *
1171223   +        S_Income  +    -0.25554119630622 * S_Kidhome
1171224   +          +    -0.04166493246597 * S_MntFishProducts
1171225   +          +    -0.06487290273448 * S_MntFruits  +    -0.00905943807166 *
1171226   +        S_MntGoldProds  +    -0.02954875571593 * S_MntSweetProducts
1171227   +          +    -0.00047914053162 * S_MonthsAsCustomer
1171228   +          +     0.27113708386032 * S_NumDealsPurchases
1171229   +          +      0.2230890818172 * S_NumWebVisitsMonth
1171230   +          +     0.08637996401688 * S_RFMstat  +     0.10242942070091 *
1171231   +        S_RMntFrq  +    -0.89858232865076 * S_Recency
1171232   +          +    -0.26683150727678 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.04374591358456 * S_AcceptedCmpTotal + -0.2751915893845 * S_Age + 
-0.17372079221228 * S_Frq + 0.53295067221555 * S_Income + -0.25554119630622 * S_Kidhome + 
-0.04166493246597 * S_MntFishProducts + -0.06487290273448 * S_MntFruits + -0.00905943807166 * 
S_MntGoldProds + -0.02954875571593 * S_MntSweetProducts + -0.00047914053162 * 
S_MonthsAsCustomer + 0.27113708386032 * S_NumDealsPurchases + 0.2230890818172 * 
S_NumWebVisitsMonth + 0.08637996401688 * S_RFMstat + 0.10242942070091 * S_RMntFrq + 
-0.89858232865076 * S_Recency + -0.26683150727678 * S_Teenhome ;
1171233   +   H11  = H11  +      0.2420532776991 * AcceptedCmp10
1171234   +          +     0.02694604108098 * AcceptedCmp20  +     0.06010577635911 *
1171235   +        AcceptedCmp30  +    -0.43469683295349 * AcceptedCmp40
1171236   +          +    -0.00225551219247 * AcceptedCmp50  +     0.43197139863535 *
1171237   +        Complain0  +      0.2323752775589 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.2420532776991 * AcceptedCmp10 + 0.02694604108098 * 
AcceptedCmp20 + 0.06010577635911 * AcceptedCmp30 + -0.43469683295349 * AcceptedCmp40 + 
-0.00225551219247 * AcceptedCmp50 + 0.43197139863535 * Complain0 + 0.2323752775589 * 
HigherEducationBinary0 ;
1171238   +   H12  = H12  +      0.0418845409836 * AcceptedCmp10
1171239   +          +    -0.01079705732899 * AcceptedCmp20  +    -0.29526959542283 *
1171240   +        AcceptedCmp30  +     0.58938855079432 * AcceptedCmp40
1171241   +          +    -0.40652812652647 * AcceptedCmp50  +       0.594077548144 *
1171242   +        Complain0  +    -0.31255483011975 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.0418845409836 * AcceptedCmp10 + -0.01079705732899 * 
AcceptedCmp20 + -0.29526959542283 * AcceptedCmp30 + 0.58938855079432 * AcceptedCmp40 + 
-0.40652812652647 * AcceptedCmp50 + 0.594077548144 * Complain0 + -0.31255483011975 * 
HigherEducationBinary0 ;
1171243   +   H13  = H13  +     0.49883844557768 * AcceptedCmp10
1171244   +          +     0.42674404967605 * AcceptedCmp20  +     0.29339018006371 *
1171245   +        AcceptedCmp30  +     0.54178658137703 * AcceptedCmp40
1171246   +          +     0.11058374076127 * AcceptedCmp50  +     0.11090027293948 *
1171247   +        Complain0  +    -0.44686878118331 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.49883844557768 * AcceptedCmp10 + 0.42674404967605 * 
AcceptedCmp20 + 0.29339018006371 * AcceptedCmp30 + 0.54178658137703 * AcceptedCmp40 + 
0.11058374076127 * AcceptedCmp50 + 0.11090027293948 * Complain0 + -0.44686878118331 * 
HigherEducationBinary0 ;
1171248   +   H14  = H14  +     0.70177037762742 * AcceptedCmp10
1171249   +          +     0.03868361905724 * AcceptedCmp20  +      0.7582949125852 *
1171250   +        AcceptedCmp30  +     0.10306711606837 * AcceptedCmp40
1171251   +          +     0.40988843645402 * AcceptedCmp50  +     0.19161446313882 *
1171252   +        Complain0  +     0.09113445636937 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.70177037762742 * AcceptedCmp10 + 0.03868361905724 * 
AcceptedCmp20 + 0.7582949125852 * AcceptedCmp30 + 0.10306711606837 * AcceptedCmp40 + 
0.40988843645402 * AcceptedCmp50 + 0.19161446313882 * Complain0 + 0.09113445636937 * 
HigherEducationBinary0 ;
1171253   +   H15  = H15  +     0.30528471213622 * AcceptedCmp10
1171254   +          +    -0.01583520039877 * AcceptedCmp20  +     0.09319095124312 *
1171255   +        AcceptedCmp30  +     0.03503111555527 * AcceptedCmp40
1171256   +          +     0.19732231305873 * AcceptedCmp50  +    -0.32344950489145 *
1171257   +        Complain0  +    -0.20793136544812 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30528471213622 * AcceptedCmp10 + -0.01583520039877 * 
AcceptedCmp20 + 0.09319095124312 * AcceptedCmp30 + 0.03503111555527 * AcceptedCmp40 + 
0.19732231305873 * AcceptedCmp50 + -0.32344950489145 * Complain0 + -0.20793136544812 * 
HigherEducationBinary0 ;
1171258   +   H16  = H16  +      -0.197363329461 * AcceptedCmp10
1171259   +          +     0.01373408247141 * AcceptedCmp20  +    -0.28302701132077 *
1171260   +        AcceptedCmp30  +    -0.13213187292914 * AcceptedCmp40
1171261   +          +    -0.04492941290682 * AcceptedCmp50  +     -0.1996561599765 *
1171262   +        Complain0  +     0.14532553420948 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.197363329461 * AcceptedCmp10 + 0.01373408247141 * 
AcceptedCmp20 + -0.28302701132077 * AcceptedCmp30 + -0.13213187292914 * AcceptedCmp40 + 
-0.04492941290682 * AcceptedCmp50 + -0.1996561599765 * Complain0 + 0.14532553420948 * 
HigherEducationBinary0 ;
1171263   +   H11  = H11  +     0.05185932264462 * Education2n_Cycle
1171264   +          +    -0.08049073469669 * EducationBasic  +    -0.01273883208394 *
1171265   +        EducationGraduation  +     0.01672434885938 * EducationMaster
1171266   +          +      0.1247897348584 * Marital_StatusDivorced
1171267   +          +    -0.02487802842095 * Marital_StatusMarried
1171268   +          +     0.04087485047811 * Marital_StatusSingle
1171269   +          +     0.02032230199979 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05185932264462 * Education2n_Cycle + -0.08049073469669 * 
EducationBasic + -0.01273883208394 * EducationGraduation + 0.01672434885938 * EducationMaster 
+ 0.1247897348584 * Marital_StatusDivorced + -0.02487802842095 * Marital_StatusMarried + 
0.04087485047811 * Marital_StatusSingle + 0.02032230199979 * Marital_StatusTogether ;
1171270   +   H12  = H12  +    -0.18957172593422 * Education2n_Cycle
1171271   +          +     0.13527696352941 * EducationBasic  +    -0.00239660031532 *
1171272   +        EducationGraduation  +     0.00550624186666 * EducationMaster
1171273   +          +     0.19258280536293 * Marital_StatusDivorced
1171274   +          +     -0.1513365484224 * Marital_StatusMarried
1171275   +          +     0.24428021275955 * Marital_StatusSingle
1171276   +          +     0.09103830773223 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18957172593422 * Education2n_Cycle + 0.13527696352941 * 
EducationBasic + -0.00239660031532 * EducationGraduation + 0.00550624186666 * EducationMaster 
+ 0.19258280536293 * Marital_StatusDivorced + -0.1513365484224 * Marital_StatusMarried + 
0.24428021275955 * Marital_StatusSingle + 0.09103830773223 * Marital_StatusTogether ;
1171277   +   H13  = H13  +     0.02098627668197 * Education2n_Cycle
1171278   +          +      0.0580330260954 * EducationBasic  +    -0.44505513897295 *
1171279   +        EducationGraduation  +     0.17237699716249 * EducationMaster
1171280   +          +    -0.19344679470577 * Marital_StatusDivorced
1171281   +          +     0.75587070758138 * Marital_StatusMarried
1171282   +          +    -0.65993136500147 * Marital_StatusSingle
1171283   +          +     0.58034892534704 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02098627668197 * Education2n_Cycle + 0.0580330260954 * 
EducationBasic + -0.44505513897295 * EducationGraduation + 0.17237699716249 * EducationMaster 
+ -0.19344679470577 * Marital_StatusDivorced + 0.75587070758138 * Marital_StatusMarried + 
-0.65993136500147 * Marital_StatusSingle + 0.58034892534704 * Marital_StatusTogether ;
1171284   +   H14  = H14  +      0.1859168336856 * Education2n_Cycle
1171285   +          +    -0.06308135212768 * EducationBasic  +    -0.27356179131381 *
1171286   +        EducationGraduation  +      -0.306174241941 * EducationMaster
1171287   +          +    -0.18717675910714 * Marital_StatusDivorced
1171288   +          +    -0.15181048866652 * Marital_StatusMarried
1171289   +          +     0.15597021159938 * Marital_StatusSingle
1171290   +          +    -0.03726120161813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.1859168336856 * Education2n_Cycle + -0.06308135212768 * 
EducationBasic + -0.27356179131381 * EducationGraduation + -0.306174241941 * EducationMaster + 
-0.18717675910714 * Marital_StatusDivorced + -0.15181048866652 * Marital_StatusMarried + 
0.15597021159938 * Marital_StatusSingle + -0.03726120161813 * Marital_StatusTogether ;
1171291   +   H15  = H15  +    -0.12193342286067 * Education2n_Cycle
1171292   +          +     0.20525778906074 * EducationBasic  +     0.04967185521727 *
1171293   +        EducationGraduation  +    -0.21821780206446 * EducationMaster
1171294   +          +    -0.10132599459296 * Marital_StatusDivorced
1171295   +          +     0.14113826410264 * Marital_StatusMarried
1171296   +          +    -0.18380525511118 * Marital_StatusSingle
1171297   +          +     0.23156188953493 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.12193342286067 * Education2n_Cycle + 0.20525778906074 * 
EducationBasic + 0.04967185521727 * EducationGraduation + -0.21821780206446 * EducationMaster 
+ -0.10132599459296 * Marital_StatusDivorced + 0.14113826410264 * Marital_StatusMarried + 
-0.18380525511118 * Marital_StatusSingle + 0.23156188953493 * Marital_StatusTogether ;
1171298   +   H16  = H16  +     0.03162941262342 * Education2n_Cycle
1171299   +          +    -0.45867622010455 * EducationBasic  +    -0.08178251039016 *
1171300   +        EducationGraduation  +     -0.1990982641521 * EducationMaster
1171301   +          +     0.04797839463285 * Marital_StatusDivorced
1171302   +          +    -0.38756124755799 * Marital_StatusMarried
1171303   +          +      0.3042262890255 * Marital_StatusSingle
1171304   +          +    -0.28172576605756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03162941262342 * Education2n_Cycle + -0.45867622010455 * 
EducationBasic + -0.08178251039016 * EducationGraduation + -0.1990982641521 * EducationMaster 
+ 0.04797839463285 * Marital_StatusDivorced + -0.38756124755799 * Marital_StatusMarried + 
0.3042262890255 * Marital_StatusSingle + -0.28172576605756 * Marital_StatusTogether ;
1171305   +   H11  =     1.39567717675367 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.39567717675367 + H11 ;
1171306   +   H12  =     0.19220435511693 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.19220435511693 + H12 ;
1171307   +   H13  =     0.55786873663699 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.55786873663699 + H13 ;
1171308   +   H14  =     0.28152400973799 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.28152400973799 + H14 ;
1171309   +   H15  =     1.08936778651476 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.08936778651476 + H15 ;
1171310   +   H16  =     -0.2268073967479 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.2268073967479 + H16 ;
1171311   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1171312   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1171313   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1171314   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1171315   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1171316   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1171317   +END;
MPRINT(EM_DIAGRAM):   END;
1171318   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1171319   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1171320   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1171321   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1171322   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1171323   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1171324   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1171325   +END;
MPRINT(EM_DIAGRAM):   END;
1171326   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171327   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1171328   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171329   +
1171330   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1171331   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1171332   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1171333   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1171334   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1171335   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171336   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1171337   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1171338   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1171339   +end;
MPRINT(EM_DIAGRAM):   end;
1171340   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171341   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1171342   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1171343   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1171344   +   end;
MPRINT(EM_DIAGRAM):   end;
1171345   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1171346   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1171347   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1171348   +   end;
MPRINT(EM_DIAGRAM):   end;
1171349   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171350   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1171351   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1171352   +   end;
MPRINT(EM_DIAGRAM):   end;
1171353   +end;
MPRINT(EM_DIAGRAM):   end;
1171354   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1171355   +   P_DepVar1  =       1.190486795477 * H11  +     2.38320433896182 * H12
1171356   +          +    -2.42159759131581 * H13  +    -2.18917732939624 * H14
1171357   +          +    -0.38101990662686 * H15  +     1.17308047763791 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.190486795477 * H11 + 2.38320433896182 * H12 + 
-2.42159759131581 * H13 + -2.18917732939624 * H14 + -0.38101990662686 * H15 + 1.17308047763791 
* H16 ;
1171358   +   P_DepVar1  =    -1.69959324221607 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.69959324221607 + P_DepVar1 ;
1171359   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1171360   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1171361   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1171362   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1171363   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1171364   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1171365   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1171366   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1171367   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1171368   +END;
MPRINT(EM_DIAGRAM):   END;
1171369   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1171370   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1171371   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1171372   +END;
MPRINT(EM_DIAGRAM):   END;
1171373   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1171374   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1171375   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1171376   +END;
MPRINT(EM_DIAGRAM):   END;
1171377   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1171378   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1171379   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1171380   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1171381   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1171382   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1171383   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1171384   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171385   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1171386   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171387   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1171388   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1171389   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1171390   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1171391   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1171392   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1171393   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1171394   +END;
MPRINT(EM_DIAGRAM):   END;
1171395   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1171396   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1171397   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1171398   +drop
1171399   +H11
1171400   +H12
1171401   +H13
1171402   +H14
1171403   +H15
1171404   +H16
1171405   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1171406   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1171407    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL41_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1171408    quit;
1171409    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1171410    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1171411    * Neural41: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural41: Computing metadata for TRAIN data;
1171412    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL41_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural41_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural41_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural41_TRAIN out=WORK.M3EGG0KU noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3EGG0KU;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3EGG0KU(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3EGG0KU;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3EGG0KU;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M37JPCTI NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M37JPCTI;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M37JPCTI;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0SEZ03I(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M37JPCTI;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M37JPCTI;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M37JPCTI;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M37JPCTI;
MPRINT(EMADVISECOLUMNS):   set WORK.M37JPCTI;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural41_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural41";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural41";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural41";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural41: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1171724    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1171725    set EMWS8.Neural41_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural41_EMINFO;
1171726    where DATA='Neural41' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural41' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1171727    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL41_EMINFO.
      WHERE (DATA='Neural41') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1171728    data EMWS8.Neural41_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural41_EMINFO;
1171729    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1171730    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1171731    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL41_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1171735    run;
1171736    data EMWS8.Neural41_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural41_EMINFO;
1171737    set EMWS8.Neural41_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural41_EMINFO WORK.MODELTEMP_INFO;
1171738    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL41_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL41_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1171739    proc sort data = EMWS8.Neural41_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural41_EMINFO NOTHREADS;
1171740    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1171741    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL41_EMINFO.
NOTE: The data set EMWS8.NEURAL41_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1171742    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1171743    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1171744    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1171745    proc sort data = EMWS8.Neural41_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural41_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1171746    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1171747    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL41_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1171748    data EMWS8.Neural41_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural41_EMINFO;
1171749    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1171750    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1171751    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL41_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1171752    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1171753    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1171754    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1171755    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL41_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.NEURAL41_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
