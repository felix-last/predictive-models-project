MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "08.23 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                08.23 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2LPMX50 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2LPMX50 new;
MPRINT(EM_DIAGRAM):   run;
484903     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
484904     set EMWS8.Neural3_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_OUTKEY;
484905     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
484906     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set EMWS8.NEURAL3_OUTKEY.
NOTE: The data set WORK.OUTKEY has 3 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484907     filename emflow
484907   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural3: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
484908     *------------------------------------------------------------*;
484909     * Neural3: Scoring DATA data;
484910     *------------------------------------------------------------*;
484911     data EMWS8.Neural3_TRAIN
484912     / view=EMWS8.Neural3_TRAIN
484913     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural3_TRAIN / view=EMWS8.Neural3_TRAIN ;
484914     set EMWS8.Meta_TRAIN
484915     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
484916     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMFLOWSCORE.sas.
484917    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
484918    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
484919    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
484920    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
484921    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
484922    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
484923    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
484924    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
484925    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
484926    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
484927    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
484928    +LENGTH _WARN_ $4
484929    +      F_DepVar  $ 12
484930    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
484931    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
484932    +
484933    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
484934    +
484935    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
484936    +
484937    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
484938    +
484939    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
484940    +
484941    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
484942    +
484943    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
484944    +
484945    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
484946    +
484947    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
484948    +
484949    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
484950    +
484951    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
484952    +
484953    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
484954    +
484955    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
484956    +
484957    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
484958    +
484959    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
484960    +
484961    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
484962    +
484963    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
484964    +
484965    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
484966    +
484967    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
484968    +
484969    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
484970    +
484971    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
484972    +
484973    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
484974    +
484975    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
484976    +
484977    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
484978    +
484979    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
484980    +
484981    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
484982    +
484983    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
484984    +
484985    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
484986    +
484987    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
484988    +
484989    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
484990    +
484991    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
484992    +
484993    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
484994    +
484995    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
484996    +
484997    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
484998    +
484999    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
485000    +
485001    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
485002    +
485003    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
485004    +
485005    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
485006    +
485007    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
485008    +
485009    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
485010    +
485011    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
485012    +
485013    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
485014    +
485015    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
485016    +
485017    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
485018    +
485019    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
485020    +
485021    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
485022    +
485023    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
485024    +
485025    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
485026    +
485027    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
485028    +
485029    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
485030    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
485031    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
485032    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
485033    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485034    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485035    +end;
MPRINT(EM_DIAGRAM):   end;
485036    +else do;
MPRINT(EM_DIAGRAM):   else do;
485037    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
485038    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
485039    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
485040    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
485041    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
485042    +   end;
MPRINT(EM_DIAGRAM):   end;
485043    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
485044    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
485045    +   end;
MPRINT(EM_DIAGRAM):   end;
485046    +   else do;
MPRINT(EM_DIAGRAM):   else do;
485047    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
485048    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
485049    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485050    +   end;
MPRINT(EM_DIAGRAM):   end;
485051    +end;
MPRINT(EM_DIAGRAM):   end;
485052    +
485053    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
485054    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
485055    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
485056    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
485057    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485058    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485059    +end;
MPRINT(EM_DIAGRAM):   end;
485060    +else do;
MPRINT(EM_DIAGRAM):   else do;
485061    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
485062    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
485063    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
485064    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
485065    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
485066    +   end;
MPRINT(EM_DIAGRAM):   end;
485067    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
485068    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
485069    +   end;
MPRINT(EM_DIAGRAM):   end;
485070    +   else do;
MPRINT(EM_DIAGRAM):   else do;
485071    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
485072    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
485073    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485074    +   end;
MPRINT(EM_DIAGRAM):   end;
485075    +end;
MPRINT(EM_DIAGRAM):   end;
485076    +
485077    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
485078    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
485079    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
485080    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
485081    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485082    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485083    +end;
MPRINT(EM_DIAGRAM):   end;
485084    +else do;
MPRINT(EM_DIAGRAM):   else do;
485085    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
485086    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
485087    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
485088    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
485089    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
485090    +   end;
MPRINT(EM_DIAGRAM):   end;
485091    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
485092    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
485093    +   end;
MPRINT(EM_DIAGRAM):   end;
485094    +   else do;
MPRINT(EM_DIAGRAM):   else do;
485095    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
485096    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
485097    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485098    +   end;
MPRINT(EM_DIAGRAM):   end;
485099    +end;
MPRINT(EM_DIAGRAM):   end;
485100    +
485101    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
485102    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
485103    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
485104    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
485105    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485106    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485107    +end;
MPRINT(EM_DIAGRAM):   end;
485108    +else do;
MPRINT(EM_DIAGRAM):   else do;
485109    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
485110    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
485111    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
485112    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
485113    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
485114    +   end;
MPRINT(EM_DIAGRAM):   end;
485115    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
485116    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
485117    +   end;
MPRINT(EM_DIAGRAM):   end;
485118    +   else do;
MPRINT(EM_DIAGRAM):   else do;
485119    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
485120    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
485121    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485122    +   end;
MPRINT(EM_DIAGRAM):   end;
485123    +end;
MPRINT(EM_DIAGRAM):   end;
485124    +
485125    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
485126    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
485127    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
485128    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
485129    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485130    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485131    +end;
MPRINT(EM_DIAGRAM):   end;
485132    +else do;
MPRINT(EM_DIAGRAM):   else do;
485133    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
485134    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
485135    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
485136    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
485137    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
485138    +   end;
MPRINT(EM_DIAGRAM):   end;
485139    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
485140    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
485141    +   end;
MPRINT(EM_DIAGRAM):   end;
485142    +   else do;
MPRINT(EM_DIAGRAM):   else do;
485143    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
485144    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
485145    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485146    +   end;
MPRINT(EM_DIAGRAM):   end;
485147    +end;
MPRINT(EM_DIAGRAM):   end;
485148    +
485149    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
485150    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
485151    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
485152    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
485153    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485154    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485155    +end;
MPRINT(EM_DIAGRAM):   end;
485156    +else do;
MPRINT(EM_DIAGRAM):   else do;
485157    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
485158    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
485159    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
485160    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
485161    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
485162    +   end;
MPRINT(EM_DIAGRAM):   end;
485163    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
485164    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
485165    +   end;
MPRINT(EM_DIAGRAM):   end;
485166    +   else do;
MPRINT(EM_DIAGRAM):   else do;
485167    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
485168    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
485169    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485170    +   end;
MPRINT(EM_DIAGRAM):   end;
485171    +end;
MPRINT(EM_DIAGRAM):   end;
485172    +
485173    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
485174    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
485175    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
485176    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
485177    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485178    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485179    +end;
MPRINT(EM_DIAGRAM):   end;
485180    +else do;
MPRINT(EM_DIAGRAM):   else do;
485181    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
485182    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
485183    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
485184    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
485185    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
485186    +   end;
MPRINT(EM_DIAGRAM):   end;
485187    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
485188    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
485189    +   end;
MPRINT(EM_DIAGRAM):   end;
485190    +   else do;
MPRINT(EM_DIAGRAM):   else do;
485191    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
485192    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
485193    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485194    +   end;
MPRINT(EM_DIAGRAM):   end;
485195    +end;
MPRINT(EM_DIAGRAM):   end;
485196    +
485197    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
485198    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
485199    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
485200    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
485201    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
485202    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
485203    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
485204    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
485205    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
485206    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
485207    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
485208    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
485209    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485210    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485211    +end;
MPRINT(EM_DIAGRAM):   end;
485212    +else do;
MPRINT(EM_DIAGRAM):   else do;
485213    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
485214    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
485215    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
485216    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
485217    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
485218    +   end;
MPRINT(EM_DIAGRAM):   end;
485219    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
485220    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
485221    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
485222    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
485223    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
485224    +   end;
MPRINT(EM_DIAGRAM):   end;
485225    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
485226    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
485227    +   end;
MPRINT(EM_DIAGRAM):   end;
485228    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
485229    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
485230    +   end;
MPRINT(EM_DIAGRAM):   end;
485231    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
485232    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
485233    +   end;
MPRINT(EM_DIAGRAM):   end;
485234    +   else do;
MPRINT(EM_DIAGRAM):   else do;
485235    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
485236    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
485237    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
485238    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
485239    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
485240    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485241    +   end;
MPRINT(EM_DIAGRAM):   end;
485242    +end;
MPRINT(EM_DIAGRAM):   end;
485243    +
485244    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
485245    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
485246    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
485247    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
485248    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
485249    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
485250    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
485251    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
485252    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
485253    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
485254    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
485255    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
485256    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
485257    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485258    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485259    +end;
MPRINT(EM_DIAGRAM):   end;
485260    +else do;
MPRINT(EM_DIAGRAM):   else do;
485261    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
485262    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
485263    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
485264    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
485265    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
485266    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
485267    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
485268    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
485269    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
485270    +         end;
MPRINT(EM_DIAGRAM):   end;
485271    +         else do;
MPRINT(EM_DIAGRAM):   else do;
485272    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
485273    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
485274    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
485275    +            end;
MPRINT(EM_DIAGRAM):   end;
485276    +         end;
MPRINT(EM_DIAGRAM):   end;
485277    +      end;
MPRINT(EM_DIAGRAM):   end;
485278    +      else do;
MPRINT(EM_DIAGRAM):   else do;
485279    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
485280    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
485281    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
485282    +         end;
MPRINT(EM_DIAGRAM):   end;
485283    +      end;
MPRINT(EM_DIAGRAM):   end;
485284    +   end;
MPRINT(EM_DIAGRAM):   end;
485285    +   else do;
MPRINT(EM_DIAGRAM):   else do;
485286    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
485287    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
485288    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
485289    +      end;
MPRINT(EM_DIAGRAM):   end;
485290    +      else do;
MPRINT(EM_DIAGRAM):   else do;
485291    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
485292    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
485293    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
485294    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
485295    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
485296    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
485297    +         end;
MPRINT(EM_DIAGRAM):   end;
485298    +      end;
MPRINT(EM_DIAGRAM):   end;
485299    +   end;
MPRINT(EM_DIAGRAM):   end;
485300    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
485301    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
485302    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
485303    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
485304    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
485305    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
485306    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485307    +   end;
MPRINT(EM_DIAGRAM):   end;
485308    +end;
MPRINT(EM_DIAGRAM):   end;
485309    +
485310    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
485311    +*** Checking missing input Interval
485312    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
485313    +
485314    +IF NMISS(
485315    +   AcceptedCmpTotal ,
485316    +   Age ,
485317    +   Frq ,
485318    +   Income ,
485319    +   Kidhome ,
485320    +   Mnt ,
485321    +   MntFishProducts ,
485322    +   MntFruits ,
485323    +   MntGoldProds ,
485324    +   MntMeatProducts ,
485325    +   MntSweetProducts ,
485326    +   MntWines ,
485327    +   MonthsAsCustomer ,
485328    +   NumCatalogPurchases ,
485329    +   NumDealsPurchases ,
485330    +   NumDistPurchases ,
485331    +   NumStorePurchases ,
485332    +   NumWebPurchases ,
485333    +   NumWebVisitsMonth ,
485334    +   RFMstat ,
485335    +   RMntFrq ,
485336    +   Recency ,
485337    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
485338    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
485339    +
485340    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485341    +END;
MPRINT(EM_DIAGRAM):   END;
485342    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
485343    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
485344    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
485345    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
485346    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
485347    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
485348    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
485349    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
485350    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
485351    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
485352    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
485353    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
485354    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
485355    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
485356    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
485357    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
485358    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
485359    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
485360    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
485361    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
485362    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
485363    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
485364    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
485365    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
485366    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
485367    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
485368    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
485369    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
485370    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
485371    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
485372    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
485373    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
485374    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
485375    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
485376    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
485377    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
485378    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
485379    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
485380    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
485381    +END;
MPRINT(EM_DIAGRAM):   END;
485382    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
485383    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
485384    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
485385    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
485386    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
485387    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
485388    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
485389    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
485390    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
485391    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
485392    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
485393    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
485394    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
485395    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
485396    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
485397    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
485398    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
485399    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
485400    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
485401    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
485402    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
485403    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
485404    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
485405    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
485406    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
485407    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
485408    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
485409    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
485410    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
485411    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
485412    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
485413    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
485414    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
485415    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
485416    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
485417    +   ELSE S_NumCatalogPurchases
485418    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
485419    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
485420    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
485421    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
485422    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
485423    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
485424    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
485425    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
485426    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
485427    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
485428    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
485429    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
485430    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
485431    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
485432    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
485433    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
485434    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
485435    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
485436    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
485437    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
485438    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
485439    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
485440    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
485441    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
485442    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
485443    +END;
MPRINT(EM_DIAGRAM):   END;
485444    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
485445    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
485446    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
485447    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
485448    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
485449    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
485450    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
485451    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
485452    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
485453    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
485454    +   H11  =     0.74666931543537 * S_AcceptedCmpTotal  +    -0.26928580042975 *
485455    +        S_Age  +     0.03131160696792 * S_Frq  +     0.37966440012262 *
485456    +        S_Income  +      0.4880522012865 * S_Kidhome
485457    +          +    -0.10642365845458 * S_Mnt  +     0.07021626529074 *
485458    +        S_MntFishProducts  +    -0.40502977166003 * S_MntFruits
485459    +          +    -0.02349027629347 * S_MntGoldProds  +     1.05528002915119 *
485460    +        S_MntMeatProducts  +    -0.12400227624159 * S_MntSweetProducts
485461    +          +    -0.97101385029429 * S_MntWines  +     0.09983399059623 *
485462    +        S_MonthsAsCustomer  +     0.92029846720585 * S_NumCatalogPurchases
485463    +          +     1.28630491068585 * S_NumDealsPurchases
485464    +          +     0.12175737778271 * S_NumDistPurchases
485465    +          +    -0.62012456448967 * S_NumStorePurchases
485466    +          +     -0.6092351519122 * S_NumWebPurchases
485467    +          +     1.46336740414795 * S_NumWebVisitsMonth
485468    +          +     0.69679756539023 * S_RFMstat  +     0.19882494898547 *
485469    +        S_RMntFrq  +    -1.02986329135861 * S_Recency
485470    +          +      0.0049755319955 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.74666931543537 * S_AcceptedCmpTotal + -0.26928580042975 * S_Age 
+ 0.03131160696792 * S_Frq + 0.37966440012262 * S_Income + 0.4880522012865 * S_Kidhome + 
-0.10642365845458 * S_Mnt + 0.07021626529074 * S_MntFishProducts + -0.40502977166003 * 
S_MntFruits + -0.02349027629347 * S_MntGoldProds + 1.05528002915119 * S_MntMeatProducts + 
-0.12400227624159 * S_MntSweetProducts + -0.97101385029429 * S_MntWines + 0.09983399059623 * 
S_MonthsAsCustomer + 0.92029846720585 * S_NumCatalogPurchases + 1.28630491068585 * 
S_NumDealsPurchases + 0.12175737778271 * S_NumDistPurchases + -0.62012456448967 * 
S_NumStorePurchases + -0.6092351519122 * S_NumWebPurchases + 1.46336740414795 * 
S_NumWebVisitsMonth + 0.69679756539023 * S_RFMstat + 0.19882494898547 * S_RMntFrq + 
-1.02986329135861 * S_Recency + 0.0049755319955 * S_Teenhome ;
485471    +   H12  =    -0.91147771903585 * S_AcceptedCmpTotal  +    -0.07240098012329 *
485472    +        S_Age  +     0.26286532004526 * S_Frq  +    -0.43462974385984 *
485473    +        S_Income  +     0.63026291057347 * S_Kidhome
485474    +          +     0.15892598048777 * S_Mnt  +     0.96482485555311 *
485475    +        S_MntFishProducts  +    -0.04775061278769 * S_MntFruits
485476    +          +    -0.14625524046285 * S_MntGoldProds  +    -1.56223918788692 *
485477    +        S_MntMeatProducts  +    -0.51302960479013 * S_MntSweetProducts
485478    +          +     0.56413001484415 * S_MntWines  +     0.28344048349537 *
485479    +        S_MonthsAsCustomer  +    -0.84830633187723 * S_NumCatalogPurchases
485480    +          +    -0.66569109065716 * S_NumDealsPurchases
485481    +          +    -0.04991685336251 * S_NumDistPurchases
485482    +          +     0.97830186941279 * S_NumStorePurchases
485483    +          +     1.01041490205359 * S_NumWebPurchases
485484    +          +    -1.32418956036577 * S_NumWebVisitsMonth
485485    +          +    -0.11032432808867 * S_RFMstat  +     0.09917599091828 *
485486    +        S_RMntFrq  +     1.45035992156192 * S_Recency
485487    +          +     0.38289769509688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.91147771903585 * S_AcceptedCmpTotal + -0.07240098012329 * S_Age 
+ 0.26286532004526 * S_Frq + -0.43462974385984 * S_Income + 0.63026291057347 * S_Kidhome + 
0.15892598048777 * S_Mnt + 0.96482485555311 * S_MntFishProducts + -0.04775061278769 * 
S_MntFruits + -0.14625524046285 * S_MntGoldProds + -1.56223918788692 * S_MntMeatProducts + 
-0.51302960479013 * S_MntSweetProducts + 0.56413001484415 * S_MntWines + 0.28344048349537 * 
S_MonthsAsCustomer + -0.84830633187723 * S_NumCatalogPurchases + -0.66569109065716 * 
S_NumDealsPurchases + -0.04991685336251 * S_NumDistPurchases + 0.97830186941279 * 
S_NumStorePurchases + 1.01041490205359 * S_NumWebPurchases + -1.32418956036577 * 
S_NumWebVisitsMonth + -0.11032432808867 * S_RFMstat + 0.09917599091828 * S_RMntFrq + 
1.45035992156192 * S_Recency + 0.38289769509688 * S_Teenhome ;
485488    +   H13  =    -0.14475824149684 * S_AcceptedCmpTotal  +    -0.16657585718812 *
485489    +        S_Age  +    -0.20157354778904 * S_Frq  +    -1.05691184936615 *
485490    +        S_Income  +     0.56998894495459 * S_Kidhome
485491    +          +     0.18949667873044 * S_Mnt  +    -0.20862370006966 *
485492    +        S_MntFishProducts  +      0.1024167951483 * S_MntFruits
485493    +          +     0.08478049294226 * S_MntGoldProds  +    -0.39072502110043 *
485494    +        S_MntMeatProducts  +     0.28675920068433 * S_MntSweetProducts
485495    +          +      0.3076165718478 * S_MntWines  +    -0.24620359701099 *
485496    +        S_MonthsAsCustomer  +    -0.59353014518331 * S_NumCatalogPurchases
485497    +          +     0.07739967453744 * S_NumDealsPurchases
485498    +          +    -0.43729543807168 * S_NumDistPurchases
485499    +          +      0.0856627398024 * S_NumStorePurchases
485500    +          +     -0.0045478100059 * S_NumWebPurchases
485501    +          +    -0.64123054514198 * S_NumWebVisitsMonth
485502    +          +     0.10052569590232 * S_RFMstat  +     -0.3728458977342 *
485503    +        S_RMntFrq  +     1.48732817876807 * S_Recency
485504    +          +     0.85232956367064 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.14475824149684 * S_AcceptedCmpTotal + -0.16657585718812 * S_Age 
+ -0.20157354778904 * S_Frq + -1.05691184936615 * S_Income + 0.56998894495459 * S_Kidhome + 
0.18949667873044 * S_Mnt + -0.20862370006966 * S_MntFishProducts + 0.1024167951483 * 
S_MntFruits + 0.08478049294226 * S_MntGoldProds + -0.39072502110043 * S_MntMeatProducts + 
0.28675920068433 * S_MntSweetProducts + 0.3076165718478 * S_MntWines + -0.24620359701099 * 
S_MonthsAsCustomer + -0.59353014518331 * S_NumCatalogPurchases + 0.07739967453744 * 
S_NumDealsPurchases + -0.43729543807168 * S_NumDistPurchases + 0.0856627398024 * 
S_NumStorePurchases + -0.0045478100059 * S_NumWebPurchases + -0.64123054514198 * 
S_NumWebVisitsMonth + 0.10052569590232 * S_RFMstat + -0.3728458977342 * S_RMntFrq + 
1.48732817876807 * S_Recency + 0.85232956367064 * S_Teenhome ;
485505    +   H11  = H11  +    -0.62033856363993 * AcceptedCmp10
485506    +          +    -0.00989853037258 * AcceptedCmp20  +    -0.77097813133684 *
485507    +        AcceptedCmp30  +    -0.31448879986852 * AcceptedCmp40
485508    +          +    -0.18015100491326 * AcceptedCmp50  +     0.05706658641547 *
485509    +        Complain0  +    -0.50105732309148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.62033856363993 * AcceptedCmp10 + -0.00989853037258 * 
AcceptedCmp20 + -0.77097813133684 * AcceptedCmp30 + -0.31448879986852 * AcceptedCmp40 + 
-0.18015100491326 * AcceptedCmp50 + 0.05706658641547 * Complain0 + -0.50105732309148 * 
HigherEducationBinary0 ;
485510    +   H12  = H12  +     0.18414272565688 * AcceptedCmp10
485511    +          +      -0.043654707425 * AcceptedCmp20  +    -0.32394050721443 *
485512    +        AcceptedCmp30  +    -0.06950576864476 * AcceptedCmp40
485513    +          +     1.12623106550654 * AcceptedCmp50  +     -0.0339705259886 *
485514    +        Complain0  +    -0.02110753805765 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.18414272565688 * AcceptedCmp10 + -0.043654707425 * 
AcceptedCmp20 + -0.32394050721443 * AcceptedCmp30 + -0.06950576864476 * AcceptedCmp40 + 
1.12623106550654 * AcceptedCmp50 + -0.0339705259886 * Complain0 + -0.02110753805765 * 
HigherEducationBinary0 ;
485515    +   H13  = H13  +     0.14110100411707 * AcceptedCmp10
485516    +          +     0.64032852332569 * AcceptedCmp20  +     0.50653679176195 *
485517    +        AcceptedCmp30  +     0.42616036519805 * AcceptedCmp40
485518    +          +     0.07072170981185 * AcceptedCmp50  +     0.29291097359872 *
485519    +        Complain0  +    -0.31418317974788 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.14110100411707 * AcceptedCmp10 + 0.64032852332569 * 
AcceptedCmp20 + 0.50653679176195 * AcceptedCmp30 + 0.42616036519805 * AcceptedCmp40 + 
0.07072170981185 * AcceptedCmp50 + 0.29291097359872 * Complain0 + -0.31418317974788 * 
HigherEducationBinary0 ;
485520    +   H11  = H11  +     0.03341889038374 * Education2n_Cycle
485521    +          +     0.11423971315431 * EducationBasic  +     0.27817968687951 *
485522    +        EducationGraduation  +     -0.0281674058306 * EducationMaster
485523    +          +     0.16155355707944 * Marital_StatusDivorced
485524    +          +     0.04915644167404 * Marital_StatusMarried
485525    +          +    -0.16886350906837 * Marital_StatusSingle
485526    +          +    -0.09540299348184 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.03341889038374 * Education2n_Cycle + 0.11423971315431 * 
EducationBasic + 0.27817968687951 * EducationGraduation + -0.0281674058306 * EducationMaster + 
0.16155355707944 * Marital_StatusDivorced + 0.04915644167404 * Marital_StatusMarried + 
-0.16886350906837 * Marital_StatusSingle + -0.09540299348184 * Marital_StatusTogether ;
485527    +   H12  = H12  +    -0.18658767739271 * Education2n_Cycle
485528    +          +     0.31497893454838 * EducationBasic  +    -0.02835844728364 *
485529    +        EducationGraduation  +     0.03310756432448 * EducationMaster
485530    +          +    -0.15094637092036 * Marital_StatusDivorced
485531    +          +     0.07664831456886 * Marital_StatusMarried
485532    +          +    -0.47693612610813 * Marital_StatusSingle
485533    +          +     0.14693691283858 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18658767739271 * Education2n_Cycle + 0.31497893454838 * 
EducationBasic + -0.02835844728364 * EducationGraduation + 0.03310756432448 * EducationMaster 
+ -0.15094637092036 * Marital_StatusDivorced + 0.07664831456886 * Marital_StatusMarried + 
-0.47693612610813 * Marital_StatusSingle + 0.14693691283858 * Marital_StatusTogether ;
485534    +   H13  = H13  +      0.0502517318618 * Education2n_Cycle
485535    +          +    -0.13621229906896 * EducationBasic  +     0.20624951172738 *
485536    +        EducationGraduation  +     0.20173383445657 * EducationMaster
485537    +          +    -0.58672623647391 * Marital_StatusDivorced
485538    +          +      1.8684271616322 * Marital_StatusMarried
485539    +          +    -1.30134837394569 * Marital_StatusSingle
485540    +          +     1.11308583986156 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0502517318618 * Education2n_Cycle + -0.13621229906896 * 
EducationBasic + 0.20624951172738 * EducationGraduation + 0.20173383445657 * EducationMaster + 
-0.58672623647391 * Marital_StatusDivorced + 1.8684271616322 * Marital_StatusMarried + 
-1.30134837394569 * Marital_StatusSingle + 1.11308583986156 * Marital_StatusTogether ;
485541    +   H11  =    -1.22504924155195 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.22504924155195 + H11 ;
485542    +   H12  =     0.36945079976002 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36945079976002 + H12 ;
485543    +   H13  =     1.84114106095878 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.84114106095878 + H13 ;
485544    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
485545    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
485546    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
485547    +END;
MPRINT(EM_DIAGRAM):   END;
485548    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
485549    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
485550    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
485551    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
485552    +END;
MPRINT(EM_DIAGRAM):   END;
485553    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
485554    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
485555    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
485556    +
485557    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
485558    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
485559    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
485560    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
485561    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
485562    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
485563    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
485564    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
485565    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
485566    +end;
MPRINT(EM_DIAGRAM):   end;
485567    +else do;
MPRINT(EM_DIAGRAM):   else do;
485568    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
485569    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
485570    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
485571    +   end;
MPRINT(EM_DIAGRAM):   end;
485572    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
485573    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
485574    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
485575    +   end;
MPRINT(EM_DIAGRAM):   end;
485576    +   else do;
MPRINT(EM_DIAGRAM):   else do;
485577    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
485578    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
485579    +   end;
MPRINT(EM_DIAGRAM):   end;
485580    +end;
MPRINT(EM_DIAGRAM):   end;
485581    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
485582    +   P_DepVar1  =     2.49740994012105 * H11  +    -2.95405883837745 * H12
485583    +          +    -3.26077127833109 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.49740994012105 * H11 + -2.95405883837745 * H12 + 
-3.26077127833109 * H13 ;
485584    +   P_DepVar1  =    -0.23645507747647 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.23645507747647 + P_DepVar1 ;
485585    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
485586    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
485587    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
485588    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
485589    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
485590    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
485591    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
485592    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
485593    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
485594    +END;
MPRINT(EM_DIAGRAM):   END;
485595    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
485596    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
485597    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
485598    +END;
MPRINT(EM_DIAGRAM):   END;
485599    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
485600    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
485601    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
485602    +END;
MPRINT(EM_DIAGRAM):   END;
485603    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
485604    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
485605    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
485606    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
485607    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
485608    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
485609    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
485610    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
485611    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
485612    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
485613    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
485614    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
485615    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
485616    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
485617    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
485618    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
485619    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
485620    +END;
MPRINT(EM_DIAGRAM):   END;
485621    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
485622    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
485623    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
485624    +drop
485625    +H11
485626    +H12
485627    +H13
485628    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
485629    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
485630     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL3_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
485631     quit;
485632     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
485633     filename emflow
485633   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural3: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
485634     *------------------------------------------------------------*;
485635     * Neural3: Scoring VALIDATE data;
485636     *------------------------------------------------------------*;
485637     data EMWS8.Neural3_VALIDATE
485638     / view=EMWS8.Neural3_VALIDATE
485639     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural3_VALIDATE / view=EMWS8.Neural3_VALIDATE ;
485640     set EMWS8.Meta_VALIDATE
485641     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
485642     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMFLOWSCORE.sas.
485643    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
485644    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
485645    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
485646    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
485647    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
485648    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
485649    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
485650    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
485651    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
485652    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
485653    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
485654    +LENGTH _WARN_ $4
485655    +      F_DepVar  $ 12
485656    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
485657    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
485658    +
485659    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
485660    +
485661    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
485662    +
485663    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
485664    +
485665    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
485666    +
485667    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
485668    +
485669    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
485670    +
485671    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
485672    +
485673    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
485674    +
485675    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
485676    +
485677    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
485678    +
485679    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
485680    +
485681    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
485682    +
485683    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
485684    +
485685    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
485686    +
485687    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
485688    +
485689    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
485690    +
485691    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
485692    +
485693    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
485694    +
485695    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
485696    +
485697    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
485698    +
485699    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
485700    +
485701    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
485702    +
485703    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
485704    +
485705    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
485706    +
485707    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
485708    +
485709    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
485710    +
485711    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
485712    +
485713    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
485714    +
485715    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
485716    +
485717    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
485718    +
485719    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
485720    +
485721    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
485722    +
485723    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
485724    +
485725    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
485726    +
485727    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
485728    +
485729    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
485730    +
485731    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
485732    +
485733    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
485734    +
485735    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
485736    +
485737    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
485738    +
485739    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
485740    +
485741    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
485742    +
485743    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
485744    +
485745    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
485746    +
485747    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
485748    +
485749    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
485750    +
485751    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
485752    +
485753    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
485754    +
485755    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
485756    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
485757    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
485758    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
485759    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485760    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485761    +end;
MPRINT(EM_DIAGRAM):   end;
485762    +else do;
MPRINT(EM_DIAGRAM):   else do;
485763    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
485764    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
485765    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
485766    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
485767    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
485768    +   end;
MPRINT(EM_DIAGRAM):   end;
485769    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
485770    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
485771    +   end;
MPRINT(EM_DIAGRAM):   end;
485772    +   else do;
MPRINT(EM_DIAGRAM):   else do;
485773    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
485774    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
485775    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485776    +   end;
MPRINT(EM_DIAGRAM):   end;
485777    +end;
MPRINT(EM_DIAGRAM):   end;
485778    +
485779    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
485780    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
485781    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
485782    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
485783    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485784    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485785    +end;
MPRINT(EM_DIAGRAM):   end;
485786    +else do;
MPRINT(EM_DIAGRAM):   else do;
485787    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
485788    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
485789    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
485790    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
485791    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
485792    +   end;
MPRINT(EM_DIAGRAM):   end;
485793    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
485794    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
485795    +   end;
MPRINT(EM_DIAGRAM):   end;
485796    +   else do;
MPRINT(EM_DIAGRAM):   else do;
485797    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
485798    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
485799    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485800    +   end;
MPRINT(EM_DIAGRAM):   end;
485801    +end;
MPRINT(EM_DIAGRAM):   end;
485802    +
485803    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
485804    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
485805    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
485806    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
485807    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485808    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485809    +end;
MPRINT(EM_DIAGRAM):   end;
485810    +else do;
MPRINT(EM_DIAGRAM):   else do;
485811    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
485812    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
485813    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
485814    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
485815    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
485816    +   end;
MPRINT(EM_DIAGRAM):   end;
485817    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
485818    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
485819    +   end;
MPRINT(EM_DIAGRAM):   end;
485820    +   else do;
MPRINT(EM_DIAGRAM):   else do;
485821    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
485822    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
485823    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485824    +   end;
MPRINT(EM_DIAGRAM):   end;
485825    +end;
MPRINT(EM_DIAGRAM):   end;
485826    +
485827    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
485828    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
485829    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
485830    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
485831    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485832    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485833    +end;
MPRINT(EM_DIAGRAM):   end;
485834    +else do;
MPRINT(EM_DIAGRAM):   else do;
485835    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
485836    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
485837    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
485838    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
485839    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
485840    +   end;
MPRINT(EM_DIAGRAM):   end;
485841    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
485842    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
485843    +   end;
MPRINT(EM_DIAGRAM):   end;
485844    +   else do;
MPRINT(EM_DIAGRAM):   else do;
485845    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
485846    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
485847    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485848    +   end;
MPRINT(EM_DIAGRAM):   end;
485849    +end;
MPRINT(EM_DIAGRAM):   end;
485850    +
485851    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
485852    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
485853    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
485854    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
485855    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485856    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485857    +end;
MPRINT(EM_DIAGRAM):   end;
485858    +else do;
MPRINT(EM_DIAGRAM):   else do;
485859    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
485860    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
485861    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
485862    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
485863    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
485864    +   end;
MPRINT(EM_DIAGRAM):   end;
485865    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
485866    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
485867    +   end;
MPRINT(EM_DIAGRAM):   end;
485868    +   else do;
MPRINT(EM_DIAGRAM):   else do;
485869    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
485870    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
485871    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485872    +   end;
MPRINT(EM_DIAGRAM):   end;
485873    +end;
MPRINT(EM_DIAGRAM):   end;
485874    +
485875    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
485876    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
485877    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
485878    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
485879    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485880    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485881    +end;
MPRINT(EM_DIAGRAM):   end;
485882    +else do;
MPRINT(EM_DIAGRAM):   else do;
485883    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
485884    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
485885    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
485886    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
485887    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
485888    +   end;
MPRINT(EM_DIAGRAM):   end;
485889    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
485890    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
485891    +   end;
MPRINT(EM_DIAGRAM):   end;
485892    +   else do;
MPRINT(EM_DIAGRAM):   else do;
485893    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
485894    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
485895    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485896    +   end;
MPRINT(EM_DIAGRAM):   end;
485897    +end;
MPRINT(EM_DIAGRAM):   end;
485898    +
485899    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
485900    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
485901    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
485902    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
485903    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485904    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485905    +end;
MPRINT(EM_DIAGRAM):   end;
485906    +else do;
MPRINT(EM_DIAGRAM):   else do;
485907    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
485908    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
485909    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
485910    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
485911    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
485912    +   end;
MPRINT(EM_DIAGRAM):   end;
485913    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
485914    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
485915    +   end;
MPRINT(EM_DIAGRAM):   end;
485916    +   else do;
MPRINT(EM_DIAGRAM):   else do;
485917    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
485918    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
485919    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485920    +   end;
MPRINT(EM_DIAGRAM):   end;
485921    +end;
MPRINT(EM_DIAGRAM):   end;
485922    +
485923    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
485924    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
485925    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
485926    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
485927    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
485928    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
485929    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
485930    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
485931    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
485932    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
485933    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
485934    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
485935    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485936    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485937    +end;
MPRINT(EM_DIAGRAM):   end;
485938    +else do;
MPRINT(EM_DIAGRAM):   else do;
485939    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
485940    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
485941    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
485942    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
485943    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
485944    +   end;
MPRINT(EM_DIAGRAM):   end;
485945    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
485946    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
485947    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
485948    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
485949    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
485950    +   end;
MPRINT(EM_DIAGRAM):   end;
485951    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
485952    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
485953    +   end;
MPRINT(EM_DIAGRAM):   end;
485954    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
485955    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
485956    +   end;
MPRINT(EM_DIAGRAM):   end;
485957    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
485958    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
485959    +   end;
MPRINT(EM_DIAGRAM):   end;
485960    +   else do;
MPRINT(EM_DIAGRAM):   else do;
485961    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
485962    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
485963    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
485964    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
485965    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
485966    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485967    +   end;
MPRINT(EM_DIAGRAM):   end;
485968    +end;
MPRINT(EM_DIAGRAM):   end;
485969    +
485970    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
485971    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
485972    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
485973    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
485974    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
485975    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
485976    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
485977    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
485978    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
485979    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
485980    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
485981    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
485982    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
485983    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485984    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485985    +end;
MPRINT(EM_DIAGRAM):   end;
485986    +else do;
MPRINT(EM_DIAGRAM):   else do;
485987    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
485988    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
485989    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
485990    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
485991    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
485992    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
485993    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
485994    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
485995    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
485996    +         end;
MPRINT(EM_DIAGRAM):   end;
485997    +         else do;
MPRINT(EM_DIAGRAM):   else do;
485998    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
485999    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
486000    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
486001    +            end;
MPRINT(EM_DIAGRAM):   end;
486002    +         end;
MPRINT(EM_DIAGRAM):   end;
486003    +      end;
MPRINT(EM_DIAGRAM):   end;
486004    +      else do;
MPRINT(EM_DIAGRAM):   else do;
486005    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
486006    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
486007    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
486008    +         end;
MPRINT(EM_DIAGRAM):   end;
486009    +      end;
MPRINT(EM_DIAGRAM):   end;
486010    +   end;
MPRINT(EM_DIAGRAM):   end;
486011    +   else do;
MPRINT(EM_DIAGRAM):   else do;
486012    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
486013    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
486014    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
486015    +      end;
MPRINT(EM_DIAGRAM):   end;
486016    +      else do;
MPRINT(EM_DIAGRAM):   else do;
486017    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
486018    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
486019    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
486020    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
486021    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
486022    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
486023    +         end;
MPRINT(EM_DIAGRAM):   end;
486024    +      end;
MPRINT(EM_DIAGRAM):   end;
486025    +   end;
MPRINT(EM_DIAGRAM):   end;
486026    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
486027    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
486028    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
486029    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
486030    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
486031    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
486032    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
486033    +   end;
MPRINT(EM_DIAGRAM):   end;
486034    +end;
MPRINT(EM_DIAGRAM):   end;
486035    +
486036    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
486037    +*** Checking missing input Interval
486038    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
486039    +
486040    +IF NMISS(
486041    +   AcceptedCmpTotal ,
486042    +   Age ,
486043    +   Frq ,
486044    +   Income ,
486045    +   Kidhome ,
486046    +   Mnt ,
486047    +   MntFishProducts ,
486048    +   MntFruits ,
486049    +   MntGoldProds ,
486050    +   MntMeatProducts ,
486051    +   MntSweetProducts ,
486052    +   MntWines ,
486053    +   MonthsAsCustomer ,
486054    +   NumCatalogPurchases ,
486055    +   NumDealsPurchases ,
486056    +   NumDistPurchases ,
486057    +   NumStorePurchases ,
486058    +   NumWebPurchases ,
486059    +   NumWebVisitsMonth ,
486060    +   RFMstat ,
486061    +   RMntFrq ,
486062    +   Recency ,
486063    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
486064    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
486065    +
486066    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
486067    +END;
MPRINT(EM_DIAGRAM):   END;
486068    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
486069    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
486070    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
486071    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
486072    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
486073    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
486074    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
486075    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
486076    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
486077    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
486078    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
486079    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
486080    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
486081    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
486082    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
486083    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
486084    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
486085    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
486086    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
486087    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
486088    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
486089    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
486090    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
486091    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
486092    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
486093    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
486094    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
486095    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
486096    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
486097    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
486098    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
486099    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
486100    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
486101    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
486102    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
486103    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
486104    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
486105    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
486106    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
486107    +END;
MPRINT(EM_DIAGRAM):   END;
486108    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
486109    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
486110    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
486111    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
486112    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
486113    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
486114    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
486115    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
486116    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
486117    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
486118    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
486119    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
486120    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
486121    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
486122    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
486123    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
486124    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
486125    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
486126    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
486127    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
486128    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
486129    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
486130    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
486131    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
486132    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
486133    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
486134    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
486135    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
486136    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
486137    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
486138    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
486139    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
486140    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
486141    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
486142    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
486143    +   ELSE S_NumCatalogPurchases
486144    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
486145    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
486146    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
486147    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
486148    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
486149    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
486150    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
486151    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
486152    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
486153    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
486154    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
486155    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
486156    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
486157    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
486158    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
486159    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
486160    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
486161    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
486162    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
486163    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
486164    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
486165    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
486166    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
486167    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
486168    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
486169    +END;
MPRINT(EM_DIAGRAM):   END;
486170    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
486171    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
486172    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
486173    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
486174    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
486175    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
486176    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
486177    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
486178    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
486179    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
486180    +   H11  =     0.74666931543537 * S_AcceptedCmpTotal  +    -0.26928580042975 *
486181    +        S_Age  +     0.03131160696792 * S_Frq  +     0.37966440012262 *
486182    +        S_Income  +      0.4880522012865 * S_Kidhome
486183    +          +    -0.10642365845458 * S_Mnt  +     0.07021626529074 *
486184    +        S_MntFishProducts  +    -0.40502977166003 * S_MntFruits
486185    +          +    -0.02349027629347 * S_MntGoldProds  +     1.05528002915119 *
486186    +        S_MntMeatProducts  +    -0.12400227624159 * S_MntSweetProducts
486187    +          +    -0.97101385029429 * S_MntWines  +     0.09983399059623 *
486188    +        S_MonthsAsCustomer  +     0.92029846720585 * S_NumCatalogPurchases
486189    +          +     1.28630491068585 * S_NumDealsPurchases
486190    +          +     0.12175737778271 * S_NumDistPurchases
486191    +          +    -0.62012456448967 * S_NumStorePurchases
486192    +          +     -0.6092351519122 * S_NumWebPurchases
486193    +          +     1.46336740414795 * S_NumWebVisitsMonth
486194    +          +     0.69679756539023 * S_RFMstat  +     0.19882494898547 *
486195    +        S_RMntFrq  +    -1.02986329135861 * S_Recency
486196    +          +      0.0049755319955 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.74666931543537 * S_AcceptedCmpTotal + -0.26928580042975 * S_Age 
+ 0.03131160696792 * S_Frq + 0.37966440012262 * S_Income + 0.4880522012865 * S_Kidhome + 
-0.10642365845458 * S_Mnt + 0.07021626529074 * S_MntFishProducts + -0.40502977166003 * 
S_MntFruits + -0.02349027629347 * S_MntGoldProds + 1.05528002915119 * S_MntMeatProducts + 
-0.12400227624159 * S_MntSweetProducts + -0.97101385029429 * S_MntWines + 0.09983399059623 * 
S_MonthsAsCustomer + 0.92029846720585 * S_NumCatalogPurchases + 1.28630491068585 * 
S_NumDealsPurchases + 0.12175737778271 * S_NumDistPurchases + -0.62012456448967 * 
S_NumStorePurchases + -0.6092351519122 * S_NumWebPurchases + 1.46336740414795 * 
S_NumWebVisitsMonth + 0.69679756539023 * S_RFMstat + 0.19882494898547 * S_RMntFrq + 
-1.02986329135861 * S_Recency + 0.0049755319955 * S_Teenhome ;
486197    +   H12  =    -0.91147771903585 * S_AcceptedCmpTotal  +    -0.07240098012329 *
486198    +        S_Age  +     0.26286532004526 * S_Frq  +    -0.43462974385984 *
486199    +        S_Income  +     0.63026291057347 * S_Kidhome
486200    +          +     0.15892598048777 * S_Mnt  +     0.96482485555311 *
486201    +        S_MntFishProducts  +    -0.04775061278769 * S_MntFruits
486202    +          +    -0.14625524046285 * S_MntGoldProds  +    -1.56223918788692 *
486203    +        S_MntMeatProducts  +    -0.51302960479013 * S_MntSweetProducts
486204    +          +     0.56413001484415 * S_MntWines  +     0.28344048349537 *
486205    +        S_MonthsAsCustomer  +    -0.84830633187723 * S_NumCatalogPurchases
486206    +          +    -0.66569109065716 * S_NumDealsPurchases
486207    +          +    -0.04991685336251 * S_NumDistPurchases
486208    +          +     0.97830186941279 * S_NumStorePurchases
486209    +          +     1.01041490205359 * S_NumWebPurchases
486210    +          +    -1.32418956036577 * S_NumWebVisitsMonth
486211    +          +    -0.11032432808867 * S_RFMstat  +     0.09917599091828 *
486212    +        S_RMntFrq  +     1.45035992156192 * S_Recency
486213    +          +     0.38289769509688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.91147771903585 * S_AcceptedCmpTotal + -0.07240098012329 * S_Age 
+ 0.26286532004526 * S_Frq + -0.43462974385984 * S_Income + 0.63026291057347 * S_Kidhome + 
0.15892598048777 * S_Mnt + 0.96482485555311 * S_MntFishProducts + -0.04775061278769 * 
S_MntFruits + -0.14625524046285 * S_MntGoldProds + -1.56223918788692 * S_MntMeatProducts + 
-0.51302960479013 * S_MntSweetProducts + 0.56413001484415 * S_MntWines + 0.28344048349537 * 
S_MonthsAsCustomer + -0.84830633187723 * S_NumCatalogPurchases + -0.66569109065716 * 
S_NumDealsPurchases + -0.04991685336251 * S_NumDistPurchases + 0.97830186941279 * 
S_NumStorePurchases + 1.01041490205359 * S_NumWebPurchases + -1.32418956036577 * 
S_NumWebVisitsMonth + -0.11032432808867 * S_RFMstat + 0.09917599091828 * S_RMntFrq + 
1.45035992156192 * S_Recency + 0.38289769509688 * S_Teenhome ;
486214    +   H13  =    -0.14475824149684 * S_AcceptedCmpTotal  +    -0.16657585718812 *
486215    +        S_Age  +    -0.20157354778904 * S_Frq  +    -1.05691184936615 *
486216    +        S_Income  +     0.56998894495459 * S_Kidhome
486217    +          +     0.18949667873044 * S_Mnt  +    -0.20862370006966 *
486218    +        S_MntFishProducts  +      0.1024167951483 * S_MntFruits
486219    +          +     0.08478049294226 * S_MntGoldProds  +    -0.39072502110043 *
486220    +        S_MntMeatProducts  +     0.28675920068433 * S_MntSweetProducts
486221    +          +      0.3076165718478 * S_MntWines  +    -0.24620359701099 *
486222    +        S_MonthsAsCustomer  +    -0.59353014518331 * S_NumCatalogPurchases
486223    +          +     0.07739967453744 * S_NumDealsPurchases
486224    +          +    -0.43729543807168 * S_NumDistPurchases
486225    +          +      0.0856627398024 * S_NumStorePurchases
486226    +          +     -0.0045478100059 * S_NumWebPurchases
486227    +          +    -0.64123054514198 * S_NumWebVisitsMonth
486228    +          +     0.10052569590232 * S_RFMstat  +     -0.3728458977342 *
486229    +        S_RMntFrq  +     1.48732817876807 * S_Recency
486230    +          +     0.85232956367064 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.14475824149684 * S_AcceptedCmpTotal + -0.16657585718812 * S_Age 
+ -0.20157354778904 * S_Frq + -1.05691184936615 * S_Income + 0.56998894495459 * S_Kidhome + 
0.18949667873044 * S_Mnt + -0.20862370006966 * S_MntFishProducts + 0.1024167951483 * 
S_MntFruits + 0.08478049294226 * S_MntGoldProds + -0.39072502110043 * S_MntMeatProducts + 
0.28675920068433 * S_MntSweetProducts + 0.3076165718478 * S_MntWines + -0.24620359701099 * 
S_MonthsAsCustomer + -0.59353014518331 * S_NumCatalogPurchases + 0.07739967453744 * 
S_NumDealsPurchases + -0.43729543807168 * S_NumDistPurchases + 0.0856627398024 * 
S_NumStorePurchases + -0.0045478100059 * S_NumWebPurchases + -0.64123054514198 * 
S_NumWebVisitsMonth + 0.10052569590232 * S_RFMstat + -0.3728458977342 * S_RMntFrq + 
1.48732817876807 * S_Recency + 0.85232956367064 * S_Teenhome ;
486231    +   H11  = H11  +    -0.62033856363993 * AcceptedCmp10
486232    +          +    -0.00989853037258 * AcceptedCmp20  +    -0.77097813133684 *
486233    +        AcceptedCmp30  +    -0.31448879986852 * AcceptedCmp40
486234    +          +    -0.18015100491326 * AcceptedCmp50  +     0.05706658641547 *
486235    +        Complain0  +    -0.50105732309148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.62033856363993 * AcceptedCmp10 + -0.00989853037258 * 
AcceptedCmp20 + -0.77097813133684 * AcceptedCmp30 + -0.31448879986852 * AcceptedCmp40 + 
-0.18015100491326 * AcceptedCmp50 + 0.05706658641547 * Complain0 + -0.50105732309148 * 
HigherEducationBinary0 ;
486236    +   H12  = H12  +     0.18414272565688 * AcceptedCmp10
486237    +          +      -0.043654707425 * AcceptedCmp20  +    -0.32394050721443 *
486238    +        AcceptedCmp30  +    -0.06950576864476 * AcceptedCmp40
486239    +          +     1.12623106550654 * AcceptedCmp50  +     -0.0339705259886 *
486240    +        Complain0  +    -0.02110753805765 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.18414272565688 * AcceptedCmp10 + -0.043654707425 * 
AcceptedCmp20 + -0.32394050721443 * AcceptedCmp30 + -0.06950576864476 * AcceptedCmp40 + 
1.12623106550654 * AcceptedCmp50 + -0.0339705259886 * Complain0 + -0.02110753805765 * 
HigherEducationBinary0 ;
486241    +   H13  = H13  +     0.14110100411707 * AcceptedCmp10
486242    +          +     0.64032852332569 * AcceptedCmp20  +     0.50653679176195 *
486243    +        AcceptedCmp30  +     0.42616036519805 * AcceptedCmp40
486244    +          +     0.07072170981185 * AcceptedCmp50  +     0.29291097359872 *
486245    +        Complain0  +    -0.31418317974788 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.14110100411707 * AcceptedCmp10 + 0.64032852332569 * 
AcceptedCmp20 + 0.50653679176195 * AcceptedCmp30 + 0.42616036519805 * AcceptedCmp40 + 
0.07072170981185 * AcceptedCmp50 + 0.29291097359872 * Complain0 + -0.31418317974788 * 
HigherEducationBinary0 ;
486246    +   H11  = H11  +     0.03341889038374 * Education2n_Cycle
486247    +          +     0.11423971315431 * EducationBasic  +     0.27817968687951 *
486248    +        EducationGraduation  +     -0.0281674058306 * EducationMaster
486249    +          +     0.16155355707944 * Marital_StatusDivorced
486250    +          +     0.04915644167404 * Marital_StatusMarried
486251    +          +    -0.16886350906837 * Marital_StatusSingle
486252    +          +    -0.09540299348184 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.03341889038374 * Education2n_Cycle + 0.11423971315431 * 
EducationBasic + 0.27817968687951 * EducationGraduation + -0.0281674058306 * EducationMaster + 
0.16155355707944 * Marital_StatusDivorced + 0.04915644167404 * Marital_StatusMarried + 
-0.16886350906837 * Marital_StatusSingle + -0.09540299348184 * Marital_StatusTogether ;
486253    +   H12  = H12  +    -0.18658767739271 * Education2n_Cycle
486254    +          +     0.31497893454838 * EducationBasic  +    -0.02835844728364 *
486255    +        EducationGraduation  +     0.03310756432448 * EducationMaster
486256    +          +    -0.15094637092036 * Marital_StatusDivorced
486257    +          +     0.07664831456886 * Marital_StatusMarried
486258    +          +    -0.47693612610813 * Marital_StatusSingle
486259    +          +     0.14693691283858 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18658767739271 * Education2n_Cycle + 0.31497893454838 * 
EducationBasic + -0.02835844728364 * EducationGraduation + 0.03310756432448 * EducationMaster 
+ -0.15094637092036 * Marital_StatusDivorced + 0.07664831456886 * Marital_StatusMarried + 
-0.47693612610813 * Marital_StatusSingle + 0.14693691283858 * Marital_StatusTogether ;
486260    +   H13  = H13  +      0.0502517318618 * Education2n_Cycle
486261    +          +    -0.13621229906896 * EducationBasic  +     0.20624951172738 *
486262    +        EducationGraduation  +     0.20173383445657 * EducationMaster
486263    +          +    -0.58672623647391 * Marital_StatusDivorced
486264    +          +      1.8684271616322 * Marital_StatusMarried
486265    +          +    -1.30134837394569 * Marital_StatusSingle
486266    +          +     1.11308583986156 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0502517318618 * Education2n_Cycle + -0.13621229906896 * 
EducationBasic + 0.20624951172738 * EducationGraduation + 0.20173383445657 * EducationMaster + 
-0.58672623647391 * Marital_StatusDivorced + 1.8684271616322 * Marital_StatusMarried + 
-1.30134837394569 * Marital_StatusSingle + 1.11308583986156 * Marital_StatusTogether ;
486267    +   H11  =    -1.22504924155195 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.22504924155195 + H11 ;
486268    +   H12  =     0.36945079976002 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36945079976002 + H12 ;
486269    +   H13  =     1.84114106095878 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.84114106095878 + H13 ;
486270    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
486271    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
486272    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
486273    +END;
MPRINT(EM_DIAGRAM):   END;
486274    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
486275    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
486276    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
486277    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
486278    +END;
MPRINT(EM_DIAGRAM):   END;
486279    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
486280    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
486281    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
486282    +
486283    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
486284    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
486285    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
486286    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
486287    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
486288    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
486289    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
486290    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
486291    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
486292    +end;
MPRINT(EM_DIAGRAM):   end;
486293    +else do;
MPRINT(EM_DIAGRAM):   else do;
486294    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
486295    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
486296    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
486297    +   end;
MPRINT(EM_DIAGRAM):   end;
486298    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
486299    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
486300    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
486301    +   end;
MPRINT(EM_DIAGRAM):   end;
486302    +   else do;
MPRINT(EM_DIAGRAM):   else do;
486303    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
486304    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
486305    +   end;
MPRINT(EM_DIAGRAM):   end;
486306    +end;
MPRINT(EM_DIAGRAM):   end;
486307    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
486308    +   P_DepVar1  =     2.49740994012105 * H11  +    -2.95405883837745 * H12
486309    +          +    -3.26077127833109 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.49740994012105 * H11 + -2.95405883837745 * H12 + 
-3.26077127833109 * H13 ;
486310    +   P_DepVar1  =    -0.23645507747647 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.23645507747647 + P_DepVar1 ;
486311    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
486312    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
486313    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
486314    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
486315    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
486316    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
486317    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
486318    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
486319    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
486320    +END;
MPRINT(EM_DIAGRAM):   END;
486321    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
486322    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
486323    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
486324    +END;
MPRINT(EM_DIAGRAM):   END;
486325    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
486326    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
486327    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
486328    +END;
MPRINT(EM_DIAGRAM):   END;
486329    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
486330    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
486331    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
486332    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
486333    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
486334    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
486335    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
486336    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
486337    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
486338    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
486339    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
486340    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
486341    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
486342    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
486343    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
486344    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
486345    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
486346    +END;
MPRINT(EM_DIAGRAM):   END;
486347    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
486348    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
486349    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
486350    +drop
486351    +H11
486352    +H12
486353    +H13
486354    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
486355    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
486356     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL3_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
486357     quit;
486358     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
486359     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
486360     * Neural3: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural3: Computing metadata for TRAIN data;
486361     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural3_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural3_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural3_TRAIN out=WORK.M3KVR9Z0 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3KVR9Z0;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3KVR9Z0(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3KVR9Z0;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3KVR9Z0;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0ELKEW2 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0ELKEW2;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0ELKEW2;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2Z1ZMCW(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0ELKEW2;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0ELKEW2;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0ELKEW2;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0ELKEW2;
MPRINT(EMADVISECOLUMNS):   set WORK.M0ELKEW2;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural3";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural3";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural3: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
486673     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
486674     set EMWS8.Neural3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_EMINFO;
486675     where DATA='Neural3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
486676     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL3_EMINFO.
      WHERE (DATA='Neural3') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

486677     data EMWS8.Neural3_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural3_EMINFO;
486678     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
486679     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
486680     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
486684     run;
486685     data EMWS8.Neural3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural3_EMINFO;
486686     set EMWS8.Neural3_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_EMINFO WORK.MODELTEMP_INFO;
486687     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL3_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

486688     proc sort data = EMWS8.Neural3_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural3_EMINFO NOTHREADS;
486689     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
486690     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL3_EMINFO.
NOTE: The data set EMWS8.NEURAL3_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

486691     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
486692     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
486693     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

486694     proc sort data = EMWS8.Neural3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
486695     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
486696     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL3_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

486697     data EMWS8.Neural3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural3_EMINFO;
486698     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
486699     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
486700     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL3_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

486701     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
486702     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
486703     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
486704     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
