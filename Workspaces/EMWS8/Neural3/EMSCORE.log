MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.23 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                16.23 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3BNO23Z 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3BNO23Z new;
MPRINT(EM_DIAGRAM):   run;
248365     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
248366     set EMWS8.Neural3_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_OUTKEY;
248367     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
248368     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set EMWS8.NEURAL3_OUTKEY.
NOTE: The data set WORK.OUTKEY has 3 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248369     filename emflow
248369   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural3: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
248370     *------------------------------------------------------------*;
248371     * Neural3: Scoring DATA data;
248372     *------------------------------------------------------------*;
248373     data EMWS8.Neural3_TRAIN
248374     / view=EMWS8.Neural3_TRAIN
248375     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural3_TRAIN / view=EMWS8.Neural3_TRAIN ;
248376     set EMWS8.Meta_TRAIN
248377     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
248378     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMFLOWSCORE.sas.
248379    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
248380    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
248381    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
248382    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
248383    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
248384    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
248385    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
248386    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
248387    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
248388    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
248389    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
248390    +LENGTH _WARN_ $4
248391    +      F_DepVar  $ 12
248392    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
248393    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
248394    +
248395    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
248396    +
248397    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
248398    +
248399    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
248400    +
248401    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
248402    +
248403    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
248404    +
248405    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
248406    +
248407    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
248408    +
248409    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
248410    +
248411    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
248412    +
248413    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
248414    +
248415    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
248416    +
248417    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
248418    +
248419    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
248420    +
248421    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
248422    +
248423    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
248424    +
248425    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
248426    +
248427    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
248428    +
248429    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
248430    +
248431    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
248432    +
248433    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
248434    +
248435    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
248436    +
248437    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
248438    +
248439    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
248440    +
248441    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
248442    +
248443    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
248444    +
248445    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
248446    +
248447    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
248448    +
248449    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
248450    +
248451    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
248452    +
248453    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
248454    +
248455    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
248456    +
248457    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
248458    +
248459    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
248460    +
248461    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
248462    +
248463    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
248464    +
248465    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
248466    +
248467    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
248468    +
248469    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
248470    +
248471    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
248472    +
248473    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
248474    +
248475    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
248476    +
248477    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
248478    +
248479    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
248480    +
248481    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
248482    +
248483    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
248484    +
248485    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
248486    +
248487    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
248488    +
248489    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
248490    +
248491    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
248492    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
248493    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
248494    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
248495    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
248496    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248497    +end;
MPRINT(EM_DIAGRAM):   end;
248498    +else do;
MPRINT(EM_DIAGRAM):   else do;
248499    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
248500    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
248501    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
248502    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
248503    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
248504    +   end;
MPRINT(EM_DIAGRAM):   end;
248505    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
248506    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
248507    +   end;
MPRINT(EM_DIAGRAM):   end;
248508    +   else do;
MPRINT(EM_DIAGRAM):   else do;
248509    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
248510    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
248511    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248512    +   end;
MPRINT(EM_DIAGRAM):   end;
248513    +end;
MPRINT(EM_DIAGRAM):   end;
248514    +
248515    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
248516    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
248517    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
248518    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
248519    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
248520    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248521    +end;
MPRINT(EM_DIAGRAM):   end;
248522    +else do;
MPRINT(EM_DIAGRAM):   else do;
248523    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
248524    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
248525    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
248526    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
248527    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
248528    +   end;
MPRINT(EM_DIAGRAM):   end;
248529    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
248530    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
248531    +   end;
MPRINT(EM_DIAGRAM):   end;
248532    +   else do;
MPRINT(EM_DIAGRAM):   else do;
248533    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
248534    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
248535    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248536    +   end;
MPRINT(EM_DIAGRAM):   end;
248537    +end;
MPRINT(EM_DIAGRAM):   end;
248538    +
248539    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
248540    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
248541    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
248542    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
248543    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
248544    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248545    +end;
MPRINT(EM_DIAGRAM):   end;
248546    +else do;
MPRINT(EM_DIAGRAM):   else do;
248547    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
248548    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
248549    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
248550    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
248551    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
248552    +   end;
MPRINT(EM_DIAGRAM):   end;
248553    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
248554    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
248555    +   end;
MPRINT(EM_DIAGRAM):   end;
248556    +   else do;
MPRINT(EM_DIAGRAM):   else do;
248557    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
248558    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
248559    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248560    +   end;
MPRINT(EM_DIAGRAM):   end;
248561    +end;
MPRINT(EM_DIAGRAM):   end;
248562    +
248563    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
248564    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
248565    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
248566    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
248567    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
248568    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248569    +end;
MPRINT(EM_DIAGRAM):   end;
248570    +else do;
MPRINT(EM_DIAGRAM):   else do;
248571    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
248572    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
248573    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
248574    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
248575    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
248576    +   end;
MPRINT(EM_DIAGRAM):   end;
248577    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
248578    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
248579    +   end;
MPRINT(EM_DIAGRAM):   end;
248580    +   else do;
MPRINT(EM_DIAGRAM):   else do;
248581    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
248582    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
248583    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248584    +   end;
MPRINT(EM_DIAGRAM):   end;
248585    +end;
MPRINT(EM_DIAGRAM):   end;
248586    +
248587    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
248588    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
248589    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
248590    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
248591    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
248592    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248593    +end;
MPRINT(EM_DIAGRAM):   end;
248594    +else do;
MPRINT(EM_DIAGRAM):   else do;
248595    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
248596    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
248597    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
248598    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
248599    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
248600    +   end;
MPRINT(EM_DIAGRAM):   end;
248601    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
248602    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
248603    +   end;
MPRINT(EM_DIAGRAM):   end;
248604    +   else do;
MPRINT(EM_DIAGRAM):   else do;
248605    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
248606    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
248607    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248608    +   end;
MPRINT(EM_DIAGRAM):   end;
248609    +end;
MPRINT(EM_DIAGRAM):   end;
248610    +
248611    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
248612    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
248613    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
248614    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
248615    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
248616    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248617    +end;
MPRINT(EM_DIAGRAM):   end;
248618    +else do;
MPRINT(EM_DIAGRAM):   else do;
248619    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
248620    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
248621    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
248622    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
248623    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
248624    +   end;
MPRINT(EM_DIAGRAM):   end;
248625    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
248626    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
248627    +   end;
MPRINT(EM_DIAGRAM):   end;
248628    +   else do;
MPRINT(EM_DIAGRAM):   else do;
248629    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
248630    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
248631    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248632    +   end;
MPRINT(EM_DIAGRAM):   end;
248633    +end;
MPRINT(EM_DIAGRAM):   end;
248634    +
248635    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
248636    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
248637    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
248638    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
248639    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
248640    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248641    +end;
MPRINT(EM_DIAGRAM):   end;
248642    +else do;
MPRINT(EM_DIAGRAM):   else do;
248643    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
248644    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
248645    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
248646    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
248647    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
248648    +   end;
MPRINT(EM_DIAGRAM):   end;
248649    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
248650    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
248651    +   end;
MPRINT(EM_DIAGRAM):   end;
248652    +   else do;
MPRINT(EM_DIAGRAM):   else do;
248653    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
248654    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
248655    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248656    +   end;
MPRINT(EM_DIAGRAM):   end;
248657    +end;
MPRINT(EM_DIAGRAM):   end;
248658    +
248659    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
248660    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
248661    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
248662    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
248663    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
248664    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
248665    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
248666    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
248667    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
248668    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
248669    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
248670    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
248671    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
248672    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248673    +end;
MPRINT(EM_DIAGRAM):   end;
248674    +else do;
MPRINT(EM_DIAGRAM):   else do;
248675    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
248676    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
248677    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
248678    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
248679    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
248680    +   end;
MPRINT(EM_DIAGRAM):   end;
248681    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
248682    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
248683    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
248684    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
248685    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
248686    +   end;
MPRINT(EM_DIAGRAM):   end;
248687    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
248688    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
248689    +   end;
MPRINT(EM_DIAGRAM):   end;
248690    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
248691    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
248692    +   end;
MPRINT(EM_DIAGRAM):   end;
248693    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
248694    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
248695    +   end;
MPRINT(EM_DIAGRAM):   end;
248696    +   else do;
MPRINT(EM_DIAGRAM):   else do;
248697    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
248698    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
248699    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
248700    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
248701    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
248702    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248703    +   end;
MPRINT(EM_DIAGRAM):   end;
248704    +end;
MPRINT(EM_DIAGRAM):   end;
248705    +
248706    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
248707    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
248708    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
248709    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
248710    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
248711    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
248712    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
248713    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
248714    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
248715    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
248716    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
248717    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
248718    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
248719    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
248720    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248721    +end;
MPRINT(EM_DIAGRAM):   end;
248722    +else do;
MPRINT(EM_DIAGRAM):   else do;
248723    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
248724    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
248725    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
248726    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
248727    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
248728    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
248729    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
248730    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
248731    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
248732    +         end;
MPRINT(EM_DIAGRAM):   end;
248733    +         else do;
MPRINT(EM_DIAGRAM):   else do;
248734    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
248735    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
248736    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
248737    +            end;
MPRINT(EM_DIAGRAM):   end;
248738    +         end;
MPRINT(EM_DIAGRAM):   end;
248739    +      end;
MPRINT(EM_DIAGRAM):   end;
248740    +      else do;
MPRINT(EM_DIAGRAM):   else do;
248741    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
248742    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
248743    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
248744    +         end;
MPRINT(EM_DIAGRAM):   end;
248745    +      end;
MPRINT(EM_DIAGRAM):   end;
248746    +   end;
MPRINT(EM_DIAGRAM):   end;
248747    +   else do;
MPRINT(EM_DIAGRAM):   else do;
248748    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
248749    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
248750    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
248751    +      end;
MPRINT(EM_DIAGRAM):   end;
248752    +      else do;
MPRINT(EM_DIAGRAM):   else do;
248753    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
248754    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
248755    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
248756    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
248757    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
248758    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
248759    +         end;
MPRINT(EM_DIAGRAM):   end;
248760    +      end;
MPRINT(EM_DIAGRAM):   end;
248761    +   end;
MPRINT(EM_DIAGRAM):   end;
248762    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
248763    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
248764    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
248765    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
248766    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
248767    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
248768    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248769    +   end;
MPRINT(EM_DIAGRAM):   end;
248770    +end;
MPRINT(EM_DIAGRAM):   end;
248771    +
248772    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248773    +*** Checking missing input Interval
248774    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
248775    +
248776    +IF NMISS(
248777    +   AcceptedCmpTotal ,
248778    +   Age ,
248779    +   Frq ,
248780    +   Income ,
248781    +   Kidhome ,
248782    +   Mnt ,
248783    +   MntFishProducts ,
248784    +   MntFruits ,
248785    +   MntGoldProds ,
248786    +   MntMeatProducts ,
248787    +   MntSweetProducts ,
248788    +   MntWines ,
248789    +   MonthsAsCustomer ,
248790    +   NumCatalogPurchases ,
248791    +   NumDealsPurchases ,
248792    +   NumDistPurchases ,
248793    +   NumStorePurchases ,
248794    +   NumWebPurchases ,
248795    +   NumWebVisitsMonth ,
248796    +   RFMstat ,
248797    +   RMntFrq ,
248798    +   Recency ,
248799    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
248800    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
248801    +
248802    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248803    +END;
MPRINT(EM_DIAGRAM):   END;
248804    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248805    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
248806    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248807    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
248808    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
248809    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
248810    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
248811    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
248812    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
248813    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
248814    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
248815    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
248816    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
248817    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
248818    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
248819    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
248820    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
248821    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
248822    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
248823    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
248824    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
248825    +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
248826    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
248827    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
248828    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
248829    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
248830    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
248831    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
248832    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
248833    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
248834    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
248835    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
248836    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
248837    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
248838    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
248839    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
248840    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
248841    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
248842    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
248843    +END;
MPRINT(EM_DIAGRAM):   END;
248844    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
248845    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
248846    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
248847    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
248848    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
248849    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
248850    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
248851    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
248852    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
248853    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
248854    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
248855    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
248856    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
248857    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
248858    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
248859    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
248860    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
248861    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
248862    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
248863    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
248864    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
248865    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
248866    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
248867    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
248868    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
248869    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
248870    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
248871    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
248872    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
248873    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
248874    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
248875    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
248876    +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
248877    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
248878    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
248879    +   ELSE S_NumCatalogPurchases
248880    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
248881    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
248882    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
248883    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
248884    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
248885    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
248886    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
248887    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
248888    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
248889    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
248890    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
248891    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
248892    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
248893    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
248894    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
248895    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
248896    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
248897    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
248898    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
248899    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
248900    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
248901    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
248902    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
248903    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
248904    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
248905    +END;
MPRINT(EM_DIAGRAM):   END;
248906    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248907    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
248908    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248909    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248910    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
248911    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248912    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248913    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
248914    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248915    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
248916    +   H11  =     0.82431393325232 * S_AcceptedCmpTotal  +    -0.24437546316664 *
248917    +        S_Age  +     0.04980963495807 * S_Frq  +     0.45407850108884 *
248918    +        S_Income  +     0.49557647195287 * S_Kidhome
248919    +          +     -0.1165553674999 * S_Mnt  +     0.01222533616219 *
248920    +        S_MntFishProducts  +    -0.41115048548782 * S_MntFruits
248921    +          +    -0.08036993359755 * S_MntGoldProds  +     0.96221240785571 *
248922    +        S_MntMeatProducts  +    -0.16135957564319 * S_MntSweetProducts
248923    +          +    -0.90767817872688 * S_MntWines  +     0.08646361465438 *
248924    +        S_MonthsAsCustomer  +     0.91553292240934 * S_NumCatalogPurchases
248925    +          +     1.29965538748336 * S_NumDealsPurchases
248926    +          +     0.16818868463142 * S_NumDistPurchases
248927    +          +    -0.64507792847411 * S_NumStorePurchases
248928    +          +    -0.52243329275268 * S_NumWebPurchases
248929    +          +     1.48521107923182 * S_NumWebVisitsMonth
248930    +          +     0.63592400348078 * S_RFMstat  +     0.20527412289882 *
248931    +        S_RMntFrq  +    -0.98906722125244 * S_Recency
248932    +          +    -0.03988070661387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.82431393325232 * S_AcceptedCmpTotal + -0.24437546316664 * S_Age 
+ 0.04980963495807 * S_Frq + 0.45407850108884 * S_Income + 0.49557647195287 * S_Kidhome + 
-0.1165553674999 * S_Mnt + 0.01222533616219 * S_MntFishProducts + -0.41115048548782 * 
S_MntFruits + -0.08036993359755 * S_MntGoldProds + 0.96221240785571 * S_MntMeatProducts + 
-0.16135957564319 * S_MntSweetProducts + -0.90767817872688 * S_MntWines + 0.08646361465438 * 
S_MonthsAsCustomer + 0.91553292240934 * S_NumCatalogPurchases + 1.29965538748336 * 
S_NumDealsPurchases + 0.16818868463142 * S_NumDistPurchases + -0.64507792847411 * 
S_NumStorePurchases + -0.52243329275268 * S_NumWebPurchases + 1.48521107923182 * 
S_NumWebVisitsMonth + 0.63592400348078 * S_RFMstat + 0.20527412289882 * S_RMntFrq + 
-0.98906722125244 * S_Recency + -0.03988070661387 * S_Teenhome ;
248933    +   H12  =    -0.85457733338805 * S_AcceptedCmpTotal  +    -0.10908740830879 *
248934    +        S_Age  +     0.23871710798266 * S_Frq  +     -0.4461298250204 *
248935    +        S_Income  +       0.536631748871 * S_Kidhome
248936    +          +     0.17002278092324 * S_Mnt  +       0.920464590856 *
248937    +        S_MntFishProducts  +    -0.00903258985331 * S_MntFruits
248938    +          +    -0.17279327024019 * S_MntGoldProds  +    -1.54160736881216 *
248939    +        S_MntMeatProducts  +     -0.4648913726402 * S_MntSweetProducts
248940    +          +     0.57143386515411 * S_MntWines  +     0.24142041613871 *
248941    +        S_MonthsAsCustomer  +    -0.83796913244958 * S_NumCatalogPurchases
248942    +          +    -0.63220849663702 * S_NumDealsPurchases
248943    +          +    -0.03517440588176 * S_NumDistPurchases
248944    +          +     0.90435516280473 * S_NumStorePurchases
248945    +          +     1.02540776095101 * S_NumWebPurchases
248946    +          +    -1.28191505341115 * S_NumWebVisitsMonth
248947    +          +    -0.11378266924649 * S_RFMstat  +     0.03807061592798 *
248948    +        S_RMntFrq  +     1.40016934350616 * S_Recency
248949    +          +     0.35867691999281 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.85457733338805 * S_AcceptedCmpTotal + -0.10908740830879 * S_Age 
+ 0.23871710798266 * S_Frq + -0.4461298250204 * S_Income + 0.536631748871 * S_Kidhome + 
0.17002278092324 * S_Mnt + 0.920464590856 * S_MntFishProducts + -0.00903258985331 * 
S_MntFruits + -0.17279327024019 * S_MntGoldProds + -1.54160736881216 * S_MntMeatProducts + 
-0.4648913726402 * S_MntSweetProducts + 0.57143386515411 * S_MntWines + 0.24142041613871 * 
S_MonthsAsCustomer + -0.83796913244958 * S_NumCatalogPurchases + -0.63220849663702 * 
S_NumDealsPurchases + -0.03517440588176 * S_NumDistPurchases + 0.90435516280473 * 
S_NumStorePurchases + 1.02540776095101 * S_NumWebPurchases + -1.28191505341115 * 
S_NumWebVisitsMonth + -0.11378266924649 * S_RFMstat + 0.03807061592798 * S_RMntFrq + 
1.40016934350616 * S_Recency + 0.35867691999281 * S_Teenhome ;
248950    +   H13  =    -0.20214613583172 * S_AcceptedCmpTotal  +    -0.08485650033326 *
248951    +        S_Age  +    -0.18099568987856 * S_Frq  +    -0.94988777941912 *
248952    +        S_Income  +     0.45173611630992 * S_Kidhome
248953    +          +     0.16255145875039 * S_Mnt  +     -0.2106658262114 *
248954    +        S_MntFishProducts  +     0.11411813647871 * S_MntFruits
248955    +          +     0.05776635958358 * S_MntGoldProds  +    -0.45006986702929 *
248956    +        S_MntMeatProducts  +     0.27595999471005 * S_MntSweetProducts
248957    +          +     0.30172600965104 * S_MntWines  +    -0.28834849513354 *
248958    +        S_MonthsAsCustomer  +     -0.6157349155467 * S_NumCatalogPurchases
248959    +          +     0.00572910064772 * S_NumDealsPurchases
248960    +          +    -0.43545754325176 * S_NumDistPurchases
248961    +          +     0.12831980635185 * S_NumStorePurchases
248962    +          +     0.02223697618186 * S_NumWebPurchases
248963    +          +    -0.56915644226881 * S_NumWebVisitsMonth
248964    +          +     0.05007568576792 * S_RFMstat  +    -0.30445216337419 *
248965    +        S_RMntFrq  +     1.48913085892527 * S_Recency
248966    +          +     0.80884710155772 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.20214613583172 * S_AcceptedCmpTotal + -0.08485650033326 * S_Age 
+ -0.18099568987856 * S_Frq + -0.94988777941912 * S_Income + 0.45173611630992 * S_Kidhome + 
0.16255145875039 * S_Mnt + -0.2106658262114 * S_MntFishProducts + 0.11411813647871 * 
S_MntFruits + 0.05776635958358 * S_MntGoldProds + -0.45006986702929 * S_MntMeatProducts + 
0.27595999471005 * S_MntSweetProducts + 0.30172600965104 * S_MntWines + -0.28834849513354 * 
S_MonthsAsCustomer + -0.6157349155467 * S_NumCatalogPurchases + 0.00572910064772 * 
S_NumDealsPurchases + -0.43545754325176 * S_NumDistPurchases + 0.12831980635185 * 
S_NumStorePurchases + 0.02223697618186 * S_NumWebPurchases + -0.56915644226881 * 
S_NumWebVisitsMonth + 0.05007568576792 * S_RFMstat + -0.30445216337419 * S_RMntFrq + 
1.48913085892527 * S_Recency + 0.80884710155772 * S_Teenhome ;
248967    +   H11  = H11  +    -0.52086717889535 * AcceptedCmp10
248968    +          +     0.00550028682004 * AcceptedCmp20  +    -0.87724743468894 *
248969    +        AcceptedCmp30  +    -0.32959568721062 * AcceptedCmp40
248970    +          +    -0.13482043919092 * AcceptedCmp50  +     0.06933604016215 *
248971    +        Complain0  +    -0.50442289088499 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.52086717889535 * AcceptedCmp10 + 0.00550028682004 * 
AcceptedCmp20 + -0.87724743468894 * AcceptedCmp30 + -0.32959568721062 * AcceptedCmp40 + 
-0.13482043919092 * AcceptedCmp50 + 0.06933604016215 * Complain0 + -0.50442289088499 * 
HigherEducationBinary0 ;
248972    +   H12  = H12  +     0.20328100089168 * AcceptedCmp10
248973    +          +     0.03943917420904 * AcceptedCmp20  +    -0.31361026104733 *
248974    +        AcceptedCmp30  +     -0.0942890959605 * AcceptedCmp40
248975    +          +     1.02715852672516 * AcceptedCmp50  +    -0.02048413740806 *
248976    +        Complain0  +    -0.01968112719035 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20328100089168 * AcceptedCmp10 + 0.03943917420904 * 
AcceptedCmp20 + -0.31361026104733 * AcceptedCmp30 + -0.0942890959605 * AcceptedCmp40 + 
1.02715852672516 * AcceptedCmp50 + -0.02048413740806 * Complain0 + -0.01968112719035 * 
HigherEducationBinary0 ;
248977    +   H13  = H13  +     0.16429021243944 * AcceptedCmp10
248978    +          +     0.56588075626118 * AcceptedCmp20  +     0.43207926875502 *
248979    +        AcceptedCmp30  +     0.36141171703205 * AcceptedCmp40
248980    +          +     0.09022955258394 * AcceptedCmp50  +     0.25104408334841 *
248981    +        Complain0  +    -0.33955733314538 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16429021243944 * AcceptedCmp10 + 0.56588075626118 * 
AcceptedCmp20 + 0.43207926875502 * AcceptedCmp30 + 0.36141171703205 * AcceptedCmp40 + 
0.09022955258394 * AcceptedCmp50 + 0.25104408334841 * Complain0 + -0.33955733314538 * 
HigherEducationBinary0 ;
248982    +   H11  = H11  +     0.02728610609824 * Education2n_Cycle
248983    +          +     0.09667850193508 * EducationBasic  +     0.25463002600203 *
248984    +        EducationGraduation  +    -0.04410148154511 * EducationMaster
248985    +          +     0.14010081581672 * Marital_StatusDivorced
248986    +          +     0.03574033044092 * Marital_StatusMarried
248987    +          +    -0.14272769898675 * Marital_StatusSingle
248988    +          +    -0.16346346400543 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02728610609824 * Education2n_Cycle + 0.09667850193508 * 
EducationBasic + 0.25463002600203 * EducationGraduation + -0.04410148154511 * EducationMaster 
+ 0.14010081581672 * Marital_StatusDivorced + 0.03574033044092 * Marital_StatusMarried + 
-0.14272769898675 * Marital_StatusSingle + -0.16346346400543 * Marital_StatusTogether ;
248989    +   H12  = H12  +    -0.18247012906814 * Education2n_Cycle
248990    +          +     0.29026668916871 * EducationBasic  +    -0.06412041802554 *
248991    +        EducationGraduation  +     0.03249333625443 * EducationMaster
248992    +          +    -0.14878433798537 * Marital_StatusDivorced
248993    +          +     0.14990226067603 * Marital_StatusMarried
248994    +          +    -0.50903755449357 * Marital_StatusSingle
248995    +          +     0.20423545450988 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18247012906814 * Education2n_Cycle + 0.29026668916871 * 
EducationBasic + -0.06412041802554 * EducationGraduation + 0.03249333625443 * EducationMaster 
+ -0.14878433798537 * Marital_StatusDivorced + 0.14990226067603 * Marital_StatusMarried + 
-0.50903755449357 * Marital_StatusSingle + 0.20423545450988 * Marital_StatusTogether ;
248996    +   H13  = H13  +     0.00835518102749 * Education2n_Cycle
248997    +          +    -0.11705366846147 * EducationBasic  +     0.21923266852082 *
248998    +        EducationGraduation  +     0.20051442484384 * EducationMaster
248999    +          +    -0.52568922939912 * Marital_StatusDivorced
249000    +          +     1.74121506979092 * Marital_StatusMarried
249001    +          +    -1.16029880777095 * Marital_StatusSingle
249002    +          +     0.99005497791089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00835518102749 * Education2n_Cycle + -0.11705366846147 * 
EducationBasic + 0.21923266852082 * EducationGraduation + 0.20051442484384 * EducationMaster + 
-0.52568922939912 * Marital_StatusDivorced + 1.74121506979092 * Marital_StatusMarried + 
-1.16029880777095 * Marital_StatusSingle + 0.99005497791089 * Marital_StatusTogether ;
249003    +   H11  =     -1.1924504292448 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1924504292448 + H11 ;
249004    +   H12  =      0.3842553583407 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.3842553583407 + H12 ;
249005    +   H13  =     1.78452931786241 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.78452931786241 + H13 ;
249006    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
249007    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
249008    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
249009    +END;
MPRINT(EM_DIAGRAM):   END;
249010    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
249011    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
249012    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
249013    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
249014    +END;
MPRINT(EM_DIAGRAM):   END;
249015    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249016    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
249017    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249018    +
249019    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
249020    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
249021    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
249022    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
249023    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
249024    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
249025    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
249026    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
249027    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
249028    +end;
MPRINT(EM_DIAGRAM):   end;
249029    +else do;
MPRINT(EM_DIAGRAM):   else do;
249030    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
249031    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
249032    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
249033    +   end;
MPRINT(EM_DIAGRAM):   end;
249034    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
249035    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
249036    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
249037    +   end;
MPRINT(EM_DIAGRAM):   end;
249038    +   else do;
MPRINT(EM_DIAGRAM):   else do;
249039    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
249040    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
249041    +   end;
MPRINT(EM_DIAGRAM):   end;
249042    +end;
MPRINT(EM_DIAGRAM):   end;
249043    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
249044    +   P_DepVar1  =      2.3103575015601 * H11  +    -2.81440392573378 * H12
249045    +          +    -3.01894159959464 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.3103575015601 * H11 + -2.81440392573378 * H12 + 
-3.01894159959464 * H13 ;
249046    +   P_DepVar1  =    -0.30419422660322 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.30419422660322 + P_DepVar1 ;
249047    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
249048    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
249049    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
249050    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
249051    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
249052    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
249053    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
249054    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
249055    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
249056    +END;
MPRINT(EM_DIAGRAM):   END;
249057    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
249058    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
249059    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
249060    +END;
MPRINT(EM_DIAGRAM):   END;
249061    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
249062    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
249063    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
249064    +END;
MPRINT(EM_DIAGRAM):   END;
249065    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
249066    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
249067    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
249068    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
249069    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
249070    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
249071    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
249072    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249073    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
249074    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249075    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
249076    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
249077    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
249078    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
249079    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
249080    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
249081    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
249082    +END;
MPRINT(EM_DIAGRAM):   END;
249083    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
249084    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
249085    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
249086    +drop
249087    +H11
249088    +H12
249089    +H13
249090    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
249091    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
249092     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL3_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
249093     quit;
249094     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
249095     filename emflow
249095   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural3: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
249096     *------------------------------------------------------------*;
249097     * Neural3: Scoring VALIDATE data;
249098     *------------------------------------------------------------*;
249099     data EMWS8.Neural3_VALIDATE
249100     / view=EMWS8.Neural3_VALIDATE
249101     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural3_VALIDATE / view=EMWS8.Neural3_VALIDATE ;
249102     set EMWS8.Meta_VALIDATE
249103     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
249104     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMFLOWSCORE.sas.
249105    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
249106    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
249107    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
249108    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
249109    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
249110    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
249111    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
249112    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
249113    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
249114    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
249115    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
249116    +LENGTH _WARN_ $4
249117    +      F_DepVar  $ 12
249118    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
249119    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
249120    +
249121    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
249122    +
249123    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
249124    +
249125    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
249126    +
249127    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
249128    +
249129    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
249130    +
249131    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
249132    +
249133    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
249134    +
249135    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
249136    +
249137    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
249138    +
249139    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
249140    +
249141    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
249142    +
249143    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
249144    +
249145    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
249146    +
249147    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
249148    +
249149    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
249150    +
249151    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
249152    +
249153    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
249154    +
249155    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
249156    +
249157    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
249158    +
249159    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
249160    +
249161    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
249162    +
249163    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
249164    +
249165    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
249166    +
249167    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
249168    +
249169    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
249170    +
249171    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
249172    +
249173    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
249174    +
249175    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
249176    +
249177    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
249178    +
249179    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
249180    +
249181    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
249182    +
249183    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
249184    +
249185    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
249186    +
249187    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
249188    +
249189    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
249190    +
249191    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
249192    +
249193    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
249194    +
249195    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
249196    +
249197    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
249198    +
249199    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
249200    +
249201    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
249202    +
249203    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
249204    +
249205    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
249206    +
249207    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
249208    +
249209    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
249210    +
249211    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
249212    +
249213    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
249214    +
249215    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
249216    +
249217    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
249218    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
249219    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
249220    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
249221    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
249222    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249223    +end;
MPRINT(EM_DIAGRAM):   end;
249224    +else do;
MPRINT(EM_DIAGRAM):   else do;
249225    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
249226    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
249227    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
249228    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
249229    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
249230    +   end;
MPRINT(EM_DIAGRAM):   end;
249231    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
249232    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
249233    +   end;
MPRINT(EM_DIAGRAM):   end;
249234    +   else do;
MPRINT(EM_DIAGRAM):   else do;
249235    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
249236    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
249237    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249238    +   end;
MPRINT(EM_DIAGRAM):   end;
249239    +end;
MPRINT(EM_DIAGRAM):   end;
249240    +
249241    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
249242    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
249243    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
249244    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
249245    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
249246    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249247    +end;
MPRINT(EM_DIAGRAM):   end;
249248    +else do;
MPRINT(EM_DIAGRAM):   else do;
249249    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
249250    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
249251    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
249252    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
249253    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
249254    +   end;
MPRINT(EM_DIAGRAM):   end;
249255    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
249256    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
249257    +   end;
MPRINT(EM_DIAGRAM):   end;
249258    +   else do;
MPRINT(EM_DIAGRAM):   else do;
249259    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
249260    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
249261    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249262    +   end;
MPRINT(EM_DIAGRAM):   end;
249263    +end;
MPRINT(EM_DIAGRAM):   end;
249264    +
249265    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
249266    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
249267    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
249268    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
249269    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
249270    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249271    +end;
MPRINT(EM_DIAGRAM):   end;
249272    +else do;
MPRINT(EM_DIAGRAM):   else do;
249273    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
249274    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
249275    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
249276    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
249277    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
249278    +   end;
MPRINT(EM_DIAGRAM):   end;
249279    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
249280    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
249281    +   end;
MPRINT(EM_DIAGRAM):   end;
249282    +   else do;
MPRINT(EM_DIAGRAM):   else do;
249283    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
249284    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
249285    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249286    +   end;
MPRINT(EM_DIAGRAM):   end;
249287    +end;
MPRINT(EM_DIAGRAM):   end;
249288    +
249289    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
249290    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
249291    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
249292    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
249293    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
249294    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249295    +end;
MPRINT(EM_DIAGRAM):   end;
249296    +else do;
MPRINT(EM_DIAGRAM):   else do;
249297    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
249298    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
249299    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
249300    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
249301    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
249302    +   end;
MPRINT(EM_DIAGRAM):   end;
249303    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
249304    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
249305    +   end;
MPRINT(EM_DIAGRAM):   end;
249306    +   else do;
MPRINT(EM_DIAGRAM):   else do;
249307    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
249308    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
249309    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249310    +   end;
MPRINT(EM_DIAGRAM):   end;
249311    +end;
MPRINT(EM_DIAGRAM):   end;
249312    +
249313    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
249314    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
249315    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
249316    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
249317    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
249318    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249319    +end;
MPRINT(EM_DIAGRAM):   end;
249320    +else do;
MPRINT(EM_DIAGRAM):   else do;
249321    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
249322    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
249323    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
249324    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
249325    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
249326    +   end;
MPRINT(EM_DIAGRAM):   end;
249327    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
249328    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
249329    +   end;
MPRINT(EM_DIAGRAM):   end;
249330    +   else do;
MPRINT(EM_DIAGRAM):   else do;
249331    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
249332    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
249333    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249334    +   end;
MPRINT(EM_DIAGRAM):   end;
249335    +end;
MPRINT(EM_DIAGRAM):   end;
249336    +
249337    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
249338    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
249339    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
249340    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
249341    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
249342    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249343    +end;
MPRINT(EM_DIAGRAM):   end;
249344    +else do;
MPRINT(EM_DIAGRAM):   else do;
249345    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
249346    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
249347    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
249348    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
249349    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
249350    +   end;
MPRINT(EM_DIAGRAM):   end;
249351    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
249352    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
249353    +   end;
MPRINT(EM_DIAGRAM):   end;
249354    +   else do;
MPRINT(EM_DIAGRAM):   else do;
249355    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
249356    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
249357    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249358    +   end;
MPRINT(EM_DIAGRAM):   end;
249359    +end;
MPRINT(EM_DIAGRAM):   end;
249360    +
249361    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
249362    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
249363    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
249364    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
249365    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
249366    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249367    +end;
MPRINT(EM_DIAGRAM):   end;
249368    +else do;
MPRINT(EM_DIAGRAM):   else do;
249369    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
249370    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
249371    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
249372    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
249373    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
249374    +   end;
MPRINT(EM_DIAGRAM):   end;
249375    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
249376    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
249377    +   end;
MPRINT(EM_DIAGRAM):   end;
249378    +   else do;
MPRINT(EM_DIAGRAM):   else do;
249379    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
249380    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
249381    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249382    +   end;
MPRINT(EM_DIAGRAM):   end;
249383    +end;
MPRINT(EM_DIAGRAM):   end;
249384    +
249385    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
249386    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
249387    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
249388    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
249389    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
249390    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
249391    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
249392    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
249393    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
249394    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
249395    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
249396    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
249397    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
249398    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249399    +end;
MPRINT(EM_DIAGRAM):   end;
249400    +else do;
MPRINT(EM_DIAGRAM):   else do;
249401    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
249402    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
249403    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
249404    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
249405    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
249406    +   end;
MPRINT(EM_DIAGRAM):   end;
249407    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
249408    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
249409    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
249410    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
249411    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
249412    +   end;
MPRINT(EM_DIAGRAM):   end;
249413    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
249414    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
249415    +   end;
MPRINT(EM_DIAGRAM):   end;
249416    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
249417    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
249418    +   end;
MPRINT(EM_DIAGRAM):   end;
249419    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
249420    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
249421    +   end;
MPRINT(EM_DIAGRAM):   end;
249422    +   else do;
MPRINT(EM_DIAGRAM):   else do;
249423    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
249424    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
249425    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
249426    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
249427    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
249428    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249429    +   end;
MPRINT(EM_DIAGRAM):   end;
249430    +end;
MPRINT(EM_DIAGRAM):   end;
249431    +
249432    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
249433    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
249434    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
249435    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
249436    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
249437    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
249438    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
249439    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
249440    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
249441    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
249442    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
249443    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
249444    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
249445    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
249446    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249447    +end;
MPRINT(EM_DIAGRAM):   end;
249448    +else do;
MPRINT(EM_DIAGRAM):   else do;
249449    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
249450    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
249451    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
249452    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
249453    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
249454    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
249455    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
249456    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
249457    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
249458    +         end;
MPRINT(EM_DIAGRAM):   end;
249459    +         else do;
MPRINT(EM_DIAGRAM):   else do;
249460    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
249461    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
249462    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
249463    +            end;
MPRINT(EM_DIAGRAM):   end;
249464    +         end;
MPRINT(EM_DIAGRAM):   end;
249465    +      end;
MPRINT(EM_DIAGRAM):   end;
249466    +      else do;
MPRINT(EM_DIAGRAM):   else do;
249467    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
249468    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
249469    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
249470    +         end;
MPRINT(EM_DIAGRAM):   end;
249471    +      end;
MPRINT(EM_DIAGRAM):   end;
249472    +   end;
MPRINT(EM_DIAGRAM):   end;
249473    +   else do;
MPRINT(EM_DIAGRAM):   else do;
249474    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
249475    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
249476    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
249477    +      end;
MPRINT(EM_DIAGRAM):   end;
249478    +      else do;
MPRINT(EM_DIAGRAM):   else do;
249479    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
249480    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
249481    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
249482    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
249483    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
249484    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
249485    +         end;
MPRINT(EM_DIAGRAM):   end;
249486    +      end;
MPRINT(EM_DIAGRAM):   end;
249487    +   end;
MPRINT(EM_DIAGRAM):   end;
249488    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
249489    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
249490    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
249491    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
249492    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
249493    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
249494    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249495    +   end;
MPRINT(EM_DIAGRAM):   end;
249496    +end;
MPRINT(EM_DIAGRAM):   end;
249497    +
249498    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249499    +*** Checking missing input Interval
249500    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
249501    +
249502    +IF NMISS(
249503    +   AcceptedCmpTotal ,
249504    +   Age ,
249505    +   Frq ,
249506    +   Income ,
249507    +   Kidhome ,
249508    +   Mnt ,
249509    +   MntFishProducts ,
249510    +   MntFruits ,
249511    +   MntGoldProds ,
249512    +   MntMeatProducts ,
249513    +   MntSweetProducts ,
249514    +   MntWines ,
249515    +   MonthsAsCustomer ,
249516    +   NumCatalogPurchases ,
249517    +   NumDealsPurchases ,
249518    +   NumDistPurchases ,
249519    +   NumStorePurchases ,
249520    +   NumWebPurchases ,
249521    +   NumWebVisitsMonth ,
249522    +   RFMstat ,
249523    +   RMntFrq ,
249524    +   Recency ,
249525    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
249526    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
249527    +
249528    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249529    +END;
MPRINT(EM_DIAGRAM):   END;
249530    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249531    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
249532    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249533    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
249534    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
249535    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
249536    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
249537    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
249538    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
249539    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
249540    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
249541    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
249542    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
249543    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
249544    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
249545    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
249546    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
249547    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
249548    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
249549    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
249550    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
249551    +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
249552    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
249553    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
249554    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
249555    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
249556    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
249557    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
249558    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
249559    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
249560    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
249561    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
249562    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
249563    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
249564    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
249565    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
249566    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
249567    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
249568    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
249569    +END;
MPRINT(EM_DIAGRAM):   END;
249570    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
249571    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
249572    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
249573    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
249574    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
249575    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
249576    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
249577    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
249578    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
249579    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
249580    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
249581    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
249582    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
249583    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
249584    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
249585    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
249586    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
249587    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
249588    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
249589    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
249590    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
249591    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
249592    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
249593    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
249594    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
249595    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
249596    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
249597    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
249598    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
249599    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
249600    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
249601    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
249602    +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
249603    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
249604    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
249605    +   ELSE S_NumCatalogPurchases
249606    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
249607    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
249608    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
249609    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
249610    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
249611    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
249612    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
249613    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
249614    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
249615    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
249616    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
249617    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
249618    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
249619    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
249620    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
249621    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
249622    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
249623    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
249624    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
249625    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
249626    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
249627    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
249628    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
249629    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
249630    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
249631    +END;
MPRINT(EM_DIAGRAM):   END;
249632    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249633    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
249634    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249635    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249636    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
249637    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249638    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249639    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
249640    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249641    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
249642    +   H11  =     0.82431393325232 * S_AcceptedCmpTotal  +    -0.24437546316664 *
249643    +        S_Age  +     0.04980963495807 * S_Frq  +     0.45407850108884 *
249644    +        S_Income  +     0.49557647195287 * S_Kidhome
249645    +          +     -0.1165553674999 * S_Mnt  +     0.01222533616219 *
249646    +        S_MntFishProducts  +    -0.41115048548782 * S_MntFruits
249647    +          +    -0.08036993359755 * S_MntGoldProds  +     0.96221240785571 *
249648    +        S_MntMeatProducts  +    -0.16135957564319 * S_MntSweetProducts
249649    +          +    -0.90767817872688 * S_MntWines  +     0.08646361465438 *
249650    +        S_MonthsAsCustomer  +     0.91553292240934 * S_NumCatalogPurchases
249651    +          +     1.29965538748336 * S_NumDealsPurchases
249652    +          +     0.16818868463142 * S_NumDistPurchases
249653    +          +    -0.64507792847411 * S_NumStorePurchases
249654    +          +    -0.52243329275268 * S_NumWebPurchases
249655    +          +     1.48521107923182 * S_NumWebVisitsMonth
249656    +          +     0.63592400348078 * S_RFMstat  +     0.20527412289882 *
249657    +        S_RMntFrq  +    -0.98906722125244 * S_Recency
249658    +          +    -0.03988070661387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.82431393325232 * S_AcceptedCmpTotal + -0.24437546316664 * S_Age 
+ 0.04980963495807 * S_Frq + 0.45407850108884 * S_Income + 0.49557647195287 * S_Kidhome + 
-0.1165553674999 * S_Mnt + 0.01222533616219 * S_MntFishProducts + -0.41115048548782 * 
S_MntFruits + -0.08036993359755 * S_MntGoldProds + 0.96221240785571 * S_MntMeatProducts + 
-0.16135957564319 * S_MntSweetProducts + -0.90767817872688 * S_MntWines + 0.08646361465438 * 
S_MonthsAsCustomer + 0.91553292240934 * S_NumCatalogPurchases + 1.29965538748336 * 
S_NumDealsPurchases + 0.16818868463142 * S_NumDistPurchases + -0.64507792847411 * 
S_NumStorePurchases + -0.52243329275268 * S_NumWebPurchases + 1.48521107923182 * 
S_NumWebVisitsMonth + 0.63592400348078 * S_RFMstat + 0.20527412289882 * S_RMntFrq + 
-0.98906722125244 * S_Recency + -0.03988070661387 * S_Teenhome ;
249659    +   H12  =    -0.85457733338805 * S_AcceptedCmpTotal  +    -0.10908740830879 *
249660    +        S_Age  +     0.23871710798266 * S_Frq  +     -0.4461298250204 *
249661    +        S_Income  +       0.536631748871 * S_Kidhome
249662    +          +     0.17002278092324 * S_Mnt  +       0.920464590856 *
249663    +        S_MntFishProducts  +    -0.00903258985331 * S_MntFruits
249664    +          +    -0.17279327024019 * S_MntGoldProds  +    -1.54160736881216 *
249665    +        S_MntMeatProducts  +     -0.4648913726402 * S_MntSweetProducts
249666    +          +     0.57143386515411 * S_MntWines  +     0.24142041613871 *
249667    +        S_MonthsAsCustomer  +    -0.83796913244958 * S_NumCatalogPurchases
249668    +          +    -0.63220849663702 * S_NumDealsPurchases
249669    +          +    -0.03517440588176 * S_NumDistPurchases
249670    +          +     0.90435516280473 * S_NumStorePurchases
249671    +          +     1.02540776095101 * S_NumWebPurchases
249672    +          +    -1.28191505341115 * S_NumWebVisitsMonth
249673    +          +    -0.11378266924649 * S_RFMstat  +     0.03807061592798 *
249674    +        S_RMntFrq  +     1.40016934350616 * S_Recency
249675    +          +     0.35867691999281 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.85457733338805 * S_AcceptedCmpTotal + -0.10908740830879 * S_Age 
+ 0.23871710798266 * S_Frq + -0.4461298250204 * S_Income + 0.536631748871 * S_Kidhome + 
0.17002278092324 * S_Mnt + 0.920464590856 * S_MntFishProducts + -0.00903258985331 * 
S_MntFruits + -0.17279327024019 * S_MntGoldProds + -1.54160736881216 * S_MntMeatProducts + 
-0.4648913726402 * S_MntSweetProducts + 0.57143386515411 * S_MntWines + 0.24142041613871 * 
S_MonthsAsCustomer + -0.83796913244958 * S_NumCatalogPurchases + -0.63220849663702 * 
S_NumDealsPurchases + -0.03517440588176 * S_NumDistPurchases + 0.90435516280473 * 
S_NumStorePurchases + 1.02540776095101 * S_NumWebPurchases + -1.28191505341115 * 
S_NumWebVisitsMonth + -0.11378266924649 * S_RFMstat + 0.03807061592798 * S_RMntFrq + 
1.40016934350616 * S_Recency + 0.35867691999281 * S_Teenhome ;
249676    +   H13  =    -0.20214613583172 * S_AcceptedCmpTotal  +    -0.08485650033326 *
249677    +        S_Age  +    -0.18099568987856 * S_Frq  +    -0.94988777941912 *
249678    +        S_Income  +     0.45173611630992 * S_Kidhome
249679    +          +     0.16255145875039 * S_Mnt  +     -0.2106658262114 *
249680    +        S_MntFishProducts  +     0.11411813647871 * S_MntFruits
249681    +          +     0.05776635958358 * S_MntGoldProds  +    -0.45006986702929 *
249682    +        S_MntMeatProducts  +     0.27595999471005 * S_MntSweetProducts
249683    +          +     0.30172600965104 * S_MntWines  +    -0.28834849513354 *
249684    +        S_MonthsAsCustomer  +     -0.6157349155467 * S_NumCatalogPurchases
249685    +          +     0.00572910064772 * S_NumDealsPurchases
249686    +          +    -0.43545754325176 * S_NumDistPurchases
249687    +          +     0.12831980635185 * S_NumStorePurchases
249688    +          +     0.02223697618186 * S_NumWebPurchases
249689    +          +    -0.56915644226881 * S_NumWebVisitsMonth
249690    +          +     0.05007568576792 * S_RFMstat  +    -0.30445216337419 *
249691    +        S_RMntFrq  +     1.48913085892527 * S_Recency
249692    +          +     0.80884710155772 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.20214613583172 * S_AcceptedCmpTotal + -0.08485650033326 * S_Age 
+ -0.18099568987856 * S_Frq + -0.94988777941912 * S_Income + 0.45173611630992 * S_Kidhome + 
0.16255145875039 * S_Mnt + -0.2106658262114 * S_MntFishProducts + 0.11411813647871 * 
S_MntFruits + 0.05776635958358 * S_MntGoldProds + -0.45006986702929 * S_MntMeatProducts + 
0.27595999471005 * S_MntSweetProducts + 0.30172600965104 * S_MntWines + -0.28834849513354 * 
S_MonthsAsCustomer + -0.6157349155467 * S_NumCatalogPurchases + 0.00572910064772 * 
S_NumDealsPurchases + -0.43545754325176 * S_NumDistPurchases + 0.12831980635185 * 
S_NumStorePurchases + 0.02223697618186 * S_NumWebPurchases + -0.56915644226881 * 
S_NumWebVisitsMonth + 0.05007568576792 * S_RFMstat + -0.30445216337419 * S_RMntFrq + 
1.48913085892527 * S_Recency + 0.80884710155772 * S_Teenhome ;
249693    +   H11  = H11  +    -0.52086717889535 * AcceptedCmp10
249694    +          +     0.00550028682004 * AcceptedCmp20  +    -0.87724743468894 *
249695    +        AcceptedCmp30  +    -0.32959568721062 * AcceptedCmp40
249696    +          +    -0.13482043919092 * AcceptedCmp50  +     0.06933604016215 *
249697    +        Complain0  +    -0.50442289088499 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.52086717889535 * AcceptedCmp10 + 0.00550028682004 * 
AcceptedCmp20 + -0.87724743468894 * AcceptedCmp30 + -0.32959568721062 * AcceptedCmp40 + 
-0.13482043919092 * AcceptedCmp50 + 0.06933604016215 * Complain0 + -0.50442289088499 * 
HigherEducationBinary0 ;
249698    +   H12  = H12  +     0.20328100089168 * AcceptedCmp10
249699    +          +     0.03943917420904 * AcceptedCmp20  +    -0.31361026104733 *
249700    +        AcceptedCmp30  +     -0.0942890959605 * AcceptedCmp40
249701    +          +     1.02715852672516 * AcceptedCmp50  +    -0.02048413740806 *
249702    +        Complain0  +    -0.01968112719035 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20328100089168 * AcceptedCmp10 + 0.03943917420904 * 
AcceptedCmp20 + -0.31361026104733 * AcceptedCmp30 + -0.0942890959605 * AcceptedCmp40 + 
1.02715852672516 * AcceptedCmp50 + -0.02048413740806 * Complain0 + -0.01968112719035 * 
HigherEducationBinary0 ;
249703    +   H13  = H13  +     0.16429021243944 * AcceptedCmp10
249704    +          +     0.56588075626118 * AcceptedCmp20  +     0.43207926875502 *
249705    +        AcceptedCmp30  +     0.36141171703205 * AcceptedCmp40
249706    +          +     0.09022955258394 * AcceptedCmp50  +     0.25104408334841 *
249707    +        Complain0  +    -0.33955733314538 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16429021243944 * AcceptedCmp10 + 0.56588075626118 * 
AcceptedCmp20 + 0.43207926875502 * AcceptedCmp30 + 0.36141171703205 * AcceptedCmp40 + 
0.09022955258394 * AcceptedCmp50 + 0.25104408334841 * Complain0 + -0.33955733314538 * 
HigherEducationBinary0 ;
249708    +   H11  = H11  +     0.02728610609824 * Education2n_Cycle
249709    +          +     0.09667850193508 * EducationBasic  +     0.25463002600203 *
249710    +        EducationGraduation  +    -0.04410148154511 * EducationMaster
249711    +          +     0.14010081581672 * Marital_StatusDivorced
249712    +          +     0.03574033044092 * Marital_StatusMarried
249713    +          +    -0.14272769898675 * Marital_StatusSingle
249714    +          +    -0.16346346400543 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02728610609824 * Education2n_Cycle + 0.09667850193508 * 
EducationBasic + 0.25463002600203 * EducationGraduation + -0.04410148154511 * EducationMaster 
+ 0.14010081581672 * Marital_StatusDivorced + 0.03574033044092 * Marital_StatusMarried + 
-0.14272769898675 * Marital_StatusSingle + -0.16346346400543 * Marital_StatusTogether ;
249715    +   H12  = H12  +    -0.18247012906814 * Education2n_Cycle
249716    +          +     0.29026668916871 * EducationBasic  +    -0.06412041802554 *
249717    +        EducationGraduation  +     0.03249333625443 * EducationMaster
249718    +          +    -0.14878433798537 * Marital_StatusDivorced
249719    +          +     0.14990226067603 * Marital_StatusMarried
249720    +          +    -0.50903755449357 * Marital_StatusSingle
249721    +          +     0.20423545450988 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18247012906814 * Education2n_Cycle + 0.29026668916871 * 
EducationBasic + -0.06412041802554 * EducationGraduation + 0.03249333625443 * EducationMaster 
+ -0.14878433798537 * Marital_StatusDivorced + 0.14990226067603 * Marital_StatusMarried + 
-0.50903755449357 * Marital_StatusSingle + 0.20423545450988 * Marital_StatusTogether ;
249722    +   H13  = H13  +     0.00835518102749 * Education2n_Cycle
249723    +          +    -0.11705366846147 * EducationBasic  +     0.21923266852082 *
249724    +        EducationGraduation  +     0.20051442484384 * EducationMaster
249725    +          +    -0.52568922939912 * Marital_StatusDivorced
249726    +          +     1.74121506979092 * Marital_StatusMarried
249727    +          +    -1.16029880777095 * Marital_StatusSingle
249728    +          +     0.99005497791089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00835518102749 * Education2n_Cycle + -0.11705366846147 * 
EducationBasic + 0.21923266852082 * EducationGraduation + 0.20051442484384 * EducationMaster + 
-0.52568922939912 * Marital_StatusDivorced + 1.74121506979092 * Marital_StatusMarried + 
-1.16029880777095 * Marital_StatusSingle + 0.99005497791089 * Marital_StatusTogether ;
249729    +   H11  =     -1.1924504292448 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1924504292448 + H11 ;
249730    +   H12  =      0.3842553583407 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.3842553583407 + H12 ;
249731    +   H13  =     1.78452931786241 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.78452931786241 + H13 ;
249732    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
249733    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
249734    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
249735    +END;
MPRINT(EM_DIAGRAM):   END;
249736    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
249737    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
249738    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
249739    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
249740    +END;
MPRINT(EM_DIAGRAM):   END;
249741    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249742    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
249743    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249744    +
249745    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
249746    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
249747    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
249748    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
249749    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
249750    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
249751    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
249752    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
249753    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
249754    +end;
MPRINT(EM_DIAGRAM):   end;
249755    +else do;
MPRINT(EM_DIAGRAM):   else do;
249756    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
249757    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
249758    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
249759    +   end;
MPRINT(EM_DIAGRAM):   end;
249760    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
249761    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
249762    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
249763    +   end;
MPRINT(EM_DIAGRAM):   end;
249764    +   else do;
MPRINT(EM_DIAGRAM):   else do;
249765    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
249766    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
249767    +   end;
MPRINT(EM_DIAGRAM):   end;
249768    +end;
MPRINT(EM_DIAGRAM):   end;
249769    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
249770    +   P_DepVar1  =      2.3103575015601 * H11  +    -2.81440392573378 * H12
249771    +          +    -3.01894159959464 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.3103575015601 * H11 + -2.81440392573378 * H12 + 
-3.01894159959464 * H13 ;
249772    +   P_DepVar1  =    -0.30419422660322 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.30419422660322 + P_DepVar1 ;
249773    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
249774    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
249775    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
249776    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
249777    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
249778    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
249779    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
249780    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
249781    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
249782    +END;
MPRINT(EM_DIAGRAM):   END;
249783    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
249784    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
249785    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
249786    +END;
MPRINT(EM_DIAGRAM):   END;
249787    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
249788    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
249789    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
249790    +END;
MPRINT(EM_DIAGRAM):   END;
249791    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
249792    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
249793    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
249794    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
249795    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
249796    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
249797    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
249798    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249799    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
249800    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249801    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
249802    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
249803    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
249804    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
249805    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
249806    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
249807    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
249808    +END;
MPRINT(EM_DIAGRAM):   END;
249809    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
249810    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
249811    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
249812    +drop
249813    +H11
249814    +H12
249815    +H13
249816    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
249817    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
249818     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL3_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
249819     quit;
249820     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
249821     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
249822     * Neural3: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural3: Computing metadata for TRAIN data;
249823     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural3_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural3_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural3_TRAIN out=WORK.M3PUFLKJ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3PUFLKJ;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3PUFLKJ(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3PUFLKJ;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3PUFLKJ;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M38M7GDY NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M38M7GDY;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M38M7GDY;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3I8X8_0(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M38M7GDY;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M38M7GDY;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M38M7GDY;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M38M7GDY;
MPRINT(EMADVISECOLUMNS):   set WORK.M38M7GDY;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural3";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural3";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural3: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
250135     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
250136     set EMWS8.Neural3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_EMINFO;
250137     where DATA='Neural3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
250138     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL3_EMINFO.
      WHERE (DATA='Neural3') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250139     data EMWS8.Neural3_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural3_EMINFO;
250140     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
250141     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
250142     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
250146     run;
250147     data EMWS8.Neural3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural3_EMINFO;
250148     set EMWS8.Neural3_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_EMINFO WORK.MODELTEMP_INFO;
250149     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL3_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

250150     proc sort data = EMWS8.Neural3_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural3_EMINFO NOTHREADS;
250151     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
250152     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL3_EMINFO.
NOTE: The data set EMWS8.NEURAL3_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250153     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
250154     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
250155     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250156     proc sort data = EMWS8.Neural3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
250157     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
250158     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL3_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

250159     data EMWS8.Neural3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural3_EMINFO;
250160     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
250161     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
250162     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL3_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250163     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
250164     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
250165     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
250166     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
