MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.03 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                12.03 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3JRQ0M1 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl57\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3JRQ0M1 new;
MPRINT(EM_DIAGRAM):   run;
234500     filename emflow
234500   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl57\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl57\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring AUTONEURAL46_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234501     *------------------------------------------------------------*;
234502     * Ensmbl57: Scoring AUTONEURAL46_TRAIN data;
234503     *------------------------------------------------------------*;
234504     data EMWS8.Ensmbl57_TRAIN
234505     / view=EMWS8.Ensmbl57_TRAIN
234506     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl57_TRAIN / view=EMWS8.Ensmbl57_TRAIN ;
234507     set EMWS8.AutoNeural46_TRAIN
234508     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural46_TRAIN ;
234509     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl57\EMFLOWSCORE.sas.
234510    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234511    +* Ensmbl57: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Combine model for DepVar;
234512    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234513    +* Ensmbl57: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 1 of 7;
234514    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234515    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234516    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
234517    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
234518    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
234519    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234520    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234521    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
234522    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
234523    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
234524    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234525    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234526    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
234527    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
234528    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
234529    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234530    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234531    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
234532    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
234533    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
234534    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234535    +
234536    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
234537    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
234537   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
234538    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
234539    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
234540    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
234541    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
234542    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
234543    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234544    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
234545    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
234546    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
234547    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234548    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234549    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
234550    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234551    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
234552    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
234553    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
234554    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234555    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
234556    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
234557    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
234558    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234559    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234560    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
234561    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
234562    +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
234563    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234564    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234565    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
234566    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
234567    +* NODE: AutoNeural46;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural46;
234568    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234569    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
234570    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
234571    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
234572    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
234573    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
234574    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
234575    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
234576    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
234577    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
234578    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
234579    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
234580    +LENGTH _WARN_ $4
234581    +      F_DepVar  $ 12
234582    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
234583    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
234584    +
234585    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
234586    +
234587    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
234588    +
234589    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
234590    +
234591    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
234592    +
234593    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
234594    +
234595    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
234596    +
234597    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
234598    +
234599    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
234600    +
234601    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
234602    +
234603    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
234604    +
234605    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
234606    +
234607    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
234608    +
234609    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
234610    +
234611    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
234612    +
234613    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
234614    +
234615    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
234616    +
234617    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
234618    +
234619    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
234620    +
234621    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
234622    +
234623    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
234624    +
234625    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
234626    +
234627    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
234628    +
234629    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
234630    +
234631    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
234632    +
234633    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
234634    +
234635    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
234636    +
234637    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
234638    +
234639    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
234640    +
234641    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
234642    +
234643    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
234644    +
234645    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
234646    +
234647    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
234648    +
234649    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
234650    +
234651    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
234652    +
234653    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
234654    +
234655    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
234656    +
234657    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
234658    +
234659    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
234660    +
234661    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
234662    +
234663    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
234664    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
234665    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
234666    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
234667    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
234668    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234669    +end;
MPRINT(EM_DIAGRAM):   end;
234670    +else do;
MPRINT(EM_DIAGRAM):   else do;
234671    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
234672    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
234673    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
234674    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
234675    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
234676    +   end;
MPRINT(EM_DIAGRAM):   end;
234677    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
234678    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
234679    +   end;
MPRINT(EM_DIAGRAM):   end;
234680    +   else do;
MPRINT(EM_DIAGRAM):   else do;
234681    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
234682    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
234683    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234684    +   end;
MPRINT(EM_DIAGRAM):   end;
234685    +end;
MPRINT(EM_DIAGRAM):   end;
234686    +
234687    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
234688    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
234689    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
234690    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
234691    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
234692    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234693    +end;
MPRINT(EM_DIAGRAM):   end;
234694    +else do;
MPRINT(EM_DIAGRAM):   else do;
234695    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
234696    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
234697    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
234698    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
234699    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
234700    +   end;
MPRINT(EM_DIAGRAM):   end;
234701    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
234702    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
234703    +   end;
MPRINT(EM_DIAGRAM):   end;
234704    +   else do;
MPRINT(EM_DIAGRAM):   else do;
234705    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
234706    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
234707    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234708    +   end;
MPRINT(EM_DIAGRAM):   end;
234709    +end;
MPRINT(EM_DIAGRAM):   end;
234710    +
234711    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
234712    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
234713    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
234714    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
234715    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
234716    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234717    +end;
MPRINT(EM_DIAGRAM):   end;
234718    +else do;
MPRINT(EM_DIAGRAM):   else do;
234719    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
234720    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
234721    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
234722    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
234723    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
234724    +   end;
MPRINT(EM_DIAGRAM):   end;
234725    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
234726    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
234727    +   end;
MPRINT(EM_DIAGRAM):   end;
234728    +   else do;
MPRINT(EM_DIAGRAM):   else do;
234729    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
234730    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
234731    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234732    +   end;
MPRINT(EM_DIAGRAM):   end;
234733    +end;
MPRINT(EM_DIAGRAM):   end;
234734    +
234735    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
234736    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
234737    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
234738    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
234739    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
234740    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234741    +end;
MPRINT(EM_DIAGRAM):   end;
234742    +else do;
MPRINT(EM_DIAGRAM):   else do;
234743    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
234744    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
234745    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
234746    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
234747    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
234748    +   end;
MPRINT(EM_DIAGRAM):   end;
234749    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
234750    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
234751    +   end;
MPRINT(EM_DIAGRAM):   end;
234752    +   else do;
MPRINT(EM_DIAGRAM):   else do;
234753    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
234754    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
234755    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234756    +   end;
MPRINT(EM_DIAGRAM):   end;
234757    +end;
MPRINT(EM_DIAGRAM):   end;
234758    +
234759    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
234760    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
234761    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
234762    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
234763    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
234764    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234765    +end;
MPRINT(EM_DIAGRAM):   end;
234766    +else do;
MPRINT(EM_DIAGRAM):   else do;
234767    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
234768    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
234769    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
234770    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
234771    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
234772    +   end;
MPRINT(EM_DIAGRAM):   end;
234773    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
234774    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
234775    +   end;
MPRINT(EM_DIAGRAM):   end;
234776    +   else do;
MPRINT(EM_DIAGRAM):   else do;
234777    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
234778    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
234779    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234780    +   end;
MPRINT(EM_DIAGRAM):   end;
234781    +end;
MPRINT(EM_DIAGRAM):   end;
234782    +
234783    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
234784    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
234785    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
234786    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
234787    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
234788    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234789    +end;
MPRINT(EM_DIAGRAM):   end;
234790    +else do;
MPRINT(EM_DIAGRAM):   else do;
234791    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
234792    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
234793    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
234794    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
234795    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
234796    +   end;
MPRINT(EM_DIAGRAM):   end;
234797    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
234798    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
234799    +   end;
MPRINT(EM_DIAGRAM):   end;
234800    +   else do;
MPRINT(EM_DIAGRAM):   else do;
234801    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
234802    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
234803    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234804    +   end;
MPRINT(EM_DIAGRAM):   end;
234805    +end;
MPRINT(EM_DIAGRAM):   end;
234806    +
234807    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
234808    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
234809    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
234810    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
234811    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
234812    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
234813    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
234814    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
234815    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
234816    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
234817    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
234818    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
234819    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
234820    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234821    +end;
MPRINT(EM_DIAGRAM):   end;
234822    +else do;
MPRINT(EM_DIAGRAM):   else do;
234823    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
234824    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
234825    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
234826    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
234827    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
234828    +   end;
MPRINT(EM_DIAGRAM):   end;
234829    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
234830    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
234831    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
234832    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
234833    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
234834    +   end;
MPRINT(EM_DIAGRAM):   end;
234835    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
234836    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
234837    +   end;
MPRINT(EM_DIAGRAM):   end;
234838    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
234839    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
234840    +   end;
MPRINT(EM_DIAGRAM):   end;
234841    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
234842    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
234843    +   end;
MPRINT(EM_DIAGRAM):   end;
234844    +   else do;
MPRINT(EM_DIAGRAM):   else do;
234845    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
234846    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
234847    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
234848    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
234849    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
234850    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234851    +   end;
MPRINT(EM_DIAGRAM):   end;
234852    +end;
MPRINT(EM_DIAGRAM):   end;
234853    +
234854    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
234855    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
234856    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
234857    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
234858    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
234859    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
234860    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
234861    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
234862    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
234863    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
234864    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
234865    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
234866    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
234867    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
234868    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234869    +end;
MPRINT(EM_DIAGRAM):   end;
234870    +else do;
MPRINT(EM_DIAGRAM):   else do;
234871    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
234872    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
234873    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
234874    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
234875    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
234876    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
234877    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
234878    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
234879    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
234880    +         end;
MPRINT(EM_DIAGRAM):   end;
234881    +         else do;
MPRINT(EM_DIAGRAM):   else do;
234882    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
234883    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
234884    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
234885    +            end;
MPRINT(EM_DIAGRAM):   end;
234886    +         end;
MPRINT(EM_DIAGRAM):   end;
234887    +      end;
MPRINT(EM_DIAGRAM):   end;
234888    +      else do;
MPRINT(EM_DIAGRAM):   else do;
234889    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
234890    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
234891    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
234892    +         end;
MPRINT(EM_DIAGRAM):   end;
234893    +      end;
MPRINT(EM_DIAGRAM):   end;
234894    +   end;
MPRINT(EM_DIAGRAM):   end;
234895    +   else do;
MPRINT(EM_DIAGRAM):   else do;
234896    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
234897    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
234898    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
234899    +      end;
MPRINT(EM_DIAGRAM):   end;
234900    +      else do;
MPRINT(EM_DIAGRAM):   else do;
234901    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
234902    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
234903    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
234904    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
234905    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
234906    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
234907    +         end;
MPRINT(EM_DIAGRAM):   end;
234908    +      end;
MPRINT(EM_DIAGRAM):   end;
234909    +   end;
MPRINT(EM_DIAGRAM):   end;
234910    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
234911    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
234912    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
234913    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
234914    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
234915    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
234916    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234917    +   end;
MPRINT(EM_DIAGRAM):   end;
234918    +end;
MPRINT(EM_DIAGRAM):   end;
234919    +
234920    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234921    +*** Checking missing input Interval
234922    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
234923    +
234924    +IF NMISS(
234925    +   Income ,
234926    +   Kidhome ,
234927    +   MntFishProducts ,
234928    +   MntFruits ,
234929    +   MntGoldProds ,
234930    +   MntMeatProducts ,
234931    +   MntSweetProducts ,
234932    +   MntWines ,
234933    +   NumCatalogPurchases ,
234934    +   NumDealsPurchases ,
234935    +   NumStorePurchases ,
234936    +   NumWebPurchases ,
234937    +   NumWebVisitsMonth ,
234938    +   Recency ,
234939    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
234940    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
234941    +
234942    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234943    +END;
MPRINT(EM_DIAGRAM):   END;
234944    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234945    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
234946    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234947    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
234948    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
234949    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
234950    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
234951    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
234952    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
234953    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
234954    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
234955    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
234956    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
234957    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
234958    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
234959    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
234960    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
234961    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
234962    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
234963    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
234964    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
234965    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
234966    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
234967    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
234968    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
234969    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
234970    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
234971    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
234972    +END;
MPRINT(EM_DIAGRAM):   END;
234973    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
234974    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
234975    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
234976    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
234977    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
234978    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
234979    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
234980    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
234981    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
234982    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
234983    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
234984    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
234985    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
234986    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
234987    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
234988    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
234989    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
234990    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
234991    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
234992    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
234993    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
234994    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
234995    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
234996    +   ELSE S_NumCatalogPurchases
234997    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
234998    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
234999    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
235000    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
235001    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
235002    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
235003    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
235004    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
235005    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
235006    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
235007    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
235008    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
235009    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
235010    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
235011    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
235012    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
235013    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
235014    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
235015    +END;
MPRINT(EM_DIAGRAM):   END;
235016    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235017    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
235018    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235019    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235020    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
235021    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235022    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235023    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
235024    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235025    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
235026    +   H1x1_1  =    -0.14779241211238 * S_Income  +     0.12406923960108 *
235027    +        S_Kidhome  +     0.07566108150758 * S_MntFishProducts
235028    +          +     0.04223936357442 * S_MntFruits  +    -0.01414396912246 *
235029    +        S_MntGoldProds  +    -0.43631543928923 * S_MntMeatProducts
235030    +          +      0.0311909552218 * S_MntSweetProducts
235031    +          +      0.1593908004139 * S_MntWines  +    -0.16331402526215 *
235032    +        S_NumCatalogPurchases  +    -0.08123579404919 * S_NumDealsPurchases
235033    +          +     0.12294876865087 * S_NumStorePurchases
235034    +          +     0.11602382379314 * S_NumWebPurchases
235035    +          +    -0.23519567542635 * S_NumWebVisitsMonth
235036    +          +     0.27617232496223 * S_Recency  +     0.06912944740739 *
235037    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14779241211238 * S_Income + 0.12406923960108 * S_Kidhome + 
0.07566108150758 * S_MntFishProducts + 0.04223936357442 * S_MntFruits + -0.01414396912246 * 
S_MntGoldProds + -0.43631543928923 * S_MntMeatProducts + 0.0311909552218 * S_MntSweetProducts 
+ 0.1593908004139 * S_MntWines + -0.16331402526215 * S_NumCatalogPurchases + -0.08123579404919 
* S_NumDealsPurchases + 0.12294876865087 * S_NumStorePurchases + 0.11602382379314 * 
S_NumWebPurchases + -0.23519567542635 * S_NumWebVisitsMonth + 0.27617232496223 * S_Recency + 
0.06912944740739 * S_Teenhome ;
235038    +   H1x1_2  =    -0.13491153011654 * S_Income  +     0.14656938917448 *
235039    +        S_Kidhome  +     0.04457005191996 * S_MntFishProducts
235040    +          +     0.00771761834647 * S_MntFruits  +    -0.11830651019438 *
235041    +        S_MntGoldProds  +     0.06464771115751 * S_MntMeatProducts
235042    +          +     0.00133400054994 * S_MntSweetProducts
235043    +          +    -0.63837598558931 * S_MntWines  +     0.09668222160749 *
235044    +        S_NumCatalogPurchases  +     0.23530173987642 * S_NumDealsPurchases
235045    +          +    -0.49595472235036 * S_NumStorePurchases
235046    +          +    -0.24747548015204 * S_NumWebPurchases
235047    +          +     0.12326047694811 * S_NumWebVisitsMonth
235048    +          +    -0.04929000435218 * S_Recency  +     0.00568113597531 *
235049    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13491153011654 * S_Income + 0.14656938917448 * S_Kidhome + 
0.04457005191996 * S_MntFishProducts + 0.00771761834647 * S_MntFruits + -0.11830651019438 * 
S_MntGoldProds + 0.06464771115751 * S_MntMeatProducts + 0.00133400054994 * S_MntSweetProducts 
+ -0.63837598558931 * S_MntWines + 0.09668222160749 * S_NumCatalogPurchases + 0.23530173987642 
* S_NumDealsPurchases + -0.49595472235036 * S_NumStorePurchases + -0.24747548015204 * 
S_NumWebPurchases + 0.12326047694811 * S_NumWebVisitsMonth + -0.04929000435218 * S_Recency + 
0.00568113597531 * S_Teenhome ;
235050    +   H1x1_3  =     0.13062973754666 * S_Income  +    -0.15311279667585 *
235051    +        S_Kidhome  +      0.0854652628099 * S_MntFishProducts
235052    +          +     0.02260695043189 * S_MntFruits  +    -0.06427354034325 *
235053    +        S_MntGoldProds  +    -0.51556004816788 * S_MntMeatProducts
235054    +          +    -0.03908755288099 * S_MntSweetProducts
235055    +          +    -0.24983513168561 * S_MntWines  +     0.11583370343483 *
235056    +        S_NumCatalogPurchases  +     0.05060583856766 * S_NumDealsPurchases
235057    +          +    -0.20634630081435 * S_NumStorePurchases
235058    +          +    -0.06734935798888 * S_NumWebPurchases
235059    +          +     0.32288250215418 * S_NumWebVisitsMonth
235060    +          +    -0.32978147839937 * S_Recency  +    -0.07420334428475 *
235061    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.13062973754666 * S_Income + -0.15311279667585 * S_Kidhome + 
0.0854652628099 * S_MntFishProducts + 0.02260695043189 * S_MntFruits + -0.06427354034325 * 
S_MntGoldProds + -0.51556004816788 * S_MntMeatProducts + -0.03908755288099 * 
S_MntSweetProducts + -0.24983513168561 * S_MntWines + 0.11583370343483 * S_NumCatalogPurchases 
+ 0.05060583856766 * S_NumDealsPurchases + -0.20634630081435 * S_NumStorePurchases + 
-0.06734935798888 * S_NumWebPurchases + 0.32288250215418 * S_NumWebVisitsMonth + 
-0.32978147839937 * S_Recency + -0.07420334428475 * S_Teenhome ;
235062    +   H1x1_1  = H1x1_1  +     0.14311220987159 * AcceptedCmp10
235063    +          +     0.25596748420576 * AcceptedCmp20  +     0.13199169114019 *
235064    +        AcceptedCmp30  +     0.14111066281846 * AcceptedCmp40
235065    +          +     0.16136804502708 * AcceptedCmp50  +     0.06340055511955 *
235066    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14311220987159 * AcceptedCmp10 + 0.25596748420576 * 
AcceptedCmp20 + 0.13199169114019 * AcceptedCmp30 + 0.14111066281846 * AcceptedCmp40 + 
0.16136804502708 * AcceptedCmp50 + 0.06340055511955 * Complain0 ;
235067    +   H1x1_2  = H1x1_2  +     0.07692946904386 * AcceptedCmp10
235068    +          +     0.10129736414747 * AcceptedCmp20  +    -0.08526063108983 *
235069    +        AcceptedCmp30  +     0.00391518443243 * AcceptedCmp40
235070    +          +    -0.11013908503956 * AcceptedCmp50  +     0.03814032229209 *
235071    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.07692946904386 * AcceptedCmp10 + 0.10129736414747 * 
AcceptedCmp20 + -0.08526063108983 * AcceptedCmp30 + 0.00391518443243 * AcceptedCmp40 + 
-0.11013908503956 * AcceptedCmp50 + 0.03814032229209 * Complain0 ;
235072    +   H1x1_3  = H1x1_3  +    -0.02206432573422 * AcceptedCmp10
235073    +          +     0.22410311196864 * AcceptedCmp20  +    -0.19387020375313 *
235074    +        AcceptedCmp30  +    -0.12058647992586 * AcceptedCmp40
235075    +          +    -0.09809197464918 * AcceptedCmp50  +    -0.09604584189983 *
235076    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02206432573422 * AcceptedCmp10 + 0.22410311196864 * 
AcceptedCmp20 + -0.19387020375313 * AcceptedCmp30 + -0.12058647992586 * AcceptedCmp40 + 
-0.09809197464918 * AcceptedCmp50 + -0.09604584189983 * Complain0 ;
235077    +   H1x1_1  = H1x1_1  +    -0.00017476927899 * Education2n_Cycle
235078    +          +    -0.15306731287208 * EducationBasic  +     0.04951359729631 *
235079    +        EducationGraduation  +     0.07475697967073 * EducationMaster
235080    +          +    -0.04265434587882 * Marital_StatusDivorced
235081    +          +     0.17114014094758 * Marital_StatusMarried
235082    +          +     -0.1537035921296 * Marital_StatusSingle
235083    +          +     0.15023718360478 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00017476927899 * Education2n_Cycle + 
-0.15306731287208 * EducationBasic + 0.04951359729631 * EducationGraduation + 0.07475697967073 
* EducationMaster + -0.04265434587882 * Marital_StatusDivorced + 0.17114014094758 * 
Marital_StatusMarried + -0.1537035921296 * Marital_StatusSingle + 0.15023718360478 * 
Marital_StatusTogether ;
235084    +   H1x1_2  = H1x1_2  +     0.10391719023548 * Education2n_Cycle
235085    +          +    -0.71597921887555 * EducationBasic  +     0.38732833028427 *
235086    +        EducationGraduation  +     0.04507684017588 * EducationMaster
235087    +          +     0.25534272809394 * Marital_StatusDivorced
235088    +          +     0.20034903346804 * Marital_StatusMarried
235089    +          +    -0.38348393943797 * Marital_StatusSingle
235090    +          +     0.15254304652439 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.10391719023548 * Education2n_Cycle + 
-0.71597921887555 * EducationBasic + 0.38732833028427 * EducationGraduation + 0.04507684017588 
* EducationMaster + 0.25534272809394 * Marital_StatusDivorced + 0.20034903346804 * 
Marital_StatusMarried + -0.38348393943797 * Marital_StatusSingle + 0.15254304652439 * 
Marital_StatusTogether ;
235091    +   H1x1_3  = H1x1_3  +     0.06104667656786 * Education2n_Cycle
235092    +          +     -0.0935234366994 * EducationBasic  +     0.09446977823229 *
235093    +        EducationGraduation  +    -0.11683780234266 * EducationMaster
235094    +          +      0.1988416043876 * Marital_StatusDivorced
235095    +          +    -0.21663959478684 * Marital_StatusMarried
235096    +          +     0.06591480171547 * Marital_StatusSingle
235097    +          +    -0.17108581516048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.06104667656786 * Education2n_Cycle + 
-0.0935234366994 * EducationBasic + 0.09446977823229 * EducationGraduation + -0.11683780234266 
* EducationMaster + 0.1988416043876 * Marital_StatusDivorced + -0.21663959478684 * 
Marital_StatusMarried + 0.06591480171547 * Marital_StatusSingle + -0.17108581516048 * 
Marital_StatusTogether ;
235098    +   H1x1_1  =     0.12085771569539 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12085771569539 + H1x1_1 ;
235099    +   H1x1_2  =     1.88026862462696 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.88026862462696 + H1x1_2 ;
235100    +   H1x1_3  =    -1.66768306479405 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66768306479405 + H1x1_3 ;
235101    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
235102    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
235103    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
235104    +END;
MPRINT(EM_DIAGRAM):   END;
235105    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
235106    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
235107    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
235108    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
235109    +END;
MPRINT(EM_DIAGRAM):   END;
235110    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235111    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
235112    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235113    +
235114    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
235115    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
235116    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
235117    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
235118    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
235119    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
235120    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
235121    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
235122    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
235123    +end;
MPRINT(EM_DIAGRAM):   end;
235124    +else do;
MPRINT(EM_DIAGRAM):   else do;
235125    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
235126    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
235127    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
235128    +   end;
MPRINT(EM_DIAGRAM):   end;
235129    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
235130    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
235131    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
235132    +   end;
MPRINT(EM_DIAGRAM):   end;
235133    +   else do;
MPRINT(EM_DIAGRAM):   else do;
235134    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
235135    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
235136    +   end;
MPRINT(EM_DIAGRAM):   end;
235137    +end;
MPRINT(EM_DIAGRAM):   end;
235138    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
235139    +   P_DepVar1  =    -105.465737701328 * H1x1_1  +    -25.9919910307682 * H1x1_2
235140    +          +    -60.7557666068018 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -105.465737701328 * H1x1_1 + -25.9919910307682 * H1x1_2 + 
-60.7557666068018 * H1x1_3 ;
235141    +   P_DepVar1  =     17.0796398396243 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.0796398396243 + P_DepVar1 ;
235142    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
235143    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
235144    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
235145    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
235146    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
235147    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
235148    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
235149    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
235150    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
235151    +END;
MPRINT(EM_DIAGRAM):   END;
235152    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
235153    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
235154    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
235155    +END;
MPRINT(EM_DIAGRAM):   END;
235156    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
235157    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
235158    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
235159    +END;
MPRINT(EM_DIAGRAM):   END;
235160    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
235161    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
235162    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
235163    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
235164    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
235165    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
235166    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
235167    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235168    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
235169    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235170    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
235171    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
235172    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
235173    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
235174    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
235175    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
235176    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
235177    +END;
MPRINT(EM_DIAGRAM):   END;
235178    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
235179    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
235180    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
235181    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
235182    +* Renaming variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural46;
235183    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235184    +* Renaming Posterior variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural46;
235185    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235186    +drop AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar1;
235187    +AutoNeural46_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar1 = P_DepVar1;
235188    +drop AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar0;
235189    +AutoNeural46_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar0 = P_DepVar0;
235190    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235191    +* Renaming _WARN_ variable for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural46;
235192    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235193    +length AutoNeural46_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural46_WARN_ $4;
235194    +drop AutoNeural46_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_WARN_;
235195    +AutoNeural46_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural46_WARN_ = _WARN_;
235196    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235197    +* Ensmbl57: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 2 of 7;
235198    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235199    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235200    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
235201    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
235202    +* NODE: AutoNeural43;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural43;
235203    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235204    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
235205    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
235206    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
235207    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
235208    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
235209    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
235210    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
235211    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
235212    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
235213    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
235214    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
235215    +LENGTH _WARN_ $4
235216    +      F_DepVar  $ 12
235217    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
235218    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
235219    +
235220    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
235221    +
235222    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
235223    +
235224    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
235225    +
235226    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
235227    +
235228    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
235229    +
235230    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
235231    +
235232    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
235233    +
235234    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
235235    +
235236    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
235237    +
235238    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
235239    +
235240    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
235241    +
235242    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
235243    +
235244    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
235245    +
235246    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
235247    +
235248    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
235249    +
235250    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
235251    +
235252    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
235253    +
235254    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
235255    +
235256    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
235257    +
235258    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
235259    +
235260    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
235261    +
235262    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
235263    +
235264    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
235265    +
235266    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
235267    +
235268    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
235269    +
235270    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
235271    +
235272    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
235273    +
235274    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
235275    +
235276    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
235277    +
235278    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
235279    +
235280    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
235281    +
235282    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
235283    +
235284    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
235285    +
235286    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
235287    +
235288    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
235289    +
235290    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
235291    +
235292    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
235293    +
235294    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
235295    +
235296    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
235297    +
235298    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
235299    +
235300    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
235301    +
235302    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
235303    +
235304    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
235305    +
235306    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
235307    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
235308    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
235309    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
235310    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
235311    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235312    +end;
MPRINT(EM_DIAGRAM):   end;
235313    +else do;
MPRINT(EM_DIAGRAM):   else do;
235314    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
235315    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
235316    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
235317    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
235318    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
235319    +   end;
MPRINT(EM_DIAGRAM):   end;
235320    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
235321    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
235322    +   end;
MPRINT(EM_DIAGRAM):   end;
235323    +   else do;
MPRINT(EM_DIAGRAM):   else do;
235324    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
235325    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
235326    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235327    +   end;
MPRINT(EM_DIAGRAM):   end;
235328    +end;
MPRINT(EM_DIAGRAM):   end;
235329    +
235330    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
235331    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
235332    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
235333    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
235334    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
235335    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235336    +end;
MPRINT(EM_DIAGRAM):   end;
235337    +else do;
MPRINT(EM_DIAGRAM):   else do;
235338    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
235339    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
235340    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
235341    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
235342    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
235343    +   end;
MPRINT(EM_DIAGRAM):   end;
235344    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
235345    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
235346    +   end;
MPRINT(EM_DIAGRAM):   end;
235347    +   else do;
MPRINT(EM_DIAGRAM):   else do;
235348    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
235349    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
235350    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235351    +   end;
MPRINT(EM_DIAGRAM):   end;
235352    +end;
MPRINT(EM_DIAGRAM):   end;
235353    +
235354    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
235355    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
235356    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
235357    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
235358    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
235359    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235360    +end;
MPRINT(EM_DIAGRAM):   end;
235361    +else do;
MPRINT(EM_DIAGRAM):   else do;
235362    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
235363    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
235364    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
235365    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
235366    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
235367    +   end;
MPRINT(EM_DIAGRAM):   end;
235368    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
235369    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
235370    +   end;
MPRINT(EM_DIAGRAM):   end;
235371    +   else do;
MPRINT(EM_DIAGRAM):   else do;
235372    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
235373    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
235374    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235375    +   end;
MPRINT(EM_DIAGRAM):   end;
235376    +end;
MPRINT(EM_DIAGRAM):   end;
235377    +
235378    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
235379    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
235380    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
235381    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
235382    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
235383    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235384    +end;
MPRINT(EM_DIAGRAM):   end;
235385    +else do;
MPRINT(EM_DIAGRAM):   else do;
235386    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
235387    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
235388    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
235389    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
235390    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
235391    +   end;
MPRINT(EM_DIAGRAM):   end;
235392    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
235393    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
235394    +   end;
MPRINT(EM_DIAGRAM):   end;
235395    +   else do;
MPRINT(EM_DIAGRAM):   else do;
235396    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
235397    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
235398    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235399    +   end;
MPRINT(EM_DIAGRAM):   end;
235400    +end;
MPRINT(EM_DIAGRAM):   end;
235401    +
235402    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
235403    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
235404    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
235405    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
235406    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
235407    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235408    +end;
MPRINT(EM_DIAGRAM):   end;
235409    +else do;
MPRINT(EM_DIAGRAM):   else do;
235410    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
235411    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
235412    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
235413    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
235414    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
235415    +   end;
MPRINT(EM_DIAGRAM):   end;
235416    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
235417    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
235418    +   end;
MPRINT(EM_DIAGRAM):   end;
235419    +   else do;
MPRINT(EM_DIAGRAM):   else do;
235420    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
235421    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
235422    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235423    +   end;
MPRINT(EM_DIAGRAM):   end;
235424    +end;
MPRINT(EM_DIAGRAM):   end;
235425    +
235426    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
235427    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
235428    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
235429    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
235430    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
235431    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235432    +end;
MPRINT(EM_DIAGRAM):   end;
235433    +else do;
MPRINT(EM_DIAGRAM):   else do;
235434    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
235435    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
235436    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
235437    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
235438    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
235439    +   end;
MPRINT(EM_DIAGRAM):   end;
235440    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
235441    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
235442    +   end;
MPRINT(EM_DIAGRAM):   end;
235443    +   else do;
MPRINT(EM_DIAGRAM):   else do;
235444    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
235445    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
235446    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235447    +   end;
MPRINT(EM_DIAGRAM):   end;
235448    +end;
MPRINT(EM_DIAGRAM):   end;
235449    +
235450    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
235451    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
235452    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
235453    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
235454    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
235455    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
235456    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
235457    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
235458    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
235459    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
235460    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
235461    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
235462    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
235463    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235464    +end;
MPRINT(EM_DIAGRAM):   end;
235465    +else do;
MPRINT(EM_DIAGRAM):   else do;
235466    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
235467    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
235468    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
235469    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
235470    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
235471    +   end;
MPRINT(EM_DIAGRAM):   end;
235472    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
235473    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
235474    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
235475    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
235476    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
235477    +   end;
MPRINT(EM_DIAGRAM):   end;
235478    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
235479    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
235480    +   end;
MPRINT(EM_DIAGRAM):   end;
235481    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
235482    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
235483    +   end;
MPRINT(EM_DIAGRAM):   end;
235484    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
235485    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
235486    +   end;
MPRINT(EM_DIAGRAM):   end;
235487    +   else do;
MPRINT(EM_DIAGRAM):   else do;
235488    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
235489    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
235490    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
235491    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
235492    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
235493    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235494    +   end;
MPRINT(EM_DIAGRAM):   end;
235495    +end;
MPRINT(EM_DIAGRAM):   end;
235496    +
235497    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
235498    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
235499    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
235500    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
235501    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
235502    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
235503    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
235504    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
235505    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
235506    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
235507    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
235508    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
235509    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
235510    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
235511    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235512    +end;
MPRINT(EM_DIAGRAM):   end;
235513    +else do;
MPRINT(EM_DIAGRAM):   else do;
235514    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
235515    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
235516    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
235517    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
235518    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
235519    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
235520    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
235521    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
235522    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
235523    +         end;
MPRINT(EM_DIAGRAM):   end;
235524    +         else do;
MPRINT(EM_DIAGRAM):   else do;
235525    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
235526    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
235527    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
235528    +            end;
MPRINT(EM_DIAGRAM):   end;
235529    +         end;
MPRINT(EM_DIAGRAM):   end;
235530    +      end;
MPRINT(EM_DIAGRAM):   end;
235531    +      else do;
MPRINT(EM_DIAGRAM):   else do;
235532    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
235533    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
235534    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
235535    +         end;
MPRINT(EM_DIAGRAM):   end;
235536    +      end;
MPRINT(EM_DIAGRAM):   end;
235537    +   end;
MPRINT(EM_DIAGRAM):   end;
235538    +   else do;
MPRINT(EM_DIAGRAM):   else do;
235539    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
235540    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
235541    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
235542    +      end;
MPRINT(EM_DIAGRAM):   end;
235543    +      else do;
MPRINT(EM_DIAGRAM):   else do;
235544    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
235545    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
235546    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
235547    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
235548    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
235549    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
235550    +         end;
MPRINT(EM_DIAGRAM):   end;
235551    +      end;
MPRINT(EM_DIAGRAM):   end;
235552    +   end;
MPRINT(EM_DIAGRAM):   end;
235553    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
235554    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
235555    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
235556    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
235557    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
235558    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
235559    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235560    +   end;
MPRINT(EM_DIAGRAM):   end;
235561    +end;
MPRINT(EM_DIAGRAM):   end;
235562    +
235563    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235564    +*** Checking missing input Interval
235565    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
235566    +
235567    +IF NMISS(
235568    +   Income ,
235569    +   Kidhome ,
235570    +   MntFishProducts ,
235571    +   MntFruits ,
235572    +   MntGoldProds ,
235573    +   MntMeatProducts ,
235574    +   MntSweetProducts ,
235575    +   MntWines ,
235576    +   NumCatalogPurchases ,
235577    +   NumDealsPurchases ,
235578    +   NumStorePurchases ,
235579    +   NumWebPurchases ,
235580    +   NumWebVisitsMonth ,
235581    +   Recency ,
235582    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
235583    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
235584    +
235585    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235586    +END;
MPRINT(EM_DIAGRAM):   END;
235587    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235588    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
235589    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235590    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
235591    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
235592    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
235593    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
235594    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
235595    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
235596    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
235597    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
235598    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
235599    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
235600    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
235601    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
235602    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
235603    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
235604    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
235605    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
235606    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
235607    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
235608    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
235609    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
235610    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
235611    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
235612    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
235613    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
235614    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
235615    +END;
MPRINT(EM_DIAGRAM):   END;
235616    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
235617    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
235618    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
235619    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
235620    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
235621    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
235622    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
235623    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
235624    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
235625    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
235626    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
235627    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
235628    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
235629    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
235630    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
235631    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
235632    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
235633    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
235634    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
235635    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
235636    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
235637    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
235638    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
235639    +   ELSE S_NumCatalogPurchases
235640    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
235641    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
235642    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
235643    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
235644    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
235645    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
235646    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
235647    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
235648    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
235649    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
235650    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
235651    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
235652    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
235653    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
235654    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
235655    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
235656    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
235657    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
235658    +END;
MPRINT(EM_DIAGRAM):   END;
235659    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235660    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
235661    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235662    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235663    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
235664    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235665    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235666    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
235667    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235668    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
235669    +   H1x1_1  =       0.346744797535 * S_Income  +     1.31363556955711 *
235670    +        S_Kidhome  +    -0.79208756741143 * S_MntFishProducts
235671    +          +     0.68527811841342 * S_MntFruits  +     0.24664684629472 *
235672    +        S_MntGoldProds  +     0.85215044326148 * S_MntMeatProducts
235673    +          +    -0.05146617403327 * S_MntSweetProducts
235674    +          +     0.70199486255944 * S_MntWines  +    -1.00450471229357 *
235675    +        S_NumCatalogPurchases  +     0.20437829426231 * S_NumDealsPurchases
235676    +          +     0.62863110938217 * S_NumStorePurchases
235677    +          +    -0.38696149667878 * S_NumWebPurchases
235678    +          +    -0.64969312889347 * S_NumWebVisitsMonth
235679    +          +      1.3506790879911 * S_Recency  +    -0.14927581282921 *
235680    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.346744797535 * S_Income + 1.31363556955711 * S_Kidhome + 
-0.79208756741143 * S_MntFishProducts + 0.68527811841342 * S_MntFruits + 0.24664684629472 * 
S_MntGoldProds + 0.85215044326148 * S_MntMeatProducts + -0.05146617403327 * S_MntSweetProducts 
+ 0.70199486255944 * S_MntWines + -1.00450471229357 * S_NumCatalogPurchases + 0.20437829426231 
* S_NumDealsPurchases + 0.62863110938217 * S_NumStorePurchases + -0.38696149667878 * 
S_NumWebPurchases + -0.64969312889347 * S_NumWebVisitsMonth + 1.3506790879911 * S_Recency + 
-0.14927581282921 * S_Teenhome ;
235681    +   H1x1_2  =    -0.31812547665326 * S_Income  +    -0.44650104709618 *
235682    +        S_Kidhome  +     0.57229440722364 * S_MntFishProducts
235683    +          +     0.43482820937164 * S_MntFruits  +     -0.2031067703009 *
235684    +        S_MntGoldProds  +    -4.22959784007598 * S_MntMeatProducts
235685    +          +     -0.2837867994991 * S_MntSweetProducts
235686    +          +     0.53009243544309 * S_MntWines  +    -0.69827694726429 *
235687    +        S_NumCatalogPurchases  +    -0.21825886946472 * S_NumDealsPurchases
235688    +          +    -0.54369381190341 * S_NumStorePurchases
235689    +          +     0.67406669261545 * S_NumWebPurchases
235690    +          +     0.33996696883368 * S_NumWebVisitsMonth
235691    +          +    -0.25785000158296 * S_Recency  +     0.29059204886836 *
235692    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31812547665326 * S_Income + -0.44650104709618 * S_Kidhome + 
0.57229440722364 * S_MntFishProducts + 0.43482820937164 * S_MntFruits + -0.2031067703009 * 
S_MntGoldProds + -4.22959784007598 * S_MntMeatProducts + -0.2837867994991 * S_MntSweetProducts 
+ 0.53009243544309 * S_MntWines + -0.69827694726429 * S_NumCatalogPurchases + 
-0.21825886946472 * S_NumDealsPurchases + -0.54369381190341 * S_NumStorePurchases + 
0.67406669261545 * S_NumWebPurchases + 0.33996696883368 * S_NumWebVisitsMonth + 
-0.25785000158296 * S_Recency + 0.29059204886836 * S_Teenhome ;
235693    +   H1x1_3  =    -0.95497484937763 * S_Income  +     0.69843675975299 *
235694    +        S_Kidhome  +    -0.16297234253648 * S_MntFishProducts
235695    +          +    -0.79520871513787 * S_MntFruits  +    -0.29823724505093 *
235696    +        S_MntGoldProds  +    -0.15152860134108 * S_MntMeatProducts
235697    +          +    -0.03465749764322 * S_MntSweetProducts
235698    +          +     0.53127184040091 * S_MntWines  +     0.59135593751067 *
235699    +        S_NumCatalogPurchases  +     0.32132594137215 * S_NumDealsPurchases
235700    +          +      0.4404265130137 * S_NumStorePurchases
235701    +          +     0.34042541893429 * S_NumWebPurchases
235702    +          +    -1.21549916758761 * S_NumWebVisitsMonth
235703    +          +       1.154070329153 * S_Recency  +     0.48728201337678 *
235704    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.95497484937763 * S_Income + 0.69843675975299 * S_Kidhome + 
-0.16297234253648 * S_MntFishProducts + -0.79520871513787 * S_MntFruits + -0.29823724505093 * 
S_MntGoldProds + -0.15152860134108 * S_MntMeatProducts + -0.03465749764322 * 
S_MntSweetProducts + 0.53127184040091 * S_MntWines + 0.59135593751067 * S_NumCatalogPurchases 
+ 0.32132594137215 * S_NumDealsPurchases + 0.4404265130137 * S_NumStorePurchases + 
0.34042541893429 * S_NumWebPurchases + -1.21549916758761 * S_NumWebVisitsMonth + 
1.154070329153 * S_Recency + 0.48728201337678 * S_Teenhome ;
235705    +   H1x1_4  =    -1.18770065121934 * S_Income  +      0.3073609740511 *
235706    +        S_Kidhome  +     0.10352863720245 * S_MntFishProducts
235707    +          +      0.2833318237712 * S_MntFruits  +     0.03154921247745 *
235708    +        S_MntGoldProds  +    -0.21591651561727 * S_MntMeatProducts
235709    +          +    -0.00464679492565 * S_MntSweetProducts
235710    +          +     0.91421960675715 * S_MntWines  +    -1.26836416129835 *
235711    +        S_NumCatalogPurchases  +    -0.70058095897782 * S_NumDealsPurchases
235712    +          +     1.15839307615364 * S_NumStorePurchases
235713    +          +     0.62831972126136 * S_NumWebPurchases
235714    +          +    -1.61962107597882 * S_NumWebVisitsMonth
235715    +          +     1.12858496707441 * S_Recency  +     0.54281989992336 *
235716    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.18770065121934 * S_Income + 0.3073609740511 * S_Kidhome + 
0.10352863720245 * S_MntFishProducts + 0.2833318237712 * S_MntFruits + 0.03154921247745 * 
S_MntGoldProds + -0.21591651561727 * S_MntMeatProducts + -0.00464679492565 * 
S_MntSweetProducts + 0.91421960675715 * S_MntWines + -1.26836416129835 * S_NumCatalogPurchases 
+ -0.70058095897782 * S_NumDealsPurchases + 1.15839307615364 * S_NumStorePurchases + 
0.62831972126136 * S_NumWebPurchases + -1.61962107597882 * S_NumWebVisitsMonth + 
1.12858496707441 * S_Recency + 0.54281989992336 * S_Teenhome ;
235717    +   H1x1_5  =     0.05044786678162 * S_Income  +    -0.28010558310581 *
235718    +        S_Kidhome  +    -0.27691656261205 * S_MntFishProducts
235719    +          +    -0.39089831210828 * S_MntFruits  +    -0.08178998049926 *
235720    +        S_MntGoldProds  +     1.72104172406534 * S_MntMeatProducts
235721    +          +    -0.31125451894603 * S_MntSweetProducts
235722    +          +    -2.29170137059747 * S_MntWines  +     0.63730065528433 *
235723    +        S_NumCatalogPurchases  +     0.88249434950066 * S_NumDealsPurchases
235724    +          +    -1.44151914398807 * S_NumStorePurchases
235725    +          +     -0.5455286038748 * S_NumWebPurchases
235726    +          +     0.92543573664002 * S_NumWebVisitsMonth
235727    +          +    -0.94895006705107 * S_Recency  +     0.12419848895477 *
235728    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.05044786678162 * S_Income + -0.28010558310581 * S_Kidhome + 
-0.27691656261205 * S_MntFishProducts + -0.39089831210828 * S_MntFruits + -0.08178998049926 * 
S_MntGoldProds + 1.72104172406534 * S_MntMeatProducts + -0.31125451894603 * S_MntSweetProducts 
+ -2.29170137059747 * S_MntWines + 0.63730065528433 * S_NumCatalogPurchases + 0.88249434950066 
* S_NumDealsPurchases + -1.44151914398807 * S_NumStorePurchases + -0.5455286038748 * 
S_NumWebPurchases + 0.92543573664002 * S_NumWebVisitsMonth + -0.94895006705107 * S_Recency + 
0.12419848895477 * S_Teenhome ;
235729    +   H1x1_6  =      1.0379959912095 * S_Income  +    -0.86527104445929 *
235730    +        S_Kidhome  +    -0.34569179888564 * S_MntFishProducts
235731    +          +    -0.00109367242014 * S_MntFruits  +      0.1491727982835 *
235732    +        S_MntGoldProds  +     1.59142102470118 * S_MntMeatProducts
235733    +          +    -0.44310159680843 * S_MntSweetProducts
235734    +          +    -0.12978244847526 * S_MntWines  +     1.25298974430925 *
235735    +        S_NumCatalogPurchases  +      0.8343138844265 * S_NumDealsPurchases
235736    +          +    -0.06648303760561 * S_NumStorePurchases
235737    +          +    -0.65122349287903 * S_NumWebPurchases
235738    +          +     1.83555427093429 * S_NumWebVisitsMonth
235739    +          +    -2.44265045013513 * S_Recency  +    -0.96168611481099 *
235740    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0379959912095 * S_Income + -0.86527104445929 * S_Kidhome + 
-0.34569179888564 * S_MntFishProducts + -0.00109367242014 * S_MntFruits + 0.1491727982835 * 
S_MntGoldProds + 1.59142102470118 * S_MntMeatProducts + -0.44310159680843 * S_MntSweetProducts 
+ -0.12978244847526 * S_MntWines + 1.25298974430925 * S_NumCatalogPurchases + 0.8343138844265 
* S_NumDealsPurchases + -0.06648303760561 * S_NumStorePurchases + -0.65122349287903 * 
S_NumWebPurchases + 1.83555427093429 * S_NumWebVisitsMonth + -2.44265045013513 * S_Recency + 
-0.96168611481099 * S_Teenhome ;
235741    +   H1x1_1  = H1x1_1  +    -0.04697238730506 * AcceptedCmp10
235742    +          +     0.17124574303968 * AcceptedCmp20  +     0.24668651391243 *
235743    +        AcceptedCmp30  +    -0.17661157809394 * AcceptedCmp40
235744    +          +    -0.07986471073966 * AcceptedCmp50  +     0.39456441776971 *
235745    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04697238730506 * AcceptedCmp10 + 0.17124574303968 * 
AcceptedCmp20 + 0.24668651391243 * AcceptedCmp30 + -0.17661157809394 * AcceptedCmp40 + 
-0.07986471073966 * AcceptedCmp50 + 0.39456441776971 * Complain0 ;
235746    +   H1x1_2  = H1x1_2  +     0.82032499204552 * AcceptedCmp10
235747    +          +     0.34058590721793 * AcceptedCmp20  +    -0.05139100187265 *
235748    +        AcceptedCmp30  +     0.03047923325443 * AcceptedCmp40
235749    +          +     0.00472330466661 * AcceptedCmp50  +     0.17230692332464 *
235750    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.82032499204552 * AcceptedCmp10 + 0.34058590721793 * 
AcceptedCmp20 + -0.05139100187265 * AcceptedCmp30 + 0.03047923325443 * AcceptedCmp40 + 
0.00472330466661 * AcceptedCmp50 + 0.17230692332464 * Complain0 ;
235751    +   H1x1_3  = H1x1_3  +     0.28530146043163 * AcceptedCmp10
235752    +          +     0.42287366771085 * AcceptedCmp20  +     0.47373508298281 *
235753    +        AcceptedCmp30  +     0.55866504005454 * AcceptedCmp40
235754    +          +     0.82267729772563 * AcceptedCmp50  +     0.19702533550506 *
235755    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.28530146043163 * AcceptedCmp10 + 0.42287366771085 * 
AcceptedCmp20 + 0.47373508298281 * AcceptedCmp30 + 0.55866504005454 * AcceptedCmp40 + 
0.82267729772563 * AcceptedCmp50 + 0.19702533550506 * Complain0 ;
235756    +   H1x1_4  = H1x1_4  +     0.52781659896891 * AcceptedCmp10
235757    +          +     0.42920365778433 * AcceptedCmp20  +     1.17620912558163 *
235758    +        AcceptedCmp30  +     0.60548467992927 * AcceptedCmp40
235759    +          +     0.94474163621099 * AcceptedCmp50  +    -0.78069672963693 *
235760    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.52781659896891 * AcceptedCmp10 + 0.42920365778433 * 
AcceptedCmp20 + 1.17620912558163 * AcceptedCmp30 + 0.60548467992927 * AcceptedCmp40 + 
0.94474163621099 * AcceptedCmp50 + -0.78069672963693 * Complain0 ;
235761    +   H1x1_5  = H1x1_5  +    -0.57412668124255 * AcceptedCmp10
235762    +          +    -0.47940329920743 * AcceptedCmp20  +    -0.32110813917426 *
235763    +        AcceptedCmp30  +    -0.61486082641451 * AcceptedCmp40
235764    +          +    -0.69974277642424 * AcceptedCmp50  +     0.11676881614828 *
235765    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.57412668124255 * AcceptedCmp10 + -0.47940329920743 
* AcceptedCmp20 + -0.32110813917426 * AcceptedCmp30 + -0.61486082641451 * AcceptedCmp40 + 
-0.69974277642424 * AcceptedCmp50 + 0.11676881614828 * Complain0 ;
235766    +   H1x1_6  = H1x1_6  +    -0.84071985342593 * AcceptedCmp10
235767    +          +    -0.93448636634819 * AcceptedCmp20  +    -1.08375331325128 *
235768    +        AcceptedCmp30  +    -1.17713256753961 * AcceptedCmp40
235769    +          +    -1.19701619371219 * AcceptedCmp50  +     0.43593081503911 *
235770    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.84071985342593 * AcceptedCmp10 + -0.93448636634819 
* AcceptedCmp20 + -1.08375331325128 * AcceptedCmp30 + -1.17713256753961 * AcceptedCmp40 + 
-1.19701619371219 * AcceptedCmp50 + 0.43593081503911 * Complain0 ;
235771    +   H1x1_1  = H1x1_1  +     0.16696814950674 * Education2n_Cycle
235772    +          +    -0.44548398836024 * EducationBasic  +    -0.13816962229813 *
235773    +        EducationGraduation  +     0.15082660839612 * EducationMaster
235774    +          +    -0.86711066227375 * Marital_StatusDivorced
235775    +          +     0.40837974583757 * Marital_StatusMarried
235776    +          +    -0.36026722115525 * Marital_StatusSingle
235777    +          +     0.79004200065113 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.16696814950674 * Education2n_Cycle + 
-0.44548398836024 * EducationBasic + -0.13816962229813 * EducationGraduation + 
0.15082660839612 * EducationMaster + -0.86711066227375 * Marital_StatusDivorced + 
0.40837974583757 * Marital_StatusMarried + -0.36026722115525 * Marital_StatusSingle + 
0.79004200065113 * Marital_StatusTogether ;
235778    +   H1x1_2  = H1x1_2  +     0.16842509296504 * Education2n_Cycle
235779    +          +    -0.37448080566378 * EducationBasic  +     0.48861368388392 *
235780    +        EducationGraduation  +    -0.52159546239433 * EducationMaster
235781    +          +     0.32215787204894 * Marital_StatusDivorced
235782    +          +    -0.56445035445224 * Marital_StatusMarried
235783    +          +    -0.19089062631475 * Marital_StatusSingle
235784    +          +    -0.05879603306331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.16842509296504 * Education2n_Cycle + 
-0.37448080566378 * EducationBasic + 0.48861368388392 * EducationGraduation + 
-0.52159546239433 * EducationMaster + 0.32215787204894 * Marital_StatusDivorced + 
-0.56445035445224 * Marital_StatusMarried + -0.19089062631475 * Marital_StatusSingle + 
-0.05879603306331 * Marital_StatusTogether ;
235785    +   H1x1_3  = H1x1_3  +    -0.60123226656743 * Education2n_Cycle
235786    +          +     0.60422871475083 * EducationBasic  +     1.03135359524948 *
235787    +        EducationGraduation  +     0.08569631133746 * EducationMaster
235788    +          +      0.0333599428728 * Marital_StatusDivorced
235789    +          +      0.2536992094527 * Marital_StatusMarried
235790    +          +     0.28814962122223 * Marital_StatusSingle
235791    +          +    -0.07291720333163 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.60123226656743 * Education2n_Cycle + 
0.60422871475083 * EducationBasic + 1.03135359524948 * EducationGraduation + 0.08569631133746 
* EducationMaster + 0.0333599428728 * Marital_StatusDivorced + 0.2536992094527 * 
Marital_StatusMarried + 0.28814962122223 * Marital_StatusSingle + -0.07291720333163 * 
Marital_StatusTogether ;
235792    +   H1x1_4  = H1x1_4  +    -0.31817779304591 * Education2n_Cycle
235793    +          +     0.41715850822951 * EducationBasic  +    -1.42142934931707 *
235794    +        EducationGraduation  +     0.67447448653035 * EducationMaster
235795    +          +    -0.47992692297474 * Marital_StatusDivorced
235796    +          +     1.37810632485566 * Marital_StatusMarried
235797    +          +    -1.37561982457408 * Marital_StatusSingle
235798    +          +     1.44711275454438 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.31817779304591 * Education2n_Cycle + 
0.41715850822951 * EducationBasic + -1.42142934931707 * EducationGraduation + 0.67447448653035 
* EducationMaster + -0.47992692297474 * Marital_StatusDivorced + 1.37810632485566 * 
Marital_StatusMarried + -1.37561982457408 * Marital_StatusSingle + 1.44711275454438 * 
Marital_StatusTogether ;
235799    +   H1x1_5  = H1x1_5  +     0.09777346458802 * Education2n_Cycle
235800    +          +    -0.45960393039978 * EducationBasic  +     0.51146196412307 *
235801    +        EducationGraduation  +    -0.24819773072524 * EducationMaster
235802    +          +     0.19162417091995 * Marital_StatusDivorced
235803    +          +    -0.36068364824761 * Marital_StatusMarried
235804    +          +    -0.12710669526743 * Marital_StatusSingle
235805    +          +    -0.01019314244777 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.09777346458802 * Education2n_Cycle + 
-0.45960393039978 * EducationBasic + 0.51146196412307 * EducationGraduation + 
-0.24819773072524 * EducationMaster + 0.19162417091995 * Marital_StatusDivorced + 
-0.36068364824761 * Marital_StatusMarried + -0.12710669526743 * Marital_StatusSingle + 
-0.01019314244777 * Marital_StatusTogether ;
235806    +   H1x1_6  = H1x1_6  +     0.36097201590287 * Education2n_Cycle
235807    +          +     0.58682328743356 * EducationBasic  +    -0.70502301542305 *
235808    +        EducationGraduation  +    -0.64274217783062 * EducationMaster
235809    +          +     0.23760271729717 * Marital_StatusDivorced
235810    +          +    -1.21454188572959 * Marital_StatusMarried
235811    +          +     1.24284947007232 * Marital_StatusSingle
235812    +          +    -1.39754167839201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.36097201590287 * Education2n_Cycle + 
0.58682328743356 * EducationBasic + -0.70502301542305 * EducationGraduation + 
-0.64274217783062 * EducationMaster + 0.23760271729717 * Marital_StatusDivorced + 
-1.21454188572959 * Marital_StatusMarried + 1.24284947007232 * Marital_StatusSingle + 
-1.39754167839201 * Marital_StatusTogether ;
235813    +   H1x1_1  =    -0.37160255114665 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.37160255114665 + H1x1_1 ;
235814    +   H1x1_2  =    -0.79024897923326 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.79024897923326 + H1x1_2 ;
235815    +   H1x1_3  =    -1.07478535022413 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.07478535022413 + H1x1_3 ;
235816    +   H1x1_4  =    -0.83827859036654 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.83827859036654 + H1x1_4 ;
235817    +   H1x1_5  =      1.0917082111499 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0917082111499 + H1x1_5 ;
235818    +   H1x1_6  =     1.09202728340056 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.09202728340056 + H1x1_6 ;
235819    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
235820    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
235821    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
235822    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
235823    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
235824    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
235825    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
235826    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
235827    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
235828    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
235829    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
235830    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
235831    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
235832    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
235833    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
235834    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
235835    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
235836    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
235837    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
235838    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
235839    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
235840    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
235841    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
235842    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
235843    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
235844    +END;
MPRINT(EM_DIAGRAM):   END;
235845    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
235846    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
235847    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
235848    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
235849    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
235850    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
235851    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
235852    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
235853    +END;
MPRINT(EM_DIAGRAM):   END;
235854    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235855    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
235856    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235857    +
235858    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
235859    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
235860    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
235861    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
235862    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
235863    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
235864    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
235865    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
235866    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
235867    +end;
MPRINT(EM_DIAGRAM):   end;
235868    +else do;
MPRINT(EM_DIAGRAM):   else do;
235869    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
235870    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
235871    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
235872    +   end;
MPRINT(EM_DIAGRAM):   end;
235873    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
235874    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
235875    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
235876    +   end;
MPRINT(EM_DIAGRAM):   end;
235877    +   else do;
MPRINT(EM_DIAGRAM):   else do;
235878    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
235879    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
235880    +   end;
MPRINT(EM_DIAGRAM):   end;
235881    +end;
MPRINT(EM_DIAGRAM):   end;
235882    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
235883    +   P_DepVar1  =    -9.47780447141489 * H1x1_1  +    -8.06096671462069 * H1x1_2
235884    +          +    -4.21167567173811 * H1x1_3  +     -37.599240879379 * H1x1_4
235885    +          +     25.0531533838083 * H1x1_5  +     29.1428275636369 * H1x1_6
235886    +          +     4.90157629063847 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.47780447141489 * H1x1_1 + -8.06096671462069 * H1x1_2 + 
-4.21167567173811 * H1x1_3 + -37.599240879379 * H1x1_4 + 25.0531533838083 * H1x1_5 + 
29.1428275636369 * H1x1_6 + 4.90157629063847 * H1x1_7 ;
235887    +   P_DepVar1  =    -1.97718258496285 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.97718258496285 + P_DepVar1 ;
235888    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
235889    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
235890    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
235891    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
235892    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
235893    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
235894    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
235895    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
235896    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
235897    +END;
MPRINT(EM_DIAGRAM):   END;
235898    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
235899    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
235900    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
235901    +END;
MPRINT(EM_DIAGRAM):   END;
235902    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
235903    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
235904    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
235905    +END;
MPRINT(EM_DIAGRAM):   END;
235906    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
235907    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
235908    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
235909    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
235910    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
235911    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
235912    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
235913    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235914    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
235915    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235916    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
235917    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
235918    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
235919    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
235920    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
235921    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
235922    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
235923    +END;
MPRINT(EM_DIAGRAM):   END;
235924    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
235925    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
235926    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
235927    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
235928    +* Renaming variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural43;
235929    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235930    +* Renaming Posterior variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural43;
235931    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235932    +drop AutoNeural43_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar1;
235933    +AutoNeural43_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar1 = P_DepVar1;
235934    +drop AutoNeural43_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar0;
235935    +AutoNeural43_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar0 = P_DepVar0;
235936    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235937    +* Renaming _WARN_ variable for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural43;
235938    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235939    +length AutoNeural43_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural43_WARN_ $4;
235940    +drop AutoNeural43_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_WARN_;
235941    +AutoNeural43_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural43_WARN_ = _WARN_;
235942    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235943    +* Ensmbl57: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 3 of 7;
235944    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235945    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235946    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
235947    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
235948    +* NODE: AutoNeural42;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural42;
235949    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235950    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
235951    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
235952    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
235953    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
235954    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
235955    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
235956    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
235957    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
235958    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
235959    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
235960    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
235961    +LENGTH _WARN_ $4
235962    +      F_DepVar  $ 12
235963    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
235964    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
235965    +
235966    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
235967    +
235968    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
235969    +
235970    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
235971    +
235972    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
235973    +
235974    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
235975    +
235976    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
235977    +
235978    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
235979    +
235980    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
235981    +
235982    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
235983    +
235984    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
235985    +
235986    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
235987    +
235988    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
235989    +
235990    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
235991    +
235992    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
235993    +
235994    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
235995    +
235996    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
235997    +
235998    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
235999    +
236000    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
236001    +
236002    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
236003    +
236004    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
236005    +
236006    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
236007    +
236008    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
236009    +
236010    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
236011    +
236012    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
236013    +
236014    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
236015    +
236016    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
236017    +
236018    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
236019    +
236020    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
236021    +
236022    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
236023    +
236024    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
236025    +
236026    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
236027    +
236028    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
236029    +
236030    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
236031    +
236032    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
236033    +
236034    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
236035    +
236036    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
236037    +
236038    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
236039    +
236040    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
236041    +
236042    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
236043    +
236044    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
236045    +
236046    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
236047    +
236048    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
236049    +
236050    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
236051    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
236052    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
236053    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
236054    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
236055    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236056    +end;
MPRINT(EM_DIAGRAM):   end;
236057    +else do;
MPRINT(EM_DIAGRAM):   else do;
236058    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
236059    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
236060    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
236061    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
236062    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
236063    +   end;
MPRINT(EM_DIAGRAM):   end;
236064    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
236065    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
236066    +   end;
MPRINT(EM_DIAGRAM):   end;
236067    +   else do;
MPRINT(EM_DIAGRAM):   else do;
236068    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
236069    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
236070    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236071    +   end;
MPRINT(EM_DIAGRAM):   end;
236072    +end;
MPRINT(EM_DIAGRAM):   end;
236073    +
236074    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
236075    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
236076    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
236077    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
236078    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
236079    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236080    +end;
MPRINT(EM_DIAGRAM):   end;
236081    +else do;
MPRINT(EM_DIAGRAM):   else do;
236082    +   length _dm12 $ 12; drop _dm12 ;
The SAS System

MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
236083    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
236084    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
236085    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
236086    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
236087    +   end;
MPRINT(EM_DIAGRAM):   end;
236088    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
236089    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
236090    +   end;
MPRINT(EM_DIAGRAM):   end;
236091    +   else do;
MPRINT(EM_DIAGRAM):   else do;
236092    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
236093    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
236094    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236095    +   end;
MPRINT(EM_DIAGRAM):   end;
236096    +end;
MPRINT(EM_DIAGRAM):   end;
236097    +
236098    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
236099    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
236100    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
236101    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
236102    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
236103    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236104    +end;
MPRINT(EM_DIAGRAM):   end;
236105    +else do;
MPRINT(EM_DIAGRAM):   else do;
236106    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
236107    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
236108    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
236109    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
236110    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
236111    +   end;
MPRINT(EM_DIAGRAM):   end;
236112    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
236113    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
236114    +   end;
MPRINT(EM_DIAGRAM):   end;
236115    +   else do;
MPRINT(EM_DIAGRAM):   else do;
236116    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
236117    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
236118    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236119    +   end;
MPRINT(EM_DIAGRAM):   end;
236120    +end;
MPRINT(EM_DIAGRAM):   end;
236121    +
236122    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
236123    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
236124    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
236125    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
236126    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
236127    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236128    +end;
MPRINT(EM_DIAGRAM):   end;
236129    +else do;
MPRINT(EM_DIAGRAM):   else do;
236130    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
236131    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
236132    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
236133    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
236134    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
236135    +   end;
MPRINT(EM_DIAGRAM):   end;
236136    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
236137    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
236138    +   end;
MPRINT(EM_DIAGRAM):   end;
236139    +   else do;
MPRINT(EM_DIAGRAM):   else do;
236140    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
236141    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
236142    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236143    +   end;
MPRINT(EM_DIAGRAM):   end;
236144    +end;
MPRINT(EM_DIAGRAM):   end;
236145    +
236146    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
236147    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
236148    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
236149    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
236150    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
236151    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236152    +end;
MPRINT(EM_DIAGRAM):   end;
236153    +else do;
MPRINT(EM_DIAGRAM):   else do;
236154    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
236155    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
236156    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
236157    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
236158    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
236159    +   end;
MPRINT(EM_DIAGRAM):   end;
236160    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
236161    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
236162    +   end;
MPRINT(EM_DIAGRAM):   end;
236163    +   else do;
MPRINT(EM_DIAGRAM):   else do;
236164    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
236165    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
236166    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236167    +   end;
MPRINT(EM_DIAGRAM):   end;
236168    +end;
MPRINT(EM_DIAGRAM):   end;
236169    +
236170    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
236171    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
236172    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
236173    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
236174    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
236175    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236176    +end;
MPRINT(EM_DIAGRAM):   end;
236177    +else do;
MPRINT(EM_DIAGRAM):   else do;
236178    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
236179    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
236180    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
236181    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
236182    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
236183    +   end;
MPRINT(EM_DIAGRAM):   end;
236184    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
236185    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
236186    +   end;
MPRINT(EM_DIAGRAM):   end;
236187    +   else do;
MPRINT(EM_DIAGRAM):   else do;
236188    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
236189    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
236190    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236191    +   end;
MPRINT(EM_DIAGRAM):   end;
236192    +end;
MPRINT(EM_DIAGRAM):   end;
236193    +
236194    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
236195    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
236196    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
236197    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
236198    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
236199    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
236200    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
236201    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
236202    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
236203    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
236204    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
236205    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
236206    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
236207    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236208    +end;
MPRINT(EM_DIAGRAM):   end;
236209    +else do;
MPRINT(EM_DIAGRAM):   else do;
236210    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
236211    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
236212    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
236213    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
236214    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
236215    +   end;
MPRINT(EM_DIAGRAM):   end;
236216    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
236217    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
236218    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
236219    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
236220    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
236221    +   end;
MPRINT(EM_DIAGRAM):   end;
236222    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
236223    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
236224    +   end;
MPRINT(EM_DIAGRAM):   end;
236225    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
236226    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
236227    +   end;
MPRINT(EM_DIAGRAM):   end;
236228    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
236229    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
236230    +   end;
MPRINT(EM_DIAGRAM):   end;
236231    +   else do;
MPRINT(EM_DIAGRAM):   else do;
236232    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
236233    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
236234    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
236235    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
236236    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
236237    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236238    +   end;
MPRINT(EM_DIAGRAM):   end;
236239    +end;
MPRINT(EM_DIAGRAM):   end;
236240    +
236241    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
236242    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
236243    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
236244    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
236245    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
236246    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
236247    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
236248    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
236249    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
236250    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
236251    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
236252    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
236253    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
236254    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
236255    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236256    +end;
MPRINT(EM_DIAGRAM):   end;
236257    +else do;
MPRINT(EM_DIAGRAM):   else do;
236258    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
236259    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
236260    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
236261    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
236262    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
236263    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
236264    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
236265    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
236266    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
236267    +         end;
MPRINT(EM_DIAGRAM):   end;
236268    +         else do;
MPRINT(EM_DIAGRAM):   else do;
236269    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
236270    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
236271    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
236272    +            end;
MPRINT(EM_DIAGRAM):   end;
236273    +         end;
MPRINT(EM_DIAGRAM):   end;
236274    +      end;
MPRINT(EM_DIAGRAM):   end;
236275    +      else do;
MPRINT(EM_DIAGRAM):   else do;
236276    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
236277    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
236278    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
236279    +         end;
MPRINT(EM_DIAGRAM):   end;
236280    +      end;
MPRINT(EM_DIAGRAM):   end;
236281    +   end;
MPRINT(EM_DIAGRAM):   end;
236282    +   else do;
MPRINT(EM_DIAGRAM):   else do;
236283    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
236284    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
236285    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
236286    +      end;
MPRINT(EM_DIAGRAM):   end;
236287    +      else do;
MPRINT(EM_DIAGRAM):   else do;
236288    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
236289    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
236290    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
236291    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
236292    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
236293    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
236294    +         end;
MPRINT(EM_DIAGRAM):   end;
236295    +      end;
MPRINT(EM_DIAGRAM):   end;
236296    +   end;
MPRINT(EM_DIAGRAM):   end;
236297    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
236298    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
236299    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
236300    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
236301    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
236302    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
236303    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236304    +   end;
MPRINT(EM_DIAGRAM):   end;
236305    +end;
MPRINT(EM_DIAGRAM):   end;
236306    +
236307    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236308    +*** Checking missing input Interval
236309    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
236310    +
236311    +IF NMISS(
236312    +   Income ,
236313    +   Kidhome ,
236314    +   MntFishProducts ,
236315    +   MntFruits ,
236316    +   MntGoldProds ,
236317    +   MntMeatProducts ,
236318    +   MntSweetProducts ,
236319    +   MntWines ,
236320    +   NumCatalogPurchases ,
236321    +   NumDealsPurchases ,
236322    +   NumStorePurchases ,
236323    +   NumWebPurchases ,
236324    +   NumWebVisitsMonth ,
236325    +   Recency ,
236326    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
236327    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
236328    +
236329    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236330    +END;
MPRINT(EM_DIAGRAM):   END;
236331    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236332    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
236333    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236334    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
236335    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
236336    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
236337    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
236338    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
236339    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
236340    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
236341    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
236342    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
236343    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
236344    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
236345    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
236346    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
236347    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
236348    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
236349    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
236350    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
236351    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
236352    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
236353    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
236354    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
236355    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
236356    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
236357    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
236358    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
236359    +END;
MPRINT(EM_DIAGRAM):   END;
236360    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
236361    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
236362    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
236363    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
236364    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
236365    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
236366    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
236367    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
236368    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
236369    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
236370    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
236371    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
236372    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
236373    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
236374    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
236375    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
236376    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
236377    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
236378    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
236379    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
236380    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
236381    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
236382    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
236383    +   ELSE S_NumCatalogPurchases
236384    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
236385    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
236386    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
236387    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
236388    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
236389    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
236390    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
236391    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
236392    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
236393    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
236394    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
236395    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
236396    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
236397    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
236398    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
236399    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
236400    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
236401    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
236402    +END;
MPRINT(EM_DIAGRAM):   END;
236403    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236404    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
236405    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236406    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236407    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
236408    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236409    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236410    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
236411    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236412    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
236413    +   H1x1_1  =    -0.61752831165943 * S_Income  +    -0.31903138173339 *
236414    +        S_Kidhome  +     1.07644564135555 * S_MntFishProducts
236415    +          +     0.65454839379318 * S_MntFruits  +    -0.14959507038031 *
236416    +        S_MntGoldProds  +    -5.93493457217182 * S_MntMeatProducts
236417    +          +     0.13203247258141 * S_MntSweetProducts
236418    +          +     2.56195281130506 * S_MntWines  +    -1.36884424558249 *
236419    +        S_NumCatalogPurchases  +    -0.86876556455629 * S_NumDealsPurchases
236420    +          +     1.48881174203434 * S_NumStorePurchases
236421    +          +     2.06403591844726 * S_NumWebPurchases
236422    +          +    -0.09535558759694 * S_NumWebVisitsMonth
236423    +          +    -0.05978552253526 * S_Recency  +     0.15007435747359 *
236424    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.61752831165943 * S_Income + -0.31903138173339 * S_Kidhome + 
1.07644564135555 * S_MntFishProducts + 0.65454839379318 * S_MntFruits + -0.14959507038031 * 
S_MntGoldProds + -5.93493457217182 * S_MntMeatProducts + 0.13203247258141 * S_MntSweetProducts 
+ 2.56195281130506 * S_MntWines + -1.36884424558249 * S_NumCatalogPurchases + 
-0.86876556455629 * S_NumDealsPurchases + 1.48881174203434 * S_NumStorePurchases + 
2.06403591844726 * S_NumWebPurchases + -0.09535558759694 * S_NumWebVisitsMonth + 
-0.05978552253526 * S_Recency + 0.15007435747359 * S_Teenhome ;
236425    +   H1x1_2  =     0.26608479656795 * S_Income  +    -1.19991366958494 *
236426    +        S_Kidhome  +    -0.06930701896636 * S_MntFishProducts
236427    +          +    -0.24491476793503 * S_MntFruits  +     0.61341878614078 *
236428    +        S_MntGoldProds  +     1.20573081926043 * S_MntMeatProducts
236429    +          +      0.3852767951223 * S_MntSweetProducts
236430    +          +     1.08228250264945 * S_MntWines  +     0.60642303652873 *
236431    +        S_NumCatalogPurchases  +     0.15318179926318 * S_NumDealsPurchases
236432    +          +     0.87686526091024 * S_NumStorePurchases
236433    +          +     0.48807967312664 * S_NumWebPurchases
236434    +          +     2.42770807785792 * S_NumWebVisitsMonth
236435    +          +      -2.239057176324 * S_Recency  +    -0.38694456406673 *
236436    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26608479656795 * S_Income + -1.19991366958494 * S_Kidhome + 
-0.06930701896636 * S_MntFishProducts + -0.24491476793503 * S_MntFruits + 0.61341878614078 * 
S_MntGoldProds + 1.20573081926043 * S_MntMeatProducts + 0.3852767951223 * S_MntSweetProducts + 
1.08228250264945 * S_MntWines + 0.60642303652873 * S_NumCatalogPurchases + 0.15318179926318 * 
S_NumDealsPurchases + 0.87686526091024 * S_NumStorePurchases + 0.48807967312664 * 
S_NumWebPurchases + 2.42770807785792 * S_NumWebVisitsMonth + -2.239057176324 * S_Recency + 
-0.38694456406673 * S_Teenhome ;
236437    +   H1x1_3  =     2.14026785899485 * S_Income  +     0.71085813088393 *
236438    +        S_Kidhome  +    -0.12119457643873 * S_MntFishProducts
236439    +          +     0.52522197349122 * S_MntFruits  +     0.44706934196977 *
236440    +        S_MntGoldProds  +     1.26484530402043 * S_MntMeatProducts
236441    +          +      0.4461192743946 * S_MntSweetProducts
236442    +          +     0.68849791421776 * S_MntWines  +     0.73332275156447 *
236443    +        S_NumCatalogPurchases  +     0.25950906585502 * S_NumDealsPurchases
236444    +          +     1.26831094932108 * S_NumStorePurchases
236445    +          +     0.50819627174451 * S_NumWebPurchases
236446    +          +      0.5463426309003 * S_NumWebVisitsMonth
236447    +          +    -1.45156203280121 * S_Recency  +    -0.99155600458731 *
236448    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.14026785899485 * S_Income + 0.71085813088393 * S_Kidhome + 
-0.12119457643873 * S_MntFishProducts + 0.52522197349122 * S_MntFruits + 0.44706934196977 * 
S_MntGoldProds + 1.26484530402043 * S_MntMeatProducts + 0.4461192743946 * S_MntSweetProducts + 
0.68849791421776 * S_MntWines + 0.73332275156447 * S_NumCatalogPurchases + 0.25950906585502 * 
S_NumDealsPurchases + 1.26831094932108 * S_NumStorePurchases + 0.50819627174451 * 
S_NumWebPurchases + 0.5463426309003 * S_NumWebVisitsMonth + -1.45156203280121 * S_Recency + 
-0.99155600458731 * S_Teenhome ;
236449    +   H1x1_4  =     0.28134858392415 * S_Income  +     1.57838616473011 *
236450    +        S_Kidhome  +     0.01685933792865 * S_MntFishProducts
236451    +          +     0.64818795957189 * S_MntFruits  +     0.44053765721056 *
236452    +        S_MntGoldProds  +     -0.0350414210023 * S_MntMeatProducts
236453    +          +     0.73630834236265 * S_MntSweetProducts
236454    +          +     2.20164313777354 * S_MntWines  +    -0.71244138939707 *
236455    +        S_NumCatalogPurchases  +    -0.05218003711946 * S_NumDealsPurchases
236456    +          +     2.08815797619397 * S_NumStorePurchases
236457    +          +     1.47250122683369 * S_NumWebPurchases
236458    +          +    -1.95745344341946 * S_NumWebVisitsMonth
236459    +          +     1.52461902721397 * S_Recency  +     0.07114080397665 *
236460    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.28134858392415 * S_Income + 1.57838616473011 * S_Kidhome + 
0.01685933792865 * S_MntFishProducts + 0.64818795957189 * S_MntFruits + 0.44053765721056 * 
S_MntGoldProds + -0.0350414210023 * S_MntMeatProducts + 0.73630834236265 * S_MntSweetProducts 
+ 2.20164313777354 * S_MntWines + -0.71244138939707 * S_NumCatalogPurchases + 
-0.05218003711946 * S_NumDealsPurchases + 2.08815797619397 * S_NumStorePurchases + 
1.47250122683369 * S_NumWebPurchases + -1.95745344341946 * S_NumWebVisitsMonth + 
1.52461902721397 * S_Recency + 0.07114080397665 * S_Teenhome ;
236461    +   H1x1_5  =     0.06299419029838 * S_Income  +    -0.25263043424438 *
236462    +        S_Kidhome  +    -0.72407836360298 * S_MntFishProducts
236463    +          +     0.46240377706589 * S_MntFruits  +    -0.31168917499552 *
236464    +        S_MntGoldProds  +     3.17795585534164 * S_MntMeatProducts
236465    +          +    -0.23438993753342 * S_MntSweetProducts
236466    +          +     -2.0392497753494 * S_MntWines  +      1.0094456692298 *
236467    +        S_NumCatalogPurchases  +     1.21992922429388 * S_NumDealsPurchases
236468    +          +    -0.49697408067153 * S_NumStorePurchases
236469    +          +     0.41091736049576 * S_NumWebPurchases
236470    +          +     1.61180593172142 * S_NumWebVisitsMonth
236471    +          +    -2.15417652342106 * S_Recency  +    -0.30863432234672 *
236472    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.06299419029838 * S_Income + -0.25263043424438 * S_Kidhome + 
-0.72407836360298 * S_MntFishProducts + 0.46240377706589 * S_MntFruits + -0.31168917499552 * 
S_MntGoldProds + 3.17795585534164 * S_MntMeatProducts + -0.23438993753342 * S_MntSweetProducts 
+ -2.0392497753494 * S_MntWines + 1.0094456692298 * S_NumCatalogPurchases + 1.21992922429388 * 
S_NumDealsPurchases + -0.49697408067153 * S_NumStorePurchases + 0.41091736049576 * 
S_NumWebPurchases + 1.61180593172142 * S_NumWebVisitsMonth + -2.15417652342106 * S_Recency + 
-0.30863432234672 * S_Teenhome ;
236473    +   H1x1_1  = H1x1_1  +     1.15191639869453 * AcceptedCmp10
236474    +          +      0.0367982148477 * AcceptedCmp20  +      0.3258650789605 *
236475    +        AcceptedCmp30  +      0.2580514232707 * AcceptedCmp40
236476    +          +     0.63958723501202 * AcceptedCmp50  +    -0.32640656229888 *
236477    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.15191639869453 * AcceptedCmp10 + 0.0367982148477 * 
AcceptedCmp20 + 0.3258650789605 * AcceptedCmp30 + 0.2580514232707 * AcceptedCmp40 + 
0.63958723501202 * AcceptedCmp50 + -0.32640656229888 * Complain0 ;
236478    +   H1x1_2  = H1x1_2  +    -1.74950558446111 * AcceptedCmp10
236479    +          +    -0.90356166498734 * AcceptedCmp20  +    -1.23130580993933 *
236480    +        AcceptedCmp30  +     -1.4169795699816 * AcceptedCmp40
236481    +          +    -1.78889837976364 * AcceptedCmp50  +      1.4788954382262 *
236482    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.74950558446111 * AcceptedCmp10 + -0.90356166498734 
* AcceptedCmp20 + -1.23130580993933 * AcceptedCmp30 + -1.4169795699816 * AcceptedCmp40 + 
-1.78889837976364 * AcceptedCmp50 + 1.4788954382262 * Complain0 ;
236483    +   H1x1_3  = H1x1_3  +     0.19640584758608 * AcceptedCmp10
236484    +          +    -0.02812292141076 * AcceptedCmp20  +     0.18411950002405 *
236485    +        AcceptedCmp30  +     0.14654389018041 * AcceptedCmp40
236486    +          +    -0.73289230090736 * AcceptedCmp50  +    -0.18955862978745 *
236487    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.19640584758608 * AcceptedCmp10 + -0.02812292141076 * 
AcceptedCmp20 + 0.18411950002405 * AcceptedCmp30 + 0.14654389018041 * AcceptedCmp40 + 
-0.73289230090736 * AcceptedCmp50 + -0.18955862978745 * Complain0 ;
236488    +   H1x1_4  = H1x1_4  +     0.60930619563149 * AcceptedCmp10
236489    +          +     0.56372104821368 * AcceptedCmp20  +     1.23124531565034 *
236490    +        AcceptedCmp30  +     1.16511385622377 * AcceptedCmp40
236491    +          +     0.83299036807857 * AcceptedCmp50  +    -0.87889366207671 *
236492    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.60930619563149 * AcceptedCmp10 + 0.56372104821368 * 
AcceptedCmp20 + 1.23124531565034 * AcceptedCmp30 + 1.16511385622377 * AcceptedCmp40 + 
0.83299036807857 * AcceptedCmp50 + -0.87889366207671 * Complain0 ;
236493    +   H1x1_5  = H1x1_5  +    -1.02627214772402 * AcceptedCmp10
236494    +          +    -0.35326081554996 * AcceptedCmp20  +    -0.45229632523083 *
236495    +        AcceptedCmp30  +    -0.88576020203346 * AcceptedCmp40
236496    +          +    -0.25524770878943 * AcceptedCmp50  +    -0.58775156249673 *
236497    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.02627214772402 * AcceptedCmp10 + -0.35326081554996 
* AcceptedCmp20 + -0.45229632523083 * AcceptedCmp30 + -0.88576020203346 * AcceptedCmp40 + 
-0.25524770878943 * AcceptedCmp50 + -0.58775156249673 * Complain0 ;
236498    +   H1x1_1  = H1x1_1  +    -0.20048115002767 * Education2n_Cycle
236499    +          +     0.10477823552379 * EducationBasic  +    -0.09122776507376 *
236500    +        EducationGraduation  +    -0.01483389086199 * EducationMaster
236501    +          +    -0.14951932081311 * Marital_StatusDivorced
236502    +          +     0.08343648358981 * Marital_StatusMarried
236503    +          +    -0.52143432598374 * Marital_StatusSingle
236504    +          +    -0.17799942229122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.20048115002767 * Education2n_Cycle + 
0.10477823552379 * EducationBasic + -0.09122776507376 * EducationGraduation + 
-0.01483389086199 * EducationMaster + -0.14951932081311 * Marital_StatusDivorced + 
0.08343648358981 * Marital_StatusMarried + -0.52143432598374 * Marital_StatusSingle + 
-0.17799942229122 * Marital_StatusTogether ;
236505    +   H1x1_2  = H1x1_2  +    -0.06492224317117 * Education2n_Cycle
236506    +          +     0.50630082280639 * EducationBasic  +    -0.32521089553297 *
236507    +        EducationGraduation  +    -0.38968023972702 * EducationMaster
236508    +          +    -0.34495973695408 * Marital_StatusDivorced
236509    +          +    -0.30910829853532 * Marital_StatusMarried
236510    +          +     0.14431404541055 * Marital_StatusSingle
236511    +          +    -0.62673029935295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.06492224317117 * Education2n_Cycle + 
0.50630082280639 * EducationBasic + -0.32521089553297 * EducationGraduation + 
-0.38968023972702 * EducationMaster + -0.34495973695408 * Marital_StatusDivorced + 
-0.30910829853532 * Marital_StatusMarried + 0.14431404541055 * Marital_StatusSingle + 
-0.62673029935295 * Marital_StatusTogether ;
236512    +   H1x1_3  = H1x1_3  +     0.41266521248037 * Education2n_Cycle
236513    +          +    -0.11192325989817 * EducationBasic  +    -0.96742524784448 *
236514    +        EducationGraduation  +     0.05582780345024 * EducationMaster
236515    +          +     0.81191732290197 * Marital_StatusDivorced
236516    +          +    -2.53108753227171 * Marital_StatusMarried
236517    +          +     2.21769123178832 * Marital_StatusSingle
236518    +          +    -0.90613443546426 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.41266521248037 * Education2n_Cycle + 
-0.11192325989817 * EducationBasic + -0.96742524784448 * EducationGraduation + 
0.05582780345024 * EducationMaster + 0.81191732290197 * Marital_StatusDivorced + 
-2.53108753227171 * Marital_StatusMarried + 2.21769123178832 * Marital_StatusSingle + 
-0.90613443546426 * Marital_StatusTogether ;
236519    +   H1x1_4  = H1x1_4  +    -0.08882031994616 * Education2n_Cycle
236520    +          +     0.59640481500702 * EducationBasic  +    -0.75285942189639 *
236521    +        EducationGraduation  +     0.52527957409681 * EducationMaster
236522    +          +    -1.26246836163545 * Marital_StatusDivorced
236523    +          +     0.73147045162506 * Marital_StatusMarried
236524    +          +     0.04252836823306 * Marital_StatusSingle
236525    +          +     1.44915119635375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.08882031994616 * Education2n_Cycle + 
0.59640481500702 * EducationBasic + -0.75285942189639 * EducationGraduation + 0.52527957409681 
* EducationMaster + -1.26246836163545 * Marital_StatusDivorced + 0.73147045162506 * 
Marital_StatusMarried + 0.04252836823306 * Marital_StatusSingle + 1.44915119635375 * 
Marital_StatusTogether ;
236526    +   H1x1_5  = H1x1_5  +    -0.24370046099656 * Education2n_Cycle
236527    +          +     0.03233873053213 * EducationBasic  +      0.1375198926931 *
236528    +        EducationGraduation  +      0.0979905405754 * EducationMaster
236529    +          +    -0.25571808514992 * Marital_StatusDivorced
236530    +          +     0.20684027342845 * Marital_StatusMarried
236531    +          +    -0.36983627747986 * Marital_StatusSingle
236532    +          +    -0.08239173696723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24370046099656 * Education2n_Cycle + 
0.03233873053213 * EducationBasic + 0.1375198926931 * EducationGraduation + 0.0979905405754 * 
EducationMaster + -0.25571808514992 * Marital_StatusDivorced + 0.20684027342845 * 
Marital_StatusMarried + -0.36983627747986 * Marital_StatusSingle + -0.08239173696723 * 
Marital_StatusTogether ;
236533    +   H1x1_1  =    -0.01788649837565 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.01788649837565 + H1x1_1 ;
236534    +   H1x1_2  =     1.77562113267961 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.77562113267961 + H1x1_2 ;
236535    +   H1x1_3  =    -1.36483909507433 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.36483909507433 + H1x1_3 ;
236536    +   H1x1_4  =    -0.17103473926556 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.17103473926556 + H1x1_4 ;
236537    +   H1x1_5  =     0.17065963901812 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.17065963901812 + H1x1_5 ;
236538    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
236539    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
236540    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
236541    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
236542    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
236543    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
236544    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
236545    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
236546    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
236547    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
236548    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
236549    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
236550    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
236551    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
236552    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
236553    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
236554    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
236555    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
236556    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
236557    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
236558    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
236559    +END;
MPRINT(EM_DIAGRAM):   END;
236560    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
236561    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
236562    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
236563    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
236564    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
236565    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
236566    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
236567    +END;
MPRINT(EM_DIAGRAM):   END;
236568    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236569    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
236570    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236571    +
236572    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
236573    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
236574    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
236575    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
236576    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
236577    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
236578    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
236579    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
236580    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
236581    +end;
MPRINT(EM_DIAGRAM):   end;
236582    +else do;
MPRINT(EM_DIAGRAM):   else do;
236583    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
236584    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
236585    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
236586    +   end;
MPRINT(EM_DIAGRAM):   end;
236587    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
236588    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
236589    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
236590    +   end;
MPRINT(EM_DIAGRAM):   end;
236591    +   else do;
MPRINT(EM_DIAGRAM):   else do;
236592    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
236593    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
236594    +   end;
MPRINT(EM_DIAGRAM):   end;
236595    +end;
MPRINT(EM_DIAGRAM):   end;
236596    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
236597    +   P_DepVar1  =    -12.4855028874976 * H1x1_1  +     8.50519000347347 * H1x1_2
236598    +          +     3.84994997572101 * H1x1_3  +    -12.5610415895663 * H1x1_4
236599    +          +     17.4993211655408 * H1x1_5  +     0.14986282100716 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.4855028874976 * H1x1_1 + 8.50519000347347 * H1x1_2 + 
3.84994997572101 * H1x1_3 + -12.5610415895663 * H1x1_4 + 17.4993211655408 * H1x1_5 + 
0.14986282100716 * H1x1_6 ;
236600    +   P_DepVar1  =     3.23272740278636 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.23272740278636 + P_DepVar1 ;
236601    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
236602    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
236603    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
236604    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
236605    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
236606    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
236607    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
236608    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
236609    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
236610    +END;
MPRINT(EM_DIAGRAM):   END;
236611    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
236612    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
236613    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
236614    +END;
MPRINT(EM_DIAGRAM):   END;
236615    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
236616    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
236617    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
236618    +END;
MPRINT(EM_DIAGRAM):   END;
236619    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
236620    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
236621    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
236622    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
236623    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
236624    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
236625    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
236626    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236627    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
236628    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236629    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
236630    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
236631    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
236632    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
236633    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
236634    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
236635    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
236636    +END;
MPRINT(EM_DIAGRAM):   END;
236637    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
236638    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
236639    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
236640    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
236641    +* Renaming variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural42;
236642    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236643    +* Renaming Posterior variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural42;
236644    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236645    +drop AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar1;
236646    +AutoNeural42_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar1 = P_DepVar1;
236647    +drop AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar0;
236648    +AutoNeural42_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar0 = P_DepVar0;
236649    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236650    +* Renaming _WARN_ variable for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural42;
236651    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236652    +length AutoNeural42_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural42_WARN_ $4;
236653    +drop AutoNeural42_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_WARN_;
236654    +AutoNeural42_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural42_WARN_ = _WARN_;
236655    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236656    +* Ensmbl57: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 4 of 7;
236657    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236658    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236659    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
236660    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
236661    +* NODE: AutoNeural41;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural41;
236662    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236663    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
236664    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
236665    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
236666    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
236667    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
236668    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
236669    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
236670    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
236671    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
236672    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
236673    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
236674    +LENGTH _WARN_ $4
236675    +      F_DepVar  $ 12
236676    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
236677    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
236678    +
236679    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
236680    +
236681    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
236682    +
236683    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
236684    +
236685    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
236686    +
236687    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
236688    +
236689    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
236690    +
236691    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
236692    +
236693    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
236694    +
236695    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
236696    +
236697    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
236698    +
236699    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
236700    +
236701    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
236702    +
236703    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
236704    +
236705    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
236706    +
236707    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
236708    +
236709    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
236710    +
236711    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
236712    +
236713    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
236714    +
236715    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
236716    +
236717    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
236718    +
236719    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
236720    +
236721    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
236722    +
236723    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
236724    +
236725    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
236726    +
236727    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
236728    +
236729    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
236730    +
236731    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
236732    +
236733    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
236734    +
236735    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
236736    +
236737    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
236738    +
236739    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
236740    +
236741    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
236742    +
236743    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
236744    +
236745    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
236746    +
236747    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
236748    +
236749    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
236750    +
236751    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
236752    +
236753    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
236754    +
236755    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
236756    +
236757    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
236758    +
236759    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
236760    +
236761    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
236762    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
236763    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
236764    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
236765    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
236766    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236767    +end;
MPRINT(EM_DIAGRAM):   end;
236768    +else do;
MPRINT(EM_DIAGRAM):   else do;
236769    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
236770    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
236771    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
236772    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
236773    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
236774    +   end;
MPRINT(EM_DIAGRAM):   end;
236775    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
236776    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
236777    +   end;
MPRINT(EM_DIAGRAM):   end;
236778    +   else do;
MPRINT(EM_DIAGRAM):   else do;
236779    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
236780    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
236781    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236782    +   end;
MPRINT(EM_DIAGRAM):   end;
236783    +end;
MPRINT(EM_DIAGRAM):   end;
236784    +
236785    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
236786    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
236787    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
236788    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
236789    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
236790    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236791    +end;
MPRINT(EM_DIAGRAM):   end;
236792    +else do;
MPRINT(EM_DIAGRAM):   else do;
236793    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
236794    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
236795    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
236796    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
236797    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
236798    +   end;
MPRINT(EM_DIAGRAM):   end;
236799    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
236800    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
236801    +   end;
MPRINT(EM_DIAGRAM):   end;
236802    +   else do;
MPRINT(EM_DIAGRAM):   else do;
236803    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
236804    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
236805    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236806    +   end;
MPRINT(EM_DIAGRAM):   end;
236807    +end;
MPRINT(EM_DIAGRAM):   end;
236808    +
236809    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
236810    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
236811    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
236812    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
236813    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
236814    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236815    +end;
MPRINT(EM_DIAGRAM):   end;
236816    +else do;
MPRINT(EM_DIAGRAM):   else do;
236817    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
236818    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
236819    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
236820    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
236821    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
236822    +   end;
MPRINT(EM_DIAGRAM):   end;
236823    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
236824    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
236825    +   end;
MPRINT(EM_DIAGRAM):   end;
236826    +   else do;
MPRINT(EM_DIAGRAM):   else do;
236827    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
236828    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
236829    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236830    +   end;
MPRINT(EM_DIAGRAM):   end;
236831    +end;
MPRINT(EM_DIAGRAM):   end;
236832    +
236833    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
236834    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
236835    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
236836    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
236837    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
236838    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236839    +end;
MPRINT(EM_DIAGRAM):   end;
236840    +else do;
MPRINT(EM_DIAGRAM):   else do;
236841    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
236842    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
236843    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
236844    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
236845    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
236846    +   end;
MPRINT(EM_DIAGRAM):   end;
236847    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
236848    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
236849    +   end;
MPRINT(EM_DIAGRAM):   end;
236850    +   else do;
MPRINT(EM_DIAGRAM):   else do;
236851    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
236852    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
236853    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236854    +   end;
MPRINT(EM_DIAGRAM):   end;
236855    +end;
MPRINT(EM_DIAGRAM):   end;
236856    +
236857    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
236858    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
236859    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
236860    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
236861    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
236862    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236863    +end;
MPRINT(EM_DIAGRAM):   end;
236864    +else do;
MPRINT(EM_DIAGRAM):   else do;
236865    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
236866    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
236867    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
236868    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
236869    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
236870    +   end;
MPRINT(EM_DIAGRAM):   end;
236871    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
236872    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
236873    +   end;
MPRINT(EM_DIAGRAM):   end;
236874    +   else do;
MPRINT(EM_DIAGRAM):   else do;
236875    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
236876    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
236877    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236878    +   end;
MPRINT(EM_DIAGRAM):   end;
236879    +end;
MPRINT(EM_DIAGRAM):   end;
236880    +
236881    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
236882    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
236883    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
236884    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
236885    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
236886    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236887    +end;
MPRINT(EM_DIAGRAM):   end;
236888    +else do;
MPRINT(EM_DIAGRAM):   else do;
236889    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
236890    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
236891    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
236892    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
236893    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
236894    +   end;
MPRINT(EM_DIAGRAM):   end;
236895    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
236896    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
236897    +   end;
MPRINT(EM_DIAGRAM):   end;
236898    +   else do;
MPRINT(EM_DIAGRAM):   else do;
236899    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
236900    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
236901    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236902    +   end;
MPRINT(EM_DIAGRAM):   end;
236903    +end;
MPRINT(EM_DIAGRAM):   end;
236904    +
236905    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
236906    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
236907    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
236908    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
236909    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
236910    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
236911    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
236912    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
236913    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
236914    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
236915    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
236916    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
236917    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
236918    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236919    +end;
MPRINT(EM_DIAGRAM):   end;
236920    +else do;
MPRINT(EM_DIAGRAM):   else do;
236921    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
236922    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
236923    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
236924    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
236925    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
236926    +   end;
MPRINT(EM_DIAGRAM):   end;
236927    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
236928    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
236929    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
236930    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
236931    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
236932    +   end;
MPRINT(EM_DIAGRAM):   end;
236933    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
236934    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
236935    +   end;
MPRINT(EM_DIAGRAM):   end;
236936    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
236937    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
236938    +   end;
MPRINT(EM_DIAGRAM):   end;
236939    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
236940    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
236941    +   end;
MPRINT(EM_DIAGRAM):   end;
236942    +   else do;
MPRINT(EM_DIAGRAM):   else do;
236943    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
236944    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
236945    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
236946    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
236947    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
236948    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236949    +   end;
MPRINT(EM_DIAGRAM):   end;
236950    +end;
MPRINT(EM_DIAGRAM):   end;
236951    +
236952    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
236953    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
236954    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
236955    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
236956    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
236957    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
236958    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
236959    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
236960    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
236961    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
236962    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
236963    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
236964    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
236965    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
236966    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236967    +end;
MPRINT(EM_DIAGRAM):   end;
236968    +else do;
MPRINT(EM_DIAGRAM):   else do;
236969    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
236970    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
236971    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
236972    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
236973    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
236974    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
236975    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
236976    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
236977    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
236978    +         end;
MPRINT(EM_DIAGRAM):   end;
236979    +         else do;
MPRINT(EM_DIAGRAM):   else do;
236980    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
236981    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
236982    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
236983    +            end;
MPRINT(EM_DIAGRAM):   end;
236984    +         end;
MPRINT(EM_DIAGRAM):   end;
236985    +      end;
MPRINT(EM_DIAGRAM):   end;
236986    +      else do;
MPRINT(EM_DIAGRAM):   else do;
236987    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
236988    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
236989    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
236990    +         end;
MPRINT(EM_DIAGRAM):   end;
236991    +      end;
MPRINT(EM_DIAGRAM):   end;
236992    +   end;
MPRINT(EM_DIAGRAM):   end;
236993    +   else do;
MPRINT(EM_DIAGRAM):   else do;
236994    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
236995    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
236996    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
236997    +      end;
MPRINT(EM_DIAGRAM):   end;
236998    +      else do;
MPRINT(EM_DIAGRAM):   else do;
236999    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
237000    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
237001    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
237002    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
237003    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
237004    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
237005    +         end;
MPRINT(EM_DIAGRAM):   end;
237006    +      end;
MPRINT(EM_DIAGRAM):   end;
237007    +   end;
MPRINT(EM_DIAGRAM):   end;
237008    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
237009    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
237010    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
237011    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
237012    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
237013    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
237014    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237015    +   end;
MPRINT(EM_DIAGRAM):   end;
237016    +end;
MPRINT(EM_DIAGRAM):   end;
237017    +
237018    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237019    +*** Checking missing input Interval
237020    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
237021    +
237022    +IF NMISS(
237023    +   Income ,
237024    +   Kidhome ,
237025    +   MntFishProducts ,
237026    +   MntFruits ,
237027    +   MntGoldProds ,
237028    +   MntMeatProducts ,
237029    +   MntSweetProducts ,
237030    +   MntWines ,
237031    +   NumCatalogPurchases ,
237032    +   NumDealsPurchases ,
237033    +   NumStorePurchases ,
237034    +   NumWebPurchases ,
237035    +   NumWebVisitsMonth ,
237036    +   Recency ,
237037    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
237038    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
237039    +
237040    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237041    +END;
MPRINT(EM_DIAGRAM):   END;
237042    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237043    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
237044    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237045    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
237046    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
237047    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
237048    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
237049    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
237050    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
237051    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
237052    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
237053    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
237054    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
237055    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
237056    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
237057    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
237058    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
237059    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
237060    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
237061    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
237062    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
237063    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
237064    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
237065    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
237066    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
237067    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
237068    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
237069    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
237070    +END;
MPRINT(EM_DIAGRAM):   END;
237071    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
237072    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
237073    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
237074    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
237075    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
237076    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
237077    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
237078    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
237079    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
237080    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
237081    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
237082    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
237083    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
237084    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
237085    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
237086    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
237087    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
237088    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
237089    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
237090    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
237091    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
237092    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
237093    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
237094    +   ELSE S_NumCatalogPurchases
237095    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
237096    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
237097    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
237098    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
237099    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
237100    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
237101    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
237102    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
237103    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
237104    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
237105    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
237106    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
237107    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
237108    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
237109    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
237110    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
237111    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
237112    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
237113    +END;
MPRINT(EM_DIAGRAM):   END;
237114    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237115    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
237116    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237117    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237118    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
237119    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237120    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237121    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
237122    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237123    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
237124    +   H1x1_1  =     0.00788029676844 * S_Income  +    -0.91535527861933 *
237125    +        S_Kidhome  +    -0.25225116407302 * S_MntFishProducts
237126    +          +    -0.18797076337897 * S_MntFruits  +    -0.44902183906131 *
237127    +        S_MntGoldProds  +      2.2767772850691 * S_MntMeatProducts
237128    +          +     -0.2030617183738 * S_MntSweetProducts
237129    +          +    -3.00492674390268 * S_MntWines  +     0.79341578039366 *
237130    +        S_NumCatalogPurchases  +     0.87204448909716 * S_NumDealsPurchases
237131    +          +    -2.67074303965293 * S_NumStorePurchases
237132    +          +    -0.84694619593676 * S_NumWebPurchases
237133    +          +     1.78464945757548 * S_NumWebVisitsMonth
237134    +          +    -1.79669645209961 * S_Recency  +     0.12484193160086 *
237135    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.00788029676844 * S_Income + -0.91535527861933 * S_Kidhome + 
-0.25225116407302 * S_MntFishProducts + -0.18797076337897 * S_MntFruits + -0.44902183906131 * 
S_MntGoldProds + 2.2767772850691 * S_MntMeatProducts + -0.2030617183738 * S_MntSweetProducts + 
-3.00492674390268 * S_MntWines + 0.79341578039366 * S_NumCatalogPurchases + 0.87204448909716 * 
S_NumDealsPurchases + -2.67074303965293 * S_NumStorePurchases + -0.84694619593676 * 
S_NumWebPurchases + 1.78464945757548 * S_NumWebVisitsMonth + -1.79669645209961 * S_Recency + 
0.12484193160086 * S_Teenhome ;
237136    +   H1x1_2  =     0.89056482755935 * S_Income  +    -1.26858223800375 *
237137    +        S_Kidhome  +    -0.21524958568885 * S_MntFishProducts
237138    +          +     0.09518715448323 * S_MntFruits  +    -0.19863573935492 *
237139    +        S_MntGoldProds  +     1.18841616001527 * S_MntMeatProducts
237140    +          +    -0.48853587268985 * S_MntSweetProducts
237141    +          +      -0.414993830248 * S_MntWines  +     1.47883555237605 *
237142    +        S_NumCatalogPurchases  +     0.83644109170588 * S_NumDealsPurchases
237143    +          +    -1.10593499185395 * S_NumStorePurchases
237144    +          +     -1.3003228821842 * S_NumWebPurchases
237145    +          +     2.87047131261901 * S_NumWebVisitsMonth
237146    +          +    -3.10727941128136 * S_Recency  +     -1.2351049603093 *
237147    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.89056482755935 * S_Income + -1.26858223800375 * S_Kidhome + 
-0.21524958568885 * S_MntFishProducts + 0.09518715448323 * S_MntFruits + -0.19863573935492 * 
S_MntGoldProds + 1.18841616001527 * S_MntMeatProducts + -0.48853587268985 * S_MntSweetProducts 
+ -0.414993830248 * S_MntWines + 1.47883555237605 * S_NumCatalogPurchases + 0.83644109170588 * 
S_NumDealsPurchases + -1.10593499185395 * S_NumStorePurchases + -1.3003228821842 * 
S_NumWebPurchases + 2.87047131261901 * S_NumWebVisitsMonth + -3.10727941128136 * S_Recency + 
-1.2351049603093 * S_Teenhome ;
237148    +   H1x1_3  =    -0.59621293188677 * S_Income  +    -0.98204600423622 *
237149    +        S_Kidhome  +     0.82413780234399 * S_MntFishProducts
237150    +          +     0.39739163071946 * S_MntFruits  +    -0.49042553659196 *
237151    +        S_MntGoldProds  +    -4.39932579909415 * S_MntMeatProducts
237152    +          +    -0.27795094909244 * S_MntSweetProducts
237153    +          +     0.24963500961568 * S_MntWines  +     -0.5239489331422 *
237154    +        S_NumCatalogPurchases  +    -0.90657315438752 * S_NumDealsPurchases
237155    +          +    -0.41332499072246 * S_NumStorePurchases
237156    +          +     0.76626053410817 * S_NumWebPurchases
237157    +          +     0.81795211037296 * S_NumWebVisitsMonth
237158    +          +    -0.50876365872417 * S_Recency  +     0.41668164622243 *
237159    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.59621293188677 * S_Income + -0.98204600423622 * S_Kidhome + 
0.82413780234399 * S_MntFishProducts + 0.39739163071946 * S_MntFruits + -0.49042553659196 * 
S_MntGoldProds + -4.39932579909415 * S_MntMeatProducts + -0.27795094909244 * 
S_MntSweetProducts + 0.24963500961568 * S_MntWines + -0.5239489331422 * S_NumCatalogPurchases 
+ -0.90657315438752 * S_NumDealsPurchases + -0.41332499072246 * S_NumStorePurchases + 
0.76626053410817 * S_NumWebPurchases + 0.81795211037296 * S_NumWebVisitsMonth + 
-0.50876365872417 * S_Recency + 0.41668164622243 * S_Teenhome ;
237160    +   H1x1_4  =     0.96283488963096 * S_Income  +    -0.87986849758504 *
237161    +        S_Kidhome  +     -0.1136919534185 * S_MntFishProducts
237162    +          +    -0.29232436238858 * S_MntFruits  +      0.1837511707412 *
237163    +        S_MntGoldProds  +     0.70727712145719 * S_MntMeatProducts
237164    +          +    -0.08285620819867 * S_MntSweetProducts
237165    +          +    -2.34391341405204 * S_MntWines  +     1.28790868462455 *
237166    +        S_NumCatalogPurchases  +    -0.66448120419076 * S_NumDealsPurchases
237167    +          +    -0.17691098721908 * S_NumStorePurchases
237168    +          +     0.46246892093576 * S_NumWebPurchases
237169    +          +     2.06272832836908 * S_NumWebVisitsMonth
237170    +          +    -2.20357897947054 * S_Recency  +    -0.21370157733704 *
237171    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.96283488963096 * S_Income + -0.87986849758504 * S_Kidhome + 
-0.1136919534185 * S_MntFishProducts + -0.29232436238858 * S_MntFruits + 0.1837511707412 * 
S_MntGoldProds + 0.70727712145719 * S_MntMeatProducts + -0.08285620819867 * S_MntSweetProducts 
+ -2.34391341405204 * S_MntWines + 1.28790868462455 * S_NumCatalogPurchases + 
-0.66448120419076 * S_NumDealsPurchases + -0.17691098721908 * S_NumStorePurchases + 
0.46246892093576 * S_NumWebPurchases + 2.06272832836908 * S_NumWebVisitsMonth + 
-2.20357897947054 * S_Recency + -0.21370157733704 * S_Teenhome ;
237172    +   H1x1_1  = H1x1_1  +    -1.11882466050741 * AcceptedCmp10
237173    +          +    -0.02672648348788 * AcceptedCmp20  +     -0.9935054015775 *
237174    +        AcceptedCmp30  +    -0.40619950578221 * AcceptedCmp40
237175    +          +     0.75861408836828 * AcceptedCmp50  +    -0.08119659353213 *
237176    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.11882466050741 * AcceptedCmp10 + -0.02672648348788 
* AcceptedCmp20 + -0.9935054015775 * AcceptedCmp30 + -0.40619950578221 * AcceptedCmp40 + 
0.75861408836828 * AcceptedCmp50 + -0.08119659353213 * Complain0 ;
237177    +   H1x1_2  = H1x1_2  +    -1.19874175712489 * AcceptedCmp10
237178    +          +    -1.39569753392124 * AcceptedCmp20  +    -1.40792768449965 *
237179    +        AcceptedCmp30  +    -1.33621370186337 * AcceptedCmp40
237180    +          +    -1.28850585600497 * AcceptedCmp50  +     1.54913459648682 *
237181    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.19874175712489 * AcceptedCmp10 + -1.39569753392124 
* AcceptedCmp20 + -1.40792768449965 * AcceptedCmp30 + -1.33621370186337 * AcceptedCmp40 + 
-1.28850585600497 * AcceptedCmp50 + 1.54913459648682 * Complain0 ;
237182    +   H1x1_3  = H1x1_3  +      0.8900995500275 * AcceptedCmp10
237183    +          +     0.63129973315749 * AcceptedCmp20  +    -0.31513199468014 *
237184    +        AcceptedCmp30  +     0.36000457467611 * AcceptedCmp40
237185    +          +     0.62901278737039 * AcceptedCmp50  +     0.13436691399472 *
237186    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.8900995500275 * AcceptedCmp10 + 0.63129973315749 * 
AcceptedCmp20 + -0.31513199468014 * AcceptedCmp30 + 0.36000457467611 * AcceptedCmp40 + 
0.62901278737039 * AcceptedCmp50 + 0.13436691399472 * Complain0 ;
237187    +   H1x1_4  = H1x1_4  +     -0.4761315940218 * AcceptedCmp10
237188    +          +     0.04116528443754 * AcceptedCmp20  +    -1.31248665137501 *
237189    +        AcceptedCmp30  +    -1.13922224536841 * AcceptedCmp40
237190    +          +    -1.71240975292363 * AcceptedCmp50  +     0.98794736218555 *
237191    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.4761315940218 * AcceptedCmp10 + 0.04116528443754 * 
AcceptedCmp20 + -1.31248665137501 * AcceptedCmp30 + -1.13922224536841 * AcceptedCmp40 + 
-1.71240975292363 * AcceptedCmp50 + 0.98794736218555 * Complain0 ;
237192    +   H1x1_1  = H1x1_1  +    -0.19427690904448 * Education2n_Cycle
237193    +          +    -0.78361431701943 * EducationBasic  +     0.70012279609726 *
237194    +        EducationGraduation  +    -0.51132563359945 * EducationMaster
237195    +          +     1.59526812226707 * Marital_StatusDivorced
237196    +          +    -0.74331656724296 * Marital_StatusMarried
237197    +          +     0.74316614019998 * Marital_StatusSingle
237198    +          +    -1.36761487171479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19427690904448 * Education2n_Cycle + 
-0.78361431701943 * EducationBasic + 0.70012279609726 * EducationGraduation + 
-0.51132563359945 * EducationMaster + 1.59526812226707 * Marital_StatusDivorced + 
-0.74331656724296 * Marital_StatusMarried + 0.74316614019998 * Marital_StatusSingle + 
-1.36761487171479 * Marital_StatusTogether ;
237199    +   H1x1_2  = H1x1_2  +    -0.76077191404637 * Education2n_Cycle
237200    +          +    -0.22680587409979 * EducationBasic  +     0.19812025591093 *
237201    +        EducationGraduation  +     0.07596142730184 * EducationMaster
237202    +          +     0.94291322065497 * Marital_StatusDivorced
237203    +          +    -1.64331597630127 * Marital_StatusMarried
237204    +          +     2.21526196736604 * Marital_StatusSingle
237205    +          +    -1.52687548646297 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.76077191404637 * Education2n_Cycle + 
-0.22680587409979 * EducationBasic + 0.19812025591093 * EducationGraduation + 0.07596142730184 
* EducationMaster + 0.94291322065497 * Marital_StatusDivorced + -1.64331597630127 * 
Marital_StatusMarried + 2.21526196736604 * Marital_StatusSingle + -1.52687548646297 * 
Marital_StatusTogether ;
237206    +   H1x1_3  = H1x1_3  +    -0.22328003539059 * Education2n_Cycle
237207    +          +    -0.56253476355283 * EducationBasic  +     0.43074608752346 *
237208    +        EducationGraduation  +    -0.59791003195469 * EducationMaster
237209    +          +     1.63906979191221 * Marital_StatusDivorced
237210    +          +    -1.00497354965718 * Marital_StatusMarried
237211    +          +     0.70485207953497 * Marital_StatusSingle
237212    +          +    -1.55917756143873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.22328003539059 * Education2n_Cycle + 
-0.56253476355283 * EducationBasic + 0.43074608752346 * EducationGraduation + 
-0.59791003195469 * EducationMaster + 1.63906979191221 * Marital_StatusDivorced + 
-1.00497354965718 * Marital_StatusMarried + 0.70485207953497 * Marital_StatusSingle + 
-1.55917756143873 * Marital_StatusTogether ;
237213    +   H1x1_4  = H1x1_4  +     0.85325476712793 * Education2n_Cycle
237214    +          +    -0.10167049440435 * EducationBasic  +     0.11808465181014 *
237215    +        EducationGraduation  +     -0.1847363034021 * EducationMaster
237216    +          +     0.75038128420756 * Marital_StatusDivorced
237217    +          +    -1.93055855198469 * Marital_StatusMarried
237218    +          +     0.73816798380254 * Marital_StatusSingle
237219    +          +    -1.77103687011169 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.85325476712793 * Education2n_Cycle + 
-0.10167049440435 * EducationBasic + 0.11808465181014 * EducationGraduation + -0.1847363034021 
* EducationMaster + 0.75038128420756 * Marital_StatusDivorced + -1.93055855198469 * 
Marital_StatusMarried + 0.73816798380254 * Marital_StatusSingle + -1.77103687011169 * 
Marital_StatusTogether ;
237220    +   H1x1_1  =    -0.97292943558748 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.97292943558748 + H1x1_1 ;
237221    +   H1x1_2  =      -0.767474595653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.767474595653 + H1x1_2 ;
237222    +   H1x1_3  =    -1.54289542125346 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.54289542125346 + H1x1_3 ;
237223    +   H1x1_4  =     0.11531219453063 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.11531219453063 + H1x1_4 ;
237224    +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
237225    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
237226    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
237227    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
237228    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
237229    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
237230    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
237231    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
237232    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
237233    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
237234    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
237235    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
237236    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
237237    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
237238    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
237239    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
237240    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
237241    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
237242    +END;
MPRINT(EM_DIAGRAM):   END;
237243    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
237244    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
237245    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
237246    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
237247    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
237248    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
237249    +END;
MPRINT(EM_DIAGRAM):   END;
237250    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237251    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
237252    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237253    +
237254    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
237255    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
237256    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
237257    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
237258    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
237259    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
237260    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
237261    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
237262    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
237263    +end;
MPRINT(EM_DIAGRAM):   end;
237264    +else do;
MPRINT(EM_DIAGRAM):   else do;
237265    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
237266    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
237267    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
237268    +   end;
MPRINT(EM_DIAGRAM):   end;
237269    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
237270    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
237271    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
237272    +   end;
MPRINT(EM_DIAGRAM):   end;
237273    +   else do;
MPRINT(EM_DIAGRAM):   else do;
237274    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
237275    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
237276    +   end;
MPRINT(EM_DIAGRAM):   end;
237277    +end;
MPRINT(EM_DIAGRAM):   end;
237278    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
237279    +   P_DepVar1  =     4.87259918787296 * H1x1_1  +     21.0865386977957 * H1x1_2
237280    +          +    -8.49666483029666 * H1x1_3  +     4.50140461489884 * H1x1_4
237281    +          +    -19.2888668755466 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.87259918787296 * H1x1_1 + 21.0865386977957 * H1x1_2 + 
-8.49666483029666 * H1x1_3 + 4.50140461489884 * H1x1_4 + -19.2888668755466 * H1x1_5 ;
237282    +   P_DepVar1  =     0.94995870883169 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94995870883169 + P_DepVar1 ;
237283    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
237284    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
237285    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
237286    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
237287    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
237288    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
237289    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
237290    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
237291    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
237292    +END;
MPRINT(EM_DIAGRAM):   END;
237293    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
237294    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
237295    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
237296    +END;
MPRINT(EM_DIAGRAM):   END;
237297    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
237298    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
237299    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
237300    +END;
MPRINT(EM_DIAGRAM):   END;
237301    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
237302    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
237303    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
237304    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
237305    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
237306    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
237307    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
237308    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237309    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
237310    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237311    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
237312    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
237313    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
237314    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
237315    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
237316    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
237317    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
237318    +END;
MPRINT(EM_DIAGRAM):   END;
237319    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
237320    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
237321    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
237322    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
237323    +* Renaming variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural41;
237324    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237325    +* Renaming Posterior variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural41;
237326    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237327    +drop AutoNeural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar1;
237328    +AutoNeural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar1 = P_DepVar1;
237329    +drop AutoNeural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar0;
237330    +AutoNeural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar0 = P_DepVar0;
237331    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237332    +* Renaming _WARN_ variable for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural41;
237333    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237334    +length AutoNeural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural41_WARN_ $4;
237335    +drop AutoNeural41_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_WARN_;
237336    +AutoNeural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural41_WARN_ = _WARN_;
237337    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237338    +* Ensmbl57: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 5 of 7;
237339    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237340    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237341    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
237342    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
237343    +* NODE: AutoNeural47;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural47;
237344    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237345    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
237346    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
237347    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
237348    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
237349    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
237350    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
237351    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
237352    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
237353    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
237354    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
237355    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
237356    +LENGTH _WARN_ $4
237357    +      F_DepVar  $ 12
237358    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
237359    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
237360    +
237361    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
237362    +
237363    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
237364    +
237365    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
237366    +
237367    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
237368    +
237369    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
237370    +
237371    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
237372    +
237373    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
237374    +
237375    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
237376    +
237377    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
237378    +
237379    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
237380    +
237381    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
237382    +
237383    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
237384    +
237385    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
237386    +
237387    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
237388    +
237389    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
237390    +
237391    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
237392    +
237393    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
237394    +
237395    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
237396    +
237397    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
237398    +
237399    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
237400    +
237401    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
237402    +
237403    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
237404    +
237405    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
237406    +
237407    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
237408    +
237409    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
237410    +
237411    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
237412    +
237413    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
237414    +
237415    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
237416    +
237417    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
237418    +
237419    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
237420    +
237421    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
237422    +
237423    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
237424    +
237425    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
237426    +
237427    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
237428    +
237429    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
237430    +
237431    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
237432    +
237433    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
237434    +
237435    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
237436    +
237437    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
237438    +
237439    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
237440    +
237441    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
237442    +
237443    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
237444    +
237445    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
237446    +
237447    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
237448    +
237449    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
237450    +
237451    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
237452    +
237453    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
237454    +
237455    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
237456    +
237457    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
237458    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
237459    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
237460    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
237461    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
237462    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237463    +end;
MPRINT(EM_DIAGRAM):   end;
237464    +else do;
MPRINT(EM_DIAGRAM):   else do;
237465    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
237466    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
237467    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
237468    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
237469    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
237470    +   end;
MPRINT(EM_DIAGRAM):   end;
237471    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
237472    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
237473    +   end;
MPRINT(EM_DIAGRAM):   end;
237474    +   else do;
MPRINT(EM_DIAGRAM):   else do;
237475    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
237476    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
237477    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237478    +   end;
MPRINT(EM_DIAGRAM):   end;
237479    +end;
MPRINT(EM_DIAGRAM):   end;
237480    +
237481    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
237482    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
237483    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
237484    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
237485    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
237486    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237487    +end;
MPRINT(EM_DIAGRAM):   end;
237488    +else do;
MPRINT(EM_DIAGRAM):   else do;
237489    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
237490    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
237491    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
237492    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
237493    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
237494    +   end;
MPRINT(EM_DIAGRAM):   end;
237495    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
237496    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
237497    +   end;
MPRINT(EM_DIAGRAM):   end;
237498    +   else do;
MPRINT(EM_DIAGRAM):   else do;
237499    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
237500    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
237501    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237502    +   end;
MPRINT(EM_DIAGRAM):   end;
237503    +end;
MPRINT(EM_DIAGRAM):   end;
237504    +
237505    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
237506    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
237507    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
237508    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
237509    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
237510    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237511    +end;
MPRINT(EM_DIAGRAM):   end;
237512    +else do;
MPRINT(EM_DIAGRAM):   else do;
237513    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
237514    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
237515    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
237516    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
237517    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
237518    +   end;
MPRINT(EM_DIAGRAM):   end;
237519    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
237520    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
237521    +   end;
MPRINT(EM_DIAGRAM):   end;
237522    +   else do;
MPRINT(EM_DIAGRAM):   else do;
237523    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
237524    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
237525    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237526    +   end;
MPRINT(EM_DIAGRAM):   end;
237527    +end;
MPRINT(EM_DIAGRAM):   end;
237528    +
237529    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
237530    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
237531    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
237532    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
237533    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
237534    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237535    +end;
MPRINT(EM_DIAGRAM):   end;
237536    +else do;
MPRINT(EM_DIAGRAM):   else do;
237537    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
237538    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
237539    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
237540    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
237541    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
237542    +   end;
MPRINT(EM_DIAGRAM):   end;
237543    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
237544    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
237545    +   end;
MPRINT(EM_DIAGRAM):   end;
237546    +   else do;
MPRINT(EM_DIAGRAM):   else do;
237547    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
237548    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
237549    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237550    +   end;
MPRINT(EM_DIAGRAM):   end;
237551    +end;
MPRINT(EM_DIAGRAM):   end;
237552    +
237553    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
237554    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
237555    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
237556    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
237557    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
237558    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237559    +end;
MPRINT(EM_DIAGRAM):   end;
237560    +else do;
MPRINT(EM_DIAGRAM):   else do;
237561    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
237562    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
237563    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
237564    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
237565    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
237566    +   end;
MPRINT(EM_DIAGRAM):   end;
237567    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
237568    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
237569    +   end;
MPRINT(EM_DIAGRAM):   end;
237570    +   else do;
MPRINT(EM_DIAGRAM):   else do;
237571    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
237572    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
237573    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237574    +   end;
MPRINT(EM_DIAGRAM):   end;
237575    +end;
MPRINT(EM_DIAGRAM):   end;
237576    +
237577    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
237578    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
237579    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
237580    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
237581    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
237582    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237583    +end;
MPRINT(EM_DIAGRAM):   end;
237584    +else do;
MPRINT(EM_DIAGRAM):   else do;
237585    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
237586    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
237587    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
237588    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
237589    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
237590    +   end;
MPRINT(EM_DIAGRAM):   end;
237591    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
237592    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
237593    +   end;
MPRINT(EM_DIAGRAM):   end;
237594    +   else do;
MPRINT(EM_DIAGRAM):   else do;
237595    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
237596    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
237597    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237598    +   end;
MPRINT(EM_DIAGRAM):   end;
237599    +end;
MPRINT(EM_DIAGRAM):   end;
237600    +
237601    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
237602    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
237603    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
237604    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
237605    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
237606    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
237607    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
237608    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
237609    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
237610    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
237611    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
237612    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
237613    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
237614    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237615    +end;
MPRINT(EM_DIAGRAM):   end;
237616    +else do;
MPRINT(EM_DIAGRAM):   else do;
237617    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
237618    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
237619    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
237620    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
237621    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
237622    +   end;
MPRINT(EM_DIAGRAM):   end;
237623    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
237624    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
237625    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
237626    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
237627    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
237628    +   end;
MPRINT(EM_DIAGRAM):   end;
237629    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
237630    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
237631    +   end;
MPRINT(EM_DIAGRAM):   end;
237632    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
237633    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
237634    +   end;
MPRINT(EM_DIAGRAM):   end;
237635    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
237636    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
237637    +   end;
MPRINT(EM_DIAGRAM):   end;
237638    +   else do;
MPRINT(EM_DIAGRAM):   else do;
237639    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
237640    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
237641    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
237642    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
237643    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
237644    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237645    +   end;
MPRINT(EM_DIAGRAM):   end;
237646    +end;
MPRINT(EM_DIAGRAM):   end;
237647    +
237648    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
237649    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
237650    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
237651    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
237652    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
237653    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
237654    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
237655    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
237656    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
237657    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
237658    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
237659    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
237660    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
237661    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
237662    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237663    +end;
MPRINT(EM_DIAGRAM):   end;
237664    +else do;
MPRINT(EM_DIAGRAM):   else do;
237665    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
237666    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
237667    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
237668    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
237669    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
237670    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
237671    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
237672    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
237673    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
237674    +         end;
MPRINT(EM_DIAGRAM):   end;
237675    +         else do;
MPRINT(EM_DIAGRAM):   else do;
237676    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
237677    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
237678    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
237679    +            end;
MPRINT(EM_DIAGRAM):   end;
237680    +         end;
MPRINT(EM_DIAGRAM):   end;
237681    +      end;
MPRINT(EM_DIAGRAM):   end;
237682    +      else do;
MPRINT(EM_DIAGRAM):   else do;
237683    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
237684    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
237685    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
237686    +         end;
MPRINT(EM_DIAGRAM):   end;
237687    +      end;
MPRINT(EM_DIAGRAM):   end;
237688    +   end;
MPRINT(EM_DIAGRAM):   end;
237689    +   else do;
MPRINT(EM_DIAGRAM):   else do;
237690    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
237691    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
237692    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
237693    +      end;
MPRINT(EM_DIAGRAM):   end;
237694    +      else do;
MPRINT(EM_DIAGRAM):   else do;
237695    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
237696    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
237697    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
237698    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
237699    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
237700    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
237701    +         end;
MPRINT(EM_DIAGRAM):   end;
237702    +      end;
MPRINT(EM_DIAGRAM):   end;
237703    +   end;
MPRINT(EM_DIAGRAM):   end;
237704    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
237705    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
237706    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
237707    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
237708    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
237709    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
237710    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237711    +   end;
MPRINT(EM_DIAGRAM):   end;
237712    +end;
MPRINT(EM_DIAGRAM):   end;
237713    +
237714    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237715    +*** Checking missing input Interval
237716    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
237717    +
237718    +IF NMISS(
237719    +   Income ,
237720    +   Kidhome ,
237721    +   MntFishProducts ,
237722    +   MntFruits ,
237723    +   MntGoldProds ,
237724    +   MntMeatProducts ,
237725    +   MntSweetProducts ,
237726    +   MntWines ,
237727    +   NumCatalogPurchases ,
237728    +   NumDealsPurchases ,
237729    +   NumStorePurchases ,
237730    +   NumWebPurchases ,
237731    +   NumWebVisitsMonth ,
237732    +   Recency ,
237733    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
237734    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
237735    +
237736    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237737    +END;
MPRINT(EM_DIAGRAM):   END;
237738    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237739    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
237740    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237741    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
237742    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
237743    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
237744    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
237745    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
237746    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
237747    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
237748    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
237749    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
237750    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
237751    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
237752    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
237753    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
237754    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
237755    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
237756    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
237757    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
237758    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
237759    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
237760    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
237761    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
237762    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
237763    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
237764    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
237765    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
237766    +END;
MPRINT(EM_DIAGRAM):   END;
237767    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
237768    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
237769    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
237770    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
237771    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
237772    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
237773    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
237774    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
237775    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
237776    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
237777    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
237778    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
237779    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
237780    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
237781    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
237782    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
237783    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
237784    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
237785    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
237786    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
237787    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
237788    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
237789    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
237790    +   ELSE S_NumCatalogPurchases
237791    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
237792    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
237793    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
237794    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
237795    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
237796    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
237797    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
237798    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
237799    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
237800    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
237801    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
237802    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
237803    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
237804    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
237805    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
237806    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
237807    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
237808    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
237809    +END;
MPRINT(EM_DIAGRAM):   END;
237810    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237811    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
237812    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237813    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237814    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
237815    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237816    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237817    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
237818    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237819    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
237820    +   H1x1_1  =     -0.6712927499227 * S_Income  +     0.52481056075303 *
237821    +        S_Kidhome  +     -2.3662268017216 * S_MntFishProducts
237822    +          +    -1.70194161526543 * S_MntFruits  +    -0.12195276696714 *
237823    +        S_MntGoldProds  +     5.02051235731232 * S_MntMeatProducts
237824    +          +    -2.37073629008864 * S_MntSweetProducts
237825    +          +    -7.49792253647533 * S_MntWines  +     1.93063890722455 *
237826    +        S_NumCatalogPurchases  +     1.44821336448113 * S_NumDealsPurchases
237827    +          +    -1.29021742502316 * S_NumStorePurchases
237828    +          +    -0.00949168969466 * S_NumWebPurchases
237829    +          +    -0.32248137192321 * S_NumWebVisitsMonth
237830    +          +    -0.55879173873733 * S_Recency  +    -0.22439654268554 *
237831    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.6712927499227 * S_Income + 0.52481056075303 * S_Kidhome + 
-2.3662268017216 * S_MntFishProducts + -1.70194161526543 * S_MntFruits + -0.12195276696714 * 
S_MntGoldProds + 5.02051235731232 * S_MntMeatProducts + -2.37073629008864 * S_MntSweetProducts 
+ -7.49792253647533 * S_MntWines + 1.93063890722455 * S_NumCatalogPurchases + 1.44821336448113 
* S_NumDealsPurchases + -1.29021742502316 * S_NumStorePurchases + -0.00949168969466 * 
S_NumWebPurchases + -0.32248137192321 * S_NumWebVisitsMonth + -0.55879173873733 * S_Recency + 
-0.22439654268554 * S_Teenhome ;
237832    +   H1x1_2  =    -1.63837717417638 * S_Income  +     1.01712005677207 *
237833    +        S_Kidhome  +    -0.11452425716086 * S_MntFishProducts
237834    +          +    -0.08273769039219 * S_MntFruits  +    -0.47045422182093 *
237835    +        S_MntGoldProds  +    -0.64593629987888 * S_MntMeatProducts
237836    +          +     0.41126087093412 * S_MntSweetProducts
237837    +          +    -0.00653581981542 * S_MntWines  +    -1.62534004647483 *
237838    +        S_NumCatalogPurchases  +    -0.74740978232431 * S_NumDealsPurchases
237839    +          +      0.2319226227964 * S_NumStorePurchases
237840    +          +     0.31190969795517 * S_NumWebPurchases
237841    +          +      -1.987305550542 * S_NumWebVisitsMonth
237842    +          +     2.46312593342153 * S_Recency  +     1.89469486725188 *
237843    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.63837717417638 * S_Income + 1.01712005677207 * S_Kidhome + 
-0.11452425716086 * S_MntFishProducts + -0.08273769039219 * S_MntFruits + -0.47045422182093 * 
S_MntGoldProds + -0.64593629987888 * S_MntMeatProducts + 0.41126087093412 * S_MntSweetProducts 
+ -0.00653581981542 * S_MntWines + -1.62534004647483 * S_NumCatalogPurchases + 
-0.74740978232431 * S_NumDealsPurchases + 0.2319226227964 * S_NumStorePurchases + 
0.31190969795517 * S_NumWebPurchases + -1.987305550542 * S_NumWebVisitsMonth + 
2.46312593342153 * S_Recency + 1.89469486725188 * S_Teenhome ;
237844    +   H1x1_3  =    -0.78523773312865 * S_Income  +    -1.40266608040579 *
237845    +        S_Kidhome  +     0.01206304735425 * S_MntFishProducts
237846    +          +    -0.50371384095637 * S_MntFruits  +    -0.93176870066879 *
237847    +        S_MntGoldProds  +    -0.53990224542491 * S_MntMeatProducts
237848    +          +    -0.73991431726966 * S_MntSweetProducts
237849    +          +    -0.21227505043037 * S_MntWines  +     0.42667885020643 *
237850    +        S_NumCatalogPurchases  +    -0.34821401096287 * S_NumDealsPurchases
237851    +          +    -2.50826402419251 * S_NumStorePurchases
237852    +          +    -0.30764477738015 * S_NumWebPurchases
237853    +          +     1.21240794582671 * S_NumWebVisitsMonth
237854    +          +    -2.22374004865256 * S_Recency  +    -0.07389156638234 *
237855    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.78523773312865 * S_Income + -1.40266608040579 * S_Kidhome + 
0.01206304735425 * S_MntFishProducts + -0.50371384095637 * S_MntFruits + -0.93176870066879 * 
S_MntGoldProds + -0.53990224542491 * S_MntMeatProducts + -0.73991431726966 * 
S_MntSweetProducts + -0.21227505043037 * S_MntWines + 0.42667885020643 * S_NumCatalogPurchases 
+ -0.34821401096287 * S_NumDealsPurchases + -2.50826402419251 * S_NumStorePurchases + 
-0.30764477738015 * S_NumWebPurchases + 1.21240794582671 * S_NumWebVisitsMonth + 
-2.22374004865256 * S_Recency + -0.07389156638234 * S_Teenhome ;
237856    +   H1x1_4  =     1.52339017953874 * S_Income  +     -0.0800472387091 *
237857    +        S_Kidhome  +    -0.81466158613596 * S_MntFishProducts
237858    +          +    -1.56740792821078 * S_MntFruits  +    -0.44251282056636 *
237859    +        S_MntGoldProds  +     4.21345569180051 * S_MntMeatProducts
237860    +          +     1.07674028011002 * S_MntSweetProducts
237861    +          +    -4.16668334099034 * S_MntWines  +     2.33183855256347 *
237862    +        S_NumCatalogPurchases  +     1.55678471765653 * S_NumDealsPurchases
237863    +          +    -0.47776935727231 * S_NumStorePurchases
237864    +          +     -0.5890810666834 * S_NumWebPurchases
237865    +          +      1.3845716796855 * S_NumWebVisitsMonth
237866    +          +    -0.37826249433224 * S_Recency  +    -0.32813220931783 *
237867    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.52339017953874 * S_Income + -0.0800472387091 * S_Kidhome + 
-0.81466158613596 * S_MntFishProducts + -1.56740792821078 * S_MntFruits + -0.44251282056636 * 
S_MntGoldProds + 4.21345569180051 * S_MntMeatProducts + 1.07674028011002 * S_MntSweetProducts 
+ -4.16668334099034 * S_MntWines + 2.33183855256347 * S_NumCatalogPurchases + 1.55678471765653 
* S_NumDealsPurchases + -0.47776935727231 * S_NumStorePurchases + -0.5890810666834 * 
S_NumWebPurchases + 1.3845716796855 * S_NumWebVisitsMonth + -0.37826249433224 * S_Recency + 
-0.32813220931783 * S_Teenhome ;
237868    +   H1x1_1  = H1x1_1  +     -1.8652801761626 * AcceptedCmp10
237869    +          +    -2.15838385124109 * AcceptedCmp20  +    -0.32281263106473 *
237870    +        AcceptedCmp30  +    -0.52751972284584 * AcceptedCmp40
237871    +          +    -0.16576520159698 * AcceptedCmp50  +      0.0798586391257 *
237872    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.8652801761626 * AcceptedCmp10 + -2.15838385124109 * 
AcceptedCmp20 + -0.32281263106473 * AcceptedCmp30 + -0.52751972284584 * AcceptedCmp40 + 
-0.16576520159698 * AcceptedCmp50 + 0.0798586391257 * Complain0 ;
237873    +   H1x1_2  = H1x1_2  +     1.18847829749899 * AcceptedCmp10
237874    +          +     2.28872916962314 * AcceptedCmp20  +      0.7666362501062 *
237875    +        AcceptedCmp30  +     0.63272382969915 * AcceptedCmp40
237876    +          +     1.03410667663543 * AcceptedCmp50  +    -0.44709535985633 *
237877    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.18847829749899 * AcceptedCmp10 + 2.28872916962314 * 
AcceptedCmp20 + 0.7666362501062 * AcceptedCmp30 + 0.63272382969915 * AcceptedCmp40 + 
1.03410667663543 * AcceptedCmp50 + -0.44709535985633 * Complain0 ;
237878    +   H1x1_3  = H1x1_3  +    -0.30260316693677 * AcceptedCmp10
237879    +          +     1.37858034146365 * AcceptedCmp20  +    -1.95638038137808 *
237880    +        AcceptedCmp30  +     -2.1581101738114 * AcceptedCmp40
237881    +          +    -1.72040670376675 * AcceptedCmp50  +     2.82913230380101 *
237882    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.30260316693677 * AcceptedCmp10 + 1.37858034146365 * 
AcceptedCmp20 + -1.95638038137808 * AcceptedCmp30 + -2.1581101738114 * AcceptedCmp40 + 
-1.72040670376675 * AcceptedCmp50 + 2.82913230380101 * Complain0 ;
237883    +   H1x1_4  = H1x1_4  +     0.37463576870294 * AcceptedCmp10
237884    +          +     -1.1935629973001 * AcceptedCmp20  +     -0.0357513820165 *
237885    +        AcceptedCmp30  +    -0.34228453024248 * AcceptedCmp40
237886    +          +     0.08692364147086 * AcceptedCmp50  +     0.01804293030366 *
237887    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.37463576870294 * AcceptedCmp10 + -1.1935629973001 * 
AcceptedCmp20 + -0.0357513820165 * AcceptedCmp30 + -0.34228453024248 * AcceptedCmp40 + 
0.08692364147086 * AcceptedCmp50 + 0.01804293030366 * Complain0 ;
237888    +   H1x1_1  = H1x1_1  +     0.10559298643668 * Education2n_Cycle
237889    +          +     -0.5051689695544 * EducationBasic  +     0.07434632730326 *
237890    +        EducationGraduation  +     0.68592368666749 * EducationMaster
237891    +          +     0.38999748028122 * Marital_StatusDivorced
237892    +          +     0.44180844463279 * Marital_StatusMarried
237893    +          +     0.63824884669155 * Marital_StatusSingle
237894    +          +    -0.26198648898013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.10559298643668 * Education2n_Cycle + 
-0.5051689695544 * EducationBasic + 0.07434632730326 * EducationGraduation + 0.68592368666749 
* EducationMaster + 0.38999748028122 * Marital_StatusDivorced + 0.44180844463279 * 
Marital_StatusMarried + 0.63824884669155 * Marital_StatusSingle + -0.26198648898013 * 
Marital_StatusTogether ;
237895    +   H1x1_2  = H1x1_2  +     0.38077564253123 * Education2n_Cycle
237896    +          +    -1.71516234680597 * EducationBasic  +      0.9305914926408 *
237897    +        EducationGraduation  +    -0.48500520310542 * EducationMaster
237898    +          +    -0.95537871859519 * Marital_StatusDivorced
237899    +          +     2.55061153921286 * Marital_StatusMarried
237900    +          +    -1.78007154396711 * Marital_StatusSingle
237901    +          +     1.47779717106964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38077564253123 * Education2n_Cycle + 
-1.71516234680597 * EducationBasic + 0.9305914926408 * EducationGraduation + -0.48500520310542 
* EducationMaster + -0.95537871859519 * Marital_StatusDivorced + 2.55061153921286 * 
Marital_StatusMarried + -1.78007154396711 * Marital_StatusSingle + 1.47779717106964 * 
Marital_StatusTogether ;
237902    +   H1x1_3  = H1x1_3  +    -0.26877104077313 * Education2n_Cycle
237903    +          +    -1.51047207681049 * EducationBasic  +     1.00818590807055 *
237904    +        EducationGraduation  +    -2.08836171183474 * EducationMaster
237905    +          +     1.29930912124343 * Marital_StatusDivorced
237906    +          +    -1.63037830924789 * Marital_StatusMarried
237907    +          +     0.19040732776086 * Marital_StatusSingle
237908    +          +     -3.9038060950259 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.26877104077313 * Education2n_Cycle + 
-1.51047207681049 * EducationBasic + 1.00818590807055 * EducationGraduation + 
-2.08836171183474 * EducationMaster + 1.29930912124343 * Marital_StatusDivorced + 
-1.63037830924789 * Marital_StatusMarried + 0.19040732776086 * Marital_StatusSingle + 
-3.9038060950259 * Marital_StatusTogether ;
237909    +   H1x1_4  = H1x1_4  +     0.59574708300703 * Education2n_Cycle
237910    +          +    -0.19936070861543 * EducationBasic  +     0.82683145042233 *
237911    +        EducationGraduation  +    -0.24015931152788 * EducationMaster
237912    +          +     -0.3129003025095 * Marital_StatusDivorced
237913    +          +     0.00843550425239 * Marital_StatusMarried
237914    +          +    -0.20416436114776 * Marital_StatusSingle
237915    +          +     1.08624823622502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.59574708300703 * Education2n_Cycle + 
-0.19936070861543 * EducationBasic + 0.82683145042233 * EducationGraduation + 
-0.24015931152788 * EducationMaster + -0.3129003025095 * Marital_StatusDivorced + 
0.00843550425239 * Marital_StatusMarried + -0.20416436114776 * Marital_StatusSingle + 
1.08624823622502 * Marital_StatusTogether ;
237916    +   H1x1_1  =    -2.66745806568988 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.66745806568988 + H1x1_1 ;
237917    +   H1x1_2  =     1.39870734752375 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.39870734752375 + H1x1_2 ;
237918    +   H1x1_3  =     3.90802178606462 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 3.90802178606462 + H1x1_3 ;
237919    +   H1x1_4  =    -1.61490323089776 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.61490323089776 + H1x1_4 ;
237920    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
237921    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
237922    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
237923    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
237924    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
237925    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
237926    +END;
MPRINT(EM_DIAGRAM):   END;
237927    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
237928    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
237929    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
237930    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
237931    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
237932    +END;
MPRINT(EM_DIAGRAM):   END;
237933    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237934    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
237935    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237936    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
237937    +   H1x2_1  =     0.40035517192793 * S_Income  +     1.50961149935512 *
237938    +        S_Kidhome  +    -0.71749794576247 * S_MntFishProducts
237939    +          +    -0.80539813415293 * S_MntFruits  +    -0.11190500470397 *
237940    +        S_MntGoldProds  +    -1.00287277559415 * S_MntMeatProducts
237941    +          +    -0.90866858123806 * S_MntSweetProducts
237942    +          +     0.48761861591898 * S_MntWines  +    -0.00278053699018 *
237943    +        S_NumCatalogPurchases  +     1.76527380505645 * S_NumDealsPurchases
237944    +          +     1.45805686107789 * S_NumStorePurchases
237945    +          +     1.48794767642409 * S_NumWebPurchases
237946    +          +    -1.24357395997191 * S_NumWebVisitsMonth
237947    +          +     2.73747730751211 * S_Recency  +    -0.74105180435611 *
237948    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.40035517192793 * S_Income + 1.50961149935512 * S_Kidhome + 
-0.71749794576247 * S_MntFishProducts + -0.80539813415293 * S_MntFruits + -0.11190500470397 * 
S_MntGoldProds + -1.00287277559415 * S_MntMeatProducts + -0.90866858123806 * 
S_MntSweetProducts + 0.48761861591898 * S_MntWines + -0.00278053699018 * S_NumCatalogPurchases 
+ 1.76527380505645 * S_NumDealsPurchases + 1.45805686107789 * S_NumStorePurchases + 
1.48794767642409 * S_NumWebPurchases + -1.24357395997191 * S_NumWebVisitsMonth + 
2.73747730751211 * S_Recency + -0.74105180435611 * S_Teenhome ;
237949    +   H1x2_2  =    -2.30368761501045 * S_Income  +     0.82837234680306 *
237950    +        S_Kidhome  +    -0.57801225504203 * S_MntFishProducts
237951    +          +    -0.53882153761332 * S_MntFruits  +    -0.06305202172404 *
237952    +        S_MntGoldProds  +    -0.83741138145577 * S_MntMeatProducts
237953    +          +     1.05010358762976 * S_MntSweetProducts
237954    +          +     -0.8308916879344 * S_MntWines  +     0.00135039846616 *
237955    +        S_NumCatalogPurchases  +     -0.1426130520252 * S_NumDealsPurchases
237956    +          +    -2.04318529474165 * S_NumStorePurchases
237957    +          +     1.64478964728594 * S_NumWebPurchases
237958    +          +    -0.74790322980646 * S_NumWebVisitsMonth
237959    +          +     0.44846346006135 * S_Recency  +    -1.17558204887145 *
237960    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.30368761501045 * S_Income + 0.82837234680306 * S_Kidhome + 
-0.57801225504203 * S_MntFishProducts + -0.53882153761332 * S_MntFruits + -0.06305202172404 * 
S_MntGoldProds + -0.83741138145577 * S_MntMeatProducts + 1.05010358762976 * S_MntSweetProducts 
+ -0.8308916879344 * S_MntWines + 0.00135039846616 * S_NumCatalogPurchases + -0.1426130520252 
* S_NumDealsPurchases + -2.04318529474165 * S_NumStorePurchases + 1.64478964728594 * 
S_NumWebPurchases + -0.74790322980646 * S_NumWebVisitsMonth + 0.44846346006135 * S_Recency + 
-1.17558204887145 * S_Teenhome ;
237961    +   H1x2_3  =     1.07803134847301 * S_Income  +     1.10001550023539 *
237962    +        S_Kidhome  +      2.1312863754193 * S_MntFishProducts
237963    +          +    -0.41841353908141 * S_MntFruits  +    -0.28009599678539 *
237964    +        S_MntGoldProds  +    -0.57516542648625 * S_MntMeatProducts
237965    +          +     0.39974532423377 * S_MntSweetProducts
237966    +          +    -1.03786923973351 * S_MntWines  +    -0.21873654141419 *
237967    +        S_NumCatalogPurchases  +    -0.12545360575656 * S_NumDealsPurchases
237968    +          +     0.70805557348415 * S_NumStorePurchases
237969    +          +     2.40362900277228 * S_NumWebPurchases
237970    +          +    -0.84521247676043 * S_NumWebVisitsMonth
237971    +          +     4.38953216910793 * S_Recency  +     1.39159599477449 *
237972    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.07803134847301 * S_Income + 1.10001550023539 * S_Kidhome + 
2.1312863754193 * S_MntFishProducts + -0.41841353908141 * S_MntFruits + -0.28009599678539 * 
S_MntGoldProds + -0.57516542648625 * S_MntMeatProducts + 0.39974532423377 * S_MntSweetProducts 
+ -1.03786923973351 * S_MntWines + -0.21873654141419 * S_NumCatalogPurchases + 
-0.12545360575656 * S_NumDealsPurchases + 0.70805557348415 * S_NumStorePurchases + 
2.40362900277228 * S_NumWebPurchases + -0.84521247676043 * S_NumWebVisitsMonth + 
4.38953216910793 * S_Recency + 1.39159599477449 * S_Teenhome ;
237973    +   H1x2_4  =      1.5904518722284 * S_Income  +     0.14957259343911 *
237974    +        S_Kidhome  +     1.71856101884761 * S_MntFishProducts
237975    +          +     0.97544338421034 * S_MntFruits  +     1.16387775609385 *
237976    +        S_MntGoldProds  +    -0.43463910907731 * S_MntMeatProducts
237977    +          +     1.67907268159197 * S_MntSweetProducts
237978    +          +    -0.67372438764914 * S_MntWines  +     0.34705529867224 *
237979    +        S_NumCatalogPurchases  +     1.55570260456887 * S_NumDealsPurchases
237980    +          +      0.0818178054474 * S_NumStorePurchases
237981    +          +     0.21533198164279 * S_NumWebPurchases
237982    +          +     2.13590425604302 * S_NumWebVisitsMonth
237983    +          +    -2.07481510631659 * S_Recency  +    -0.82288425478762 *
237984    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.5904518722284 * S_Income + 0.14957259343911 * S_Kidhome + 
1.71856101884761 * S_MntFishProducts + 0.97544338421034 * S_MntFruits + 1.16387775609385 * 
S_MntGoldProds + -0.43463910907731 * S_MntMeatProducts + 1.67907268159197 * S_MntSweetProducts 
+ -0.67372438764914 * S_MntWines + 0.34705529867224 * S_NumCatalogPurchases + 1.55570260456887 
* S_NumDealsPurchases + 0.0818178054474 * S_NumStorePurchases + 0.21533198164279 * 
S_NumWebPurchases + 2.13590425604302 * S_NumWebVisitsMonth + -2.07481510631659 * S_Recency + 
-0.82288425478762 * S_Teenhome ;
237985    +   H1x2_1  = H1x2_1  +    -1.62231361085618 * AcceptedCmp10
237986    +          +     0.93841494775887 * AcceptedCmp20  +      0.1734706863831 *
237987    +        AcceptedCmp30  +     0.16475784850175 * AcceptedCmp40
237988    +          +     0.65486951368163 * AcceptedCmp50  +      1.6226382489877 *
237989    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.62231361085618 * AcceptedCmp10 + 0.93841494775887 * 
AcceptedCmp20 + 0.1734706863831 * AcceptedCmp30 + 0.16475784850175 * AcceptedCmp40 + 
0.65486951368163 * AcceptedCmp50 + 1.6226382489877 * Complain0 ;
237990    +   H1x2_2  = H1x2_2  +     0.93875540013493 * AcceptedCmp10
237991    +          +     2.69754413059384 * AcceptedCmp20  +    -0.30913025234768 *
237992    +        AcceptedCmp30  +    -0.00924007964301 * AcceptedCmp40
237993    +          +     -0.7359545134435 * AcceptedCmp50  +    -0.44748157506074 *
237994    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.93875540013493 * AcceptedCmp10 + 2.69754413059384 * 
AcceptedCmp20 + -0.30913025234768 * AcceptedCmp30 + -0.00924007964301 * AcceptedCmp40 + 
-0.7359545134435 * AcceptedCmp50 + -0.44748157506074 * Complain0 ;
237995    +   H1x2_3  = H1x2_3  +      0.4023712256607 * AcceptedCmp10
237996    +          +    -0.46100225887196 * AcceptedCmp20  +    -0.11545325868036 *
237997    +        AcceptedCmp30  +     1.81326302523772 * AcceptedCmp40
237998    +          +     1.57642234573579 * AcceptedCmp50  +    -0.52645724664984 *
237999    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.4023712256607 * AcceptedCmp10 + -0.46100225887196 * 
AcceptedCmp20 + -0.11545325868036 * AcceptedCmp30 + 1.81326302523772 * AcceptedCmp40 + 
1.57642234573579 * AcceptedCmp50 + -0.52645724664984 * Complain0 ;
238000    +   H1x2_4  = H1x2_4  +    -1.08307715440234 * AcceptedCmp10
238001    +          +     0.10309372709877 * AcceptedCmp20  +    -1.18814330876811 *
238002    +        AcceptedCmp30  +    -1.69102202926075 * AcceptedCmp40
238003    +          +     0.10465943889984 * AcceptedCmp50  +    -0.96523771648083 *
238004    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.08307715440234 * AcceptedCmp10 + 0.10309372709877 * 
AcceptedCmp20 + -1.18814330876811 * AcceptedCmp30 + -1.69102202926075 * AcceptedCmp40 + 
0.10465943889984 * AcceptedCmp50 + -0.96523771648083 * Complain0 ;
238005    +   H1x2_1  = H1x2_1  +     0.57966380694999 * Education2n_Cycle
238006    +          +     1.09807543038463 * EducationBasic  +     0.56896005764417 *
238007    +        EducationGraduation  +     0.78238700450794 * EducationMaster
238008    +          +     0.09735596304222 * Marital_StatusDivorced
238009    +          +    -0.41892050812825 * Marital_StatusMarried
238010    +          +    -1.42753782654911 * Marital_StatusSingle
238011    +          +     2.12640980869845 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.57966380694999 * Education2n_Cycle + 
1.09807543038463 * EducationBasic + 0.56896005764417 * EducationGraduation + 0.78238700450794 
* EducationMaster + 0.09735596304222 * Marital_StatusDivorced + -0.41892050812825 * 
Marital_StatusMarried + -1.42753782654911 * Marital_StatusSingle + 2.12640980869845 * 
Marital_StatusTogether ;
238012    +   H1x2_2  = H1x2_2  +     1.23142964464278 * Education2n_Cycle
238013    +          +    -0.57685007681361 * EducationBasic  +     0.95565027871272 *
238014    +        EducationGraduation  +     1.03407121736627 * EducationMaster
238015    +          +    -0.32415267410507 * Marital_StatusDivorced
238016    +          +     0.49045578856782 * Marital_StatusMarried
238017    +          +    -1.95612005933176 * Marital_StatusSingle
238018    +          +    -0.09380239900044 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.23142964464278 * Education2n_Cycle + 
-0.57685007681361 * EducationBasic + 0.95565027871272 * EducationGraduation + 1.03407121736627 
* EducationMaster + -0.32415267410507 * Marital_StatusDivorced + 0.49045578856782 * 
Marital_StatusMarried + -1.95612005933176 * Marital_StatusSingle + -0.09380239900044 * 
Marital_StatusTogether ;
238019    +   H1x2_3  = H1x2_3  +    -0.59991828858437 * Education2n_Cycle
238020    +          +     0.16738017494874 * EducationBasic  +     1.11954020630495 *
238021    +        EducationGraduation  +    -1.26111004544108 * EducationMaster
238022    +          +    -1.25715350788627 * Marital_StatusDivorced
238023    +          +     0.74269511935299 * Marital_StatusMarried
238024    +          +    -0.27394822792771 * Marital_StatusSingle
238025    +          +     0.32120400150108 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.59991828858437 * Education2n_Cycle + 
0.16738017494874 * EducationBasic + 1.11954020630495 * EducationGraduation + -1.26111004544108 
* EducationMaster + -1.25715350788627 * Marital_StatusDivorced + 0.74269511935299 * 
Marital_StatusMarried + -0.27394822792771 * Marital_StatusSingle + 0.32120400150108 * 
Marital_StatusTogether ;
238026    +   H1x2_4  = H1x2_4  +     0.73858886461182 * Education2n_Cycle
238027    +          +     1.18482398810163 * EducationBasic  +     0.31912715416105 *
238028    +        EducationGraduation  +     -0.7403940659871 * EducationMaster
238029    +          +    -1.42754006114782 * Marital_StatusDivorced
238030    +          +    -0.13979120103654 * Marital_StatusMarried
238031    +          +    -1.66244370644258 * Marital_StatusSingle
238032    +          +     1.29295770867497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.73858886461182 * Education2n_Cycle + 
1.18482398810163 * EducationBasic + 0.31912715416105 * EducationGraduation + -0.7403940659871 
* EducationMaster + -1.42754006114782 * Marital_StatusDivorced + -0.13979120103654 * 
Marital_StatusMarried + -1.66244370644258 * Marital_StatusSingle + 1.29295770867497 * 
Marital_StatusTogether ;
238033    +   H1x2_1  =     0.02486753071365 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02486753071365 + H1x2_1 ;
238034    +   H1x2_2  =     1.30157602008517 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.30157602008517 + H1x2_2 ;
238035    +   H1x2_3  =    -0.71765289173772 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.71765289173772 + H1x2_3 ;
238036    +   H1x2_4  =    -0.28206267191961 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.28206267191961 + H1x2_4 ;
238037    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
238038    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
238039    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
238040    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
238041    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
238042    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
238043    +END;
MPRINT(EM_DIAGRAM):   END;
238044    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
238045    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
238046    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
238047    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
238048    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
238049    +END;
MPRINT(EM_DIAGRAM):   END;
238050    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238051    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
238052    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238053    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
238054    +   H2x1_1  =    -1.34021567967914 * H1x1_1  +    -0.82210150819056 * H1x1_2
238055    +          +      0.2051584088577 * H1x1_3  +    -0.14877251454609 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.34021567967914 * H1x1_1 + -0.82210150819056 * H1x1_2 + 
0.2051584088577 * H1x1_3 + -0.14877251454609 * H1x1_4 ;
238056    +   H2x1_2  =     5.90283136076368 * H1x1_1  +    -7.93891997601848 * H1x1_2
238057    +          +     6.88352608350263 * H1x1_3  +     4.96968417177752 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 5.90283136076368 * H1x1_1 + -7.93891997601848 * H1x1_2 + 
6.88352608350263 * H1x1_3 + 4.96968417177752 * H1x1_4 ;
238058    +   H2x1_3  =    -0.35820258372371 * H1x1_1  +      3.0004195561827 * H1x1_2
238059    +          +    -2.45737828305901 * H1x1_3  +     -3.3701635035096 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.35820258372371 * H1x1_1 + 3.0004195561827 * H1x1_2 + 
-2.45737828305901 * H1x1_3 + -3.3701635035096 * H1x1_4 ;
238060    +   H2x1_4  =    -2.21298094667436 * H1x1_1  +     0.26414252140039 * H1x1_2
238061    +          +     1.09094365218549 * H1x1_3  +     1.52196888791164 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.21298094667436 * H1x1_1 + 0.26414252140039 * H1x1_2 + 
1.09094365218549 * H1x1_3 + 1.52196888791164 * H1x1_4 ;
238062    +   H2x1_1  = H2x1_1  +    -0.84246838752596 * H1x2_1
238063    +          +     0.53874594317309 * H1x2_2  +     0.47956597308168 * H1x2_3
238064    +          +    -0.93255463077914 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.84246838752596 * H1x2_1 + 0.53874594317309 * H1x2_2 
+ 0.47956597308168 * H1x2_3 + -0.93255463077914 * H1x2_4 ;
238065    +   H2x1_2  = H2x1_2  +     -1.9223116287684 * H1x2_1
238066    +          +    -2.37377206970433 * H1x2_2  +    -0.73887953722708 * H1x2_3
238067    +          +     2.71044044080254 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.9223116287684 * H1x2_1 + -2.37377206970433 * H1x2_2 
+ -0.73887953722708 * H1x2_3 + 2.71044044080254 * H1x2_4 ;
238068    +   H2x1_3  = H2x1_3  +     0.53173546674544 * H1x2_1
238069    +          +     1.48831638926533 * H1x2_2  +     2.89231339277069 * H1x2_3
238070    +          +    -2.75774116509863 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.53173546674544 * H1x2_1 + 1.48831638926533 * H1x2_2 
+ 2.89231339277069 * H1x2_3 + -2.75774116509863 * H1x2_4 ;
238071    +   H2x1_4  = H2x1_4  +     1.42086435786687 * H1x2_1
238072    +          +     0.41116169758796 * H1x2_2  +    -1.89087404607062 * H1x2_3
238073    +          +     1.62153254823704 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.42086435786687 * H1x2_1 + 0.41116169758796 * H1x2_2 
+ -1.89087404607062 * H1x2_3 + 1.62153254823704 * H1x2_4 ;
238074    +   H2x1_1  =    -1.75788455741829 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.75788455741829 + H2x1_1 ;
238075    +   H2x1_2  =    -1.23949015246826 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.23949015246826 + H2x1_2 ;
238076    +   H2x1_3  =     0.22552341308337 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.22552341308337 + H2x1_3 ;
238077    +   H2x1_4  =    -0.29261642916715 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.29261642916715 + H2x1_4 ;
238078    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
238079    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
238080    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
238081    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
238082    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
238083    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
238084    +END;
MPRINT(EM_DIAGRAM):   END;
238085    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
238086    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
238087    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
238088    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
238089    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
238090    +END;
MPRINT(EM_DIAGRAM):   END;
238091    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238092    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
238093    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238094    +
238095    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
238096    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
238097    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
238098    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
238099    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
238100    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
238101    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
238102    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
238103    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
238104    +end;
MPRINT(EM_DIAGRAM):   end;
238105    +else do;
MPRINT(EM_DIAGRAM):   else do;
238106    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
238107    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
238108    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
238109    +   end;
MPRINT(EM_DIAGRAM):   end;
238110    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
238111    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
238112    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
238113    +   end;
MPRINT(EM_DIAGRAM):   end;
238114    +   else do;
MPRINT(EM_DIAGRAM):   else do;
238115    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
238116    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
238117    +   end;
MPRINT(EM_DIAGRAM):   end;
238118    +end;
MPRINT(EM_DIAGRAM):   end;
238119    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
238120    +   P_DepVar1  =    -0.01128614443737 * H2x1_1  +     20.5485882709782 * H2x1_2
238121    +          +    -12.1833710389136 * H2x1_3  +     -2.9534639226061 * H2x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.01128614443737 * H2x1_1 + 20.5485882709782 * H2x1_2 + 
-12.1833710389136 * H2x1_3 + -2.9534639226061 * H2x1_4 ;
238122    +   P_DepVar1  =     1.18328906065521 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.18328906065521 + P_DepVar1 ;
238123    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
238124    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
238125    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
238126    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
238127    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
238128    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
238129    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
238130    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
238131    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
238132    +END;
MPRINT(EM_DIAGRAM):   END;
238133    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
238134    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
238135    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
238136    +END;
MPRINT(EM_DIAGRAM):   END;
238137    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
238138    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
238139    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
238140    +END;
MPRINT(EM_DIAGRAM):   END;
238141    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
238142    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
238143    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
238144    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
238145    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
238146    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
238147    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
238148    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238149    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
238150    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238151    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
238152    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
238153    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
238154    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
238155    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
238156    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
238157    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
238158    +END;
MPRINT(EM_DIAGRAM):   END;
238159    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
238160    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
238161    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
238162    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
238163    +* Renaming variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural47;
238164    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238165    +* Renaming Posterior variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural47;
238166    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238167    +drop AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar1;
238168    +AutoNeural47_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar1 = P_DepVar1;
238169    +drop AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar0;
238170    +AutoNeural47_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar0 = P_DepVar0;
238171    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238172    +* Renaming _WARN_ variable for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural47;
238173    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238174    +length AutoNeural47_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural47_WARN_ $4;
238175    +drop AutoNeural47_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_WARN_;
238176    +AutoNeural47_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural47_WARN_ = _WARN_;
238177    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238178    +* Ensmbl57: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 6 of 7;
238179    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238180    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238181    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
238182    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
238183    +* NODE: AutoNeural45;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural45;
238184    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238185    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
238186    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
238187    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
238188    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
238189    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
238190    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
238191    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
238192    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
238193    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
238194    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
238195    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
238196    +LENGTH _WARN_ $4
238197    +      F_DepVar  $ 12
238198    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
238199    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
238200    +
238201    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
238202    +
238203    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
238204    +
238205    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
238206    +
238207    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
238208    +
238209    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
238210    +
238211    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
238212    +
238213    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
238214    +
238215    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
238216    +
238217    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
238218    +
238219    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
238220    +
238221    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
238222    +
238223    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
238224    +
238225    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
238226    +
238227    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
238228    +
238229    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
238230    +
238231    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
238232    +
238233    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
238234    +
238235    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
238236    +
238237    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
238238    +
238239    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
238240    +
238241    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
238242    +
238243    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
238244    +
238245    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
238246    +
238247    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
238248    +
238249    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
238250    +
238251    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
238252    +
238253    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
238254    +
238255    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
238256    +
238257    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
238258    +
238259    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
238260    +
238261    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
238262    +
238263    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
238264    +
238265    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
238266    +
238267    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
238268    +
238269    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
238270    +
238271    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
238272    +
238273    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
238274    +
238275    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
238276    +
238277    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
238278    +
238279    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
238280    +
238281    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
238282    +
238283    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
238284    +
238285    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
238286    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
238287    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
238288    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
238289    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
238290    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
238291    +end;
MPRINT(EM_DIAGRAM):   end;
238292    +else do;
MPRINT(EM_DIAGRAM):   else do;
238293    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
238294    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
238295    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
238296    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
238297    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
238298    +   end;
MPRINT(EM_DIAGRAM):   end;
238299    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
238300    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
238301    +   end;
MPRINT(EM_DIAGRAM):   end;
238302    +   else do;
MPRINT(EM_DIAGRAM):   else do;
238303    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
238304    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
238305    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
238306    +   end;
MPRINT(EM_DIAGRAM):   end;
238307    +end;
MPRINT(EM_DIAGRAM):   end;
238308    +
238309    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
238310    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
238311    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
238312    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
238313    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
238314    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
238315    +end;
MPRINT(EM_DIAGRAM):   end;
238316    +else do;
MPRINT(EM_DIAGRAM):   else do;
238317    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
238318    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
238319    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
238320    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
238321    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
238322    +   end;
MPRINT(EM_DIAGRAM):   end;
238323    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
238324    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
238325    +   end;
MPRINT(EM_DIAGRAM):   end;
238326    +   else do;
MPRINT(EM_DIAGRAM):   else do;
238327    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
238328    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
238329    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
238330    +   end;
MPRINT(EM_DIAGRAM):   end;
238331    +end;
MPRINT(EM_DIAGRAM):   end;
238332    +
238333    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
238334    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
238335    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
238336    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
238337    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
238338    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
238339    +end;
MPRINT(EM_DIAGRAM):   end;
238340    +else do;
MPRINT(EM_DIAGRAM):   else do;
238341    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
238342    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
238343    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
238344    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
238345    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
238346    +   end;
MPRINT(EM_DIAGRAM):   end;
238347    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
238348    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
238349    +   end;
MPRINT(EM_DIAGRAM):   end;
238350    +   else do;
MPRINT(EM_DIAGRAM):   else do;
238351    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
238352    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
238353    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
238354    +   end;
MPRINT(EM_DIAGRAM):   end;
238355    +end;
MPRINT(EM_DIAGRAM):   end;
238356    +
238357    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
238358    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
238359    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
238360    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
238361    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
238362    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
238363    +end;
MPRINT(EM_DIAGRAM):   end;
238364    +else do;
MPRINT(EM_DIAGRAM):   else do;
238365    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
238366    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
238367    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
238368    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
238369    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
238370    +   end;
MPRINT(EM_DIAGRAM):   end;
238371    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
238372    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
238373    +   end;
MPRINT(EM_DIAGRAM):   end;
238374    +   else do;
MPRINT(EM_DIAGRAM):   else do;
238375    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
238376    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
238377    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
238378    +   end;
MPRINT(EM_DIAGRAM):   end;
238379    +end;
MPRINT(EM_DIAGRAM):   end;
238380    +
238381    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
238382    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
238383    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
238384    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
238385    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
238386    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
238387    +end;
MPRINT(EM_DIAGRAM):   end;
238388    +else do;
MPRINT(EM_DIAGRAM):   else do;
238389    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
238390    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
238391    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
238392    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
238393    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
238394    +   end;
MPRINT(EM_DIAGRAM):   end;
238395    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
238396    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
238397    +   end;
MPRINT(EM_DIAGRAM):   end;
238398    +   else do;
MPRINT(EM_DIAGRAM):   else do;
238399    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
238400    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
238401    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
238402    +   end;
MPRINT(EM_DIAGRAM):   end;
238403    +end;
MPRINT(EM_DIAGRAM):   end;
238404    +
238405    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
238406    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
238407    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
238408    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
238409    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
238410    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
238411    +end;
MPRINT(EM_DIAGRAM):   end;
238412    +else do;
MPRINT(EM_DIAGRAM):   else do;
238413    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
238414    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
238415    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
238416    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
238417    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
238418    +   end;
MPRINT(EM_DIAGRAM):   end;
238419    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
238420    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
238421    +   end;
MPRINT(EM_DIAGRAM):   end;
238422    +   else do;
MPRINT(EM_DIAGRAM):   else do;
238423    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
238424    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
238425    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
238426    +   end;
MPRINT(EM_DIAGRAM):   end;
238427    +end;
MPRINT(EM_DIAGRAM):   end;
238428    +
238429    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
238430    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
238431    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
238432    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
238433    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
238434    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
238435    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
238436    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
238437    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
238438    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
238439    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
238440    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
238441    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
238442    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
238443    +end;
MPRINT(EM_DIAGRAM):   end;
238444    +else do;
MPRINT(EM_DIAGRAM):   else do;
238445    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
238446    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
238447    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
238448    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
238449    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
238450    +   end;
MPRINT(EM_DIAGRAM):   end;
238451    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
238452    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
238453    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
238454    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
238455    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
238456    +   end;
MPRINT(EM_DIAGRAM):   end;
238457    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
238458    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
238459    +   end;
MPRINT(EM_DIAGRAM):   end;
238460    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
238461    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
238462    +   end;
MPRINT(EM_DIAGRAM):   end;
238463    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
238464    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
238465    +   end;
MPRINT(EM_DIAGRAM):   end;
238466    +   else do;
MPRINT(EM_DIAGRAM):   else do;
238467    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
238468    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
238469    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
238470    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
238471    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
238472    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
238473    +   end;
MPRINT(EM_DIAGRAM):   end;
238474    +end;
MPRINT(EM_DIAGRAM):   end;
238475    +
238476    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
238477    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
238478    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
238479    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
238480    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
238481    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
238482    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
238483    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
238484    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
238485    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
238486    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
238487    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
238488    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
238489    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
238490    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
238491    +end;
MPRINT(EM_DIAGRAM):   end;
238492    +else do;
MPRINT(EM_DIAGRAM):   else do;
238493    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
238494    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
238495    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
238496    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
238497    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
238498    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
238499    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
238500    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
238501    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
238502    +         end;
MPRINT(EM_DIAGRAM):   end;
238503    +         else do;
MPRINT(EM_DIAGRAM):   else do;
238504    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
238505    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
238506    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
238507    +            end;
MPRINT(EM_DIAGRAM):   end;
238508    +         end;
MPRINT(EM_DIAGRAM):   end;
238509    +      end;
MPRINT(EM_DIAGRAM):   end;
238510    +      else do;
MPRINT(EM_DIAGRAM):   else do;
238511    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
238512    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
238513    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
238514    +         end;
MPRINT(EM_DIAGRAM):   end;
238515    +      end;
MPRINT(EM_DIAGRAM):   end;
238516    +   end;
MPRINT(EM_DIAGRAM):   end;
238517    +   else do;
MPRINT(EM_DIAGRAM):   else do;
238518    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
238519    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
238520    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
238521    +      end;
MPRINT(EM_DIAGRAM):   end;
238522    +      else do;
MPRINT(EM_DIAGRAM):   else do;
238523    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
238524    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
238525    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
238526    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
238527    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
238528    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
238529    +         end;
MPRINT(EM_DIAGRAM):   end;
238530    +      end;
MPRINT(EM_DIAGRAM):   end;
238531    +   end;
MPRINT(EM_DIAGRAM):   end;
238532    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
238533    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
238534    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
238535    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
238536    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
238537    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
238538    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
238539    +   end;
MPRINT(EM_DIAGRAM):   end;
238540    +end;
MPRINT(EM_DIAGRAM):   end;
238541    +
238542    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238543    +*** Checking missing input Interval
238544    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
238545    +
238546    +IF NMISS(
238547    +   Income ,
238548    +   Kidhome ,
238549    +   MntFishProducts ,
238550    +   MntFruits ,
238551    +   MntGoldProds ,
238552    +   MntMeatProducts ,
238553    +   MntSweetProducts ,
238554    +   MntWines ,
238555    +   NumCatalogPurchases ,
238556    +   NumDealsPurchases ,
238557    +   NumStorePurchases ,
238558    +   NumWebPurchases ,
238559    +   NumWebVisitsMonth ,
238560    +   Recency ,
238561    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
238562    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
238563    +
238564    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
238565    +END;
MPRINT(EM_DIAGRAM):   END;
238566    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238567    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
238568    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238569    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
238570    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
238571    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
238572    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
238573    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
238574    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
238575    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
238576    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
238577    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
238578    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
238579    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
238580    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
238581    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
238582    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
238583    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
238584    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
238585    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
238586    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
238587    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
238588    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
238589    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
238590    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
238591    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
238592    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
238593    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
238594    +END;
MPRINT(EM_DIAGRAM):   END;
238595    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
238596    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
238597    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
238598    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
238599    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
238600    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
238601    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
238602    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
238603    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
238604    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
238605    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
238606    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
238607    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
238608    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
238609    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
238610    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
238611    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
238612    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
238613    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
238614    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
238615    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
238616    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
238617    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
238618    +   ELSE S_NumCatalogPurchases
238619    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
238620    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
238621    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
238622    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
238623    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
238624    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
238625    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
238626    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
238627    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
238628    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
238629    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
238630    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
238631    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
238632    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
238633    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
238634    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
238635    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
238636    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
238637    +END;
MPRINT(EM_DIAGRAM):   END;
238638    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238639    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
238640    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238641    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238642    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
238643    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238644    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238645    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
238646    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238647    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
238648    +   H1x1_1  =     0.95463807935638 * S_Income  +     -0.0812123000279 *
238649    +        S_Kidhome  +    -1.17242250965796 * S_MntFishProducts
238650    +          +    -0.39894096707412 * S_MntFruits  +     0.48282664436672 *
238651    +        S_MntGoldProds  +       7.765847453582 * S_MntMeatProducts
238652    +          +    -0.44570165516063 * S_MntSweetProducts
238653    +          +    -1.40872100231855 * S_MntWines  +     1.40783708957732 *
238654    +        S_NumCatalogPurchases  +     1.49155573260533 * S_NumDealsPurchases
238655    +          +    -1.76291210288234 * S_NumStorePurchases
238656    +          +    -2.02392782824649 * S_NumWebPurchases
238657    +          +     1.28490910676992 * S_NumWebVisitsMonth
238658    +          +    -1.30767557862851 * S_Recency  +    -0.59235237740193 *
238659    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.95463807935638 * S_Income + -0.0812123000279 * S_Kidhome + 
-1.17242250965796 * S_MntFishProducts + -0.39894096707412 * S_MntFruits + 0.48282664436672 * 
S_MntGoldProds + 7.765847453582 * S_MntMeatProducts + -0.44570165516063 * S_MntSweetProducts + 
-1.40872100231855 * S_MntWines + 1.40783708957732 * S_NumCatalogPurchases + 1.49155573260533 * 
S_NumDealsPurchases + -1.76291210288234 * S_NumStorePurchases + -2.02392782824649 * 
S_NumWebPurchases + 1.28490910676992 * S_NumWebVisitsMonth + -1.30767557862851 * S_Recency + 
-0.59235237740193 * S_Teenhome ;
238660    +   H1x1_2  =    -0.44691945203456 * S_Income  +     0.39379891740392 *
238661    +        S_Kidhome  +     0.02372129308662 * S_MntFishProducts
238662    +          +     0.20627554813879 * S_MntFruits  +     0.34760356004051 *
238663    +        S_MntGoldProds  +    -0.95672595976635 * S_MntMeatProducts
238664    +          +     0.29239311560831 * S_MntSweetProducts
238665    +          +     1.16929881835698 * S_MntWines  +    -1.00380099933966 *
238666    +        S_NumCatalogPurchases  +     0.13934722329916 * S_NumDealsPurchases
238667    +          +     0.94246962588327 * S_NumStorePurchases
238668    +          +      0.9680353780544 * S_NumWebPurchases
238669    +          +    -2.21882487627334 * S_NumWebVisitsMonth
238670    +          +     2.11904606383155 * S_Recency  +      0.6539185986418 *
238671    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.44691945203456 * S_Income + 0.39379891740392 * S_Kidhome + 
0.02372129308662 * S_MntFishProducts + 0.20627554813879 * S_MntFruits + 0.34760356004051 * 
S_MntGoldProds + -0.95672595976635 * S_MntMeatProducts + 0.29239311560831 * S_MntSweetProducts 
+ 1.16929881835698 * S_MntWines + -1.00380099933966 * S_NumCatalogPurchases + 0.13934722329916 
* S_NumDealsPurchases + 0.94246962588327 * S_NumStorePurchases + 0.9680353780544 * 
S_NumWebPurchases + -2.21882487627334 * S_NumWebVisitsMonth + 2.11904606383155 * S_Recency + 
0.6539185986418 * S_Teenhome ;
238672    +   H1x1_1  = H1x1_1  +    -3.59113827146831 * AcceptedCmp10
238673    +          +    -0.49569953193794 * AcceptedCmp20  +    -0.52167719336095 *
238674    +        AcceptedCmp30  +    -0.86715095433046 * AcceptedCmp40
238675    +          +    -5.62926111624877 * AcceptedCmp50  +     0.11096869316425 *
238676    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -3.59113827146831 * AcceptedCmp10 + -0.49569953193794 
* AcceptedCmp20 + -0.52167719336095 * AcceptedCmp30 + -0.86715095433046 * AcceptedCmp40 + 
-5.62926111624877 * AcceptedCmp50 + 0.11096869316425 * Complain0 ;
238677    +   H1x1_2  = H1x1_2  +     0.46033758530017 * AcceptedCmp10
238678    +          +     0.35006796696269 * AcceptedCmp20  +     0.97811071409034 *
238679    +        AcceptedCmp30  +     0.99898386731466 * AcceptedCmp40
238680    +          +     1.09004749757455 * AcceptedCmp50  +    -0.37828411200383 *
238681    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.46033758530017 * AcceptedCmp10 + 0.35006796696269 * 
AcceptedCmp20 + 0.97811071409034 * AcceptedCmp30 + 0.99898386731466 * AcceptedCmp40 + 
1.09004749757455 * AcceptedCmp50 + -0.37828411200383 * Complain0 ;
238682    +   H1x1_1  = H1x1_1  +    -0.19002184370931 * Education2n_Cycle
238683    +          +      0.4572325462076 * EducationBasic  +     0.18712226653295 *
238684    +        EducationGraduation  +     0.44122744485667 * EducationMaster
238685    +          +    -0.37907342816265 * Marital_StatusDivorced
238686    +          +     0.12610640291685 * Marital_StatusMarried
238687    +          +     0.51984913420219 * Marital_StatusSingle
238688    +          +     0.07401117310472 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19002184370931 * Education2n_Cycle + 
0.4572325462076 * EducationBasic + 0.18712226653295 * EducationGraduation + 0.44122744485667 * 
EducationMaster + -0.37907342816265 * Marital_StatusDivorced + 0.12610640291685 * 
Marital_StatusMarried + 0.51984913420219 * Marital_StatusSingle + 0.07401117310472 * 
Marital_StatusTogether ;
238689    +   H1x1_2  = H1x1_2  +    -0.33166298059049 * Education2n_Cycle
238690    +          +     1.29947160945083 * EducationBasic  +    -0.61327168479974 *
238691    +        EducationGraduation  +    -0.26642525612671 * EducationMaster
238692    +          +    -1.03351623479699 * Marital_StatusDivorced
238693    +          +     1.44541386522162 * Marital_StatusMarried
238694    +          +    -1.03636573521294 * Marital_StatusSingle
238695    +          +     1.72091885709893 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.33166298059049 * Education2n_Cycle + 
1.29947160945083 * EducationBasic + -0.61327168479974 * EducationGraduation + 
-0.26642525612671 * EducationMaster + -1.03351623479699 * Marital_StatusDivorced + 
1.44541386522162 * Marital_StatusMarried + -1.03636573521294 * Marital_StatusSingle + 
1.72091885709893 * Marital_StatusTogether ;
238696    +   H1x1_1  =     10.1449432133402 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 10.1449432133402 + H1x1_1 ;
238697    +   H1x1_2  =    -2.11517502439063 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.11517502439063 + H1x1_2 ;
238698    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
238699    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
238700    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
238701    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
238702    +END;
MPRINT(EM_DIAGRAM):   END;
238703    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
238704    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
238705    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
238706    +END;
MPRINT(EM_DIAGRAM):   END;
238707    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238708    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
238709    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238710    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
238711    +   H1x2_1  =     -0.8682144724836 * S_Income  +      2.3024809346762 *
238712    +        S_Kidhome  +     0.64624727466292 * S_MntFishProducts
238713    +          +    -0.09660410291886 * S_MntFruits  +    -1.79562837605117 *
238714    +        S_MntGoldProds  +      0.1276827318716 * S_MntMeatProducts
238715    +          +    -0.56491281055157 * S_MntSweetProducts
238716    +          +     0.93663442469929 * S_MntWines  +    -0.00899150883311 *
238717    +        S_NumCatalogPurchases  +    -1.22662917925595 * S_NumDealsPurchases
238718    +          +    -0.90340706582786 * S_NumStorePurchases
238719    +          +    -1.91501626179453 * S_NumWebPurchases
238720    +          +     0.10121028558369 * S_NumWebVisitsMonth
238721    +          +     1.60735726265156 * S_Recency  +     0.23538323190125 *
238722    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.8682144724836 * S_Income + 2.3024809346762 * S_Kidhome + 
0.64624727466292 * S_MntFishProducts + -0.09660410291886 * S_MntFruits + -1.79562837605117 * 
S_MntGoldProds + 0.1276827318716 * S_MntMeatProducts + -0.56491281055157 * S_MntSweetProducts 
+ 0.93663442469929 * S_MntWines + -0.00899150883311 * S_NumCatalogPurchases + 
-1.22662917925595 * S_NumDealsPurchases + -0.90340706582786 * S_NumStorePurchases + 
-1.91501626179453 * S_NumWebPurchases + 0.10121028558369 * S_NumWebVisitsMonth + 
1.60735726265156 * S_Recency + 0.23538323190125 * S_Teenhome ;
238723    +   H1x2_2  =    -1.09261687432274 * S_Income  +     1.20111535021385 *
238724    +        S_Kidhome  +    -1.69538442721283 * S_MntFishProducts
238725    +          +    -0.70987820940317 * S_MntFruits  +    -1.60645342742617 *
238726    +        S_MntGoldProds  +    -0.30176111780721 * S_MntMeatProducts
238727    +          +    -0.23001625322332 * S_MntSweetProducts
238728    +          +    -0.14467043598448 * S_MntWines  +     0.41886993157522 *
238729    +        S_NumCatalogPurchases  +     1.96896752447653 * S_NumDealsPurchases
238730    +          +    -2.13716920911877 * S_NumStorePurchases
238731    +          +    -0.33508808117738 * S_NumWebPurchases
238732    +          +     -2.0809737926136 * S_NumWebVisitsMonth
238733    +          +     1.03175786727839 * S_Recency  +      0.7367575698643 *
238734    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.09261687432274 * S_Income + 1.20111535021385 * S_Kidhome + 
-1.69538442721283 * S_MntFishProducts + -0.70987820940317 * S_MntFruits + -1.60645342742617 * 
S_MntGoldProds + -0.30176111780721 * S_MntMeatProducts + -0.23001625322332 * 
S_MntSweetProducts + -0.14467043598448 * S_MntWines + 0.41886993157522 * S_NumCatalogPurchases 
+ 1.96896752447653 * S_NumDealsPurchases + -2.13716920911877 * S_NumStorePurchases + 
-0.33508808117738 * S_NumWebPurchases + -2.0809737926136 * S_NumWebVisitsMonth + 
1.03175786727839 * S_Recency + 0.7367575698643 * S_Teenhome ;
238735    +   H1x2_1  = H1x2_1  +     1.58943051578323 * AcceptedCmp10
238736    +          +     0.09118005069971 * AcceptedCmp20  +     1.19759908387569 *
238737    +        AcceptedCmp30  +     0.89598378494479 * AcceptedCmp40
238738    +          +     0.46816867379718 * AcceptedCmp50  +     1.86944333764097 *
238739    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.58943051578323 * AcceptedCmp10 + 0.09118005069971 * 
AcceptedCmp20 + 1.19759908387569 * AcceptedCmp30 + 0.89598378494479 * AcceptedCmp40 + 
0.46816867379718 * AcceptedCmp50 + 1.86944333764097 * Complain0 ;
238740    +   H1x2_2  = H1x2_2  +    -0.08862601564048 * AcceptedCmp10
238741    +          +    -3.30636530499001 * AcceptedCmp20  +     0.15596560905391 *
238742    +        AcceptedCmp30  +     0.09538395772421 * AcceptedCmp40
238743    +          +     0.55380047577072 * AcceptedCmp50  +    -1.45096025939708 *
238744    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.08862601564048 * AcceptedCmp10 + -3.30636530499001 
* AcceptedCmp20 + 0.15596560905391 * AcceptedCmp30 + 0.09538395772421 * AcceptedCmp40 + 
0.55380047577072 * AcceptedCmp50 + -1.45096025939708 * Complain0 ;
238745    +   H1x2_1  = H1x2_1  +     -0.8656532372301 * Education2n_Cycle
238746    +          +     1.21189313523907 * EducationBasic  +     1.51417472534213 *
238747    +        EducationGraduation  +     0.48964474451872 * EducationMaster
238748    +          +     1.22462877499103 * Marital_StatusDivorced
238749    +          +     0.55976057621985 * Marital_StatusMarried
238750    +          +     -0.3198252517086 * Marital_StatusSingle
238751    +          +     0.23778601487144 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.8656532372301 * Education2n_Cycle + 
1.21189313523907 * EducationBasic + 1.51417472534213 * EducationGraduation + 0.48964474451872 
* EducationMaster + 1.22462877499103 * Marital_StatusDivorced + 0.55976057621985 * 
Marital_StatusMarried + -0.3198252517086 * Marital_StatusSingle + 0.23778601487144 * 
Marital_StatusTogether ;
238752    +   H1x2_2  = H1x2_2  +     0.58231562363597 * Education2n_Cycle
238753    +          +    -0.76544661145643 * EducationBasic  +     -0.6650405134602 *
238754    +        EducationGraduation  +    -1.59533016160829 * EducationMaster
238755    +          +     0.32730811728353 * Marital_StatusDivorced
238756    +          +     1.61519773132998 * Marital_StatusMarried
238757    +          +    -1.42728303824254 * Marital_StatusSingle
238758    +          +     1.39334432128351 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58231562363597 * Education2n_Cycle + 
-0.76544661145643 * EducationBasic + -0.6650405134602 * EducationGraduation + 
-1.59533016160829 * EducationMaster + 0.32730811728353 * Marital_StatusDivorced + 
1.61519773132998 * Marital_StatusMarried + -1.42728303824254 * Marital_StatusSingle + 
1.39334432128351 * Marital_StatusTogether ;
238759    +   H1x2_1  =     1.49479859857755 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.49479859857755 + H1x2_1 ;
238760    +   H1x2_2  =     -0.6918737847278 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.6918737847278 + H1x2_2 ;
238761    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
238762    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
238763    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
238764    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
238765    +END;
MPRINT(EM_DIAGRAM):   END;
238766    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
238767    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
238768    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
238769    +END;
MPRINT(EM_DIAGRAM):   END;
238770    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238771    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
238772    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238773    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
238774    +   H2x1_1  =     1.67705445310922 * H1x1_1  +     -1.4133773927734 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.67705445310922 * H1x1_1 + -1.4133773927734 * H1x1_2 ;
238775    +   H2x1_2  =    -2.14069220527729 * H1x1_1  +     2.80569007785887 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.14069220527729 * H1x1_1 + 2.80569007785887 * H1x1_2 ;
238776    +   H2x1_1  = H2x1_1  +    -0.57216138417153 * H1x2_1
238777    +          +     1.42286315059473 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.57216138417153 * H1x2_1 + 1.42286315059473 * H1x2_2 
;
238778    +   H2x1_2  = H2x1_2  +     1.62250993087733 * H1x2_1
238779    +          +     0.34104856545583 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.62250993087733 * H1x2_1 + 0.34104856545583 * H1x2_2 ;
238780    +   H2x1_1  =    -3.48786428904302 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.48786428904302 + H2x1_1 ;
238781    +   H2x1_2  =    -0.43119827941199 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.43119827941199 + H2x1_2 ;
238782    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
238783    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
238784    +END;
MPRINT(EM_DIAGRAM):   END;
238785    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
238786    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
238787    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
238788    +END;
MPRINT(EM_DIAGRAM):   END;
238789    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238790    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
238791    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238792    +
238793    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
238794    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
238795    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
238796    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
238797    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
238798    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
238799    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
238800    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
238801    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
238802    +end;
MPRINT(EM_DIAGRAM):   end;
238803    +else do;
MPRINT(EM_DIAGRAM):   else do;
238804    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
238805    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
238806    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
238807    +   end;
MPRINT(EM_DIAGRAM):   end;
238808    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
238809    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
238810    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
238811    +   end;
MPRINT(EM_DIAGRAM):   end;
238812    +   else do;
MPRINT(EM_DIAGRAM):   else do;
238813    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
238814    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
238815    +   end;
MPRINT(EM_DIAGRAM):   end;
238816    +end;
MPRINT(EM_DIAGRAM):   end;
238817    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
238818    +   P_DepVar1  =    -9.14009115080293 * H2x1_1  +    -5.28591504747655 * H2x1_2
238819    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.14009115080293 * H2x1_1 + -5.28591504747655 * H2x1_2 ;
238820    +   P_DepVar1  =    -3.08988807073218 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08988807073218 + P_DepVar1 ;
238821    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
238822    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
238823    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
238824    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
238825    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
238826    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
238827    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
238828    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
238829    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
238830    +END;
MPRINT(EM_DIAGRAM):   END;
238831    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
238832    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
238833    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
238834    +END;
MPRINT(EM_DIAGRAM):   END;
238835    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
238836    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
238837    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
238838    +END;
MPRINT(EM_DIAGRAM):   END;
238839    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
238840    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
238841    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
238842    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
238843    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
238844    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
238845    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
238846    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238847    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
238848    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238849    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
238850    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
238851    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
238852    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
238853    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
238854    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
238855    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
238856    +END;
MPRINT(EM_DIAGRAM):   END;
238857    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
238858    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
238859    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
238860    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
238861    +* Renaming variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural45;
238862    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238863    +* Renaming Posterior variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural45;
238864    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238865    +drop AutoNeural45_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar1;
238866    +AutoNeural45_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar1 = P_DepVar1;
238867    +drop AutoNeural45_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar0;
238868    +AutoNeural45_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar0 = P_DepVar0;
238869    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238870    +* Renaming _WARN_ variable for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural45;
238871    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238872    +length AutoNeural45_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural45_WARN_ $4;
238873    +drop AutoNeural45_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_WARN_;
238874    +AutoNeural45_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural45_WARN_ = _WARN_;
238875    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238876    +* Ensmbl57: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 7 of 7;
238877    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238878    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238879    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
238880    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
238881    +* NODE: AutoNeural44;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural44;
238882    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238883    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
238884    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
238885    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
238886    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
238887    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
238888    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
238889    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
238890    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
238891    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
238892    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
238893    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
238894    +LENGTH _WARN_ $4
238895    +      F_DepVar  $ 12
238896    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
238897    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
238898    +
238899    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
238900    +
238901    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
238902    +
238903    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
238904    +
238905    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
238906    +
238907    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
238908    +
238909    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
238910    +
238911    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
238912    +
238913    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
238914    +
238915    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
238916    +
238917    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
238918    +
238919    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
238920    +
238921    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
238922    +
238923    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
238924    +
238925    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
238926    +
238927    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
238928    +
238929    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
238930    +
238931    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
238932    +
238933    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
238934    +
238935    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
238936    +
238937    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
238938    +
238939    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
238940    +
238941    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
238942    +
238943    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
238944    +
238945    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
238946    +
238947    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
238948    +
238949    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
238950    +
238951    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
238952    +
238953    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
238954    +
238955    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
238956    +
238957    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
238958    +
238959    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
238960    +
238961    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
238962    +
238963    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
238964    +
238965    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
238966    +
238967    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
238968    +
238969    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
238970    +
238971    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
238972    +
238973    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
238974    +
238975    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
238976    +
238977    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
238978    +
238979    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
238980    +
238981    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
238982    +
238983    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
238984    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
238985    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
238986    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
238987    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
238988    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
238989    +end;
MPRINT(EM_DIAGRAM):   end;
238990    +else do;
MPRINT(EM_DIAGRAM):   else do;
238991    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
238992    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
238993    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
238994    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
238995    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
238996    +   end;
MPRINT(EM_DIAGRAM):   end;
238997    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
238998    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
238999    +   end;
MPRINT(EM_DIAGRAM):   end;
239000    +   else do;
MPRINT(EM_DIAGRAM):   else do;
239001    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
239002    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
239003    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239004    +   end;
MPRINT(EM_DIAGRAM):   end;
239005    +end;
MPRINT(EM_DIAGRAM):   end;
239006    +
239007    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
239008    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
239009    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
239010    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
239011    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
239012    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239013    +end;
MPRINT(EM_DIAGRAM):   end;
239014    +else do;
MPRINT(EM_DIAGRAM):   else do;
239015    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
239016    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
239017    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
239018    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
239019    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
239020    +   end;
MPRINT(EM_DIAGRAM):   end;
239021    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
239022    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
239023    +   end;
MPRINT(EM_DIAGRAM):   end;
239024    +   else do;
MPRINT(EM_DIAGRAM):   else do;
239025    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
239026    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
239027    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239028    +   end;
MPRINT(EM_DIAGRAM):   end;
239029    +end;
MPRINT(EM_DIAGRAM):   end;
239030    +
239031    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
239032    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
239033    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
239034    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
239035    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
239036    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239037    +end;
MPRINT(EM_DIAGRAM):   end;
239038    +else do;
MPRINT(EM_DIAGRAM):   else do;
239039    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
239040    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
239041    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
239042    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
239043    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
239044    +   end;
MPRINT(EM_DIAGRAM):   end;
239045    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
239046    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
239047    +   end;
MPRINT(EM_DIAGRAM):   end;
239048    +   else do;
MPRINT(EM_DIAGRAM):   else do;
239049    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
239050    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
239051    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239052    +   end;
MPRINT(EM_DIAGRAM):   end;
239053    +end;
MPRINT(EM_DIAGRAM):   end;
239054    +
239055    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
239056    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
239057    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
239058    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
239059    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
239060    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239061    +end;
MPRINT(EM_DIAGRAM):   end;
239062    +else do;
MPRINT(EM_DIAGRAM):   else do;
239063    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
239064    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
239065    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
239066    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
239067    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
239068    +   end;
MPRINT(EM_DIAGRAM):   end;
239069    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
239070    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
239071    +   end;
MPRINT(EM_DIAGRAM):   end;
239072    +   else do;
MPRINT(EM_DIAGRAM):   else do;
239073    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
239074    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
239075    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239076    +   end;
MPRINT(EM_DIAGRAM):   end;
239077    +end;
MPRINT(EM_DIAGRAM):   end;
239078    +
239079    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
239080    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
239081    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
239082    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
239083    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
239084    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239085    +end;
MPRINT(EM_DIAGRAM):   end;
239086    +else do;
MPRINT(EM_DIAGRAM):   else do;
239087    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
239088    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
239089    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
239090    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
239091    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
239092    +   end;
MPRINT(EM_DIAGRAM):   end;
239093    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
239094    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
239095    +   end;
MPRINT(EM_DIAGRAM):   end;
239096    +   else do;
MPRINT(EM_DIAGRAM):   else do;
239097    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
239098    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
239099    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239100    +   end;
MPRINT(EM_DIAGRAM):   end;
239101    +end;
MPRINT(EM_DIAGRAM):   end;
239102    +
239103    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
239104    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
239105    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
239106    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
239107    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
239108    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239109    +end;
MPRINT(EM_DIAGRAM):   end;
239110    +else do;
MPRINT(EM_DIAGRAM):   else do;
239111    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
239112    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
239113    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
239114    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
239115    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
239116    +   end;
MPRINT(EM_DIAGRAM):   end;
239117    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
239118    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
239119    +   end;
MPRINT(EM_DIAGRAM):   end;
239120    +   else do;
MPRINT(EM_DIAGRAM):   else do;
239121    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
239122    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
239123    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239124    +   end;
MPRINT(EM_DIAGRAM):   end;
239125    +end;
MPRINT(EM_DIAGRAM):   end;
239126    +
239127    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
239128    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
239129    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
239130    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
239131    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
239132    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
239133    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
239134    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
239135    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
239136    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
239137    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
239138    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
239139    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
239140    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239141    +end;
MPRINT(EM_DIAGRAM):   end;
239142    +else do;
MPRINT(EM_DIAGRAM):   else do;
239143    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
239144    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
239145    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
239146    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
239147    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
239148    +   end;
MPRINT(EM_DIAGRAM):   end;
239149    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
239150    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
239151    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
239152    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
239153    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
239154    +   end;
MPRINT(EM_DIAGRAM):   end;
239155    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
239156    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
239157    +   end;
MPRINT(EM_DIAGRAM):   end;
239158    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
239159    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
239160    +   end;
MPRINT(EM_DIAGRAM):   end;
239161    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
239162    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
239163    +   end;
MPRINT(EM_DIAGRAM):   end;
239164    +   else do;
MPRINT(EM_DIAGRAM):   else do;
239165    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
239166    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
239167    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
239168    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
239169    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
239170    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239171    +   end;
MPRINT(EM_DIAGRAM):   end;
239172    +end;
MPRINT(EM_DIAGRAM):   end;
239173    +
239174    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
239175    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
239176    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
239177    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
239178    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
239179    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
239180    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
239181    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
239182    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
239183    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
239184    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
239185    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
239186    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
239187    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
239188    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239189    +end;
MPRINT(EM_DIAGRAM):   end;
239190    +else do;
MPRINT(EM_DIAGRAM):   else do;
239191    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
239192    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
239193    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
239194    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
239195    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
239196    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
239197    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
239198    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
239199    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
239200    +         end;
MPRINT(EM_DIAGRAM):   end;
239201    +         else do;
MPRINT(EM_DIAGRAM):   else do;
239202    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
239203    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
239204    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
239205    +            end;
MPRINT(EM_DIAGRAM):   end;
239206    +         end;
MPRINT(EM_DIAGRAM):   end;
239207    +      end;
MPRINT(EM_DIAGRAM):   end;
239208    +      else do;
MPRINT(EM_DIAGRAM):   else do;
239209    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
239210    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
239211    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
239212    +         end;
MPRINT(EM_DIAGRAM):   end;
239213    +      end;
MPRINT(EM_DIAGRAM):   end;
239214    +   end;
MPRINT(EM_DIAGRAM):   end;
239215    +   else do;
MPRINT(EM_DIAGRAM):   else do;
239216    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
239217    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
239218    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
239219    +      end;
MPRINT(EM_DIAGRAM):   end;
239220    +      else do;
MPRINT(EM_DIAGRAM):   else do;
239221    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
239222    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
239223    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
239224    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
239225    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
239226    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
239227    +         end;
MPRINT(EM_DIAGRAM):   end;
239228    +      end;
MPRINT(EM_DIAGRAM):   end;
239229    +   end;
MPRINT(EM_DIAGRAM):   end;
239230    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
239231    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
239232    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
239233    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
239234    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
239235    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
239236    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239237    +   end;
MPRINT(EM_DIAGRAM):   end;
239238    +end;
MPRINT(EM_DIAGRAM):   end;
239239    +
239240    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239241    +*** Checking missing input Interval
239242    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
239243    +
239244    +IF NMISS(
239245    +   Income ,
239246    +   Kidhome ,
239247    +   MntFishProducts ,
239248    +   MntFruits ,
239249    +   MntGoldProds ,
239250    +   MntMeatProducts ,
239251    +   MntSweetProducts ,
239252    +   MntWines ,
239253    +   NumCatalogPurchases ,
239254    +   NumDealsPurchases ,
239255    +   NumStorePurchases ,
239256    +   NumWebPurchases ,
239257    +   NumWebVisitsMonth ,
239258    +   Recency ,
239259    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
239260    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
239261    +
239262    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239263    +END;
MPRINT(EM_DIAGRAM):   END;
239264    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239265    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
239266    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239267    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
239268    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
239269    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
239270    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
239271    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
239272    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
239273    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
239274    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
239275    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
239276    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
239277    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
239278    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
239279    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
239280    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
239281    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
239282    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
239283    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
239284    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
239285    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
239286    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
239287    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
239288    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
239289    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
239290    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
239291    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
239292    +END;
MPRINT(EM_DIAGRAM):   END;
239293    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
239294    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
239295    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
239296    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
239297    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
239298    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
239299    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
239300    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
239301    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
239302    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
239303    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
239304    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
239305    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
239306    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
239307    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
239308    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
239309    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
239310    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
239311    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
239312    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
239313    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
239314    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
239315    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
239316    +   ELSE S_NumCatalogPurchases
239317    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
239318    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
239319    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
239320    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
239321    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
239322    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
239323    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
239324    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
239325    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
239326    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
239327    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
239328    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
239329    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
239330    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
239331    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
239332    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
239333    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
239334    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
239335    +END;
MPRINT(EM_DIAGRAM):   END;
239336    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239337    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
239338    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239339    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239340    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
239341    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239342    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239343    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
239344    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239345    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
239346    +   H1x1_1  =     0.60821559277699 * S_Income  +     0.78245878520575 *
239347    +        S_Kidhome  +     3.02629225919456 * S_MntFishProducts
239348    +          +     1.44208452883494 * S_MntFruits  +     -0.8161710906244 *
239349    +        S_MntGoldProds  +    -5.65479728306763 * S_MntMeatProducts
239350    +          +     2.41993296129914 * S_MntSweetProducts
239351    +          +     16.1416936305202 * S_MntWines  +    -0.30170648366369 *
239352    +        S_NumCatalogPurchases  +    -4.40539425596446 * S_NumDealsPurchases
239353    +          +     7.59231492380468 * S_NumStorePurchases
239354    +          +    -0.47095655313121 * S_NumWebPurchases
239355    +          +     2.65669932372712 * S_NumWebVisitsMonth
239356    +          +     0.92605434462951 * S_Recency  +     0.27595278529362 *
239357    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.60821559277699 * S_Income + 0.78245878520575 * S_Kidhome + 
3.02629225919456 * S_MntFishProducts + 1.44208452883494 * S_MntFruits + -0.8161710906244 * 
S_MntGoldProds + -5.65479728306763 * S_MntMeatProducts + 2.41993296129914 * S_MntSweetProducts 
+ 16.1416936305202 * S_MntWines + -0.30170648366369 * S_NumCatalogPurchases + 
-4.40539425596446 * S_NumDealsPurchases + 7.59231492380468 * S_NumStorePurchases + 
-0.47095655313121 * S_NumWebPurchases + 2.65669932372712 * S_NumWebVisitsMonth + 
0.92605434462951 * S_Recency + 0.27595278529362 * S_Teenhome ;
239358    +   H1x1_1  = H1x1_1  +     2.22617132301519 * AcceptedCmp10
239359    +          +     2.97389891933054 * AcceptedCmp20  +    -0.25852677589668 *
239360    +        AcceptedCmp30  +     0.29740935303964 * AcceptedCmp40
239361    +          +     6.80320564322924 * AcceptedCmp50  +     2.19745012825493 *
239362    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.22617132301519 * AcceptedCmp10 + 2.97389891933054 * 
AcceptedCmp20 + -0.25852677589668 * AcceptedCmp30 + 0.29740935303964 * AcceptedCmp40 + 
6.80320564322924 * AcceptedCmp50 + 2.19745012825493 * Complain0 ;
239363    +   H1x1_1  = H1x1_1  +     2.55205464559227 * Education2n_Cycle
239364    +          +    -0.98577713200024 * EducationBasic  +     1.74619403557996 *
239365    +        EducationGraduation  +    -3.89600865490994 * EducationMaster
239366    +          +     0.44728218776544 * Marital_StatusDivorced
239367    +          +    -1.62458831276183 * Marital_StatusMarried
239368    +          +    -0.42858616367237 * Marital_StatusSingle
239369    +          +    -0.29553796445711 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.55205464559227 * Education2n_Cycle + 
-0.98577713200024 * EducationBasic + 1.74619403557996 * EducationGraduation + 
-3.89600865490994 * EducationMaster + 0.44728218776544 * Marital_StatusDivorced + 
-1.62458831276183 * Marital_StatusMarried + -0.42858616367237 * Marital_StatusSingle + 
-0.29553796445711 * Marital_StatusTogether ;
239370    +   H1x1_1  =     3.59078196202385 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.59078196202385 + H1x1_1 ;
239371    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
239372    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
239373    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
239374    +END;
MPRINT(EM_DIAGRAM):   END;
239375    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
239376    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
239377    +END;
MPRINT(EM_DIAGRAM):   END;
239378    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239379    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
239380    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239381    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
239382    +   H1x2_1  =    -0.99188645731967 * S_Income  +    -0.76771098590807 *
239383    +        S_Kidhome  +      0.8287505285538 * S_MntFishProducts
239384    +          +     0.45999682434351 * S_MntFruits  +      0.4293543408639 *
239385    +        S_MntGoldProds  +    -9.07723801877759 * S_MntMeatProducts
239386    +          +    -1.37098390846164 * S_MntSweetProducts
239387    +          +    -0.51776810310879 * S_MntWines  +    -1.37476010659628 *
239388    +        S_NumCatalogPurchases  +    -1.10451572937532 * S_NumDealsPurchases
239389    +          +     0.58246769316602 * S_NumStorePurchases
239390    +          +     2.72780243156581 * S_NumWebPurchases
239391    +          +    -1.73896446530763 * S_NumWebVisitsMonth
239392    +          +      0.7638963348072 * S_Recency  +     0.26979377997458 *
239393    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.99188645731967 * S_Income + -0.76771098590807 * S_Kidhome + 
0.8287505285538 * S_MntFishProducts + 0.45999682434351 * S_MntFruits + 0.4293543408639 * 
S_MntGoldProds + -9.07723801877759 * S_MntMeatProducts + -1.37098390846164 * 
S_MntSweetProducts + -0.51776810310879 * S_MntWines + -1.37476010659628 * 
S_NumCatalogPurchases + -1.10451572937532 * S_NumDealsPurchases + 0.58246769316602 * 
S_NumStorePurchases + 2.72780243156581 * S_NumWebPurchases + -1.73896446530763 * 
S_NumWebVisitsMonth + 0.7638963348072 * S_Recency + 0.26979377997458 * S_Teenhome ;
239394    +   H1x2_1  = H1x2_1  +     2.43014219686416 * AcceptedCmp10
239395    +          +    -4.74345515374868 * AcceptedCmp20  +     0.62579233621413 *
239396    +        AcceptedCmp30  +     0.64637471234006 * AcceptedCmp40
239397    +          +     1.70767935570268 * AcceptedCmp50  +    -0.94631514600478 *
239398    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 2.43014219686416 * AcceptedCmp10 + -4.74345515374868 * 
AcceptedCmp20 + 0.62579233621413 * AcceptedCmp30 + 0.64637471234006 * AcceptedCmp40 + 
1.70767935570268 * AcceptedCmp50 + -0.94631514600478 * Complain0 ;
239399    +   H1x2_1  = H1x2_1  +    -0.98761508407831 * Education2n_Cycle
239400    +          +     0.88643388278508 * EducationBasic  +    -0.83878459420096 *
239401    +        EducationGraduation  +     1.01072132252596 * EducationMaster
239402    +          +     0.08221095774854 * Marital_StatusDivorced
239403    +          +    -0.13062113450086 * Marital_StatusMarried
239404    +          +      0.1912119500185 * Marital_StatusSingle
239405    +          +     -0.3728209764276 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.98761508407831 * Education2n_Cycle + 
0.88643388278508 * EducationBasic + -0.83878459420096 * EducationGraduation + 1.01072132252596 
* EducationMaster + 0.08221095774854 * Marital_StatusDivorced + -0.13062113450086 * 
Marital_StatusMarried + 0.1912119500185 * Marital_StatusSingle + -0.3728209764276 * 
Marital_StatusTogether ;
239406    +   H1x2_1  =    -3.03275566330542 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -3.03275566330542 + H1x2_1 ;
239407    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
239408    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
239409    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
239410    +END;
MPRINT(EM_DIAGRAM):   END;
239411    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
239412    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
239413    +END;
MPRINT(EM_DIAGRAM):   END;
239414    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239415    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
239416    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239417    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
239418    +   H1x3_1  =    -1.55963738420881 * S_Income  +     0.71964926339388 *
239419    +        S_Kidhome  +    -0.47208108972067 * S_MntFishProducts
239420    +          +      0.6450894987393 * S_MntFruits  +     0.06261669147127 *
239421    +        S_MntGoldProds  +     0.14975522509881 * S_MntMeatProducts
239422    +          +     -0.4771357321143 * S_MntSweetProducts
239423    +          +     0.66709116843422 * S_MntWines  +     0.90111404700817 *
239424    +        S_NumCatalogPurchases  +     0.17723895187345 * S_NumDealsPurchases
239425    +          +     0.38755002642582 * S_NumStorePurchases
239426    +          +     0.65178643881164 * S_NumWebPurchases
239427    +          +    -0.83170832622452 * S_NumWebVisitsMonth
239428    +          +     2.65115346957983 * S_Recency  +     1.27228948382376 *
239429    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.55963738420881 * S_Income + 0.71964926339388 * S_Kidhome + 
-0.47208108972067 * S_MntFishProducts + 0.6450894987393 * S_MntFruits + 0.06261669147127 * 
S_MntGoldProds + 0.14975522509881 * S_MntMeatProducts + -0.4771357321143 * S_MntSweetProducts 
+ 0.66709116843422 * S_MntWines + 0.90111404700817 * S_NumCatalogPurchases + 0.17723895187345 
* S_NumDealsPurchases + 0.38755002642582 * S_NumStorePurchases + 0.65178643881164 * 
S_NumWebPurchases + -0.83170832622452 * S_NumWebVisitsMonth + 2.65115346957983 * S_Recency + 
1.27228948382376 * S_Teenhome ;
239430    +   H1x3_1  = H1x3_1  +     0.29816272417051 * AcceptedCmp10
239431    +          +    -0.71154376870988 * AcceptedCmp20  +    -0.39513051704909 *
239432    +        AcceptedCmp30  +     1.19068615672558 * AcceptedCmp40
239433    +          +     -1.9640044684445 * AcceptedCmp50  +    -0.09395110959453 *
239434    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.29816272417051 * AcceptedCmp10 + -0.71154376870988 * 
AcceptedCmp20 + -0.39513051704909 * AcceptedCmp30 + 1.19068615672558 * AcceptedCmp40 + 
-1.9640044684445 * AcceptedCmp50 + -0.09395110959453 * Complain0 ;
239435    +   H1x3_1  = H1x3_1  +    -0.43809514270646 * Education2n_Cycle
239436    +          +     0.27926697891252 * EducationBasic  +     1.12178568429269 *
239437    +        EducationGraduation  +      0.9696976240987 * EducationMaster
239438    +          +    -0.13574340372484 * Marital_StatusDivorced
239439    +          +     1.26001446384238 * Marital_StatusMarried
239440    +          +    -0.16294618258246 * Marital_StatusSingle
239441    +          +    -0.31789534786196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.43809514270646 * Education2n_Cycle + 
0.27926697891252 * EducationBasic + 1.12178568429269 * EducationGraduation + 0.9696976240987 * 
EducationMaster + -0.13574340372484 * Marital_StatusDivorced + 1.26001446384238 * 
Marital_StatusMarried + -0.16294618258246 * Marital_StatusSingle + -0.31789534786196 * 
Marital_StatusTogether ;
239442    +   H1x3_1  =     0.67537485509128 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67537485509128 + H1x3_1 ;
239443    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
239444    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
239445    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
239446    +END;
MPRINT(EM_DIAGRAM):   END;
239447    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
239448    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
239449    +END;
MPRINT(EM_DIAGRAM):   END;
239450    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239451    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
239452    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239453    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
239454    +   H2x1_1  =     1.66176856703373 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.66176856703373 * H1x1_1 ;
239455    +   H2x1_1  = H2x1_1  +     2.22197952592224 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.22197952592224 * H1x2_1 ;
239456    +   H2x1_1  = H2x1_1  +     1.05148827727504 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.05148827727504 * H1x3_1 ;
239457    +   H2x1_1  =    -1.97152028826028 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.97152028826028 + H2x1_1 ;
239458    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
239459    +END;
MPRINT(EM_DIAGRAM):   END;
239460    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
239461    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
239462    +END;
MPRINT(EM_DIAGRAM):   END;
239463    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239464    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
239465    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239466    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
239467    +   H2x2_1  =     0.45033423451322 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.45033423451322 * H1x1_1 ;
239468    +   H2x2_1  = H2x2_1  +     2.46855103154551 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.46855103154551 * H1x2_1 ;
239469    +   H2x2_1  = H2x2_1  +    -0.77837055555012 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.77837055555012 * H1x3_1 ;
239470    +   H2x2_1  =     -0.9821313826813 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.9821313826813 + H2x2_1 ;
239471    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
239472    +END;
MPRINT(EM_DIAGRAM):   END;
239473    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
239474    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
239475    +END;
MPRINT(EM_DIAGRAM):   END;
239476    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239477    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
239478    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239479    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
239480    +   H3x1_1  =    -4.89394761736069 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -4.89394761736069 * H2x1_1 ;
239481    +   H3x1_1  = H3x1_1  +    -3.02496799626931 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -3.02496799626931 * H2x2_1 ;
239482    +   H3x1_1  =    -2.03654026915424 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -2.03654026915424 + H3x1_1 ;
239483    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
239484    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
239485    +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
239486    +END;
MPRINT(EM_DIAGRAM):   END;
239487    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
239488    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
239489    +END;
MPRINT(EM_DIAGRAM):   END;
239490    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239491    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
239492    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239493    +
239494    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
239495    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
239496    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
239497    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
239498    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
239499    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
239500    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
239501    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
239502    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
239503    +end;
MPRINT(EM_DIAGRAM):   end;
239504    +else do;
MPRINT(EM_DIAGRAM):   else do;
239505    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
239506    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
239507    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
239508    +   end;
MPRINT(EM_DIAGRAM):   end;
239509    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
239510    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
239511    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
239512    +   end;
MPRINT(EM_DIAGRAM):   end;
239513    +   else do;
MPRINT(EM_DIAGRAM):   else do;
239514    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
239515    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
239516    +   end;
MPRINT(EM_DIAGRAM):   end;
239517    +end;
MPRINT(EM_DIAGRAM):   end;
239518    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
239519    +   P_DepVar1  =      11.443408553765 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 11.443408553765 * H3x1_1 ;
239520    +   P_DepVar1  =     0.39570054021751 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.39570054021751 + P_DepVar1 ;
239521    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
239522    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
239523    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
239524    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
239525    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
239526    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
239527    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
239528    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
239529    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
239530    +END;
MPRINT(EM_DIAGRAM):   END;
239531    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
239532    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
239533    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
239534    +END;
MPRINT(EM_DIAGRAM):   END;
239535    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
239536    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
239537    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
239538    +END;
MPRINT(EM_DIAGRAM):   END;
239539    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
239540    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
239541    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
239542    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
239543    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
239544    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
239545    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
239546    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239547    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
239548    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239549    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
239550    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
239551    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
239552    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
239553    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
239554    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
239555    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
239556    +END;
MPRINT(EM_DIAGRAM):   END;
239557    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
239558    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
239559    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
239560    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
239561    +* Renaming variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural44;
239562    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239563    +* Renaming Posterior variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural44;
239564    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239565    +drop AutoNeural44_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar1;
239566    +AutoNeural44_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar1 = P_DepVar1;
239567    +drop AutoNeural44_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar0;
239568    +AutoNeural44_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar0 = P_DepVar0;
239569    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239570    +* Renaming _WARN_ variable for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural44;
239571    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239572    +length AutoNeural44_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural44_WARN_ $4;
239573    +drop AutoNeural44_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_WARN_;
239574    +AutoNeural44_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural44_WARN_ = _WARN_;
239575    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239576    +* Ensmbl57: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Average Posteriors of 7 models;
239577    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239578    +P_DepVar1 = (
239579    +AutoNeural46_P_DepVar1 +
239580    +AutoNeural43_P_DepVar1 +
239581    +AutoNeural42_P_DepVar1 +
239582    +AutoNeural41_P_DepVar1 +
239583    +AutoNeural47_P_DepVar1 +
239584    +AutoNeural45_P_DepVar1 +
239585    +AutoNeural44_P_DepVar1
239586    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural46_P_DepVar1 + AutoNeural43_P_DepVar1 + 
AutoNeural42_P_DepVar1 + AutoNeural41_P_DepVar1 + AutoNeural47_P_DepVar1 + 
AutoNeural45_P_DepVar1 + AutoNeural44_P_DepVar1 )/7;
239587    +P_DepVar0 = (
239588    +AutoNeural46_P_DepVar0 +
239589    +AutoNeural43_P_DepVar0 +
239590    +AutoNeural42_P_DepVar0 +
239591    +AutoNeural41_P_DepVar0 +
239592    +AutoNeural47_P_DepVar0 +
239593    +AutoNeural45_P_DepVar0 +
239594    +AutoNeural44_P_DepVar0
239595    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural46_P_DepVar0 + AutoNeural43_P_DepVar0 + 
AutoNeural42_P_DepVar0 + AutoNeural41_P_DepVar0 + AutoNeural47_P_DepVar0 + 
AutoNeural45_P_DepVar0 + AutoNeural44_P_DepVar0 )/7;
239596    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239597    +* Ensmbl57: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Computing Classification Vars;
239598    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239599    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
239600    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
239601    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
239602    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
239603    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
239604    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
239605    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
239606    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
239607    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
239608    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
239609    +end;
MPRINT(EM_DIAGRAM):   end;
239610    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
239611    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
239612    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
239613    +end;
MPRINT(EM_DIAGRAM):   end;
239614    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
239615    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239616    +* Ensmbl57: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Producing Unformatted variable;
239617    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239618    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
239619    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
239620    +else
239621    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
239622    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239623    +* Ensmbl57: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Computing _WARN_ Variable;
239624    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239625    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
239626    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
239627    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
239628    +if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
239628   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
239629    +if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
239629   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
239630    +if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
239630   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
239631    +if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
239631   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
239632    +if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
239632   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
239633    +if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
239633   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
239634    +if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
239634   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
239635    +if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
239635   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
239636    +if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
239636   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
239637    +if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
239637   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
239638    +if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
239638   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
239639    +if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
239639   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
239640    +if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
239640   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
239641    +if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
239641   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
239642    +if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
239642   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
239643    +if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
239643   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
239644    +if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
239644   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
239645    +if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
239645   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
239646    +if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
239646   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
239647    +if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
239647   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
239648    +if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
239648   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
239649    +if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
239649   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
239650    +if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
239650   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
239651    +if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
239651   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
239652    +if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
239652   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
239653    +if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
239653   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
239654    +if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
239654   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
239655    +if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
239655   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
239656    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239657    +* Ensmbl57: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Computing Residual Vars;
239658    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239659    +if
239660    +F_DepVar NE '1'
239661    +AND F_DepVar NE '0'
239662    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
239663    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
239664    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
239665    +end;
MPRINT(EM_DIAGRAM):   end;
239666    +else do;
MPRINT(EM_DIAGRAM):   else do;
239667    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
239668    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
239669    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
239670    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
239671    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
239672    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
239673    +END;
MPRINT(EM_DIAGRAM):   END;
239674    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
239675     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL57_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL46_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_DIAGRAM):   quit;
239676     quit;
239677     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
239678     filename emflow
239678   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl57\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl57\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring AUTONEURAL46_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239679     *------------------------------------------------------------*;
239680     * Ensmbl57: Scoring AUTONEURAL46_VALIDATE data;
239681     *------------------------------------------------------------*;
239682     data EMWS8.Ensmbl57_VALIDATE
239683     / view=EMWS8.Ensmbl57_VALIDATE
239684     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl57_VALIDATE / view=EMWS8.Ensmbl57_VALIDATE ;
239685     set EMWS8.AutoNeural46_VALIDATE
239686     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural46_VALIDATE ;
239687     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl57\EMFLOWSCORE.sas.
239688    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239689    +* Ensmbl57: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Combine model for DepVar;
239690    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239691    +* Ensmbl57: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 1 of 7;
239692    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239693    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239694    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
239695    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
239696    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
239697    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239698    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239699    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
239700    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
239701    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
239702    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239703    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239704    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
239705    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
239706    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
239707    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239708    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239709    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
239710    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
239711    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
239712    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239713    +
239714    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
239715    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
239715   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
239716    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
239717    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
239718    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
239719    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
239720    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
239721    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239722    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
239723    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
239724    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
239725    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239726    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239727    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
239728    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239729    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
239730    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
239731    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
239732    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239733    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
239734    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
239735    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
239736    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239737    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239738    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
239739    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
239740    +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
239741    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239742    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239743    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
239744    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
239745    +* NODE: AutoNeural46;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural46;
239746    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239747    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
239748    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
239749    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
239750    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
239751    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
239752    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
239753    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
239754    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
239755    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
239756    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
239757    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
239758    +LENGTH _WARN_ $4
239759    +      F_DepVar  $ 12
239760    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
239761    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
239762    +
239763    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
239764    +
239765    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
239766    +
239767    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
239768    +
239769    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
239770    +
239771    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
239772    +
239773    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
239774    +
239775    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
239776    +
239777    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
239778    +
239779    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
239780    +
239781    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
239782    +
239783    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
239784    +
239785    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
239786    +
239787    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
239788    +
239789    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
239790    +
239791    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
239792    +
239793    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
239794    +
239795    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
239796    +
239797    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
239798    +
239799    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
239800    +
239801    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
239802    +
239803    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
239804    +
239805    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
239806    +
239807    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
239808    +
239809    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
239810    +
239811    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
239812    +
239813    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
239814    +
239815    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
239816    +
239817    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
239818    +
239819    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
239820    +
239821    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
239822    +
239823    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
239824    +
239825    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
239826    +
239827    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
239828    +
239829    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
239830    +
239831    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
239832    +
239833    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
239834    +
239835    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
239836    +
239837    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
239838    +
239839    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
239840    +
239841    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
239842    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
239843    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
239844    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
239845    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
239846    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239847    +end;
MPRINT(EM_DIAGRAM):   end;
239848    +else do;
MPRINT(EM_DIAGRAM):   else do;
239849    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
239850    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
239851    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
239852    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
239853    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
239854    +   end;
MPRINT(EM_DIAGRAM):   end;
239855    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
239856    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
239857    +   end;
MPRINT(EM_DIAGRAM):   end;
239858    +   else do;
MPRINT(EM_DIAGRAM):   else do;
239859    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
239860    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
239861    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239862    +   end;
MPRINT(EM_DIAGRAM):   end;
239863    +end;
MPRINT(EM_DIAGRAM):   end;
239864    +
239865    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
239866    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
239867    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
239868    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
239869    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
239870    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239871    +end;
MPRINT(EM_DIAGRAM):   end;
239872    +else do;
MPRINT(EM_DIAGRAM):   else do;
239873    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
239874    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
239875    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
239876    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
239877    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
239878    +   end;
MPRINT(EM_DIAGRAM):   end;
239879    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
239880    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
239881    +   end;
MPRINT(EM_DIAGRAM):   end;
239882    +   else do;
MPRINT(EM_DIAGRAM):   else do;
239883    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
239884    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
239885    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239886    +   end;
MPRINT(EM_DIAGRAM):   end;
239887    +end;
MPRINT(EM_DIAGRAM):   end;
239888    +
239889    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
239890    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
239891    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
239892    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
239893    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
239894    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239895    +end;
MPRINT(EM_DIAGRAM):   end;
239896    +else do;
MPRINT(EM_DIAGRAM):   else do;
239897    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
239898    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
239899    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
239900    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
239901    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
239902    +   end;
MPRINT(EM_DIAGRAM):   end;
239903    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
239904    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
239905    +   end;
MPRINT(EM_DIAGRAM):   end;
239906    +   else do;
MPRINT(EM_DIAGRAM):   else do;
239907    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
239908    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
239909    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239910    +   end;
MPRINT(EM_DIAGRAM):   end;
239911    +end;
MPRINT(EM_DIAGRAM):   end;
239912    +
239913    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
239914    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
239915    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
239916    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
239917    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
239918    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239919    +end;
MPRINT(EM_DIAGRAM):   end;
239920    +else do;
MPRINT(EM_DIAGRAM):   else do;
239921    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
239922    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
239923    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
239924    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
239925    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
239926    +   end;
MPRINT(EM_DIAGRAM):   end;
239927    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
239928    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
239929    +   end;
MPRINT(EM_DIAGRAM):   end;
239930    +   else do;
MPRINT(EM_DIAGRAM):   else do;
239931    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
239932    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
239933    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239934    +   end;
MPRINT(EM_DIAGRAM):   end;
239935    +end;
MPRINT(EM_DIAGRAM):   end;
239936    +
239937    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
239938    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
239939    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
239940    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
239941    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
239942    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239943    +end;
MPRINT(EM_DIAGRAM):   end;
239944    +else do;
MPRINT(EM_DIAGRAM):   else do;
239945    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
239946    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
239947    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
239948    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
239949    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
239950    +   end;
MPRINT(EM_DIAGRAM):   end;
239951    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
239952    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
239953    +   end;
MPRINT(EM_DIAGRAM):   end;
239954    +   else do;
MPRINT(EM_DIAGRAM):   else do;
239955    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
239956    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
239957    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239958    +   end;
MPRINT(EM_DIAGRAM):   end;
239959    +end;
MPRINT(EM_DIAGRAM):   end;
239960    +
239961    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
239962    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
239963    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
239964    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
239965    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
239966    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239967    +end;
MPRINT(EM_DIAGRAM):   end;
239968    +else do;
MPRINT(EM_DIAGRAM):   else do;
239969    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
239970    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
239971    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
239972    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
239973    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
239974    +   end;
MPRINT(EM_DIAGRAM):   end;
239975    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
239976    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
239977    +   end;
MPRINT(EM_DIAGRAM):   end;
239978    +   else do;
MPRINT(EM_DIAGRAM):   else do;
239979    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
239980    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
239981    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239982    +   end;
MPRINT(EM_DIAGRAM):   end;
239983    +end;
MPRINT(EM_DIAGRAM):   end;
239984    +
239985    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
239986    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
239987    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
239988    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
239989    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
239990    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
239991    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
239992    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
239993    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
239994    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
239995    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
239996    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
239997    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
239998    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239999    +end;
MPRINT(EM_DIAGRAM):   end;
240000    +else do;
MPRINT(EM_DIAGRAM):   else do;
240001    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
240002    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
240003    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
240004    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
240005    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
240006    +   end;
MPRINT(EM_DIAGRAM):   end;
240007    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
240008    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
240009    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
240010    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
240011    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
240012    +   end;
MPRINT(EM_DIAGRAM):   end;
240013    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
240014    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
240015    +   end;
MPRINT(EM_DIAGRAM):   end;
240016    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
240017    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
240018    +   end;
MPRINT(EM_DIAGRAM):   end;
240019    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
240020    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
240021    +   end;
MPRINT(EM_DIAGRAM):   end;
240022    +   else do;
MPRINT(EM_DIAGRAM):   else do;
240023    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
240024    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
240025    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
240026    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
240027    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
240028    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240029    +   end;
MPRINT(EM_DIAGRAM):   end;
240030    +end;
MPRINT(EM_DIAGRAM):   end;
240031    +
240032    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
240033    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
240034    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
240035    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
240036    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
240037    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
240038    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
240039    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
240040    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
240041    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
240042    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
240043    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
240044    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
240045    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
240046    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240047    +end;
MPRINT(EM_DIAGRAM):   end;
240048    +else do;
MPRINT(EM_DIAGRAM):   else do;
240049    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
240050    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
240051    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
240052    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
240053    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
240054    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
240055    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
240056    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
240057    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
240058    +         end;
MPRINT(EM_DIAGRAM):   end;
240059    +         else do;
MPRINT(EM_DIAGRAM):   else do;
240060    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
240061    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
240062    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
240063    +            end;
MPRINT(EM_DIAGRAM):   end;
240064    +         end;
MPRINT(EM_DIAGRAM):   end;
240065    +      end;
MPRINT(EM_DIAGRAM):   end;
240066    +      else do;
MPRINT(EM_DIAGRAM):   else do;
240067    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
240068    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
240069    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
240070    +         end;
MPRINT(EM_DIAGRAM):   end;
240071    +      end;
MPRINT(EM_DIAGRAM):   end;
240072    +   end;
MPRINT(EM_DIAGRAM):   end;
240073    +   else do;
MPRINT(EM_DIAGRAM):   else do;
240074    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
240075    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
240076    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
240077    +      end;
MPRINT(EM_DIAGRAM):   end;
240078    +      else do;
MPRINT(EM_DIAGRAM):   else do;
240079    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
240080    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
240081    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
240082    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
240083    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
240084    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
240085    +         end;
MPRINT(EM_DIAGRAM):   end;
240086    +      end;
MPRINT(EM_DIAGRAM):   end;
240087    +   end;
MPRINT(EM_DIAGRAM):   end;
240088    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
240089    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
240090    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
240091    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
240092    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
240093    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
240094    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240095    +   end;
MPRINT(EM_DIAGRAM):   end;
240096    +end;
MPRINT(EM_DIAGRAM):   end;
240097    +
240098    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240099    +*** Checking missing input Interval
240100    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
240101    +
240102    +IF NMISS(
240103    +   Income ,
240104    +   Kidhome ,
240105    +   MntFishProducts ,
240106    +   MntFruits ,
240107    +   MntGoldProds ,
240108    +   MntMeatProducts ,
240109    +   MntSweetProducts ,
240110    +   MntWines ,
240111    +   NumCatalogPurchases ,
240112    +   NumDealsPurchases ,
240113    +   NumStorePurchases ,
240114    +   NumWebPurchases ,
240115    +   NumWebVisitsMonth ,
240116    +   Recency ,
240117    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
240118    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
240119    +
240120    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240121    +END;
MPRINT(EM_DIAGRAM):   END;
240122    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240123    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
240124    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240125    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
240126    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
240127    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
240128    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
240129    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
240130    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
240131    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
240132    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
240133    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
240134    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
240135    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
240136    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
240137    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
240138    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
240139    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
240140    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
240141    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
240142    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
240143    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
240144    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
240145    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
240146    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
240147    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
240148    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
240149    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
240150    +END;
MPRINT(EM_DIAGRAM):   END;
240151    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
240152    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
240153    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
240154    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
240155    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
240156    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
240157    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
240158    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
240159    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
240160    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
240161    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
240162    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
240163    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
240164    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
240165    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
240166    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
240167    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
240168    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
240169    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
240170    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
240171    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
240172    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
240173    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
240174    +   ELSE S_NumCatalogPurchases
240175    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
240176    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
240177    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
240178    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
240179    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
240180    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
240181    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
240182    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
240183    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
240184    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
240185    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
240186    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
240187    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
240188    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
240189    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
240190    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
240191    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
240192    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
240193    +END;
MPRINT(EM_DIAGRAM):   END;
240194    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240195    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
240196    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240197    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240198    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
240199    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240200    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240201    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
240202    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240203    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
240204    +   H1x1_1  =    -0.14779241211238 * S_Income  +     0.12406923960108 *
240205    +        S_Kidhome  +     0.07566108150758 * S_MntFishProducts
240206    +          +     0.04223936357442 * S_MntFruits  +    -0.01414396912246 *
240207    +        S_MntGoldProds  +    -0.43631543928923 * S_MntMeatProducts
240208    +          +      0.0311909552218 * S_MntSweetProducts
240209    +          +      0.1593908004139 * S_MntWines  +    -0.16331402526215 *
240210    +        S_NumCatalogPurchases  +    -0.08123579404919 * S_NumDealsPurchases
240211    +          +     0.12294876865087 * S_NumStorePurchases
240212    +          +     0.11602382379314 * S_NumWebPurchases
240213    +          +    -0.23519567542635 * S_NumWebVisitsMonth
240214    +          +     0.27617232496223 * S_Recency  +     0.06912944740739 *
240215    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14779241211238 * S_Income + 0.12406923960108 * S_Kidhome + 
0.07566108150758 * S_MntFishProducts + 0.04223936357442 * S_MntFruits + -0.01414396912246 * 
S_MntGoldProds + -0.43631543928923 * S_MntMeatProducts + 0.0311909552218 * S_MntSweetProducts 
+ 0.1593908004139 * S_MntWines + -0.16331402526215 * S_NumCatalogPurchases + -0.08123579404919 
* S_NumDealsPurchases + 0.12294876865087 * S_NumStorePurchases + 0.11602382379314 * 
S_NumWebPurchases + -0.23519567542635 * S_NumWebVisitsMonth + 0.27617232496223 * S_Recency + 
0.06912944740739 * S_Teenhome ;
240216    +   H1x1_2  =    -0.13491153011654 * S_Income  +     0.14656938917448 *
240217    +        S_Kidhome  +     0.04457005191996 * S_MntFishProducts
240218    +          +     0.00771761834647 * S_MntFruits  +    -0.11830651019438 *
240219    +        S_MntGoldProds  +     0.06464771115751 * S_MntMeatProducts
240220    +          +     0.00133400054994 * S_MntSweetProducts
240221    +          +    -0.63837598558931 * S_MntWines  +     0.09668222160749 *
240222    +        S_NumCatalogPurchases  +     0.23530173987642 * S_NumDealsPurchases
240223    +          +    -0.49595472235036 * S_NumStorePurchases
240224    +          +    -0.24747548015204 * S_NumWebPurchases
240225    +          +     0.12326047694811 * S_NumWebVisitsMonth
240226    +          +    -0.04929000435218 * S_Recency  +     0.00568113597531 *
240227    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13491153011654 * S_Income + 0.14656938917448 * S_Kidhome + 
0.04457005191996 * S_MntFishProducts + 0.00771761834647 * S_MntFruits + -0.11830651019438 * 
S_MntGoldProds + 0.06464771115751 * S_MntMeatProducts + 0.00133400054994 * S_MntSweetProducts 
+ -0.63837598558931 * S_MntWines + 0.09668222160749 * S_NumCatalogPurchases + 0.23530173987642 
* S_NumDealsPurchases + -0.49595472235036 * S_NumStorePurchases + -0.24747548015204 * 
S_NumWebPurchases + 0.12326047694811 * S_NumWebVisitsMonth + -0.04929000435218 * S_Recency + 
0.00568113597531 * S_Teenhome ;
240228    +   H1x1_3  =     0.13062973754666 * S_Income  +    -0.15311279667585 *
240229    +        S_Kidhome  +      0.0854652628099 * S_MntFishProducts
240230    +          +     0.02260695043189 * S_MntFruits  +    -0.06427354034325 *
240231    +        S_MntGoldProds  +    -0.51556004816788 * S_MntMeatProducts
240232    +          +    -0.03908755288099 * S_MntSweetProducts
240233    +          +    -0.24983513168561 * S_MntWines  +     0.11583370343483 *
240234    +        S_NumCatalogPurchases  +     0.05060583856766 * S_NumDealsPurchases
240235    +          +    -0.20634630081435 * S_NumStorePurchases
240236    +          +    -0.06734935798888 * S_NumWebPurchases
240237    +          +     0.32288250215418 * S_NumWebVisitsMonth
240238    +          +    -0.32978147839937 * S_Recency  +    -0.07420334428475 *
240239    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.13062973754666 * S_Income + -0.15311279667585 * S_Kidhome + 
0.0854652628099 * S_MntFishProducts + 0.02260695043189 * S_MntFruits + -0.06427354034325 * 
S_MntGoldProds + -0.51556004816788 * S_MntMeatProducts + -0.03908755288099 * 
S_MntSweetProducts + -0.24983513168561 * S_MntWines + 0.11583370343483 * S_NumCatalogPurchases 
+ 0.05060583856766 * S_NumDealsPurchases + -0.20634630081435 * S_NumStorePurchases + 
-0.06734935798888 * S_NumWebPurchases + 0.32288250215418 * S_NumWebVisitsMonth + 
-0.32978147839937 * S_Recency + -0.07420334428475 * S_Teenhome ;
240240    +   H1x1_1  = H1x1_1  +     0.14311220987159 * AcceptedCmp10
240241    +          +     0.25596748420576 * AcceptedCmp20  +     0.13199169114019 *
240242    +        AcceptedCmp30  +     0.14111066281846 * AcceptedCmp40
240243    +          +     0.16136804502708 * AcceptedCmp50  +     0.06340055511955 *
240244    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14311220987159 * AcceptedCmp10 + 0.25596748420576 * 
AcceptedCmp20 + 0.13199169114019 * AcceptedCmp30 + 0.14111066281846 * AcceptedCmp40 + 
0.16136804502708 * AcceptedCmp50 + 0.06340055511955 * Complain0 ;
240245    +   H1x1_2  = H1x1_2  +     0.07692946904386 * AcceptedCmp10
240246    +          +     0.10129736414747 * AcceptedCmp20  +    -0.08526063108983 *
240247    +        AcceptedCmp30  +     0.00391518443243 * AcceptedCmp40
240248    +          +    -0.11013908503956 * AcceptedCmp50  +     0.03814032229209 *
240249    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.07692946904386 * AcceptedCmp10 + 0.10129736414747 * 
AcceptedCmp20 + -0.08526063108983 * AcceptedCmp30 + 0.00391518443243 * AcceptedCmp40 + 
-0.11013908503956 * AcceptedCmp50 + 0.03814032229209 * Complain0 ;
240250    +   H1x1_3  = H1x1_3  +    -0.02206432573422 * AcceptedCmp10
240251    +          +     0.22410311196864 * AcceptedCmp20  +    -0.19387020375313 *
240252    +        AcceptedCmp30  +    -0.12058647992586 * AcceptedCmp40
240253    +          +    -0.09809197464918 * AcceptedCmp50  +    -0.09604584189983 *
240254    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02206432573422 * AcceptedCmp10 + 0.22410311196864 * 
AcceptedCmp20 + -0.19387020375313 * AcceptedCmp30 + -0.12058647992586 * AcceptedCmp40 + 
-0.09809197464918 * AcceptedCmp50 + -0.09604584189983 * Complain0 ;
240255    +   H1x1_1  = H1x1_1  +    -0.00017476927899 * Education2n_Cycle
240256    +          +    -0.15306731287208 * EducationBasic  +     0.04951359729631 *
240257    +        EducationGraduation  +     0.07475697967073 * EducationMaster
240258    +          +    -0.04265434587882 * Marital_StatusDivorced
240259    +          +     0.17114014094758 * Marital_StatusMarried
240260    +          +     -0.1537035921296 * Marital_StatusSingle
240261    +          +     0.15023718360478 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00017476927899 * Education2n_Cycle + 
-0.15306731287208 * EducationBasic + 0.04951359729631 * EducationGraduation + 0.07475697967073 
* EducationMaster + -0.04265434587882 * Marital_StatusDivorced + 0.17114014094758 * 
Marital_StatusMarried + -0.1537035921296 * Marital_StatusSingle + 0.15023718360478 * 
Marital_StatusTogether ;
240262    +   H1x1_2  = H1x1_2  +     0.10391719023548 * Education2n_Cycle
240263    +          +    -0.71597921887555 * EducationBasic  +     0.38732833028427 *
240264    +        EducationGraduation  +     0.04507684017588 * EducationMaster
240265    +          +     0.25534272809394 * Marital_StatusDivorced
240266    +          +     0.20034903346804 * Marital_StatusMarried
240267    +          +    -0.38348393943797 * Marital_StatusSingle
240268    +          +     0.15254304652439 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.10391719023548 * Education2n_Cycle + 
-0.71597921887555 * EducationBasic + 0.38732833028427 * EducationGraduation + 0.04507684017588 
* EducationMaster + 0.25534272809394 * Marital_StatusDivorced + 0.20034903346804 * 
Marital_StatusMarried + -0.38348393943797 * Marital_StatusSingle + 0.15254304652439 * 
Marital_StatusTogether ;
240269    +   H1x1_3  = H1x1_3  +     0.06104667656786 * Education2n_Cycle
240270    +          +     -0.0935234366994 * EducationBasic  +     0.09446977823229 *
240271    +        EducationGraduation  +    -0.11683780234266 * EducationMaster
240272    +          +      0.1988416043876 * Marital_StatusDivorced
240273    +          +    -0.21663959478684 * Marital_StatusMarried
240274    +          +     0.06591480171547 * Marital_StatusSingle
240275    +          +    -0.17108581516048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.06104667656786 * Education2n_Cycle + 
-0.0935234366994 * EducationBasic + 0.09446977823229 * EducationGraduation + -0.11683780234266 
* EducationMaster + 0.1988416043876 * Marital_StatusDivorced + -0.21663959478684 * 
Marital_StatusMarried + 0.06591480171547 * Marital_StatusSingle + -0.17108581516048 * 
Marital_StatusTogether ;
240276    +   H1x1_1  =     0.12085771569539 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12085771569539 + H1x1_1 ;
240277    +   H1x1_2  =     1.88026862462696 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.88026862462696 + H1x1_2 ;
240278    +   H1x1_3  =    -1.66768306479405 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66768306479405 + H1x1_3 ;
240279    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
240280    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
240281    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
240282    +END;
MPRINT(EM_DIAGRAM):   END;
240283    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
240284    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
240285    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
240286    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
240287    +END;
MPRINT(EM_DIAGRAM):   END;
240288    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240289    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
240290    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240291    +
240292    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
240293    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
240294    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
240295    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
240296    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
240297    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
240298    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
240299    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
240300    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
240301    +end;
MPRINT(EM_DIAGRAM):   end;
240302    +else do;
MPRINT(EM_DIAGRAM):   else do;
240303    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
240304    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
240305    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
240306    +   end;
MPRINT(EM_DIAGRAM):   end;
240307    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
240308    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
240309    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
240310    +   end;
MPRINT(EM_DIAGRAM):   end;
240311    +   else do;
MPRINT(EM_DIAGRAM):   else do;
240312    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
240313    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
240314    +   end;
MPRINT(EM_DIAGRAM):   end;
240315    +end;
MPRINT(EM_DIAGRAM):   end;
240316    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
240317    +   P_DepVar1  =    -105.465737701328 * H1x1_1  +    -25.9919910307682 * H1x1_2
240318    +          +    -60.7557666068018 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -105.465737701328 * H1x1_1 + -25.9919910307682 * H1x1_2 + 
-60.7557666068018 * H1x1_3 ;
240319    +   P_DepVar1  =     17.0796398396243 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.0796398396243 + P_DepVar1 ;
240320    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
240321    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
240322    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
240323    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
240324    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
240325    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
240326    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
240327    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
240328    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
240329    +END;
MPRINT(EM_DIAGRAM):   END;
240330    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
240331    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
240332    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
240333    +END;
MPRINT(EM_DIAGRAM):   END;
240334    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
240335    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
240336    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
240337    +END;
MPRINT(EM_DIAGRAM):   END;
240338    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
240339    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
240340    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
240341    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
240342    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
240343    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
240344    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
240345    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240346    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
240347    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240348    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
240349    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
240350    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
240351    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
240352    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
240353    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
240354    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
240355    +END;
MPRINT(EM_DIAGRAM):   END;
240356    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
240357    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
240358    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
240359    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
240360    +* Renaming variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural46;
240361    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
240362    +* Renaming Posterior variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural46;
240363    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
240364    +drop AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar1;
240365    +AutoNeural46_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar1 = P_DepVar1;
240366    +drop AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar0;
240367    +AutoNeural46_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar0 = P_DepVar0;
240368    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
240369    +* Renaming _WARN_ variable for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural46;
240370    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
240371    +length AutoNeural46_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural46_WARN_ $4;
240372    +drop AutoNeural46_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_WARN_;
240373    +AutoNeural46_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural46_WARN_ = _WARN_;
240374    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
240375    +* Ensmbl57: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 2 of 7;
240376    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
240377    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
240378    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
240379    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
240380    +* NODE: AutoNeural43;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural43;
240381    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
240382    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
240383    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
240384    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
240385    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
240386    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
240387    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
240388    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
240389    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
240390    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
240391    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
240392    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
240393    +LENGTH _WARN_ $4
240394    +      F_DepVar  $ 12
240395    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
240396    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
240397    +
240398    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
240399    +
240400    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
240401    +
240402    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
240403    +
240404    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
240405    +
240406    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
240407    +
240408    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
240409    +
240410    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
240411    +
240412    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
240413    +
240414    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
240415    +
240416    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
240417    +
240418    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
240419    +
240420    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
240421    +
240422    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
240423    +
240424    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
240425    +
240426    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
240427    +
240428    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
240429    +
240430    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
240431    +
240432    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
240433    +
240434    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
240435    +
240436    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
240437    +
240438    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
240439    +
240440    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
240441    +
240442    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
240443    +
240444    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
240445    +
240446    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
240447    +
240448    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
240449    +
240450    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
240451    +
240452    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
240453    +
240454    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
240455    +
240456    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
240457    +
240458    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
240459    +
240460    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
240461    +
240462    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
240463    +
240464    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
240465    +
240466    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
240467    +
240468    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
240469    +
240470    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
240471    +
240472    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
240473    +
240474    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
240475    +
240476    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
240477    +
240478    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
240479    +
240480    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
240481    +
240482    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
240483    +
240484    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
240485    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
240486    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
240487    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
240488    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
240489    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240490    +end;
MPRINT(EM_DIAGRAM):   end;
240491    +else do;
MPRINT(EM_DIAGRAM):   else do;
240492    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
240493    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
240494    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
240495    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
240496    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
240497    +   end;
MPRINT(EM_DIAGRAM):   end;
240498    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
240499    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
240500    +   end;
MPRINT(EM_DIAGRAM):   end;
240501    +   else do;
MPRINT(EM_DIAGRAM):   else do;
240502    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
240503    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
240504    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240505    +   end;
MPRINT(EM_DIAGRAM):   end;
240506    +end;
MPRINT(EM_DIAGRAM):   end;
240507    +
240508    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
240509    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
240510    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
240511    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
240512    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
240513    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240514    +end;
MPRINT(EM_DIAGRAM):   end;
240515    +else do;
MPRINT(EM_DIAGRAM):   else do;
240516    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
240517    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
240518    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
240519    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
240520    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
240521    +   end;
MPRINT(EM_DIAGRAM):   end;
240522    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
240523    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
240524    +   end;
MPRINT(EM_DIAGRAM):   end;
240525    +   else do;
MPRINT(EM_DIAGRAM):   else do;
240526    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
240527    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
240528    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240529    +   end;
MPRINT(EM_DIAGRAM):   end;
240530    +end;
MPRINT(EM_DIAGRAM):   end;
240531    +
240532    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
240533    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
240534    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
240535    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
240536    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
240537    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240538    +end;
MPRINT(EM_DIAGRAM):   end;
240539    +else do;
MPRINT(EM_DIAGRAM):   else do;
240540    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
240541    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
240542    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
240543    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
240544    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
240545    +   end;
MPRINT(EM_DIAGRAM):   end;
240546    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
240547    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
240548    +   end;
MPRINT(EM_DIAGRAM):   end;
240549    +   else do;
MPRINT(EM_DIAGRAM):   else do;
240550    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
240551    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
240552    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240553    +   end;
MPRINT(EM_DIAGRAM):   end;
240554    +end;
MPRINT(EM_DIAGRAM):   end;
240555    +
240556    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
240557    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
240558    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
240559    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
240560    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
240561    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240562    +end;
MPRINT(EM_DIAGRAM):   end;
240563    +else do;
MPRINT(EM_DIAGRAM):   else do;
240564    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
240565    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
240566    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
240567    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
240568    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
240569    +   end;
MPRINT(EM_DIAGRAM):   end;
240570    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
240571    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
240572    +   end;
MPRINT(EM_DIAGRAM):   end;
240573    +   else do;
MPRINT(EM_DIAGRAM):   else do;
240574    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
240575    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
240576    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240577    +   end;
MPRINT(EM_DIAGRAM):   end;
240578    +end;
MPRINT(EM_DIAGRAM):   end;
240579    +
240580    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
240581    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
240582    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
240583    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
240584    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
240585    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240586    +end;
MPRINT(EM_DIAGRAM):   end;
240587    +else do;
MPRINT(EM_DIAGRAM):   else do;
240588    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
240589    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
240590    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
240591    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
240592    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
240593    +   end;
MPRINT(EM_DIAGRAM):   end;
240594    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
240595    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
240596    +   end;
MPRINT(EM_DIAGRAM):   end;
240597    +   else do;
MPRINT(EM_DIAGRAM):   else do;
240598    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
240599    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
240600    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240601    +   end;
MPRINT(EM_DIAGRAM):   end;
240602    +end;
MPRINT(EM_DIAGRAM):   end;
240603    +
240604    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
240605    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
240606    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
240607    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
240608    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
240609    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240610    +end;
MPRINT(EM_DIAGRAM):   end;
240611    +else do;
MPRINT(EM_DIAGRAM):   else do;
240612    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
240613    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
240614    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
240615    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
240616    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
240617    +   end;
MPRINT(EM_DIAGRAM):   end;
240618    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
240619    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
240620    +   end;
MPRINT(EM_DIAGRAM):   end;
240621    +   else do;
MPRINT(EM_DIAGRAM):   else do;
240622    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
240623    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
240624    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240625    +   end;
MPRINT(EM_DIAGRAM):   end;
240626    +end;
MPRINT(EM_DIAGRAM):   end;
240627    +
240628    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
240629    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
240630    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
240631    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
240632    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
240633    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
240634    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
240635    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
240636    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
240637    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
240638    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
240639    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
240640    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
240641    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240642    +end;
MPRINT(EM_DIAGRAM):   end;
240643    +else do;
MPRINT(EM_DIAGRAM):   else do;
240644    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
240645    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
240646    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
240647    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
240648    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
240649    +   end;
MPRINT(EM_DIAGRAM):   end;
240650    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
240651    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
240652    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
240653    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
240654    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
240655    +   end;
MPRINT(EM_DIAGRAM):   end;
240656    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
240657    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
240658    +   end;
MPRINT(EM_DIAGRAM):   end;
240659    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
240660    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
240661    +   end;
MPRINT(EM_DIAGRAM):   end;
240662    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
240663    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
240664    +   end;
MPRINT(EM_DIAGRAM):   end;
240665    +   else do;
MPRINT(EM_DIAGRAM):   else do;
240666    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
240667    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
240668    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
240669    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
240670    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
240671    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240672    +   end;
MPRINT(EM_DIAGRAM):   end;
240673    +end;
MPRINT(EM_DIAGRAM):   end;
240674    +
240675    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
240676    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
240677    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
240678    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
240679    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
240680    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
240681    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
240682    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
240683    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
240684    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
240685    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
240686    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
240687    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
240688    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
240689    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240690    +end;
MPRINT(EM_DIAGRAM):   end;
240691    +else do;
MPRINT(EM_DIAGRAM):   else do;
240692    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
240693    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
240694    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
240695    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
240696    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
240697    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
240698    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
240699    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
240700    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
240701    +         end;
MPRINT(EM_DIAGRAM):   end;
240702    +         else do;
MPRINT(EM_DIAGRAM):   else do;
240703    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
240704    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
240705    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
240706    +            end;
MPRINT(EM_DIAGRAM):   end;
240707    +         end;
MPRINT(EM_DIAGRAM):   end;
240708    +      end;
MPRINT(EM_DIAGRAM):   end;
240709    +      else do;
MPRINT(EM_DIAGRAM):   else do;
240710    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
240711    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
240712    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
240713    +         end;
MPRINT(EM_DIAGRAM):   end;
240714    +      end;
MPRINT(EM_DIAGRAM):   end;
240715    +   end;
MPRINT(EM_DIAGRAM):   end;
240716    +   else do;
MPRINT(EM_DIAGRAM):   else do;
240717    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
240718    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
240719    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
240720    +      end;
MPRINT(EM_DIAGRAM):   end;
240721    +      else do;
MPRINT(EM_DIAGRAM):   else do;
240722    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
240723    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
240724    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
240725    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
240726    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
240727    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
240728    +         end;
MPRINT(EM_DIAGRAM):   end;
240729    +      end;
MPRINT(EM_DIAGRAM):   end;
240730    +   end;
MPRINT(EM_DIAGRAM):   end;
240731    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
240732    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
240733    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
240734    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
240735    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
240736    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
240737    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240738    +   end;
MPRINT(EM_DIAGRAM):   end;
240739    +end;
MPRINT(EM_DIAGRAM):   end;
240740    +
240741    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240742    +*** Checking missing input Interval
240743    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
240744    +
240745    +IF NMISS(
240746    +   Income ,
240747    +   Kidhome ,
240748    +   MntFishProducts ,
240749    +   MntFruits ,
240750    +   MntGoldProds ,
240751    +   MntMeatProducts ,
240752    +   MntSweetProducts ,
240753    +   MntWines ,
240754    +   NumCatalogPurchases ,
240755    +   NumDealsPurchases ,
240756    +   NumStorePurchases ,
240757    +   NumWebPurchases ,
240758    +   NumWebVisitsMonth ,
240759    +   Recency ,
240760    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
240761    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
240762    +
240763    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240764    +END;
MPRINT(EM_DIAGRAM):   END;
240765    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240766    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
240767    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240768    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
240769    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
240770    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
240771    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
240772    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
240773    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
240774    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
240775    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
240776    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
240777    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
240778    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
240779    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
240780    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
240781    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
240782    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
240783    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
240784    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
240785    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
240786    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
240787    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
240788    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
240789    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
240790    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
240791    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
240792    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
240793    +END;
MPRINT(EM_DIAGRAM):   END;
240794    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
240795    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
240796    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
240797    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
240798    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
240799    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
240800    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
240801    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
240802    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
240803    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
240804    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
240805    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
240806    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
240807    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
240808    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
240809    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
240810    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
240811    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
240812    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
240813    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
240814    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
240815    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
240816    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
240817    +   ELSE S_NumCatalogPurchases
240818    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
240819    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
240820    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
240821    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
240822    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
240823    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
240824    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
240825    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
240826    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
240827    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
240828    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
240829    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
240830    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
240831    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
240832    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
240833    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
240834    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
240835    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
240836    +END;
MPRINT(EM_DIAGRAM):   END;
240837    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240838    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
240839    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240840    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240841    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
240842    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240843    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240844    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
240845    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240846    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
240847    +   H1x1_1  =       0.346744797535 * S_Income  +     1.31363556955711 *
240848    +        S_Kidhome  +    -0.79208756741143 * S_MntFishProducts
240849    +          +     0.68527811841342 * S_MntFruits  +     0.24664684629472 *
240850    +        S_MntGoldProds  +     0.85215044326148 * S_MntMeatProducts
240851    +          +    -0.05146617403327 * S_MntSweetProducts
240852    +          +     0.70199486255944 * S_MntWines  +    -1.00450471229357 *
240853    +        S_NumCatalogPurchases  +     0.20437829426231 * S_NumDealsPurchases
240854    +          +     0.62863110938217 * S_NumStorePurchases
240855    +          +    -0.38696149667878 * S_NumWebPurchases
240856    +          +    -0.64969312889347 * S_NumWebVisitsMonth
240857    +          +      1.3506790879911 * S_Recency  +    -0.14927581282921 *
240858    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.346744797535 * S_Income + 1.31363556955711 * S_Kidhome + 
-0.79208756741143 * S_MntFishProducts + 0.68527811841342 * S_MntFruits + 0.24664684629472 * 
S_MntGoldProds + 0.85215044326148 * S_MntMeatProducts + -0.05146617403327 * S_MntSweetProducts 
+ 0.70199486255944 * S_MntWines + -1.00450471229357 * S_NumCatalogPurchases + 0.20437829426231 
* S_NumDealsPurchases + 0.62863110938217 * S_NumStorePurchases + -0.38696149667878 * 
S_NumWebPurchases + -0.64969312889347 * S_NumWebVisitsMonth + 1.3506790879911 * S_Recency + 
-0.14927581282921 * S_Teenhome ;
240859    +   H1x1_2  =    -0.31812547665326 * S_Income  +    -0.44650104709618 *
240860    +        S_Kidhome  +     0.57229440722364 * S_MntFishProducts
240861    +          +     0.43482820937164 * S_MntFruits  +     -0.2031067703009 *
240862    +        S_MntGoldProds  +    -4.22959784007598 * S_MntMeatProducts
240863    +          +     -0.2837867994991 * S_MntSweetProducts
240864    +          +     0.53009243544309 * S_MntWines  +    -0.69827694726429 *
240865    +        S_NumCatalogPurchases  +    -0.21825886946472 * S_NumDealsPurchases
240866    +          +    -0.54369381190341 * S_NumStorePurchases
240867    +          +     0.67406669261545 * S_NumWebPurchases
240868    +          +     0.33996696883368 * S_NumWebVisitsMonth
240869    +          +    -0.25785000158296 * S_Recency  +     0.29059204886836 *
240870    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31812547665326 * S_Income + -0.44650104709618 * S_Kidhome + 
0.57229440722364 * S_MntFishProducts + 0.43482820937164 * S_MntFruits + -0.2031067703009 * 
S_MntGoldProds + -4.22959784007598 * S_MntMeatProducts + -0.2837867994991 * S_MntSweetProducts 
+ 0.53009243544309 * S_MntWines + -0.69827694726429 * S_NumCatalogPurchases + 
-0.21825886946472 * S_NumDealsPurchases + -0.54369381190341 * S_NumStorePurchases + 
0.67406669261545 * S_NumWebPurchases + 0.33996696883368 * S_NumWebVisitsMonth + 
-0.25785000158296 * S_Recency + 0.29059204886836 * S_Teenhome ;
240871    +   H1x1_3  =    -0.95497484937763 * S_Income  +     0.69843675975299 *
240872    +        S_Kidhome  +    -0.16297234253648 * S_MntFishProducts
240873    +          +    -0.79520871513787 * S_MntFruits  +    -0.29823724505093 *
240874    +        S_MntGoldProds  +    -0.15152860134108 * S_MntMeatProducts
240875    +          +    -0.03465749764322 * S_MntSweetProducts
240876    +          +     0.53127184040091 * S_MntWines  +     0.59135593751067 *
240877    +        S_NumCatalogPurchases  +     0.32132594137215 * S_NumDealsPurchases
240878    +          +      0.4404265130137 * S_NumStorePurchases
240879    +          +     0.34042541893429 * S_NumWebPurchases
240880    +          +    -1.21549916758761 * S_NumWebVisitsMonth
240881    +          +       1.154070329153 * S_Recency  +     0.48728201337678 *
240882    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.95497484937763 * S_Income + 0.69843675975299 * S_Kidhome + 
-0.16297234253648 * S_MntFishProducts + -0.79520871513787 * S_MntFruits + -0.29823724505093 * 
S_MntGoldProds + -0.15152860134108 * S_MntMeatProducts + -0.03465749764322 * 
S_MntSweetProducts + 0.53127184040091 * S_MntWines + 0.59135593751067 * S_NumCatalogPurchases 
+ 0.32132594137215 * S_NumDealsPurchases + 0.4404265130137 * S_NumStorePurchases + 
0.34042541893429 * S_NumWebPurchases + -1.21549916758761 * S_NumWebVisitsMonth + 
1.154070329153 * S_Recency + 0.48728201337678 * S_Teenhome ;
240883    +   H1x1_4  =    -1.18770065121934 * S_Income  +      0.3073609740511 *
240884    +        S_Kidhome  +     0.10352863720245 * S_MntFishProducts
240885    +          +      0.2833318237712 * S_MntFruits  +     0.03154921247745 *
240886    +        S_MntGoldProds  +    -0.21591651561727 * S_MntMeatProducts
240887    +          +    -0.00464679492565 * S_MntSweetProducts
240888    +          +     0.91421960675715 * S_MntWines  +    -1.26836416129835 *
240889    +        S_NumCatalogPurchases  +    -0.70058095897782 * S_NumDealsPurchases
240890    +          +     1.15839307615364 * S_NumStorePurchases
240891    +          +     0.62831972126136 * S_NumWebPurchases
240892    +          +    -1.61962107597882 * S_NumWebVisitsMonth
240893    +          +     1.12858496707441 * S_Recency  +     0.54281989992336 *
240894    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.18770065121934 * S_Income + 0.3073609740511 * S_Kidhome + 
0.10352863720245 * S_MntFishProducts + 0.2833318237712 * S_MntFruits + 0.03154921247745 * 
S_MntGoldProds + -0.21591651561727 * S_MntMeatProducts + -0.00464679492565 * 
S_MntSweetProducts + 0.91421960675715 * S_MntWines + -1.26836416129835 * S_NumCatalogPurchases 
+ -0.70058095897782 * S_NumDealsPurchases + 1.15839307615364 * S_NumStorePurchases + 
0.62831972126136 * S_NumWebPurchases + -1.61962107597882 * S_NumWebVisitsMonth + 
1.12858496707441 * S_Recency + 0.54281989992336 * S_Teenhome ;
240895    +   H1x1_5  =     0.05044786678162 * S_Income  +    -0.28010558310581 *
240896    +        S_Kidhome  +    -0.27691656261205 * S_MntFishProducts
240897    +          +    -0.39089831210828 * S_MntFruits  +    -0.08178998049926 *
240898    +        S_MntGoldProds  +     1.72104172406534 * S_MntMeatProducts
240899    +          +    -0.31125451894603 * S_MntSweetProducts
240900    +          +    -2.29170137059747 * S_MntWines  +     0.63730065528433 *
240901    +        S_NumCatalogPurchases  +     0.88249434950066 * S_NumDealsPurchases
240902    +          +    -1.44151914398807 * S_NumStorePurchases
240903    +          +     -0.5455286038748 * S_NumWebPurchases
240904    +          +     0.92543573664002 * S_NumWebVisitsMonth
240905    +          +    -0.94895006705107 * S_Recency  +     0.12419848895477 *
240906    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.05044786678162 * S_Income + -0.28010558310581 * S_Kidhome + 
-0.27691656261205 * S_MntFishProducts + -0.39089831210828 * S_MntFruits + -0.08178998049926 * 
S_MntGoldProds + 1.72104172406534 * S_MntMeatProducts + -0.31125451894603 * S_MntSweetProducts 
+ -2.29170137059747 * S_MntWines + 0.63730065528433 * S_NumCatalogPurchases + 0.88249434950066 
* S_NumDealsPurchases + -1.44151914398807 * S_NumStorePurchases + -0.5455286038748 * 
S_NumWebPurchases + 0.92543573664002 * S_NumWebVisitsMonth + -0.94895006705107 * S_Recency + 
0.12419848895477 * S_Teenhome ;
240907    +   H1x1_6  =      1.0379959912095 * S_Income  +    -0.86527104445929 *
240908    +        S_Kidhome  +    -0.34569179888564 * S_MntFishProducts
240909    +          +    -0.00109367242014 * S_MntFruits  +      0.1491727982835 *
240910    +        S_MntGoldProds  +     1.59142102470118 * S_MntMeatProducts
240911    +          +    -0.44310159680843 * S_MntSweetProducts
240912    +          +    -0.12978244847526 * S_MntWines  +     1.25298974430925 *
240913    +        S_NumCatalogPurchases  +      0.8343138844265 * S_NumDealsPurchases
240914    +          +    -0.06648303760561 * S_NumStorePurchases
240915    +          +    -0.65122349287903 * S_NumWebPurchases
240916    +          +     1.83555427093429 * S_NumWebVisitsMonth
240917    +          +    -2.44265045013513 * S_Recency  +    -0.96168611481099 *
240918    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0379959912095 * S_Income + -0.86527104445929 * S_Kidhome + 
-0.34569179888564 * S_MntFishProducts + -0.00109367242014 * S_MntFruits + 0.1491727982835 * 
S_MntGoldProds + 1.59142102470118 * S_MntMeatProducts + -0.44310159680843 * S_MntSweetProducts 
+ -0.12978244847526 * S_MntWines + 1.25298974430925 * S_NumCatalogPurchases + 0.8343138844265 
* S_NumDealsPurchases + -0.06648303760561 * S_NumStorePurchases + -0.65122349287903 * 
S_NumWebPurchases + 1.83555427093429 * S_NumWebVisitsMonth + -2.44265045013513 * S_Recency + 
-0.96168611481099 * S_Teenhome ;
240919    +   H1x1_1  = H1x1_1  +    -0.04697238730506 * AcceptedCmp10
240920    +          +     0.17124574303968 * AcceptedCmp20  +     0.24668651391243 *
240921    +        AcceptedCmp30  +    -0.17661157809394 * AcceptedCmp40
240922    +          +    -0.07986471073966 * AcceptedCmp50  +     0.39456441776971 *
240923    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04697238730506 * AcceptedCmp10 + 0.17124574303968 * 
AcceptedCmp20 + 0.24668651391243 * AcceptedCmp30 + -0.17661157809394 * AcceptedCmp40 + 
-0.07986471073966 * AcceptedCmp50 + 0.39456441776971 * Complain0 ;
240924    +   H1x1_2  = H1x1_2  +     0.82032499204552 * AcceptedCmp10
240925    +          +     0.34058590721793 * AcceptedCmp20  +    -0.05139100187265 *
240926    +        AcceptedCmp30  +     0.03047923325443 * AcceptedCmp40
240927    +          +     0.00472330466661 * AcceptedCmp50  +     0.17230692332464 *
240928    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.82032499204552 * AcceptedCmp10 + 0.34058590721793 * 
AcceptedCmp20 + -0.05139100187265 * AcceptedCmp30 + 0.03047923325443 * AcceptedCmp40 + 
0.00472330466661 * AcceptedCmp50 + 0.17230692332464 * Complain0 ;
240929    +   H1x1_3  = H1x1_3  +     0.28530146043163 * AcceptedCmp10
240930    +          +     0.42287366771085 * AcceptedCmp20  +     0.47373508298281 *
240931    +        AcceptedCmp30  +     0.55866504005454 * AcceptedCmp40
240932    +          +     0.82267729772563 * AcceptedCmp50  +     0.19702533550506 *
240933    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.28530146043163 * AcceptedCmp10 + 0.42287366771085 * 
AcceptedCmp20 + 0.47373508298281 * AcceptedCmp30 + 0.55866504005454 * AcceptedCmp40 + 
0.82267729772563 * AcceptedCmp50 + 0.19702533550506 * Complain0 ;
240934    +   H1x1_4  = H1x1_4  +     0.52781659896891 * AcceptedCmp10
240935    +          +     0.42920365778433 * AcceptedCmp20  +     1.17620912558163 *
240936    +        AcceptedCmp30  +     0.60548467992927 * AcceptedCmp40
240937    +          +     0.94474163621099 * AcceptedCmp50  +    -0.78069672963693 *
240938    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.52781659896891 * AcceptedCmp10 + 0.42920365778433 * 
AcceptedCmp20 + 1.17620912558163 * AcceptedCmp30 + 0.60548467992927 * AcceptedCmp40 + 
0.94474163621099 * AcceptedCmp50 + -0.78069672963693 * Complain0 ;
240939    +   H1x1_5  = H1x1_5  +    -0.57412668124255 * AcceptedCmp10
240940    +          +    -0.47940329920743 * AcceptedCmp20  +    -0.32110813917426 *
240941    +        AcceptedCmp30  +    -0.61486082641451 * AcceptedCmp40
240942    +          +    -0.69974277642424 * AcceptedCmp50  +     0.11676881614828 *
240943    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.57412668124255 * AcceptedCmp10 + -0.47940329920743 
* AcceptedCmp20 + -0.32110813917426 * AcceptedCmp30 + -0.61486082641451 * AcceptedCmp40 + 
-0.69974277642424 * AcceptedCmp50 + 0.11676881614828 * Complain0 ;
240944    +   H1x1_6  = H1x1_6  +    -0.84071985342593 * AcceptedCmp10
240945    +          +    -0.93448636634819 * AcceptedCmp20  +    -1.08375331325128 *
240946    +        AcceptedCmp30  +    -1.17713256753961 * AcceptedCmp40
240947    +          +    -1.19701619371219 * AcceptedCmp50  +     0.43593081503911 *
240948    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.84071985342593 * AcceptedCmp10 + -0.93448636634819 
* AcceptedCmp20 + -1.08375331325128 * AcceptedCmp30 + -1.17713256753961 * AcceptedCmp40 + 
-1.19701619371219 * AcceptedCmp50 + 0.43593081503911 * Complain0 ;
240949    +   H1x1_1  = H1x1_1  +     0.16696814950674 * Education2n_Cycle
240950    +          +    -0.44548398836024 * EducationBasic  +    -0.13816962229813 *
240951    +        EducationGraduation  +     0.15082660839612 * EducationMaster
240952    +          +    -0.86711066227375 * Marital_StatusDivorced
240953    +          +     0.40837974583757 * Marital_StatusMarried
240954    +          +    -0.36026722115525 * Marital_StatusSingle
240955    +          +     0.79004200065113 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.16696814950674 * Education2n_Cycle + 
-0.44548398836024 * EducationBasic + -0.13816962229813 * EducationGraduation + 
0.15082660839612 * EducationMaster + -0.86711066227375 * Marital_StatusDivorced + 
0.40837974583757 * Marital_StatusMarried + -0.36026722115525 * Marital_StatusSingle + 
0.79004200065113 * Marital_StatusTogether ;
240956    +   H1x1_2  = H1x1_2  +     0.16842509296504 * Education2n_Cycle
240957    +          +    -0.37448080566378 * EducationBasic  +     0.48861368388392 *
240958    +        EducationGraduation  +    -0.52159546239433 * EducationMaster
240959    +          +     0.32215787204894 * Marital_StatusDivorced
240960    +          +    -0.56445035445224 * Marital_StatusMarried
240961    +          +    -0.19089062631475 * Marital_StatusSingle
240962    +          +    -0.05879603306331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.16842509296504 * Education2n_Cycle + 
-0.37448080566378 * EducationBasic + 0.48861368388392 * EducationGraduation + 
-0.52159546239433 * EducationMaster + 0.32215787204894 * Marital_StatusDivorced + 
-0.56445035445224 * Marital_StatusMarried + -0.19089062631475 * Marital_StatusSingle + 
-0.05879603306331 * Marital_StatusTogether ;
240963    +   H1x1_3  = H1x1_3  +    -0.60123226656743 * Education2n_Cycle
240964    +          +     0.60422871475083 * EducationBasic  +     1.03135359524948 *
240965    +        EducationGraduation  +     0.08569631133746 * EducationMaster
240966    +          +      0.0333599428728 * Marital_StatusDivorced
240967    +          +      0.2536992094527 * Marital_StatusMarried
240968    +          +     0.28814962122223 * Marital_StatusSingle
240969    +          +    -0.07291720333163 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.60123226656743 * Education2n_Cycle + 
0.60422871475083 * EducationBasic + 1.03135359524948 * EducationGraduation + 0.08569631133746 
* EducationMaster + 0.0333599428728 * Marital_StatusDivorced + 0.2536992094527 * 
Marital_StatusMarried + 0.28814962122223 * Marital_StatusSingle + -0.07291720333163 * 
Marital_StatusTogether ;
240970    +   H1x1_4  = H1x1_4  +    -0.31817779304591 * Education2n_Cycle
240971    +          +     0.41715850822951 * EducationBasic  +    -1.42142934931707 *
240972    +        EducationGraduation  +     0.67447448653035 * EducationMaster
240973    +          +    -0.47992692297474 * Marital_StatusDivorced
240974    +          +     1.37810632485566 * Marital_StatusMarried
240975    +          +    -1.37561982457408 * Marital_StatusSingle
240976    +          +     1.44711275454438 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.31817779304591 * Education2n_Cycle + 
0.41715850822951 * EducationBasic + -1.42142934931707 * EducationGraduation + 0.67447448653035 
* EducationMaster + -0.47992692297474 * Marital_StatusDivorced + 1.37810632485566 * 
Marital_StatusMarried + -1.37561982457408 * Marital_StatusSingle + 1.44711275454438 * 
Marital_StatusTogether ;
240977    +   H1x1_5  = H1x1_5  +     0.09777346458802 * Education2n_Cycle
240978    +          +    -0.45960393039978 * EducationBasic  +     0.51146196412307 *
240979    +        EducationGraduation  +    -0.24819773072524 * EducationMaster
240980    +          +     0.19162417091995 * Marital_StatusDivorced
240981    +          +    -0.36068364824761 * Marital_StatusMarried
240982    +          +    -0.12710669526743 * Marital_StatusSingle
240983    +          +    -0.01019314244777 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.09777346458802 * Education2n_Cycle + 
-0.45960393039978 * EducationBasic + 0.51146196412307 * EducationGraduation + 
-0.24819773072524 * EducationMaster + 0.19162417091995 * Marital_StatusDivorced + 
-0.36068364824761 * Marital_StatusMarried + -0.12710669526743 * Marital_StatusSingle + 
-0.01019314244777 * Marital_StatusTogether ;
240984    +   H1x1_6  = H1x1_6  +     0.36097201590287 * Education2n_Cycle
240985    +          +     0.58682328743356 * EducationBasic  +    -0.70502301542305 *
240986    +        EducationGraduation  +    -0.64274217783062 * EducationMaster
240987    +          +     0.23760271729717 * Marital_StatusDivorced
240988    +          +    -1.21454188572959 * Marital_StatusMarried
240989    +          +     1.24284947007232 * Marital_StatusSingle
240990    +          +    -1.39754167839201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.36097201590287 * Education2n_Cycle + 
0.58682328743356 * EducationBasic + -0.70502301542305 * EducationGraduation + 
-0.64274217783062 * EducationMaster + 0.23760271729717 * Marital_StatusDivorced + 
-1.21454188572959 * Marital_StatusMarried + 1.24284947007232 * Marital_StatusSingle + 
-1.39754167839201 * Marital_StatusTogether ;
240991    +   H1x1_1  =    -0.37160255114665 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.37160255114665 + H1x1_1 ;
240992    +   H1x1_2  =    -0.79024897923326 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.79024897923326 + H1x1_2 ;
240993    +   H1x1_3  =    -1.07478535022413 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.07478535022413 + H1x1_3 ;
240994    +   H1x1_4  =    -0.83827859036654 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.83827859036654 + H1x1_4 ;
240995    +   H1x1_5  =      1.0917082111499 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0917082111499 + H1x1_5 ;
240996    +   H1x1_6  =     1.09202728340056 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.09202728340056 + H1x1_6 ;
240997    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
240998    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
240999    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
241000    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
241001    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
241002    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
241003    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
241004    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
241005    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
241006    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
241007    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
241008    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
241009    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
241010    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
241011    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
241012    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
241013    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
241014    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
241015    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
241016    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
241017    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
241018    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
241019    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
241020    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
241021    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
241022    +END;
MPRINT(EM_DIAGRAM):   END;
241023    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
241024    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
241025    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
241026    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
241027    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
241028    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
241029    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
241030    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
241031    +END;
MPRINT(EM_DIAGRAM):   END;
241032    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241033    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
241034    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241035    +
241036    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
241037    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
241038    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
241039    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
241040    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
241041    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
241042    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
241043    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
241044    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
241045    +end;
MPRINT(EM_DIAGRAM):   end;
241046    +else do;
MPRINT(EM_DIAGRAM):   else do;
241047    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
241048    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
241049    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
241050    +   end;
MPRINT(EM_DIAGRAM):   end;
241051    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
241052    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
241053    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
241054    +   end;
MPRINT(EM_DIAGRAM):   end;
241055    +   else do;
MPRINT(EM_DIAGRAM):   else do;
241056    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
241057    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
241058    +   end;
MPRINT(EM_DIAGRAM):   end;
241059    +end;
MPRINT(EM_DIAGRAM):   end;
241060    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
241061    +   P_DepVar1  =    -9.47780447141489 * H1x1_1  +    -8.06096671462069 * H1x1_2
241062    +          +    -4.21167567173811 * H1x1_3  +     -37.599240879379 * H1x1_4
241063    +          +     25.0531533838083 * H1x1_5  +     29.1428275636369 * H1x1_6
241064    +          +     4.90157629063847 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.47780447141489 * H1x1_1 + -8.06096671462069 * H1x1_2 + 
-4.21167567173811 * H1x1_3 + -37.599240879379 * H1x1_4 + 25.0531533838083 * H1x1_5 + 
29.1428275636369 * H1x1_6 + 4.90157629063847 * H1x1_7 ;
241065    +   P_DepVar1  =    -1.97718258496285 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.97718258496285 + P_DepVar1 ;
241066    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
241067    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
241068    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
241069    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
241070    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
241071    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
241072    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
241073    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
241074    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
241075    +END;
MPRINT(EM_DIAGRAM):   END;
241076    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
241077    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
241078    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
241079    +END;
MPRINT(EM_DIAGRAM):   END;
241080    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
241081    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
241082    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
241083    +END;
MPRINT(EM_DIAGRAM):   END;
241084    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
241085    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
241086    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
241087    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
241088    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
241089    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
241090    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
241091    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241092    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
241093    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241094    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
241095    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
241096    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
241097    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
241098    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
241099    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
241100    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
241101    +END;
MPRINT(EM_DIAGRAM):   END;
241102    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
241103    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
241104    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
241105    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
241106    +* Renaming variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural43;
241107    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
241108    +* Renaming Posterior variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural43;
241109    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
241110    +drop AutoNeural43_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar1;
241111    +AutoNeural43_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar1 = P_DepVar1;
241112    +drop AutoNeural43_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar0;
241113    +AutoNeural43_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar0 = P_DepVar0;
241114    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
241115    +* Renaming _WARN_ variable for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural43;
241116    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
241117    +length AutoNeural43_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural43_WARN_ $4;
241118    +drop AutoNeural43_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_WARN_;
241119    +AutoNeural43_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural43_WARN_ = _WARN_;
241120    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
241121    +* Ensmbl57: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 3 of 7;
241122    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
241123    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
241124    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
241125    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
241126    +* NODE: AutoNeural42;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural42;
241127    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
241128    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
241129    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
241130    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
241131    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
241132    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
241133    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
241134    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
241135    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
241136    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
241137    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
241138    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
241139    +LENGTH _WARN_ $4
241140    +      F_DepVar  $ 12
241141    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
241142    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
241143    +
241144    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
241145    +
241146    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
241147    +
241148    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
241149    +
241150    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
241151    +
241152    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
241153    +
241154    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
241155    +
241156    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
241157    +
241158    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
241159    +
241160    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
241161    +
241162    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
241163    +
241164    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
241165    +
241166    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
241167    +
241168    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
241169    +
241170    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
241171    +
241172    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
241173    +
241174    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
241175    +
241176    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
241177    +
241178    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
241179    +
241180    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
241181    +
241182    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
241183    +
241184    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
241185    +
241186    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
241187    +
241188    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
241189    +
241190    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
241191    +
241192    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
241193    +
241194    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
241195    +
241196    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
241197    +
241198    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
241199    +
241200    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
241201    +
241202    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
241203    +
241204    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
241205    +
241206    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
241207    +
241208    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
241209    +
241210    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
241211    +
241212    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
241213    +
241214    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
241215    +
241216    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
241217    +
241218    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
241219    +
241220    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
241221    +
241222    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
241223    +
241224    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
241225    +
241226    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
241227    +
241228    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
241229    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
241230    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
241231    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
241232    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
241233    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241234    +end;
MPRINT(EM_DIAGRAM):   end;
241235    +else do;
MPRINT(EM_DIAGRAM):   else do;
241236    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
241237    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
241238    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
241239    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
241240    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
241241    +   end;
MPRINT(EM_DIAGRAM):   end;
241242    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
241243    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
241244    +   end;
MPRINT(EM_DIAGRAM):   end;
241245    +   else do;
MPRINT(EM_DIAGRAM):   else do;
241246    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
241247    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
241248    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241249    +   end;
MPRINT(EM_DIAGRAM):   end;
241250    +end;
MPRINT(EM_DIAGRAM):   end;
241251    +
241252    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
241253    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
241254    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
241255    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
241256    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
241257    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241258    +end;
MPRINT(EM_DIAGRAM):   end;
241259    +else do;
MPRINT(EM_DIAGRAM):   else do;
241260    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
241261    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
241262    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
241263    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
241264    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
241265    +   end;
MPRINT(EM_DIAGRAM):   end;
241266    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
241267    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
241268    +   end;
MPRINT(EM_DIAGRAM):   end;
241269    +   else do;
MPRINT(EM_DIAGRAM):   else do;
241270    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
241271    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
241272    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241273    +   end;
MPRINT(EM_DIAGRAM):   end;
241274    +end;
MPRINT(EM_DIAGRAM):   end;
241275    +
241276    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
241277    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
241278    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
241279    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
241280    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
241281    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241282    +end;
MPRINT(EM_DIAGRAM):   end;
241283    +else do;
MPRINT(EM_DIAGRAM):   else do;
241284    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
241285    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
241286    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
241287    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
241288    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
241289    +   end;
MPRINT(EM_DIAGRAM):   end;
241290    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
241291    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
241292    +   end;
MPRINT(EM_DIAGRAM):   end;
241293    +   else do;
MPRINT(EM_DIAGRAM):   else do;
241294    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
241295    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
241296    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241297    +   end;
MPRINT(EM_DIAGRAM):   end;
241298    +end;
MPRINT(EM_DIAGRAM):   end;
241299    +
241300    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
241301    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
241302    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
241303    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
241304    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
241305    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241306    +end;
MPRINT(EM_DIAGRAM):   end;
241307    +else do;
MPRINT(EM_DIAGRAM):   else do;
241308    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
241309    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
241310    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
241311    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
241312    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
241313    +   end;
MPRINT(EM_DIAGRAM):   end;
241314    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
241315    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
241316    +   end;
MPRINT(EM_DIAGRAM):   end;
241317    +   else do;
MPRINT(EM_DIAGRAM):   else do;
241318    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
241319    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
241320    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241321    +   end;
MPRINT(EM_DIAGRAM):   end;
241322    +end;
MPRINT(EM_DIAGRAM):   end;
241323    +
241324    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
241325    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
241326    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
241327    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
241328    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
241329    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241330    +end;
MPRINT(EM_DIAGRAM):   end;
241331    +else do;
MPRINT(EM_DIAGRAM):   else do;
241332    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
241333    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
241334    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
241335    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
241336    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
241337    +   end;
MPRINT(EM_DIAGRAM):   end;
241338    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
241339    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
241340    +   end;
MPRINT(EM_DIAGRAM):   end;
241341    +   else do;
MPRINT(EM_DIAGRAM):   else do;
241342    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
241343    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
241344    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241345    +   end;
MPRINT(EM_DIAGRAM):   end;
241346    +end;
MPRINT(EM_DIAGRAM):   end;
241347    +
241348    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
241349    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
241350    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
241351    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
241352    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
241353    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241354    +end;
MPRINT(EM_DIAGRAM):   end;
241355    +else do;
MPRINT(EM_DIAGRAM):   else do;
241356    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
241357    +   _dm12 = put( Complain , BEST. );
The SAS System

MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
241358    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
241359    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
241360    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
241361    +   end;
MPRINT(EM_DIAGRAM):   end;
241362    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
241363    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
241364    +   end;
MPRINT(EM_DIAGRAM):   end;
241365    +   else do;
MPRINT(EM_DIAGRAM):   else do;
241366    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
241367    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
241368    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241369    +   end;
MPRINT(EM_DIAGRAM):   end;
241370    +end;
MPRINT(EM_DIAGRAM):   end;
241371    +
241372    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
241373    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
241374    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
241375    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
241376    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
241377    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
241378    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
241379    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
241380    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
241381    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
241382    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
241383    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
241384    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
241385    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241386    +end;
MPRINT(EM_DIAGRAM):   end;
241387    +else do;
MPRINT(EM_DIAGRAM):   else do;
241388    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
241389    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
241390    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
241391    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
241392    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
241393    +   end;
MPRINT(EM_DIAGRAM):   end;
241394    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
241395    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
241396    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
241397    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
241398    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
241399    +   end;
MPRINT(EM_DIAGRAM):   end;
241400    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
241401    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
241402    +   end;
MPRINT(EM_DIAGRAM):   end;
241403    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
241404    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
241405    +   end;
MPRINT(EM_DIAGRAM):   end;
241406    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
241407    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
241408    +   end;
MPRINT(EM_DIAGRAM):   end;
241409    +   else do;
MPRINT(EM_DIAGRAM):   else do;
241410    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
241411    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
241412    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
241413    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
241414    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
241415    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241416    +   end;
MPRINT(EM_DIAGRAM):   end;
241417    +end;
MPRINT(EM_DIAGRAM):   end;
241418    +
241419    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
241420    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
241421    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
241422    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
241423    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
241424    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
241425    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
241426    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
241427    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
241428    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
241429    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
241430    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
241431    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
241432    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
241433    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241434    +end;
MPRINT(EM_DIAGRAM):   end;
241435    +else do;
MPRINT(EM_DIAGRAM):   else do;
241436    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
241437    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
241438    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
241439    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
241440    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
241441    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
241442    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
241443    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
241444    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
241445    +         end;
MPRINT(EM_DIAGRAM):   end;
241446    +         else do;
MPRINT(EM_DIAGRAM):   else do;
241447    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
241448    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
241449    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
241450    +            end;
MPRINT(EM_DIAGRAM):   end;
241451    +         end;
MPRINT(EM_DIAGRAM):   end;
241452    +      end;
MPRINT(EM_DIAGRAM):   end;
241453    +      else do;
MPRINT(EM_DIAGRAM):   else do;
241454    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
241455    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
241456    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
241457    +         end;
MPRINT(EM_DIAGRAM):   end;
241458    +      end;
MPRINT(EM_DIAGRAM):   end;
241459    +   end;
MPRINT(EM_DIAGRAM):   end;
241460    +   else do;
MPRINT(EM_DIAGRAM):   else do;
241461    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
241462    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
241463    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
241464    +      end;
MPRINT(EM_DIAGRAM):   end;
241465    +      else do;
MPRINT(EM_DIAGRAM):   else do;
241466    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
241467    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
241468    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
241469    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
241470    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
241471    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
241472    +         end;
MPRINT(EM_DIAGRAM):   end;
241473    +      end;
MPRINT(EM_DIAGRAM):   end;
241474    +   end;
MPRINT(EM_DIAGRAM):   end;
241475    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
241476    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
241477    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
241478    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
241479    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
241480    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
241481    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241482    +   end;
MPRINT(EM_DIAGRAM):   end;
241483    +end;
MPRINT(EM_DIAGRAM):   end;
241484    +
241485    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241486    +*** Checking missing input Interval
241487    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
241488    +
241489    +IF NMISS(
241490    +   Income ,
241491    +   Kidhome ,
241492    +   MntFishProducts ,
241493    +   MntFruits ,
241494    +   MntGoldProds ,
241495    +   MntMeatProducts ,
241496    +   MntSweetProducts ,
241497    +   MntWines ,
241498    +   NumCatalogPurchases ,
241499    +   NumDealsPurchases ,
241500    +   NumStorePurchases ,
241501    +   NumWebPurchases ,
241502    +   NumWebVisitsMonth ,
241503    +   Recency ,
241504    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
241505    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
241506    +
241507    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241508    +END;
MPRINT(EM_DIAGRAM):   END;
241509    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241510    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
241511    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241512    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
241513    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
241514    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
241515    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
241516    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
241517    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
241518    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
241519    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
241520    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
241521    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
241522    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
241523    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
241524    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
241525    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
241526    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
241527    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
241528    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
241529    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
241530    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
241531    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
241532    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
241533    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
241534    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
241535    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
241536    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
241537    +END;
MPRINT(EM_DIAGRAM):   END;
241538    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
241539    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
241540    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
241541    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
241542    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
241543    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
241544    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
241545    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
241546    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
241547    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
241548    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
241549    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
241550    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
241551    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
241552    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
241553    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
241554    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
241555    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
241556    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
241557    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
241558    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
241559    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
241560    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
241561    +   ELSE S_NumCatalogPurchases
241562    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
241563    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
241564    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
241565    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
241566    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
241567    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
241568    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
241569    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
241570    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
241571    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
241572    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
241573    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
241574    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
241575    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
241576    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
241577    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
241578    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
241579    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
241580    +END;
MPRINT(EM_DIAGRAM):   END;
241581    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241582    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
241583    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241584    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241585    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
241586    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241587    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241588    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
241589    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241590    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
241591    +   H1x1_1  =    -0.61752831165943 * S_Income  +    -0.31903138173339 *
241592    +        S_Kidhome  +     1.07644564135555 * S_MntFishProducts
241593    +          +     0.65454839379318 * S_MntFruits  +    -0.14959507038031 *
241594    +        S_MntGoldProds  +    -5.93493457217182 * S_MntMeatProducts
241595    +          +     0.13203247258141 * S_MntSweetProducts
241596    +          +     2.56195281130506 * S_MntWines  +    -1.36884424558249 *
241597    +        S_NumCatalogPurchases  +    -0.86876556455629 * S_NumDealsPurchases
241598    +          +     1.48881174203434 * S_NumStorePurchases
241599    +          +     2.06403591844726 * S_NumWebPurchases
241600    +          +    -0.09535558759694 * S_NumWebVisitsMonth
241601    +          +    -0.05978552253526 * S_Recency  +     0.15007435747359 *
241602    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.61752831165943 * S_Income + -0.31903138173339 * S_Kidhome + 
1.07644564135555 * S_MntFishProducts + 0.65454839379318 * S_MntFruits + -0.14959507038031 * 
S_MntGoldProds + -5.93493457217182 * S_MntMeatProducts + 0.13203247258141 * S_MntSweetProducts 
+ 2.56195281130506 * S_MntWines + -1.36884424558249 * S_NumCatalogPurchases + 
-0.86876556455629 * S_NumDealsPurchases + 1.48881174203434 * S_NumStorePurchases + 
2.06403591844726 * S_NumWebPurchases + -0.09535558759694 * S_NumWebVisitsMonth + 
-0.05978552253526 * S_Recency + 0.15007435747359 * S_Teenhome ;
241603    +   H1x1_2  =     0.26608479656795 * S_Income  +    -1.19991366958494 *
241604    +        S_Kidhome  +    -0.06930701896636 * S_MntFishProducts
241605    +          +    -0.24491476793503 * S_MntFruits  +     0.61341878614078 *
241606    +        S_MntGoldProds  +     1.20573081926043 * S_MntMeatProducts
241607    +          +      0.3852767951223 * S_MntSweetProducts
241608    +          +     1.08228250264945 * S_MntWines  +     0.60642303652873 *
241609    +        S_NumCatalogPurchases  +     0.15318179926318 * S_NumDealsPurchases
241610    +          +     0.87686526091024 * S_NumStorePurchases
241611    +          +     0.48807967312664 * S_NumWebPurchases
241612    +          +     2.42770807785792 * S_NumWebVisitsMonth
241613    +          +      -2.239057176324 * S_Recency  +    -0.38694456406673 *
241614    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26608479656795 * S_Income + -1.19991366958494 * S_Kidhome + 
-0.06930701896636 * S_MntFishProducts + -0.24491476793503 * S_MntFruits + 0.61341878614078 * 
S_MntGoldProds + 1.20573081926043 * S_MntMeatProducts + 0.3852767951223 * S_MntSweetProducts + 
1.08228250264945 * S_MntWines + 0.60642303652873 * S_NumCatalogPurchases + 0.15318179926318 * 
S_NumDealsPurchases + 0.87686526091024 * S_NumStorePurchases + 0.48807967312664 * 
S_NumWebPurchases + 2.42770807785792 * S_NumWebVisitsMonth + -2.239057176324 * S_Recency + 
-0.38694456406673 * S_Teenhome ;
241615    +   H1x1_3  =     2.14026785899485 * S_Income  +     0.71085813088393 *
241616    +        S_Kidhome  +    -0.12119457643873 * S_MntFishProducts
241617    +          +     0.52522197349122 * S_MntFruits  +     0.44706934196977 *
241618    +        S_MntGoldProds  +     1.26484530402043 * S_MntMeatProducts
241619    +          +      0.4461192743946 * S_MntSweetProducts
241620    +          +     0.68849791421776 * S_MntWines  +     0.73332275156447 *
241621    +        S_NumCatalogPurchases  +     0.25950906585502 * S_NumDealsPurchases
241622    +          +     1.26831094932108 * S_NumStorePurchases
241623    +          +     0.50819627174451 * S_NumWebPurchases
241624    +          +      0.5463426309003 * S_NumWebVisitsMonth
241625    +          +    -1.45156203280121 * S_Recency  +    -0.99155600458731 *
241626    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.14026785899485 * S_Income + 0.71085813088393 * S_Kidhome + 
-0.12119457643873 * S_MntFishProducts + 0.52522197349122 * S_MntFruits + 0.44706934196977 * 
S_MntGoldProds + 1.26484530402043 * S_MntMeatProducts + 0.4461192743946 * S_MntSweetProducts + 
0.68849791421776 * S_MntWines + 0.73332275156447 * S_NumCatalogPurchases + 0.25950906585502 * 
S_NumDealsPurchases + 1.26831094932108 * S_NumStorePurchases + 0.50819627174451 * 
S_NumWebPurchases + 0.5463426309003 * S_NumWebVisitsMonth + -1.45156203280121 * S_Recency + 
-0.99155600458731 * S_Teenhome ;
241627    +   H1x1_4  =     0.28134858392415 * S_Income  +     1.57838616473011 *
241628    +        S_Kidhome  +     0.01685933792865 * S_MntFishProducts
241629    +          +     0.64818795957189 * S_MntFruits  +     0.44053765721056 *
241630    +        S_MntGoldProds  +     -0.0350414210023 * S_MntMeatProducts
241631    +          +     0.73630834236265 * S_MntSweetProducts
241632    +          +     2.20164313777354 * S_MntWines  +    -0.71244138939707 *
241633    +        S_NumCatalogPurchases  +    -0.05218003711946 * S_NumDealsPurchases
241634    +          +     2.08815797619397 * S_NumStorePurchases
241635    +          +     1.47250122683369 * S_NumWebPurchases
241636    +          +    -1.95745344341946 * S_NumWebVisitsMonth
241637    +          +     1.52461902721397 * S_Recency  +     0.07114080397665 *
241638    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.28134858392415 * S_Income + 1.57838616473011 * S_Kidhome + 
0.01685933792865 * S_MntFishProducts + 0.64818795957189 * S_MntFruits + 0.44053765721056 * 
S_MntGoldProds + -0.0350414210023 * S_MntMeatProducts + 0.73630834236265 * S_MntSweetProducts 
+ 2.20164313777354 * S_MntWines + -0.71244138939707 * S_NumCatalogPurchases + 
-0.05218003711946 * S_NumDealsPurchases + 2.08815797619397 * S_NumStorePurchases + 
1.47250122683369 * S_NumWebPurchases + -1.95745344341946 * S_NumWebVisitsMonth + 
1.52461902721397 * S_Recency + 0.07114080397665 * S_Teenhome ;
241639    +   H1x1_5  =     0.06299419029838 * S_Income  +    -0.25263043424438 *
241640    +        S_Kidhome  +    -0.72407836360298 * S_MntFishProducts
241641    +          +     0.46240377706589 * S_MntFruits  +    -0.31168917499552 *
241642    +        S_MntGoldProds  +     3.17795585534164 * S_MntMeatProducts
241643    +          +    -0.23438993753342 * S_MntSweetProducts
241644    +          +     -2.0392497753494 * S_MntWines  +      1.0094456692298 *
241645    +        S_NumCatalogPurchases  +     1.21992922429388 * S_NumDealsPurchases
241646    +          +    -0.49697408067153 * S_NumStorePurchases
241647    +          +     0.41091736049576 * S_NumWebPurchases
241648    +          +     1.61180593172142 * S_NumWebVisitsMonth
241649    +          +    -2.15417652342106 * S_Recency  +    -0.30863432234672 *
241650    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.06299419029838 * S_Income + -0.25263043424438 * S_Kidhome + 
-0.72407836360298 * S_MntFishProducts + 0.46240377706589 * S_MntFruits + -0.31168917499552 * 
S_MntGoldProds + 3.17795585534164 * S_MntMeatProducts + -0.23438993753342 * S_MntSweetProducts 
+ -2.0392497753494 * S_MntWines + 1.0094456692298 * S_NumCatalogPurchases + 1.21992922429388 * 
S_NumDealsPurchases + -0.49697408067153 * S_NumStorePurchases + 0.41091736049576 * 
S_NumWebPurchases + 1.61180593172142 * S_NumWebVisitsMonth + -2.15417652342106 * S_Recency + 
-0.30863432234672 * S_Teenhome ;
241651    +   H1x1_1  = H1x1_1  +     1.15191639869453 * AcceptedCmp10
241652    +          +      0.0367982148477 * AcceptedCmp20  +      0.3258650789605 *
241653    +        AcceptedCmp30  +      0.2580514232707 * AcceptedCmp40
241654    +          +     0.63958723501202 * AcceptedCmp50  +    -0.32640656229888 *
241655    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.15191639869453 * AcceptedCmp10 + 0.0367982148477 * 
AcceptedCmp20 + 0.3258650789605 * AcceptedCmp30 + 0.2580514232707 * AcceptedCmp40 + 
0.63958723501202 * AcceptedCmp50 + -0.32640656229888 * Complain0 ;
241656    +   H1x1_2  = H1x1_2  +    -1.74950558446111 * AcceptedCmp10
241657    +          +    -0.90356166498734 * AcceptedCmp20  +    -1.23130580993933 *
241658    +        AcceptedCmp30  +     -1.4169795699816 * AcceptedCmp40
241659    +          +    -1.78889837976364 * AcceptedCmp50  +      1.4788954382262 *
241660    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.74950558446111 * AcceptedCmp10 + -0.90356166498734 
* AcceptedCmp20 + -1.23130580993933 * AcceptedCmp30 + -1.4169795699816 * AcceptedCmp40 + 
-1.78889837976364 * AcceptedCmp50 + 1.4788954382262 * Complain0 ;
241661    +   H1x1_3  = H1x1_3  +     0.19640584758608 * AcceptedCmp10
241662    +          +    -0.02812292141076 * AcceptedCmp20  +     0.18411950002405 *
241663    +        AcceptedCmp30  +     0.14654389018041 * AcceptedCmp40
241664    +          +    -0.73289230090736 * AcceptedCmp50  +    -0.18955862978745 *
241665    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.19640584758608 * AcceptedCmp10 + -0.02812292141076 * 
AcceptedCmp20 + 0.18411950002405 * AcceptedCmp30 + 0.14654389018041 * AcceptedCmp40 + 
-0.73289230090736 * AcceptedCmp50 + -0.18955862978745 * Complain0 ;
241666    +   H1x1_4  = H1x1_4  +     0.60930619563149 * AcceptedCmp10
241667    +          +     0.56372104821368 * AcceptedCmp20  +     1.23124531565034 *
241668    +        AcceptedCmp30  +     1.16511385622377 * AcceptedCmp40
241669    +          +     0.83299036807857 * AcceptedCmp50  +    -0.87889366207671 *
241670    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.60930619563149 * AcceptedCmp10 + 0.56372104821368 * 
AcceptedCmp20 + 1.23124531565034 * AcceptedCmp30 + 1.16511385622377 * AcceptedCmp40 + 
0.83299036807857 * AcceptedCmp50 + -0.87889366207671 * Complain0 ;
241671    +   H1x1_5  = H1x1_5  +    -1.02627214772402 * AcceptedCmp10
241672    +          +    -0.35326081554996 * AcceptedCmp20  +    -0.45229632523083 *
241673    +        AcceptedCmp30  +    -0.88576020203346 * AcceptedCmp40
241674    +          +    -0.25524770878943 * AcceptedCmp50  +    -0.58775156249673 *
241675    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.02627214772402 * AcceptedCmp10 + -0.35326081554996 
* AcceptedCmp20 + -0.45229632523083 * AcceptedCmp30 + -0.88576020203346 * AcceptedCmp40 + 
-0.25524770878943 * AcceptedCmp50 + -0.58775156249673 * Complain0 ;
241676    +   H1x1_1  = H1x1_1  +    -0.20048115002767 * Education2n_Cycle
241677    +          +     0.10477823552379 * EducationBasic  +    -0.09122776507376 *
241678    +        EducationGraduation  +    -0.01483389086199 * EducationMaster
241679    +          +    -0.14951932081311 * Marital_StatusDivorced
241680    +          +     0.08343648358981 * Marital_StatusMarried
241681    +          +    -0.52143432598374 * Marital_StatusSingle
241682    +          +    -0.17799942229122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.20048115002767 * Education2n_Cycle + 
0.10477823552379 * EducationBasic + -0.09122776507376 * EducationGraduation + 
-0.01483389086199 * EducationMaster + -0.14951932081311 * Marital_StatusDivorced + 
0.08343648358981 * Marital_StatusMarried + -0.52143432598374 * Marital_StatusSingle + 
-0.17799942229122 * Marital_StatusTogether ;
241683    +   H1x1_2  = H1x1_2  +    -0.06492224317117 * Education2n_Cycle
241684    +          +     0.50630082280639 * EducationBasic  +    -0.32521089553297 *
241685    +        EducationGraduation  +    -0.38968023972702 * EducationMaster
241686    +          +    -0.34495973695408 * Marital_StatusDivorced
241687    +          +    -0.30910829853532 * Marital_StatusMarried
241688    +          +     0.14431404541055 * Marital_StatusSingle
241689    +          +    -0.62673029935295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.06492224317117 * Education2n_Cycle + 
0.50630082280639 * EducationBasic + -0.32521089553297 * EducationGraduation + 
-0.38968023972702 * EducationMaster + -0.34495973695408 * Marital_StatusDivorced + 
-0.30910829853532 * Marital_StatusMarried + 0.14431404541055 * Marital_StatusSingle + 
-0.62673029935295 * Marital_StatusTogether ;
241690    +   H1x1_3  = H1x1_3  +     0.41266521248037 * Education2n_Cycle
241691    +          +    -0.11192325989817 * EducationBasic  +    -0.96742524784448 *
241692    +        EducationGraduation  +     0.05582780345024 * EducationMaster
241693    +          +     0.81191732290197 * Marital_StatusDivorced
241694    +          +    -2.53108753227171 * Marital_StatusMarried
241695    +          +     2.21769123178832 * Marital_StatusSingle
241696    +          +    -0.90613443546426 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.41266521248037 * Education2n_Cycle + 
-0.11192325989817 * EducationBasic + -0.96742524784448 * EducationGraduation + 
0.05582780345024 * EducationMaster + 0.81191732290197 * Marital_StatusDivorced + 
-2.53108753227171 * Marital_StatusMarried + 2.21769123178832 * Marital_StatusSingle + 
-0.90613443546426 * Marital_StatusTogether ;
241697    +   H1x1_4  = H1x1_4  +    -0.08882031994616 * Education2n_Cycle
241698    +          +     0.59640481500702 * EducationBasic  +    -0.75285942189639 *
241699    +        EducationGraduation  +     0.52527957409681 * EducationMaster
241700    +          +    -1.26246836163545 * Marital_StatusDivorced
241701    +          +     0.73147045162506 * Marital_StatusMarried
241702    +          +     0.04252836823306 * Marital_StatusSingle
241703    +          +     1.44915119635375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.08882031994616 * Education2n_Cycle + 
0.59640481500702 * EducationBasic + -0.75285942189639 * EducationGraduation + 0.52527957409681 
* EducationMaster + -1.26246836163545 * Marital_StatusDivorced + 0.73147045162506 * 
Marital_StatusMarried + 0.04252836823306 * Marital_StatusSingle + 1.44915119635375 * 
Marital_StatusTogether ;
241704    +   H1x1_5  = H1x1_5  +    -0.24370046099656 * Education2n_Cycle
241705    +          +     0.03233873053213 * EducationBasic  +      0.1375198926931 *
241706    +        EducationGraduation  +      0.0979905405754 * EducationMaster
241707    +          +    -0.25571808514992 * Marital_StatusDivorced
241708    +          +     0.20684027342845 * Marital_StatusMarried
241709    +          +    -0.36983627747986 * Marital_StatusSingle
241710    +          +    -0.08239173696723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24370046099656 * Education2n_Cycle + 
0.03233873053213 * EducationBasic + 0.1375198926931 * EducationGraduation + 0.0979905405754 * 
EducationMaster + -0.25571808514992 * Marital_StatusDivorced + 0.20684027342845 * 
Marital_StatusMarried + -0.36983627747986 * Marital_StatusSingle + -0.08239173696723 * 
Marital_StatusTogether ;
241711    +   H1x1_1  =    -0.01788649837565 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.01788649837565 + H1x1_1 ;
241712    +   H1x1_2  =     1.77562113267961 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.77562113267961 + H1x1_2 ;
241713    +   H1x1_3  =    -1.36483909507433 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.36483909507433 + H1x1_3 ;
241714    +   H1x1_4  =    -0.17103473926556 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.17103473926556 + H1x1_4 ;
241715    +   H1x1_5  =     0.17065963901812 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.17065963901812 + H1x1_5 ;
241716    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
241717    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
241718    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
241719    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
241720    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
241721    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
241722    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
241723    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
241724    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
241725    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
241726    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
241727    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
241728    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
241729    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
241730    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
241731    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
241732    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
241733    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
241734    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
241735    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
241736    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
241737    +END;
MPRINT(EM_DIAGRAM):   END;
241738    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
241739    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
241740    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
241741    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
241742    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
241743    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
241744    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
241745    +END;
MPRINT(EM_DIAGRAM):   END;
241746    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241747    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
241748    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241749    +
241750    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
241751    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
241752    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
241753    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
241754    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
241755    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
241756    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
241757    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
241758    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
241759    +end;
MPRINT(EM_DIAGRAM):   end;
241760    +else do;
MPRINT(EM_DIAGRAM):   else do;
241761    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
241762    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
241763    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
241764    +   end;
MPRINT(EM_DIAGRAM):   end;
241765    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
241766    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
241767    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
241768    +   end;
MPRINT(EM_DIAGRAM):   end;
241769    +   else do;
MPRINT(EM_DIAGRAM):   else do;
241770    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
241771    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
241772    +   end;
MPRINT(EM_DIAGRAM):   end;
241773    +end;
MPRINT(EM_DIAGRAM):   end;
241774    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
241775    +   P_DepVar1  =    -12.4855028874976 * H1x1_1  +     8.50519000347347 * H1x1_2
241776    +          +     3.84994997572101 * H1x1_3  +    -12.5610415895663 * H1x1_4
241777    +          +     17.4993211655408 * H1x1_5  +     0.14986282100716 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.4855028874976 * H1x1_1 + 8.50519000347347 * H1x1_2 + 
3.84994997572101 * H1x1_3 + -12.5610415895663 * H1x1_4 + 17.4993211655408 * H1x1_5 + 
0.14986282100716 * H1x1_6 ;
241778    +   P_DepVar1  =     3.23272740278636 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.23272740278636 + P_DepVar1 ;
241779    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
241780    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
241781    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
241782    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
241783    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
241784    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
241785    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
241786    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
241787    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
241788    +END;
MPRINT(EM_DIAGRAM):   END;
241789    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
241790    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
241791    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
241792    +END;
MPRINT(EM_DIAGRAM):   END;
241793    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
241794    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
241795    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
241796    +END;
MPRINT(EM_DIAGRAM):   END;
241797    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
241798    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
241799    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
241800    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
241801    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
241802    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
241803    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
241804    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241805    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
241806    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241807    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
241808    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
241809    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
241810    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
241811    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
241812    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
241813    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
241814    +END;
MPRINT(EM_DIAGRAM):   END;
241815    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
241816    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
241817    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
241818    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
241819    +* Renaming variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural42;
241820    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
241821    +* Renaming Posterior variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural42;
241822    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
241823    +drop AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar1;
241824    +AutoNeural42_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar1 = P_DepVar1;
241825    +drop AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar0;
241826    +AutoNeural42_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar0 = P_DepVar0;
241827    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
241828    +* Renaming _WARN_ variable for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural42;
241829    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
241830    +length AutoNeural42_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural42_WARN_ $4;
241831    +drop AutoNeural42_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_WARN_;
241832    +AutoNeural42_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural42_WARN_ = _WARN_;
241833    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
241834    +* Ensmbl57: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 4 of 7;
241835    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
241836    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
241837    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
241838    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
241839    +* NODE: AutoNeural41;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural41;
241840    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
241841    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
241842    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
241843    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
241844    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
241845    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
241846    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
241847    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
241848    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
241849    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
241850    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
241851    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
241852    +LENGTH _WARN_ $4
241853    +      F_DepVar  $ 12
241854    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
241855    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
241856    +
241857    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
241858    +
241859    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
241860    +
241861    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
241862    +
241863    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
241864    +
241865    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
241866    +
241867    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
241868    +
241869    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
241870    +
241871    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
241872    +
241873    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
241874    +
241875    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
241876    +
241877    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
241878    +
241879    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
241880    +
241881    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
241882    +
241883    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
241884    +
241885    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
241886    +
241887    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
241888    +
241889    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
241890    +
241891    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
241892    +
241893    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
241894    +
241895    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
241896    +
241897    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
241898    +
241899    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
241900    +
241901    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
241902    +
241903    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
241904    +
241905    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
241906    +
241907    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
241908    +
241909    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
241910    +
241911    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
241912    +
241913    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
241914    +
241915    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
241916    +
241917    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
241918    +
241919    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
241920    +
241921    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
241922    +
241923    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
241924    +
241925    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
241926    +
241927    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
241928    +
241929    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
241930    +
241931    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
241932    +
241933    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
241934    +
241935    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
241936    +
241937    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
241938    +
241939    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
241940    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
241941    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
241942    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
241943    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
241944    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241945    +end;
MPRINT(EM_DIAGRAM):   end;
241946    +else do;
MPRINT(EM_DIAGRAM):   else do;
241947    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
241948    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
241949    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
241950    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
241951    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
241952    +   end;
MPRINT(EM_DIAGRAM):   end;
241953    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
241954    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
241955    +   end;
MPRINT(EM_DIAGRAM):   end;
241956    +   else do;
MPRINT(EM_DIAGRAM):   else do;
241957    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
241958    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
241959    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241960    +   end;
MPRINT(EM_DIAGRAM):   end;
241961    +end;
MPRINT(EM_DIAGRAM):   end;
241962    +
241963    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
241964    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
241965    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
241966    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
241967    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
241968    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241969    +end;
MPRINT(EM_DIAGRAM):   end;
241970    +else do;
MPRINT(EM_DIAGRAM):   else do;
241971    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
241972    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
241973    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
241974    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
241975    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
241976    +   end;
MPRINT(EM_DIAGRAM):   end;
241977    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
241978    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
241979    +   end;
MPRINT(EM_DIAGRAM):   end;
241980    +   else do;
MPRINT(EM_DIAGRAM):   else do;
241981    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
241982    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
241983    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241984    +   end;
MPRINT(EM_DIAGRAM):   end;
241985    +end;
MPRINT(EM_DIAGRAM):   end;
241986    +
241987    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
241988    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
241989    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
241990    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
241991    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
241992    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241993    +end;
MPRINT(EM_DIAGRAM):   end;
241994    +else do;
MPRINT(EM_DIAGRAM):   else do;
241995    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
241996    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
241997    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
241998    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
241999    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
242000    +   end;
MPRINT(EM_DIAGRAM):   end;
242001    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
242002    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
242003    +   end;
MPRINT(EM_DIAGRAM):   end;
242004    +   else do;
MPRINT(EM_DIAGRAM):   else do;
242005    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
242006    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
242007    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242008    +   end;
MPRINT(EM_DIAGRAM):   end;
242009    +end;
MPRINT(EM_DIAGRAM):   end;
242010    +
242011    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
242012    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
242013    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
242014    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
242015    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
242016    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242017    +end;
MPRINT(EM_DIAGRAM):   end;
242018    +else do;
MPRINT(EM_DIAGRAM):   else do;
242019    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
242020    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
242021    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
242022    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
242023    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
242024    +   end;
MPRINT(EM_DIAGRAM):   end;
242025    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
242026    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
242027    +   end;
MPRINT(EM_DIAGRAM):   end;
242028    +   else do;
MPRINT(EM_DIAGRAM):   else do;
242029    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
242030    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
242031    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242032    +   end;
MPRINT(EM_DIAGRAM):   end;
242033    +end;
MPRINT(EM_DIAGRAM):   end;
242034    +
242035    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
242036    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
242037    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
242038    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
242039    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
242040    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242041    +end;
MPRINT(EM_DIAGRAM):   end;
242042    +else do;
MPRINT(EM_DIAGRAM):   else do;
242043    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
242044    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
242045    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
242046    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
242047    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
242048    +   end;
MPRINT(EM_DIAGRAM):   end;
242049    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
242050    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
242051    +   end;
MPRINT(EM_DIAGRAM):   end;
242052    +   else do;
MPRINT(EM_DIAGRAM):   else do;
242053    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
242054    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
242055    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242056    +   end;
MPRINT(EM_DIAGRAM):   end;
242057    +end;
MPRINT(EM_DIAGRAM):   end;
242058    +
242059    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
242060    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
242061    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
242062    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
242063    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
242064    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242065    +end;
MPRINT(EM_DIAGRAM):   end;
242066    +else do;
MPRINT(EM_DIAGRAM):   else do;
242067    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
242068    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
242069    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
242070    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
242071    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
242072    +   end;
MPRINT(EM_DIAGRAM):   end;
242073    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
242074    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
242075    +   end;
MPRINT(EM_DIAGRAM):   end;
242076    +   else do;
MPRINT(EM_DIAGRAM):   else do;
242077    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
242078    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
242079    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242080    +   end;
MPRINT(EM_DIAGRAM):   end;
242081    +end;
MPRINT(EM_DIAGRAM):   end;
242082    +
242083    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
242084    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
242085    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
242086    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
242087    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
242088    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
242089    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
242090    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
242091    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
242092    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
242093    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
242094    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
242095    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
242096    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242097    +end;
MPRINT(EM_DIAGRAM):   end;
242098    +else do;
MPRINT(EM_DIAGRAM):   else do;
242099    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
242100    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
242101    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
242102    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
242103    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
242104    +   end;
MPRINT(EM_DIAGRAM):   end;
242105    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
242106    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
242107    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
242108    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
242109    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
242110    +   end;
MPRINT(EM_DIAGRAM):   end;
242111    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
242112    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
242113    +   end;
MPRINT(EM_DIAGRAM):   end;
242114    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
242115    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
242116    +   end;
MPRINT(EM_DIAGRAM):   end;
242117    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
242118    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
242119    +   end;
MPRINT(EM_DIAGRAM):   end;
242120    +   else do;
MPRINT(EM_DIAGRAM):   else do;
242121    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
242122    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
242123    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
242124    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
242125    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
242126    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242127    +   end;
MPRINT(EM_DIAGRAM):   end;
242128    +end;
MPRINT(EM_DIAGRAM):   end;
242129    +
242130    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
242131    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
242132    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
242133    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
242134    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
242135    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
242136    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
242137    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
242138    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
242139    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
242140    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
242141    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
242142    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
242143    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
242144    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242145    +end;
MPRINT(EM_DIAGRAM):   end;
242146    +else do;
MPRINT(EM_DIAGRAM):   else do;
242147    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
242148    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
242149    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
242150    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
242151    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
242152    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
242153    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
242154    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
242155    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
242156    +         end;
MPRINT(EM_DIAGRAM):   end;
242157    +         else do;
MPRINT(EM_DIAGRAM):   else do;
242158    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
242159    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
242160    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
242161    +            end;
MPRINT(EM_DIAGRAM):   end;
242162    +         end;
MPRINT(EM_DIAGRAM):   end;
242163    +      end;
MPRINT(EM_DIAGRAM):   end;
242164    +      else do;
MPRINT(EM_DIAGRAM):   else do;
242165    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
242166    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
242167    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
242168    +         end;
MPRINT(EM_DIAGRAM):   end;
242169    +      end;
MPRINT(EM_DIAGRAM):   end;
242170    +   end;
MPRINT(EM_DIAGRAM):   end;
242171    +   else do;
MPRINT(EM_DIAGRAM):   else do;
242172    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
242173    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
242174    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
242175    +      end;
MPRINT(EM_DIAGRAM):   end;
242176    +      else do;
MPRINT(EM_DIAGRAM):   else do;
242177    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
242178    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
242179    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
242180    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
242181    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
242182    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
242183    +         end;
MPRINT(EM_DIAGRAM):   end;
242184    +      end;
MPRINT(EM_DIAGRAM):   end;
242185    +   end;
MPRINT(EM_DIAGRAM):   end;
242186    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
242187    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
242188    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
242189    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
242190    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
242191    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
242192    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242193    +   end;
MPRINT(EM_DIAGRAM):   end;
242194    +end;
MPRINT(EM_DIAGRAM):   end;
242195    +
242196    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242197    +*** Checking missing input Interval
242198    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
242199    +
242200    +IF NMISS(
242201    +   Income ,
242202    +   Kidhome ,
242203    +   MntFishProducts ,
242204    +   MntFruits ,
242205    +   MntGoldProds ,
242206    +   MntMeatProducts ,
242207    +   MntSweetProducts ,
242208    +   MntWines ,
242209    +   NumCatalogPurchases ,
242210    +   NumDealsPurchases ,
242211    +   NumStorePurchases ,
242212    +   NumWebPurchases ,
242213    +   NumWebVisitsMonth ,
242214    +   Recency ,
242215    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
242216    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
242217    +
242218    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242219    +END;
MPRINT(EM_DIAGRAM):   END;
242220    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242221    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
242222    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242223    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
242224    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
242225    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
242226    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
242227    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
242228    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
242229    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
242230    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
242231    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
242232    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
242233    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
242234    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
242235    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
242236    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
242237    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
242238    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
242239    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
242240    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
242241    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
242242    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
242243    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
242244    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
242245    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
242246    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
242247    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
242248    +END;
MPRINT(EM_DIAGRAM):   END;
242249    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
242250    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
242251    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
242252    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
242253    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
242254    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
242255    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
242256    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
242257    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
242258    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
242259    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
242260    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
242261    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
242262    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
242263    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
242264    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
242265    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
242266    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
242267    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
242268    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
242269    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
242270    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
242271    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
242272    +   ELSE S_NumCatalogPurchases
242273    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
242274    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
242275    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
242276    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
242277    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
242278    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
242279    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
242280    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
242281    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
242282    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
242283    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
242284    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
242285    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
242286    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
242287    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
242288    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
242289    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
242290    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
242291    +END;
MPRINT(EM_DIAGRAM):   END;
242292    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242293    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
242294    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242295    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242296    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
242297    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242298    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242299    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
242300    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242301    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
242302    +   H1x1_1  =     0.00788029676844 * S_Income  +    -0.91535527861933 *
242303    +        S_Kidhome  +    -0.25225116407302 * S_MntFishProducts
242304    +          +    -0.18797076337897 * S_MntFruits  +    -0.44902183906131 *
242305    +        S_MntGoldProds  +      2.2767772850691 * S_MntMeatProducts
242306    +          +     -0.2030617183738 * S_MntSweetProducts
242307    +          +    -3.00492674390268 * S_MntWines  +     0.79341578039366 *
242308    +        S_NumCatalogPurchases  +     0.87204448909716 * S_NumDealsPurchases
242309    +          +    -2.67074303965293 * S_NumStorePurchases
242310    +          +    -0.84694619593676 * S_NumWebPurchases
242311    +          +     1.78464945757548 * S_NumWebVisitsMonth
242312    +          +    -1.79669645209961 * S_Recency  +     0.12484193160086 *
242313    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.00788029676844 * S_Income + -0.91535527861933 * S_Kidhome + 
-0.25225116407302 * S_MntFishProducts + -0.18797076337897 * S_MntFruits + -0.44902183906131 * 
S_MntGoldProds + 2.2767772850691 * S_MntMeatProducts + -0.2030617183738 * S_MntSweetProducts + 
-3.00492674390268 * S_MntWines + 0.79341578039366 * S_NumCatalogPurchases + 0.87204448909716 * 
S_NumDealsPurchases + -2.67074303965293 * S_NumStorePurchases + -0.84694619593676 * 
S_NumWebPurchases + 1.78464945757548 * S_NumWebVisitsMonth + -1.79669645209961 * S_Recency + 
0.12484193160086 * S_Teenhome ;
242314    +   H1x1_2  =     0.89056482755935 * S_Income  +    -1.26858223800375 *
242315    +        S_Kidhome  +    -0.21524958568885 * S_MntFishProducts
242316    +          +     0.09518715448323 * S_MntFruits  +    -0.19863573935492 *
242317    +        S_MntGoldProds  +     1.18841616001527 * S_MntMeatProducts
242318    +          +    -0.48853587268985 * S_MntSweetProducts
242319    +          +      -0.414993830248 * S_MntWines  +     1.47883555237605 *
242320    +        S_NumCatalogPurchases  +     0.83644109170588 * S_NumDealsPurchases
242321    +          +    -1.10593499185395 * S_NumStorePurchases
242322    +          +     -1.3003228821842 * S_NumWebPurchases
242323    +          +     2.87047131261901 * S_NumWebVisitsMonth
242324    +          +    -3.10727941128136 * S_Recency  +     -1.2351049603093 *
242325    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.89056482755935 * S_Income + -1.26858223800375 * S_Kidhome + 
-0.21524958568885 * S_MntFishProducts + 0.09518715448323 * S_MntFruits + -0.19863573935492 * 
S_MntGoldProds + 1.18841616001527 * S_MntMeatProducts + -0.48853587268985 * S_MntSweetProducts 
+ -0.414993830248 * S_MntWines + 1.47883555237605 * S_NumCatalogPurchases + 0.83644109170588 * 
S_NumDealsPurchases + -1.10593499185395 * S_NumStorePurchases + -1.3003228821842 * 
S_NumWebPurchases + 2.87047131261901 * S_NumWebVisitsMonth + -3.10727941128136 * S_Recency + 
-1.2351049603093 * S_Teenhome ;
242326    +   H1x1_3  =    -0.59621293188677 * S_Income  +    -0.98204600423622 *
242327    +        S_Kidhome  +     0.82413780234399 * S_MntFishProducts
242328    +          +     0.39739163071946 * S_MntFruits  +    -0.49042553659196 *
242329    +        S_MntGoldProds  +    -4.39932579909415 * S_MntMeatProducts
242330    +          +    -0.27795094909244 * S_MntSweetProducts
242331    +          +     0.24963500961568 * S_MntWines  +     -0.5239489331422 *
242332    +        S_NumCatalogPurchases  +    -0.90657315438752 * S_NumDealsPurchases
242333    +          +    -0.41332499072246 * S_NumStorePurchases
242334    +          +     0.76626053410817 * S_NumWebPurchases
242335    +          +     0.81795211037296 * S_NumWebVisitsMonth
242336    +          +    -0.50876365872417 * S_Recency  +     0.41668164622243 *
242337    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.59621293188677 * S_Income + -0.98204600423622 * S_Kidhome + 
0.82413780234399 * S_MntFishProducts + 0.39739163071946 * S_MntFruits + -0.49042553659196 * 
S_MntGoldProds + -4.39932579909415 * S_MntMeatProducts + -0.27795094909244 * 
S_MntSweetProducts + 0.24963500961568 * S_MntWines + -0.5239489331422 * S_NumCatalogPurchases 
+ -0.90657315438752 * S_NumDealsPurchases + -0.41332499072246 * S_NumStorePurchases + 
0.76626053410817 * S_NumWebPurchases + 0.81795211037296 * S_NumWebVisitsMonth + 
-0.50876365872417 * S_Recency + 0.41668164622243 * S_Teenhome ;
242338    +   H1x1_4  =     0.96283488963096 * S_Income  +    -0.87986849758504 *
242339    +        S_Kidhome  +     -0.1136919534185 * S_MntFishProducts
242340    +          +    -0.29232436238858 * S_MntFruits  +      0.1837511707412 *
242341    +        S_MntGoldProds  +     0.70727712145719 * S_MntMeatProducts
242342    +          +    -0.08285620819867 * S_MntSweetProducts
242343    +          +    -2.34391341405204 * S_MntWines  +     1.28790868462455 *
242344    +        S_NumCatalogPurchases  +    -0.66448120419076 * S_NumDealsPurchases
242345    +          +    -0.17691098721908 * S_NumStorePurchases
242346    +          +     0.46246892093576 * S_NumWebPurchases
242347    +          +     2.06272832836908 * S_NumWebVisitsMonth
242348    +          +    -2.20357897947054 * S_Recency  +    -0.21370157733704 *
242349    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.96283488963096 * S_Income + -0.87986849758504 * S_Kidhome + 
-0.1136919534185 * S_MntFishProducts + -0.29232436238858 * S_MntFruits + 0.1837511707412 * 
S_MntGoldProds + 0.70727712145719 * S_MntMeatProducts + -0.08285620819867 * S_MntSweetProducts 
+ -2.34391341405204 * S_MntWines + 1.28790868462455 * S_NumCatalogPurchases + 
-0.66448120419076 * S_NumDealsPurchases + -0.17691098721908 * S_NumStorePurchases + 
0.46246892093576 * S_NumWebPurchases + 2.06272832836908 * S_NumWebVisitsMonth + 
-2.20357897947054 * S_Recency + -0.21370157733704 * S_Teenhome ;
242350    +   H1x1_1  = H1x1_1  +    -1.11882466050741 * AcceptedCmp10
242351    +          +    -0.02672648348788 * AcceptedCmp20  +     -0.9935054015775 *
242352    +        AcceptedCmp30  +    -0.40619950578221 * AcceptedCmp40
242353    +          +     0.75861408836828 * AcceptedCmp50  +    -0.08119659353213 *
242354    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.11882466050741 * AcceptedCmp10 + -0.02672648348788 
* AcceptedCmp20 + -0.9935054015775 * AcceptedCmp30 + -0.40619950578221 * AcceptedCmp40 + 
0.75861408836828 * AcceptedCmp50 + -0.08119659353213 * Complain0 ;
242355    +   H1x1_2  = H1x1_2  +    -1.19874175712489 * AcceptedCmp10
242356    +          +    -1.39569753392124 * AcceptedCmp20  +    -1.40792768449965 *
242357    +        AcceptedCmp30  +    -1.33621370186337 * AcceptedCmp40
242358    +          +    -1.28850585600497 * AcceptedCmp50  +     1.54913459648682 *
242359    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.19874175712489 * AcceptedCmp10 + -1.39569753392124 
* AcceptedCmp20 + -1.40792768449965 * AcceptedCmp30 + -1.33621370186337 * AcceptedCmp40 + 
-1.28850585600497 * AcceptedCmp50 + 1.54913459648682 * Complain0 ;
242360    +   H1x1_3  = H1x1_3  +      0.8900995500275 * AcceptedCmp10
242361    +          +     0.63129973315749 * AcceptedCmp20  +    -0.31513199468014 *
242362    +        AcceptedCmp30  +     0.36000457467611 * AcceptedCmp40
242363    +          +     0.62901278737039 * AcceptedCmp50  +     0.13436691399472 *
242364    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.8900995500275 * AcceptedCmp10 + 0.63129973315749 * 
AcceptedCmp20 + -0.31513199468014 * AcceptedCmp30 + 0.36000457467611 * AcceptedCmp40 + 
0.62901278737039 * AcceptedCmp50 + 0.13436691399472 * Complain0 ;
242365    +   H1x1_4  = H1x1_4  +     -0.4761315940218 * AcceptedCmp10
242366    +          +     0.04116528443754 * AcceptedCmp20  +    -1.31248665137501 *
242367    +        AcceptedCmp30  +    -1.13922224536841 * AcceptedCmp40
242368    +          +    -1.71240975292363 * AcceptedCmp50  +     0.98794736218555 *
242369    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.4761315940218 * AcceptedCmp10 + 0.04116528443754 * 
AcceptedCmp20 + -1.31248665137501 * AcceptedCmp30 + -1.13922224536841 * AcceptedCmp40 + 
-1.71240975292363 * AcceptedCmp50 + 0.98794736218555 * Complain0 ;
242370    +   H1x1_1  = H1x1_1  +    -0.19427690904448 * Education2n_Cycle
242371    +          +    -0.78361431701943 * EducationBasic  +     0.70012279609726 *
242372    +        EducationGraduation  +    -0.51132563359945 * EducationMaster
242373    +          +     1.59526812226707 * Marital_StatusDivorced
242374    +          +    -0.74331656724296 * Marital_StatusMarried
242375    +          +     0.74316614019998 * Marital_StatusSingle
242376    +          +    -1.36761487171479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19427690904448 * Education2n_Cycle + 
-0.78361431701943 * EducationBasic + 0.70012279609726 * EducationGraduation + 
-0.51132563359945 * EducationMaster + 1.59526812226707 * Marital_StatusDivorced + 
-0.74331656724296 * Marital_StatusMarried + 0.74316614019998 * Marital_StatusSingle + 
-1.36761487171479 * Marital_StatusTogether ;
242377    +   H1x1_2  = H1x1_2  +    -0.76077191404637 * Education2n_Cycle
242378    +          +    -0.22680587409979 * EducationBasic  +     0.19812025591093 *
242379    +        EducationGraduation  +     0.07596142730184 * EducationMaster
242380    +          +     0.94291322065497 * Marital_StatusDivorced
242381    +          +    -1.64331597630127 * Marital_StatusMarried
242382    +          +     2.21526196736604 * Marital_StatusSingle
242383    +          +    -1.52687548646297 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.76077191404637 * Education2n_Cycle + 
-0.22680587409979 * EducationBasic + 0.19812025591093 * EducationGraduation + 0.07596142730184 
* EducationMaster + 0.94291322065497 * Marital_StatusDivorced + -1.64331597630127 * 
Marital_StatusMarried + 2.21526196736604 * Marital_StatusSingle + -1.52687548646297 * 
Marital_StatusTogether ;
242384    +   H1x1_3  = H1x1_3  +    -0.22328003539059 * Education2n_Cycle
242385    +          +    -0.56253476355283 * EducationBasic  +     0.43074608752346 *
242386    +        EducationGraduation  +    -0.59791003195469 * EducationMaster
242387    +          +     1.63906979191221 * Marital_StatusDivorced
242388    +          +    -1.00497354965718 * Marital_StatusMarried
242389    +          +     0.70485207953497 * Marital_StatusSingle
242390    +          +    -1.55917756143873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.22328003539059 * Education2n_Cycle + 
-0.56253476355283 * EducationBasic + 0.43074608752346 * EducationGraduation + 
-0.59791003195469 * EducationMaster + 1.63906979191221 * Marital_StatusDivorced + 
-1.00497354965718 * Marital_StatusMarried + 0.70485207953497 * Marital_StatusSingle + 
-1.55917756143873 * Marital_StatusTogether ;
242391    +   H1x1_4  = H1x1_4  +     0.85325476712793 * Education2n_Cycle
242392    +          +    -0.10167049440435 * EducationBasic  +     0.11808465181014 *
242393    +        EducationGraduation  +     -0.1847363034021 * EducationMaster
242394    +          +     0.75038128420756 * Marital_StatusDivorced
242395    +          +    -1.93055855198469 * Marital_StatusMarried
242396    +          +     0.73816798380254 * Marital_StatusSingle
242397    +          +    -1.77103687011169 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.85325476712793 * Education2n_Cycle + 
-0.10167049440435 * EducationBasic + 0.11808465181014 * EducationGraduation + -0.1847363034021 
* EducationMaster + 0.75038128420756 * Marital_StatusDivorced + -1.93055855198469 * 
Marital_StatusMarried + 0.73816798380254 * Marital_StatusSingle + -1.77103687011169 * 
Marital_StatusTogether ;
242398    +   H1x1_1  =    -0.97292943558748 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.97292943558748 + H1x1_1 ;
242399    +   H1x1_2  =      -0.767474595653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.767474595653 + H1x1_2 ;
242400    +   H1x1_3  =    -1.54289542125346 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.54289542125346 + H1x1_3 ;
242401    +   H1x1_4  =     0.11531219453063 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.11531219453063 + H1x1_4 ;
242402    +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
242403    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
242404    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
242405    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
242406    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
242407    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
242408    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
242409    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
242410    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
242411    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
242412    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
242413    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
242414    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
242415    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
242416    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
242417    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
242418    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
242419    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
242420    +END;
MPRINT(EM_DIAGRAM):   END;
242421    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
242422    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
242423    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
242424    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
242425    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
242426    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
242427    +END;
MPRINT(EM_DIAGRAM):   END;
242428    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242429    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
242430    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242431    +
242432    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
242433    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
242434    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
242435    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
242436    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
242437    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
242438    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
242439    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
242440    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
242441    +end;
MPRINT(EM_DIAGRAM):   end;
242442    +else do;
MPRINT(EM_DIAGRAM):   else do;
242443    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
242444    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
242445    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
242446    +   end;
MPRINT(EM_DIAGRAM):   end;
242447    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
242448    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
242449    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
242450    +   end;
MPRINT(EM_DIAGRAM):   end;
242451    +   else do;
MPRINT(EM_DIAGRAM):   else do;
242452    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
242453    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
242454    +   end;
MPRINT(EM_DIAGRAM):   end;
242455    +end;
MPRINT(EM_DIAGRAM):   end;
242456    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
242457    +   P_DepVar1  =     4.87259918787296 * H1x1_1  +     21.0865386977957 * H1x1_2
242458    +          +    -8.49666483029666 * H1x1_3  +     4.50140461489884 * H1x1_4
242459    +          +    -19.2888668755466 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.87259918787296 * H1x1_1 + 21.0865386977957 * H1x1_2 + 
-8.49666483029666 * H1x1_3 + 4.50140461489884 * H1x1_4 + -19.2888668755466 * H1x1_5 ;
242460    +   P_DepVar1  =     0.94995870883169 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94995870883169 + P_DepVar1 ;
242461    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
242462    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
242463    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
242464    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
242465    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
242466    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
242467    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
242468    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
242469    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
242470    +END;
MPRINT(EM_DIAGRAM):   END;
242471    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
242472    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
242473    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
242474    +END;
MPRINT(EM_DIAGRAM):   END;
242475    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
242476    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
242477    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
242478    +END;
MPRINT(EM_DIAGRAM):   END;
242479    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
242480    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
242481    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
242482    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
242483    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
242484    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
242485    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
242486    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242487    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
242488    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242489    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
242490    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
242491    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
242492    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
242493    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
242494    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
242495    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
242496    +END;
MPRINT(EM_DIAGRAM):   END;
242497    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
242498    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
242499    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
242500    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
242501    +* Renaming variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural41;
242502    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
242503    +* Renaming Posterior variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural41;
242504    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
242505    +drop AutoNeural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar1;
242506    +AutoNeural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar1 = P_DepVar1;
242507    +drop AutoNeural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar0;
242508    +AutoNeural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar0 = P_DepVar0;
242509    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
242510    +* Renaming _WARN_ variable for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural41;
242511    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
242512    +length AutoNeural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural41_WARN_ $4;
242513    +drop AutoNeural41_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_WARN_;
242514    +AutoNeural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural41_WARN_ = _WARN_;
242515    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
242516    +* Ensmbl57: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 5 of 7;
242517    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
242518    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
242519    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
242520    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
242521    +* NODE: AutoNeural47;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural47;
242522    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
242523    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
242524    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
242525    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
242526    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
242527    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
242528    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
242529    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
242530    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
242531    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
242532    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
242533    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
242534    +LENGTH _WARN_ $4
242535    +      F_DepVar  $ 12
242536    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
242537    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
242538    +
242539    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
242540    +
242541    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
242542    +
242543    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
242544    +
242545    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
242546    +
242547    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
242548    +
242549    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
242550    +
242551    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
242552    +
242553    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
242554    +
242555    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
242556    +
242557    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
242558    +
242559    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
242560    +
242561    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
242562    +
242563    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
242564    +
242565    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
242566    +
242567    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
242568    +
242569    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
242570    +
242571    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
242572    +
242573    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
242574    +
242575    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
242576    +
242577    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
242578    +
242579    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
242580    +
242581    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
242582    +
242583    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
242584    +
242585    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
242586    +
242587    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
242588    +
242589    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
242590    +
242591    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
242592    +
242593    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
242594    +
242595    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
242596    +
242597    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
242598    +
242599    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
242600    +
242601    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
242602    +
242603    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
242604    +
242605    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
242606    +
242607    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
242608    +
242609    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
242610    +
242611    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
242612    +
242613    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
242614    +
242615    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
242616    +
242617    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
242618    +
242619    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
242620    +
242621    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
242622    +
242623    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
242624    +
242625    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
242626    +
242627    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
242628    +
242629    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
242630    +
242631    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
242632    +
242633    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
242634    +
242635    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
242636    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
242637    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
242638    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
242639    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
242640    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242641    +end;
MPRINT(EM_DIAGRAM):   end;
242642    +else do;
MPRINT(EM_DIAGRAM):   else do;
242643    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
242644    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
242645    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
242646    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
242647    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
242648    +   end;
MPRINT(EM_DIAGRAM):   end;
242649    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
242650    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
242651    +   end;
MPRINT(EM_DIAGRAM):   end;
242652    +   else do;
MPRINT(EM_DIAGRAM):   else do;
242653    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
242654    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
242655    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242656    +   end;
MPRINT(EM_DIAGRAM):   end;
242657    +end;
MPRINT(EM_DIAGRAM):   end;
242658    +
242659    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
242660    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
242661    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
242662    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
242663    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
242664    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242665    +end;
MPRINT(EM_DIAGRAM):   end;
242666    +else do;
MPRINT(EM_DIAGRAM):   else do;
242667    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
242668    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
242669    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
242670    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
242671    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
242672    +   end;
MPRINT(EM_DIAGRAM):   end;
242673    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
242674    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
242675    +   end;
MPRINT(EM_DIAGRAM):   end;
242676    +   else do;
MPRINT(EM_DIAGRAM):   else do;
242677    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
242678    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
242679    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242680    +   end;
MPRINT(EM_DIAGRAM):   end;
242681    +end;
MPRINT(EM_DIAGRAM):   end;
242682    +
242683    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
242684    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
242685    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
242686    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
242687    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
242688    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242689    +end;
MPRINT(EM_DIAGRAM):   end;
242690    +else do;
MPRINT(EM_DIAGRAM):   else do;
242691    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
242692    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
242693    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
242694    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
242695    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
242696    +   end;
MPRINT(EM_DIAGRAM):   end;
242697    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
242698    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
242699    +   end;
MPRINT(EM_DIAGRAM):   end;
242700    +   else do;
MPRINT(EM_DIAGRAM):   else do;
242701    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
242702    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
242703    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242704    +   end;
MPRINT(EM_DIAGRAM):   end;
242705    +end;
MPRINT(EM_DIAGRAM):   end;
242706    +
242707    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
242708    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
242709    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
242710    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
242711    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
242712    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242713    +end;
MPRINT(EM_DIAGRAM):   end;
242714    +else do;
MPRINT(EM_DIAGRAM):   else do;
242715    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
242716    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
242717    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
242718    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
242719    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
242720    +   end;
MPRINT(EM_DIAGRAM):   end;
242721    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
242722    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
242723    +   end;
MPRINT(EM_DIAGRAM):   end;
242724    +   else do;
MPRINT(EM_DIAGRAM):   else do;
242725    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
242726    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
242727    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242728    +   end;
MPRINT(EM_DIAGRAM):   end;
242729    +end;
MPRINT(EM_DIAGRAM):   end;
242730    +
242731    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
242732    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
242733    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
242734    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
242735    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
242736    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242737    +end;
MPRINT(EM_DIAGRAM):   end;
242738    +else do;
MPRINT(EM_DIAGRAM):   else do;
242739    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
242740    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
242741    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
242742    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
242743    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
242744    +   end;
MPRINT(EM_DIAGRAM):   end;
242745    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
242746    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
242747    +   end;
MPRINT(EM_DIAGRAM):   end;
242748    +   else do;
MPRINT(EM_DIAGRAM):   else do;
242749    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
242750    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
242751    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242752    +   end;
MPRINT(EM_DIAGRAM):   end;
242753    +end;
MPRINT(EM_DIAGRAM):   end;
242754    +
242755    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
242756    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
242757    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
242758    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
242759    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
242760    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242761    +end;
MPRINT(EM_DIAGRAM):   end;
242762    +else do;
MPRINT(EM_DIAGRAM):   else do;
242763    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
242764    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
242765    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
242766    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
242767    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
242768    +   end;
MPRINT(EM_DIAGRAM):   end;
242769    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
242770    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
242771    +   end;
MPRINT(EM_DIAGRAM):   end;
242772    +   else do;
MPRINT(EM_DIAGRAM):   else do;
242773    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
242774    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
242775    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242776    +   end;
MPRINT(EM_DIAGRAM):   end;
242777    +end;
MPRINT(EM_DIAGRAM):   end;
242778    +
242779    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
242780    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
242781    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
242782    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
242783    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
242784    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
242785    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
242786    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
242787    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
242788    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
242789    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
242790    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
242791    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
242792    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242793    +end;
MPRINT(EM_DIAGRAM):   end;
242794    +else do;
MPRINT(EM_DIAGRAM):   else do;
242795    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
242796    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
242797    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
242798    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
242799    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
242800    +   end;
MPRINT(EM_DIAGRAM):   end;
242801    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
242802    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
242803    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
242804    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
242805    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
242806    +   end;
MPRINT(EM_DIAGRAM):   end;
242807    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
242808    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
242809    +   end;
MPRINT(EM_DIAGRAM):   end;
242810    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
242811    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
242812    +   end;
MPRINT(EM_DIAGRAM):   end;
242813    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
242814    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
242815    +   end;
MPRINT(EM_DIAGRAM):   end;
242816    +   else do;
MPRINT(EM_DIAGRAM):   else do;
242817    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
242818    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
242819    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
242820    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
242821    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
242822    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242823    +   end;
MPRINT(EM_DIAGRAM):   end;
242824    +end;
MPRINT(EM_DIAGRAM):   end;
242825    +
242826    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
242827    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
242828    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
242829    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
242830    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
242831    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
242832    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
242833    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
242834    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
242835    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
242836    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
242837    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
242838    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
242839    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
242840    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242841    +end;
MPRINT(EM_DIAGRAM):   end;
242842    +else do;
MPRINT(EM_DIAGRAM):   else do;
242843    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
242844    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
242845    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
242846    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
242847    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
242848    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
242849    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
242850    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
242851    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
242852    +         end;
MPRINT(EM_DIAGRAM):   end;
242853    +         else do;
MPRINT(EM_DIAGRAM):   else do;
242854    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
242855    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
242856    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
242857    +            end;
MPRINT(EM_DIAGRAM):   end;
242858    +         end;
MPRINT(EM_DIAGRAM):   end;
242859    +      end;
MPRINT(EM_DIAGRAM):   end;
242860    +      else do;
MPRINT(EM_DIAGRAM):   else do;
242861    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
242862    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
242863    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
242864    +         end;
MPRINT(EM_DIAGRAM):   end;
242865    +      end;
MPRINT(EM_DIAGRAM):   end;
242866    +   end;
MPRINT(EM_DIAGRAM):   end;
242867    +   else do;
MPRINT(EM_DIAGRAM):   else do;
242868    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
242869    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
242870    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
242871    +      end;
MPRINT(EM_DIAGRAM):   end;
242872    +      else do;
MPRINT(EM_DIAGRAM):   else do;
242873    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
242874    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
242875    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
242876    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
242877    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
242878    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
242879    +         end;
MPRINT(EM_DIAGRAM):   end;
242880    +      end;
MPRINT(EM_DIAGRAM):   end;
242881    +   end;
MPRINT(EM_DIAGRAM):   end;
242882    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
242883    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
242884    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
242885    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
242886    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
242887    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
242888    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242889    +   end;
MPRINT(EM_DIAGRAM):   end;
242890    +end;
MPRINT(EM_DIAGRAM):   end;
242891    +
242892    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242893    +*** Checking missing input Interval
242894    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
242895    +
242896    +IF NMISS(
242897    +   Income ,
242898    +   Kidhome ,
242899    +   MntFishProducts ,
242900    +   MntFruits ,
242901    +   MntGoldProds ,
242902    +   MntMeatProducts ,
242903    +   MntSweetProducts ,
242904    +   MntWines ,
242905    +   NumCatalogPurchases ,
242906    +   NumDealsPurchases ,
242907    +   NumStorePurchases ,
242908    +   NumWebPurchases ,
242909    +   NumWebVisitsMonth ,
242910    +   Recency ,
242911    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
242912    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
242913    +
242914    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
242915    +END;
MPRINT(EM_DIAGRAM):   END;
242916    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242917    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
242918    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242919    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
242920    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
242921    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
242922    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
242923    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
242924    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
242925    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
242926    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
242927    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
242928    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
242929    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
242930    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
242931    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
242932    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
242933    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
242934    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
242935    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
242936    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
242937    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
242938    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
242939    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
242940    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
242941    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
242942    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
242943    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
242944    +END;
MPRINT(EM_DIAGRAM):   END;
242945    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
242946    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
242947    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
242948    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
242949    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
242950    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
242951    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
242952    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
242953    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
242954    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
242955    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
242956    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
242957    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
242958    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
242959    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
242960    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
242961    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
242962    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
242963    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
242964    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
242965    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
242966    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
242967    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
242968    +   ELSE S_NumCatalogPurchases
242969    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
242970    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
242971    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
242972    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
242973    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
242974    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
242975    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
242976    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
242977    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
242978    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
242979    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
242980    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
242981    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
242982    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
242983    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
242984    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
242985    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
242986    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
242987    +END;
MPRINT(EM_DIAGRAM):   END;
242988    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242989    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
242990    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242991    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242992    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
242993    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242994    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242995    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
242996    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
242997    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
242998    +   H1x1_1  =     -0.6712927499227 * S_Income  +     0.52481056075303 *
242999    +        S_Kidhome  +     -2.3662268017216 * S_MntFishProducts
243000    +          +    -1.70194161526543 * S_MntFruits  +    -0.12195276696714 *
243001    +        S_MntGoldProds  +     5.02051235731232 * S_MntMeatProducts
243002    +          +    -2.37073629008864 * S_MntSweetProducts
243003    +          +    -7.49792253647533 * S_MntWines  +     1.93063890722455 *
243004    +        S_NumCatalogPurchases  +     1.44821336448113 * S_NumDealsPurchases
243005    +          +    -1.29021742502316 * S_NumStorePurchases
243006    +          +    -0.00949168969466 * S_NumWebPurchases
243007    +          +    -0.32248137192321 * S_NumWebVisitsMonth
243008    +          +    -0.55879173873733 * S_Recency  +    -0.22439654268554 *
243009    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.6712927499227 * S_Income + 0.52481056075303 * S_Kidhome + 
-2.3662268017216 * S_MntFishProducts + -1.70194161526543 * S_MntFruits + -0.12195276696714 * 
S_MntGoldProds + 5.02051235731232 * S_MntMeatProducts + -2.37073629008864 * S_MntSweetProducts 
+ -7.49792253647533 * S_MntWines + 1.93063890722455 * S_NumCatalogPurchases + 1.44821336448113 
* S_NumDealsPurchases + -1.29021742502316 * S_NumStorePurchases + -0.00949168969466 * 
S_NumWebPurchases + -0.32248137192321 * S_NumWebVisitsMonth + -0.55879173873733 * S_Recency + 
-0.22439654268554 * S_Teenhome ;
243010    +   H1x1_2  =    -1.63837717417638 * S_Income  +     1.01712005677207 *
243011    +        S_Kidhome  +    -0.11452425716086 * S_MntFishProducts
243012    +          +    -0.08273769039219 * S_MntFruits  +    -0.47045422182093 *
243013    +        S_MntGoldProds  +    -0.64593629987888 * S_MntMeatProducts
243014    +          +     0.41126087093412 * S_MntSweetProducts
243015    +          +    -0.00653581981542 * S_MntWines  +    -1.62534004647483 *
243016    +        S_NumCatalogPurchases  +    -0.74740978232431 * S_NumDealsPurchases
243017    +          +      0.2319226227964 * S_NumStorePurchases
243018    +          +     0.31190969795517 * S_NumWebPurchases
243019    +          +      -1.987305550542 * S_NumWebVisitsMonth
243020    +          +     2.46312593342153 * S_Recency  +     1.89469486725188 *
243021    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.63837717417638 * S_Income + 1.01712005677207 * S_Kidhome + 
-0.11452425716086 * S_MntFishProducts + -0.08273769039219 * S_MntFruits + -0.47045422182093 * 
S_MntGoldProds + -0.64593629987888 * S_MntMeatProducts + 0.41126087093412 * S_MntSweetProducts 
+ -0.00653581981542 * S_MntWines + -1.62534004647483 * S_NumCatalogPurchases + 
-0.74740978232431 * S_NumDealsPurchases + 0.2319226227964 * S_NumStorePurchases + 
0.31190969795517 * S_NumWebPurchases + -1.987305550542 * S_NumWebVisitsMonth + 
2.46312593342153 * S_Recency + 1.89469486725188 * S_Teenhome ;
243022    +   H1x1_3  =    -0.78523773312865 * S_Income  +    -1.40266608040579 *
243023    +        S_Kidhome  +     0.01206304735425 * S_MntFishProducts
243024    +          +    -0.50371384095637 * S_MntFruits  +    -0.93176870066879 *
243025    +        S_MntGoldProds  +    -0.53990224542491 * S_MntMeatProducts
243026    +          +    -0.73991431726966 * S_MntSweetProducts
243027    +          +    -0.21227505043037 * S_MntWines  +     0.42667885020643 *
243028    +        S_NumCatalogPurchases  +    -0.34821401096287 * S_NumDealsPurchases
243029    +          +    -2.50826402419251 * S_NumStorePurchases
243030    +          +    -0.30764477738015 * S_NumWebPurchases
243031    +          +     1.21240794582671 * S_NumWebVisitsMonth
243032    +          +    -2.22374004865256 * S_Recency  +    -0.07389156638234 *
243033    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.78523773312865 * S_Income + -1.40266608040579 * S_Kidhome + 
0.01206304735425 * S_MntFishProducts + -0.50371384095637 * S_MntFruits + -0.93176870066879 * 
S_MntGoldProds + -0.53990224542491 * S_MntMeatProducts + -0.73991431726966 * 
S_MntSweetProducts + -0.21227505043037 * S_MntWines + 0.42667885020643 * S_NumCatalogPurchases 
+ -0.34821401096287 * S_NumDealsPurchases + -2.50826402419251 * S_NumStorePurchases + 
-0.30764477738015 * S_NumWebPurchases + 1.21240794582671 * S_NumWebVisitsMonth + 
-2.22374004865256 * S_Recency + -0.07389156638234 * S_Teenhome ;
243034    +   H1x1_4  =     1.52339017953874 * S_Income  +     -0.0800472387091 *
243035    +        S_Kidhome  +    -0.81466158613596 * S_MntFishProducts
243036    +          +    -1.56740792821078 * S_MntFruits  +    -0.44251282056636 *
243037    +        S_MntGoldProds  +     4.21345569180051 * S_MntMeatProducts
243038    +          +     1.07674028011002 * S_MntSweetProducts
243039    +          +    -4.16668334099034 * S_MntWines  +     2.33183855256347 *
243040    +        S_NumCatalogPurchases  +     1.55678471765653 * S_NumDealsPurchases
243041    +          +    -0.47776935727231 * S_NumStorePurchases
243042    +          +     -0.5890810666834 * S_NumWebPurchases
243043    +          +      1.3845716796855 * S_NumWebVisitsMonth
243044    +          +    -0.37826249433224 * S_Recency  +    -0.32813220931783 *
243045    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.52339017953874 * S_Income + -0.0800472387091 * S_Kidhome + 
-0.81466158613596 * S_MntFishProducts + -1.56740792821078 * S_MntFruits + -0.44251282056636 * 
S_MntGoldProds + 4.21345569180051 * S_MntMeatProducts + 1.07674028011002 * S_MntSweetProducts 
+ -4.16668334099034 * S_MntWines + 2.33183855256347 * S_NumCatalogPurchases + 1.55678471765653 
* S_NumDealsPurchases + -0.47776935727231 * S_NumStorePurchases + -0.5890810666834 * 
S_NumWebPurchases + 1.3845716796855 * S_NumWebVisitsMonth + -0.37826249433224 * S_Recency + 
-0.32813220931783 * S_Teenhome ;
243046    +   H1x1_1  = H1x1_1  +     -1.8652801761626 * AcceptedCmp10
243047    +          +    -2.15838385124109 * AcceptedCmp20  +    -0.32281263106473 *
243048    +        AcceptedCmp30  +    -0.52751972284584 * AcceptedCmp40
243049    +          +    -0.16576520159698 * AcceptedCmp50  +      0.0798586391257 *
243050    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.8652801761626 * AcceptedCmp10 + -2.15838385124109 * 
AcceptedCmp20 + -0.32281263106473 * AcceptedCmp30 + -0.52751972284584 * AcceptedCmp40 + 
-0.16576520159698 * AcceptedCmp50 + 0.0798586391257 * Complain0 ;
243051    +   H1x1_2  = H1x1_2  +     1.18847829749899 * AcceptedCmp10
243052    +          +     2.28872916962314 * AcceptedCmp20  +      0.7666362501062 *
243053    +        AcceptedCmp30  +     0.63272382969915 * AcceptedCmp40
243054    +          +     1.03410667663543 * AcceptedCmp50  +    -0.44709535985633 *
243055    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.18847829749899 * AcceptedCmp10 + 2.28872916962314 * 
AcceptedCmp20 + 0.7666362501062 * AcceptedCmp30 + 0.63272382969915 * AcceptedCmp40 + 
1.03410667663543 * AcceptedCmp50 + -0.44709535985633 * Complain0 ;
243056    +   H1x1_3  = H1x1_3  +    -0.30260316693677 * AcceptedCmp10
243057    +          +     1.37858034146365 * AcceptedCmp20  +    -1.95638038137808 *
243058    +        AcceptedCmp30  +     -2.1581101738114 * AcceptedCmp40
243059    +          +    -1.72040670376675 * AcceptedCmp50  +     2.82913230380101 *
243060    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.30260316693677 * AcceptedCmp10 + 1.37858034146365 * 
AcceptedCmp20 + -1.95638038137808 * AcceptedCmp30 + -2.1581101738114 * AcceptedCmp40 + 
-1.72040670376675 * AcceptedCmp50 + 2.82913230380101 * Complain0 ;
243061    +   H1x1_4  = H1x1_4  +     0.37463576870294 * AcceptedCmp10
243062    +          +     -1.1935629973001 * AcceptedCmp20  +     -0.0357513820165 *
243063    +        AcceptedCmp30  +    -0.34228453024248 * AcceptedCmp40
243064    +          +     0.08692364147086 * AcceptedCmp50  +     0.01804293030366 *
243065    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.37463576870294 * AcceptedCmp10 + -1.1935629973001 * 
AcceptedCmp20 + -0.0357513820165 * AcceptedCmp30 + -0.34228453024248 * AcceptedCmp40 + 
0.08692364147086 * AcceptedCmp50 + 0.01804293030366 * Complain0 ;
243066    +   H1x1_1  = H1x1_1  +     0.10559298643668 * Education2n_Cycle
243067    +          +     -0.5051689695544 * EducationBasic  +     0.07434632730326 *
243068    +        EducationGraduation  +     0.68592368666749 * EducationMaster
243069    +          +     0.38999748028122 * Marital_StatusDivorced
243070    +          +     0.44180844463279 * Marital_StatusMarried
243071    +          +     0.63824884669155 * Marital_StatusSingle
243072    +          +    -0.26198648898013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.10559298643668 * Education2n_Cycle + 
-0.5051689695544 * EducationBasic + 0.07434632730326 * EducationGraduation + 0.68592368666749 
* EducationMaster + 0.38999748028122 * Marital_StatusDivorced + 0.44180844463279 * 
Marital_StatusMarried + 0.63824884669155 * Marital_StatusSingle + -0.26198648898013 * 
Marital_StatusTogether ;
243073    +   H1x1_2  = H1x1_2  +     0.38077564253123 * Education2n_Cycle
243074    +          +    -1.71516234680597 * EducationBasic  +      0.9305914926408 *
243075    +        EducationGraduation  +    -0.48500520310542 * EducationMaster
243076    +          +    -0.95537871859519 * Marital_StatusDivorced
243077    +          +     2.55061153921286 * Marital_StatusMarried
243078    +          +    -1.78007154396711 * Marital_StatusSingle
243079    +          +     1.47779717106964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38077564253123 * Education2n_Cycle + 
-1.71516234680597 * EducationBasic + 0.9305914926408 * EducationGraduation + -0.48500520310542 
* EducationMaster + -0.95537871859519 * Marital_StatusDivorced + 2.55061153921286 * 
Marital_StatusMarried + -1.78007154396711 * Marital_StatusSingle + 1.47779717106964 * 
Marital_StatusTogether ;
243080    +   H1x1_3  = H1x1_3  +    -0.26877104077313 * Education2n_Cycle
243081    +          +    -1.51047207681049 * EducationBasic  +     1.00818590807055 *
243082    +        EducationGraduation  +    -2.08836171183474 * EducationMaster
243083    +          +     1.29930912124343 * Marital_StatusDivorced
243084    +          +    -1.63037830924789 * Marital_StatusMarried
243085    +          +     0.19040732776086 * Marital_StatusSingle
243086    +          +     -3.9038060950259 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.26877104077313 * Education2n_Cycle + 
-1.51047207681049 * EducationBasic + 1.00818590807055 * EducationGraduation + 
-2.08836171183474 * EducationMaster + 1.29930912124343 * Marital_StatusDivorced + 
-1.63037830924789 * Marital_StatusMarried + 0.19040732776086 * Marital_StatusSingle + 
-3.9038060950259 * Marital_StatusTogether ;
243087    +   H1x1_4  = H1x1_4  +     0.59574708300703 * Education2n_Cycle
243088    +          +    -0.19936070861543 * EducationBasic  +     0.82683145042233 *
243089    +        EducationGraduation  +    -0.24015931152788 * EducationMaster
243090    +          +     -0.3129003025095 * Marital_StatusDivorced
243091    +          +     0.00843550425239 * Marital_StatusMarried
243092    +          +    -0.20416436114776 * Marital_StatusSingle
243093    +          +     1.08624823622502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.59574708300703 * Education2n_Cycle + 
-0.19936070861543 * EducationBasic + 0.82683145042233 * EducationGraduation + 
-0.24015931152788 * EducationMaster + -0.3129003025095 * Marital_StatusDivorced + 
0.00843550425239 * Marital_StatusMarried + -0.20416436114776 * Marital_StatusSingle + 
1.08624823622502 * Marital_StatusTogether ;
243094    +   H1x1_1  =    -2.66745806568988 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.66745806568988 + H1x1_1 ;
243095    +   H1x1_2  =     1.39870734752375 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.39870734752375 + H1x1_2 ;
243096    +   H1x1_3  =     3.90802178606462 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 3.90802178606462 + H1x1_3 ;
243097    +   H1x1_4  =    -1.61490323089776 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.61490323089776 + H1x1_4 ;
243098    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
243099    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
243100    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
243101    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
243102    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
243103    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
243104    +END;
MPRINT(EM_DIAGRAM):   END;
243105    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
243106    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
243107    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
243108    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
243109    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
243110    +END;
MPRINT(EM_DIAGRAM):   END;
243111    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243112    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
243113    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243114    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
243115    +   H1x2_1  =     0.40035517192793 * S_Income  +     1.50961149935512 *
243116    +        S_Kidhome  +    -0.71749794576247 * S_MntFishProducts
243117    +          +    -0.80539813415293 * S_MntFruits  +    -0.11190500470397 *
243118    +        S_MntGoldProds  +    -1.00287277559415 * S_MntMeatProducts
243119    +          +    -0.90866858123806 * S_MntSweetProducts
243120    +          +     0.48761861591898 * S_MntWines  +    -0.00278053699018 *
243121    +        S_NumCatalogPurchases  +     1.76527380505645 * S_NumDealsPurchases
243122    +          +     1.45805686107789 * S_NumStorePurchases
243123    +          +     1.48794767642409 * S_NumWebPurchases
243124    +          +    -1.24357395997191 * S_NumWebVisitsMonth
243125    +          +     2.73747730751211 * S_Recency  +    -0.74105180435611 *
243126    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.40035517192793 * S_Income + 1.50961149935512 * S_Kidhome + 
-0.71749794576247 * S_MntFishProducts + -0.80539813415293 * S_MntFruits + -0.11190500470397 * 
S_MntGoldProds + -1.00287277559415 * S_MntMeatProducts + -0.90866858123806 * 
S_MntSweetProducts + 0.48761861591898 * S_MntWines + -0.00278053699018 * S_NumCatalogPurchases 
+ 1.76527380505645 * S_NumDealsPurchases + 1.45805686107789 * S_NumStorePurchases + 
1.48794767642409 * S_NumWebPurchases + -1.24357395997191 * S_NumWebVisitsMonth + 
2.73747730751211 * S_Recency + -0.74105180435611 * S_Teenhome ;
243127    +   H1x2_2  =    -2.30368761501045 * S_Income  +     0.82837234680306 *
243128    +        S_Kidhome  +    -0.57801225504203 * S_MntFishProducts
243129    +          +    -0.53882153761332 * S_MntFruits  +    -0.06305202172404 *
243130    +        S_MntGoldProds  +    -0.83741138145577 * S_MntMeatProducts
243131    +          +     1.05010358762976 * S_MntSweetProducts
243132    +          +     -0.8308916879344 * S_MntWines  +     0.00135039846616 *
243133    +        S_NumCatalogPurchases  +     -0.1426130520252 * S_NumDealsPurchases
243134    +          +    -2.04318529474165 * S_NumStorePurchases
243135    +          +     1.64478964728594 * S_NumWebPurchases
243136    +          +    -0.74790322980646 * S_NumWebVisitsMonth
243137    +          +     0.44846346006135 * S_Recency  +    -1.17558204887145 *
243138    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.30368761501045 * S_Income + 0.82837234680306 * S_Kidhome + 
-0.57801225504203 * S_MntFishProducts + -0.53882153761332 * S_MntFruits + -0.06305202172404 * 
S_MntGoldProds + -0.83741138145577 * S_MntMeatProducts + 1.05010358762976 * S_MntSweetProducts 
+ -0.8308916879344 * S_MntWines + 0.00135039846616 * S_NumCatalogPurchases + -0.1426130520252 
* S_NumDealsPurchases + -2.04318529474165 * S_NumStorePurchases + 1.64478964728594 * 
S_NumWebPurchases + -0.74790322980646 * S_NumWebVisitsMonth + 0.44846346006135 * S_Recency + 
-1.17558204887145 * S_Teenhome ;
243139    +   H1x2_3  =     1.07803134847301 * S_Income  +     1.10001550023539 *
243140    +        S_Kidhome  +      2.1312863754193 * S_MntFishProducts
243141    +          +    -0.41841353908141 * S_MntFruits  +    -0.28009599678539 *
243142    +        S_MntGoldProds  +    -0.57516542648625 * S_MntMeatProducts
243143    +          +     0.39974532423377 * S_MntSweetProducts
243144    +          +    -1.03786923973351 * S_MntWines  +    -0.21873654141419 *
243145    +        S_NumCatalogPurchases  +    -0.12545360575656 * S_NumDealsPurchases
243146    +          +     0.70805557348415 * S_NumStorePurchases
243147    +          +     2.40362900277228 * S_NumWebPurchases
243148    +          +    -0.84521247676043 * S_NumWebVisitsMonth
243149    +          +     4.38953216910793 * S_Recency  +     1.39159599477449 *
243150    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.07803134847301 * S_Income + 1.10001550023539 * S_Kidhome + 
2.1312863754193 * S_MntFishProducts + -0.41841353908141 * S_MntFruits + -0.28009599678539 * 
S_MntGoldProds + -0.57516542648625 * S_MntMeatProducts + 0.39974532423377 * S_MntSweetProducts 
+ -1.03786923973351 * S_MntWines + -0.21873654141419 * S_NumCatalogPurchases + 
-0.12545360575656 * S_NumDealsPurchases + 0.70805557348415 * S_NumStorePurchases + 
2.40362900277228 * S_NumWebPurchases + -0.84521247676043 * S_NumWebVisitsMonth + 
4.38953216910793 * S_Recency + 1.39159599477449 * S_Teenhome ;
243151    +   H1x2_4  =      1.5904518722284 * S_Income  +     0.14957259343911 *
243152    +        S_Kidhome  +     1.71856101884761 * S_MntFishProducts
243153    +          +     0.97544338421034 * S_MntFruits  +     1.16387775609385 *
243154    +        S_MntGoldProds  +    -0.43463910907731 * S_MntMeatProducts
243155    +          +     1.67907268159197 * S_MntSweetProducts
243156    +          +    -0.67372438764914 * S_MntWines  +     0.34705529867224 *
243157    +        S_NumCatalogPurchases  +     1.55570260456887 * S_NumDealsPurchases
243158    +          +      0.0818178054474 * S_NumStorePurchases
243159    +          +     0.21533198164279 * S_NumWebPurchases
243160    +          +     2.13590425604302 * S_NumWebVisitsMonth
243161    +          +    -2.07481510631659 * S_Recency  +    -0.82288425478762 *
243162    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.5904518722284 * S_Income + 0.14957259343911 * S_Kidhome + 
1.71856101884761 * S_MntFishProducts + 0.97544338421034 * S_MntFruits + 1.16387775609385 * 
S_MntGoldProds + -0.43463910907731 * S_MntMeatProducts + 1.67907268159197 * S_MntSweetProducts 
+ -0.67372438764914 * S_MntWines + 0.34705529867224 * S_NumCatalogPurchases + 1.55570260456887 
* S_NumDealsPurchases + 0.0818178054474 * S_NumStorePurchases + 0.21533198164279 * 
S_NumWebPurchases + 2.13590425604302 * S_NumWebVisitsMonth + -2.07481510631659 * S_Recency + 
-0.82288425478762 * S_Teenhome ;
243163    +   H1x2_1  = H1x2_1  +    -1.62231361085618 * AcceptedCmp10
243164    +          +     0.93841494775887 * AcceptedCmp20  +      0.1734706863831 *
243165    +        AcceptedCmp30  +     0.16475784850175 * AcceptedCmp40
243166    +          +     0.65486951368163 * AcceptedCmp50  +      1.6226382489877 *
243167    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.62231361085618 * AcceptedCmp10 + 0.93841494775887 * 
AcceptedCmp20 + 0.1734706863831 * AcceptedCmp30 + 0.16475784850175 * AcceptedCmp40 + 
0.65486951368163 * AcceptedCmp50 + 1.6226382489877 * Complain0 ;
243168    +   H1x2_2  = H1x2_2  +     0.93875540013493 * AcceptedCmp10
243169    +          +     2.69754413059384 * AcceptedCmp20  +    -0.30913025234768 *
243170    +        AcceptedCmp30  +    -0.00924007964301 * AcceptedCmp40
243171    +          +     -0.7359545134435 * AcceptedCmp50  +    -0.44748157506074 *
243172    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.93875540013493 * AcceptedCmp10 + 2.69754413059384 * 
AcceptedCmp20 + -0.30913025234768 * AcceptedCmp30 + -0.00924007964301 * AcceptedCmp40 + 
-0.7359545134435 * AcceptedCmp50 + -0.44748157506074 * Complain0 ;
243173    +   H1x2_3  = H1x2_3  +      0.4023712256607 * AcceptedCmp10
243174    +          +    -0.46100225887196 * AcceptedCmp20  +    -0.11545325868036 *
243175    +        AcceptedCmp30  +     1.81326302523772 * AcceptedCmp40
243176    +          +     1.57642234573579 * AcceptedCmp50  +    -0.52645724664984 *
243177    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.4023712256607 * AcceptedCmp10 + -0.46100225887196 * 
AcceptedCmp20 + -0.11545325868036 * AcceptedCmp30 + 1.81326302523772 * AcceptedCmp40 + 
1.57642234573579 * AcceptedCmp50 + -0.52645724664984 * Complain0 ;
243178    +   H1x2_4  = H1x2_4  +    -1.08307715440234 * AcceptedCmp10
243179    +          +     0.10309372709877 * AcceptedCmp20  +    -1.18814330876811 *
243180    +        AcceptedCmp30  +    -1.69102202926075 * AcceptedCmp40
243181    +          +     0.10465943889984 * AcceptedCmp50  +    -0.96523771648083 *
243182    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.08307715440234 * AcceptedCmp10 + 0.10309372709877 * 
AcceptedCmp20 + -1.18814330876811 * AcceptedCmp30 + -1.69102202926075 * AcceptedCmp40 + 
0.10465943889984 * AcceptedCmp50 + -0.96523771648083 * Complain0 ;
243183    +   H1x2_1  = H1x2_1  +     0.57966380694999 * Education2n_Cycle
243184    +          +     1.09807543038463 * EducationBasic  +     0.56896005764417 *
243185    +        EducationGraduation  +     0.78238700450794 * EducationMaster
243186    +          +     0.09735596304222 * Marital_StatusDivorced
243187    +          +    -0.41892050812825 * Marital_StatusMarried
243188    +          +    -1.42753782654911 * Marital_StatusSingle
243189    +          +     2.12640980869845 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.57966380694999 * Education2n_Cycle + 
1.09807543038463 * EducationBasic + 0.56896005764417 * EducationGraduation + 0.78238700450794 
* EducationMaster + 0.09735596304222 * Marital_StatusDivorced + -0.41892050812825 * 
Marital_StatusMarried + -1.42753782654911 * Marital_StatusSingle + 2.12640980869845 * 
Marital_StatusTogether ;
243190    +   H1x2_2  = H1x2_2  +     1.23142964464278 * Education2n_Cycle
243191    +          +    -0.57685007681361 * EducationBasic  +     0.95565027871272 *
243192    +        EducationGraduation  +     1.03407121736627 * EducationMaster
243193    +          +    -0.32415267410507 * Marital_StatusDivorced
243194    +          +     0.49045578856782 * Marital_StatusMarried
243195    +          +    -1.95612005933176 * Marital_StatusSingle
243196    +          +    -0.09380239900044 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.23142964464278 * Education2n_Cycle + 
-0.57685007681361 * EducationBasic + 0.95565027871272 * EducationGraduation + 1.03407121736627 
* EducationMaster + -0.32415267410507 * Marital_StatusDivorced + 0.49045578856782 * 
Marital_StatusMarried + -1.95612005933176 * Marital_StatusSingle + -0.09380239900044 * 
Marital_StatusTogether ;
243197    +   H1x2_3  = H1x2_3  +    -0.59991828858437 * Education2n_Cycle
243198    +          +     0.16738017494874 * EducationBasic  +     1.11954020630495 *
243199    +        EducationGraduation  +    -1.26111004544108 * EducationMaster
243200    +          +    -1.25715350788627 * Marital_StatusDivorced
243201    +          +     0.74269511935299 * Marital_StatusMarried
243202    +          +    -0.27394822792771 * Marital_StatusSingle
243203    +          +     0.32120400150108 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.59991828858437 * Education2n_Cycle + 
0.16738017494874 * EducationBasic + 1.11954020630495 * EducationGraduation + -1.26111004544108 
* EducationMaster + -1.25715350788627 * Marital_StatusDivorced + 0.74269511935299 * 
Marital_StatusMarried + -0.27394822792771 * Marital_StatusSingle + 0.32120400150108 * 
Marital_StatusTogether ;
243204    +   H1x2_4  = H1x2_4  +     0.73858886461182 * Education2n_Cycle
243205    +          +     1.18482398810163 * EducationBasic  +     0.31912715416105 *
243206    +        EducationGraduation  +     -0.7403940659871 * EducationMaster
243207    +          +    -1.42754006114782 * Marital_StatusDivorced
243208    +          +    -0.13979120103654 * Marital_StatusMarried
243209    +          +    -1.66244370644258 * Marital_StatusSingle
243210    +          +     1.29295770867497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.73858886461182 * Education2n_Cycle + 
1.18482398810163 * EducationBasic + 0.31912715416105 * EducationGraduation + -0.7403940659871 
* EducationMaster + -1.42754006114782 * Marital_StatusDivorced + -0.13979120103654 * 
Marital_StatusMarried + -1.66244370644258 * Marital_StatusSingle + 1.29295770867497 * 
Marital_StatusTogether ;
243211    +   H1x2_1  =     0.02486753071365 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02486753071365 + H1x2_1 ;
243212    +   H1x2_2  =     1.30157602008517 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.30157602008517 + H1x2_2 ;
243213    +   H1x2_3  =    -0.71765289173772 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.71765289173772 + H1x2_3 ;
243214    +   H1x2_4  =    -0.28206267191961 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.28206267191961 + H1x2_4 ;
243215    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
243216    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
243217    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
243218    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
243219    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
243220    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
243221    +END;
MPRINT(EM_DIAGRAM):   END;
243222    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
243223    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
243224    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
243225    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
243226    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
243227    +END;
MPRINT(EM_DIAGRAM):   END;
243228    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243229    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
243230    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243231    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
243232    +   H2x1_1  =    -1.34021567967914 * H1x1_1  +    -0.82210150819056 * H1x1_2
243233    +          +      0.2051584088577 * H1x1_3  +    -0.14877251454609 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.34021567967914 * H1x1_1 + -0.82210150819056 * H1x1_2 + 
0.2051584088577 * H1x1_3 + -0.14877251454609 * H1x1_4 ;
243234    +   H2x1_2  =     5.90283136076368 * H1x1_1  +    -7.93891997601848 * H1x1_2
243235    +          +     6.88352608350263 * H1x1_3  +     4.96968417177752 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 5.90283136076368 * H1x1_1 + -7.93891997601848 * H1x1_2 + 
6.88352608350263 * H1x1_3 + 4.96968417177752 * H1x1_4 ;
243236    +   H2x1_3  =    -0.35820258372371 * H1x1_1  +      3.0004195561827 * H1x1_2
243237    +          +    -2.45737828305901 * H1x1_3  +     -3.3701635035096 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.35820258372371 * H1x1_1 + 3.0004195561827 * H1x1_2 + 
-2.45737828305901 * H1x1_3 + -3.3701635035096 * H1x1_4 ;
243238    +   H2x1_4  =    -2.21298094667436 * H1x1_1  +     0.26414252140039 * H1x1_2
243239    +          +     1.09094365218549 * H1x1_3  +     1.52196888791164 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.21298094667436 * H1x1_1 + 0.26414252140039 * H1x1_2 + 
1.09094365218549 * H1x1_3 + 1.52196888791164 * H1x1_4 ;
243240    +   H2x1_1  = H2x1_1  +    -0.84246838752596 * H1x2_1
243241    +          +     0.53874594317309 * H1x2_2  +     0.47956597308168 * H1x2_3
243242    +          +    -0.93255463077914 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.84246838752596 * H1x2_1 + 0.53874594317309 * H1x2_2 
+ 0.47956597308168 * H1x2_3 + -0.93255463077914 * H1x2_4 ;
243243    +   H2x1_2  = H2x1_2  +     -1.9223116287684 * H1x2_1
243244    +          +    -2.37377206970433 * H1x2_2  +    -0.73887953722708 * H1x2_3
243245    +          +     2.71044044080254 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.9223116287684 * H1x2_1 + -2.37377206970433 * H1x2_2 
+ -0.73887953722708 * H1x2_3 + 2.71044044080254 * H1x2_4 ;
243246    +   H2x1_3  = H2x1_3  +     0.53173546674544 * H1x2_1
243247    +          +     1.48831638926533 * H1x2_2  +     2.89231339277069 * H1x2_3
243248    +          +    -2.75774116509863 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.53173546674544 * H1x2_1 + 1.48831638926533 * H1x2_2 
+ 2.89231339277069 * H1x2_3 + -2.75774116509863 * H1x2_4 ;
243249    +   H2x1_4  = H2x1_4  +     1.42086435786687 * H1x2_1
243250    +          +     0.41116169758796 * H1x2_2  +    -1.89087404607062 * H1x2_3
243251    +          +     1.62153254823704 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.42086435786687 * H1x2_1 + 0.41116169758796 * H1x2_2 
+ -1.89087404607062 * H1x2_3 + 1.62153254823704 * H1x2_4 ;
243252    +   H2x1_1  =    -1.75788455741829 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.75788455741829 + H2x1_1 ;
243253    +   H2x1_2  =    -1.23949015246826 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.23949015246826 + H2x1_2 ;
243254    +   H2x1_3  =     0.22552341308337 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.22552341308337 + H2x1_3 ;
243255    +   H2x1_4  =    -0.29261642916715 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.29261642916715 + H2x1_4 ;
243256    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
243257    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
243258    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
243259    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
243260    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
243261    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
243262    +END;
MPRINT(EM_DIAGRAM):   END;
243263    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
243264    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
243265    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
243266    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
243267    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
243268    +END;
MPRINT(EM_DIAGRAM):   END;
243269    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243270    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
243271    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243272    +
243273    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
243274    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
243275    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
243276    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
243277    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
243278    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
243279    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
243280    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
243281    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
243282    +end;
MPRINT(EM_DIAGRAM):   end;
243283    +else do;
MPRINT(EM_DIAGRAM):   else do;
243284    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
243285    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
243286    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
243287    +   end;
MPRINT(EM_DIAGRAM):   end;
243288    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
243289    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
243290    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
243291    +   end;
MPRINT(EM_DIAGRAM):   end;
243292    +   else do;
MPRINT(EM_DIAGRAM):   else do;
243293    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
243294    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
243295    +   end;
MPRINT(EM_DIAGRAM):   end;
243296    +end;
MPRINT(EM_DIAGRAM):   end;
243297    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
243298    +   P_DepVar1  =    -0.01128614443737 * H2x1_1  +     20.5485882709782 * H2x1_2
243299    +          +    -12.1833710389136 * H2x1_3  +     -2.9534639226061 * H2x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.01128614443737 * H2x1_1 + 20.5485882709782 * H2x1_2 + 
-12.1833710389136 * H2x1_3 + -2.9534639226061 * H2x1_4 ;
243300    +   P_DepVar1  =     1.18328906065521 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.18328906065521 + P_DepVar1 ;
243301    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
243302    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
243303    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
243304    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
243305    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
243306    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
243307    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
243308    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
243309    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
243310    +END;
MPRINT(EM_DIAGRAM):   END;
243311    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
243312    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
243313    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
243314    +END;
MPRINT(EM_DIAGRAM):   END;
243315    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
243316    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
243317    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
243318    +END;
MPRINT(EM_DIAGRAM):   END;
243319    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
243320    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
243321    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
243322    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
243323    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
243324    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
243325    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
243326    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243327    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
243328    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243329    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
243330    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
243331    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
243332    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
243333    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
243334    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
243335    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
243336    +END;
MPRINT(EM_DIAGRAM):   END;
243337    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
243338    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
243339    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
243340    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
243341    +* Renaming variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural47;
243342    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
243343    +* Renaming Posterior variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural47;
243344    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
243345    +drop AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar1;
243346    +AutoNeural47_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar1 = P_DepVar1;
243347    +drop AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar0;
243348    +AutoNeural47_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar0 = P_DepVar0;
243349    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
243350    +* Renaming _WARN_ variable for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural47;
243351    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
243352    +length AutoNeural47_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural47_WARN_ $4;
243353    +drop AutoNeural47_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_WARN_;
243354    +AutoNeural47_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural47_WARN_ = _WARN_;
243355    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
243356    +* Ensmbl57: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 6 of 7;
243357    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
243358    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
243359    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
243360    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
243361    +* NODE: AutoNeural45;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural45;
243362    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
243363    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
243364    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
243365    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
243366    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
243367    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
243368    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
243369    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
243370    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
243371    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
243372    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
243373    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
243374    +LENGTH _WARN_ $4
243375    +      F_DepVar  $ 12
243376    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
243377    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
243378    +
243379    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
243380    +
243381    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
243382    +
243383    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
243384    +
243385    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
243386    +
243387    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
243388    +
243389    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
243390    +
243391    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
243392    +
243393    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
243394    +
243395    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
243396    +
243397    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
243398    +
243399    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
243400    +
243401    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
243402    +
243403    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
243404    +
243405    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
243406    +
243407    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
243408    +
243409    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
243410    +
243411    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
243412    +
243413    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
243414    +
243415    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
243416    +
243417    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
243418    +
243419    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
243420    +
243421    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
243422    +
243423    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
243424    +
243425    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
243426    +
243427    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
243428    +
243429    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
243430    +
243431    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
243432    +
243433    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
243434    +
243435    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
243436    +
243437    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
243438    +
243439    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
243440    +
243441    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
243442    +
243443    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
243444    +
243445    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
243446    +
243447    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
243448    +
243449    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
243450    +
243451    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
243452    +
243453    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
243454    +
243455    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
243456    +
243457    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
243458    +
243459    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
243460    +
243461    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
243462    +
243463    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
243464    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
243465    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
243466    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
243467    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
243468    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
243469    +end;
MPRINT(EM_DIAGRAM):   end;
243470    +else do;
MPRINT(EM_DIAGRAM):   else do;
243471    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
243472    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
243473    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
243474    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
243475    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
243476    +   end;
MPRINT(EM_DIAGRAM):   end;
243477    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
243478    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
243479    +   end;
MPRINT(EM_DIAGRAM):   end;
243480    +   else do;
MPRINT(EM_DIAGRAM):   else do;
243481    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
243482    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
243483    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
243484    +   end;
MPRINT(EM_DIAGRAM):   end;
243485    +end;
MPRINT(EM_DIAGRAM):   end;
243486    +
243487    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
243488    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
243489    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
243490    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
243491    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
243492    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
243493    +end;
MPRINT(EM_DIAGRAM):   end;
243494    +else do;
MPRINT(EM_DIAGRAM):   else do;
243495    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
243496    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
243497    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
243498    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
243499    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
243500    +   end;
MPRINT(EM_DIAGRAM):   end;
243501    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
243502    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
243503    +   end;
MPRINT(EM_DIAGRAM):   end;
243504    +   else do;
MPRINT(EM_DIAGRAM):   else do;
243505    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
243506    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
243507    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
243508    +   end;
MPRINT(EM_DIAGRAM):   end;
243509    +end;
MPRINT(EM_DIAGRAM):   end;
243510    +
243511    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
243512    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
243513    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
243514    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
243515    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
243516    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
243517    +end;
MPRINT(EM_DIAGRAM):   end;
243518    +else do;
MPRINT(EM_DIAGRAM):   else do;
243519    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
243520    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
243521    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
243522    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
243523    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
243524    +   end;
MPRINT(EM_DIAGRAM):   end;
243525    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
243526    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
243527    +   end;
MPRINT(EM_DIAGRAM):   end;
243528    +   else do;
MPRINT(EM_DIAGRAM):   else do;
243529    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
243530    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
243531    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
243532    +   end;
MPRINT(EM_DIAGRAM):   end;
243533    +end;
MPRINT(EM_DIAGRAM):   end;
243534    +
243535    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
243536    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
243537    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
243538    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
243539    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
243540    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
243541    +end;
MPRINT(EM_DIAGRAM):   end;
243542    +else do;
MPRINT(EM_DIAGRAM):   else do;
243543    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
243544    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
243545    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
243546    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
243547    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
243548    +   end;
MPRINT(EM_DIAGRAM):   end;
243549    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
243550    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
243551    +   end;
MPRINT(EM_DIAGRAM):   end;
243552    +   else do;
MPRINT(EM_DIAGRAM):   else do;
243553    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
243554    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
243555    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
243556    +   end;
MPRINT(EM_DIAGRAM):   end;
243557    +end;
MPRINT(EM_DIAGRAM):   end;
243558    +
243559    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
243560    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
243561    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
243562    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
243563    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
243564    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
243565    +end;
MPRINT(EM_DIAGRAM):   end;
243566    +else do;
MPRINT(EM_DIAGRAM):   else do;
243567    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
243568    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
243569    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
243570    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
243571    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
243572    +   end;
MPRINT(EM_DIAGRAM):   end;
243573    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
243574    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
243575    +   end;
MPRINT(EM_DIAGRAM):   end;
243576    +   else do;
MPRINT(EM_DIAGRAM):   else do;
243577    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
243578    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
243579    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
243580    +   end;
MPRINT(EM_DIAGRAM):   end;
243581    +end;
MPRINT(EM_DIAGRAM):   end;
243582    +
243583    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
243584    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
243585    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
243586    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
243587    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
243588    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
243589    +end;
MPRINT(EM_DIAGRAM):   end;
243590    +else do;
MPRINT(EM_DIAGRAM):   else do;
243591    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
243592    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
243593    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
243594    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
243595    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
243596    +   end;
MPRINT(EM_DIAGRAM):   end;
243597    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
243598    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
243599    +   end;
MPRINT(EM_DIAGRAM):   end;
243600    +   else do;
MPRINT(EM_DIAGRAM):   else do;
243601    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
243602    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
243603    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
243604    +   end;
MPRINT(EM_DIAGRAM):   end;
243605    +end;
MPRINT(EM_DIAGRAM):   end;
243606    +
243607    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
243608    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
243609    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
243610    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
243611    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
243612    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
243613    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
243614    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
243615    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
243616    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
243617    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
243618    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
243619    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
243620    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
243621    +end;
MPRINT(EM_DIAGRAM):   end;
243622    +else do;
MPRINT(EM_DIAGRAM):   else do;
243623    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
243624    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
243625    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
243626    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
243627    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
243628    +   end;
MPRINT(EM_DIAGRAM):   end;
243629    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
243630    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
243631    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
243632    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
243633    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
243634    +   end;
MPRINT(EM_DIAGRAM):   end;
243635    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
243636    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
243637    +   end;
MPRINT(EM_DIAGRAM):   end;
243638    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
243639    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
243640    +   end;
MPRINT(EM_DIAGRAM):   end;
243641    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
243642    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
243643    +   end;
MPRINT(EM_DIAGRAM):   end;
243644    +   else do;
MPRINT(EM_DIAGRAM):   else do;
243645    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
243646    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
243647    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
243648    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
243649    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
243650    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
243651    +   end;
MPRINT(EM_DIAGRAM):   end;
243652    +end;
MPRINT(EM_DIAGRAM):   end;
243653    +
243654    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
243655    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
243656    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
243657    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
243658    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
243659    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
243660    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
243661    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
243662    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
243663    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
243664    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
243665    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
243666    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
243667    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
243668    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
243669    +end;
MPRINT(EM_DIAGRAM):   end;
243670    +else do;
MPRINT(EM_DIAGRAM):   else do;
243671    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
243672    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
243673    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
243674    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
243675    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
243676    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
243677    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
243678    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
243679    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
243680    +         end;
MPRINT(EM_DIAGRAM):   end;
243681    +         else do;
MPRINT(EM_DIAGRAM):   else do;
243682    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
243683    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
243684    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
243685    +            end;
MPRINT(EM_DIAGRAM):   end;
243686    +         end;
MPRINT(EM_DIAGRAM):   end;
243687    +      end;
MPRINT(EM_DIAGRAM):   end;
243688    +      else do;
MPRINT(EM_DIAGRAM):   else do;
243689    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
243690    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
243691    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
243692    +         end;
MPRINT(EM_DIAGRAM):   end;
243693    +      end;
MPRINT(EM_DIAGRAM):   end;
243694    +   end;
MPRINT(EM_DIAGRAM):   end;
243695    +   else do;
MPRINT(EM_DIAGRAM):   else do;
243696    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
243697    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
243698    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
243699    +      end;
MPRINT(EM_DIAGRAM):   end;
243700    +      else do;
MPRINT(EM_DIAGRAM):   else do;
243701    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
243702    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
243703    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
243704    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
243705    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
243706    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
243707    +         end;
MPRINT(EM_DIAGRAM):   end;
243708    +      end;
MPRINT(EM_DIAGRAM):   end;
243709    +   end;
MPRINT(EM_DIAGRAM):   end;
243710    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
243711    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
243712    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
243713    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
243714    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
243715    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
243716    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
243717    +   end;
MPRINT(EM_DIAGRAM):   end;
243718    +end;
MPRINT(EM_DIAGRAM):   end;
243719    +
243720    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243721    +*** Checking missing input Interval
243722    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
243723    +
243724    +IF NMISS(
243725    +   Income ,
243726    +   Kidhome ,
243727    +   MntFishProducts ,
243728    +   MntFruits ,
243729    +   MntGoldProds ,
243730    +   MntMeatProducts ,
243731    +   MntSweetProducts ,
243732    +   MntWines ,
243733    +   NumCatalogPurchases ,
243734    +   NumDealsPurchases ,
243735    +   NumStorePurchases ,
243736    +   NumWebPurchases ,
243737    +   NumWebVisitsMonth ,
243738    +   Recency ,
243739    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
243740    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
243741    +
243742    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
243743    +END;
MPRINT(EM_DIAGRAM):   END;
243744    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243745    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
243746    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243747    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
243748    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
243749    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
243750    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
243751    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
243752    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
243753    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
243754    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
243755    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
243756    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
243757    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
243758    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
243759    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
243760    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
243761    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
243762    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
243763    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
243764    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
243765    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
243766    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
243767    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
243768    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
243769    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
243770    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
243771    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
243772    +END;
MPRINT(EM_DIAGRAM):   END;
243773    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
243774    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
243775    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
243776    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
243777    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
243778    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
243779    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
243780    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
243781    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
243782    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
243783    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
243784    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
243785    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
243786    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
243787    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
243788    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
243789    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
243790    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
243791    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
243792    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
243793    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
243794    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
243795    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
243796    +   ELSE S_NumCatalogPurchases
243797    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
243798    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
243799    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
243800    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
243801    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
243802    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
243803    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
243804    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
243805    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
243806    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
243807    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
243808    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
243809    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
243810    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
243811    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
243812    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
243813    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
243814    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
243815    +END;
MPRINT(EM_DIAGRAM):   END;
243816    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243817    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
243818    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243819    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243820    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
243821    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243822    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243823    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
243824    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243825    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
243826    +   H1x1_1  =     0.95463807935638 * S_Income  +     -0.0812123000279 *
243827    +        S_Kidhome  +    -1.17242250965796 * S_MntFishProducts
243828    +          +    -0.39894096707412 * S_MntFruits  +     0.48282664436672 *
243829    +        S_MntGoldProds  +       7.765847453582 * S_MntMeatProducts
243830    +          +    -0.44570165516063 * S_MntSweetProducts
243831    +          +    -1.40872100231855 * S_MntWines  +     1.40783708957732 *
243832    +        S_NumCatalogPurchases  +     1.49155573260533 * S_NumDealsPurchases
243833    +          +    -1.76291210288234 * S_NumStorePurchases
243834    +          +    -2.02392782824649 * S_NumWebPurchases
243835    +          +     1.28490910676992 * S_NumWebVisitsMonth
243836    +          +    -1.30767557862851 * S_Recency  +    -0.59235237740193 *
243837    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.95463807935638 * S_Income + -0.0812123000279 * S_Kidhome + 
-1.17242250965796 * S_MntFishProducts + -0.39894096707412 * S_MntFruits + 0.48282664436672 * 
S_MntGoldProds + 7.765847453582 * S_MntMeatProducts + -0.44570165516063 * S_MntSweetProducts + 
-1.40872100231855 * S_MntWines + 1.40783708957732 * S_NumCatalogPurchases + 1.49155573260533 * 
S_NumDealsPurchases + -1.76291210288234 * S_NumStorePurchases + -2.02392782824649 * 
S_NumWebPurchases + 1.28490910676992 * S_NumWebVisitsMonth + -1.30767557862851 * S_Recency + 
-0.59235237740193 * S_Teenhome ;
243838    +   H1x1_2  =    -0.44691945203456 * S_Income  +     0.39379891740392 *
243839    +        S_Kidhome  +     0.02372129308662 * S_MntFishProducts
243840    +          +     0.20627554813879 * S_MntFruits  +     0.34760356004051 *
243841    +        S_MntGoldProds  +    -0.95672595976635 * S_MntMeatProducts
243842    +          +     0.29239311560831 * S_MntSweetProducts
243843    +          +     1.16929881835698 * S_MntWines  +    -1.00380099933966 *
243844    +        S_NumCatalogPurchases  +     0.13934722329916 * S_NumDealsPurchases
243845    +          +     0.94246962588327 * S_NumStorePurchases
243846    +          +      0.9680353780544 * S_NumWebPurchases
243847    +          +    -2.21882487627334 * S_NumWebVisitsMonth
243848    +          +     2.11904606383155 * S_Recency  +      0.6539185986418 *
243849    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.44691945203456 * S_Income + 0.39379891740392 * S_Kidhome + 
0.02372129308662 * S_MntFishProducts + 0.20627554813879 * S_MntFruits + 0.34760356004051 * 
S_MntGoldProds + -0.95672595976635 * S_MntMeatProducts + 0.29239311560831 * S_MntSweetProducts 
+ 1.16929881835698 * S_MntWines + -1.00380099933966 * S_NumCatalogPurchases + 0.13934722329916 
* S_NumDealsPurchases + 0.94246962588327 * S_NumStorePurchases + 0.9680353780544 * 
S_NumWebPurchases + -2.21882487627334 * S_NumWebVisitsMonth + 2.11904606383155 * S_Recency + 
0.6539185986418 * S_Teenhome ;
243850    +   H1x1_1  = H1x1_1  +    -3.59113827146831 * AcceptedCmp10
243851    +          +    -0.49569953193794 * AcceptedCmp20  +    -0.52167719336095 *
243852    +        AcceptedCmp30  +    -0.86715095433046 * AcceptedCmp40
243853    +          +    -5.62926111624877 * AcceptedCmp50  +     0.11096869316425 *
243854    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -3.59113827146831 * AcceptedCmp10 + -0.49569953193794 
* AcceptedCmp20 + -0.52167719336095 * AcceptedCmp30 + -0.86715095433046 * AcceptedCmp40 + 
-5.62926111624877 * AcceptedCmp50 + 0.11096869316425 * Complain0 ;
243855    +   H1x1_2  = H1x1_2  +     0.46033758530017 * AcceptedCmp10
243856    +          +     0.35006796696269 * AcceptedCmp20  +     0.97811071409034 *
243857    +        AcceptedCmp30  +     0.99898386731466 * AcceptedCmp40
243858    +          +     1.09004749757455 * AcceptedCmp50  +    -0.37828411200383 *
243859    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.46033758530017 * AcceptedCmp10 + 0.35006796696269 * 
AcceptedCmp20 + 0.97811071409034 * AcceptedCmp30 + 0.99898386731466 * AcceptedCmp40 + 
1.09004749757455 * AcceptedCmp50 + -0.37828411200383 * Complain0 ;
243860    +   H1x1_1  = H1x1_1  +    -0.19002184370931 * Education2n_Cycle
243861    +          +      0.4572325462076 * EducationBasic  +     0.18712226653295 *
243862    +        EducationGraduation  +     0.44122744485667 * EducationMaster
243863    +          +    -0.37907342816265 * Marital_StatusDivorced
243864    +          +     0.12610640291685 * Marital_StatusMarried
243865    +          +     0.51984913420219 * Marital_StatusSingle
243866    +          +     0.07401117310472 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19002184370931 * Education2n_Cycle + 
0.4572325462076 * EducationBasic + 0.18712226653295 * EducationGraduation + 0.44122744485667 * 
EducationMaster + -0.37907342816265 * Marital_StatusDivorced + 0.12610640291685 * 
Marital_StatusMarried + 0.51984913420219 * Marital_StatusSingle + 0.07401117310472 * 
Marital_StatusTogether ;
243867    +   H1x1_2  = H1x1_2  +    -0.33166298059049 * Education2n_Cycle
243868    +          +     1.29947160945083 * EducationBasic  +    -0.61327168479974 *
243869    +        EducationGraduation  +    -0.26642525612671 * EducationMaster
243870    +          +    -1.03351623479699 * Marital_StatusDivorced
243871    +          +     1.44541386522162 * Marital_StatusMarried
243872    +          +    -1.03636573521294 * Marital_StatusSingle
243873    +          +     1.72091885709893 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.33166298059049 * Education2n_Cycle + 
1.29947160945083 * EducationBasic + -0.61327168479974 * EducationGraduation + 
-0.26642525612671 * EducationMaster + -1.03351623479699 * Marital_StatusDivorced + 
1.44541386522162 * Marital_StatusMarried + -1.03636573521294 * Marital_StatusSingle + 
1.72091885709893 * Marital_StatusTogether ;
243874    +   H1x1_1  =     10.1449432133402 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 10.1449432133402 + H1x1_1 ;
243875    +   H1x1_2  =    -2.11517502439063 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.11517502439063 + H1x1_2 ;
243876    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
243877    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
243878    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
243879    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
243880    +END;
MPRINT(EM_DIAGRAM):   END;
243881    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
243882    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
243883    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
243884    +END;
MPRINT(EM_DIAGRAM):   END;
243885    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243886    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
243887    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243888    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
243889    +   H1x2_1  =     -0.8682144724836 * S_Income  +      2.3024809346762 *
243890    +        S_Kidhome  +     0.64624727466292 * S_MntFishProducts
243891    +          +    -0.09660410291886 * S_MntFruits  +    -1.79562837605117 *
243892    +        S_MntGoldProds  +      0.1276827318716 * S_MntMeatProducts
243893    +          +    -0.56491281055157 * S_MntSweetProducts
243894    +          +     0.93663442469929 * S_MntWines  +    -0.00899150883311 *
243895    +        S_NumCatalogPurchases  +    -1.22662917925595 * S_NumDealsPurchases
243896    +          +    -0.90340706582786 * S_NumStorePurchases
243897    +          +    -1.91501626179453 * S_NumWebPurchases
243898    +          +     0.10121028558369 * S_NumWebVisitsMonth
243899    +          +     1.60735726265156 * S_Recency  +     0.23538323190125 *
243900    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.8682144724836 * S_Income + 2.3024809346762 * S_Kidhome + 
0.64624727466292 * S_MntFishProducts + -0.09660410291886 * S_MntFruits + -1.79562837605117 * 
S_MntGoldProds + 0.1276827318716 * S_MntMeatProducts + -0.56491281055157 * S_MntSweetProducts 
+ 0.93663442469929 * S_MntWines + -0.00899150883311 * S_NumCatalogPurchases + 
-1.22662917925595 * S_NumDealsPurchases + -0.90340706582786 * S_NumStorePurchases + 
-1.91501626179453 * S_NumWebPurchases + 0.10121028558369 * S_NumWebVisitsMonth + 
1.60735726265156 * S_Recency + 0.23538323190125 * S_Teenhome ;
243901    +   H1x2_2  =    -1.09261687432274 * S_Income  +     1.20111535021385 *
243902    +        S_Kidhome  +    -1.69538442721283 * S_MntFishProducts
243903    +          +    -0.70987820940317 * S_MntFruits  +    -1.60645342742617 *
243904    +        S_MntGoldProds  +    -0.30176111780721 * S_MntMeatProducts
243905    +          +    -0.23001625322332 * S_MntSweetProducts
243906    +          +    -0.14467043598448 * S_MntWines  +     0.41886993157522 *
243907    +        S_NumCatalogPurchases  +     1.96896752447653 * S_NumDealsPurchases
243908    +          +    -2.13716920911877 * S_NumStorePurchases
243909    +          +    -0.33508808117738 * S_NumWebPurchases
243910    +          +     -2.0809737926136 * S_NumWebVisitsMonth
243911    +          +     1.03175786727839 * S_Recency  +      0.7367575698643 *
243912    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.09261687432274 * S_Income + 1.20111535021385 * S_Kidhome + 
-1.69538442721283 * S_MntFishProducts + -0.70987820940317 * S_MntFruits + -1.60645342742617 * 
S_MntGoldProds + -0.30176111780721 * S_MntMeatProducts + -0.23001625322332 * 
S_MntSweetProducts + -0.14467043598448 * S_MntWines + 0.41886993157522 * S_NumCatalogPurchases 
+ 1.96896752447653 * S_NumDealsPurchases + -2.13716920911877 * S_NumStorePurchases + 
-0.33508808117738 * S_NumWebPurchases + -2.0809737926136 * S_NumWebVisitsMonth + 
1.03175786727839 * S_Recency + 0.7367575698643 * S_Teenhome ;
243913    +   H1x2_1  = H1x2_1  +     1.58943051578323 * AcceptedCmp10
243914    +          +     0.09118005069971 * AcceptedCmp20  +     1.19759908387569 *
243915    +        AcceptedCmp30  +     0.89598378494479 * AcceptedCmp40
243916    +          +     0.46816867379718 * AcceptedCmp50  +     1.86944333764097 *
243917    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.58943051578323 * AcceptedCmp10 + 0.09118005069971 * 
AcceptedCmp20 + 1.19759908387569 * AcceptedCmp30 + 0.89598378494479 * AcceptedCmp40 + 
0.46816867379718 * AcceptedCmp50 + 1.86944333764097 * Complain0 ;
243918    +   H1x2_2  = H1x2_2  +    -0.08862601564048 * AcceptedCmp10
243919    +          +    -3.30636530499001 * AcceptedCmp20  +     0.15596560905391 *
243920    +        AcceptedCmp30  +     0.09538395772421 * AcceptedCmp40
243921    +          +     0.55380047577072 * AcceptedCmp50  +    -1.45096025939708 *
243922    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.08862601564048 * AcceptedCmp10 + -3.30636530499001 
* AcceptedCmp20 + 0.15596560905391 * AcceptedCmp30 + 0.09538395772421 * AcceptedCmp40 + 
0.55380047577072 * AcceptedCmp50 + -1.45096025939708 * Complain0 ;
243923    +   H1x2_1  = H1x2_1  +     -0.8656532372301 * Education2n_Cycle
243924    +          +     1.21189313523907 * EducationBasic  +     1.51417472534213 *
243925    +        EducationGraduation  +     0.48964474451872 * EducationMaster
243926    +          +     1.22462877499103 * Marital_StatusDivorced
243927    +          +     0.55976057621985 * Marital_StatusMarried
243928    +          +     -0.3198252517086 * Marital_StatusSingle
243929    +          +     0.23778601487144 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.8656532372301 * Education2n_Cycle + 
1.21189313523907 * EducationBasic + 1.51417472534213 * EducationGraduation + 0.48964474451872 
* EducationMaster + 1.22462877499103 * Marital_StatusDivorced + 0.55976057621985 * 
Marital_StatusMarried + -0.3198252517086 * Marital_StatusSingle + 0.23778601487144 * 
Marital_StatusTogether ;
243930    +   H1x2_2  = H1x2_2  +     0.58231562363597 * Education2n_Cycle
243931    +          +    -0.76544661145643 * EducationBasic  +     -0.6650405134602 *
243932    +        EducationGraduation  +    -1.59533016160829 * EducationMaster
243933    +          +     0.32730811728353 * Marital_StatusDivorced
243934    +          +     1.61519773132998 * Marital_StatusMarried
243935    +          +    -1.42728303824254 * Marital_StatusSingle
243936    +          +     1.39334432128351 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58231562363597 * Education2n_Cycle + 
-0.76544661145643 * EducationBasic + -0.6650405134602 * EducationGraduation + 
-1.59533016160829 * EducationMaster + 0.32730811728353 * Marital_StatusDivorced + 
1.61519773132998 * Marital_StatusMarried + -1.42728303824254 * Marital_StatusSingle + 
1.39334432128351 * Marital_StatusTogether ;
243937    +   H1x2_1  =     1.49479859857755 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.49479859857755 + H1x2_1 ;
243938    +   H1x2_2  =     -0.6918737847278 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.6918737847278 + H1x2_2 ;
243939    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
243940    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
243941    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
243942    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
243943    +END;
MPRINT(EM_DIAGRAM):   END;
243944    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
243945    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
243946    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
243947    +END;
MPRINT(EM_DIAGRAM):   END;
243948    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243949    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
243950    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243951    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
243952    +   H2x1_1  =     1.67705445310922 * H1x1_1  +     -1.4133773927734 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.67705445310922 * H1x1_1 + -1.4133773927734 * H1x1_2 ;
243953    +   H2x1_2  =    -2.14069220527729 * H1x1_1  +     2.80569007785887 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.14069220527729 * H1x1_1 + 2.80569007785887 * H1x1_2 ;
243954    +   H2x1_1  = H2x1_1  +    -0.57216138417153 * H1x2_1
243955    +          +     1.42286315059473 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.57216138417153 * H1x2_1 + 1.42286315059473 * H1x2_2 
;
243956    +   H2x1_2  = H2x1_2  +     1.62250993087733 * H1x2_1
243957    +          +     0.34104856545583 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.62250993087733 * H1x2_1 + 0.34104856545583 * H1x2_2 ;
243958    +   H2x1_1  =    -3.48786428904302 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.48786428904302 + H2x1_1 ;
243959    +   H2x1_2  =    -0.43119827941199 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.43119827941199 + H2x1_2 ;
243960    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
243961    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
243962    +END;
MPRINT(EM_DIAGRAM):   END;
243963    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
243964    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
243965    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
243966    +END;
MPRINT(EM_DIAGRAM):   END;
243967    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243968    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
243969    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
243970    +
243971    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
243972    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
243973    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
243974    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
243975    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
243976    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
243977    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
243978    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
243979    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
243980    +end;
MPRINT(EM_DIAGRAM):   end;
243981    +else do;
MPRINT(EM_DIAGRAM):   else do;
243982    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
243983    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
243984    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
243985    +   end;
MPRINT(EM_DIAGRAM):   end;
243986    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
243987    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
243988    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
243989    +   end;
MPRINT(EM_DIAGRAM):   end;
243990    +   else do;
MPRINT(EM_DIAGRAM):   else do;
243991    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
243992    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
243993    +   end;
MPRINT(EM_DIAGRAM):   end;
243994    +end;
MPRINT(EM_DIAGRAM):   end;
243995    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
243996    +   P_DepVar1  =    -9.14009115080293 * H2x1_1  +    -5.28591504747655 * H2x1_2
243997    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.14009115080293 * H2x1_1 + -5.28591504747655 * H2x1_2 ;
243998    +   P_DepVar1  =    -3.08988807073218 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08988807073218 + P_DepVar1 ;
243999    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
244000    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
244001    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
244002    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
244003    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
244004    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
244005    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
244006    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
244007    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
244008    +END;
MPRINT(EM_DIAGRAM):   END;
244009    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
244010    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
244011    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
244012    +END;
MPRINT(EM_DIAGRAM):   END;
244013    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
244014    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
244015    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
244016    +END;
MPRINT(EM_DIAGRAM):   END;
244017    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
244018    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
244019    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
244020    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
244021    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
244022    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
244023    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
244024    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244025    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
244026    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244027    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
244028    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
244029    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
244030    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
244031    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
244032    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
244033    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
244034    +END;
MPRINT(EM_DIAGRAM):   END;
244035    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
244036    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
244037    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
244038    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
244039    +* Renaming variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural45;
244040    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244041    +* Renaming Posterior variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural45;
244042    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244043    +drop AutoNeural45_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar1;
244044    +AutoNeural45_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar1 = P_DepVar1;
244045    +drop AutoNeural45_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar0;
244046    +AutoNeural45_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar0 = P_DepVar0;
244047    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244048    +* Renaming _WARN_ variable for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural45;
244049    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244050    +length AutoNeural45_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural45_WARN_ $4;
244051    +drop AutoNeural45_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_WARN_;
244052    +AutoNeural45_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural45_WARN_ = _WARN_;
244053    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244054    +* Ensmbl57: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 7 of 7;
244055    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244056    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244057    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
244058    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
244059    +* NODE: AutoNeural44;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural44;
244060    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244061    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
244062    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
244063    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
244064    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
244065    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
244066    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
244067    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
244068    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
244069    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
244070    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
244071    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
244072    +LENGTH _WARN_ $4
244073    +      F_DepVar  $ 12
244074    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
244075    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
244076    +
244077    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
244078    +
244079    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
244080    +
244081    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
244082    +
244083    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
244084    +
244085    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
244086    +
244087    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
244088    +
244089    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
244090    +
244091    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
244092    +
244093    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
244094    +
244095    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
244096    +
244097    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
244098    +
244099    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
244100    +
244101    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
244102    +
244103    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
244104    +
244105    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
244106    +
244107    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
244108    +
244109    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
244110    +
244111    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
244112    +
244113    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
244114    +
244115    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
244116    +
244117    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
244118    +
244119    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
244120    +
244121    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
244122    +
244123    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
244124    +
244125    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
244126    +
244127    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
244128    +
244129    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
244130    +
244131    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
244132    +
244133    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
244134    +
244135    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
244136    +
244137    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
244138    +
244139    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
244140    +
244141    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
244142    +
244143    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
244144    +
244145    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
244146    +
244147    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
244148    +
244149    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
244150    +
244151    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
244152    +
244153    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
244154    +
244155    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
244156    +
244157    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
244158    +
244159    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
244160    +
244161    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
244162    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
244163    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
244164    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
244165    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
244166    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
244167    +end;
MPRINT(EM_DIAGRAM):   end;
244168    +else do;
MPRINT(EM_DIAGRAM):   else do;
244169    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
244170    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
244171    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
244172    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
244173    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
244174    +   end;
MPRINT(EM_DIAGRAM):   end;
244175    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
244176    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
244177    +   end;
MPRINT(EM_DIAGRAM):   end;
244178    +   else do;
MPRINT(EM_DIAGRAM):   else do;
244179    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
244180    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
244181    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
244182    +   end;
MPRINT(EM_DIAGRAM):   end;
244183    +end;
MPRINT(EM_DIAGRAM):   end;
244184    +
244185    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
244186    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
244187    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
244188    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
244189    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
244190    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
244191    +end;
MPRINT(EM_DIAGRAM):   end;
244192    +else do;
MPRINT(EM_DIAGRAM):   else do;
244193    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
244194    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
244195    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
244196    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
244197    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
244198    +   end;
MPRINT(EM_DIAGRAM):   end;
244199    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
244200    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
244201    +   end;
MPRINT(EM_DIAGRAM):   end;
244202    +   else do;
MPRINT(EM_DIAGRAM):   else do;
244203    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
244204    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
244205    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
244206    +   end;
MPRINT(EM_DIAGRAM):   end;
244207    +end;
MPRINT(EM_DIAGRAM):   end;
244208    +
244209    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
244210    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
244211    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
244212    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
244213    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
244214    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
244215    +end;
MPRINT(EM_DIAGRAM):   end;
244216    +else do;
MPRINT(EM_DIAGRAM):   else do;
244217    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
244218    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
244219    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
244220    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
244221    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
244222    +   end;
MPRINT(EM_DIAGRAM):   end;
244223    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
244224    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
244225    +   end;
MPRINT(EM_DIAGRAM):   end;
244226    +   else do;
MPRINT(EM_DIAGRAM):   else do;
244227    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
244228    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
244229    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
244230    +   end;
MPRINT(EM_DIAGRAM):   end;
244231    +end;
MPRINT(EM_DIAGRAM):   end;
244232    +
244233    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
244234    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
244235    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
244236    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
244237    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
244238    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
244239    +end;
MPRINT(EM_DIAGRAM):   end;
244240    +else do;
MPRINT(EM_DIAGRAM):   else do;
244241    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
244242    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
244243    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
244244    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
244245    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
244246    +   end;
MPRINT(EM_DIAGRAM):   end;
244247    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
244248    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
244249    +   end;
MPRINT(EM_DIAGRAM):   end;
244250    +   else do;
MPRINT(EM_DIAGRAM):   else do;
244251    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
244252    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
244253    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
244254    +   end;
MPRINT(EM_DIAGRAM):   end;
244255    +end;
MPRINT(EM_DIAGRAM):   end;
244256    +
244257    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
244258    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
244259    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
244260    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
244261    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
244262    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
244263    +end;
MPRINT(EM_DIAGRAM):   end;
244264    +else do;
MPRINT(EM_DIAGRAM):   else do;
244265    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
244266    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
244267    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
244268    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
244269    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
244270    +   end;
MPRINT(EM_DIAGRAM):   end;
244271    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
244272    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
244273    +   end;
MPRINT(EM_DIAGRAM):   end;
244274    +   else do;
MPRINT(EM_DIAGRAM):   else do;
244275    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
244276    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
244277    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
244278    +   end;
MPRINT(EM_DIAGRAM):   end;
244279    +end;
MPRINT(EM_DIAGRAM):   end;
244280    +
244281    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
244282    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
244283    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
244284    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
244285    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
244286    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
244287    +end;
MPRINT(EM_DIAGRAM):   end;
244288    +else do;
MPRINT(EM_DIAGRAM):   else do;
244289    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
244290    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
244291    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
244292    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
244293    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
244294    +   end;
MPRINT(EM_DIAGRAM):   end;
244295    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
244296    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
244297    +   end;
MPRINT(EM_DIAGRAM):   end;
244298    +   else do;
MPRINT(EM_DIAGRAM):   else do;
244299    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
244300    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
244301    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
244302    +   end;
MPRINT(EM_DIAGRAM):   end;
244303    +end;
MPRINT(EM_DIAGRAM):   end;
244304    +
244305    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
244306    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
244307    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
244308    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
244309    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
244310    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
244311    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
244312    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
244313    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
244314    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
244315    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
244316    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
244317    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
244318    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
244319    +end;
MPRINT(EM_DIAGRAM):   end;
244320    +else do;
MPRINT(EM_DIAGRAM):   else do;
244321    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
244322    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
244323    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
244324    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
244325    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
244326    +   end;
MPRINT(EM_DIAGRAM):   end;
244327    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
244328    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
244329    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
244330    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
244331    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
244332    +   end;
MPRINT(EM_DIAGRAM):   end;
244333    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
244334    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
244335    +   end;
MPRINT(EM_DIAGRAM):   end;
244336    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
244337    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
244338    +   end;
MPRINT(EM_DIAGRAM):   end;
244339    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
244340    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
244341    +   end;
MPRINT(EM_DIAGRAM):   end;
244342    +   else do;
MPRINT(EM_DIAGRAM):   else do;
244343    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
244344    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
244345    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
244346    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
244347    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
244348    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
244349    +   end;
MPRINT(EM_DIAGRAM):   end;
244350    +end;
MPRINT(EM_DIAGRAM):   end;
244351    +
244352    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
244353    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
244354    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
244355    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
244356    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
244357    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
244358    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
244359    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
244360    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
244361    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
244362    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
244363    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
244364    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
244365    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
244366    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
244367    +end;
MPRINT(EM_DIAGRAM):   end;
244368    +else do;
MPRINT(EM_DIAGRAM):   else do;
244369    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
244370    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
244371    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
244372    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
244373    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
244374    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
244375    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
244376    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
244377    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
244378    +         end;
MPRINT(EM_DIAGRAM):   end;
244379    +         else do;
MPRINT(EM_DIAGRAM):   else do;
244380    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
244381    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
244382    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
244383    +            end;
MPRINT(EM_DIAGRAM):   end;
244384    +         end;
MPRINT(EM_DIAGRAM):   end;
244385    +      end;
MPRINT(EM_DIAGRAM):   end;
244386    +      else do;
MPRINT(EM_DIAGRAM):   else do;
244387    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
244388    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
244389    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
244390    +         end;
MPRINT(EM_DIAGRAM):   end;
244391    +      end;
MPRINT(EM_DIAGRAM):   end;
244392    +   end;
MPRINT(EM_DIAGRAM):   end;
244393    +   else do;
MPRINT(EM_DIAGRAM):   else do;
244394    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
244395    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
244396    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
244397    +      end;
MPRINT(EM_DIAGRAM):   end;
244398    +      else do;
MPRINT(EM_DIAGRAM):   else do;
244399    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
244400    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
244401    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
244402    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
244403    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
244404    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
244405    +         end;
MPRINT(EM_DIAGRAM):   end;
244406    +      end;
MPRINT(EM_DIAGRAM):   end;
244407    +   end;
MPRINT(EM_DIAGRAM):   end;
244408    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
244409    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
244410    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
244411    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
244412    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
244413    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
244414    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
244415    +   end;
MPRINT(EM_DIAGRAM):   end;
244416    +end;
MPRINT(EM_DIAGRAM):   end;
244417    +
244418    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244419    +*** Checking missing input Interval
244420    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
244421    +
244422    +IF NMISS(
244423    +   Income ,
244424    +   Kidhome ,
244425    +   MntFishProducts ,
244426    +   MntFruits ,
244427    +   MntGoldProds ,
244428    +   MntMeatProducts ,
244429    +   MntSweetProducts ,
244430    +   MntWines ,
244431    +   NumCatalogPurchases ,
244432    +   NumDealsPurchases ,
244433    +   NumStorePurchases ,
244434    +   NumWebPurchases ,
244435    +   NumWebVisitsMonth ,
244436    +   Recency ,
244437    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
244438    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
244439    +
244440    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
244441    +END;
MPRINT(EM_DIAGRAM):   END;
244442    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244443    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
244444    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244445    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
244446    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
244447    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
244448    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
244449    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
244450    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
244451    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
244452    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
244453    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
244454    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
244455    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
244456    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
244457    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
244458    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
244459    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
244460    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
244461    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
244462    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
244463    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
244464    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
244465    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
244466    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
244467    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
244468    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
244469    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
244470    +END;
MPRINT(EM_DIAGRAM):   END;
244471    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
244472    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
244473    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
244474    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
244475    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
244476    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
244477    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
244478    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
244479    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
244480    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
244481    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
244482    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
244483    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
244484    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
244485    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
244486    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
244487    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
244488    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
244489    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
244490    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
244491    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
244492    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
244493    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
244494    +   ELSE S_NumCatalogPurchases
244495    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
244496    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
244497    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
244498    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
244499    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
244500    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
244501    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
244502    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
244503    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
244504    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
244505    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
244506    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
244507    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
244508    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
244509    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
244510    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
244511    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
244512    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
244513    +END;
MPRINT(EM_DIAGRAM):   END;
244514    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244515    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
244516    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244517    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244518    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
244519    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244520    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244521    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
244522    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244523    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
244524    +   H1x1_1  =     0.60821559277699 * S_Income  +     0.78245878520575 *
244525    +        S_Kidhome  +     3.02629225919456 * S_MntFishProducts
244526    +          +     1.44208452883494 * S_MntFruits  +     -0.8161710906244 *
244527    +        S_MntGoldProds  +    -5.65479728306763 * S_MntMeatProducts
244528    +          +     2.41993296129914 * S_MntSweetProducts
244529    +          +     16.1416936305202 * S_MntWines  +    -0.30170648366369 *
244530    +        S_NumCatalogPurchases  +    -4.40539425596446 * S_NumDealsPurchases
244531    +          +     7.59231492380468 * S_NumStorePurchases
244532    +          +    -0.47095655313121 * S_NumWebPurchases
244533    +          +     2.65669932372712 * S_NumWebVisitsMonth
244534    +          +     0.92605434462951 * S_Recency  +     0.27595278529362 *
244535    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.60821559277699 * S_Income + 0.78245878520575 * S_Kidhome + 
3.02629225919456 * S_MntFishProducts + 1.44208452883494 * S_MntFruits + -0.8161710906244 * 
S_MntGoldProds + -5.65479728306763 * S_MntMeatProducts + 2.41993296129914 * S_MntSweetProducts 
+ 16.1416936305202 * S_MntWines + -0.30170648366369 * S_NumCatalogPurchases + 
-4.40539425596446 * S_NumDealsPurchases + 7.59231492380468 * S_NumStorePurchases + 
-0.47095655313121 * S_NumWebPurchases + 2.65669932372712 * S_NumWebVisitsMonth + 
0.92605434462951 * S_Recency + 0.27595278529362 * S_Teenhome ;
244536    +   H1x1_1  = H1x1_1  +     2.22617132301519 * AcceptedCmp10
244537    +          +     2.97389891933054 * AcceptedCmp20  +    -0.25852677589668 *
244538    +        AcceptedCmp30  +     0.29740935303964 * AcceptedCmp40
244539    +          +     6.80320564322924 * AcceptedCmp50  +     2.19745012825493 *
244540    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.22617132301519 * AcceptedCmp10 + 2.97389891933054 * 
AcceptedCmp20 + -0.25852677589668 * AcceptedCmp30 + 0.29740935303964 * AcceptedCmp40 + 
6.80320564322924 * AcceptedCmp50 + 2.19745012825493 * Complain0 ;
244541    +   H1x1_1  = H1x1_1  +     2.55205464559227 * Education2n_Cycle
244542    +          +    -0.98577713200024 * EducationBasic  +     1.74619403557996 *
244543    +        EducationGraduation  +    -3.89600865490994 * EducationMaster
244544    +          +     0.44728218776544 * Marital_StatusDivorced
244545    +          +    -1.62458831276183 * Marital_StatusMarried
244546    +          +    -0.42858616367237 * Marital_StatusSingle
244547    +          +    -0.29553796445711 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.55205464559227 * Education2n_Cycle + 
-0.98577713200024 * EducationBasic + 1.74619403557996 * EducationGraduation + 
-3.89600865490994 * EducationMaster + 0.44728218776544 * Marital_StatusDivorced + 
-1.62458831276183 * Marital_StatusMarried + -0.42858616367237 * Marital_StatusSingle + 
-0.29553796445711 * Marital_StatusTogether ;
244548    +   H1x1_1  =     3.59078196202385 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.59078196202385 + H1x1_1 ;
244549    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
244550    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
244551    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
244552    +END;
MPRINT(EM_DIAGRAM):   END;
244553    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
244554    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
244555    +END;
MPRINT(EM_DIAGRAM):   END;
244556    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244557    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
244558    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244559    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
244560    +   H1x2_1  =    -0.99188645731967 * S_Income  +    -0.76771098590807 *
244561    +        S_Kidhome  +      0.8287505285538 * S_MntFishProducts
244562    +          +     0.45999682434351 * S_MntFruits  +      0.4293543408639 *
244563    +        S_MntGoldProds  +    -9.07723801877759 * S_MntMeatProducts
244564    +          +    -1.37098390846164 * S_MntSweetProducts
244565    +          +    -0.51776810310879 * S_MntWines  +    -1.37476010659628 *
244566    +        S_NumCatalogPurchases  +    -1.10451572937532 * S_NumDealsPurchases
244567    +          +     0.58246769316602 * S_NumStorePurchases
244568    +          +     2.72780243156581 * S_NumWebPurchases
244569    +          +    -1.73896446530763 * S_NumWebVisitsMonth
244570    +          +      0.7638963348072 * S_Recency  +     0.26979377997458 *
244571    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.99188645731967 * S_Income + -0.76771098590807 * S_Kidhome + 
0.8287505285538 * S_MntFishProducts + 0.45999682434351 * S_MntFruits + 0.4293543408639 * 
S_MntGoldProds + -9.07723801877759 * S_MntMeatProducts + -1.37098390846164 * 
S_MntSweetProducts + -0.51776810310879 * S_MntWines + -1.37476010659628 * 
S_NumCatalogPurchases + -1.10451572937532 * S_NumDealsPurchases + 0.58246769316602 * 
S_NumStorePurchases + 2.72780243156581 * S_NumWebPurchases + -1.73896446530763 * 
S_NumWebVisitsMonth + 0.7638963348072 * S_Recency + 0.26979377997458 * S_Teenhome ;
244572    +   H1x2_1  = H1x2_1  +     2.43014219686416 * AcceptedCmp10
244573    +          +    -4.74345515374868 * AcceptedCmp20  +     0.62579233621413 *
244574    +        AcceptedCmp30  +     0.64637471234006 * AcceptedCmp40
244575    +          +     1.70767935570268 * AcceptedCmp50  +    -0.94631514600478 *
244576    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 2.43014219686416 * AcceptedCmp10 + -4.74345515374868 * 
AcceptedCmp20 + 0.62579233621413 * AcceptedCmp30 + 0.64637471234006 * AcceptedCmp40 + 
1.70767935570268 * AcceptedCmp50 + -0.94631514600478 * Complain0 ;
244577    +   H1x2_1  = H1x2_1  +    -0.98761508407831 * Education2n_Cycle
244578    +          +     0.88643388278508 * EducationBasic  +    -0.83878459420096 *
244579    +        EducationGraduation  +     1.01072132252596 * EducationMaster
244580    +          +     0.08221095774854 * Marital_StatusDivorced
244581    +          +    -0.13062113450086 * Marital_StatusMarried
244582    +          +      0.1912119500185 * Marital_StatusSingle
244583    +          +     -0.3728209764276 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.98761508407831 * Education2n_Cycle + 
0.88643388278508 * EducationBasic + -0.83878459420096 * EducationGraduation + 1.01072132252596 
* EducationMaster + 0.08221095774854 * Marital_StatusDivorced + -0.13062113450086 * 
Marital_StatusMarried + 0.1912119500185 * Marital_StatusSingle + -0.3728209764276 * 
Marital_StatusTogether ;
244584    +   H1x2_1  =    -3.03275566330542 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -3.03275566330542 + H1x2_1 ;
244585    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
244586    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
244587    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
244588    +END;
MPRINT(EM_DIAGRAM):   END;
244589    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
244590    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
244591    +END;
MPRINT(EM_DIAGRAM):   END;
244592    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244593    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
244594    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244595    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
244596    +   H1x3_1  =    -1.55963738420881 * S_Income  +     0.71964926339388 *
244597    +        S_Kidhome  +    -0.47208108972067 * S_MntFishProducts
244598    +          +      0.6450894987393 * S_MntFruits  +     0.06261669147127 *
244599    +        S_MntGoldProds  +     0.14975522509881 * S_MntMeatProducts
244600    +          +     -0.4771357321143 * S_MntSweetProducts
244601    +          +     0.66709116843422 * S_MntWines  +     0.90111404700817 *
244602    +        S_NumCatalogPurchases  +     0.17723895187345 * S_NumDealsPurchases
244603    +          +     0.38755002642582 * S_NumStorePurchases
244604    +          +     0.65178643881164 * S_NumWebPurchases
244605    +          +    -0.83170832622452 * S_NumWebVisitsMonth
244606    +          +     2.65115346957983 * S_Recency  +     1.27228948382376 *
244607    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.55963738420881 * S_Income + 0.71964926339388 * S_Kidhome + 
-0.47208108972067 * S_MntFishProducts + 0.6450894987393 * S_MntFruits + 0.06261669147127 * 
S_MntGoldProds + 0.14975522509881 * S_MntMeatProducts + -0.4771357321143 * S_MntSweetProducts 
+ 0.66709116843422 * S_MntWines + 0.90111404700817 * S_NumCatalogPurchases + 0.17723895187345 
* S_NumDealsPurchases + 0.38755002642582 * S_NumStorePurchases + 0.65178643881164 * 
S_NumWebPurchases + -0.83170832622452 * S_NumWebVisitsMonth + 2.65115346957983 * S_Recency + 
1.27228948382376 * S_Teenhome ;
244608    +   H1x3_1  = H1x3_1  +     0.29816272417051 * AcceptedCmp10
244609    +          +    -0.71154376870988 * AcceptedCmp20  +    -0.39513051704909 *
244610    +        AcceptedCmp30  +     1.19068615672558 * AcceptedCmp40
244611    +          +     -1.9640044684445 * AcceptedCmp50  +    -0.09395110959453 *
244612    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.29816272417051 * AcceptedCmp10 + -0.71154376870988 * 
AcceptedCmp20 + -0.39513051704909 * AcceptedCmp30 + 1.19068615672558 * AcceptedCmp40 + 
-1.9640044684445 * AcceptedCmp50 + -0.09395110959453 * Complain0 ;
244613    +   H1x3_1  = H1x3_1  +    -0.43809514270646 * Education2n_Cycle
244614    +          +     0.27926697891252 * EducationBasic  +     1.12178568429269 *
244615    +        EducationGraduation  +      0.9696976240987 * EducationMaster
244616    +          +    -0.13574340372484 * Marital_StatusDivorced
244617    +          +     1.26001446384238 * Marital_StatusMarried
244618    +          +    -0.16294618258246 * Marital_StatusSingle
244619    +          +    -0.31789534786196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.43809514270646 * Education2n_Cycle + 
0.27926697891252 * EducationBasic + 1.12178568429269 * EducationGraduation + 0.9696976240987 * 
EducationMaster + -0.13574340372484 * Marital_StatusDivorced + 1.26001446384238 * 
Marital_StatusMarried + -0.16294618258246 * Marital_StatusSingle + -0.31789534786196 * 
Marital_StatusTogether ;
244620    +   H1x3_1  =     0.67537485509128 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67537485509128 + H1x3_1 ;
244621    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
244622    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
244623    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
244624    +END;
MPRINT(EM_DIAGRAM):   END;
244625    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
244626    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
244627    +END;
MPRINT(EM_DIAGRAM):   END;
244628    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244629    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
244630    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244631    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
244632    +   H2x1_1  =     1.66176856703373 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.66176856703373 * H1x1_1 ;
244633    +   H2x1_1  = H2x1_1  +     2.22197952592224 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.22197952592224 * H1x2_1 ;
244634    +   H2x1_1  = H2x1_1  +     1.05148827727504 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.05148827727504 * H1x3_1 ;
244635    +   H2x1_1  =    -1.97152028826028 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.97152028826028 + H2x1_1 ;
244636    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
244637    +END;
MPRINT(EM_DIAGRAM):   END;
244638    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
244639    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
244640    +END;
MPRINT(EM_DIAGRAM):   END;
244641    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244642    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
244643    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244644    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
244645    +   H2x2_1  =     0.45033423451322 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.45033423451322 * H1x1_1 ;
244646    +   H2x2_1  = H2x2_1  +     2.46855103154551 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.46855103154551 * H1x2_1 ;
244647    +   H2x2_1  = H2x2_1  +    -0.77837055555012 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.77837055555012 * H1x3_1 ;
244648    +   H2x2_1  =     -0.9821313826813 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.9821313826813 + H2x2_1 ;
244649    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
244650    +END;
MPRINT(EM_DIAGRAM):   END;
244651    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
244652    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
244653    +END;
MPRINT(EM_DIAGRAM):   END;
244654    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244655    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
244656    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244657    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
244658    +   H3x1_1  =    -4.89394761736069 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -4.89394761736069 * H2x1_1 ;
244659    +   H3x1_1  = H3x1_1  +    -3.02496799626931 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -3.02496799626931 * H2x2_1 ;
244660    +   H3x1_1  =    -2.03654026915424 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -2.03654026915424 + H3x1_1 ;
244661    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
244662    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
244663    +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
244664    +END;
MPRINT(EM_DIAGRAM):   END;
244665    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
244666    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
244667    +END;
MPRINT(EM_DIAGRAM):   END;
244668    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244669    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
244670    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244671    +
244672    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
244673    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
244674    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
244675    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
244676    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
244677    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
244678    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
244679    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
244680    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
244681    +end;
MPRINT(EM_DIAGRAM):   end;
244682    +else do;
MPRINT(EM_DIAGRAM):   else do;
244683    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
244684    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
244685    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
244686    +   end;
MPRINT(EM_DIAGRAM):   end;
244687    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
244688    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
244689    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
244690    +   end;
MPRINT(EM_DIAGRAM):   end;
244691    +   else do;
MPRINT(EM_DIAGRAM):   else do;
244692    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
244693    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
244694    +   end;
MPRINT(EM_DIAGRAM):   end;
244695    +end;
MPRINT(EM_DIAGRAM):   end;
244696    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
244697    +   P_DepVar1  =      11.443408553765 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 11.443408553765 * H3x1_1 ;
244698    +   P_DepVar1  =     0.39570054021751 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.39570054021751 + P_DepVar1 ;
244699    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
244700    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
244701    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
244702    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
244703    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
244704    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
244705    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
244706    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
244707    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
244708    +END;
MPRINT(EM_DIAGRAM):   END;
244709    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
244710    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
244711    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
244712    +END;
MPRINT(EM_DIAGRAM):   END;
244713    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
244714    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
244715    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
244716    +END;
MPRINT(EM_DIAGRAM):   END;
244717    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
244718    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
244719    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
244720    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
244721    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
244722    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
244723    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
244724    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244725    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
244726    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
244727    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
244728    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
244729    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
244730    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
244731    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
244732    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
244733    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
244734    +END;
MPRINT(EM_DIAGRAM):   END;
244735    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
244736    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
244737    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
244738    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
244739    +* Renaming variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural44;
244740    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244741    +* Renaming Posterior variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural44;
244742    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244743    +drop AutoNeural44_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar1;
244744    +AutoNeural44_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar1 = P_DepVar1;
244745    +drop AutoNeural44_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar0;
244746    +AutoNeural44_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar0 = P_DepVar0;
244747    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244748    +* Renaming _WARN_ variable for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural44;
244749    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244750    +length AutoNeural44_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural44_WARN_ $4;
244751    +drop AutoNeural44_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_WARN_;
244752    +AutoNeural44_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural44_WARN_ = _WARN_;
244753    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244754    +* Ensmbl57: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Average Posteriors of 7 models;
244755    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244756    +P_DepVar1 = (
244757    +AutoNeural46_P_DepVar1 +
244758    +AutoNeural43_P_DepVar1 +
244759    +AutoNeural42_P_DepVar1 +
244760    +AutoNeural41_P_DepVar1 +
244761    +AutoNeural47_P_DepVar1 +
244762    +AutoNeural45_P_DepVar1 +
244763    +AutoNeural44_P_DepVar1
244764    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural46_P_DepVar1 + AutoNeural43_P_DepVar1 + 
AutoNeural42_P_DepVar1 + AutoNeural41_P_DepVar1 + AutoNeural47_P_DepVar1 + 
AutoNeural45_P_DepVar1 + AutoNeural44_P_DepVar1 )/7;
244765    +P_DepVar0 = (
244766    +AutoNeural46_P_DepVar0 +
244767    +AutoNeural43_P_DepVar0 +
244768    +AutoNeural42_P_DepVar0 +
244769    +AutoNeural41_P_DepVar0 +
244770    +AutoNeural47_P_DepVar0 +
244771    +AutoNeural45_P_DepVar0 +
244772    +AutoNeural44_P_DepVar0
244773    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural46_P_DepVar0 + AutoNeural43_P_DepVar0 + 
AutoNeural42_P_DepVar0 + AutoNeural41_P_DepVar0 + AutoNeural47_P_DepVar0 + 
AutoNeural45_P_DepVar0 + AutoNeural44_P_DepVar0 )/7;
244774    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244775    +* Ensmbl57: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Computing Classification Vars;
244776    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244777    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
244778    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
244779    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
244780    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
244781    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
244782    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
244783    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
244784    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
244785    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
244786    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
244787    +end;
MPRINT(EM_DIAGRAM):   end;
244788    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
244789    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
244790    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
244791    +end;
MPRINT(EM_DIAGRAM):   end;
244792    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
244793    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244794    +* Ensmbl57: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Producing Unformatted variable;
244795    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244796    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
244797    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
244798    +else
244799    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
244800    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244801    +* Ensmbl57: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Computing _WARN_ Variable;
244802    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244803    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
244804    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
244805    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
244806    +if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
244806   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
244807    +if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
244807   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
244808    +if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
244808   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
244809    +if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
244809   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
244810    +if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
244810   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
244811    +if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
244811   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
244812    +if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
244812   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
244813    +if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
244813   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
244814    +if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
244814   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
244815    +if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
244815   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
244816    +if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
244816   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
244817    +if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
244817   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
244818    +if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
244818   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
244819    +if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
244819   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
244820    +if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
244820   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
244821    +if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
244821   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
244822    +if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
244822   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
244823    +if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
244823   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
244824    +if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
244824   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
244825    +if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
244825   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
244826    +if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
244826   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
244827    +if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
244827   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
244828    +if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
244828   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
244829    +if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
244829   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
244830    +if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
244830   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
244831    +if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
244831   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
244832    +if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
244832   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
244833    +if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
244833   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
244834    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244835    +* Ensmbl57: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Computing Residual Vars;
244836    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
244837    +if
244838    +F_DepVar NE '1'
244839    +AND F_DepVar NE '0'
244840    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
244841    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
244842    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
244843    +end;
MPRINT(EM_DIAGRAM):   end;
244844    +else do;
MPRINT(EM_DIAGRAM):   else do;
244845    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
244846    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
244847    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
244848    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
244849    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
244850    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
244851    +END;
MPRINT(EM_DIAGRAM):   END;
244852    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
244853     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL57_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL46_VALIDATE.VIEW used (Total process time):
      real time           0.22 seconds
      cpu time            0.21 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.22 seconds
      cpu time            0.21 seconds
      

MPRINT(EM_DIAGRAM):   quit;
244854     quit;
244855     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl57_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl57_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl57_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl57_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl57_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
244915     filename _pref
244915   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas";
244916     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
244917     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas.
244918    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
244919    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
244920    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
244921    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
244922    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
244923    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
244924    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
244925    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
244926    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
244927    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
244928    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
244929    +LENGTH _WARN_ $4
244930    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
244931    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
244932    +
244933    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
244934    +
244935    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
244936    +
244937    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
244938    +
244939    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
244940    +
244941    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
244942    +
244943    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
244944    +
244945    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
244946    +
244947    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
244948    +
244949    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
244950    +
244951    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
244952    +
244953    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
244954    +
244955    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
244956    +
244957    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
244958    +
244959    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
244960    +
244961    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
244962    +
244963    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
244964    +
244965    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
244966    +
244967    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
244968    +
244969    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
244970    +
244971    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
244972    +
244973    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
244974    +
244975    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
244976    +
244977    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
244978    +
244979    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
244980    +
244981    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
244982    +
244983    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
244984    +
244985    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
244986    +
244987    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
244988    +
244989    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
244990    +
244991    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
244992    +
244993    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
244994    +
244995    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
244996    +
244997    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
244998    +
244999    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
245000    +
245001    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
245002    +
245003    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
245004    +
245005    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
245006    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
245007    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
245008    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
245009    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
245010    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245011    +end;
MPRINT(EM_DIAGRAM):   end;
245012    +else do;
MPRINT(EM_DIAGRAM):   else do;
245013    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
245014    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
245015    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
245016    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
245017    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
245018    +   end;
MPRINT(EM_DIAGRAM):   end;
245019    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
245020    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
245021    +   end;
MPRINT(EM_DIAGRAM):   end;
245022    +   else do;
MPRINT(EM_DIAGRAM):   else do;
245023    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
245024    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
245025    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245026    +   end;
MPRINT(EM_DIAGRAM):   end;
245027    +end;
MPRINT(EM_DIAGRAM):   end;
245028    +
245029    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
245030    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
245031    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
245032    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
245033    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
245034    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245035    +end;
MPRINT(EM_DIAGRAM):   end;
245036    +else do;
MPRINT(EM_DIAGRAM):   else do;
245037    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
245038    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
245039    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
245040    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
245041    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
245042    +   end;
MPRINT(EM_DIAGRAM):   end;
245043    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
245044    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
245045    +   end;
MPRINT(EM_DIAGRAM):   end;
245046    +   else do;
MPRINT(EM_DIAGRAM):   else do;
245047    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
245048    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
245049    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245050    +   end;
MPRINT(EM_DIAGRAM):   end;
245051    +end;
MPRINT(EM_DIAGRAM):   end;
245052    +
245053    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
245054    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
245055    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
245056    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
245057    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
245058    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245059    +end;
MPRINT(EM_DIAGRAM):   end;
245060    +else do;
MPRINT(EM_DIAGRAM):   else do;
245061    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
245062    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
245063    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
245064    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
245065    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
245066    +   end;
MPRINT(EM_DIAGRAM):   end;
245067    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
245068    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
245069    +   end;
MPRINT(EM_DIAGRAM):   end;
245070    +   else do;
MPRINT(EM_DIAGRAM):   else do;
245071    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
245072    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
245073    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245074    +   end;
MPRINT(EM_DIAGRAM):   end;
245075    +end;
MPRINT(EM_DIAGRAM):   end;
245076    +
245077    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
245078    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
245079    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
245080    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
245081    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
245082    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245083    +end;
MPRINT(EM_DIAGRAM):   end;
245084    +else do;
MPRINT(EM_DIAGRAM):   else do;
245085    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
245086    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
245087    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
245088    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
245089    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
245090    +   end;
MPRINT(EM_DIAGRAM):   end;
245091    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
245092    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
245093    +   end;
MPRINT(EM_DIAGRAM):   end;
245094    +   else do;
MPRINT(EM_DIAGRAM):   else do;
245095    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
245096    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
245097    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245098    +   end;
MPRINT(EM_DIAGRAM):   end;
245099    +end;
MPRINT(EM_DIAGRAM):   end;
245100    +
245101    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
245102    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
245103    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
245104    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
245105    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
245106    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245107    +end;
MPRINT(EM_DIAGRAM):   end;
245108    +else do;
MPRINT(EM_DIAGRAM):   else do;
245109    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
245110    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
245111    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
245112    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
245113    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
245114    +   end;
MPRINT(EM_DIAGRAM):   end;
245115    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
245116    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
245117    +   end;
MPRINT(EM_DIAGRAM):   end;
245118    +   else do;
MPRINT(EM_DIAGRAM):   else do;
245119    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
245120    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
245121    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245122    +   end;
MPRINT(EM_DIAGRAM):   end;
245123    +end;
MPRINT(EM_DIAGRAM):   end;
245124    +
245125    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
245126    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
245127    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
245128    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
245129    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
245130    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245131    +end;
MPRINT(EM_DIAGRAM):   end;
245132    +else do;
MPRINT(EM_DIAGRAM):   else do;
245133    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
245134    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
245135    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
245136    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
245137    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
245138    +   end;
MPRINT(EM_DIAGRAM):   end;
245139    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
245140    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
245141    +   end;
MPRINT(EM_DIAGRAM):   end;
245142    +   else do;
MPRINT(EM_DIAGRAM):   else do;
245143    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
245144    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
245145    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245146    +   end;
MPRINT(EM_DIAGRAM):   end;
245147    +end;
MPRINT(EM_DIAGRAM):   end;
245148    +
245149    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
245150    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
245151    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
245152    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
245153    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
245154    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
245155    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
245156    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
245157    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
245158    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
245159    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
245160    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
245161    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
245162    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245163    +end;
MPRINT(EM_DIAGRAM):   end;
245164    +else do;
MPRINT(EM_DIAGRAM):   else do;
245165    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
245166    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
245167    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
245168    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
245169    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
245170    +   end;
MPRINT(EM_DIAGRAM):   end;
245171    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
245172    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
245173    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
245174    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
245175    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
245176    +   end;
MPRINT(EM_DIAGRAM):   end;
245177    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
245178    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
245179    +   end;
MPRINT(EM_DIAGRAM):   end;
245180    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
245181    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
245182    +   end;
MPRINT(EM_DIAGRAM):   end;
245183    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
245184    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
245185    +   end;
MPRINT(EM_DIAGRAM):   end;
245186    +   else do;
MPRINT(EM_DIAGRAM):   else do;
245187    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
245188    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
245189    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
245190    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
245191    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
245192    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245193    +   end;
MPRINT(EM_DIAGRAM):   end;
245194    +end;
MPRINT(EM_DIAGRAM):   end;
245195    +
245196    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
245197    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
245198    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
245199    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
245200    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
245201    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
245202    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
245203    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
245204    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
245205    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
245206    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
245207    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
245208    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
245209    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
245210    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245211    +end;
MPRINT(EM_DIAGRAM):   end;
245212    +else do;
MPRINT(EM_DIAGRAM):   else do;
245213    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
245214    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
245215    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
245216    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
245217    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
245218    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
245219    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
245220    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
245221    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
245222    +         end;
MPRINT(EM_DIAGRAM):   end;
245223    +         else do;
MPRINT(EM_DIAGRAM):   else do;
245224    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
245225    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
245226    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
245227    +            end;
MPRINT(EM_DIAGRAM):   end;
245228    +         end;
MPRINT(EM_DIAGRAM):   end;
245229    +      end;
MPRINT(EM_DIAGRAM):   end;
245230    +      else do;
MPRINT(EM_DIAGRAM):   else do;
245231    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
245232    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
245233    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
245234    +         end;
MPRINT(EM_DIAGRAM):   end;
245235    +      end;
MPRINT(EM_DIAGRAM):   end;
245236    +   end;
MPRINT(EM_DIAGRAM):   end;
245237    +   else do;
MPRINT(EM_DIAGRAM):   else do;
245238    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
245239    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
245240    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
245241    +      end;
MPRINT(EM_DIAGRAM):   end;
245242    +      else do;
MPRINT(EM_DIAGRAM):   else do;
245243    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
245244    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
245245    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
245246    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
245247    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
245248    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
245249    +         end;
MPRINT(EM_DIAGRAM):   end;
245250    +      end;
MPRINT(EM_DIAGRAM):   end;
245251    +   end;
MPRINT(EM_DIAGRAM):   end;
245252    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
245253    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
245254    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
245255    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
245256    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
245257    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
245258    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245259    +   end;
MPRINT(EM_DIAGRAM):   end;
245260    +end;
MPRINT(EM_DIAGRAM):   end;
245261    +
245262    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
245263    +*** Checking missing input Interval
245264    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
245265    +
245266    +IF NMISS(
245267    +   Income ,
245268    +   Kidhome ,
245269    +   MntFishProducts ,
245270    +   MntFruits ,
245271    +   MntGoldProds ,
245272    +   MntMeatProducts ,
245273    +   MntSweetProducts ,
245274    +   MntWines ,
245275    +   NumCatalogPurchases ,
245276    +   NumDealsPurchases ,
245277    +   NumStorePurchases ,
245278    +   NumWebPurchases ,
245279    +   NumWebVisitsMonth ,
245280    +   Recency ,
245281    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
245282    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
245283    +
245284    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245285    +END;
MPRINT(EM_DIAGRAM):   END;
245286    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
245287    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
245288    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
245289    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
245290    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
245291    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
245292    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
245293    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
245294    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
245295    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
245296    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
245297    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
245298    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
245299    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
245300    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
245301    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
245302    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
245303    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
245304    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
245305    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
245306    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
245307    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
245308    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
245309    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
245310    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
245311    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
245312    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
245313    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
245314    +END;
MPRINT(EM_DIAGRAM):   END;
245315    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
245316    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
245317    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
245318    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
245319    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
245320    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
245321    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
245322    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
245323    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
245324    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
245325    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
245326    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
245327    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
245328    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
245329    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
245330    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
245331    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
245332    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
245333    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
245334    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
245335    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
245336    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
245337    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
245338    +   ELSE S_NumCatalogPurchases
245339    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
245340    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
245341    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
245342    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
245343    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
245344    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
245345    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
245346    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
245347    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
245348    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
245349    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
245350    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
245351    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
245352    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
245353    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
245354    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
245355    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
245356    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
245357    +END;
MPRINT(EM_DIAGRAM):   END;
245358    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
245359    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
245360    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
245361    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
245362    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
245363    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
245364    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
245365    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
245366    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
245367    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
245368    +   H1x1_1  =    -0.14779241211238 * S_Income  +     0.12406923960108 *
245369    +        S_Kidhome  +     0.07566108150758 * S_MntFishProducts
245370    +          +     0.04223936357442 * S_MntFruits  +    -0.01414396912246 *
245371    +        S_MntGoldProds  +    -0.43631543928923 * S_MntMeatProducts
245372    +          +      0.0311909552218 * S_MntSweetProducts
245373    +          +      0.1593908004139 * S_MntWines  +    -0.16331402526215 *
245374    +        S_NumCatalogPurchases  +    -0.08123579404919 * S_NumDealsPurchases
245375    +          +     0.12294876865087 * S_NumStorePurchases
245376    +          +     0.11602382379314 * S_NumWebPurchases
245377    +          +    -0.23519567542635 * S_NumWebVisitsMonth
245378    +          +     0.27617232496223 * S_Recency  +     0.06912944740739 *
245379    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14779241211238 * S_Income + 0.12406923960108 * S_Kidhome + 
0.07566108150758 * S_MntFishProducts + 0.04223936357442 * S_MntFruits + -0.01414396912246 * 
S_MntGoldProds + -0.43631543928923 * S_MntMeatProducts + 0.0311909552218 * S_MntSweetProducts 
+ 0.1593908004139 * S_MntWines + -0.16331402526215 * S_NumCatalogPurchases + -0.08123579404919 
* S_NumDealsPurchases + 0.12294876865087 * S_NumStorePurchases + 0.11602382379314 * 
S_NumWebPurchases + -0.23519567542635 * S_NumWebVisitsMonth + 0.27617232496223 * S_Recency + 
0.06912944740739 * S_Teenhome ;
245380    +   H1x1_2  =    -0.13491153011654 * S_Income  +     0.14656938917448 *
245381    +        S_Kidhome  +     0.04457005191996 * S_MntFishProducts
245382    +          +     0.00771761834647 * S_MntFruits  +    -0.11830651019438 *
245383    +        S_MntGoldProds  +     0.06464771115751 * S_MntMeatProducts
245384    +          +     0.00133400054994 * S_MntSweetProducts
245385    +          +    -0.63837598558931 * S_MntWines  +     0.09668222160749 *
245386    +        S_NumCatalogPurchases  +     0.23530173987642 * S_NumDealsPurchases
245387    +          +    -0.49595472235036 * S_NumStorePurchases
245388    +          +    -0.24747548015204 * S_NumWebPurchases
245389    +          +     0.12326047694811 * S_NumWebVisitsMonth
245390    +          +    -0.04929000435218 * S_Recency  +     0.00568113597531 *
245391    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13491153011654 * S_Income + 0.14656938917448 * S_Kidhome + 
0.04457005191996 * S_MntFishProducts + 0.00771761834647 * S_MntFruits + -0.11830651019438 * 
S_MntGoldProds + 0.06464771115751 * S_MntMeatProducts + 0.00133400054994 * S_MntSweetProducts 
+ -0.63837598558931 * S_MntWines + 0.09668222160749 * S_NumCatalogPurchases + 0.23530173987642 
* S_NumDealsPurchases + -0.49595472235036 * S_NumStorePurchases + -0.24747548015204 * 
S_NumWebPurchases + 0.12326047694811 * S_NumWebVisitsMonth + -0.04929000435218 * S_Recency + 
0.00568113597531 * S_Teenhome ;
245392    +   H1x1_3  =     0.13062973754666 * S_Income  +    -0.15311279667585 *
245393    +        S_Kidhome  +      0.0854652628099 * S_MntFishProducts
245394    +          +     0.02260695043189 * S_MntFruits  +    -0.06427354034325 *
245395    +        S_MntGoldProds  +    -0.51556004816788 * S_MntMeatProducts
245396    +          +    -0.03908755288099 * S_MntSweetProducts
245397    +          +    -0.24983513168561 * S_MntWines  +     0.11583370343483 *
245398    +        S_NumCatalogPurchases  +     0.05060583856766 * S_NumDealsPurchases
245399    +          +    -0.20634630081435 * S_NumStorePurchases
245400    +          +    -0.06734935798888 * S_NumWebPurchases
245401    +          +     0.32288250215418 * S_NumWebVisitsMonth
245402    +          +    -0.32978147839937 * S_Recency  +    -0.07420334428475 *
245403    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.13062973754666 * S_Income + -0.15311279667585 * S_Kidhome + 
0.0854652628099 * S_MntFishProducts + 0.02260695043189 * S_MntFruits + -0.06427354034325 * 
S_MntGoldProds + -0.51556004816788 * S_MntMeatProducts + -0.03908755288099 * 
S_MntSweetProducts + -0.24983513168561 * S_MntWines + 0.11583370343483 * S_NumCatalogPurchases 
+ 0.05060583856766 * S_NumDealsPurchases + -0.20634630081435 * S_NumStorePurchases + 
-0.06734935798888 * S_NumWebPurchases + 0.32288250215418 * S_NumWebVisitsMonth + 
-0.32978147839937 * S_Recency + -0.07420334428475 * S_Teenhome ;
245404    +   H1x1_1  = H1x1_1  +     0.14311220987159 * AcceptedCmp10
245405    +          +     0.25596748420576 * AcceptedCmp20  +     0.13199169114019 *
245406    +        AcceptedCmp30  +     0.14111066281846 * AcceptedCmp40
245407    +          +     0.16136804502708 * AcceptedCmp50  +     0.06340055511955 *
245408    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14311220987159 * AcceptedCmp10 + 0.25596748420576 * 
AcceptedCmp20 + 0.13199169114019 * AcceptedCmp30 + 0.14111066281846 * AcceptedCmp40 + 
0.16136804502708 * AcceptedCmp50 + 0.06340055511955 * Complain0 ;
245409    +   H1x1_2  = H1x1_2  +     0.07692946904386 * AcceptedCmp10
245410    +          +     0.10129736414747 * AcceptedCmp20  +    -0.08526063108983 *
245411    +        AcceptedCmp30  +     0.00391518443243 * AcceptedCmp40
245412    +          +    -0.11013908503956 * AcceptedCmp50  +     0.03814032229209 *
245413    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.07692946904386 * AcceptedCmp10 + 0.10129736414747 * 
AcceptedCmp20 + -0.08526063108983 * AcceptedCmp30 + 0.00391518443243 * AcceptedCmp40 + 
-0.11013908503956 * AcceptedCmp50 + 0.03814032229209 * Complain0 ;
245414    +   H1x1_3  = H1x1_3  +    -0.02206432573422 * AcceptedCmp10
245415    +          +     0.22410311196864 * AcceptedCmp20  +    -0.19387020375313 *
245416    +        AcceptedCmp30  +    -0.12058647992586 * AcceptedCmp40
245417    +          +    -0.09809197464918 * AcceptedCmp50  +    -0.09604584189983 *
245418    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02206432573422 * AcceptedCmp10 + 0.22410311196864 * 
AcceptedCmp20 + -0.19387020375313 * AcceptedCmp30 + -0.12058647992586 * AcceptedCmp40 + 
-0.09809197464918 * AcceptedCmp50 + -0.09604584189983 * Complain0 ;
245419    +   H1x1_1  = H1x1_1  +    -0.00017476927899 * Education2n_Cycle
245420    +          +    -0.15306731287208 * EducationBasic  +     0.04951359729631 *
245421    +        EducationGraduation  +     0.07475697967073 * EducationMaster
245422    +          +    -0.04265434587882 * Marital_StatusDivorced
245423    +          +     0.17114014094758 * Marital_StatusMarried
245424    +          +     -0.1537035921296 * Marital_StatusSingle
245425    +          +     0.15023718360478 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00017476927899 * Education2n_Cycle + 
-0.15306731287208 * EducationBasic + 0.04951359729631 * EducationGraduation + 0.07475697967073 
* EducationMaster + -0.04265434587882 * Marital_StatusDivorced + 0.17114014094758 * 
Marital_StatusMarried + -0.1537035921296 * Marital_StatusSingle + 0.15023718360478 * 
Marital_StatusTogether ;
245426    +   H1x1_2  = H1x1_2  +     0.10391719023548 * Education2n_Cycle
245427    +          +    -0.71597921887555 * EducationBasic  +     0.38732833028427 *
245428    +        EducationGraduation  +     0.04507684017588 * EducationMaster
245429    +          +     0.25534272809394 * Marital_StatusDivorced
245430    +          +     0.20034903346804 * Marital_StatusMarried
245431    +          +    -0.38348393943797 * Marital_StatusSingle
245432    +          +     0.15254304652439 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.10391719023548 * Education2n_Cycle + 
-0.71597921887555 * EducationBasic + 0.38732833028427 * EducationGraduation + 0.04507684017588 
* EducationMaster + 0.25534272809394 * Marital_StatusDivorced + 0.20034903346804 * 
Marital_StatusMarried + -0.38348393943797 * Marital_StatusSingle + 0.15254304652439 * 
Marital_StatusTogether ;
245433    +   H1x1_3  = H1x1_3  +     0.06104667656786 * Education2n_Cycle
245434    +          +     -0.0935234366994 * EducationBasic  +     0.09446977823229 *
245435    +        EducationGraduation  +    -0.11683780234266 * EducationMaster
245436    +          +      0.1988416043876 * Marital_StatusDivorced
245437    +          +    -0.21663959478684 * Marital_StatusMarried
245438    +          +     0.06591480171547 * Marital_StatusSingle
245439    +          +    -0.17108581516048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.06104667656786 * Education2n_Cycle + 
-0.0935234366994 * EducationBasic + 0.09446977823229 * EducationGraduation + -0.11683780234266 
* EducationMaster + 0.1988416043876 * Marital_StatusDivorced + -0.21663959478684 * 
Marital_StatusMarried + 0.06591480171547 * Marital_StatusSingle + -0.17108581516048 * 
Marital_StatusTogether ;
245440    +   H1x1_1  =     0.12085771569539 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12085771569539 + H1x1_1 ;
245441    +   H1x1_2  =     1.88026862462696 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.88026862462696 + H1x1_2 ;
245442    +   H1x1_3  =    -1.66768306479405 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66768306479405 + H1x1_3 ;
245443    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
245444    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
245445    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
245446    +END;
MPRINT(EM_DIAGRAM):   END;
245447    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
245448    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
245449    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
245450    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
245451    +END;
MPRINT(EM_DIAGRAM):   END;
245452    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
245453    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
245454    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
245455    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
245456    +   P_DepVar1  =    -105.465737701328 * H1x1_1  +    -25.9919910307682 * H1x1_2
245457    +          +    -60.7557666068018 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -105.465737701328 * H1x1_1 + -25.9919910307682 * H1x1_2 + 
-60.7557666068018 * H1x1_3 ;
245458    +   P_DepVar1  =     17.0796398396243 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.0796398396243 + P_DepVar1 ;
245459    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
245460    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
245461    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
245462    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
245463    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
245464    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
245465    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
245466    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
245467    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
245468    +END;
MPRINT(EM_DIAGRAM):   END;
245469    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
245470    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
245471    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
245472    +END;
MPRINT(EM_DIAGRAM):   END;
245473    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
245474    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
245475    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
245476    +END;
MPRINT(EM_DIAGRAM):   END;
245477    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
245478    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
245479    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
245480    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
245481    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
245482    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
245483    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
245484    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
245485    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
245486    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
245487    +END;
MPRINT(EM_DIAGRAM):   END;
245488    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
245489    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
245490    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
245491    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
245492     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
245493     quit;
245494     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
245495     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
245496     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
245497     retain ID 2 Node "AutoNeural46";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural46";
245498     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
245499     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245500     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
245501     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
245502     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245503     proc sort data=EMWS8.AutoNeural46_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural46_variableset out=_temp2(keep=NAME 
CREATOR);
245504     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
245505     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL46_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245506     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
245507     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
245508     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
245509     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245510     proc contents data=EMWS8.AutoNeural46_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural46_train out=_meta(keep=NAME) noprint;
245511     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

245512     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
245513     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
245514     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245515     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
245516     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
245517     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
245518     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245519     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
245520     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
245520   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 868 rows and 5 columns.

245521     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

245522     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
245523     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 868 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 868 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245524     filename _pref
245524   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
245525     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
245526     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
245527    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
245528    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
245529    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
245530    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
245531    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
245532    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
245533     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
245534     quit;
245535     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
245536     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
245537     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
245538     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
245539     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
245540     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245541     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
245542     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
245543     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

245544     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
245545     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
245546     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245547     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
245548     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
245549     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
245550     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245551     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
245552     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

245553     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
245554     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
245555     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245556     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
245557     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
245558     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
245559     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

245560     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
245561     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
245561   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

245562     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245563     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
245564     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 872 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245565     filename _pref
245565   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
245566     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
245567     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
245568    +
245569    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
245570    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
245570   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
245571    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
245572    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
245573    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
245574    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
245575    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
245576     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
245577     quit;
245578     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
245579     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
245580     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
245581     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
245582     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
245583     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245584     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
245585     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
245586     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

245587     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
245588     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
245589     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245590     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
245591     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
245592     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
245593     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245594     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
245595     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

245596     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
245597     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
245598     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245599     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
245600     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
245601     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
245602     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245603     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
245604     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
245604   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

245605     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

245606     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
245607     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 911 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245608     filename _pref
245608   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
245609     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
245610     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
245611    +
245612    +
245613    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
245614    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
245615    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
245616    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
245617    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
245618    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
245619    +
245620    +
245621    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
245622    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
245623    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
245624    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
245625    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
245626    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
245627    +
245628    +
245629    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
245630    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
245631    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
245632    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
245633    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
245634    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
245635    +
245636    +
245637    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
245638    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
245639    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
245640    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
245641    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
245642    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
245643    +
245644    +
245645    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
245646    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
245647    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
245648    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
245649    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
245650    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
245651    +
245652    +
245653    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
245654    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
245655    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
245656    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
245657    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
245658    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
245659    +
245660    +
245661    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
245662    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
245663    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
245664    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
245665    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
245666    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
245667    +
245668    +
245669    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
245670    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
245671    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
245672    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
245673    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
245674    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
245675    +if
245676    +_FILTERNORM1 not in ( '.')
245677    + and
245678    +_FILTERNORM2 not in ( '.')
245679    + and
245680    +_FILTERNORM3 not in ( '.')
245681    + and
245682    +_FILTERNORM4 not in ( '.')
245683    + and
245684    +_FILTERNORM5 not in ( '.')
245685    + and
245686    +_FILTERNORM6 not in ( '.')
245687    + and
245688    +_FILTERNORM7 not in ( ' ')
245689    + and
245690    +_FILTERNORM8 not in ( ' ')
245691    +and
245692    +( Dt_Customer ne .)
245693    +and ( Income ne . and (Income<=107000))
245694    +and ( Kidhome ne .)
245695    +and ( MntFishProducts ne .)
245696    +and ( MntFruits ne .)
245697    +and ( MntGoldProds ne .)
245698    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
245699    +and ( MntSweetProducts ne .)
245700    +and ( MntWines ne .)
245701    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
245702    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
245703    +and ( NumStorePurchases ne .)
245704    +and ( NumWebPurchases ne .)
245705    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
245706    +and ( Recency ne .)
245707    +and ( Teenhome ne .)
245708    +and ( Year_Birth ne .)
245709    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
245710    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
245711    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
245712    +end;
MPRINT(EM_DIAGRAM):   end;
245713    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
245714    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
245715     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
245716     quit;
245717     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
245718     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
245719     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
245720     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
245721     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
245722     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245723     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
245724     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
245725     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245726     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
245727     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
245728     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

245729     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
245730     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
245731     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
245732     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245733     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
245734     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

245735     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
245736     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
245737     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245738     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
245739     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
245740     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
245741     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245742     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
245743     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
245743   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

245744     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

245745     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
245746     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 977 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

245747     %macro varDept(fcmpdata=,id=);
245748     %global nobs&id scoreFlag&id;
245749     %let scoreFlag&id = 0;
245750     %if &id=1 or ^&fcmpStart %then %do;
245751     proc sort data=&fcmpdata out=_temp&id nodupkey;
245752     by NAME;
245753     where id=&id and LHS in( %let j=1;
245754     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
245755     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
245756     "&var" %let j = %eval(&j+1);
245757     %end;
245758     );
245759     run;
245760     %let dsid = %sysfunc(open(_temp&id));
245761     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
245762     %let dsid = %sysfunc(close(&dsid));
245763     %if &&nobs&id %then %do;
245764     %let scoreFlag&id = 1;
245765     %let fcmpStart = 1;
245766     %end;
245767     %else %let fcmpStart = 0;
245768     %end;
245769     %else %do;
245770     proc sort data=&fcmpdata out=_tempid;
245771     where id=&id;
245772     by LHS;
245773     run;
245774     %let dsid = %sysfunc(open(_tempid));
245775     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
245776     %let dsid = %sysfunc(close(&dsid));
245777     %if ^&&nobs&id %then %do;
245778     proc datasets lib=work nolist;
245779     delete _tempid;
245780     run;
245781     quit;
245782     %end;
245783     %else %do;
245784     data _tempAll;
245785     set %let j=%eval(&id-1);
245786     %do x=1 %to &j;
245787     %if &&nobs&x %then %do;
245788     _temp&x %end;
245789     %end;
245790     ;
245791     run;
245792     proc sql;
245793     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
245793   ! work._tempid p2 where p.name=p2.lhs;
245794     quit;
245795     data _temp&id;
245796     set _temp&id;
245797     where LHS ne '' and NAME ne '' and Node ne '';
245798     run;
245799     proc datasets lib=work nolist;
245800     delete _tempAll;
245801     run;
245802     %let dsid = %sysfunc(open(_temp&id));
245803     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
245804     %let dsid = %sysfunc(close(&dsid));
245805     %if ^&&nobs&id %then %do;
245806     proc datasets lib=work nolist;
245807     delete _temp&id;
245808     run;
245809     quit;
245810     %end;
245811     %else %do;
245812     %let scoreFlag&id = 1;
245813     data _temp&id;
245814     set _temp&id;
245815     where LHS ne NAME and node ne '';
245816     run;
245817     %let dsid = %sysfunc(open(_temp&id));
245818     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
245819     %let dsid = %sysfunc(close(&dsid));
245820     %if ^&&nobs&id %then %do;
245821     proc datasets lib=work nolist;
245822     delete _temp&id;
245823     run;
245824     quit;
245825     %end;
245826     %else %do;
245827     proc sort data=_temp&id nodupkey;
245828     by LHS NAME;
245829     run;
245830     %end;
245831     %end;
245832     %end;
245833     %end;
245834     %mend varDept;
245835     %macro optCode(outdata=fcmpdata);
245836     %global fcmpStart;
245837     %let fcmpStart = 0;
245838     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
245839     %let NumNodes=9;
245840     %do k=1 %to &NumNodes;
245841     %vardept(fcmpdata=&outdata, id=&k);
245842     %end;
245843     %mend optCode;
245844     %optcode(outData=EMWS8.Ensmbl57_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 107 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 28 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

245845     filename _pref
245845   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMPUBLISHSCORE.sas";
245846     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
245847     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMPUBLISHSCORE.sas.
245848    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
245849    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
245850    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
245851    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
245852    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
245853    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
245854    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
245855    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
245856    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
245857    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
245858    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
245859    +LENGTH _WARN_ $4
245860    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
245861    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
245862    +
245863    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
245864    +
245865    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
245866    +
245867    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
245868    +
245869    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
245870    +
245871    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
245872    +
245873    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
245874    +
245875    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
245876    +
245877    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
245878    +
245879    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
245880    +
245881    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
245882    +
245883    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
245884    +
245885    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
245886    +
245887    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
245888    +
245889    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
245890    +
245891    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
245892    +
245893    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
245894    +
245895    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
245896    +
245897    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
245898    +
245899    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
245900    +
245901    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
245902    +
245903    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
245904    +
245905    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
245906    +
245907    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
245908    +
245909    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
245910    +
245911    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
245912    +
245913    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
245914    +
245915    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
245916    +
245917    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
245918    +
245919    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
245920    +
245921    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
245922    +
245923    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
245924    +
245925    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
245926    +
245927    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
245928    +
245929    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
245930    +
245931    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
245932    +
245933    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
245934    +
245935    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
245936    +
245937    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
245938    +
245939    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
245940    +
245941    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
245942    +
245943    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
245944    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
245945    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
245946    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
245947    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
245948    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245949    +end;
MPRINT(EM_DIAGRAM):   end;
245950    +else do;
MPRINT(EM_DIAGRAM):   else do;
245951    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
245952    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
245953    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
245954    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
245955    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
245956    +   end;
MPRINT(EM_DIAGRAM):   end;
245957    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
245958    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
245959    +   end;
MPRINT(EM_DIAGRAM):   end;
245960    +   else do;
MPRINT(EM_DIAGRAM):   else do;
245961    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
245962    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
245963    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245964    +   end;
MPRINT(EM_DIAGRAM):   end;
245965    +end;
MPRINT(EM_DIAGRAM):   end;
245966    +
245967    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
245968    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
245969    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
245970    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
245971    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
245972    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245973    +end;
MPRINT(EM_DIAGRAM):   end;
245974    +else do;
MPRINT(EM_DIAGRAM):   else do;
245975    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
245976    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
245977    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
245978    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
245979    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
245980    +   end;
MPRINT(EM_DIAGRAM):   end;
245981    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
245982    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
245983    +   end;
MPRINT(EM_DIAGRAM):   end;
245984    +   else do;
MPRINT(EM_DIAGRAM):   else do;
245985    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
245986    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
245987    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245988    +   end;
MPRINT(EM_DIAGRAM):   end;
245989    +end;
MPRINT(EM_DIAGRAM):   end;
245990    +
245991    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
245992    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
245993    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
245994    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
245995    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
245996    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
245997    +end;
MPRINT(EM_DIAGRAM):   end;
245998    +else do;
MPRINT(EM_DIAGRAM):   else do;
245999    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
246000    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
246001    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
246002    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
246003    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
246004    +   end;
MPRINT(EM_DIAGRAM):   end;
246005    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
246006    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
246007    +   end;
MPRINT(EM_DIAGRAM):   end;
246008    +   else do;
MPRINT(EM_DIAGRAM):   else do;
246009    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
246010    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
246011    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
246012    +   end;
MPRINT(EM_DIAGRAM):   end;
246013    +end;
MPRINT(EM_DIAGRAM):   end;
246014    +
246015    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
246016    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
246017    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
246018    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
246019    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
246020    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
246021    +end;
MPRINT(EM_DIAGRAM):   end;
246022    +else do;
MPRINT(EM_DIAGRAM):   else do;
246023    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
246024    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
246025    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
246026    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
246027    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
246028    +   end;
MPRINT(EM_DIAGRAM):   end;
246029    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
246030    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
246031    +   end;
MPRINT(EM_DIAGRAM):   end;
246032    +   else do;
MPRINT(EM_DIAGRAM):   else do;
246033    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
246034    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
246035    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
246036    +   end;
MPRINT(EM_DIAGRAM):   end;
246037    +end;
MPRINT(EM_DIAGRAM):   end;
246038    +
246039    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
246040    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
246041    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
246042    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
246043    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
246044    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
246045    +end;
MPRINT(EM_DIAGRAM):   end;
246046    +else do;
MPRINT(EM_DIAGRAM):   else do;
246047    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
246048    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
246049    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
246050    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
246051    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
246052    +   end;
MPRINT(EM_DIAGRAM):   end;
246053    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
246054    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
246055    +   end;
MPRINT(EM_DIAGRAM):   end;
246056    +   else do;
MPRINT(EM_DIAGRAM):   else do;
246057    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
246058    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
246059    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
246060    +   end;
MPRINT(EM_DIAGRAM):   end;
246061    +end;
MPRINT(EM_DIAGRAM):   end;
246062    +
246063    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
246064    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
246065    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
246066    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
246067    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
246068    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
246069    +end;
MPRINT(EM_DIAGRAM):   end;
246070    +else do;
MPRINT(EM_DIAGRAM):   else do;
246071    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
246072    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
246073    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
246074    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
246075    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
246076    +   end;
MPRINT(EM_DIAGRAM):   end;
246077    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
246078    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
246079    +   end;
MPRINT(EM_DIAGRAM):   end;
246080    +   else do;
MPRINT(EM_DIAGRAM):   else do;
246081    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
246082    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
246083    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
246084    +   end;
MPRINT(EM_DIAGRAM):   end;
246085    +end;
MPRINT(EM_DIAGRAM):   end;
246086    +
246087    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
246088    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
246089    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
246090    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
246091    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
246092    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
246093    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
246094    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
246095    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
246096    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
246097    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
246098    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
246099    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
246100    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
246101    +end;
MPRINT(EM_DIAGRAM):   end;
246102    +else do;
MPRINT(EM_DIAGRAM):   else do;
246103    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
246104    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
246105    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
246106    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
246107    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
246108    +   end;
MPRINT(EM_DIAGRAM):   end;
246109    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
246110    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
246111    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
246112    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
246113    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
246114    +   end;
MPRINT(EM_DIAGRAM):   end;
246115    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
246116    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
246117    +   end;
MPRINT(EM_DIAGRAM):   end;
246118    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
246119    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
246120    +   end;
MPRINT(EM_DIAGRAM):   end;
246121    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
246122    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
246123    +   end;
MPRINT(EM_DIAGRAM):   end;
246124    +   else do;
MPRINT(EM_DIAGRAM):   else do;
246125    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
246126    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
246127    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
246128    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
246129    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
246130    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
246131    +   end;
MPRINT(EM_DIAGRAM):   end;
246132    +end;
MPRINT(EM_DIAGRAM):   end;
246133    +
246134    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
246135    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
246136    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
246137    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
246138    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
246139    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
246140    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
246141    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
246142    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
246143    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
246144    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
246145    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
246146    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
246147    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
246148    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
246149    +end;
MPRINT(EM_DIAGRAM):   end;
246150    +else do;
MPRINT(EM_DIAGRAM):   else do;
246151    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
246152    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
246153    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
246154    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
246155    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
246156    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
246157    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
246158    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
246159    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
246160    +         end;
MPRINT(EM_DIAGRAM):   end;
246161    +         else do;
MPRINT(EM_DIAGRAM):   else do;
246162    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
246163    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
246164    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
246165    +            end;
MPRINT(EM_DIAGRAM):   end;
246166    +         end;
MPRINT(EM_DIAGRAM):   end;
246167    +      end;
MPRINT(EM_DIAGRAM):   end;
246168    +      else do;
MPRINT(EM_DIAGRAM):   else do;
246169    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
246170    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
246171    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
246172    +         end;
MPRINT(EM_DIAGRAM):   end;
246173    +      end;
MPRINT(EM_DIAGRAM):   end;
246174    +   end;
MPRINT(EM_DIAGRAM):   end;
246175    +   else do;
MPRINT(EM_DIAGRAM):   else do;
246176    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
246177    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
246178    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
246179    +      end;
MPRINT(EM_DIAGRAM):   end;
246180    +      else do;
MPRINT(EM_DIAGRAM):   else do;
246181    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
246182    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
246183    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
246184    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
246185    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
246186    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
246187    +         end;
MPRINT(EM_DIAGRAM):   end;
246188    +      end;
MPRINT(EM_DIAGRAM):   end;
246189    +   end;
MPRINT(EM_DIAGRAM):   end;
246190    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
246191    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
246192    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
246193    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
246194    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
246195    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
246196    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
246197    +   end;
MPRINT(EM_DIAGRAM):   end;
246198    +end;
MPRINT(EM_DIAGRAM):   end;
246199    +
246200    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
246201    +*** Checking missing input Interval
246202    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
246203    +
246204    +IF NMISS(
246205    +   Income ,
246206    +   Kidhome ,
246207    +   MntFishProducts ,
246208    +   MntFruits ,
246209    +   MntGoldProds ,
246210    +   MntMeatProducts ,
246211    +   MntSweetProducts ,
246212    +   MntWines ,
246213    +   NumCatalogPurchases ,
246214    +   NumDealsPurchases ,
246215    +   NumStorePurchases ,
246216    +   NumWebPurchases ,
246217    +   NumWebVisitsMonth ,
246218    +   Recency ,
246219    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
246220    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
246221    +
246222    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
246223    +END;
MPRINT(EM_DIAGRAM):   END;
246224    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
246225    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
246226    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
246227    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
246228    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
246229    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
246230    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
246231    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
246232    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
246233    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
246234    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
246235    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
246236    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
246237    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
246238    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
246239    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
246240    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
246241    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
246242    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
246243    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
246244    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
246245    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
246246    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
246247    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
246248    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
246249    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
246250    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
246251    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
246252    +END;
MPRINT(EM_DIAGRAM):   END;
246253    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
246254    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
246255    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
246256    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
246257    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
246258    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
246259    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
246260    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
246261    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
246262    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
246263    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
246264    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
246265    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
246266    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
246267    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
246268    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
246269    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
246270    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
246271    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
246272    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
246273    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
246274    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
246275    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
246276    +   ELSE S_NumCatalogPurchases
246277    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
246278    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
246279    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
246280    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
246281    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
246282    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
246283    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
246284    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
246285    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
246286    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
246287    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
246288    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
246289    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
246290    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
246291    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
246292    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
246293    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
246294    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
246295    +END;
The SAS System

MPRINT(EM_DIAGRAM):   END;
246296    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
246297    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
246298    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
246299    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
246300    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
246301    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
246302    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
246303    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
246304    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
246305    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
246306    +   H1x1_1  =       0.346744797535 * S_Income  +     1.31363556955711 *
246307    +        S_Kidhome  +    -0.79208756741143 * S_MntFishProducts
246308    +          +     0.68527811841342 * S_MntFruits  +     0.24664684629472 *
246309    +        S_MntGoldProds  +     0.85215044326148 * S_MntMeatProducts
246310    +          +    -0.05146617403327 * S_MntSweetProducts
246311    +          +     0.70199486255944 * S_MntWines  +    -1.00450471229357 *
246312    +        S_NumCatalogPurchases  +     0.20437829426231 * S_NumDealsPurchases
246313    +          +     0.62863110938217 * S_NumStorePurchases
246314    +          +    -0.38696149667878 * S_NumWebPurchases
246315    +          +    -0.64969312889347 * S_NumWebVisitsMonth
246316    +          +      1.3506790879911 * S_Recency  +    -0.14927581282921 *
246317    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.346744797535 * S_Income + 1.31363556955711 * S_Kidhome + 
-0.79208756741143 * S_MntFishProducts + 0.68527811841342 * S_MntFruits + 0.24664684629472 * 
S_MntGoldProds + 0.85215044326148 * S_MntMeatProducts + -0.05146617403327 * S_MntSweetProducts 
+ 0.70199486255944 * S_MntWines + -1.00450471229357 * S_NumCatalogPurchases + 0.20437829426231 
* S_NumDealsPurchases + 0.62863110938217 * S_NumStorePurchases + -0.38696149667878 * 
S_NumWebPurchases + -0.64969312889347 * S_NumWebVisitsMonth + 1.3506790879911 * S_Recency + 
-0.14927581282921 * S_Teenhome ;
246318    +   H1x1_2  =    -0.31812547665326 * S_Income  +    -0.44650104709618 *
246319    +        S_Kidhome  +     0.57229440722364 * S_MntFishProducts
246320    +          +     0.43482820937164 * S_MntFruits  +     -0.2031067703009 *
246321    +        S_MntGoldProds  +    -4.22959784007598 * S_MntMeatProducts
246322    +          +     -0.2837867994991 * S_MntSweetProducts
246323    +          +     0.53009243544309 * S_MntWines  +    -0.69827694726429 *
246324    +        S_NumCatalogPurchases  +    -0.21825886946472 * S_NumDealsPurchases
246325    +          +    -0.54369381190341 * S_NumStorePurchases
246326    +          +     0.67406669261545 * S_NumWebPurchases
246327    +          +     0.33996696883368 * S_NumWebVisitsMonth
246328    +          +    -0.25785000158296 * S_Recency  +     0.29059204886836 *
246329    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31812547665326 * S_Income + -0.44650104709618 * S_Kidhome + 
0.57229440722364 * S_MntFishProducts + 0.43482820937164 * S_MntFruits + -0.2031067703009 * 
S_MntGoldProds + -4.22959784007598 * S_MntMeatProducts + -0.2837867994991 * S_MntSweetProducts 
+ 0.53009243544309 * S_MntWines + -0.69827694726429 * S_NumCatalogPurchases + 
-0.21825886946472 * S_NumDealsPurchases + -0.54369381190341 * S_NumStorePurchases + 
0.67406669261545 * S_NumWebPurchases + 0.33996696883368 * S_NumWebVisitsMonth + 
-0.25785000158296 * S_Recency + 0.29059204886836 * S_Teenhome ;
246330    +   H1x1_3  =    -0.95497484937763 * S_Income  +     0.69843675975299 *
246331    +        S_Kidhome  +    -0.16297234253648 * S_MntFishProducts
246332    +          +    -0.79520871513787 * S_MntFruits  +    -0.29823724505093 *
246333    +        S_MntGoldProds  +    -0.15152860134108 * S_MntMeatProducts
246334    +          +    -0.03465749764322 * S_MntSweetProducts
246335    +          +     0.53127184040091 * S_MntWines  +     0.59135593751067 *
246336    +        S_NumCatalogPurchases  +     0.32132594137215 * S_NumDealsPurchases
246337    +          +      0.4404265130137 * S_NumStorePurchases
246338    +          +     0.34042541893429 * S_NumWebPurchases
246339    +          +    -1.21549916758761 * S_NumWebVisitsMonth
246340    +          +       1.154070329153 * S_Recency  +     0.48728201337678 *
246341    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.95497484937763 * S_Income + 0.69843675975299 * S_Kidhome + 
-0.16297234253648 * S_MntFishProducts + -0.79520871513787 * S_MntFruits + -0.29823724505093 * 
S_MntGoldProds + -0.15152860134108 * S_MntMeatProducts + -0.03465749764322 * 
S_MntSweetProducts + 0.53127184040091 * S_MntWines + 0.59135593751067 * S_NumCatalogPurchases 
+ 0.32132594137215 * S_NumDealsPurchases + 0.4404265130137 * S_NumStorePurchases + 
0.34042541893429 * S_NumWebPurchases + -1.21549916758761 * S_NumWebVisitsMonth + 
1.154070329153 * S_Recency + 0.48728201337678 * S_Teenhome ;
246342    +   H1x1_4  =    -1.18770065121934 * S_Income  +      0.3073609740511 *
246343    +        S_Kidhome  +     0.10352863720245 * S_MntFishProducts
246344    +          +      0.2833318237712 * S_MntFruits  +     0.03154921247745 *
246345    +        S_MntGoldProds  +    -0.21591651561727 * S_MntMeatProducts
246346    +          +    -0.00464679492565 * S_MntSweetProducts
246347    +          +     0.91421960675715 * S_MntWines  +    -1.26836416129835 *
246348    +        S_NumCatalogPurchases  +    -0.70058095897782 * S_NumDealsPurchases
246349    +          +     1.15839307615364 * S_NumStorePurchases
246350    +          +     0.62831972126136 * S_NumWebPurchases
246351    +          +    -1.61962107597882 * S_NumWebVisitsMonth
246352    +          +     1.12858496707441 * S_Recency  +     0.54281989992336 *
246353    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.18770065121934 * S_Income + 0.3073609740511 * S_Kidhome + 
0.10352863720245 * S_MntFishProducts + 0.2833318237712 * S_MntFruits + 0.03154921247745 * 
S_MntGoldProds + -0.21591651561727 * S_MntMeatProducts + -0.00464679492565 * 
S_MntSweetProducts + 0.91421960675715 * S_MntWines + -1.26836416129835 * S_NumCatalogPurchases 
+ -0.70058095897782 * S_NumDealsPurchases + 1.15839307615364 * S_NumStorePurchases + 
0.62831972126136 * S_NumWebPurchases + -1.61962107597882 * S_NumWebVisitsMonth + 
1.12858496707441 * S_Recency + 0.54281989992336 * S_Teenhome ;
246354    +   H1x1_5  =     0.05044786678162 * S_Income  +    -0.28010558310581 *
246355    +        S_Kidhome  +    -0.27691656261205 * S_MntFishProducts
246356    +          +    -0.39089831210828 * S_MntFruits  +    -0.08178998049926 *
246357    +        S_MntGoldProds  +     1.72104172406534 * S_MntMeatProducts
246358    +          +    -0.31125451894603 * S_MntSweetProducts
246359    +          +    -2.29170137059747 * S_MntWines  +     0.63730065528433 *
246360    +        S_NumCatalogPurchases  +     0.88249434950066 * S_NumDealsPurchases
246361    +          +    -1.44151914398807 * S_NumStorePurchases
246362    +          +     -0.5455286038748 * S_NumWebPurchases
246363    +          +     0.92543573664002 * S_NumWebVisitsMonth
246364    +          +    -0.94895006705107 * S_Recency  +     0.12419848895477 *
246365    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.05044786678162 * S_Income + -0.28010558310581 * S_Kidhome + 
-0.27691656261205 * S_MntFishProducts + -0.39089831210828 * S_MntFruits + -0.08178998049926 * 
S_MntGoldProds + 1.72104172406534 * S_MntMeatProducts + -0.31125451894603 * S_MntSweetProducts 
+ -2.29170137059747 * S_MntWines + 0.63730065528433 * S_NumCatalogPurchases + 0.88249434950066 
* S_NumDealsPurchases + -1.44151914398807 * S_NumStorePurchases + -0.5455286038748 * 
S_NumWebPurchases + 0.92543573664002 * S_NumWebVisitsMonth + -0.94895006705107 * S_Recency + 
0.12419848895477 * S_Teenhome ;
246366    +   H1x1_6  =      1.0379959912095 * S_Income  +    -0.86527104445929 *
246367    +        S_Kidhome  +    -0.34569179888564 * S_MntFishProducts
246368    +          +    -0.00109367242014 * S_MntFruits  +      0.1491727982835 *
246369    +        S_MntGoldProds  +     1.59142102470118 * S_MntMeatProducts
246370    +          +    -0.44310159680843 * S_MntSweetProducts
246371    +          +    -0.12978244847526 * S_MntWines  +     1.25298974430925 *
246372    +        S_NumCatalogPurchases  +      0.8343138844265 * S_NumDealsPurchases
246373    +          +    -0.06648303760561 * S_NumStorePurchases
246374    +          +    -0.65122349287903 * S_NumWebPurchases
246375    +          +     1.83555427093429 * S_NumWebVisitsMonth
246376    +          +    -2.44265045013513 * S_Recency  +    -0.96168611481099 *
246377    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0379959912095 * S_Income + -0.86527104445929 * S_Kidhome + 
-0.34569179888564 * S_MntFishProducts + -0.00109367242014 * S_MntFruits + 0.1491727982835 * 
S_MntGoldProds + 1.59142102470118 * S_MntMeatProducts + -0.44310159680843 * S_MntSweetProducts 
+ -0.12978244847526 * S_MntWines + 1.25298974430925 * S_NumCatalogPurchases + 0.8343138844265 
* S_NumDealsPurchases + -0.06648303760561 * S_NumStorePurchases + -0.65122349287903 * 
S_NumWebPurchases + 1.83555427093429 * S_NumWebVisitsMonth + -2.44265045013513 * S_Recency + 
-0.96168611481099 * S_Teenhome ;
246378    +   H1x1_1  = H1x1_1  +    -0.04697238730506 * AcceptedCmp10
246379    +          +     0.17124574303968 * AcceptedCmp20  +     0.24668651391243 *
246380    +        AcceptedCmp30  +    -0.17661157809394 * AcceptedCmp40
246381    +          +    -0.07986471073966 * AcceptedCmp50  +     0.39456441776971 *
246382    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04697238730506 * AcceptedCmp10 + 0.17124574303968 * 
AcceptedCmp20 + 0.24668651391243 * AcceptedCmp30 + -0.17661157809394 * AcceptedCmp40 + 
-0.07986471073966 * AcceptedCmp50 + 0.39456441776971 * Complain0 ;
246383    +   H1x1_2  = H1x1_2  +     0.82032499204552 * AcceptedCmp10
246384    +          +     0.34058590721793 * AcceptedCmp20  +    -0.05139100187265 *
246385    +        AcceptedCmp30  +     0.03047923325443 * AcceptedCmp40
246386    +          +     0.00472330466661 * AcceptedCmp50  +     0.17230692332464 *
246387    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.82032499204552 * AcceptedCmp10 + 0.34058590721793 * 
AcceptedCmp20 + -0.05139100187265 * AcceptedCmp30 + 0.03047923325443 * AcceptedCmp40 + 
0.00472330466661 * AcceptedCmp50 + 0.17230692332464 * Complain0 ;
246388    +   H1x1_3  = H1x1_3  +     0.28530146043163 * AcceptedCmp10
246389    +          +     0.42287366771085 * AcceptedCmp20  +     0.47373508298281 *
246390    +        AcceptedCmp30  +     0.55866504005454 * AcceptedCmp40
246391    +          +     0.82267729772563 * AcceptedCmp50  +     0.19702533550506 *
246392    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.28530146043163 * AcceptedCmp10 + 0.42287366771085 * 
AcceptedCmp20 + 0.47373508298281 * AcceptedCmp30 + 0.55866504005454 * AcceptedCmp40 + 
0.82267729772563 * AcceptedCmp50 + 0.19702533550506 * Complain0 ;
246393    +   H1x1_4  = H1x1_4  +     0.52781659896891 * AcceptedCmp10
246394    +          +     0.42920365778433 * AcceptedCmp20  +     1.17620912558163 *
246395    +        AcceptedCmp30  +     0.60548467992927 * AcceptedCmp40
246396    +          +     0.94474163621099 * AcceptedCmp50  +    -0.78069672963693 *
246397    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.52781659896891 * AcceptedCmp10 + 0.42920365778433 * 
AcceptedCmp20 + 1.17620912558163 * AcceptedCmp30 + 0.60548467992927 * AcceptedCmp40 + 
0.94474163621099 * AcceptedCmp50 + -0.78069672963693 * Complain0 ;
246398    +   H1x1_5  = H1x1_5  +    -0.57412668124255 * AcceptedCmp10
246399    +          +    -0.47940329920743 * AcceptedCmp20  +    -0.32110813917426 *
246400    +        AcceptedCmp30  +    -0.61486082641451 * AcceptedCmp40
246401    +          +    -0.69974277642424 * AcceptedCmp50  +     0.11676881614828 *
246402    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.57412668124255 * AcceptedCmp10 + -0.47940329920743 
* AcceptedCmp20 + -0.32110813917426 * AcceptedCmp30 + -0.61486082641451 * AcceptedCmp40 + 
-0.69974277642424 * AcceptedCmp50 + 0.11676881614828 * Complain0 ;
246403    +   H1x1_6  = H1x1_6  +    -0.84071985342593 * AcceptedCmp10
246404    +          +    -0.93448636634819 * AcceptedCmp20  +    -1.08375331325128 *
246405    +        AcceptedCmp30  +    -1.17713256753961 * AcceptedCmp40
246406    +          +    -1.19701619371219 * AcceptedCmp50  +     0.43593081503911 *
246407    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.84071985342593 * AcceptedCmp10 + -0.93448636634819 
* AcceptedCmp20 + -1.08375331325128 * AcceptedCmp30 + -1.17713256753961 * AcceptedCmp40 + 
-1.19701619371219 * AcceptedCmp50 + 0.43593081503911 * Complain0 ;
246408    +   H1x1_1  = H1x1_1  +     0.16696814950674 * Education2n_Cycle
246409    +          +    -0.44548398836024 * EducationBasic  +    -0.13816962229813 *
246410    +        EducationGraduation  +     0.15082660839612 * EducationMaster
246411    +          +    -0.86711066227375 * Marital_StatusDivorced
246412    +          +     0.40837974583757 * Marital_StatusMarried
246413    +          +    -0.36026722115525 * Marital_StatusSingle
246414    +          +     0.79004200065113 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.16696814950674 * Education2n_Cycle + 
-0.44548398836024 * EducationBasic + -0.13816962229813 * EducationGraduation + 
0.15082660839612 * EducationMaster + -0.86711066227375 * Marital_StatusDivorced + 
0.40837974583757 * Marital_StatusMarried + -0.36026722115525 * Marital_StatusSingle + 
0.79004200065113 * Marital_StatusTogether ;
246415    +   H1x1_2  = H1x1_2  +     0.16842509296504 * Education2n_Cycle
246416    +          +    -0.37448080566378 * EducationBasic  +     0.48861368388392 *
246417    +        EducationGraduation  +    -0.52159546239433 * EducationMaster
246418    +          +     0.32215787204894 * Marital_StatusDivorced
246419    +          +    -0.56445035445224 * Marital_StatusMarried
246420    +          +    -0.19089062631475 * Marital_StatusSingle
246421    +          +    -0.05879603306331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.16842509296504 * Education2n_Cycle + 
-0.37448080566378 * EducationBasic + 0.48861368388392 * EducationGraduation + 
-0.52159546239433 * EducationMaster + 0.32215787204894 * Marital_StatusDivorced + 
-0.56445035445224 * Marital_StatusMarried + -0.19089062631475 * Marital_StatusSingle + 
-0.05879603306331 * Marital_StatusTogether ;
246422    +   H1x1_3  = H1x1_3  +    -0.60123226656743 * Education2n_Cycle
246423    +          +     0.60422871475083 * EducationBasic  +     1.03135359524948 *
246424    +        EducationGraduation  +     0.08569631133746 * EducationMaster
246425    +          +      0.0333599428728 * Marital_StatusDivorced
246426    +          +      0.2536992094527 * Marital_StatusMarried
246427    +          +     0.28814962122223 * Marital_StatusSingle
246428    +          +    -0.07291720333163 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.60123226656743 * Education2n_Cycle + 
0.60422871475083 * EducationBasic + 1.03135359524948 * EducationGraduation + 0.08569631133746 
* EducationMaster + 0.0333599428728 * Marital_StatusDivorced + 0.2536992094527 * 
Marital_StatusMarried + 0.28814962122223 * Marital_StatusSingle + -0.07291720333163 * 
Marital_StatusTogether ;
246429    +   H1x1_4  = H1x1_4  +    -0.31817779304591 * Education2n_Cycle
246430    +          +     0.41715850822951 * EducationBasic  +    -1.42142934931707 *
246431    +        EducationGraduation  +     0.67447448653035 * EducationMaster
246432    +          +    -0.47992692297474 * Marital_StatusDivorced
246433    +          +     1.37810632485566 * Marital_StatusMarried
246434    +          +    -1.37561982457408 * Marital_StatusSingle
246435    +          +     1.44711275454438 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.31817779304591 * Education2n_Cycle + 
0.41715850822951 * EducationBasic + -1.42142934931707 * EducationGraduation + 0.67447448653035 
* EducationMaster + -0.47992692297474 * Marital_StatusDivorced + 1.37810632485566 * 
Marital_StatusMarried + -1.37561982457408 * Marital_StatusSingle + 1.44711275454438 * 
Marital_StatusTogether ;
246436    +   H1x1_5  = H1x1_5  +     0.09777346458802 * Education2n_Cycle
246437    +          +    -0.45960393039978 * EducationBasic  +     0.51146196412307 *
246438    +        EducationGraduation  +    -0.24819773072524 * EducationMaster
246439    +          +     0.19162417091995 * Marital_StatusDivorced
246440    +          +    -0.36068364824761 * Marital_StatusMarried
246441    +          +    -0.12710669526743 * Marital_StatusSingle
246442    +          +    -0.01019314244777 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.09777346458802 * Education2n_Cycle + 
-0.45960393039978 * EducationBasic + 0.51146196412307 * EducationGraduation + 
-0.24819773072524 * EducationMaster + 0.19162417091995 * Marital_StatusDivorced + 
-0.36068364824761 * Marital_StatusMarried + -0.12710669526743 * Marital_StatusSingle + 
-0.01019314244777 * Marital_StatusTogether ;
246443    +   H1x1_6  = H1x1_6  +     0.36097201590287 * Education2n_Cycle
246444    +          +     0.58682328743356 * EducationBasic  +    -0.70502301542305 *
246445    +        EducationGraduation  +    -0.64274217783062 * EducationMaster
246446    +          +     0.23760271729717 * Marital_StatusDivorced
246447    +          +    -1.21454188572959 * Marital_StatusMarried
246448    +          +     1.24284947007232 * Marital_StatusSingle
246449    +          +    -1.39754167839201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.36097201590287 * Education2n_Cycle + 
0.58682328743356 * EducationBasic + -0.70502301542305 * EducationGraduation + 
-0.64274217783062 * EducationMaster + 0.23760271729717 * Marital_StatusDivorced + 
-1.21454188572959 * Marital_StatusMarried + 1.24284947007232 * Marital_StatusSingle + 
-1.39754167839201 * Marital_StatusTogether ;
246450    +   H1x1_1  =    -0.37160255114665 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.37160255114665 + H1x1_1 ;
246451    +   H1x1_2  =    -0.79024897923326 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.79024897923326 + H1x1_2 ;
246452    +   H1x1_3  =    -1.07478535022413 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.07478535022413 + H1x1_3 ;
246453    +   H1x1_4  =    -0.83827859036654 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.83827859036654 + H1x1_4 ;
246454    +   H1x1_5  =      1.0917082111499 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0917082111499 + H1x1_5 ;
246455    +   H1x1_6  =     1.09202728340056 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.09202728340056 + H1x1_6 ;
246456    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
246457    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
246458    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
246459    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
246460    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
246461    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
246462    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
246463    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
246464    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
246465    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
246466    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
246467    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
246468    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
246469    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
246470    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
246471    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
246472    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
246473    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
246474    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
246475    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
246476    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
246477    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
246478    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
246479    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
246480    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
246481    +END;
MPRINT(EM_DIAGRAM):   END;
246482    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
246483    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
246484    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
246485    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
246486    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
246487    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
246488    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
246489    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
246490    +END;
MPRINT(EM_DIAGRAM):   END;
246491    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
246492    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
246493    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
246494    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
246495    +   P_DepVar1  =    -9.47780447141489 * H1x1_1  +    -8.06096671462069 * H1x1_2
246496    +          +    -4.21167567173811 * H1x1_3  +     -37.599240879379 * H1x1_4
246497    +          +     25.0531533838083 * H1x1_5  +     29.1428275636369 * H1x1_6
246498    +          +     4.90157629063847 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.47780447141489 * H1x1_1 + -8.06096671462069 * H1x1_2 + 
-4.21167567173811 * H1x1_3 + -37.599240879379 * H1x1_4 + 25.0531533838083 * H1x1_5 + 
29.1428275636369 * H1x1_6 + 4.90157629063847 * H1x1_7 ;
246499    +   P_DepVar1  =    -1.97718258496285 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.97718258496285 + P_DepVar1 ;
246500    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
246501    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
246502    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
246503    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
246504    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
246505    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
246506    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
246507    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
246508    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
246509    +END;
MPRINT(EM_DIAGRAM):   END;
246510    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
246511    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
246512    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
246513    +END;
MPRINT(EM_DIAGRAM):   END;
246514    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
246515    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
246516    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
246517    +END;
MPRINT(EM_DIAGRAM):   END;
246518    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
246519    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
246520    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
246521    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
246522    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
246523    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
246524    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
246525    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
246526    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
246527    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
246528    +END;
MPRINT(EM_DIAGRAM):   END;
246529    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
246530    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
246531    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
246532    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
246533     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
246534     quit;
246535     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
246536     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
246537     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
246538     retain ID 2 Node "AutoNeural43";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural43";
246539     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
246540     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2420 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2420 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246541     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
246542     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
246543     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2420 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2420 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246544     proc sort data=EMWS8.AutoNeural43_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural43_variableset out=_temp2(keep=NAME 
CREATOR);
246545     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
246546     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL43_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

246547     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
246548     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
246549     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
246550     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246551     proc contents data=EMWS8.AutoNeural43_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural43_train out=_meta(keep=NAME) noprint;
246552     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 60 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

246553     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
246554     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
246555     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 60 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 60 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246556     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
246557     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
246558     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
246559     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 60 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 60 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246560     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
246561     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
246561   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1212 rows and 5 columns.

246562     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

246563     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
246564     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1212 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1212 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246565     filename _pref
246565   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
246566     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
246567     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
246568    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
246569    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
246570    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
246571    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
246572    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
246573    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
246574     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
246575     quit;
246576     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
246577     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
246578     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
246579     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
246580     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
246581     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246582     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
246583     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
246584     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

246585     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
246586     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
246587     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246588     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
246589     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
246590     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
246591     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246592     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
246593     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

246594     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
246595     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
246596     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246597     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
246598     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
246599     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
246600     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246601     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
246602     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
246602   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

246603     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

246604     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
246605     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1216 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246606     filename _pref
246606   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
246607     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
246608     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
246609    +
246610    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
246611    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
246611   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
246612    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
246613    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
246614    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
246615    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
246616    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
246617     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
246618     quit;
246619     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
246620     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
246621     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
246622     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
246623     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
246624     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246625     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
246626     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
246627     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246628     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
246629     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
246630     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

246631     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
246632     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
246633     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
246634     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246635     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
246636     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246637     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
246638     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
246639     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246640     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
246641     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
246642     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
246643     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

246644     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
246645     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
246645   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

246646     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246647     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
246648     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1255 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246649     filename _pref
246649   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
246650     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
246651     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
246652    +
246653    +
246654    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
246655    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
246656    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
246657    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
246658    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
246659    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
246660    +
246661    +
246662    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
246663    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
246664    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
246665    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
246666    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
246667    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
246668    +
246669    +
246670    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
246671    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
246672    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
246673    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
246674    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
246675    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
246676    +
246677    +
246678    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
246679    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
246680    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
246681    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
246682    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
246683    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
246684    +
246685    +
246686    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
246687    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
246688    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
246689    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
246690    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
246691    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
246692    +
246693    +
246694    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
246695    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
246696    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
246697    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
246698    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
246699    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
246700    +
246701    +
246702    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
246703    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
246704    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
246705    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
246706    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
246707    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
246708    +
246709    +
246710    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
246711    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
246712    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
246713    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
246714    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
246715    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
246716    +if
246717    +_FILTERNORM1 not in ( '.')
246718    + and
246719    +_FILTERNORM2 not in ( '.')
246720    + and
246721    +_FILTERNORM3 not in ( '.')
246722    + and
246723    +_FILTERNORM4 not in ( '.')
246724    + and
246725    +_FILTERNORM5 not in ( '.')
246726    + and
246727    +_FILTERNORM6 not in ( '.')
246728    + and
246729    +_FILTERNORM7 not in ( ' ')
246730    + and
246731    +_FILTERNORM8 not in ( ' ')
246732    +and
246733    +( Dt_Customer ne .)
246734    +and ( Income ne . and (Income<=107000))
246735    +and ( Kidhome ne .)
246736    +and ( MntFishProducts ne .)
246737    +and ( MntFruits ne .)
246738    +and ( MntGoldProds ne .)
246739    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
246740    +and ( MntSweetProducts ne .)
246741    +and ( MntWines ne .)
246742    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
246743    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
246744    +and ( NumStorePurchases ne .)
246745    +and ( NumWebPurchases ne .)
246746    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
246747    +and ( Recency ne .)
246748    +and ( Teenhome ne .)
246749    +and ( Year_Birth ne .)
246750    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
246751    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
246752    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
246753    +end;
MPRINT(EM_DIAGRAM):   end;
246754    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
246755    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
246756     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
246757     quit;
246758     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
246759     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
246760     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
246761     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
246762     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
246763     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

246764     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
246765     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
246766     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246767     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
246768     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
246769     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246770     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
246771     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
246772     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
246773     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246774     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
246775     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

246776     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
246777     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
246778     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246779     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
246780     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
246781     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
246782     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

246783     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
246784     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
246784   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

246785     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246786     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
246787     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1321 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

246788     %macro varDept(fcmpdata=,id=);
246789     %global nobs&id scoreFlag&id;
246790     %let scoreFlag&id = 0;
246791     %if &id=1 or ^&fcmpStart %then %do;
246792     proc sort data=&fcmpdata out=_temp&id nodupkey;
246793     by NAME;
246794     where id=&id and LHS in( %let j=1;
246795     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
246796     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
246797     "&var" %let j = %eval(&j+1);
246798     %end;
246799     );
246800     run;
246801     %let dsid = %sysfunc(open(_temp&id));
246802     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
246803     %let dsid = %sysfunc(close(&dsid));
246804     %if &&nobs&id %then %do;
246805     %let scoreFlag&id = 1;
246806     %let fcmpStart = 1;
246807     %end;
246808     %else %let fcmpStart = 0;
246809     %end;
246810     %else %do;
246811     proc sort data=&fcmpdata out=_tempid;
246812     where id=&id;
246813     by LHS;
246814     run;
246815     %let dsid = %sysfunc(open(_tempid));
246816     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
246817     %let dsid = %sysfunc(close(&dsid));
246818     %if ^&&nobs&id %then %do;
246819     proc datasets lib=work nolist;
246820     delete _tempid;
246821     run;
246822     quit;
246823     %end;
246824     %else %do;
246825     data _tempAll;
246826     set %let j=%eval(&id-1);
246827     %do x=1 %to &j;
246828     %if &&nobs&x %then %do;
246829     _temp&x %end;
246830     %end;
246831     ;
246832     run;
246833     proc sql;
246834     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
246834   ! work._tempid p2 where p.name=p2.lhs;
246835     quit;
246836     data _temp&id;
246837     set _temp&id;
246838     where LHS ne '' and NAME ne '' and Node ne '';
246839     run;
246840     proc datasets lib=work nolist;
246841     delete _tempAll;
246842     run;
246843     %let dsid = %sysfunc(open(_temp&id));
246844     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
246845     %let dsid = %sysfunc(close(&dsid));
246846     %if ^&&nobs&id %then %do;
246847     proc datasets lib=work nolist;
246848     delete _temp&id;
246849     run;
246850     quit;
246851     %end;
246852     %else %do;
246853     %let scoreFlag&id = 1;
246854     data _temp&id;
246855     set _temp&id;
246856     where LHS ne NAME and node ne '';
246857     run;
246858     %let dsid = %sysfunc(open(_temp&id));
246859     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
246860     %let dsid = %sysfunc(close(&dsid));
246861     %if ^&&nobs&id %then %do;
246862     proc datasets lib=work nolist;
246863     delete _temp&id;
246864     run;
246865     quit;
246866     %end;
246867     %else %do;
246868     proc sort data=_temp&id nodupkey;
246869     by LHS NAME;
246870     run;
246871     %end;
246872     %end;
246873     %end;
246874     %end;
246875     %mend varDept;
246876     %macro optCode(outdata=fcmpdata);
246877     %global fcmpStart;
246878     %let fcmpStart = 0;
246879     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
246880     %let NumNodes=9;
246881     %do k=1 %to &NumNodes;
246882     %vardept(fcmpdata=&outdata, id=&k);
246883     %end;
246884     %mend optCode;
246885     %optcode(outData=EMWS8.Ensmbl57_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 119 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 87 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 32 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

246886     filename _pref
246886   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas";
246887     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
246888     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas.
246889    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
246890    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
246891    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
246892    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
246893    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
246894    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
246895    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
246896    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
246897    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
246898    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
246899    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
246900    +LENGTH _WARN_ $4
246901    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
246902    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
246903    +
246904    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
246905    +
246906    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
246907    +
246908    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
246909    +
246910    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
246911    +
246912    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
246913    +
246914    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
246915    +
246916    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
246917    +
246918    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
246919    +
246920    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
246921    +
246922    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
246923    +
246924    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
246925    +
246926    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
246927    +
246928    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
246929    +
246930    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
246931    +
246932    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
246933    +
246934    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
246935    +
246936    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
246937    +
246938    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
246939    +
246940    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
246941    +
246942    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
246943    +
246944    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
246945    +
246946    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
246947    +
246948    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
246949    +
246950    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
246951    +
246952    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
246953    +
246954    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
246955    +
246956    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
246957    +
246958    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
246959    +
246960    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
246961    +
246962    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
246963    +
246964    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
246965    +
246966    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
246967    +
246968    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
246969    +
246970    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
246971    +
246972    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
246973    +
246974    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
246975    +
246976    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
246977    +
246978    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
246979    +
246980    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
246981    +
246982    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
246983    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
246984    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
246985    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
246986    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
246987    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
246988    +end;
MPRINT(EM_DIAGRAM):   end;
246989    +else do;
MPRINT(EM_DIAGRAM):   else do;
246990    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
246991    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
246992    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
246993    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
246994    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
246995    +   end;
MPRINT(EM_DIAGRAM):   end;
246996    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
246997    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
246998    +   end;
MPRINT(EM_DIAGRAM):   end;
246999    +   else do;
MPRINT(EM_DIAGRAM):   else do;
247000    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
247001    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
247002    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
247003    +   end;
MPRINT(EM_DIAGRAM):   end;
247004    +end;
MPRINT(EM_DIAGRAM):   end;
247005    +
247006    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
247007    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
247008    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
247009    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
247010    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
247011    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
247012    +end;
MPRINT(EM_DIAGRAM):   end;
247013    +else do;
MPRINT(EM_DIAGRAM):   else do;
247014    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
247015    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
247016    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
247017    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
247018    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
247019    +   end;
MPRINT(EM_DIAGRAM):   end;
247020    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
247021    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
247022    +   end;
MPRINT(EM_DIAGRAM):   end;
247023    +   else do;
MPRINT(EM_DIAGRAM):   else do;
247024    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
247025    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
247026    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
247027    +   end;
MPRINT(EM_DIAGRAM):   end;
247028    +end;
MPRINT(EM_DIAGRAM):   end;
247029    +
247030    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
247031    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
247032    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
247033    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
247034    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
247035    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
247036    +end;
MPRINT(EM_DIAGRAM):   end;
247037    +else do;
MPRINT(EM_DIAGRAM):   else do;
247038    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
247039    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
247040    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
247041    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
247042    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
247043    +   end;
MPRINT(EM_DIAGRAM):   end;
247044    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
247045    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
247046    +   end;
MPRINT(EM_DIAGRAM):   end;
247047    +   else do;
MPRINT(EM_DIAGRAM):   else do;
247048    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
247049    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
247050    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
247051    +   end;
MPRINT(EM_DIAGRAM):   end;
247052    +end;
MPRINT(EM_DIAGRAM):   end;
247053    +
247054    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
247055    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
247056    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
247057    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
247058    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
247059    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
247060    +end;
MPRINT(EM_DIAGRAM):   end;
247061    +else do;
MPRINT(EM_DIAGRAM):   else do;
247062    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
247063    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
247064    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
247065    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
247066    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
247067    +   end;
MPRINT(EM_DIAGRAM):   end;
247068    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
247069    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
247070    +   end;
MPRINT(EM_DIAGRAM):   end;
247071    +   else do;
MPRINT(EM_DIAGRAM):   else do;
247072    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
247073    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
247074    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
247075    +   end;
MPRINT(EM_DIAGRAM):   end;
247076    +end;
MPRINT(EM_DIAGRAM):   end;
247077    +
247078    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
247079    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
247080    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
247081    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
247082    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
247083    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
247084    +end;
MPRINT(EM_DIAGRAM):   end;
247085    +else do;
MPRINT(EM_DIAGRAM):   else do;
247086    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
247087    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
247088    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
247089    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
247090    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
247091    +   end;
MPRINT(EM_DIAGRAM):   end;
247092    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
247093    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
247094    +   end;
MPRINT(EM_DIAGRAM):   end;
247095    +   else do;
MPRINT(EM_DIAGRAM):   else do;
247096    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
247097    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
247098    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
247099    +   end;
MPRINT(EM_DIAGRAM):   end;
247100    +end;
MPRINT(EM_DIAGRAM):   end;
247101    +
247102    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
247103    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
247104    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
247105    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
247106    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
247107    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
247108    +end;
MPRINT(EM_DIAGRAM):   end;
247109    +else do;
MPRINT(EM_DIAGRAM):   else do;
247110    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
247111    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
247112    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
247113    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
247114    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
247115    +   end;
MPRINT(EM_DIAGRAM):   end;
247116    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
247117    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
247118    +   end;
MPRINT(EM_DIAGRAM):   end;
247119    +   else do;
MPRINT(EM_DIAGRAM):   else do;
247120    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
247121    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
247122    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
247123    +   end;
MPRINT(EM_DIAGRAM):   end;
247124    +end;
MPRINT(EM_DIAGRAM):   end;
247125    +
247126    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
247127    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
247128    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
247129    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
247130    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
247131    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
247132    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
247133    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
247134    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
247135    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
247136    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
247137    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
247138    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
247139    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
247140    +end;
MPRINT(EM_DIAGRAM):   end;
247141    +else do;
MPRINT(EM_DIAGRAM):   else do;
247142    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
247143    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
247144    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
247145    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
247146    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
247147    +   end;
MPRINT(EM_DIAGRAM):   end;
247148    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
247149    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
247150    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
247151    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
247152    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
247153    +   end;
MPRINT(EM_DIAGRAM):   end;
247154    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
247155    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
247156    +   end;
MPRINT(EM_DIAGRAM):   end;
247157    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
247158    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
247159    +   end;
MPRINT(EM_DIAGRAM):   end;
247160    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
247161    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
247162    +   end;
MPRINT(EM_DIAGRAM):   end;
247163    +   else do;
MPRINT(EM_DIAGRAM):   else do;
247164    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
247165    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
247166    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
247167    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
247168    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
247169    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
247170    +   end;
MPRINT(EM_DIAGRAM):   end;
247171    +end;
MPRINT(EM_DIAGRAM):   end;
247172    +
247173    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
247174    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
247175    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
247176    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
247177    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
247178    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
247179    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
247180    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
247181    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
247182    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
247183    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
247184    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
247185    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
247186    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
247187    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
247188    +end;
MPRINT(EM_DIAGRAM):   end;
247189    +else do;
MPRINT(EM_DIAGRAM):   else do;
247190    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
247191    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
247192    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
247193    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
247194    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
247195    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
247196    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
247197    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
247198    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
247199    +         end;
MPRINT(EM_DIAGRAM):   end;
247200    +         else do;
MPRINT(EM_DIAGRAM):   else do;
247201    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
247202    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
247203    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
247204    +            end;
MPRINT(EM_DIAGRAM):   end;
247205    +         end;
MPRINT(EM_DIAGRAM):   end;
247206    +      end;
MPRINT(EM_DIAGRAM):   end;
247207    +      else do;
MPRINT(EM_DIAGRAM):   else do;
247208    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
247209    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
247210    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
247211    +         end;
MPRINT(EM_DIAGRAM):   end;
247212    +      end;
MPRINT(EM_DIAGRAM):   end;
247213    +   end;
MPRINT(EM_DIAGRAM):   end;
247214    +   else do;
MPRINT(EM_DIAGRAM):   else do;
247215    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
247216    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
247217    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
247218    +      end;
MPRINT(EM_DIAGRAM):   end;
247219    +      else do;
MPRINT(EM_DIAGRAM):   else do;
247220    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
247221    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
247222    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
247223    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
247224    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
247225    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
247226    +         end;
MPRINT(EM_DIAGRAM):   end;
247227    +      end;
MPRINT(EM_DIAGRAM):   end;
247228    +   end;
MPRINT(EM_DIAGRAM):   end;
247229    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
247230    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
247231    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
247232    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
247233    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
247234    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
247235    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
247236    +   end;
MPRINT(EM_DIAGRAM):   end;
247237    +end;
MPRINT(EM_DIAGRAM):   end;
247238    +
247239    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
247240    +*** Checking missing input Interval
247241    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
247242    +
247243    +IF NMISS(
247244    +   Income ,
247245    +   Kidhome ,
247246    +   MntFishProducts ,
247247    +   MntFruits ,
247248    +   MntGoldProds ,
247249    +   MntMeatProducts ,
247250    +   MntSweetProducts ,
247251    +   MntWines ,
247252    +   NumCatalogPurchases ,
247253    +   NumDealsPurchases ,
247254    +   NumStorePurchases ,
247255    +   NumWebPurchases ,
247256    +   NumWebVisitsMonth ,
247257    +   Recency ,
247258    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
247259    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
247260    +
247261    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
247262    +END;
MPRINT(EM_DIAGRAM):   END;
247263    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
247264    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
247265    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
247266    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
247267    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
247268    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
247269    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
247270    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
247271    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
247272    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
247273    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
247274    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
247275    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
247276    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
247277    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
247278    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
247279    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
247280    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
247281    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
247282    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
247283    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
247284    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
247285    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
247286    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
247287    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
247288    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
247289    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
247290    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
247291    +END;
MPRINT(EM_DIAGRAM):   END;
247292    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
247293    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
247294    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
247295    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
247296    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
247297    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
247298    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
247299    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
247300    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
247301    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
247302    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
247303    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
247304    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
247305    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
247306    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
247307    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
247308    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
247309    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
247310    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
247311    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
247312    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
247313    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
247314    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
247315    +   ELSE S_NumCatalogPurchases
247316    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
247317    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
247318    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
247319    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
247320    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
247321    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
247322    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
247323    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
247324    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
247325    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
247326    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
247327    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
247328    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
247329    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
247330    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
247331    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
247332    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
247333    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
247334    +END;
MPRINT(EM_DIAGRAM):   END;
247335    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
247336    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
247337    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
247338    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
247339    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
247340    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
247341    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
247342    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
247343    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
247344    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
247345    +   H1x1_1  =    -0.61752831165943 * S_Income  +    -0.31903138173339 *
247346    +        S_Kidhome  +     1.07644564135555 * S_MntFishProducts
247347    +          +     0.65454839379318 * S_MntFruits  +    -0.14959507038031 *
247348    +        S_MntGoldProds  +    -5.93493457217182 * S_MntMeatProducts
247349    +          +     0.13203247258141 * S_MntSweetProducts
247350    +          +     2.56195281130506 * S_MntWines  +    -1.36884424558249 *
247351    +        S_NumCatalogPurchases  +    -0.86876556455629 * S_NumDealsPurchases
247352    +          +     1.48881174203434 * S_NumStorePurchases
247353    +          +     2.06403591844726 * S_NumWebPurchases
247354    +          +    -0.09535558759694 * S_NumWebVisitsMonth
247355    +          +    -0.05978552253526 * S_Recency  +     0.15007435747359 *
247356    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.61752831165943 * S_Income + -0.31903138173339 * S_Kidhome + 
1.07644564135555 * S_MntFishProducts + 0.65454839379318 * S_MntFruits + -0.14959507038031 * 
S_MntGoldProds + -5.93493457217182 * S_MntMeatProducts + 0.13203247258141 * S_MntSweetProducts 
+ 2.56195281130506 * S_MntWines + -1.36884424558249 * S_NumCatalogPurchases + 
-0.86876556455629 * S_NumDealsPurchases + 1.48881174203434 * S_NumStorePurchases + 
2.06403591844726 * S_NumWebPurchases + -0.09535558759694 * S_NumWebVisitsMonth + 
-0.05978552253526 * S_Recency + 0.15007435747359 * S_Teenhome ;
247357    +   H1x1_2  =     0.26608479656795 * S_Income  +    -1.19991366958494 *
247358    +        S_Kidhome  +    -0.06930701896636 * S_MntFishProducts
247359    +          +    -0.24491476793503 * S_MntFruits  +     0.61341878614078 *
247360    +        S_MntGoldProds  +     1.20573081926043 * S_MntMeatProducts
247361    +          +      0.3852767951223 * S_MntSweetProducts
247362    +          +     1.08228250264945 * S_MntWines  +     0.60642303652873 *
247363    +        S_NumCatalogPurchases  +     0.15318179926318 * S_NumDealsPurchases
247364    +          +     0.87686526091024 * S_NumStorePurchases
247365    +          +     0.48807967312664 * S_NumWebPurchases
247366    +          +     2.42770807785792 * S_NumWebVisitsMonth
247367    +          +      -2.239057176324 * S_Recency  +    -0.38694456406673 *
247368    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26608479656795 * S_Income + -1.19991366958494 * S_Kidhome + 
-0.06930701896636 * S_MntFishProducts + -0.24491476793503 * S_MntFruits + 0.61341878614078 * 
S_MntGoldProds + 1.20573081926043 * S_MntMeatProducts + 0.3852767951223 * S_MntSweetProducts + 
1.08228250264945 * S_MntWines + 0.60642303652873 * S_NumCatalogPurchases + 0.15318179926318 * 
S_NumDealsPurchases + 0.87686526091024 * S_NumStorePurchases + 0.48807967312664 * 
S_NumWebPurchases + 2.42770807785792 * S_NumWebVisitsMonth + -2.239057176324 * S_Recency + 
-0.38694456406673 * S_Teenhome ;
247369    +   H1x1_3  =     2.14026785899485 * S_Income  +     0.71085813088393 *
247370    +        S_Kidhome  +    -0.12119457643873 * S_MntFishProducts
247371    +          +     0.52522197349122 * S_MntFruits  +     0.44706934196977 *
247372    +        S_MntGoldProds  +     1.26484530402043 * S_MntMeatProducts
247373    +          +      0.4461192743946 * S_MntSweetProducts
247374    +          +     0.68849791421776 * S_MntWines  +     0.73332275156447 *
247375    +        S_NumCatalogPurchases  +     0.25950906585502 * S_NumDealsPurchases
247376    +          +     1.26831094932108 * S_NumStorePurchases
247377    +          +     0.50819627174451 * S_NumWebPurchases
247378    +          +      0.5463426309003 * S_NumWebVisitsMonth
247379    +          +    -1.45156203280121 * S_Recency  +    -0.99155600458731 *
247380    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.14026785899485 * S_Income + 0.71085813088393 * S_Kidhome + 
-0.12119457643873 * S_MntFishProducts + 0.52522197349122 * S_MntFruits + 0.44706934196977 * 
S_MntGoldProds + 1.26484530402043 * S_MntMeatProducts + 0.4461192743946 * S_MntSweetProducts + 
0.68849791421776 * S_MntWines + 0.73332275156447 * S_NumCatalogPurchases + 0.25950906585502 * 
S_NumDealsPurchases + 1.26831094932108 * S_NumStorePurchases + 0.50819627174451 * 
S_NumWebPurchases + 0.5463426309003 * S_NumWebVisitsMonth + -1.45156203280121 * S_Recency + 
-0.99155600458731 * S_Teenhome ;
247381    +   H1x1_4  =     0.28134858392415 * S_Income  +     1.57838616473011 *
247382    +        S_Kidhome  +     0.01685933792865 * S_MntFishProducts
247383    +          +     0.64818795957189 * S_MntFruits  +     0.44053765721056 *
247384    +        S_MntGoldProds  +     -0.0350414210023 * S_MntMeatProducts
247385    +          +     0.73630834236265 * S_MntSweetProducts
247386    +          +     2.20164313777354 * S_MntWines  +    -0.71244138939707 *
247387    +        S_NumCatalogPurchases  +    -0.05218003711946 * S_NumDealsPurchases
247388    +          +     2.08815797619397 * S_NumStorePurchases
247389    +          +     1.47250122683369 * S_NumWebPurchases
247390    +          +    -1.95745344341946 * S_NumWebVisitsMonth
247391    +          +     1.52461902721397 * S_Recency  +     0.07114080397665 *
247392    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.28134858392415 * S_Income + 1.57838616473011 * S_Kidhome + 
0.01685933792865 * S_MntFishProducts + 0.64818795957189 * S_MntFruits + 0.44053765721056 * 
S_MntGoldProds + -0.0350414210023 * S_MntMeatProducts + 0.73630834236265 * S_MntSweetProducts 
+ 2.20164313777354 * S_MntWines + -0.71244138939707 * S_NumCatalogPurchases + 
-0.05218003711946 * S_NumDealsPurchases + 2.08815797619397 * S_NumStorePurchases + 
1.47250122683369 * S_NumWebPurchases + -1.95745344341946 * S_NumWebVisitsMonth + 
1.52461902721397 * S_Recency + 0.07114080397665 * S_Teenhome ;
247393    +   H1x1_5  =     0.06299419029838 * S_Income  +    -0.25263043424438 *
247394    +        S_Kidhome  +    -0.72407836360298 * S_MntFishProducts
247395    +          +     0.46240377706589 * S_MntFruits  +    -0.31168917499552 *
247396    +        S_MntGoldProds  +     3.17795585534164 * S_MntMeatProducts
247397    +          +    -0.23438993753342 * S_MntSweetProducts
247398    +          +     -2.0392497753494 * S_MntWines  +      1.0094456692298 *
247399    +        S_NumCatalogPurchases  +     1.21992922429388 * S_NumDealsPurchases
247400    +          +    -0.49697408067153 * S_NumStorePurchases
247401    +          +     0.41091736049576 * S_NumWebPurchases
247402    +          +     1.61180593172142 * S_NumWebVisitsMonth
247403    +          +    -2.15417652342106 * S_Recency  +    -0.30863432234672 *
247404    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.06299419029838 * S_Income + -0.25263043424438 * S_Kidhome + 
-0.72407836360298 * S_MntFishProducts + 0.46240377706589 * S_MntFruits + -0.31168917499552 * 
S_MntGoldProds + 3.17795585534164 * S_MntMeatProducts + -0.23438993753342 * S_MntSweetProducts 
+ -2.0392497753494 * S_MntWines + 1.0094456692298 * S_NumCatalogPurchases + 1.21992922429388 * 
S_NumDealsPurchases + -0.49697408067153 * S_NumStorePurchases + 0.41091736049576 * 
S_NumWebPurchases + 1.61180593172142 * S_NumWebVisitsMonth + -2.15417652342106 * S_Recency + 
-0.30863432234672 * S_Teenhome ;
247405    +   H1x1_1  = H1x1_1  +     1.15191639869453 * AcceptedCmp10
247406    +          +      0.0367982148477 * AcceptedCmp20  +      0.3258650789605 *
247407    +        AcceptedCmp30  +      0.2580514232707 * AcceptedCmp40
247408    +          +     0.63958723501202 * AcceptedCmp50  +    -0.32640656229888 *
247409    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.15191639869453 * AcceptedCmp10 + 0.0367982148477 * 
AcceptedCmp20 + 0.3258650789605 * AcceptedCmp30 + 0.2580514232707 * AcceptedCmp40 + 
0.63958723501202 * AcceptedCmp50 + -0.32640656229888 * Complain0 ;
247410    +   H1x1_2  = H1x1_2  +    -1.74950558446111 * AcceptedCmp10
247411    +          +    -0.90356166498734 * AcceptedCmp20  +    -1.23130580993933 *
247412    +        AcceptedCmp30  +     -1.4169795699816 * AcceptedCmp40
247413    +          +    -1.78889837976364 * AcceptedCmp50  +      1.4788954382262 *
247414    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.74950558446111 * AcceptedCmp10 + -0.90356166498734 
* AcceptedCmp20 + -1.23130580993933 * AcceptedCmp30 + -1.4169795699816 * AcceptedCmp40 + 
-1.78889837976364 * AcceptedCmp50 + 1.4788954382262 * Complain0 ;
247415    +   H1x1_3  = H1x1_3  +     0.19640584758608 * AcceptedCmp10
247416    +          +    -0.02812292141076 * AcceptedCmp20  +     0.18411950002405 *
247417    +        AcceptedCmp30  +     0.14654389018041 * AcceptedCmp40
247418    +          +    -0.73289230090736 * AcceptedCmp50  +    -0.18955862978745 *
247419    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.19640584758608 * AcceptedCmp10 + -0.02812292141076 * 
AcceptedCmp20 + 0.18411950002405 * AcceptedCmp30 + 0.14654389018041 * AcceptedCmp40 + 
-0.73289230090736 * AcceptedCmp50 + -0.18955862978745 * Complain0 ;
247420    +   H1x1_4  = H1x1_4  +     0.60930619563149 * AcceptedCmp10
247421    +          +     0.56372104821368 * AcceptedCmp20  +     1.23124531565034 *
247422    +        AcceptedCmp30  +     1.16511385622377 * AcceptedCmp40
247423    +          +     0.83299036807857 * AcceptedCmp50  +    -0.87889366207671 *
247424    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.60930619563149 * AcceptedCmp10 + 0.56372104821368 * 
AcceptedCmp20 + 1.23124531565034 * AcceptedCmp30 + 1.16511385622377 * AcceptedCmp40 + 
0.83299036807857 * AcceptedCmp50 + -0.87889366207671 * Complain0 ;
247425    +   H1x1_5  = H1x1_5  +    -1.02627214772402 * AcceptedCmp10
247426    +          +    -0.35326081554996 * AcceptedCmp20  +    -0.45229632523083 *
247427    +        AcceptedCmp30  +    -0.88576020203346 * AcceptedCmp40
247428    +          +    -0.25524770878943 * AcceptedCmp50  +    -0.58775156249673 *
247429    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.02627214772402 * AcceptedCmp10 + -0.35326081554996 
* AcceptedCmp20 + -0.45229632523083 * AcceptedCmp30 + -0.88576020203346 * AcceptedCmp40 + 
-0.25524770878943 * AcceptedCmp50 + -0.58775156249673 * Complain0 ;
247430    +   H1x1_1  = H1x1_1  +    -0.20048115002767 * Education2n_Cycle
247431    +          +     0.10477823552379 * EducationBasic  +    -0.09122776507376 *
247432    +        EducationGraduation  +    -0.01483389086199 * EducationMaster
247433    +          +    -0.14951932081311 * Marital_StatusDivorced
247434    +          +     0.08343648358981 * Marital_StatusMarried
247435    +          +    -0.52143432598374 * Marital_StatusSingle
247436    +          +    -0.17799942229122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.20048115002767 * Education2n_Cycle + 
0.10477823552379 * EducationBasic + -0.09122776507376 * EducationGraduation + 
-0.01483389086199 * EducationMaster + -0.14951932081311 * Marital_StatusDivorced + 
0.08343648358981 * Marital_StatusMarried + -0.52143432598374 * Marital_StatusSingle + 
-0.17799942229122 * Marital_StatusTogether ;
247437    +   H1x1_2  = H1x1_2  +    -0.06492224317117 * Education2n_Cycle
247438    +          +     0.50630082280639 * EducationBasic  +    -0.32521089553297 *
247439    +        EducationGraduation  +    -0.38968023972702 * EducationMaster
247440    +          +    -0.34495973695408 * Marital_StatusDivorced
247441    +          +    -0.30910829853532 * Marital_StatusMarried
247442    +          +     0.14431404541055 * Marital_StatusSingle
247443    +          +    -0.62673029935295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.06492224317117 * Education2n_Cycle + 
0.50630082280639 * EducationBasic + -0.32521089553297 * EducationGraduation + 
-0.38968023972702 * EducationMaster + -0.34495973695408 * Marital_StatusDivorced + 
-0.30910829853532 * Marital_StatusMarried + 0.14431404541055 * Marital_StatusSingle + 
-0.62673029935295 * Marital_StatusTogether ;
247444    +   H1x1_3  = H1x1_3  +     0.41266521248037 * Education2n_Cycle
247445    +          +    -0.11192325989817 * EducationBasic  +    -0.96742524784448 *
247446    +        EducationGraduation  +     0.05582780345024 * EducationMaster
247447    +          +     0.81191732290197 * Marital_StatusDivorced
247448    +          +    -2.53108753227171 * Marital_StatusMarried
247449    +          +     2.21769123178832 * Marital_StatusSingle
247450    +          +    -0.90613443546426 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.41266521248037 * Education2n_Cycle + 
-0.11192325989817 * EducationBasic + -0.96742524784448 * EducationGraduation + 
0.05582780345024 * EducationMaster + 0.81191732290197 * Marital_StatusDivorced + 
-2.53108753227171 * Marital_StatusMarried + 2.21769123178832 * Marital_StatusSingle + 
-0.90613443546426 * Marital_StatusTogether ;
247451    +   H1x1_4  = H1x1_4  +    -0.08882031994616 * Education2n_Cycle
247452    +          +     0.59640481500702 * EducationBasic  +    -0.75285942189639 *
247453    +        EducationGraduation  +     0.52527957409681 * EducationMaster
247454    +          +    -1.26246836163545 * Marital_StatusDivorced
247455    +          +     0.73147045162506 * Marital_StatusMarried
247456    +          +     0.04252836823306 * Marital_StatusSingle
247457    +          +     1.44915119635375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.08882031994616 * Education2n_Cycle + 
0.59640481500702 * EducationBasic + -0.75285942189639 * EducationGraduation + 0.52527957409681 
* EducationMaster + -1.26246836163545 * Marital_StatusDivorced + 0.73147045162506 * 
Marital_StatusMarried + 0.04252836823306 * Marital_StatusSingle + 1.44915119635375 * 
Marital_StatusTogether ;
247458    +   H1x1_5  = H1x1_5  +    -0.24370046099656 * Education2n_Cycle
247459    +          +     0.03233873053213 * EducationBasic  +      0.1375198926931 *
247460    +        EducationGraduation  +      0.0979905405754 * EducationMaster
247461    +          +    -0.25571808514992 * Marital_StatusDivorced
247462    +          +     0.20684027342845 * Marital_StatusMarried
247463    +          +    -0.36983627747986 * Marital_StatusSingle
247464    +          +    -0.08239173696723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24370046099656 * Education2n_Cycle + 
0.03233873053213 * EducationBasic + 0.1375198926931 * EducationGraduation + 0.0979905405754 * 
EducationMaster + -0.25571808514992 * Marital_StatusDivorced + 0.20684027342845 * 
Marital_StatusMarried + -0.36983627747986 * Marital_StatusSingle + -0.08239173696723 * 
Marital_StatusTogether ;
247465    +   H1x1_1  =    -0.01788649837565 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.01788649837565 + H1x1_1 ;
247466    +   H1x1_2  =     1.77562113267961 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.77562113267961 + H1x1_2 ;
247467    +   H1x1_3  =    -1.36483909507433 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.36483909507433 + H1x1_3 ;
247468    +   H1x1_4  =    -0.17103473926556 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.17103473926556 + H1x1_4 ;
247469    +   H1x1_5  =     0.17065963901812 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.17065963901812 + H1x1_5 ;
247470    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
247471    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
247472    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
247473    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
247474    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
247475    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
247476    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
247477    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
247478    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
247479    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
247480    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
247481    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
247482    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
247483    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
247484    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
247485    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
247486    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
247487    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
247488    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
247489    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
247490    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
247491    +END;
MPRINT(EM_DIAGRAM):   END;
247492    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
247493    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
247494    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
247495    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
247496    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
247497    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
247498    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
247499    +END;
MPRINT(EM_DIAGRAM):   END;
247500    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
247501    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
247502    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
247503    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
247504    +   P_DepVar1  =    -12.4855028874976 * H1x1_1  +     8.50519000347347 * H1x1_2
247505    +          +     3.84994997572101 * H1x1_3  +    -12.5610415895663 * H1x1_4
247506    +          +     17.4993211655408 * H1x1_5  +     0.14986282100716 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.4855028874976 * H1x1_1 + 8.50519000347347 * H1x1_2 + 
3.84994997572101 * H1x1_3 + -12.5610415895663 * H1x1_4 + 17.4993211655408 * H1x1_5 + 
0.14986282100716 * H1x1_6 ;
247507    +   P_DepVar1  =     3.23272740278636 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.23272740278636 + P_DepVar1 ;
247508    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
247509    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
247510    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
247511    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
247512    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
247513    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
247514    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
247515    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
247516    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
247517    +END;
MPRINT(EM_DIAGRAM):   END;
247518    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
247519    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
247520    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
247521    +END;
MPRINT(EM_DIAGRAM):   END;
247522    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
247523    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
247524    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
247525    +END;
MPRINT(EM_DIAGRAM):   END;
247526    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
247527    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
247528    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
247529    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
247530    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
247531    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
247532    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
247533    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
247534    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
247535    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
247536    +END;
MPRINT(EM_DIAGRAM):   END;
247537    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
247538    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
247539    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
247540    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
247541     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
247542     quit;
247543     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
247544     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
247545     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
247546     retain ID 2 Node "AutoNeural42";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural42";
247547     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
247548     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2220 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2220 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

247549     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
247550     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
247551     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2220 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2220 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247552     proc sort data=EMWS8.AutoNeural42_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural42_variableset out=_temp2(keep=NAME 
CREATOR);
247553     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
247554     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL42_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247555     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
247556     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
247557     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
247558     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247559     proc contents data=EMWS8.AutoNeural42_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural42_train out=_meta(keep=NAME) noprint;
247560     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

247561     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
247562     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
247563     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247564     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
247565     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
247566     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
247567     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247568     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
247569     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
247569   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1126 rows and 5 columns.

247570     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

247571     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
247572     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1126 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1126 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247573     filename _pref
247573   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
247574     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
247575     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
247576    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
247577    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
247578    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
247579    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
247580    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
247581    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
247582     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
247583     quit;
247584     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
247585     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
247586     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
247587     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
247588     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
247589     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247590     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
247591     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
247592     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

247593     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
247594     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
247595     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247596     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
247597     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
247598     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
247599     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247600     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
247601     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

247602     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
247603     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
247604     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247605     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
247606     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
247607     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
247608     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247609     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
247610     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
247610   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

247611     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247612     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
247613     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1130 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247614     filename _pref
247614   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
247615     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
247616     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
247617    +
247618    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
247619    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
247619   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
247620    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
247621    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
247622    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
247623    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
247624    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
247625     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
247626     quit;
247627     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
247628     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
247629     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
247630     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
247631     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
247632     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247633     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
247634     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
247635     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247636     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
247637     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
247638     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247639     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
247640     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
247641     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
247642     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247643     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
247644     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247645     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
247646     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
247647     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

247648     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
247649     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
247650     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
247651     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247652     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
247653     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
247653   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

247654     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247655     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
247656     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1169 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

247657     filename _pref
247657   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
247658     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
247659     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
247660    +
247661    +
247662    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
247663    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
247664    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
247665    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
247666    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
247667    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
247668    +
247669    +
247670    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
247671    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
247672    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
247673    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
247674    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
247675    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
247676    +
247677    +
247678    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
247679    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
247680    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
247681    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
247682    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
247683    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
247684    +
247685    +
247686    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
247687    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
247688    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
247689    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
247690    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
247691    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
247692    +
247693    +
247694    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
247695    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
247696    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
247697    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
247698    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
247699    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
247700    +
247701    +
247702    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
247703    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
247704    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
247705    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
247706    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
247707    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
247708    +
247709    +
247710    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
247711    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
247712    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
247713    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
247714    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
247715    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
247716    +
247717    +
247718    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
247719    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
247720    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
247721    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
247722    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
247723    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
247724    +if
247725    +_FILTERNORM1 not in ( '.')
247726    + and
247727    +_FILTERNORM2 not in ( '.')
247728    + and
247729    +_FILTERNORM3 not in ( '.')
247730    + and
247731    +_FILTERNORM4 not in ( '.')
247732    + and
247733    +_FILTERNORM5 not in ( '.')
247734    + and
247735    +_FILTERNORM6 not in ( '.')
247736    + and
247737    +_FILTERNORM7 not in ( ' ')
247738    + and
247739    +_FILTERNORM8 not in ( ' ')
247740    +and
247741    +( Dt_Customer ne .)
247742    +and ( Income ne . and (Income<=107000))
247743    +and ( Kidhome ne .)
247744    +and ( MntFishProducts ne .)
247745    +and ( MntFruits ne .)
247746    +and ( MntGoldProds ne .)
247747    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
247748    +and ( MntSweetProducts ne .)
247749    +and ( MntWines ne .)
247750    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
247751    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
247752    +and ( NumStorePurchases ne .)
247753    +and ( NumWebPurchases ne .)
247754    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
247755    +and ( Recency ne .)
247756    +and ( Teenhome ne .)
247757    +and ( Year_Birth ne .)
247758    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
247759    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
247760    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
247761    +end;
MPRINT(EM_DIAGRAM):   end;
247762    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
247763    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
247764     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
247765     quit;
247766     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
247767     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
247768     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
247769     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
247770     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
247771     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247772     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
247773     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
247774     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247775     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
247776     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
247777     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

247778     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
247779     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
247780     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
247781     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247782     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
247783     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

247784     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
247785     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
247786     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

247787     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
247788     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
247789     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
247790     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247791     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
247792     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
247792   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

247793     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247794     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
247795     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1235 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

247796     %macro varDept(fcmpdata=,id=);
247797     %global nobs&id scoreFlag&id;
247798     %let scoreFlag&id = 0;
247799     %if &id=1 or ^&fcmpStart %then %do;
247800     proc sort data=&fcmpdata out=_temp&id nodupkey;
247801     by NAME;
247802     where id=&id and LHS in( %let j=1;
247803     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
247804     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
247805     "&var" %let j = %eval(&j+1);
247806     %end;
247807     );
247808     run;
247809     %let dsid = %sysfunc(open(_temp&id));
247810     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
247811     %let dsid = %sysfunc(close(&dsid));
247812     %if &&nobs&id %then %do;
247813     %let scoreFlag&id = 1;
247814     %let fcmpStart = 1;
247815     %end;
247816     %else %let fcmpStart = 0;
247817     %end;
247818     %else %do;
247819     proc sort data=&fcmpdata out=_tempid;
247820     where id=&id;
247821     by LHS;
247822     run;
247823     %let dsid = %sysfunc(open(_tempid));
247824     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
247825     %let dsid = %sysfunc(close(&dsid));
247826     %if ^&&nobs&id %then %do;
247827     proc datasets lib=work nolist;
247828     delete _tempid;
247829     run;
247830     quit;
247831     %end;
247832     %else %do;
247833     data _tempAll;
247834     set %let j=%eval(&id-1);
247835     %do x=1 %to &j;
247836     %if &&nobs&x %then %do;
247837     _temp&x %end;
247838     %end;
247839     ;
247840     run;
247841     proc sql;
247842     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
247842   ! work._tempid p2 where p.name=p2.lhs;
247843     quit;
247844     data _temp&id;
247845     set _temp&id;
247846     where LHS ne '' and NAME ne '' and Node ne '';
247847     run;
247848     proc datasets lib=work nolist;
247849     delete _tempAll;
247850     run;
247851     %let dsid = %sysfunc(open(_temp&id));
247852     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
247853     %let dsid = %sysfunc(close(&dsid));
247854     %if ^&&nobs&id %then %do;
247855     proc datasets lib=work nolist;
247856     delete _temp&id;
247857     run;
247858     quit;
247859     %end;
247860     %else %do;
247861     %let scoreFlag&id = 1;
247862     data _temp&id;
247863     set _temp&id;
247864     where LHS ne NAME and node ne '';
247865     run;
247866     %let dsid = %sysfunc(open(_temp&id));
247867     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
247868     %let dsid = %sysfunc(close(&dsid));
247869     %if ^&&nobs&id %then %do;
247870     proc datasets lib=work nolist;
247871     delete _temp&id;
247872     run;
247873     quit;
247874     %end;
247875     %else %do;
247876     proc sort data=_temp&id nodupkey;
247877     by LHS NAME;
247878     run;
247879     %end;
247880     %end;
247881     %end;
247882     %end;
247883     %mend varDept;
247884     %macro optCode(outdata=fcmpdata);
247885     %global fcmpStart;
247886     %let fcmpStart = 0;
247887     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
247888     %let NumNodes=9;
247889     %do k=1 %to &NumNodes;
247890     %vardept(fcmpdata=&outdata, id=&k);
247891     %end;
247892     %mend optCode;
247893     %optcode(outData=EMWS8.Ensmbl57_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 116 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 85 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 31 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

247894     filename _pref
247894   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMPUBLISHSCORE.sas";
247895     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
247896     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMPUBLISHSCORE.sas.
247897    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
247898    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
247899    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
247900    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
247901    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
247902    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
247903    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
247904    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
247905    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
247906    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
247907    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
247908    +LENGTH _WARN_ $4
247909    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
247910    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
247911    +
247912    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
247913    +
247914    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
247915    +
247916    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
247917    +
247918    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
247919    +
247920    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
247921    +
247922    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
247923    +
247924    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
247925    +
247926    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
247927    +
247928    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
247929    +
247930    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
247931    +
247932    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
247933    +
247934    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
247935    +
247936    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
247937    +
247938    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
247939    +
247940    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
247941    +
247942    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
247943    +
247944    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
247945    +
247946    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
247947    +
247948    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
247949    +
247950    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
247951    +
247952    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
247953    +
247954    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
247955    +
247956    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
247957    +
247958    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
247959    +
247960    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
247961    +
247962    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
247963    +
247964    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
247965    +
247966    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
247967    +
247968    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
247969    +
247970    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
247971    +
247972    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
247973    +
247974    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
247975    +
247976    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
247977    +
247978    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
247979    +
247980    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
247981    +
247982    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
247983    +
247984    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
247985    +
247986    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
247987    +
247988    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
247989    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
247990    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
247991    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
247992    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
247993    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
247994    +end;
MPRINT(EM_DIAGRAM):   end;
247995    +else do;
MPRINT(EM_DIAGRAM):   else do;
247996    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
247997    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
247998    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
247999    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
248000    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
248001    +   end;
MPRINT(EM_DIAGRAM):   end;
248002    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
248003    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
248004    +   end;
MPRINT(EM_DIAGRAM):   end;
248005    +   else do;
MPRINT(EM_DIAGRAM):   else do;
248006    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
248007    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
248008    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248009    +   end;
MPRINT(EM_DIAGRAM):   end;
248010    +end;
MPRINT(EM_DIAGRAM):   end;
248011    +
248012    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
248013    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
248014    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
248015    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
248016    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
248017    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248018    +end;
MPRINT(EM_DIAGRAM):   end;
248019    +else do;
MPRINT(EM_DIAGRAM):   else do;
248020    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
248021    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
248022    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
248023    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
248024    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
248025    +   end;
MPRINT(EM_DIAGRAM):   end;
248026    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
248027    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
248028    +   end;
MPRINT(EM_DIAGRAM):   end;
248029    +   else do;
MPRINT(EM_DIAGRAM):   else do;
248030    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
248031    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
248032    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248033    +   end;
MPRINT(EM_DIAGRAM):   end;
248034    +end;
MPRINT(EM_DIAGRAM):   end;
248035    +
248036    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
248037    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
248038    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
248039    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
248040    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
248041    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248042    +end;
MPRINT(EM_DIAGRAM):   end;
248043    +else do;
MPRINT(EM_DIAGRAM):   else do;
248044    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
248045    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
248046    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
248047    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
248048    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
248049    +   end;
MPRINT(EM_DIAGRAM):   end;
248050    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
248051    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
248052    +   end;
MPRINT(EM_DIAGRAM):   end;
248053    +   else do;
MPRINT(EM_DIAGRAM):   else do;
248054    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
248055    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
248056    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248057    +   end;
MPRINT(EM_DIAGRAM):   end;
248058    +end;
MPRINT(EM_DIAGRAM):   end;
248059    +
248060    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
248061    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
248062    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
248063    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
248064    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
248065    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248066    +end;
MPRINT(EM_DIAGRAM):   end;
248067    +else do;
MPRINT(EM_DIAGRAM):   else do;
248068    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
248069    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
248070    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
248071    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
248072    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
248073    +   end;
MPRINT(EM_DIAGRAM):   end;
248074    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
248075    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
248076    +   end;
MPRINT(EM_DIAGRAM):   end;
248077    +   else do;
MPRINT(EM_DIAGRAM):   else do;
248078    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
248079    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
248080    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248081    +   end;
MPRINT(EM_DIAGRAM):   end;
248082    +end;
MPRINT(EM_DIAGRAM):   end;
248083    +
248084    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
248085    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
248086    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
248087    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
248088    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
248089    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248090    +end;
MPRINT(EM_DIAGRAM):   end;
248091    +else do;
MPRINT(EM_DIAGRAM):   else do;
248092    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
248093    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
248094    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
248095    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
248096    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
248097    +   end;
MPRINT(EM_DIAGRAM):   end;
248098    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
248099    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
248100    +   end;
MPRINT(EM_DIAGRAM):   end;
248101    +   else do;
MPRINT(EM_DIAGRAM):   else do;
248102    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
248103    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
248104    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248105    +   end;
MPRINT(EM_DIAGRAM):   end;
248106    +end;
MPRINT(EM_DIAGRAM):   end;
248107    +
248108    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
248109    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
248110    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
248111    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
248112    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
248113    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248114    +end;
MPRINT(EM_DIAGRAM):   end;
248115    +else do;
MPRINT(EM_DIAGRAM):   else do;
248116    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
248117    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
248118    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
248119    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
248120    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
248121    +   end;
MPRINT(EM_DIAGRAM):   end;
248122    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
248123    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
248124    +   end;
MPRINT(EM_DIAGRAM):   end;
248125    +   else do;
MPRINT(EM_DIAGRAM):   else do;
248126    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
248127    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
248128    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248129    +   end;
MPRINT(EM_DIAGRAM):   end;
248130    +end;
MPRINT(EM_DIAGRAM):   end;
248131    +
248132    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
248133    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
248134    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
248135    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
248136    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
248137    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
248138    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
248139    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
248140    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
248141    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
248142    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
248143    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
248144    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
248145    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248146    +end;
MPRINT(EM_DIAGRAM):   end;
248147    +else do;
MPRINT(EM_DIAGRAM):   else do;
248148    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
248149    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
248150    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
248151    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
248152    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
248153    +   end;
MPRINT(EM_DIAGRAM):   end;
248154    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
248155    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
248156    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
248157    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
248158    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
248159    +   end;
MPRINT(EM_DIAGRAM):   end;
248160    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
248161    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
248162    +   end;
MPRINT(EM_DIAGRAM):   end;
248163    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
248164    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
248165    +   end;
MPRINT(EM_DIAGRAM):   end;
248166    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
248167    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
248168    +   end;
MPRINT(EM_DIAGRAM):   end;
248169    +   else do;
MPRINT(EM_DIAGRAM):   else do;
248170    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
248171    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
248172    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
248173    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
248174    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
248175    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248176    +   end;
MPRINT(EM_DIAGRAM):   end;
248177    +end;
MPRINT(EM_DIAGRAM):   end;
248178    +
248179    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
248180    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
248181    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
248182    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
248183    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
248184    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
248185    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
248186    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
248187    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
248188    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
248189    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
248190    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
248191    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
248192    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
248193    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248194    +end;
MPRINT(EM_DIAGRAM):   end;
248195    +else do;
MPRINT(EM_DIAGRAM):   else do;
248196    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
248197    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
248198    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
248199    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
248200    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
248201    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
248202    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
248203    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
248204    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
248205    +         end;
MPRINT(EM_DIAGRAM):   end;
248206    +         else do;
MPRINT(EM_DIAGRAM):   else do;
248207    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
248208    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
248209    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
248210    +            end;
MPRINT(EM_DIAGRAM):   end;
248211    +         end;
MPRINT(EM_DIAGRAM):   end;
248212    +      end;
MPRINT(EM_DIAGRAM):   end;
248213    +      else do;
MPRINT(EM_DIAGRAM):   else do;
248214    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
248215    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
248216    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
248217    +         end;
MPRINT(EM_DIAGRAM):   end;
248218    +      end;
MPRINT(EM_DIAGRAM):   end;
248219    +   end;
MPRINT(EM_DIAGRAM):   end;
248220    +   else do;
MPRINT(EM_DIAGRAM):   else do;
248221    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
248222    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
248223    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
248224    +      end;
MPRINT(EM_DIAGRAM):   end;
248225    +      else do;
MPRINT(EM_DIAGRAM):   else do;
248226    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
248227    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
248228    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
248229    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
248230    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
248231    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
248232    +         end;
MPRINT(EM_DIAGRAM):   end;
248233    +      end;
MPRINT(EM_DIAGRAM):   end;
248234    +   end;
MPRINT(EM_DIAGRAM):   end;
248235    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
248236    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
248237    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
248238    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
248239    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
248240    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
248241    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248242    +   end;
MPRINT(EM_DIAGRAM):   end;
248243    +end;
MPRINT(EM_DIAGRAM):   end;
248244    +
248245    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248246    +*** Checking missing input Interval
248247    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
248248    +
248249    +IF NMISS(
248250    +   Income ,
248251    +   Kidhome ,
248252    +   MntFishProducts ,
248253    +   MntFruits ,
248254    +   MntGoldProds ,
248255    +   MntMeatProducts ,
248256    +   MntSweetProducts ,
248257    +   MntWines ,
248258    +   NumCatalogPurchases ,
248259    +   NumDealsPurchases ,
248260    +   NumStorePurchases ,
248261    +   NumWebPurchases ,
248262    +   NumWebVisitsMonth ,
248263    +   Recency ,
248264    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
248265    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
248266    +
248267    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248268    +END;
MPRINT(EM_DIAGRAM):   END;
248269    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248270    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
248271    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248272    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
248273    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
248274    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
248275    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
248276    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
248277    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
248278    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
248279    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
248280    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
248281    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
248282    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
248283    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
248284    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
248285    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
248286    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
248287    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
248288    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
248289    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
248290    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
248291    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
248292    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
248293    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
248294    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
248295    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
248296    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
248297    +END;
MPRINT(EM_DIAGRAM):   END;
248298    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
248299    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
248300    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
248301    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
248302    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
248303    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
248304    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
248305    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
248306    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
248307    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
248308    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
248309    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
248310    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
248311    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
248312    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
248313    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
248314    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
248315    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
248316    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
248317    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
248318    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
248319    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
248320    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
248321    +   ELSE S_NumCatalogPurchases
248322    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
248323    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
248324    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
248325    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
248326    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
248327    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
248328    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
248329    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
248330    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
248331    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
248332    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
248333    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
248334    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
248335    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
248336    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
248337    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
248338    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
248339    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
248340    +END;
MPRINT(EM_DIAGRAM):   END;
248341    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248342    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
248343    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248344    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248345    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
248346    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248347    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248348    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
248349    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248350    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
248351    +   H1x1_1  =     0.00788029676844 * S_Income  +    -0.91535527861933 *
248352    +        S_Kidhome  +    -0.25225116407302 * S_MntFishProducts
248353    +          +    -0.18797076337897 * S_MntFruits  +    -0.44902183906131 *
248354    +        S_MntGoldProds  +      2.2767772850691 * S_MntMeatProducts
248355    +          +     -0.2030617183738 * S_MntSweetProducts
248356    +          +    -3.00492674390268 * S_MntWines  +     0.79341578039366 *
248357    +        S_NumCatalogPurchases  +     0.87204448909716 * S_NumDealsPurchases
248358    +          +    -2.67074303965293 * S_NumStorePurchases
248359    +          +    -0.84694619593676 * S_NumWebPurchases
248360    +          +     1.78464945757548 * S_NumWebVisitsMonth
248361    +          +    -1.79669645209961 * S_Recency  +     0.12484193160086 *
248362    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.00788029676844 * S_Income + -0.91535527861933 * S_Kidhome + 
-0.25225116407302 * S_MntFishProducts + -0.18797076337897 * S_MntFruits + -0.44902183906131 * 
S_MntGoldProds + 2.2767772850691 * S_MntMeatProducts + -0.2030617183738 * S_MntSweetProducts + 
-3.00492674390268 * S_MntWines + 0.79341578039366 * S_NumCatalogPurchases + 0.87204448909716 * 
S_NumDealsPurchases + -2.67074303965293 * S_NumStorePurchases + -0.84694619593676 * 
S_NumWebPurchases + 1.78464945757548 * S_NumWebVisitsMonth + -1.79669645209961 * S_Recency + 
0.12484193160086 * S_Teenhome ;
248363    +   H1x1_2  =     0.89056482755935 * S_Income  +    -1.26858223800375 *
248364    +        S_Kidhome  +    -0.21524958568885 * S_MntFishProducts
248365    +          +     0.09518715448323 * S_MntFruits  +    -0.19863573935492 *
248366    +        S_MntGoldProds  +     1.18841616001527 * S_MntMeatProducts
248367    +          +    -0.48853587268985 * S_MntSweetProducts
248368    +          +      -0.414993830248 * S_MntWines  +     1.47883555237605 *
248369    +        S_NumCatalogPurchases  +     0.83644109170588 * S_NumDealsPurchases
248370    +          +    -1.10593499185395 * S_NumStorePurchases
248371    +          +     -1.3003228821842 * S_NumWebPurchases
248372    +          +     2.87047131261901 * S_NumWebVisitsMonth
248373    +          +    -3.10727941128136 * S_Recency  +     -1.2351049603093 *
248374    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.89056482755935 * S_Income + -1.26858223800375 * S_Kidhome + 
-0.21524958568885 * S_MntFishProducts + 0.09518715448323 * S_MntFruits + -0.19863573935492 * 
S_MntGoldProds + 1.18841616001527 * S_MntMeatProducts + -0.48853587268985 * S_MntSweetProducts 
+ -0.414993830248 * S_MntWines + 1.47883555237605 * S_NumCatalogPurchases + 0.83644109170588 * 
S_NumDealsPurchases + -1.10593499185395 * S_NumStorePurchases + -1.3003228821842 * 
S_NumWebPurchases + 2.87047131261901 * S_NumWebVisitsMonth + -3.10727941128136 * S_Recency + 
-1.2351049603093 * S_Teenhome ;
248375    +   H1x1_3  =    -0.59621293188677 * S_Income  +    -0.98204600423622 *
248376    +        S_Kidhome  +     0.82413780234399 * S_MntFishProducts
248377    +          +     0.39739163071946 * S_MntFruits  +    -0.49042553659196 *
248378    +        S_MntGoldProds  +    -4.39932579909415 * S_MntMeatProducts
248379    +          +    -0.27795094909244 * S_MntSweetProducts
248380    +          +     0.24963500961568 * S_MntWines  +     -0.5239489331422 *
248381    +        S_NumCatalogPurchases  +    -0.90657315438752 * S_NumDealsPurchases
248382    +          +    -0.41332499072246 * S_NumStorePurchases
248383    +          +     0.76626053410817 * S_NumWebPurchases
248384    +          +     0.81795211037296 * S_NumWebVisitsMonth
248385    +          +    -0.50876365872417 * S_Recency  +     0.41668164622243 *
248386    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.59621293188677 * S_Income + -0.98204600423622 * S_Kidhome + 
0.82413780234399 * S_MntFishProducts + 0.39739163071946 * S_MntFruits + -0.49042553659196 * 
S_MntGoldProds + -4.39932579909415 * S_MntMeatProducts + -0.27795094909244 * 
S_MntSweetProducts + 0.24963500961568 * S_MntWines + -0.5239489331422 * S_NumCatalogPurchases 
+ -0.90657315438752 * S_NumDealsPurchases + -0.41332499072246 * S_NumStorePurchases + 
0.76626053410817 * S_NumWebPurchases + 0.81795211037296 * S_NumWebVisitsMonth + 
-0.50876365872417 * S_Recency + 0.41668164622243 * S_Teenhome ;
248387    +   H1x1_4  =     0.96283488963096 * S_Income  +    -0.87986849758504 *
248388    +        S_Kidhome  +     -0.1136919534185 * S_MntFishProducts
248389    +          +    -0.29232436238858 * S_MntFruits  +      0.1837511707412 *
248390    +        S_MntGoldProds  +     0.70727712145719 * S_MntMeatProducts
248391    +          +    -0.08285620819867 * S_MntSweetProducts
248392    +          +    -2.34391341405204 * S_MntWines  +     1.28790868462455 *
248393    +        S_NumCatalogPurchases  +    -0.66448120419076 * S_NumDealsPurchases
248394    +          +    -0.17691098721908 * S_NumStorePurchases
248395    +          +     0.46246892093576 * S_NumWebPurchases
248396    +          +     2.06272832836908 * S_NumWebVisitsMonth
248397    +          +    -2.20357897947054 * S_Recency  +    -0.21370157733704 *
248398    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.96283488963096 * S_Income + -0.87986849758504 * S_Kidhome + 
-0.1136919534185 * S_MntFishProducts + -0.29232436238858 * S_MntFruits + 0.1837511707412 * 
S_MntGoldProds + 0.70727712145719 * S_MntMeatProducts + -0.08285620819867 * S_MntSweetProducts 
+ -2.34391341405204 * S_MntWines + 1.28790868462455 * S_NumCatalogPurchases + 
-0.66448120419076 * S_NumDealsPurchases + -0.17691098721908 * S_NumStorePurchases + 
0.46246892093576 * S_NumWebPurchases + 2.06272832836908 * S_NumWebVisitsMonth + 
-2.20357897947054 * S_Recency + -0.21370157733704 * S_Teenhome ;
248399    +   H1x1_1  = H1x1_1  +    -1.11882466050741 * AcceptedCmp10
248400    +          +    -0.02672648348788 * AcceptedCmp20  +     -0.9935054015775 *
248401    +        AcceptedCmp30  +    -0.40619950578221 * AcceptedCmp40
248402    +          +     0.75861408836828 * AcceptedCmp50  +    -0.08119659353213 *
248403    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.11882466050741 * AcceptedCmp10 + -0.02672648348788 
* AcceptedCmp20 + -0.9935054015775 * AcceptedCmp30 + -0.40619950578221 * AcceptedCmp40 + 
0.75861408836828 * AcceptedCmp50 + -0.08119659353213 * Complain0 ;
248404    +   H1x1_2  = H1x1_2  +    -1.19874175712489 * AcceptedCmp10
248405    +          +    -1.39569753392124 * AcceptedCmp20  +    -1.40792768449965 *
248406    +        AcceptedCmp30  +    -1.33621370186337 * AcceptedCmp40
248407    +          +    -1.28850585600497 * AcceptedCmp50  +     1.54913459648682 *
248408    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.19874175712489 * AcceptedCmp10 + -1.39569753392124 
* AcceptedCmp20 + -1.40792768449965 * AcceptedCmp30 + -1.33621370186337 * AcceptedCmp40 + 
-1.28850585600497 * AcceptedCmp50 + 1.54913459648682 * Complain0 ;
248409    +   H1x1_3  = H1x1_3  +      0.8900995500275 * AcceptedCmp10
248410    +          +     0.63129973315749 * AcceptedCmp20  +    -0.31513199468014 *
248411    +        AcceptedCmp30  +     0.36000457467611 * AcceptedCmp40
248412    +          +     0.62901278737039 * AcceptedCmp50  +     0.13436691399472 *
248413    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.8900995500275 * AcceptedCmp10 + 0.63129973315749 * 
AcceptedCmp20 + -0.31513199468014 * AcceptedCmp30 + 0.36000457467611 * AcceptedCmp40 + 
0.62901278737039 * AcceptedCmp50 + 0.13436691399472 * Complain0 ;
248414    +   H1x1_4  = H1x1_4  +     -0.4761315940218 * AcceptedCmp10
248415    +          +     0.04116528443754 * AcceptedCmp20  +    -1.31248665137501 *
248416    +        AcceptedCmp30  +    -1.13922224536841 * AcceptedCmp40
248417    +          +    -1.71240975292363 * AcceptedCmp50  +     0.98794736218555 *
248418    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.4761315940218 * AcceptedCmp10 + 0.04116528443754 * 
AcceptedCmp20 + -1.31248665137501 * AcceptedCmp30 + -1.13922224536841 * AcceptedCmp40 + 
-1.71240975292363 * AcceptedCmp50 + 0.98794736218555 * Complain0 ;
248419    +   H1x1_1  = H1x1_1  +    -0.19427690904448 * Education2n_Cycle
248420    +          +    -0.78361431701943 * EducationBasic  +     0.70012279609726 *
248421    +        EducationGraduation  +    -0.51132563359945 * EducationMaster
248422    +          +     1.59526812226707 * Marital_StatusDivorced
248423    +          +    -0.74331656724296 * Marital_StatusMarried
248424    +          +     0.74316614019998 * Marital_StatusSingle
248425    +          +    -1.36761487171479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19427690904448 * Education2n_Cycle + 
-0.78361431701943 * EducationBasic + 0.70012279609726 * EducationGraduation + 
-0.51132563359945 * EducationMaster + 1.59526812226707 * Marital_StatusDivorced + 
-0.74331656724296 * Marital_StatusMarried + 0.74316614019998 * Marital_StatusSingle + 
-1.36761487171479 * Marital_StatusTogether ;
248426    +   H1x1_2  = H1x1_2  +    -0.76077191404637 * Education2n_Cycle
248427    +          +    -0.22680587409979 * EducationBasic  +     0.19812025591093 *
248428    +        EducationGraduation  +     0.07596142730184 * EducationMaster
248429    +          +     0.94291322065497 * Marital_StatusDivorced
248430    +          +    -1.64331597630127 * Marital_StatusMarried
248431    +          +     2.21526196736604 * Marital_StatusSingle
248432    +          +    -1.52687548646297 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.76077191404637 * Education2n_Cycle + 
-0.22680587409979 * EducationBasic + 0.19812025591093 * EducationGraduation + 0.07596142730184 
* EducationMaster + 0.94291322065497 * Marital_StatusDivorced + -1.64331597630127 * 
Marital_StatusMarried + 2.21526196736604 * Marital_StatusSingle + -1.52687548646297 * 
Marital_StatusTogether ;
248433    +   H1x1_3  = H1x1_3  +    -0.22328003539059 * Education2n_Cycle
248434    +          +    -0.56253476355283 * EducationBasic  +     0.43074608752346 *
248435    +        EducationGraduation  +    -0.59791003195469 * EducationMaster
248436    +          +     1.63906979191221 * Marital_StatusDivorced
248437    +          +    -1.00497354965718 * Marital_StatusMarried
248438    +          +     0.70485207953497 * Marital_StatusSingle
248439    +          +    -1.55917756143873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.22328003539059 * Education2n_Cycle + 
-0.56253476355283 * EducationBasic + 0.43074608752346 * EducationGraduation + 
-0.59791003195469 * EducationMaster + 1.63906979191221 * Marital_StatusDivorced + 
-1.00497354965718 * Marital_StatusMarried + 0.70485207953497 * Marital_StatusSingle + 
-1.55917756143873 * Marital_StatusTogether ;
248440    +   H1x1_4  = H1x1_4  +     0.85325476712793 * Education2n_Cycle
248441    +          +    -0.10167049440435 * EducationBasic  +     0.11808465181014 *
248442    +        EducationGraduation  +     -0.1847363034021 * EducationMaster
248443    +          +     0.75038128420756 * Marital_StatusDivorced
248444    +          +    -1.93055855198469 * Marital_StatusMarried
248445    +          +     0.73816798380254 * Marital_StatusSingle
248446    +          +    -1.77103687011169 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.85325476712793 * Education2n_Cycle + 
-0.10167049440435 * EducationBasic + 0.11808465181014 * EducationGraduation + -0.1847363034021 
* EducationMaster + 0.75038128420756 * Marital_StatusDivorced + -1.93055855198469 * 
Marital_StatusMarried + 0.73816798380254 * Marital_StatusSingle + -1.77103687011169 * 
Marital_StatusTogether ;
248447    +   H1x1_1  =    -0.97292943558748 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.97292943558748 + H1x1_1 ;
248448    +   H1x1_2  =      -0.767474595653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.767474595653 + H1x1_2 ;
248449    +   H1x1_3  =    -1.54289542125346 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.54289542125346 + H1x1_3 ;
248450    +   H1x1_4  =     0.11531219453063 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.11531219453063 + H1x1_4 ;
248451    +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
248452    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
248453    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
248454    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
248455    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
248456    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
248457    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
248458    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
248459    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
248460    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
248461    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
248462    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
248463    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
248464    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
248465    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
248466    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
248467    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
248468    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
248469    +END;
MPRINT(EM_DIAGRAM):   END;
248470    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
248471    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
248472    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
248473    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
248474    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
248475    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
248476    +END;
MPRINT(EM_DIAGRAM):   END;
248477    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248478    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
248479    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248480    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
248481    +   P_DepVar1  =     4.87259918787296 * H1x1_1  +     21.0865386977957 * H1x1_2
248482    +          +    -8.49666483029666 * H1x1_3  +     4.50140461489884 * H1x1_4
248483    +          +    -19.2888668755466 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.87259918787296 * H1x1_1 + 21.0865386977957 * H1x1_2 + 
-8.49666483029666 * H1x1_3 + 4.50140461489884 * H1x1_4 + -19.2888668755466 * H1x1_5 ;
248484    +   P_DepVar1  =     0.94995870883169 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94995870883169 + P_DepVar1 ;
248485    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
248486    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
248487    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
248488    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
248489    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
248490    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
248491    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
248492    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
248493    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
248494    +END;
MPRINT(EM_DIAGRAM):   END;
248495    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
248496    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
248497    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
248498    +END;
MPRINT(EM_DIAGRAM):   END;
248499    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
248500    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
248501    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
248502    +END;
MPRINT(EM_DIAGRAM):   END;
248503    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248504    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
248505    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
248506    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
248507    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
248508    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
248509    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
248510    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
248511    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
248512    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
248513    +END;
MPRINT(EM_DIAGRAM):   END;
248514    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
248515    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
248516    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
248517    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
248518     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
248519     quit;
248520     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
248521     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
248522     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
248523     retain ID 2 Node "AutoNeural41";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural41";
248524     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
248525     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2028 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2028 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248526     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
248527     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
248528     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2028 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2028 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248529     proc sort data=EMWS8.AutoNeural41_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural41_variableset out=_temp2(keep=NAME 
CREATOR);
248530     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
248531     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL41_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

248532     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
248533     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
248534     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
248535     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248536     proc contents data=EMWS8.AutoNeural41_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural41_train out=_meta(keep=NAME) noprint;
248537     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

248538     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
248539     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
248540     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248541     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
248542     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
248543     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
248544     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248545     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
248546     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
248546   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1044 rows and 5 columns.

248547     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

248548     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
248549     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1044 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1044 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248550     filename _pref
248550   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
248551     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
248552     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
248553    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
248554    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
248555    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
248556    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
248557    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
248558    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
248559     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
248560     quit;
248561     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
248562     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
248563     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
248564     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
248565     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
248566     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248567     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
248568     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
248569     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248570     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
248571     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
248572     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

248573     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
248574     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
248575     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
248576     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248577     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
248578     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

248579     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
248580     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
248581     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248582     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
248583     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
248584     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
248585     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248586     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
248587     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
248587   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

248588     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

248589     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
248590     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1048 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248591     filename _pref
248591   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
248592     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
248593     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
248594    +
248595    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
248596    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
248596   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
248597    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
248598    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
248599    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
248600    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
248601    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
248602     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
248603     quit;
248604     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
248605     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
248606     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
248607     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
248608     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
248609     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248610     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
248611     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
248612     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248613     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
248614     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
248615     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

248616     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
248617     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
248618     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
248619     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248620     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
248621     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248622     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
248623     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
248624     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

248625     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
248626     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
248627     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
248628     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248629     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
248630     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
248630   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

248631     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248632     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
248633     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1087 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248634     filename _pref
248634   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
248635     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
248636     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
248637    +
248638    +
248639    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
248640    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
248641    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
248642    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
248643    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
248644    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
248645    +
248646    +
248647    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
248648    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
248649    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
248650    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
248651    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
248652    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
248653    +
248654    +
248655    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
248656    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
248657    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
248658    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
248659    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
248660    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
248661    +
248662    +
248663    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
248664    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
248665    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
248666    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
248667    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
248668    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
248669    +
248670    +
248671    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
248672    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
248673    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
248674    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
248675    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
248676    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
248677    +
248678    +
248679    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
248680    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
248681    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
248682    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
248683    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
248684    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
248685    +
248686    +
248687    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
248688    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
248689    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
248690    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
248691    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
248692    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
248693    +
248694    +
248695    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
248696    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
248697    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
248698    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
248699    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
248700    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
248701    +if
248702    +_FILTERNORM1 not in ( '.')
248703    + and
248704    +_FILTERNORM2 not in ( '.')
248705    + and
248706    +_FILTERNORM3 not in ( '.')
248707    + and
248708    +_FILTERNORM4 not in ( '.')
248709    + and
248710    +_FILTERNORM5 not in ( '.')
248711    + and
248712    +_FILTERNORM6 not in ( '.')
248713    + and
248714    +_FILTERNORM7 not in ( ' ')
248715    + and
248716    +_FILTERNORM8 not in ( ' ')
248717    +and
248718    +( Dt_Customer ne .)
248719    +and ( Income ne . and (Income<=107000))
248720    +and ( Kidhome ne .)
248721    +and ( MntFishProducts ne .)
248722    +and ( MntFruits ne .)
248723    +and ( MntGoldProds ne .)
248724    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
248725    +and ( MntSweetProducts ne .)
248726    +and ( MntWines ne .)
248727    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
248728    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
248729    +and ( NumStorePurchases ne .)
248730    +and ( NumWebPurchases ne .)
248731    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
248732    +and ( Recency ne .)
248733    +and ( Teenhome ne .)
248734    +and ( Year_Birth ne .)
248735    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
248736    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
248737    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
248738    +end;
MPRINT(EM_DIAGRAM):   end;
248739    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
248740    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
248741     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
248742     quit;
248743     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
248744     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
248745     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
248746     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
248747     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
248748     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248749     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
248750     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
248751     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248752     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
248753     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
248754     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

248755     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
248756     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
248757     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
248758     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248759     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
248760     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

248761     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
248762     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
248763     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248764     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
248765     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
248766     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
248767     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248768     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
248769     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
248769   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

248770     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

248771     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
248772     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1153 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

248773     %macro varDept(fcmpdata=,id=);
248774     %global nobs&id scoreFlag&id;
248775     %let scoreFlag&id = 0;
248776     %if &id=1 or ^&fcmpStart %then %do;
248777     proc sort data=&fcmpdata out=_temp&id nodupkey;
248778     by NAME;
248779     where id=&id and LHS in( %let j=1;
248780     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
248781     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
248782     "&var" %let j = %eval(&j+1);
248783     %end;
248784     );
248785     run;
248786     %let dsid = %sysfunc(open(_temp&id));
248787     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
248788     %let dsid = %sysfunc(close(&dsid));
248789     %if &&nobs&id %then %do;
248790     %let scoreFlag&id = 1;
248791     %let fcmpStart = 1;
248792     %end;
248793     %else %let fcmpStart = 0;
248794     %end;
248795     %else %do;
248796     proc sort data=&fcmpdata out=_tempid;
248797     where id=&id;
248798     by LHS;
248799     run;
248800     %let dsid = %sysfunc(open(_tempid));
248801     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
248802     %let dsid = %sysfunc(close(&dsid));
248803     %if ^&&nobs&id %then %do;
248804     proc datasets lib=work nolist;
248805     delete _tempid;
248806     run;
248807     quit;
248808     %end;
248809     %else %do;
248810     data _tempAll;
248811     set %let j=%eval(&id-1);
248812     %do x=1 %to &j;
248813     %if &&nobs&x %then %do;
248814     _temp&x %end;
248815     %end;
248816     ;
248817     run;
248818     proc sql;
248819     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
248819   ! work._tempid p2 where p.name=p2.lhs;
248820     quit;
248821     data _temp&id;
248822     set _temp&id;
248823     where LHS ne '' and NAME ne '' and Node ne '';
248824     run;
248825     proc datasets lib=work nolist;
248826     delete _tempAll;
248827     run;
248828     %let dsid = %sysfunc(open(_temp&id));
248829     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
248830     %let dsid = %sysfunc(close(&dsid));
248831     %if ^&&nobs&id %then %do;
248832     proc datasets lib=work nolist;
248833     delete _temp&id;
248834     run;
248835     quit;
248836     %end;
248837     %else %do;
248838     %let scoreFlag&id = 1;
248839     data _temp&id;
248840     set _temp&id;
248841     where LHS ne NAME and node ne '';
248842     run;
248843     %let dsid = %sysfunc(open(_temp&id));
248844     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
248845     %let dsid = %sysfunc(close(&dsid));
248846     %if ^&&nobs&id %then %do;
248847     proc datasets lib=work nolist;
248848     delete _temp&id;
248849     run;
248850     quit;
248851     %end;
248852     %else %do;
248853     proc sort data=_temp&id nodupkey;
248854     by LHS NAME;
248855     run;
248856     %end;
248857     %end;
248858     %end;
248859     %end;
248860     %mend varDept;
248861     %macro optCode(outdata=fcmpdata);
248862     %global fcmpStart;
248863     %let fcmpStart = 0;
248864     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
248865     %let NumNodes=9;
248866     %do k=1 %to &NumNodes;
248867     %vardept(fcmpdata=&outdata, id=&k);
248868     %end;
248869     %mend optCode;
248870     %optcode(outData=EMWS8.Ensmbl57_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 113 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 83 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 30 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.21 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

248871     filename _pref
248871   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas";
248872     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
248873     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas.
248874    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
248875    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
248876    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
248877    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
248878    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
248879    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
248880    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
248881    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
248882    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
248883    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
248884    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
248885    +LENGTH _WARN_ $4
248886    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
248887    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
248888    +
248889    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
248890    +
248891    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
248892    +
248893    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
248894    +
248895    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
248896    +
248897    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
248898    +
248899    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
248900    +
248901    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
248902    +
248903    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
248904    +
248905    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
248906    +
248907    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
248908    +
248909    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
248910    +
248911    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
248912    +
248913    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
248914    +
248915    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
248916    +
248917    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
248918    +
248919    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
248920    +
248921    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
248922    +
248923    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
248924    +
248925    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
248926    +
248927    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
248928    +
248929    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
248930    +
248931    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
248932    +
248933    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
248934    +
248935    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
248936    +
248937    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
248938    +
248939    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
248940    +
248941    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
248942    +
248943    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
248944    +
248945    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
248946    +
248947    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
248948    +
248949    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
248950    +
248951    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
248952    +
248953    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
248954    +
248955    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
248956    +
248957    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
248958    +
248959    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
248960    +
248961    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
248962    +
248963    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
248964    +
248965    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
248966    +
248967    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
248968    +
248969    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
248970    +
248971    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
248972    +
248973    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
248974    +
248975    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
248976    +
248977    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
248978    +
248979    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
248980    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
248981    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
248982    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
248983    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
248984    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
248985    +end;
MPRINT(EM_DIAGRAM):   end;
248986    +else do;
MPRINT(EM_DIAGRAM):   else do;
248987    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
248988    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
248989    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
248990    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
248991    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
248992    +   end;
MPRINT(EM_DIAGRAM):   end;
248993    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
248994    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
248995    +   end;
MPRINT(EM_DIAGRAM):   end;
248996    +   else do;
MPRINT(EM_DIAGRAM):   else do;
248997    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
248998    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
248999    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249000    +   end;
MPRINT(EM_DIAGRAM):   end;
249001    +end;
MPRINT(EM_DIAGRAM):   end;
249002    +
249003    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
249004    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
249005    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
249006    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
249007    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
249008    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249009    +end;
MPRINT(EM_DIAGRAM):   end;
249010    +else do;
MPRINT(EM_DIAGRAM):   else do;
249011    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
249012    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
249013    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
249014    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
249015    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
249016    +   end;
MPRINT(EM_DIAGRAM):   end;
249017    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
249018    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
249019    +   end;
MPRINT(EM_DIAGRAM):   end;
249020    +   else do;
MPRINT(EM_DIAGRAM):   else do;
249021    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
249022    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
249023    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249024    +   end;
MPRINT(EM_DIAGRAM):   end;
249025    +end;
MPRINT(EM_DIAGRAM):   end;
249026    +
249027    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
249028    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
249029    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
249030    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
249031    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
249032    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249033    +end;
MPRINT(EM_DIAGRAM):   end;
249034    +else do;
MPRINT(EM_DIAGRAM):   else do;
249035    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
249036    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
249037    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
249038    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
249039    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
249040    +   end;
MPRINT(EM_DIAGRAM):   end;
249041    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
249042    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
249043    +   end;
MPRINT(EM_DIAGRAM):   end;
249044    +   else do;
MPRINT(EM_DIAGRAM):   else do;
249045    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
249046    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
249047    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249048    +   end;
MPRINT(EM_DIAGRAM):   end;
249049    +end;
MPRINT(EM_DIAGRAM):   end;
249050    +
249051    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
249052    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
249053    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
249054    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
249055    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
249056    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249057    +end;
MPRINT(EM_DIAGRAM):   end;
249058    +else do;
MPRINT(EM_DIAGRAM):   else do;
249059    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
249060    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
249061    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
249062    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
249063    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
249064    +   end;
MPRINT(EM_DIAGRAM):   end;
249065    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
249066    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
249067    +   end;
MPRINT(EM_DIAGRAM):   end;
249068    +   else do;
MPRINT(EM_DIAGRAM):   else do;
249069    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
249070    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
249071    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249072    +   end;
MPRINT(EM_DIAGRAM):   end;
249073    +end;
MPRINT(EM_DIAGRAM):   end;
249074    +
249075    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
249076    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
249077    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
249078    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
249079    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
249080    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249081    +end;
MPRINT(EM_DIAGRAM):   end;
249082    +else do;
MPRINT(EM_DIAGRAM):   else do;
249083    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
249084    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
249085    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
249086    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
249087    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
249088    +   end;
MPRINT(EM_DIAGRAM):   end;
249089    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
249090    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
249091    +   end;
MPRINT(EM_DIAGRAM):   end;
249092    +   else do;
MPRINT(EM_DIAGRAM):   else do;
249093    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
249094    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
249095    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249096    +   end;
MPRINT(EM_DIAGRAM):   end;
249097    +end;
MPRINT(EM_DIAGRAM):   end;
249098    +
249099    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
249100    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
249101    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
249102    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
249103    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
249104    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249105    +end;
MPRINT(EM_DIAGRAM):   end;
249106    +else do;
MPRINT(EM_DIAGRAM):   else do;
249107    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
249108    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
249109    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
249110    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
249111    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
249112    +   end;
MPRINT(EM_DIAGRAM):   end;
249113    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
249114    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
249115    +   end;
MPRINT(EM_DIAGRAM):   end;
249116    +   else do;
MPRINT(EM_DIAGRAM):   else do;
249117    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
249118    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
249119    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249120    +   end;
MPRINT(EM_DIAGRAM):   end;
249121    +end;
MPRINT(EM_DIAGRAM):   end;
249122    +
249123    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
249124    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
249125    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
249126    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
249127    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
249128    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
249129    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
249130    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
249131    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
249132    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
249133    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
249134    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
249135    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
249136    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249137    +end;
MPRINT(EM_DIAGRAM):   end;
249138    +else do;
MPRINT(EM_DIAGRAM):   else do;
249139    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
249140    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
249141    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
249142    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
249143    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
249144    +   end;
MPRINT(EM_DIAGRAM):   end;
249145    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
249146    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
249147    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
249148    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
249149    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
249150    +   end;
MPRINT(EM_DIAGRAM):   end;
249151    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
249152    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
249153    +   end;
MPRINT(EM_DIAGRAM):   end;
249154    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
249155    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
249156    +   end;
MPRINT(EM_DIAGRAM):   end;
249157    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
249158    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
249159    +   end;
MPRINT(EM_DIAGRAM):   end;
249160    +   else do;
MPRINT(EM_DIAGRAM):   else do;
249161    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
249162    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
249163    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
249164    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
249165    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
249166    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249167    +   end;
MPRINT(EM_DIAGRAM):   end;
249168    +end;
MPRINT(EM_DIAGRAM):   end;
249169    +
249170    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
249171    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
249172    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
249173    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
249174    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
249175    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
249176    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
249177    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
249178    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
249179    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
249180    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
249181    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
249182    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
249183    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
249184    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249185    +end;
MPRINT(EM_DIAGRAM):   end;
249186    +else do;
MPRINT(EM_DIAGRAM):   else do;
249187    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
249188    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
249189    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
249190    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
249191    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
249192    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
249193    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
249194    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
249195    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
249196    +         end;
MPRINT(EM_DIAGRAM):   end;
249197    +         else do;
MPRINT(EM_DIAGRAM):   else do;
249198    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
249199    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
249200    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
249201    +            end;
MPRINT(EM_DIAGRAM):   end;
249202    +         end;
MPRINT(EM_DIAGRAM):   end;
249203    +      end;
MPRINT(EM_DIAGRAM):   end;
249204    +      else do;
MPRINT(EM_DIAGRAM):   else do;
249205    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
249206    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
249207    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
249208    +         end;
MPRINT(EM_DIAGRAM):   end;
249209    +      end;
MPRINT(EM_DIAGRAM):   end;
249210    +   end;
MPRINT(EM_DIAGRAM):   end;
249211    +   else do;
MPRINT(EM_DIAGRAM):   else do;
249212    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
249213    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
249214    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
249215    +      end;
MPRINT(EM_DIAGRAM):   end;
249216    +      else do;
MPRINT(EM_DIAGRAM):   else do;
249217    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
249218    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
249219    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
249220    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
249221    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
249222    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
249223    +         end;
MPRINT(EM_DIAGRAM):   end;
249224    +      end;
MPRINT(EM_DIAGRAM):   end;
249225    +   end;
MPRINT(EM_DIAGRAM):   end;
249226    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
249227    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
249228    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
249229    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
249230    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
249231    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
249232    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249233    +   end;
MPRINT(EM_DIAGRAM):   end;
249234    +end;
MPRINT(EM_DIAGRAM):   end;
249235    +
249236    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249237    +*** Checking missing input Interval
249238    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
249239    +
249240    +IF NMISS(
249241    +   Income ,
249242    +   Kidhome ,
249243    +   MntFishProducts ,
249244    +   MntFruits ,
249245    +   MntGoldProds ,
249246    +   MntMeatProducts ,
249247    +   MntSweetProducts ,
249248    +   MntWines ,
249249    +   NumCatalogPurchases ,
249250    +   NumDealsPurchases ,
249251    +   NumStorePurchases ,
249252    +   NumWebPurchases ,
249253    +   NumWebVisitsMonth ,
249254    +   Recency ,
249255    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
249256    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
249257    +
249258    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
249259    +END;
MPRINT(EM_DIAGRAM):   END;
249260    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249261    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
249262    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249263    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
249264    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
249265    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
249266    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
249267    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
249268    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
249269    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
249270    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
249271    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
249272    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
249273    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
249274    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
249275    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
249276    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
249277    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
249278    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
249279    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
249280    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
249281    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
249282    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
249283    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
249284    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
249285    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
249286    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
249287    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
249288    +END;
MPRINT(EM_DIAGRAM):   END;
249289    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
249290    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
249291    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
249292    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
249293    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
249294    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
249295    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
249296    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
249297    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
249298    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
249299    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
249300    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
249301    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
249302    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
249303    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
249304    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
249305    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
249306    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
249307    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
249308    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
249309    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
249310    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
249311    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
249312    +   ELSE S_NumCatalogPurchases
249313    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
249314    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
249315    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
249316    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
249317    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
249318    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
249319    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
249320    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
249321    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
249322    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
249323    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
249324    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
249325    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
249326    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
249327    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
249328    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
249329    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
249330    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
249331    +END;
MPRINT(EM_DIAGRAM):   END;
249332    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249333    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
249334    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249335    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249336    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
249337    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249338    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249339    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
249340    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249341    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
249342    +   H1x1_1  =     -0.6712927499227 * S_Income  +     0.52481056075303 *
249343    +        S_Kidhome  +     -2.3662268017216 * S_MntFishProducts
249344    +          +    -1.70194161526543 * S_MntFruits  +    -0.12195276696714 *
249345    +        S_MntGoldProds  +     5.02051235731232 * S_MntMeatProducts
249346    +          +    -2.37073629008864 * S_MntSweetProducts
249347    +          +    -7.49792253647533 * S_MntWines  +     1.93063890722455 *
249348    +        S_NumCatalogPurchases  +     1.44821336448113 * S_NumDealsPurchases
249349    +          +    -1.29021742502316 * S_NumStorePurchases
249350    +          +    -0.00949168969466 * S_NumWebPurchases
249351    +          +    -0.32248137192321 * S_NumWebVisitsMonth
249352    +          +    -0.55879173873733 * S_Recency  +    -0.22439654268554 *
249353    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.6712927499227 * S_Income + 0.52481056075303 * S_Kidhome + 
-2.3662268017216 * S_MntFishProducts + -1.70194161526543 * S_MntFruits + -0.12195276696714 * 
S_MntGoldProds + 5.02051235731232 * S_MntMeatProducts + -2.37073629008864 * S_MntSweetProducts 
+ -7.49792253647533 * S_MntWines + 1.93063890722455 * S_NumCatalogPurchases + 1.44821336448113 
* S_NumDealsPurchases + -1.29021742502316 * S_NumStorePurchases + -0.00949168969466 * 
S_NumWebPurchases + -0.32248137192321 * S_NumWebVisitsMonth + -0.55879173873733 * S_Recency + 
-0.22439654268554 * S_Teenhome ;
249354    +   H1x1_2  =    -1.63837717417638 * S_Income  +     1.01712005677207 *
249355    +        S_Kidhome  +    -0.11452425716086 * S_MntFishProducts
249356    +          +    -0.08273769039219 * S_MntFruits  +    -0.47045422182093 *
249357    +        S_MntGoldProds  +    -0.64593629987888 * S_MntMeatProducts
249358    +          +     0.41126087093412 * S_MntSweetProducts
249359    +          +    -0.00653581981542 * S_MntWines  +    -1.62534004647483 *
249360    +        S_NumCatalogPurchases  +    -0.74740978232431 * S_NumDealsPurchases
249361    +          +      0.2319226227964 * S_NumStorePurchases
249362    +          +     0.31190969795517 * S_NumWebPurchases
249363    +          +      -1.987305550542 * S_NumWebVisitsMonth
249364    +          +     2.46312593342153 * S_Recency  +     1.89469486725188 *
249365    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.63837717417638 * S_Income + 1.01712005677207 * S_Kidhome + 
-0.11452425716086 * S_MntFishProducts + -0.08273769039219 * S_MntFruits + -0.47045422182093 * 
S_MntGoldProds + -0.64593629987888 * S_MntMeatProducts + 0.41126087093412 * S_MntSweetProducts 
+ -0.00653581981542 * S_MntWines + -1.62534004647483 * S_NumCatalogPurchases + 
-0.74740978232431 * S_NumDealsPurchases + 0.2319226227964 * S_NumStorePurchases + 
0.31190969795517 * S_NumWebPurchases + -1.987305550542 * S_NumWebVisitsMonth + 
2.46312593342153 * S_Recency + 1.89469486725188 * S_Teenhome ;
249366    +   H1x1_3  =    -0.78523773312865 * S_Income  +    -1.40266608040579 *
249367    +        S_Kidhome  +     0.01206304735425 * S_MntFishProducts
249368    +          +    -0.50371384095637 * S_MntFruits  +    -0.93176870066879 *
249369    +        S_MntGoldProds  +    -0.53990224542491 * S_MntMeatProducts
249370    +          +    -0.73991431726966 * S_MntSweetProducts
249371    +          +    -0.21227505043037 * S_MntWines  +     0.42667885020643 *
249372    +        S_NumCatalogPurchases  +    -0.34821401096287 * S_NumDealsPurchases
249373    +          +    -2.50826402419251 * S_NumStorePurchases
249374    +          +    -0.30764477738015 * S_NumWebPurchases
249375    +          +     1.21240794582671 * S_NumWebVisitsMonth
249376    +          +    -2.22374004865256 * S_Recency  +    -0.07389156638234 *
249377    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.78523773312865 * S_Income + -1.40266608040579 * S_Kidhome + 
0.01206304735425 * S_MntFishProducts + -0.50371384095637 * S_MntFruits + -0.93176870066879 * 
S_MntGoldProds + -0.53990224542491 * S_MntMeatProducts + -0.73991431726966 * 
S_MntSweetProducts + -0.21227505043037 * S_MntWines + 0.42667885020643 * S_NumCatalogPurchases 
+ -0.34821401096287 * S_NumDealsPurchases + -2.50826402419251 * S_NumStorePurchases + 
-0.30764477738015 * S_NumWebPurchases + 1.21240794582671 * S_NumWebVisitsMonth + 
-2.22374004865256 * S_Recency + -0.07389156638234 * S_Teenhome ;
249378    +   H1x1_4  =     1.52339017953874 * S_Income  +     -0.0800472387091 *
249379    +        S_Kidhome  +    -0.81466158613596 * S_MntFishProducts
249380    +          +    -1.56740792821078 * S_MntFruits  +    -0.44251282056636 *
249381    +        S_MntGoldProds  +     4.21345569180051 * S_MntMeatProducts
249382    +          +     1.07674028011002 * S_MntSweetProducts
249383    +          +    -4.16668334099034 * S_MntWines  +     2.33183855256347 *
249384    +        S_NumCatalogPurchases  +     1.55678471765653 * S_NumDealsPurchases
249385    +          +    -0.47776935727231 * S_NumStorePurchases
249386    +          +     -0.5890810666834 * S_NumWebPurchases
249387    +          +      1.3845716796855 * S_NumWebVisitsMonth
249388    +          +    -0.37826249433224 * S_Recency  +    -0.32813220931783 *
249389    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.52339017953874 * S_Income + -0.0800472387091 * S_Kidhome + 
-0.81466158613596 * S_MntFishProducts + -1.56740792821078 * S_MntFruits + -0.44251282056636 * 
S_MntGoldProds + 4.21345569180051 * S_MntMeatProducts + 1.07674028011002 * S_MntSweetProducts 
+ -4.16668334099034 * S_MntWines + 2.33183855256347 * S_NumCatalogPurchases + 1.55678471765653 
* S_NumDealsPurchases + -0.47776935727231 * S_NumStorePurchases + -0.5890810666834 * 
S_NumWebPurchases + 1.3845716796855 * S_NumWebVisitsMonth + -0.37826249433224 * S_Recency + 
-0.32813220931783 * S_Teenhome ;
249390    +   H1x1_1  = H1x1_1  +     -1.8652801761626 * AcceptedCmp10
249391    +          +    -2.15838385124109 * AcceptedCmp20  +    -0.32281263106473 *
249392    +        AcceptedCmp30  +    -0.52751972284584 * AcceptedCmp40
249393    +          +    -0.16576520159698 * AcceptedCmp50  +      0.0798586391257 *
249394    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.8652801761626 * AcceptedCmp10 + -2.15838385124109 * 
AcceptedCmp20 + -0.32281263106473 * AcceptedCmp30 + -0.52751972284584 * AcceptedCmp40 + 
-0.16576520159698 * AcceptedCmp50 + 0.0798586391257 * Complain0 ;
249395    +   H1x1_2  = H1x1_2  +     1.18847829749899 * AcceptedCmp10
249396    +          +     2.28872916962314 * AcceptedCmp20  +      0.7666362501062 *
249397    +        AcceptedCmp30  +     0.63272382969915 * AcceptedCmp40
249398    +          +     1.03410667663543 * AcceptedCmp50  +    -0.44709535985633 *
249399    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.18847829749899 * AcceptedCmp10 + 2.28872916962314 * 
AcceptedCmp20 + 0.7666362501062 * AcceptedCmp30 + 0.63272382969915 * AcceptedCmp40 + 
1.03410667663543 * AcceptedCmp50 + -0.44709535985633 * Complain0 ;
249400    +   H1x1_3  = H1x1_3  +    -0.30260316693677 * AcceptedCmp10
249401    +          +     1.37858034146365 * AcceptedCmp20  +    -1.95638038137808 *
249402    +        AcceptedCmp30  +     -2.1581101738114 * AcceptedCmp40
249403    +          +    -1.72040670376675 * AcceptedCmp50  +     2.82913230380101 *
249404    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.30260316693677 * AcceptedCmp10 + 1.37858034146365 * 
AcceptedCmp20 + -1.95638038137808 * AcceptedCmp30 + -2.1581101738114 * AcceptedCmp40 + 
-1.72040670376675 * AcceptedCmp50 + 2.82913230380101 * Complain0 ;
249405    +   H1x1_4  = H1x1_4  +     0.37463576870294 * AcceptedCmp10
249406    +          +     -1.1935629973001 * AcceptedCmp20  +     -0.0357513820165 *
249407    +        AcceptedCmp30  +    -0.34228453024248 * AcceptedCmp40
249408    +          +     0.08692364147086 * AcceptedCmp50  +     0.01804293030366 *
249409    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.37463576870294 * AcceptedCmp10 + -1.1935629973001 * 
AcceptedCmp20 + -0.0357513820165 * AcceptedCmp30 + -0.34228453024248 * AcceptedCmp40 + 
0.08692364147086 * AcceptedCmp50 + 0.01804293030366 * Complain0 ;
249410    +   H1x1_1  = H1x1_1  +     0.10559298643668 * Education2n_Cycle
249411    +          +     -0.5051689695544 * EducationBasic  +     0.07434632730326 *
249412    +        EducationGraduation  +     0.68592368666749 * EducationMaster
249413    +          +     0.38999748028122 * Marital_StatusDivorced
249414    +          +     0.44180844463279 * Marital_StatusMarried
249415    +          +     0.63824884669155 * Marital_StatusSingle
249416    +          +    -0.26198648898013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.10559298643668 * Education2n_Cycle + 
-0.5051689695544 * EducationBasic + 0.07434632730326 * EducationGraduation + 0.68592368666749 
* EducationMaster + 0.38999748028122 * Marital_StatusDivorced + 0.44180844463279 * 
Marital_StatusMarried + 0.63824884669155 * Marital_StatusSingle + -0.26198648898013 * 
Marital_StatusTogether ;
249417    +   H1x1_2  = H1x1_2  +     0.38077564253123 * Education2n_Cycle
249418    +          +    -1.71516234680597 * EducationBasic  +      0.9305914926408 *
249419    +        EducationGraduation  +    -0.48500520310542 * EducationMaster
249420    +          +    -0.95537871859519 * Marital_StatusDivorced
249421    +          +     2.55061153921286 * Marital_StatusMarried
249422    +          +    -1.78007154396711 * Marital_StatusSingle
249423    +          +     1.47779717106964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38077564253123 * Education2n_Cycle + 
-1.71516234680597 * EducationBasic + 0.9305914926408 * EducationGraduation + -0.48500520310542 
* EducationMaster + -0.95537871859519 * Marital_StatusDivorced + 2.55061153921286 * 
Marital_StatusMarried + -1.78007154396711 * Marital_StatusSingle + 1.47779717106964 * 
Marital_StatusTogether ;
249424    +   H1x1_3  = H1x1_3  +    -0.26877104077313 * Education2n_Cycle
249425    +          +    -1.51047207681049 * EducationBasic  +     1.00818590807055 *
249426    +        EducationGraduation  +    -2.08836171183474 * EducationMaster
249427    +          +     1.29930912124343 * Marital_StatusDivorced
249428    +          +    -1.63037830924789 * Marital_StatusMarried
249429    +          +     0.19040732776086 * Marital_StatusSingle
249430    +          +     -3.9038060950259 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.26877104077313 * Education2n_Cycle + 
-1.51047207681049 * EducationBasic + 1.00818590807055 * EducationGraduation + 
-2.08836171183474 * EducationMaster + 1.29930912124343 * Marital_StatusDivorced + 
-1.63037830924789 * Marital_StatusMarried + 0.19040732776086 * Marital_StatusSingle + 
-3.9038060950259 * Marital_StatusTogether ;
249431    +   H1x1_4  = H1x1_4  +     0.59574708300703 * Education2n_Cycle
249432    +          +    -0.19936070861543 * EducationBasic  +     0.82683145042233 *
249433    +        EducationGraduation  +    -0.24015931152788 * EducationMaster
249434    +          +     -0.3129003025095 * Marital_StatusDivorced
249435    +          +     0.00843550425239 * Marital_StatusMarried
249436    +          +    -0.20416436114776 * Marital_StatusSingle
249437    +          +     1.08624823622502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.59574708300703 * Education2n_Cycle + 
-0.19936070861543 * EducationBasic + 0.82683145042233 * EducationGraduation + 
-0.24015931152788 * EducationMaster + -0.3129003025095 * Marital_StatusDivorced + 
0.00843550425239 * Marital_StatusMarried + -0.20416436114776 * Marital_StatusSingle + 
1.08624823622502 * Marital_StatusTogether ;
249438    +   H1x1_1  =    -2.66745806568988 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.66745806568988 + H1x1_1 ;
249439    +   H1x1_2  =     1.39870734752375 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.39870734752375 + H1x1_2 ;
249440    +   H1x1_3  =     3.90802178606462 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 3.90802178606462 + H1x1_3 ;
249441    +   H1x1_4  =    -1.61490323089776 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.61490323089776 + H1x1_4 ;
249442    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
249443    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
249444    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
249445    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
249446    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
249447    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
249448    +END;
MPRINT(EM_DIAGRAM):   END;
249449    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
249450    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
249451    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
249452    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
249453    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
249454    +END;
MPRINT(EM_DIAGRAM):   END;
249455    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249456    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
249457    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249458    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
249459    +   H1x2_1  =     0.40035517192793 * S_Income  +     1.50961149935512 *
249460    +        S_Kidhome  +    -0.71749794576247 * S_MntFishProducts
249461    +          +    -0.80539813415293 * S_MntFruits  +    -0.11190500470397 *
249462    +        S_MntGoldProds  +    -1.00287277559415 * S_MntMeatProducts
249463    +          +    -0.90866858123806 * S_MntSweetProducts
249464    +          +     0.48761861591898 * S_MntWines  +    -0.00278053699018 *
249465    +        S_NumCatalogPurchases  +     1.76527380505645 * S_NumDealsPurchases
249466    +          +     1.45805686107789 * S_NumStorePurchases
249467    +          +     1.48794767642409 * S_NumWebPurchases
249468    +          +    -1.24357395997191 * S_NumWebVisitsMonth
249469    +          +     2.73747730751211 * S_Recency  +    -0.74105180435611 *
249470    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.40035517192793 * S_Income + 1.50961149935512 * S_Kidhome + 
-0.71749794576247 * S_MntFishProducts + -0.80539813415293 * S_MntFruits + -0.11190500470397 * 
S_MntGoldProds + -1.00287277559415 * S_MntMeatProducts + -0.90866858123806 * 
S_MntSweetProducts + 0.48761861591898 * S_MntWines + -0.00278053699018 * S_NumCatalogPurchases 
+ 1.76527380505645 * S_NumDealsPurchases + 1.45805686107789 * S_NumStorePurchases + 
1.48794767642409 * S_NumWebPurchases + -1.24357395997191 * S_NumWebVisitsMonth + 
2.73747730751211 * S_Recency + -0.74105180435611 * S_Teenhome ;
249471    +   H1x2_2  =    -2.30368761501045 * S_Income  +     0.82837234680306 *
249472    +        S_Kidhome  +    -0.57801225504203 * S_MntFishProducts
249473    +          +    -0.53882153761332 * S_MntFruits  +    -0.06305202172404 *
249474    +        S_MntGoldProds  +    -0.83741138145577 * S_MntMeatProducts
249475    +          +     1.05010358762976 * S_MntSweetProducts
249476    +          +     -0.8308916879344 * S_MntWines  +     0.00135039846616 *
249477    +        S_NumCatalogPurchases  +     -0.1426130520252 * S_NumDealsPurchases
249478    +          +    -2.04318529474165 * S_NumStorePurchases
249479    +          +     1.64478964728594 * S_NumWebPurchases
249480    +          +    -0.74790322980646 * S_NumWebVisitsMonth
249481    +          +     0.44846346006135 * S_Recency  +    -1.17558204887145 *
249482    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.30368761501045 * S_Income + 0.82837234680306 * S_Kidhome + 
-0.57801225504203 * S_MntFishProducts + -0.53882153761332 * S_MntFruits + -0.06305202172404 * 
S_MntGoldProds + -0.83741138145577 * S_MntMeatProducts + 1.05010358762976 * S_MntSweetProducts 
+ -0.8308916879344 * S_MntWines + 0.00135039846616 * S_NumCatalogPurchases + -0.1426130520252 
* S_NumDealsPurchases + -2.04318529474165 * S_NumStorePurchases + 1.64478964728594 * 
S_NumWebPurchases + -0.74790322980646 * S_NumWebVisitsMonth + 0.44846346006135 * S_Recency + 
-1.17558204887145 * S_Teenhome ;
249483    +   H1x2_3  =     1.07803134847301 * S_Income  +     1.10001550023539 *
249484    +        S_Kidhome  +      2.1312863754193 * S_MntFishProducts
249485    +          +    -0.41841353908141 * S_MntFruits  +    -0.28009599678539 *
249486    +        S_MntGoldProds  +    -0.57516542648625 * S_MntMeatProducts
249487    +          +     0.39974532423377 * S_MntSweetProducts
249488    +          +    -1.03786923973351 * S_MntWines  +    -0.21873654141419 *
249489    +        S_NumCatalogPurchases  +    -0.12545360575656 * S_NumDealsPurchases
249490    +          +     0.70805557348415 * S_NumStorePurchases
249491    +          +     2.40362900277228 * S_NumWebPurchases
249492    +          +    -0.84521247676043 * S_NumWebVisitsMonth
249493    +          +     4.38953216910793 * S_Recency  +     1.39159599477449 *
249494    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.07803134847301 * S_Income + 1.10001550023539 * S_Kidhome + 
2.1312863754193 * S_MntFishProducts + -0.41841353908141 * S_MntFruits + -0.28009599678539 * 
S_MntGoldProds + -0.57516542648625 * S_MntMeatProducts + 0.39974532423377 * S_MntSweetProducts 
+ -1.03786923973351 * S_MntWines + -0.21873654141419 * S_NumCatalogPurchases + 
-0.12545360575656 * S_NumDealsPurchases + 0.70805557348415 * S_NumStorePurchases + 
2.40362900277228 * S_NumWebPurchases + -0.84521247676043 * S_NumWebVisitsMonth + 
4.38953216910793 * S_Recency + 1.39159599477449 * S_Teenhome ;
249495    +   H1x2_4  =      1.5904518722284 * S_Income  +     0.14957259343911 *
249496    +        S_Kidhome  +     1.71856101884761 * S_MntFishProducts
249497    +          +     0.97544338421034 * S_MntFruits  +     1.16387775609385 *
249498    +        S_MntGoldProds  +    -0.43463910907731 * S_MntMeatProducts
249499    +          +     1.67907268159197 * S_MntSweetProducts
249500    +          +    -0.67372438764914 * S_MntWines  +     0.34705529867224 *
249501    +        S_NumCatalogPurchases  +     1.55570260456887 * S_NumDealsPurchases
249502    +          +      0.0818178054474 * S_NumStorePurchases
249503    +          +     0.21533198164279 * S_NumWebPurchases
249504    +          +     2.13590425604302 * S_NumWebVisitsMonth
249505    +          +    -2.07481510631659 * S_Recency  +    -0.82288425478762 *
249506    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.5904518722284 * S_Income + 0.14957259343911 * S_Kidhome + 
1.71856101884761 * S_MntFishProducts + 0.97544338421034 * S_MntFruits + 1.16387775609385 * 
S_MntGoldProds + -0.43463910907731 * S_MntMeatProducts + 1.67907268159197 * S_MntSweetProducts 
+ -0.67372438764914 * S_MntWines + 0.34705529867224 * S_NumCatalogPurchases + 1.55570260456887 
* S_NumDealsPurchases + 0.0818178054474 * S_NumStorePurchases + 0.21533198164279 * 
S_NumWebPurchases + 2.13590425604302 * S_NumWebVisitsMonth + -2.07481510631659 * S_Recency + 
-0.82288425478762 * S_Teenhome ;
249507    +   H1x2_1  = H1x2_1  +    -1.62231361085618 * AcceptedCmp10
249508    +          +     0.93841494775887 * AcceptedCmp20  +      0.1734706863831 *
249509    +        AcceptedCmp30  +     0.16475784850175 * AcceptedCmp40
249510    +          +     0.65486951368163 * AcceptedCmp50  +      1.6226382489877 *
249511    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.62231361085618 * AcceptedCmp10 + 0.93841494775887 * 
AcceptedCmp20 + 0.1734706863831 * AcceptedCmp30 + 0.16475784850175 * AcceptedCmp40 + 
0.65486951368163 * AcceptedCmp50 + 1.6226382489877 * Complain0 ;
249512    +   H1x2_2  = H1x2_2  +     0.93875540013493 * AcceptedCmp10
249513    +          +     2.69754413059384 * AcceptedCmp20  +    -0.30913025234768 *
249514    +        AcceptedCmp30  +    -0.00924007964301 * AcceptedCmp40
249515    +          +     -0.7359545134435 * AcceptedCmp50  +    -0.44748157506074 *
249516    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.93875540013493 * AcceptedCmp10 + 2.69754413059384 * 
AcceptedCmp20 + -0.30913025234768 * AcceptedCmp30 + -0.00924007964301 * AcceptedCmp40 + 
-0.7359545134435 * AcceptedCmp50 + -0.44748157506074 * Complain0 ;
249517    +   H1x2_3  = H1x2_3  +      0.4023712256607 * AcceptedCmp10
249518    +          +    -0.46100225887196 * AcceptedCmp20  +    -0.11545325868036 *
249519    +        AcceptedCmp30  +     1.81326302523772 * AcceptedCmp40
249520    +          +     1.57642234573579 * AcceptedCmp50  +    -0.52645724664984 *
249521    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.4023712256607 * AcceptedCmp10 + -0.46100225887196 * 
AcceptedCmp20 + -0.11545325868036 * AcceptedCmp30 + 1.81326302523772 * AcceptedCmp40 + 
1.57642234573579 * AcceptedCmp50 + -0.52645724664984 * Complain0 ;
249522    +   H1x2_4  = H1x2_4  +    -1.08307715440234 * AcceptedCmp10
249523    +          +     0.10309372709877 * AcceptedCmp20  +    -1.18814330876811 *
249524    +        AcceptedCmp30  +    -1.69102202926075 * AcceptedCmp40
249525    +          +     0.10465943889984 * AcceptedCmp50  +    -0.96523771648083 *
249526    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.08307715440234 * AcceptedCmp10 + 0.10309372709877 * 
AcceptedCmp20 + -1.18814330876811 * AcceptedCmp30 + -1.69102202926075 * AcceptedCmp40 + 
0.10465943889984 * AcceptedCmp50 + -0.96523771648083 * Complain0 ;
249527    +   H1x2_1  = H1x2_1  +     0.57966380694999 * Education2n_Cycle
249528    +          +     1.09807543038463 * EducationBasic  +     0.56896005764417 *
249529    +        EducationGraduation  +     0.78238700450794 * EducationMaster
249530    +          +     0.09735596304222 * Marital_StatusDivorced
249531    +          +    -0.41892050812825 * Marital_StatusMarried
249532    +          +    -1.42753782654911 * Marital_StatusSingle
249533    +          +     2.12640980869845 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.57966380694999 * Education2n_Cycle + 
1.09807543038463 * EducationBasic + 0.56896005764417 * EducationGraduation + 0.78238700450794 
* EducationMaster + 0.09735596304222 * Marital_StatusDivorced + -0.41892050812825 * 
Marital_StatusMarried + -1.42753782654911 * Marital_StatusSingle + 2.12640980869845 * 
Marital_StatusTogether ;
249534    +   H1x2_2  = H1x2_2  +     1.23142964464278 * Education2n_Cycle
249535    +          +    -0.57685007681361 * EducationBasic  +     0.95565027871272 *
249536    +        EducationGraduation  +     1.03407121736627 * EducationMaster
249537    +          +    -0.32415267410507 * Marital_StatusDivorced
249538    +          +     0.49045578856782 * Marital_StatusMarried
249539    +          +    -1.95612005933176 * Marital_StatusSingle
249540    +          +    -0.09380239900044 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.23142964464278 * Education2n_Cycle + 
-0.57685007681361 * EducationBasic + 0.95565027871272 * EducationGraduation + 1.03407121736627 
* EducationMaster + -0.32415267410507 * Marital_StatusDivorced + 0.49045578856782 * 
Marital_StatusMarried + -1.95612005933176 * Marital_StatusSingle + -0.09380239900044 * 
Marital_StatusTogether ;
249541    +   H1x2_3  = H1x2_3  +    -0.59991828858437 * Education2n_Cycle
249542    +          +     0.16738017494874 * EducationBasic  +     1.11954020630495 *
249543    +        EducationGraduation  +    -1.26111004544108 * EducationMaster
249544    +          +    -1.25715350788627 * Marital_StatusDivorced
249545    +          +     0.74269511935299 * Marital_StatusMarried
249546    +          +    -0.27394822792771 * Marital_StatusSingle
249547    +          +     0.32120400150108 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.59991828858437 * Education2n_Cycle + 
0.16738017494874 * EducationBasic + 1.11954020630495 * EducationGraduation + -1.26111004544108 
* EducationMaster + -1.25715350788627 * Marital_StatusDivorced + 0.74269511935299 * 
Marital_StatusMarried + -0.27394822792771 * Marital_StatusSingle + 0.32120400150108 * 
Marital_StatusTogether ;
249548    +   H1x2_4  = H1x2_4  +     0.73858886461182 * Education2n_Cycle
249549    +          +     1.18482398810163 * EducationBasic  +     0.31912715416105 *
249550    +        EducationGraduation  +     -0.7403940659871 * EducationMaster
249551    +          +    -1.42754006114782 * Marital_StatusDivorced
249552    +          +    -0.13979120103654 * Marital_StatusMarried
249553    +          +    -1.66244370644258 * Marital_StatusSingle
249554    +          +     1.29295770867497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.73858886461182 * Education2n_Cycle + 
1.18482398810163 * EducationBasic + 0.31912715416105 * EducationGraduation + -0.7403940659871 
* EducationMaster + -1.42754006114782 * Marital_StatusDivorced + -0.13979120103654 * 
Marital_StatusMarried + -1.66244370644258 * Marital_StatusSingle + 1.29295770867497 * 
Marital_StatusTogether ;
249555    +   H1x2_1  =     0.02486753071365 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02486753071365 + H1x2_1 ;
249556    +   H1x2_2  =     1.30157602008517 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.30157602008517 + H1x2_2 ;
249557    +   H1x2_3  =    -0.71765289173772 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.71765289173772 + H1x2_3 ;
249558    +   H1x2_4  =    -0.28206267191961 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.28206267191961 + H1x2_4 ;
249559    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
249560    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
249561    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
249562    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
249563    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
249564    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
249565    +END;
MPRINT(EM_DIAGRAM):   END;
249566    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
249567    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
249568    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
249569    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
249570    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
249571    +END;
MPRINT(EM_DIAGRAM):   END;
249572    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249573    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
249574    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249575    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
249576    +   H2x1_1  =    -1.34021567967914 * H1x1_1  +    -0.82210150819056 * H1x1_2
249577    +          +      0.2051584088577 * H1x1_3  +    -0.14877251454609 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.34021567967914 * H1x1_1 + -0.82210150819056 * H1x1_2 + 
0.2051584088577 * H1x1_3 + -0.14877251454609 * H1x1_4 ;
249578    +   H2x1_2  =     5.90283136076368 * H1x1_1  +    -7.93891997601848 * H1x1_2
249579    +          +     6.88352608350263 * H1x1_3  +     4.96968417177752 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 5.90283136076368 * H1x1_1 + -7.93891997601848 * H1x1_2 + 
6.88352608350263 * H1x1_3 + 4.96968417177752 * H1x1_4 ;
249580    +   H2x1_3  =    -0.35820258372371 * H1x1_1  +      3.0004195561827 * H1x1_2
249581    +          +    -2.45737828305901 * H1x1_3  +     -3.3701635035096 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.35820258372371 * H1x1_1 + 3.0004195561827 * H1x1_2 + 
-2.45737828305901 * H1x1_3 + -3.3701635035096 * H1x1_4 ;
249582    +   H2x1_4  =    -2.21298094667436 * H1x1_1  +     0.26414252140039 * H1x1_2
249583    +          +     1.09094365218549 * H1x1_3  +     1.52196888791164 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.21298094667436 * H1x1_1 + 0.26414252140039 * H1x1_2 + 
1.09094365218549 * H1x1_3 + 1.52196888791164 * H1x1_4 ;
249584    +   H2x1_1  = H2x1_1  +    -0.84246838752596 * H1x2_1
249585    +          +     0.53874594317309 * H1x2_2  +     0.47956597308168 * H1x2_3
249586    +          +    -0.93255463077914 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.84246838752596 * H1x2_1 + 0.53874594317309 * H1x2_2 
+ 0.47956597308168 * H1x2_3 + -0.93255463077914 * H1x2_4 ;
249587    +   H2x1_2  = H2x1_2  +     -1.9223116287684 * H1x2_1
249588    +          +    -2.37377206970433 * H1x2_2  +    -0.73887953722708 * H1x2_3
249589    +          +     2.71044044080254 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.9223116287684 * H1x2_1 + -2.37377206970433 * H1x2_2 
+ -0.73887953722708 * H1x2_3 + 2.71044044080254 * H1x2_4 ;
249590    +   H2x1_3  = H2x1_3  +     0.53173546674544 * H1x2_1
249591    +          +     1.48831638926533 * H1x2_2  +     2.89231339277069 * H1x2_3
249592    +          +    -2.75774116509863 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.53173546674544 * H1x2_1 + 1.48831638926533 * H1x2_2 
+ 2.89231339277069 * H1x2_3 + -2.75774116509863 * H1x2_4 ;
249593    +   H2x1_4  = H2x1_4  +     1.42086435786687 * H1x2_1
249594    +          +     0.41116169758796 * H1x2_2  +    -1.89087404607062 * H1x2_3
249595    +          +     1.62153254823704 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.42086435786687 * H1x2_1 + 0.41116169758796 * H1x2_2 
+ -1.89087404607062 * H1x2_3 + 1.62153254823704 * H1x2_4 ;
249596    +   H2x1_1  =    -1.75788455741829 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.75788455741829 + H2x1_1 ;
249597    +   H2x1_2  =    -1.23949015246826 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.23949015246826 + H2x1_2 ;
249598    +   H2x1_3  =     0.22552341308337 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.22552341308337 + H2x1_3 ;
249599    +   H2x1_4  =    -0.29261642916715 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.29261642916715 + H2x1_4 ;
249600    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
249601    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
249602    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
249603    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
249604    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
249605    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
249606    +END;
MPRINT(EM_DIAGRAM):   END;
249607    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
249608    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
249609    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
249610    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
249611    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
249612    +END;
MPRINT(EM_DIAGRAM):   END;
249613    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249614    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
249615    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249616    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
249617    +   P_DepVar1  =    -0.01128614443737 * H2x1_1  +     20.5485882709782 * H2x1_2
249618    +          +    -12.1833710389136 * H2x1_3  +     -2.9534639226061 * H2x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.01128614443737 * H2x1_1 + 20.5485882709782 * H2x1_2 + 
-12.1833710389136 * H2x1_3 + -2.9534639226061 * H2x1_4 ;
249619    +   P_DepVar1  =     1.18328906065521 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.18328906065521 + P_DepVar1 ;
249620    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
249621    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
249622    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
249623    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
249624    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
249625    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
249626    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
249627    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
249628    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
249629    +END;
MPRINT(EM_DIAGRAM):   END;
249630    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
249631    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
249632    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
249633    +END;
MPRINT(EM_DIAGRAM):   END;
249634    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
249635    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
249636    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
249637    +END;
MPRINT(EM_DIAGRAM):   END;
249638    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249639    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
249640    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
249641    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
249642    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
249643    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
249644    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
249645    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
249646    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
249647    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
249648    +END;
MPRINT(EM_DIAGRAM):   END;
249649    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
249650    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
249651    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
249652    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
249653     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
249654     quit;
249655     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
249656     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
249657     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
249658     retain ID 2 Node "AutoNeural47";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural47";
249659     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
249660     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3034 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3034 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249661     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
249662     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
249663     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3034 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3034 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249664     proc sort data=EMWS8.AutoNeural47_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural47_variableset out=_temp2(keep=NAME 
CREATOR);
249665     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
249666     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL47_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

249667     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
249668     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
249669     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
249670     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249671     proc contents data=EMWS8.AutoNeural47_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural47_train out=_meta(keep=NAME) noprint;
249672     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 65 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

249673     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
249674     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
249675     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 65 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 65 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249676     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
249677     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
249678     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
249679     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 65 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 65 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249680     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
249681     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
249681   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1477 rows and 5 columns.

249682     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

249683     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
249684     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1477 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1477 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249685     filename _pref
249685   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
249686     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
249687     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
249688    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
249689    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
249690    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
249691    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
249692    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
249693    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
249694     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
249695     quit;
249696     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
249697     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
249698     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
249699     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
249700     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
249701     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249702     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
249703     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
249704     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249705     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
249706     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
249707     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249708     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
249709     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
249710     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
249711     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249712     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
249713     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

249714     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
249715     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
249716     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249717     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
249718     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
249719     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
249720     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249721     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
249722     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
249722   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

249723     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

249724     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
249725     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1481 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249726     filename _pref
249726   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
249727     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
249728     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
249729    +
249730    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
249731    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
249731   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
249732    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
249733    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
249734    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
249735    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
249736    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
249737     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
249738     quit;
249739     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
249740     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
249741     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
249742     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
249743     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
249744     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249745     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
249746     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
249747     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249748     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
249749     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
249750     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

249751     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
249752     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
249753     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
249754     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249755     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
249756     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249757     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
249758     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
249759     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249760     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
249761     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
249762     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
249763     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249764     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
249765     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
249765   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

249766     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249767     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
249768     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1520 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249769     filename _pref
249769   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
249770     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
249771     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
249772    +
249773    +
249774    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
249775    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
249776    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
249777    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
249778    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
249779    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
249780    +
249781    +
249782    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
249783    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
249784    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
249785    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
249786    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
249787    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
249788    +
249789    +
249790    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
249791    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
249792    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
249793    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
249794    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
249795    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
249796    +
249797    +
249798    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
249799    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
249800    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
249801    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
249802    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
249803    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
249804    +
249805    +
249806    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
249807    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
249808    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
249809    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
249810    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
249811    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
249812    +
249813    +
249814    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
249815    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
249816    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
249817    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
249818    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
249819    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
249820    +
249821    +
249822    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
249823    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
249824    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
249825    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
249826    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
249827    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
249828    +
249829    +
249830    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
249831    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
249832    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
249833    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
249834    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
249835    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
249836    +if
249837    +_FILTERNORM1 not in ( '.')
249838    + and
249839    +_FILTERNORM2 not in ( '.')
249840    + and
249841    +_FILTERNORM3 not in ( '.')
249842    + and
249843    +_FILTERNORM4 not in ( '.')
249844    + and
249845    +_FILTERNORM5 not in ( '.')
249846    + and
249847    +_FILTERNORM6 not in ( '.')
249848    + and
249849    +_FILTERNORM7 not in ( ' ')
249850    + and
249851    +_FILTERNORM8 not in ( ' ')
249852    +and
249853    +( Dt_Customer ne .)
249854    +and ( Income ne . and (Income<=107000))
249855    +and ( Kidhome ne .)
249856    +and ( MntFishProducts ne .)
249857    +and ( MntFruits ne .)
249858    +and ( MntGoldProds ne .)
249859    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
249860    +and ( MntSweetProducts ne .)
249861    +and ( MntWines ne .)
249862    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
249863    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
249864    +and ( NumStorePurchases ne .)
249865    +and ( NumWebPurchases ne .)
249866    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
249867    +and ( Recency ne .)
249868    +and ( Teenhome ne .)
249869    +and ( Year_Birth ne .)
249870    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
249871    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
249872    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
249873    +end;
MPRINT(EM_DIAGRAM):   end;
249874    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
249875    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
249876     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
249877     quit;
249878     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
249879     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
249880     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
249881     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
249882     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
249883     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

249884     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
249885     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
249886     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249887     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
249888     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
249889     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249890     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
249891     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
249892     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
249893     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

249894     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
249895     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

249896     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
249897     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
249898     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

249899     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
249900     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
249901     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
249902     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249903     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
249904     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
249904   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

249905     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

249906     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
249907     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1586 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

249908     %macro varDept(fcmpdata=,id=);
249909     %global nobs&id scoreFlag&id;
249910     %let scoreFlag&id = 0;
249911     %if &id=1 or ^&fcmpStart %then %do;
249912     proc sort data=&fcmpdata out=_temp&id nodupkey;
249913     by NAME;
249914     where id=&id and LHS in( %let j=1;
249915     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
249916     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
249917     "&var" %let j = %eval(&j+1);
249918     %end;
249919     );
249920     run;
249921     %let dsid = %sysfunc(open(_temp&id));
249922     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
249923     %let dsid = %sysfunc(close(&dsid));
249924     %if &&nobs&id %then %do;
249925     %let scoreFlag&id = 1;
249926     %let fcmpStart = 1;
249927     %end;
249928     %else %let fcmpStart = 0;
249929     %end;
249930     %else %do;
249931     proc sort data=&fcmpdata out=_tempid;
249932     where id=&id;
249933     by LHS;
249934     run;
249935     %let dsid = %sysfunc(open(_tempid));
249936     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
249937     %let dsid = %sysfunc(close(&dsid));
249938     %if ^&&nobs&id %then %do;
249939     proc datasets lib=work nolist;
249940     delete _tempid;
249941     run;
249942     quit;
249943     %end;
249944     %else %do;
249945     data _tempAll;
249946     set %let j=%eval(&id-1);
249947     %do x=1 %to &j;
249948     %if &&nobs&x %then %do;
249949     _temp&x %end;
249950     %end;
249951     ;
249952     run;
249953     proc sql;
249954     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
249954   ! work._tempid p2 where p.name=p2.lhs;
249955     quit;
249956     data _temp&id;
249957     set _temp&id;
249958     where LHS ne '' and NAME ne '' and Node ne '';
249959     run;
249960     proc datasets lib=work nolist;
249961     delete _tempAll;
249962     run;
249963     %let dsid = %sysfunc(open(_temp&id));
249964     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
249965     %let dsid = %sysfunc(close(&dsid));
249966     %if ^&&nobs&id %then %do;
249967     proc datasets lib=work nolist;
249968     delete _temp&id;
249969     run;
249970     quit;
249971     %end;
249972     %else %do;
249973     %let scoreFlag&id = 1;
249974     data _temp&id;
249975     set _temp&id;
249976     where LHS ne NAME and node ne '';
249977     run;
249978     %let dsid = %sysfunc(open(_temp&id));
249979     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
249980     %let dsid = %sysfunc(close(&dsid));
249981     %if ^&&nobs&id %then %do;
249982     proc datasets lib=work nolist;
249983     delete _temp&id;
249984     run;
249985     quit;
249986     %end;
249987     %else %do;
249988     proc sort data=_temp&id nodupkey;
249989     by LHS NAME;
249990     run;
249991     %end;
249992     %end;
249993     %end;
249994     %end;
249995     %mend varDept;
249996     %macro optCode(outdata=fcmpdata);
249997     %global fcmpStart;
249998     %let fcmpStart = 0;
249999     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
250000     %let NumNodes=9;
250001     %do k=1 %to &NumNodes;
250002     %vardept(fcmpdata=&outdata, id=&k);
250003     %end;
250004     %mend optCode;
250005     %optcode(outData=EMWS8.Ensmbl57_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 97 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 37 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

250006     filename _pref
250006   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMPUBLISHSCORE.sas";
250007     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
250008     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMPUBLISHSCORE.sas.
250009    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
250010    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
250011    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
250012    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
250013    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
250014    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
250015    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
250016    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
250017    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
250018    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
250019    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
250020    +LENGTH _WARN_ $4
250021    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
250022    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
250023    +
250024    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
250025    +
250026    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
250027    +
250028    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
250029    +
250030    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
250031    +
250032    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
250033    +
250034    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
250035    +
250036    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
250037    +
250038    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
250039    +
250040    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
250041    +
250042    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
250043    +
250044    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
250045    +
250046    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
250047    +
250048    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
250049    +
250050    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
250051    +
250052    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
250053    +
250054    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
250055    +
250056    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
250057    +
250058    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
250059    +
250060    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
250061    +
250062    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
250063    +
250064    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
250065    +
250066    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
250067    +
250068    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
250069    +
250070    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
250071    +
250072    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
250073    +
250074    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
250075    +
250076    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
250077    +
250078    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
250079    +
250080    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
250081    +
250082    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
250083    +
250084    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
250085    +
250086    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
250087    +
250088    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
250089    +
250090    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
250091    +
250092    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
250093    +
250094    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
250095    +
250096    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
250097    +
250098    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
250099    +
250100    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
250101    +
250102    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
250103    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
250104    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
250105    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
250106    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
250107    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
250108    +end;
MPRINT(EM_DIAGRAM):   end;
250109    +else do;
MPRINT(EM_DIAGRAM):   else do;
250110    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
250111    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
250112    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
250113    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
250114    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
250115    +   end;
MPRINT(EM_DIAGRAM):   end;
250116    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
250117    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
250118    +   end;
MPRINT(EM_DIAGRAM):   end;
250119    +   else do;
MPRINT(EM_DIAGRAM):   else do;
250120    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
250121    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
250122    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
250123    +   end;
MPRINT(EM_DIAGRAM):   end;
250124    +end;
MPRINT(EM_DIAGRAM):   end;
250125    +
250126    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
250127    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
250128    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
250129    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
250130    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
250131    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
250132    +end;
MPRINT(EM_DIAGRAM):   end;
250133    +else do;
MPRINT(EM_DIAGRAM):   else do;
250134    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
250135    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
250136    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
250137    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
250138    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
250139    +   end;
MPRINT(EM_DIAGRAM):   end;
250140    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
250141    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
250142    +   end;
MPRINT(EM_DIAGRAM):   end;
250143    +   else do;
MPRINT(EM_DIAGRAM):   else do;
250144    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
250145    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
250146    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
250147    +   end;
MPRINT(EM_DIAGRAM):   end;
250148    +end;
MPRINT(EM_DIAGRAM):   end;
250149    +
250150    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
250151    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
250152    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
250153    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
250154    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
250155    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
250156    +end;
MPRINT(EM_DIAGRAM):   end;
250157    +else do;
MPRINT(EM_DIAGRAM):   else do;
250158    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
250159    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
250160    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
250161    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
250162    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
250163    +   end;
MPRINT(EM_DIAGRAM):   end;
250164    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
250165    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
250166    +   end;
MPRINT(EM_DIAGRAM):   end;
250167    +   else do;
MPRINT(EM_DIAGRAM):   else do;
250168    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
250169    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
250170    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
250171    +   end;
MPRINT(EM_DIAGRAM):   end;
250172    +end;
MPRINT(EM_DIAGRAM):   end;
250173    +
250174    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
250175    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
250176    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
250177    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
250178    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
250179    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
250180    +end;
MPRINT(EM_DIAGRAM):   end;
250181    +else do;
MPRINT(EM_DIAGRAM):   else do;
250182    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
250183    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
250184    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
250185    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
250186    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
250187    +   end;
MPRINT(EM_DIAGRAM):   end;
250188    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
250189    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
250190    +   end;
MPRINT(EM_DIAGRAM):   end;
250191    +   else do;
MPRINT(EM_DIAGRAM):   else do;
250192    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
250193    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
250194    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
250195    +   end;
MPRINT(EM_DIAGRAM):   end;
250196    +end;
MPRINT(EM_DIAGRAM):   end;
250197    +
250198    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
250199    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
250200    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
250201    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
250202    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
250203    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
250204    +end;
MPRINT(EM_DIAGRAM):   end;
250205    +else do;
MPRINT(EM_DIAGRAM):   else do;
250206    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
250207    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
250208    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
250209    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
250210    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
250211    +   end;
MPRINT(EM_DIAGRAM):   end;
250212    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
250213    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
250214    +   end;
MPRINT(EM_DIAGRAM):   end;
250215    +   else do;
MPRINT(EM_DIAGRAM):   else do;
250216    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
250217    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
250218    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
250219    +   end;
MPRINT(EM_DIAGRAM):   end;
250220    +end;
MPRINT(EM_DIAGRAM):   end;
250221    +
250222    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
250223    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
250224    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
250225    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
250226    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
250227    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
250228    +end;
MPRINT(EM_DIAGRAM):   end;
250229    +else do;
MPRINT(EM_DIAGRAM):   else do;
250230    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
250231    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
250232    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
250233    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
250234    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
250235    +   end;
MPRINT(EM_DIAGRAM):   end;
250236    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
250237    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
250238    +   end;
MPRINT(EM_DIAGRAM):   end;
250239    +   else do;
MPRINT(EM_DIAGRAM):   else do;
250240    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
250241    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
250242    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
250243    +   end;
MPRINT(EM_DIAGRAM):   end;
250244    +end;
MPRINT(EM_DIAGRAM):   end;
250245    +
250246    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
250247    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
250248    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
250249    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
250250    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
250251    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
250252    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
250253    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
250254    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
250255    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
250256    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
250257    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
250258    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
250259    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
250260    +end;
MPRINT(EM_DIAGRAM):   end;
250261    +else do;
MPRINT(EM_DIAGRAM):   else do;
250262    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
250263    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
250264    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
250265    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
250266    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
250267    +   end;
MPRINT(EM_DIAGRAM):   end;
250268    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
250269    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
250270    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
250271    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
250272    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
The SAS System

250273    +   end;
MPRINT(EM_DIAGRAM):   end;
250274    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
250275    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
250276    +   end;
MPRINT(EM_DIAGRAM):   end;
250277    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
250278    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
250279    +   end;
MPRINT(EM_DIAGRAM):   end;
250280    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
250281    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
250282    +   end;
MPRINT(EM_DIAGRAM):   end;
250283    +   else do;
MPRINT(EM_DIAGRAM):   else do;
250284    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
250285    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
250286    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
250287    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
250288    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
250289    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
250290    +   end;
MPRINT(EM_DIAGRAM):   end;
250291    +end;
MPRINT(EM_DIAGRAM):   end;
250292    +
250293    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
250294    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
250295    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
250296    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
250297    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
250298    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
250299    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
250300    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
250301    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
250302    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
250303    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
250304    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
250305    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
250306    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
250307    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
250308    +end;
MPRINT(EM_DIAGRAM):   end;
250309    +else do;
MPRINT(EM_DIAGRAM):   else do;
250310    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
250311    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
250312    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
250313    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
250314    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
250315    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
250316    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
250317    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
250318    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
250319    +         end;
MPRINT(EM_DIAGRAM):   end;
250320    +         else do;
MPRINT(EM_DIAGRAM):   else do;
250321    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
250322    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
250323    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
250324    +            end;
MPRINT(EM_DIAGRAM):   end;
250325    +         end;
MPRINT(EM_DIAGRAM):   end;
250326    +      end;
MPRINT(EM_DIAGRAM):   end;
250327    +      else do;
MPRINT(EM_DIAGRAM):   else do;
250328    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
250329    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
250330    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
250331    +         end;
MPRINT(EM_DIAGRAM):   end;
250332    +      end;
MPRINT(EM_DIAGRAM):   end;
250333    +   end;
MPRINT(EM_DIAGRAM):   end;
250334    +   else do;
MPRINT(EM_DIAGRAM):   else do;
250335    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
250336    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
250337    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
250338    +      end;
MPRINT(EM_DIAGRAM):   end;
250339    +      else do;
MPRINT(EM_DIAGRAM):   else do;
250340    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
250341    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
250342    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
250343    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
250344    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
250345    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
250346    +         end;
MPRINT(EM_DIAGRAM):   end;
250347    +      end;
MPRINT(EM_DIAGRAM):   end;
250348    +   end;
MPRINT(EM_DIAGRAM):   end;
250349    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
250350    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
250351    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
250352    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
250353    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
250354    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
250355    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
250356    +   end;
MPRINT(EM_DIAGRAM):   end;
250357    +end;
MPRINT(EM_DIAGRAM):   end;
250358    +
250359    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
250360    +*** Checking missing input Interval
250361    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
250362    +
250363    +IF NMISS(
250364    +   Income ,
250365    +   Kidhome ,
250366    +   MntFishProducts ,
250367    +   MntFruits ,
250368    +   MntGoldProds ,
250369    +   MntMeatProducts ,
250370    +   MntSweetProducts ,
250371    +   MntWines ,
250372    +   NumCatalogPurchases ,
250373    +   NumDealsPurchases ,
250374    +   NumStorePurchases ,
250375    +   NumWebPurchases ,
250376    +   NumWebVisitsMonth ,
250377    +   Recency ,
250378    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
250379    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
250380    +
250381    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
250382    +END;
MPRINT(EM_DIAGRAM):   END;
250383    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
250384    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
250385    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
250386    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
250387    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
250388    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
250389    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
250390    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
250391    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
250392    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
250393    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
250394    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
250395    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
250396    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
250397    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
250398    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
250399    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
250400    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
250401    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
250402    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
250403    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
250404    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
250405    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
250406    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
250407    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
250408    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
250409    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
250410    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
250411    +END;
MPRINT(EM_DIAGRAM):   END;
250412    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
250413    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
250414    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
250415    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
250416    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
250417    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
250418    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
250419    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
250420    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
250421    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
250422    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
250423    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
250424    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
250425    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
250426    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
250427    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
250428    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
250429    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
250430    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
250431    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
250432    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
250433    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
250434    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
250435    +   ELSE S_NumCatalogPurchases
250436    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
250437    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
250438    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
250439    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
250440    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
250441    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
250442    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
250443    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
250444    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
250445    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
250446    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
250447    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
250448    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
250449    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
250450    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
250451    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
250452    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
250453    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
250454    +END;
MPRINT(EM_DIAGRAM):   END;
250455    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
250456    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
250457    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
250458    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
250459    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
250460    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
250461    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
250462    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
250463    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
250464    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
250465    +   H1x1_1  =     0.95463807935638 * S_Income  +     -0.0812123000279 *
250466    +        S_Kidhome  +    -1.17242250965796 * S_MntFishProducts
250467    +          +    -0.39894096707412 * S_MntFruits  +     0.48282664436672 *
250468    +        S_MntGoldProds  +       7.765847453582 * S_MntMeatProducts
250469    +          +    -0.44570165516063 * S_MntSweetProducts
250470    +          +    -1.40872100231855 * S_MntWines  +     1.40783708957732 *
250471    +        S_NumCatalogPurchases  +     1.49155573260533 * S_NumDealsPurchases
250472    +          +    -1.76291210288234 * S_NumStorePurchases
250473    +          +    -2.02392782824649 * S_NumWebPurchases
250474    +          +     1.28490910676992 * S_NumWebVisitsMonth
250475    +          +    -1.30767557862851 * S_Recency  +    -0.59235237740193 *
250476    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.95463807935638 * S_Income + -0.0812123000279 * S_Kidhome + 
-1.17242250965796 * S_MntFishProducts + -0.39894096707412 * S_MntFruits + 0.48282664436672 * 
S_MntGoldProds + 7.765847453582 * S_MntMeatProducts + -0.44570165516063 * S_MntSweetProducts + 
-1.40872100231855 * S_MntWines + 1.40783708957732 * S_NumCatalogPurchases + 1.49155573260533 * 
S_NumDealsPurchases + -1.76291210288234 * S_NumStorePurchases + -2.02392782824649 * 
S_NumWebPurchases + 1.28490910676992 * S_NumWebVisitsMonth + -1.30767557862851 * S_Recency + 
-0.59235237740193 * S_Teenhome ;
250477    +   H1x1_2  =    -0.44691945203456 * S_Income  +     0.39379891740392 *
250478    +        S_Kidhome  +     0.02372129308662 * S_MntFishProducts
250479    +          +     0.20627554813879 * S_MntFruits  +     0.34760356004051 *
250480    +        S_MntGoldProds  +    -0.95672595976635 * S_MntMeatProducts
250481    +          +     0.29239311560831 * S_MntSweetProducts
250482    +          +     1.16929881835698 * S_MntWines  +    -1.00380099933966 *
250483    +        S_NumCatalogPurchases  +     0.13934722329916 * S_NumDealsPurchases
250484    +          +     0.94246962588327 * S_NumStorePurchases
250485    +          +      0.9680353780544 * S_NumWebPurchases
250486    +          +    -2.21882487627334 * S_NumWebVisitsMonth
250487    +          +     2.11904606383155 * S_Recency  +      0.6539185986418 *
250488    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.44691945203456 * S_Income + 0.39379891740392 * S_Kidhome + 
0.02372129308662 * S_MntFishProducts + 0.20627554813879 * S_MntFruits + 0.34760356004051 * 
S_MntGoldProds + -0.95672595976635 * S_MntMeatProducts + 0.29239311560831 * S_MntSweetProducts 
+ 1.16929881835698 * S_MntWines + -1.00380099933966 * S_NumCatalogPurchases + 0.13934722329916 
* S_NumDealsPurchases + 0.94246962588327 * S_NumStorePurchases + 0.9680353780544 * 
S_NumWebPurchases + -2.21882487627334 * S_NumWebVisitsMonth + 2.11904606383155 * S_Recency + 
0.6539185986418 * S_Teenhome ;
250489    +   H1x1_1  = H1x1_1  +    -3.59113827146831 * AcceptedCmp10
250490    +          +    -0.49569953193794 * AcceptedCmp20  +    -0.52167719336095 *
250491    +        AcceptedCmp30  +    -0.86715095433046 * AcceptedCmp40
250492    +          +    -5.62926111624877 * AcceptedCmp50  +     0.11096869316425 *
250493    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -3.59113827146831 * AcceptedCmp10 + -0.49569953193794 
* AcceptedCmp20 + -0.52167719336095 * AcceptedCmp30 + -0.86715095433046 * AcceptedCmp40 + 
-5.62926111624877 * AcceptedCmp50 + 0.11096869316425 * Complain0 ;
250494    +   H1x1_2  = H1x1_2  +     0.46033758530017 * AcceptedCmp10
250495    +          +     0.35006796696269 * AcceptedCmp20  +     0.97811071409034 *
250496    +        AcceptedCmp30  +     0.99898386731466 * AcceptedCmp40
250497    +          +     1.09004749757455 * AcceptedCmp50  +    -0.37828411200383 *
250498    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.46033758530017 * AcceptedCmp10 + 0.35006796696269 * 
AcceptedCmp20 + 0.97811071409034 * AcceptedCmp30 + 0.99898386731466 * AcceptedCmp40 + 
1.09004749757455 * AcceptedCmp50 + -0.37828411200383 * Complain0 ;
250499    +   H1x1_1  = H1x1_1  +    -0.19002184370931 * Education2n_Cycle
250500    +          +      0.4572325462076 * EducationBasic  +     0.18712226653295 *
250501    +        EducationGraduation  +     0.44122744485667 * EducationMaster
250502    +          +    -0.37907342816265 * Marital_StatusDivorced
250503    +          +     0.12610640291685 * Marital_StatusMarried
250504    +          +     0.51984913420219 * Marital_StatusSingle
250505    +          +     0.07401117310472 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19002184370931 * Education2n_Cycle + 
0.4572325462076 * EducationBasic + 0.18712226653295 * EducationGraduation + 0.44122744485667 * 
EducationMaster + -0.37907342816265 * Marital_StatusDivorced + 0.12610640291685 * 
Marital_StatusMarried + 0.51984913420219 * Marital_StatusSingle + 0.07401117310472 * 
Marital_StatusTogether ;
250506    +   H1x1_2  = H1x1_2  +    -0.33166298059049 * Education2n_Cycle
250507    +          +     1.29947160945083 * EducationBasic  +    -0.61327168479974 *
250508    +        EducationGraduation  +    -0.26642525612671 * EducationMaster
250509    +          +    -1.03351623479699 * Marital_StatusDivorced
250510    +          +     1.44541386522162 * Marital_StatusMarried
250511    +          +    -1.03636573521294 * Marital_StatusSingle
250512    +          +     1.72091885709893 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.33166298059049 * Education2n_Cycle + 
1.29947160945083 * EducationBasic + -0.61327168479974 * EducationGraduation + 
-0.26642525612671 * EducationMaster + -1.03351623479699 * Marital_StatusDivorced + 
1.44541386522162 * Marital_StatusMarried + -1.03636573521294 * Marital_StatusSingle + 
1.72091885709893 * Marital_StatusTogether ;
250513    +   H1x1_1  =     10.1449432133402 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 10.1449432133402 + H1x1_1 ;
250514    +   H1x1_2  =    -2.11517502439063 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.11517502439063 + H1x1_2 ;
250515    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
250516    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
250517    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
250518    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
250519    +END;
MPRINT(EM_DIAGRAM):   END;
250520    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
250521    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
250522    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
250523    +END;
MPRINT(EM_DIAGRAM):   END;
250524    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
250525    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
250526    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
250527    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
250528    +   H1x2_1  =     -0.8682144724836 * S_Income  +      2.3024809346762 *
250529    +        S_Kidhome  +     0.64624727466292 * S_MntFishProducts
250530    +          +    -0.09660410291886 * S_MntFruits  +    -1.79562837605117 *
250531    +        S_MntGoldProds  +      0.1276827318716 * S_MntMeatProducts
250532    +          +    -0.56491281055157 * S_MntSweetProducts
250533    +          +     0.93663442469929 * S_MntWines  +    -0.00899150883311 *
250534    +        S_NumCatalogPurchases  +    -1.22662917925595 * S_NumDealsPurchases
250535    +          +    -0.90340706582786 * S_NumStorePurchases
250536    +          +    -1.91501626179453 * S_NumWebPurchases
250537    +          +     0.10121028558369 * S_NumWebVisitsMonth
250538    +          +     1.60735726265156 * S_Recency  +     0.23538323190125 *
250539    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.8682144724836 * S_Income + 2.3024809346762 * S_Kidhome + 
0.64624727466292 * S_MntFishProducts + -0.09660410291886 * S_MntFruits + -1.79562837605117 * 
S_MntGoldProds + 0.1276827318716 * S_MntMeatProducts + -0.56491281055157 * S_MntSweetProducts 
+ 0.93663442469929 * S_MntWines + -0.00899150883311 * S_NumCatalogPurchases + 
-1.22662917925595 * S_NumDealsPurchases + -0.90340706582786 * S_NumStorePurchases + 
-1.91501626179453 * S_NumWebPurchases + 0.10121028558369 * S_NumWebVisitsMonth + 
1.60735726265156 * S_Recency + 0.23538323190125 * S_Teenhome ;
250540    +   H1x2_2  =    -1.09261687432274 * S_Income  +     1.20111535021385 *
250541    +        S_Kidhome  +    -1.69538442721283 * S_MntFishProducts
250542    +          +    -0.70987820940317 * S_MntFruits  +    -1.60645342742617 *
250543    +        S_MntGoldProds  +    -0.30176111780721 * S_MntMeatProducts
250544    +          +    -0.23001625322332 * S_MntSweetProducts
250545    +          +    -0.14467043598448 * S_MntWines  +     0.41886993157522 *
250546    +        S_NumCatalogPurchases  +     1.96896752447653 * S_NumDealsPurchases
250547    +          +    -2.13716920911877 * S_NumStorePurchases
250548    +          +    -0.33508808117738 * S_NumWebPurchases
250549    +          +     -2.0809737926136 * S_NumWebVisitsMonth
250550    +          +     1.03175786727839 * S_Recency  +      0.7367575698643 *
250551    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.09261687432274 * S_Income + 1.20111535021385 * S_Kidhome + 
-1.69538442721283 * S_MntFishProducts + -0.70987820940317 * S_MntFruits + -1.60645342742617 * 
S_MntGoldProds + -0.30176111780721 * S_MntMeatProducts + -0.23001625322332 * 
S_MntSweetProducts + -0.14467043598448 * S_MntWines + 0.41886993157522 * S_NumCatalogPurchases 
+ 1.96896752447653 * S_NumDealsPurchases + -2.13716920911877 * S_NumStorePurchases + 
-0.33508808117738 * S_NumWebPurchases + -2.0809737926136 * S_NumWebVisitsMonth + 
1.03175786727839 * S_Recency + 0.7367575698643 * S_Teenhome ;
250552    +   H1x2_1  = H1x2_1  +     1.58943051578323 * AcceptedCmp10
250553    +          +     0.09118005069971 * AcceptedCmp20  +     1.19759908387569 *
250554    +        AcceptedCmp30  +     0.89598378494479 * AcceptedCmp40
250555    +          +     0.46816867379718 * AcceptedCmp50  +     1.86944333764097 *
250556    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.58943051578323 * AcceptedCmp10 + 0.09118005069971 * 
AcceptedCmp20 + 1.19759908387569 * AcceptedCmp30 + 0.89598378494479 * AcceptedCmp40 + 
0.46816867379718 * AcceptedCmp50 + 1.86944333764097 * Complain0 ;
250557    +   H1x2_2  = H1x2_2  +    -0.08862601564048 * AcceptedCmp10
250558    +          +    -3.30636530499001 * AcceptedCmp20  +     0.15596560905391 *
250559    +        AcceptedCmp30  +     0.09538395772421 * AcceptedCmp40
250560    +          +     0.55380047577072 * AcceptedCmp50  +    -1.45096025939708 *
250561    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.08862601564048 * AcceptedCmp10 + -3.30636530499001 
* AcceptedCmp20 + 0.15596560905391 * AcceptedCmp30 + 0.09538395772421 * AcceptedCmp40 + 
0.55380047577072 * AcceptedCmp50 + -1.45096025939708 * Complain0 ;
250562    +   H1x2_1  = H1x2_1  +     -0.8656532372301 * Education2n_Cycle
250563    +          +     1.21189313523907 * EducationBasic  +     1.51417472534213 *
250564    +        EducationGraduation  +     0.48964474451872 * EducationMaster
250565    +          +     1.22462877499103 * Marital_StatusDivorced
250566    +          +     0.55976057621985 * Marital_StatusMarried
250567    +          +     -0.3198252517086 * Marital_StatusSingle
250568    +          +     0.23778601487144 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.8656532372301 * Education2n_Cycle + 
1.21189313523907 * EducationBasic + 1.51417472534213 * EducationGraduation + 0.48964474451872 
* EducationMaster + 1.22462877499103 * Marital_StatusDivorced + 0.55976057621985 * 
Marital_StatusMarried + -0.3198252517086 * Marital_StatusSingle + 0.23778601487144 * 
Marital_StatusTogether ;
250569    +   H1x2_2  = H1x2_2  +     0.58231562363597 * Education2n_Cycle
250570    +          +    -0.76544661145643 * EducationBasic  +     -0.6650405134602 *
250571    +        EducationGraduation  +    -1.59533016160829 * EducationMaster
250572    +          +     0.32730811728353 * Marital_StatusDivorced
250573    +          +     1.61519773132998 * Marital_StatusMarried
250574    +          +    -1.42728303824254 * Marital_StatusSingle
250575    +          +     1.39334432128351 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58231562363597 * Education2n_Cycle + 
-0.76544661145643 * EducationBasic + -0.6650405134602 * EducationGraduation + 
-1.59533016160829 * EducationMaster + 0.32730811728353 * Marital_StatusDivorced + 
1.61519773132998 * Marital_StatusMarried + -1.42728303824254 * Marital_StatusSingle + 
1.39334432128351 * Marital_StatusTogether ;
250576    +   H1x2_1  =     1.49479859857755 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.49479859857755 + H1x2_1 ;
250577    +   H1x2_2  =     -0.6918737847278 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.6918737847278 + H1x2_2 ;
250578    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
250579    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
250580    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
250581    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
250582    +END;
MPRINT(EM_DIAGRAM):   END;
250583    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
250584    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
250585    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
250586    +END;
MPRINT(EM_DIAGRAM):   END;
250587    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
250588    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
250589    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
250590    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
250591    +   H2x1_1  =     1.67705445310922 * H1x1_1  +     -1.4133773927734 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.67705445310922 * H1x1_1 + -1.4133773927734 * H1x1_2 ;
250592    +   H2x1_2  =    -2.14069220527729 * H1x1_1  +     2.80569007785887 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.14069220527729 * H1x1_1 + 2.80569007785887 * H1x1_2 ;
250593    +   H2x1_1  = H2x1_1  +    -0.57216138417153 * H1x2_1
250594    +          +     1.42286315059473 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.57216138417153 * H1x2_1 + 1.42286315059473 * H1x2_2 
;
250595    +   H2x1_2  = H2x1_2  +     1.62250993087733 * H1x2_1
250596    +          +     0.34104856545583 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.62250993087733 * H1x2_1 + 0.34104856545583 * H1x2_2 ;
250597    +   H2x1_1  =    -3.48786428904302 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.48786428904302 + H2x1_1 ;
250598    +   H2x1_2  =    -0.43119827941199 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.43119827941199 + H2x1_2 ;
250599    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
250600    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
250601    +END;
MPRINT(EM_DIAGRAM):   END;
250602    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
250603    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
250604    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
250605    +END;
MPRINT(EM_DIAGRAM):   END;
250606    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
250607    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
250608    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
250609    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
250610    +   P_DepVar1  =    -9.14009115080293 * H2x1_1  +    -5.28591504747655 * H2x1_2
250611    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.14009115080293 * H2x1_1 + -5.28591504747655 * H2x1_2 ;
250612    +   P_DepVar1  =    -3.08988807073218 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08988807073218 + P_DepVar1 ;
250613    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
250614    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
250615    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
250616    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
250617    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
250618    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
250619    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
250620    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
250621    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
250622    +END;
MPRINT(EM_DIAGRAM):   END;
250623    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
250624    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
250625    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
250626    +END;
MPRINT(EM_DIAGRAM):   END;
250627    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
250628    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
250629    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
250630    +END;
MPRINT(EM_DIAGRAM):   END;
250631    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
250632    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
250633    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
250634    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
250635    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
250636    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
250637    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
250638    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
250639    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
250640    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
250641    +END;
MPRINT(EM_DIAGRAM):   END;
250642    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
250643    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
250644    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
250645    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
250646     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
250647     quit;
250648     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
250649     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
250650     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
250651     retain ID 2 Node "AutoNeural45";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural45";
250652     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
250653     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2098 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2098 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

250654     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
250655     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
250656     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2098 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2098 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250657     proc sort data=EMWS8.AutoNeural45_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural45_variableset out=_temp2(keep=NAME 
CREATOR);
250658     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
250659     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL45_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250660     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
250661     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
250662     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
250663     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

250664     proc contents data=EMWS8.AutoNeural45_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural45_train out=_meta(keep=NAME) noprint;
250665     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

250666     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
250667     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
250668     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250669     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
250670     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
250671     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
250672     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250673     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
250674     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
250674   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1081 rows and 5 columns.

250675     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

250676     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
250677     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1081 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1081 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250678     filename _pref
250678   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
250679     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
250680     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
250681    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
250682    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
250683    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
250684    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
250685    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
250686    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
250687     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
250688     quit;
250689     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
250690     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
250691     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
250692     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
250693     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
250694     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250695     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
250696     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
250697     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

250698     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
250699     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
250700     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250701     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
250702     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
250703     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
250704     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250705     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
250706     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

250707     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
250708     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
250709     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

250710     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
250711     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
250712     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
250713     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250714     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
250715     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
250715   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

250716     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250717     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
250718     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1085 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

250719     filename _pref
250719   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
250720     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
250721     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
250722    +
250723    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
250724    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
250724   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
250725    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
250726    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
250727    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
250728    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
250729    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
250730     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
250731     quit;
250732     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
250733     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
250734     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
250735     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
250736     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
250737     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250738     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
250739     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
250740     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250741     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
250742     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
250743     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.07 seconds
      cpu time            0.00 seconds
      

250744     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
250745     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
250746     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
250747     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250748     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
250749     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250750     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
250751     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
250752     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

250753     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
250754     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
250755     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
250756     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250757     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
250758     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
250758   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

250759     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250760     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
250761     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1124 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

250762     filename _pref
250762   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
250763     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
250764     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
250765    +
250766    +
250767    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
250768    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
250769    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
250770    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
250771    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
250772    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
250773    +
250774    +
250775    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
250776    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
250777    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
250778    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
250779    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
250780    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
250781    +
250782    +
250783    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
250784    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
250785    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
250786    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
250787    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
250788    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
250789    +
250790    +
250791    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
250792    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
250793    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
250794    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
250795    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
250796    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
250797    +
250798    +
250799    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
250800    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
250801    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
250802    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
250803    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
250804    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
250805    +
250806    +
250807    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
250808    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
250809    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
250810    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
250811    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
250812    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
250813    +
250814    +
250815    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
250816    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
250817    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
250818    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
250819    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
250820    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
250821    +
250822    +
250823    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
250824    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
250825    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
250826    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
250827    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
250828    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
250829    +if
250830    +_FILTERNORM1 not in ( '.')
250831    + and
250832    +_FILTERNORM2 not in ( '.')
250833    + and
250834    +_FILTERNORM3 not in ( '.')
250835    + and
250836    +_FILTERNORM4 not in ( '.')
250837    + and
250838    +_FILTERNORM5 not in ( '.')
250839    + and
250840    +_FILTERNORM6 not in ( '.')
250841    + and
250842    +_FILTERNORM7 not in ( ' ')
250843    + and
250844    +_FILTERNORM8 not in ( ' ')
250845    +and
250846    +( Dt_Customer ne .)
250847    +and ( Income ne . and (Income<=107000))
250848    +and ( Kidhome ne .)
250849    +and ( MntFishProducts ne .)
250850    +and ( MntFruits ne .)
250851    +and ( MntGoldProds ne .)
250852    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
250853    +and ( MntSweetProducts ne .)
250854    +and ( MntWines ne .)
250855    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
250856    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
250857    +and ( NumStorePurchases ne .)
250858    +and ( NumWebPurchases ne .)
250859    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
250860    +and ( Recency ne .)
250861    +and ( Teenhome ne .)
250862    +and ( Year_Birth ne .)
250863    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
250864    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
250865    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
250866    +end;
MPRINT(EM_DIAGRAM):   end;
250867    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
250868    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
250869     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
250870     quit;
250871     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
250872     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
250873     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
250874     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
250875     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
250876     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250877     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
250878     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
250879     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250880     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
250881     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
250882     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

250883     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
250884     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
250885     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
250886     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250887     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
250888     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

250889     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
250890     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
250891     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250892     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
250893     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
250894     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
250895     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250896     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
250897     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
250897   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

250898     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

250899     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
250900     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1190 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

250901     %macro varDept(fcmpdata=,id=);
250902     %global nobs&id scoreFlag&id;
250903     %let scoreFlag&id = 0;
250904     %if &id=1 or ^&fcmpStart %then %do;
250905     proc sort data=&fcmpdata out=_temp&id nodupkey;
250906     by NAME;
250907     where id=&id and LHS in( %let j=1;
250908     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
250909     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
250910     "&var" %let j = %eval(&j+1);
250911     %end;
250912     );
250913     run;
250914     %let dsid = %sysfunc(open(_temp&id));
250915     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
250916     %let dsid = %sysfunc(close(&dsid));
250917     %if &&nobs&id %then %do;
250918     %let scoreFlag&id = 1;
250919     %let fcmpStart = 1;
250920     %end;
250921     %else %let fcmpStart = 0;
250922     %end;
250923     %else %do;
250924     proc sort data=&fcmpdata out=_tempid;
250925     where id=&id;
250926     by LHS;
250927     run;
250928     %let dsid = %sysfunc(open(_tempid));
250929     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
250930     %let dsid = %sysfunc(close(&dsid));
250931     %if ^&&nobs&id %then %do;
250932     proc datasets lib=work nolist;
250933     delete _tempid;
250934     run;
250935     quit;
250936     %end;
250937     %else %do;
250938     data _tempAll;
250939     set %let j=%eval(&id-1);
250940     %do x=1 %to &j;
250941     %if &&nobs&x %then %do;
250942     _temp&x %end;
250943     %end;
250944     ;
250945     run;
250946     proc sql;
250947     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
250947   ! work._tempid p2 where p.name=p2.lhs;
250948     quit;
250949     data _temp&id;
250950     set _temp&id;
250951     where LHS ne '' and NAME ne '' and Node ne '';
250952     run;
250953     proc datasets lib=work nolist;
250954     delete _tempAll;
250955     run;
250956     %let dsid = %sysfunc(open(_temp&id));
250957     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
250958     %let dsid = %sysfunc(close(&dsid));
250959     %if ^&&nobs&id %then %do;
250960     proc datasets lib=work nolist;
250961     delete _temp&id;
250962     run;
250963     quit;
250964     %end;
250965     %else %do;
250966     %let scoreFlag&id = 1;
250967     data _temp&id;
250968     set _temp&id;
250969     where LHS ne NAME and node ne '';
250970     run;
250971     %let dsid = %sysfunc(open(_temp&id));
250972     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
250973     %let dsid = %sysfunc(close(&dsid));
250974     %if ^&&nobs&id %then %do;
250975     proc datasets lib=work nolist;
250976     delete _temp&id;
250977     run;
250978     quit;
250979     %end;
250980     %else %do;
250981     proc sort data=_temp&id nodupkey;
250982     by LHS NAME;
250983     run;
250984     %end;
250985     %end;
250986     %end;
250987     %end;
250988     %mend varDept;
250989     %macro optCode(outdata=fcmpdata);
250990     %global fcmpStart;
250991     %let fcmpStart = 0;
250992     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
250993     %let NumNodes=9;
250994     %do k=1 %to &NumNodes;
250995     %vardept(fcmpdata=&outdata, id=&k);
250996     %end;
250997     %mend optCode;
250998     %optcode(outData=EMWS8.Ensmbl57_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 116 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 85 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 31 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

250999     filename _pref
250999   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMPUBLISHSCORE.sas";
251000     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
251001     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMPUBLISHSCORE.sas.
251002    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
251003    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
251004    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
251005    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
251006    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
251007    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
251008    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
251009    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
251010    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
251011    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
251012    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
251013    +LENGTH _WARN_ $4
251014    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
251015    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
251016    +
251017    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
251018    +
251019    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
251020    +
251021    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
251022    +
251023    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
251024    +
251025    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
251026    +
251027    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
251028    +
251029    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
251030    +
251031    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
251032    +
251033    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
251034    +
251035    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
251036    +
251037    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
251038    +
251039    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
251040    +
251041    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
251042    +
251043    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
251044    +
251045    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
251046    +
251047    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
251048    +
251049    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
251050    +
251051    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
251052    +
251053    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
251054    +
251055    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
251056    +
251057    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
251058    +
251059    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
251060    +
251061    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
251062    +
251063    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
251064    +
251065    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
251066    +
251067    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
251068    +
251069    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
251070    +
251071    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
251072    +
251073    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
251074    +
251075    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
251076    +
251077    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
251078    +
251079    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
251080    +
251081    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
251082    +
251083    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
251084    +
251085    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
251086    +
251087    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
251088    +
251089    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
251090    +
251091    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
251092    +
251093    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
251094    +
251095    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
251096    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
251097    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
251098    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
251099    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
251100    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
251101    +end;
MPRINT(EM_DIAGRAM):   end;
251102    +else do;
MPRINT(EM_DIAGRAM):   else do;
251103    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
251104    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
251105    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
251106    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
251107    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
251108    +   end;
MPRINT(EM_DIAGRAM):   end;
251109    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
251110    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
251111    +   end;
MPRINT(EM_DIAGRAM):   end;
251112    +   else do;
MPRINT(EM_DIAGRAM):   else do;
251113    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
251114    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
251115    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
251116    +   end;
MPRINT(EM_DIAGRAM):   end;
251117    +end;
MPRINT(EM_DIAGRAM):   end;
251118    +
251119    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
251120    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
251121    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
251122    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
251123    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
251124    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
251125    +end;
MPRINT(EM_DIAGRAM):   end;
251126    +else do;
MPRINT(EM_DIAGRAM):   else do;
251127    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
251128    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
251129    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
251130    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
251131    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
251132    +   end;
MPRINT(EM_DIAGRAM):   end;
251133    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
251134    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
251135    +   end;
MPRINT(EM_DIAGRAM):   end;
251136    +   else do;
MPRINT(EM_DIAGRAM):   else do;
251137    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
251138    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
251139    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
251140    +   end;
MPRINT(EM_DIAGRAM):   end;
251141    +end;
MPRINT(EM_DIAGRAM):   end;
251142    +
251143    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
251144    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
251145    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
251146    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
251147    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
251148    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
251149    +end;
MPRINT(EM_DIAGRAM):   end;
251150    +else do;
MPRINT(EM_DIAGRAM):   else do;
251151    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
251152    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
251153    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
251154    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
251155    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
251156    +   end;
MPRINT(EM_DIAGRAM):   end;
251157    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
251158    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
251159    +   end;
MPRINT(EM_DIAGRAM):   end;
251160    +   else do;
MPRINT(EM_DIAGRAM):   else do;
251161    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
251162    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
251163    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
251164    +   end;
MPRINT(EM_DIAGRAM):   end;
251165    +end;
MPRINT(EM_DIAGRAM):   end;
251166    +
251167    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
251168    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
251169    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
251170    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
251171    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
251172    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
251173    +end;
MPRINT(EM_DIAGRAM):   end;
251174    +else do;
MPRINT(EM_DIAGRAM):   else do;
251175    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
251176    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
251177    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
251178    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
251179    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
251180    +   end;
MPRINT(EM_DIAGRAM):   end;
251181    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
251182    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
251183    +   end;
MPRINT(EM_DIAGRAM):   end;
251184    +   else do;
MPRINT(EM_DIAGRAM):   else do;
251185    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
251186    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
251187    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
251188    +   end;
MPRINT(EM_DIAGRAM):   end;
251189    +end;
MPRINT(EM_DIAGRAM):   end;
251190    +
251191    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
251192    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
251193    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
251194    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
251195    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
251196    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
251197    +end;
MPRINT(EM_DIAGRAM):   end;
251198    +else do;
MPRINT(EM_DIAGRAM):   else do;
251199    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
251200    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
251201    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
251202    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
251203    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
251204    +   end;
MPRINT(EM_DIAGRAM):   end;
251205    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
251206    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
251207    +   end;
MPRINT(EM_DIAGRAM):   end;
251208    +   else do;
MPRINT(EM_DIAGRAM):   else do;
251209    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
251210    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
251211    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
251212    +   end;
MPRINT(EM_DIAGRAM):   end;
251213    +end;
MPRINT(EM_DIAGRAM):   end;
251214    +
251215    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
251216    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
251217    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
251218    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
251219    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
251220    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
251221    +end;
MPRINT(EM_DIAGRAM):   end;
251222    +else do;
MPRINT(EM_DIAGRAM):   else do;
251223    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
251224    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
251225    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
251226    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
251227    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
251228    +   end;
MPRINT(EM_DIAGRAM):   end;
251229    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
251230    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
251231    +   end;
MPRINT(EM_DIAGRAM):   end;
251232    +   else do;
MPRINT(EM_DIAGRAM):   else do;
251233    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
251234    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
251235    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
251236    +   end;
MPRINT(EM_DIAGRAM):   end;
251237    +end;
MPRINT(EM_DIAGRAM):   end;
251238    +
251239    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
251240    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
251241    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
251242    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
251243    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
251244    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
251245    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
251246    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
251247    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
251248    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
251249    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
251250    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
251251    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
251252    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
251253    +end;
MPRINT(EM_DIAGRAM):   end;
251254    +else do;
MPRINT(EM_DIAGRAM):   else do;
251255    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
251256    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
251257    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
251258    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
251259    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
251260    +   end;
MPRINT(EM_DIAGRAM):   end;
251261    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
251262    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
251263    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
251264    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
251265    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
251266    +   end;
MPRINT(EM_DIAGRAM):   end;
251267    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
251268    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
251269    +   end;
MPRINT(EM_DIAGRAM):   end;
251270    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
251271    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
251272    +   end;
MPRINT(EM_DIAGRAM):   end;
251273    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
251274    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
251275    +   end;
MPRINT(EM_DIAGRAM):   end;
251276    +   else do;
MPRINT(EM_DIAGRAM):   else do;
251277    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
251278    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
251279    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
251280    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
251281    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
251282    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
251283    +   end;
MPRINT(EM_DIAGRAM):   end;
251284    +end;
MPRINT(EM_DIAGRAM):   end;
251285    +
251286    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
251287    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
251288    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
251289    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
251290    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
251291    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
251292    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
251293    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
251294    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
251295    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
251296    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
251297    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
251298    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
251299    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
251300    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
251301    +end;
MPRINT(EM_DIAGRAM):   end;
251302    +else do;
MPRINT(EM_DIAGRAM):   else do;
251303    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
251304    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
251305    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
251306    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
251307    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
251308    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
251309    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
251310    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
251311    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
251312    +         end;
MPRINT(EM_DIAGRAM):   end;
251313    +         else do;
MPRINT(EM_DIAGRAM):   else do;
251314    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
251315    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
251316    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
251317    +            end;
MPRINT(EM_DIAGRAM):   end;
251318    +         end;
MPRINT(EM_DIAGRAM):   end;
251319    +      end;
MPRINT(EM_DIAGRAM):   end;
251320    +      else do;
MPRINT(EM_DIAGRAM):   else do;
251321    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
251322    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
251323    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
251324    +         end;
MPRINT(EM_DIAGRAM):   end;
251325    +      end;
MPRINT(EM_DIAGRAM):   end;
251326    +   end;
MPRINT(EM_DIAGRAM):   end;
251327    +   else do;
MPRINT(EM_DIAGRAM):   else do;
251328    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
251329    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
251330    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
251331    +      end;
MPRINT(EM_DIAGRAM):   end;
251332    +      else do;
MPRINT(EM_DIAGRAM):   else do;
251333    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
251334    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
251335    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
251336    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
251337    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
251338    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
251339    +         end;
MPRINT(EM_DIAGRAM):   end;
251340    +      end;
MPRINT(EM_DIAGRAM):   end;
251341    +   end;
MPRINT(EM_DIAGRAM):   end;
251342    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
251343    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
251344    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
251345    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
251346    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
251347    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
251348    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
251349    +   end;
MPRINT(EM_DIAGRAM):   end;
251350    +end;
MPRINT(EM_DIAGRAM):   end;
251351    +
251352    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251353    +*** Checking missing input Interval
251354    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
251355    +
251356    +IF NMISS(
251357    +   Income ,
251358    +   Kidhome ,
251359    +   MntFishProducts ,
251360    +   MntFruits ,
251361    +   MntGoldProds ,
251362    +   MntMeatProducts ,
251363    +   MntSweetProducts ,
251364    +   MntWines ,
251365    +   NumCatalogPurchases ,
251366    +   NumDealsPurchases ,
251367    +   NumStorePurchases ,
251368    +   NumWebPurchases ,
251369    +   NumWebVisitsMonth ,
251370    +   Recency ,
251371    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
251372    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
251373    +
251374    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
251375    +END;
MPRINT(EM_DIAGRAM):   END;
251376    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251377    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
251378    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251379    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
251380    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
251381    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
251382    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
251383    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
251384    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
251385    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
251386    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
251387    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
251388    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
251389    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
251390    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
251391    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
251392    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
251393    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
251394    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
251395    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
251396    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
251397    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
251398    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
251399    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
251400    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
251401    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
251402    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
251403    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
251404    +END;
MPRINT(EM_DIAGRAM):   END;
251405    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
251406    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
251407    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
251408    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
251409    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
251410    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
251411    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
251412    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
251413    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
251414    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
251415    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
251416    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
251417    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
251418    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
251419    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
251420    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
251421    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
251422    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
251423    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
251424    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
251425    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
251426    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
251427    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
251428    +   ELSE S_NumCatalogPurchases
251429    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
251430    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
251431    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
251432    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
251433    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
251434    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
251435    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
251436    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
251437    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
251438    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
251439    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
251440    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
251441    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
251442    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
251443    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
251444    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
251445    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
251446    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
251447    +END;
MPRINT(EM_DIAGRAM):   END;
251448    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251449    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
251450    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251451    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251452    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
251453    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251454    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251455    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
251456    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251457    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
251458    +   H1x1_1  =     0.60821559277699 * S_Income  +     0.78245878520575 *
251459    +        S_Kidhome  +     3.02629225919456 * S_MntFishProducts
251460    +          +     1.44208452883494 * S_MntFruits  +     -0.8161710906244 *
251461    +        S_MntGoldProds  +    -5.65479728306763 * S_MntMeatProducts
251462    +          +     2.41993296129914 * S_MntSweetProducts
251463    +          +     16.1416936305202 * S_MntWines  +    -0.30170648366369 *
251464    +        S_NumCatalogPurchases  +    -4.40539425596446 * S_NumDealsPurchases
251465    +          +     7.59231492380468 * S_NumStorePurchases
251466    +          +    -0.47095655313121 * S_NumWebPurchases
251467    +          +     2.65669932372712 * S_NumWebVisitsMonth
251468    +          +     0.92605434462951 * S_Recency  +     0.27595278529362 *
251469    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.60821559277699 * S_Income + 0.78245878520575 * S_Kidhome + 
3.02629225919456 * S_MntFishProducts + 1.44208452883494 * S_MntFruits + -0.8161710906244 * 
S_MntGoldProds + -5.65479728306763 * S_MntMeatProducts + 2.41993296129914 * S_MntSweetProducts 
+ 16.1416936305202 * S_MntWines + -0.30170648366369 * S_NumCatalogPurchases + 
-4.40539425596446 * S_NumDealsPurchases + 7.59231492380468 * S_NumStorePurchases + 
-0.47095655313121 * S_NumWebPurchases + 2.65669932372712 * S_NumWebVisitsMonth + 
0.92605434462951 * S_Recency + 0.27595278529362 * S_Teenhome ;
251470    +   H1x1_1  = H1x1_1  +     2.22617132301519 * AcceptedCmp10
251471    +          +     2.97389891933054 * AcceptedCmp20  +    -0.25852677589668 *
251472    +        AcceptedCmp30  +     0.29740935303964 * AcceptedCmp40
251473    +          +     6.80320564322924 * AcceptedCmp50  +     2.19745012825493 *
251474    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.22617132301519 * AcceptedCmp10 + 2.97389891933054 * 
AcceptedCmp20 + -0.25852677589668 * AcceptedCmp30 + 0.29740935303964 * AcceptedCmp40 + 
6.80320564322924 * AcceptedCmp50 + 2.19745012825493 * Complain0 ;
251475    +   H1x1_1  = H1x1_1  +     2.55205464559227 * Education2n_Cycle
251476    +          +    -0.98577713200024 * EducationBasic  +     1.74619403557996 *
251477    +        EducationGraduation  +    -3.89600865490994 * EducationMaster
251478    +          +     0.44728218776544 * Marital_StatusDivorced
251479    +          +    -1.62458831276183 * Marital_StatusMarried
251480    +          +    -0.42858616367237 * Marital_StatusSingle
251481    +          +    -0.29553796445711 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.55205464559227 * Education2n_Cycle + 
-0.98577713200024 * EducationBasic + 1.74619403557996 * EducationGraduation + 
-3.89600865490994 * EducationMaster + 0.44728218776544 * Marital_StatusDivorced + 
-1.62458831276183 * Marital_StatusMarried + -0.42858616367237 * Marital_StatusSingle + 
-0.29553796445711 * Marital_StatusTogether ;
251482    +   H1x1_1  =     3.59078196202385 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.59078196202385 + H1x1_1 ;
251483    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
251484    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
251485    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
251486    +END;
MPRINT(EM_DIAGRAM):   END;
251487    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
251488    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
251489    +END;
MPRINT(EM_DIAGRAM):   END;
251490    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251491    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
251492    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251493    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
251494    +   H1x2_1  =    -0.99188645731967 * S_Income  +    -0.76771098590807 *
251495    +        S_Kidhome  +      0.8287505285538 * S_MntFishProducts
251496    +          +     0.45999682434351 * S_MntFruits  +      0.4293543408639 *
251497    +        S_MntGoldProds  +    -9.07723801877759 * S_MntMeatProducts
251498    +          +    -1.37098390846164 * S_MntSweetProducts
251499    +          +    -0.51776810310879 * S_MntWines  +    -1.37476010659628 *
251500    +        S_NumCatalogPurchases  +    -1.10451572937532 * S_NumDealsPurchases
251501    +          +     0.58246769316602 * S_NumStorePurchases
251502    +          +     2.72780243156581 * S_NumWebPurchases
251503    +          +    -1.73896446530763 * S_NumWebVisitsMonth
251504    +          +      0.7638963348072 * S_Recency  +     0.26979377997458 *
251505    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.99188645731967 * S_Income + -0.76771098590807 * S_Kidhome + 
0.8287505285538 * S_MntFishProducts + 0.45999682434351 * S_MntFruits + 0.4293543408639 * 
S_MntGoldProds + -9.07723801877759 * S_MntMeatProducts + -1.37098390846164 * 
S_MntSweetProducts + -0.51776810310879 * S_MntWines + -1.37476010659628 * 
S_NumCatalogPurchases + -1.10451572937532 * S_NumDealsPurchases + 0.58246769316602 * 
S_NumStorePurchases + 2.72780243156581 * S_NumWebPurchases + -1.73896446530763 * 
S_NumWebVisitsMonth + 0.7638963348072 * S_Recency + 0.26979377997458 * S_Teenhome ;
251506    +   H1x2_1  = H1x2_1  +     2.43014219686416 * AcceptedCmp10
251507    +          +    -4.74345515374868 * AcceptedCmp20  +     0.62579233621413 *
251508    +        AcceptedCmp30  +     0.64637471234006 * AcceptedCmp40
251509    +          +     1.70767935570268 * AcceptedCmp50  +    -0.94631514600478 *
251510    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 2.43014219686416 * AcceptedCmp10 + -4.74345515374868 * 
AcceptedCmp20 + 0.62579233621413 * AcceptedCmp30 + 0.64637471234006 * AcceptedCmp40 + 
1.70767935570268 * AcceptedCmp50 + -0.94631514600478 * Complain0 ;
251511    +   H1x2_1  = H1x2_1  +    -0.98761508407831 * Education2n_Cycle
251512    +          +     0.88643388278508 * EducationBasic  +    -0.83878459420096 *
251513    +        EducationGraduation  +     1.01072132252596 * EducationMaster
251514    +          +     0.08221095774854 * Marital_StatusDivorced
251515    +          +    -0.13062113450086 * Marital_StatusMarried
251516    +          +      0.1912119500185 * Marital_StatusSingle
251517    +          +     -0.3728209764276 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.98761508407831 * Education2n_Cycle + 
0.88643388278508 * EducationBasic + -0.83878459420096 * EducationGraduation + 1.01072132252596 
* EducationMaster + 0.08221095774854 * Marital_StatusDivorced + -0.13062113450086 * 
Marital_StatusMarried + 0.1912119500185 * Marital_StatusSingle + -0.3728209764276 * 
Marital_StatusTogether ;
251518    +   H1x2_1  =    -3.03275566330542 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -3.03275566330542 + H1x2_1 ;
251519    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
251520    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
251521    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
251522    +END;
MPRINT(EM_DIAGRAM):   END;
251523    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
251524    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
251525    +END;
MPRINT(EM_DIAGRAM):   END;
251526    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251527    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
251528    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251529    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
251530    +   H1x3_1  =    -1.55963738420881 * S_Income  +     0.71964926339388 *
251531    +        S_Kidhome  +    -0.47208108972067 * S_MntFishProducts
251532    +          +      0.6450894987393 * S_MntFruits  +     0.06261669147127 *
251533    +        S_MntGoldProds  +     0.14975522509881 * S_MntMeatProducts
251534    +          +     -0.4771357321143 * S_MntSweetProducts
251535    +          +     0.66709116843422 * S_MntWines  +     0.90111404700817 *
251536    +        S_NumCatalogPurchases  +     0.17723895187345 * S_NumDealsPurchases
251537    +          +     0.38755002642582 * S_NumStorePurchases
251538    +          +     0.65178643881164 * S_NumWebPurchases
251539    +          +    -0.83170832622452 * S_NumWebVisitsMonth
251540    +          +     2.65115346957983 * S_Recency  +     1.27228948382376 *
251541    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.55963738420881 * S_Income + 0.71964926339388 * S_Kidhome + 
-0.47208108972067 * S_MntFishProducts + 0.6450894987393 * S_MntFruits + 0.06261669147127 * 
S_MntGoldProds + 0.14975522509881 * S_MntMeatProducts + -0.4771357321143 * S_MntSweetProducts 
+ 0.66709116843422 * S_MntWines + 0.90111404700817 * S_NumCatalogPurchases + 0.17723895187345 
* S_NumDealsPurchases + 0.38755002642582 * S_NumStorePurchases + 0.65178643881164 * 
S_NumWebPurchases + -0.83170832622452 * S_NumWebVisitsMonth + 2.65115346957983 * S_Recency + 
1.27228948382376 * S_Teenhome ;
251542    +   H1x3_1  = H1x3_1  +     0.29816272417051 * AcceptedCmp10
251543    +          +    -0.71154376870988 * AcceptedCmp20  +    -0.39513051704909 *
251544    +        AcceptedCmp30  +     1.19068615672558 * AcceptedCmp40
251545    +          +     -1.9640044684445 * AcceptedCmp50  +    -0.09395110959453 *
251546    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.29816272417051 * AcceptedCmp10 + -0.71154376870988 * 
AcceptedCmp20 + -0.39513051704909 * AcceptedCmp30 + 1.19068615672558 * AcceptedCmp40 + 
-1.9640044684445 * AcceptedCmp50 + -0.09395110959453 * Complain0 ;
251547    +   H1x3_1  = H1x3_1  +    -0.43809514270646 * Education2n_Cycle
251548    +          +     0.27926697891252 * EducationBasic  +     1.12178568429269 *
251549    +        EducationGraduation  +      0.9696976240987 * EducationMaster
251550    +          +    -0.13574340372484 * Marital_StatusDivorced
251551    +          +     1.26001446384238 * Marital_StatusMarried
251552    +          +    -0.16294618258246 * Marital_StatusSingle
251553    +          +    -0.31789534786196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.43809514270646 * Education2n_Cycle + 
0.27926697891252 * EducationBasic + 1.12178568429269 * EducationGraduation + 0.9696976240987 * 
EducationMaster + -0.13574340372484 * Marital_StatusDivorced + 1.26001446384238 * 
Marital_StatusMarried + -0.16294618258246 * Marital_StatusSingle + -0.31789534786196 * 
Marital_StatusTogether ;
251554    +   H1x3_1  =     0.67537485509128 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67537485509128 + H1x3_1 ;
251555    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
251556    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
251557    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
251558    +END;
MPRINT(EM_DIAGRAM):   END;
251559    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
251560    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
251561    +END;
MPRINT(EM_DIAGRAM):   END;
251562    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251563    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
251564    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251565    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
251566    +   H2x1_1  =     1.66176856703373 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.66176856703373 * H1x1_1 ;
251567    +   H2x1_1  = H2x1_1  +     2.22197952592224 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.22197952592224 * H1x2_1 ;
251568    +   H2x1_1  = H2x1_1  +     1.05148827727504 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.05148827727504 * H1x3_1 ;
251569    +   H2x1_1  =    -1.97152028826028 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.97152028826028 + H2x1_1 ;
251570    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
251571    +END;
MPRINT(EM_DIAGRAM):   END;
251572    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
251573    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
251574    +END;
MPRINT(EM_DIAGRAM):   END;
251575    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251576    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
251577    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251578    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
251579    +   H2x2_1  =     0.45033423451322 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.45033423451322 * H1x1_1 ;
251580    +   H2x2_1  = H2x2_1  +     2.46855103154551 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.46855103154551 * H1x2_1 ;
251581    +   H2x2_1  = H2x2_1  +    -0.77837055555012 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.77837055555012 * H1x3_1 ;
251582    +   H2x2_1  =     -0.9821313826813 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.9821313826813 + H2x2_1 ;
251583    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
251584    +END;
MPRINT(EM_DIAGRAM):   END;
251585    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
251586    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
251587    +END;
MPRINT(EM_DIAGRAM):   END;
251588    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251589    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
251590    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251591    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
251592    +   H3x1_1  =    -4.89394761736069 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -4.89394761736069 * H2x1_1 ;
251593    +   H3x1_1  = H3x1_1  +    -3.02496799626931 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -3.02496799626931 * H2x2_1 ;
251594    +   H3x1_1  =    -2.03654026915424 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -2.03654026915424 + H3x1_1 ;
251595    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
251596    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
251597    +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
251598    +END;
MPRINT(EM_DIAGRAM):   END;
251599    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
251600    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
251601    +END;
MPRINT(EM_DIAGRAM):   END;
251602    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251603    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
251604    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251605    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
251606    +   P_DepVar1  =      11.443408553765 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 11.443408553765 * H3x1_1 ;
251607    +   P_DepVar1  =     0.39570054021751 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.39570054021751 + P_DepVar1 ;
251608    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
251609    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
251610    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
251611    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
251612    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
251613    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
251614    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
251615    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
251616    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
251617    +END;
MPRINT(EM_DIAGRAM):   END;
251618    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
251619    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
251620    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
251621    +END;
MPRINT(EM_DIAGRAM):   END;
251622    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
251623    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
251624    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
251625    +END;
MPRINT(EM_DIAGRAM):   END;
251626    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251627    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
251628    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
251629    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
251630    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
251631    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
251632    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
251633    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
251634    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
251635    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
251636    +END;
MPRINT(EM_DIAGRAM):   END;
251637    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
251638    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
251639    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
251640    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
251641     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
251642     quit;
251643     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
251644     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
251645     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
251646     retain ID 2 Node "AutoNeural44";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural44";
251647     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
251648     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251649     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
251650     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
251651     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

251652     proc sort data=EMWS8.AutoNeural44_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural44_variableset out=_temp2(keep=NAME 
CREATOR);
251653     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
251654     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL44_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251655     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
251656     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
251657     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
251658     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251659     proc contents data=EMWS8.AutoNeural44_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural44_train out=_meta(keep=NAME) noprint;
251660     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

251661     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
251662     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
251663     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251664     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
251665     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
251666     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
251667     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

251668     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
251669     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
251669   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1087 rows and 5 columns.

251670     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251671     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
251672     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1087 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1087 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251673     filename _pref
251673   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
251674     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
251675     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
251676    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
251677    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
251678    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
251679    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
251680    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
251681    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
251682     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
251683     quit;
251684     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
251685     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
251686     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
251687     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
251688     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
251689     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251690     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
251691     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
251692     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

251693     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
251694     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
251695     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251696     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
251697     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
251698     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
251699     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251700     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
251701     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

251702     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
251703     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
251704     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251705     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
251706     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
251707     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
251708     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

251709     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
251710     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
251710   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

251711     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251712     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
251713     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1091 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251714     filename _pref
251714   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
251715     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
251716     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
251717    +
251718    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
251719    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
251719   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
251720    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
251721    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
251722    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
251723    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
251724    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
251725     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
251726     quit;
251727     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
251728     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
251729     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
251730     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
251731     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
251732     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251733     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
251734     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
251735     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

251736     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
251737     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
251738     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251739     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
251740     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
251741     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
251742     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251743     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
251744     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

251745     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
251746     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
251747     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251748     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
251749     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
251750     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
251751     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251752     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
251753     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
251753   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

251754     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

251755     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
251756     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1130 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251757     filename _pref
251757   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
251758     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
251759     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
251760    +
251761    +
251762    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
251763    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
251764    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
251765    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
251766    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
251767    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
251768    +
251769    +
251770    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
251771    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
251772    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
251773    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
251774    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
251775    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
251776    +
251777    +
251778    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
251779    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
251780    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
251781    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
251782    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
251783    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
251784    +
251785    +
251786    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
251787    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
251788    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
251789    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
251790    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
251791    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
251792    +
251793    +
251794    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
251795    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
251796    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
251797    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
251798    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
251799    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
251800    +
251801    +
251802    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
251803    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
251804    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
251805    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
251806    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
251807    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
251808    +
251809    +
251810    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
251811    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
251812    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
251813    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
251814    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
251815    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
251816    +
251817    +
251818    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
251819    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
251820    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
251821    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
251822    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
251823    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
251824    +if
251825    +_FILTERNORM1 not in ( '.')
251826    + and
251827    +_FILTERNORM2 not in ( '.')
251828    + and
251829    +_FILTERNORM3 not in ( '.')
251830    + and
251831    +_FILTERNORM4 not in ( '.')
251832    + and
251833    +_FILTERNORM5 not in ( '.')
251834    + and
251835    +_FILTERNORM6 not in ( '.')
251836    + and
251837    +_FILTERNORM7 not in ( ' ')
251838    + and
251839    +_FILTERNORM8 not in ( ' ')
251840    +and
251841    +( Dt_Customer ne .)
251842    +and ( Income ne . and (Income<=107000))
251843    +and ( Kidhome ne .)
251844    +and ( MntFishProducts ne .)
251845    +and ( MntFruits ne .)
251846    +and ( MntGoldProds ne .)
251847    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
251848    +and ( MntSweetProducts ne .)
251849    +and ( MntWines ne .)
251850    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
251851    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
251852    +and ( NumStorePurchases ne .)
251853    +and ( NumWebPurchases ne .)
251854    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
251855    +and ( Recency ne .)
251856    +and ( Teenhome ne .)
251857    +and ( Year_Birth ne .)
251858    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
251859    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
251860    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
251861    +end;
MPRINT(EM_DIAGRAM):   end;
251862    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
251863    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
251864     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
251865     quit;
251866     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
251867     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
251868     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
251869     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
251870     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
251871     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251872     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
251873     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
251874     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251875     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
251876     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
251877     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251878     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
251879     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
251880     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
251881     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

251882     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
251883     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

251884     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
251885     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
251886     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251887     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
251888     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
251889     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
251890     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251891     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
251892     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
251892   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

251893     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

251894     proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
251895     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1196 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

251896     %macro varDept(fcmpdata=,id=);
251897     %global nobs&id scoreFlag&id;
251898     %let scoreFlag&id = 0;
251899     %if &id=1 or ^&fcmpStart %then %do;
251900     proc sort data=&fcmpdata out=_temp&id nodupkey;
251901     by NAME;
251902     where id=&id and LHS in( %let j=1;
251903     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
251904     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
251905     "&var" %let j = %eval(&j+1);
251906     %end;
251907     );
251908     run;
251909     %let dsid = %sysfunc(open(_temp&id));
251910     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
251911     %let dsid = %sysfunc(close(&dsid));
251912     %if &&nobs&id %then %do;
251913     %let scoreFlag&id = 1;
251914     %let fcmpStart = 1;
251915     %end;
251916     %else %let fcmpStart = 0;
251917     %end;
251918     %else %do;
251919     proc sort data=&fcmpdata out=_tempid;
251920     where id=&id;
251921     by LHS;
251922     run;
251923     %let dsid = %sysfunc(open(_tempid));
251924     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
251925     %let dsid = %sysfunc(close(&dsid));
251926     %if ^&&nobs&id %then %do;
251927     proc datasets lib=work nolist;
251928     delete _tempid;
251929     run;
251930     quit;
251931     %end;
251932     %else %do;
251933     data _tempAll;
251934     set %let j=%eval(&id-1);
251935     %do x=1 %to &j;
251936     %if &&nobs&x %then %do;
251937     _temp&x %end;
251938     %end;
251939     ;
251940     run;
251941     proc sql;
251942     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
251942   ! work._tempid p2 where p.name=p2.lhs;
251943     quit;
251944     data _temp&id;
251945     set _temp&id;
251946     where LHS ne '' and NAME ne '' and Node ne '';
251947     run;
251948     proc datasets lib=work nolist;
251949     delete _tempAll;
251950     run;
251951     %let dsid = %sysfunc(open(_temp&id));
251952     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
251953     %let dsid = %sysfunc(close(&dsid));
251954     %if ^&&nobs&id %then %do;
251955     proc datasets lib=work nolist;
251956     delete _temp&id;
251957     run;
251958     quit;
251959     %end;
251960     %else %do;
251961     %let scoreFlag&id = 1;
251962     data _temp&id;
251963     set _temp&id;
251964     where LHS ne NAME and node ne '';
251965     run;
251966     %let dsid = %sysfunc(open(_temp&id));
251967     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
251968     %let dsid = %sysfunc(close(&dsid));
251969     %if ^&&nobs&id %then %do;
251970     proc datasets lib=work nolist;
251971     delete _temp&id;
251972     run;
251973     quit;
251974     %end;
251975     %else %do;
251976     proc sort data=_temp&id nodupkey;
251977     by LHS NAME;
251978     run;
251979     %end;
251980     %end;
251981     %end;
251982     %end;
251983     %mend varDept;
251984     %macro optCode(outdata=fcmpdata);
251985     %global fcmpStart;
251986     %let fcmpStart = 0;
251987     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
251988     %let NumNodes=9;
251989     %do k=1 %to &NumNodes;
251990     %vardept(fcmpdata=&outdata, id=&k);
251991     %end;
251992     %mend optCode;
251993     %optcode(outData=EMWS8.Ensmbl57_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 116 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 85 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 31 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

251994     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
251995     * Ensmbl57: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Computing metadata for TRAIN data;
251996     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL57_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl57\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl57_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl57_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl57_TRAIN out=WORK.M0YO0G8D noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0YO0G8D;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0YO0G8D(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0YO0G8D;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0YO0G8D;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3ETNHZ8 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3ETNHZ8;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3ETNHZ8;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0W3UUCZ(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3ETNHZ8;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3ETNHZ8;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3ETNHZ8;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3ETNHZ8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3ETNHZ8;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural46_TRAIN noprint 
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural46_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl57_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl57";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl57";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl57";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl57";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl57";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl57";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl57";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl57";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl57";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl57";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl57";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
252316     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
252317     set EMWS8.Ensmbl57_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl57_EMINFO;
252318     where DATA='Ensmbl57' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl57' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
252319     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_EMINFO.
      WHERE (DATA='Ensmbl57') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

252320     data EMWS8.Ensmbl57_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl57_EMINFO;
252321     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
252322     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
252323     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL57_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
252327     run;
252328     data EMWS8.Ensmbl57_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl57_EMINFO;
252329     set EMWS8.Ensmbl57_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl57_EMINFO WORK.MODELTEMP_INFO;
252330     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL57_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL57_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

252331     proc sort data = EMWS8.Ensmbl57_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl57_EMINFO NOTHREADS;
252332     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
252333     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL57_EMINFO.
NOTE: The data set EMWS8.ENSMBL57_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

252334     proc sort data = EMWS8.AutoNeural46_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural46_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
252335     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
252336     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL46_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

252337     proc sort data = EMWS8.Ensmbl57_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl57_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
252338     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
252339     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL57_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

252340     data EMWS8.Ensmbl57_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl57_EMINFO;
252341     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
252342     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
252343     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL57_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

252344     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
252345     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
252346     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
252347     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.ENSMBL57_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL57_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
