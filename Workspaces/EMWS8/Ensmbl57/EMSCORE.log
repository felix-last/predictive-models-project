MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.09 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                21.09 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O35598ZG "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl57\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O35598ZG new;
MPRINT(EM_DIAGRAM):   run;
41807      filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl57\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl57\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring AUTONEURAL44_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41808      *------------------------------------------------------------*;
41809      * Ensmbl57: Scoring AUTONEURAL44_TRAIN data;
41810      *------------------------------------------------------------*;
41811      data EMWS8.Ensmbl57_TRAIN
41812      / view=EMWS8.Ensmbl57_TRAIN
41813      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl57_TRAIN / view=EMWS8.Ensmbl57_TRAIN ;
41814      set EMWS8.AutoNeural44_TRAIN
41815      ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural44_TRAIN ;
41816      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl57\EMFLOWSCORE.sas.
41817     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41818     +* Ensmbl57: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Combine model for DepVar;
41819     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41820     +* Ensmbl57: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 1 of 7;
41821     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41822     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41823     +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
41824     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
41825     +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
41826     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41827     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41828     +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
41829     +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
41830     +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
41831     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41832     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41833     +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
41834     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
41835     +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
41836     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41837     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41838     +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
41839     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
41840     +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
41841     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41842     +
41843     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
41844     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
MPRINT(EM_DIAGRAM):   Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
41845     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
41846     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
41847     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
41848     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
41849     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
41850     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41851     +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
41852     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
41853     +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
41854     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41855     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41856     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
41857     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41858     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
41859     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
41860     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
41861     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41862     +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
41863     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
41864     +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
41865     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41866     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41867     +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
41868     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
41869     +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
41870     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41871     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41872     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
41873     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
41874     +* NODE: AutoNeural44;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural44;
41875     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41876     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
41877     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
41878     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
41879     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
41880     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
41881     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
41882     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
41883     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
41884     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
41885     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
41886     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
41887     +LENGTH _WARN_ $4
41888     +      F_DepVar  $ 12
41889     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
41890     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
41891     +
41892     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
41893     +
41894     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
41895     +
41896     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
41897     +
41898     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
41899     +
41900     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
41901     +
41902     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
41903     +
41904     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
41905     +
41906     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
41907     +
41908     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
41909     +
41910     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
41911     +
41912     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
41913     +
41914     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
41915     +
41916     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
41917     +
41918     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
41919     +
41920     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
41921     +
41922     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
41923     +
41924     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
41925     +
41926     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
41927     +
41928     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
41929     +
41930     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
41931     +
41932     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
41933     +
41934     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
41935     +
41936     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
41937     +
41938     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
41939     +
41940     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
41941     +
41942     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
41943     +
41944     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
41945     +
41946     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
41947     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
41948     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
41949     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
41950     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
41951     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
41952     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
41953     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
41954     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
41955     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
41956     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
41957     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
41958     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
41959     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41960     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41961     +end;
MPRINT(EM_DIAGRAM):   end;
41962     +else do;
MPRINT(EM_DIAGRAM):   else do;
41963     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
41964     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
41965     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
41966     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41967     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
41968     +      if _dm8 <= 'MARRIED'  then do;
41969     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   else do;
41970     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
41971     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
41972     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41973     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
41974     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   end;
41975     +               Marital_StatusMarried = 1;
41976     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
41977     +            end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
41978     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
41979     +      end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41980     +      else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
41981     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
41982     +            Marital_StatusSingle = 1;
41983     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
41984     +         end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
41985     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
41986     +   end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41987     +   else do;
MPRINT(EM_DIAGRAM):   end;
41988     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   else do;
41989     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
41990     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
41991     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
41992     +      else do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
41993     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41994     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   end;
41995     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   end;
41996     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   end;
41997     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
41998     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
41999     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
42000     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
42001     +   end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
42002     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42003     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42004     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
42005     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   end;
42006     +      Marital_StatusTogether = .;
42007     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** *************************;
42008     +      _DM_BAD = 1;
42009     +   end;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
42010     +end;
42011     +
42012     +*** *************************;
42013     +*** Checking missing input Interval
42014     +*** *************************;
42015     +
42016     +IF NMISS(
42017     +   AcceptedCmpTotal ,
42018     +   Frq ,
42019     +   Income ,
42020     +   Mnt ,
42021     +   MntGoldProds ,
42022     +   MntMeatProducts ,
42023     +   NumCatalogPurchases ,
42024     +   NumDealsPurchases ,
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , Recency , Teenhome , Year_Birth ) THEN DO;
42025     +   NumWebVisitsMonth ,
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
42026     +   RFMstat ,
42027     +   Recency ,
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42028     +   Teenhome ,
MPRINT(EM_DIAGRAM):   END;
42029     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   *** *************************;
42030     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
42031     +
MPRINT(EM_DIAGRAM):   *** *************************;
42032     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
42033     +END;
42034     +*** *************************;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
42035     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
42036     +*** *************************;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
42037     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
42038     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
42039     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
42040     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
42041     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
42042     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
42043     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
42044     +        MntGoldProds ;
42045     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
42046     +        MntMeatProducts ;
42047     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
42048     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
42049     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
42050     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
42051     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
42052     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   END;
42053     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
42054     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE DO;
42055     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
42056     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
42057     +END;
42058     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
42059     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
42060     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
42061     +        AcceptedCmpTotal ;
42062     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
42063     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
42064     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
42065     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
42066     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
42067     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
42068     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
42069     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
42070     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
42071     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
42072     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
42073     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
42074     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
42075     +   ELSE S_NumCatalogPurchases
42076     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
42077     +         ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
42078     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
42079     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
42080     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
42081     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
42082     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
42083     +        NumWebVisitsMonth ;
42084     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
42085     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
42086     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
42087     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
42088     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
42089     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   END;
42090     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
42091     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** *************************;
42092     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   *** *************************;
42093     +END;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
42094     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42095     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
42096     +*** *************************;
42097     +*** *************************;
42098     +*** Writing the Node H1x1_ ;
42099     +*** *************************;
42100     +IF _DM_BAD EQ 0 THEN DO;
42101     +   H1x1_1  =    -0.12469827057082 * S_AcceptedCmpTotal
42102     +          +      3.1876739677725 * S_Frq  +     0.13471808395353 * S_Income
42103     +          +    -0.55590218871332 * S_Mnt  +     0.49013595544334 *
42104     +        S_MntGoldProds  +    -8.24401774301659 * S_MntMeatProducts
42105     +          +    -1.41682724778123 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.12469827057082 * S_AcceptedCmpTotal + 3.1876739677725 * S_Frq + 0.13471808395353 * S_Income + -0.55590218871332 * S_Mnt + 0.49013595544334 * S_MntGoldProds + -8.24401774301659 * S_MntMeatProducts + -1.41682724778123 * 
S_NumCatalogPurchases + -0.81806751697478 * S_NumDealsPurchases + 0.13721060582485 * S_NumWebVisitsMonth + -0.8599103465088 * S_RFMstat + -0.11788382213726 * S_Recency + -0.11154618858027 * S_Teenhome + -0.09280870729016 * S_Year_Birth ;
42106     +          +    -0.81806751697478 * S_NumDealsPurchases
42107     +          +     0.13721060582485 * S_NumWebVisitsMonth
42108     +          +     -0.8599103465088 * S_RFMstat  +    -0.11788382213726 *
42109     +        S_Recency  +    -0.11154618858027 * S_Teenhome
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.34960218424017 * Marital_StatusDivorced + -0.42475372885131 * Marital_StatusMarried + 0.12884500504295 * Marital_StatusSingle + -0.15810267147538 * Marital_StatusTogether ;
42110     +          +    -0.09280870729016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -5.00010358329252 + H1x1_1 ;
42111     +   H1x1_1  = H1x1_1  +     0.34960218424017 * Marital_StatusDivorced
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
42112     +          +    -0.42475372885131 * Marital_StatusMarried
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
42113     +          +     0.12884500504295 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
42114     +          +    -0.15810267147538 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   END;
42115     +   H1x1_1  =    -5.00010358329252 + H1x1_1 ;
42116     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   ELSE DO;
42117     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
42118     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   END;
42119     +END;
MPRINT(EM_DIAGRAM):   *** *************************;
42120     +ELSE DO;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
42121     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
42122     +END;
42123     +*** *************************;
42124     +*** Writing the Node H1x2_ ;
42125     +*** *************************;
42126     +IF _DM_BAD EQ 0 THEN DO;
42127     +   H1x2_1  =    -0.55977918187183 * S_AcceptedCmpTotal
42128     +          +     3.80877597264064 * S_Frq  +       0.740665099365 * S_Income
42129     +          +      1.2189502767856 * S_Mnt  +    -0.64069435073077 *
42130     +        S_MntGoldProds  +    -1.20953450523092 * S_MntMeatProducts
42131     +          +    -1.27566927607767 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.55977918187183 * S_AcceptedCmpTotal + 3.80877597264064 * S_Frq + 0.740665099365 * S_Income + 1.2189502767856 * S_Mnt + -0.64069435073077 * S_MntGoldProds + -1.20953450523092 * S_MntMeatProducts + -1.27566927607767 * 
S_NumCatalogPurchases + -0.30700705450077 * S_NumDealsPurchases + -1.10002183072059 * S_NumWebVisitsMonth + -0.17115220906364 * S_RFMstat + 0.98456522108133 * S_Recency + -0.46996209026516 * S_Teenhome + 0.11522881334392 * S_Year_Birth ;
42132     +          +    -0.30700705450077 * S_NumDealsPurchases
42133     +          +    -1.10002183072059 * S_NumWebVisitsMonth
42134     +          +    -0.17115220906364 * S_RFMstat  +     0.98456522108133 *
42135     +        S_Recency  +    -0.46996209026516 * S_Teenhome
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.23272680240317 * Marital_StatusDivorced + -0.32389187879499 * Marital_StatusMarried + 0.77856411154011 * Marital_StatusSingle + -0.63289071596123 * Marital_StatusTogether ;
42136     +          +     0.11522881334392 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 3.21350083886443 + H1x2_1 ;
42137     +   H1x2_1  = H1x2_1  +    -0.23272680240317 * Marital_StatusDivorced
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
42138     +          +    -0.32389187879499 * Marital_StatusMarried
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
42139     +          +     0.77856411154011 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
42140     +          +    -0.63289071596123 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   END;
42141     +   H1x2_1  =     3.21350083886443 + H1x2_1 ;
42142     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   ELSE DO;
42143     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
42144     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   END;
42145     +END;
MPRINT(EM_DIAGRAM):   *** *************************;
42146     +ELSE DO;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
42147     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
42148     +END;
MPRINT(EM_DIAGRAM):   H2x1_1 = -7.90353913070205 * H1x1_1 ;
42149     +*** *************************;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -3.6151322253591 * H1x2_1 ;
42150     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 2.06123756742001 + H2x1_1 ;
42151     +*** *************************;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
42152     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
42153     +   H2x1_1  =    -7.90353913070205 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
42154     +   H2x1_1  = H2x1_1  +     -3.6151322253591 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   END;
42155     +   H2x1_1  =     2.06123756742001 + H2x1_1 ;
42156     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   ELSE DO;
42157     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
42158     +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   END;
42159     +END;
MPRINT(EM_DIAGRAM):   *** *************************;
42160     +ELSE DO;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
42161     +   H2x1_1  = .;
42162     +END;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
42163     +*** *************************;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
42164     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
42165     +*** *************************;
42166     +
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
42167     +*** Generate dummy variables for DepVar ;
42168     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
42169     +label F_DepVar = 'From: DepVar' ;
42170     +length F_DepVar $ 12;
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
42171     +F_DepVar = put( DepVar , BEST. );
42172     +%DMNORMIP( F_DepVar )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
MPRINT(EM_DIAGRAM):   end;
42173     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   else do;
42174     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
42175     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
42176     +end;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
42177     +else do;
MPRINT(EM_DIAGRAM):   end;
42178     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
42179     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
42180     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
42181     +   end;
MPRINT(EM_DIAGRAM):   end;
42182     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
42183     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
42184     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
42185     +   end;
MPRINT(EM_DIAGRAM):   end;
42186     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
42187     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 23.6383607789635 * H2x1_1 ;
42188     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.8845549880418 + P_DepVar1 ;
42189     +   end;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
42190     +end;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
42191     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
42192     +   P_DepVar1  =     23.6383607789635 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
42193     +   P_DepVar1  =    -12.8845549880418 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
42194     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
42195     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
42196     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
42197     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
42198     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   END;
42199     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
42200     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE DO;
42201     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
42202     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
42203     +END;
MPRINT(EM_DIAGRAM):   END;
42204     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
42205     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
42206     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   END;
42207     +END;
MPRINT(EM_DIAGRAM):   *** *****************************;
42208     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
42209     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   *** ******************************;
42210     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
42211     +END;
42212     +*** *****************************;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
42213     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
42214     +*** ******************************;
42215     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
42216     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
42217     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
42218     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
42219     +*** *************************;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
42220     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
42221     +*** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
42222     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
42223     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
42224     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   END;
42225     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   ********************************;
42226     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
42227     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   ********************************;
42228     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   drop S_:;
42229     +END;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural44;
42230     +********************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42231     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural44;
42232     +********************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42233     +drop S_:;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar1;
42234     +* Renaming variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar1 = P_DepVar1;
42235     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar0;
42236     +* Renaming Posterior variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar0 = P_DepVar0;
42237     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42238     +drop AutoNeural44_P_DepVar1;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural44;
42239     +AutoNeural44_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42240     +drop AutoNeural44_P_DepVar0;
42241     +AutoNeural44_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   length AutoNeural44_WARN_ $4;
42242     +*------------------------------------------------------------*;
42243     +* Renaming _WARN_ variable for AutoNeural44;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_WARN_;
42244     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   AutoNeural44_WARN_ = _WARN_;
42245     +length AutoNeural44_WARN_ $4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42246     +drop AutoNeural44_WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42247     +AutoNeural44_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
42248     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
42249     +* Ensmbl57: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural45;
42250     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42251     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
42252     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
42253     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   ***********************************;
42254     +* NODE: AutoNeural45;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
42255     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
42256     +***********************************;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
42257     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
42258     +***********************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
42259     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
42260     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
42261     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
42262     + _MAX_ = .;
42263     + _MAXP_ = .;
42264     + _SUM_ = .;
42265     + _NTRIALS = .;
42266     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
42267     +LENGTH _WARN_ $4
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
42268     +      F_DepVar  $ 12
42269     +;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
42270     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
42271     +
42272     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
42273     +
42274     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
42275     +
42276     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
42277     +
42278     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
42279     +
42280     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
42281     +
42282     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
42283     +
42284     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
42285     +
42286     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
42287     +
42288     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
42289     +
42290     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
42291     +
42292     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
42293     +
42294     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
42295     +
42296     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
42297     +
42298     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
42299     +
42300     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
42301     +
42302     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
42303     +
42304     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
42305     +
42306     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
42307     +
42308     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
42309     +
42310     +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
42311     +
42312     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
42313     +
42314     +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
42315     +
42316     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
42317     +
42318     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
42319     +
42320     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
42321     +
42322     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
42323     +
42324     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
42325     +
42326     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
42327     +
42328     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
42329     +
42330     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
42331     +
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
42332     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
42333     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
42334     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
42335     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
42336     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
42337     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
42338     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
42339     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
42340     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
42341     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42342     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
42343     +   Marital_StatusSingle = .;
42344     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   else do;
42345     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
42346     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
42347     +end;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
42348     +else do;
42349     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(DMNORMIP):   call dmnorm(_dm8,
42350     +   _dm8 = put( Marital_Status , $8. );
42351     +   %DMNORMIP( _dm8 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
42352     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42353     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
42354     +      if _dm8 <= 'MARRIED'  then do;
42355     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   else do;
42356     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
42357     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
42358     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42359     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
42360     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   end;
42361     +               Marital_StatusMarried = 1;
42362     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
42363     +            end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
42364     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
42365     +      end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42366     +      else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
42367     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
42368     +            Marital_StatusSingle = 1;
42369     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
42370     +         end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
42371     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
42372     +   end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42373     +   else do;
MPRINT(EM_DIAGRAM):   end;
42374     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   else do;
42375     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
42376     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
42377     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
42378     +      else do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
42379     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42380     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   end;
42381     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   end;
42382     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   end;
42383     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
42384     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
42385     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
42386     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
42387     +   end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
42388     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42389     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42390     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
42391     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   end;
42392     +      Marital_StatusTogether = .;
42393     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** *************************;
42394     +      _DM_BAD = 1;
42395     +   end;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
42396     +end;
42397     +
42398     +*** *************************;
42399     +*** Checking missing input Interval
42400     +*** *************************;
42401     +
42402     +IF NMISS(
42403     +   AcceptedCmpTotal ,
42404     +   Frq ,
42405     +   Income ,
42406     +   Mnt ,
42407     +   MntGoldProds ,
42408     +   MntMeatProducts ,
42409     +   NumCatalogPurchases ,
42410     +   NumDealsPurchases ,
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , Recency , Teenhome , Year_Birth ) THEN DO;
42411     +   NumWebVisitsMonth ,
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
42412     +   RFMstat ,
42413     +   Recency ,
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42414     +   Teenhome ,
MPRINT(EM_DIAGRAM):   END;
42415     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   *** *************************;
42416     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
42417     +
MPRINT(EM_DIAGRAM):   *** *************************;
42418     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
42419     +END;
42420     +*** *************************;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
42421     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
42422     +*** *************************;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
42423     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
42424     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
42425     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
42426     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
42427     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
42428     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
42429     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
42430     +        MntGoldProds ;
42431     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
42432     +        MntMeatProducts ;
42433     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
42434     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
42435     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
42436     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
42437     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
42438     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   END;
42439     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
42440     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE DO;
42441     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
42442     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
42443     +END;
42444     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
42445     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
42446     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
42447     +        AcceptedCmpTotal ;
42448     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
42449     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
42450     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
42451     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
42452     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
42453     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
42454     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
42455     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
42456     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
42457     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
42458     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
42459     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
42460     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
42461     +   ELSE S_NumCatalogPurchases
42462     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
42463     +         ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
42464     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
42465     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
42466     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
42467     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
42468     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
42469     +        NumWebVisitsMonth ;
42470     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
42471     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
42472     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
42473     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
42474     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
42475     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   END;
42476     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
42477     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** *************************;
42478     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   *** *************************;
42479     +END;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
42480     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42481     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
42482     +*** *************************;
42483     +*** *************************;
42484     +*** Writing the Node H1x1_ ;
42485     +*** *************************;
42486     +IF _DM_BAD EQ 0 THEN DO;
42487     +   H1x1_1  =     0.05803258857677 * S_AcceptedCmpTotal
42488     +          +     0.20201401677737 * S_Frq  +    -0.20060721007078 * S_Income
42489     +          +     0.60811032155087 * S_Mnt  +     0.01308658928857 *
42490     +        S_MntGoldProds  +    -0.32543222756203 * S_MntMeatProducts
42491     +          +    -0.17075976331442 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.05803258857677 * S_AcceptedCmpTotal + 0.20201401677737 * S_Frq + -0.20060721007078 * S_Income + 0.60811032155087 * S_Mnt + 0.01308658928857 * S_MntGoldProds + -0.32543222756203 * S_MntMeatProducts + -0.17075976331442 * 
S_NumCatalogPurchases + 0.11936859656737 * S_NumDealsPurchases + -0.02241344557322 * S_NumWebVisitsMonth + -0.00310652561662 * S_RFMstat + -0.02230175002754 * S_Recency + 0.15041197329983 * S_Teenhome + 0.08314198987289 * S_Year_Birth ;
42492     +          +     0.11936859656737 * S_NumDealsPurchases
42493     +          +    -0.02241344557322 * S_NumWebVisitsMonth
42494     +          +    -0.00310652561662 * S_RFMstat  +    -0.02230175002754 *
42495     +        S_Recency  +     0.15041197329983 * S_Teenhome
42496     +          +     0.08314198987289 * S_Year_Birth ;
42497     +   H1x1_2  =    -0.00804143026158 * S_AcceptedCmpTotal
42498     +          +     0.27782411169423 * S_Frq  +    -0.09048435288173 * S_Income
42499     +          +    -0.33276938238431 * S_Mnt  +     0.04318269159154 *
42500     +        S_MntGoldProds  +     -2.0876028997983 * S_MntMeatProducts
42501     +          +     -0.1082096588215 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.00804143026158 * S_AcceptedCmpTotal + 0.27782411169423 * S_Frq + -0.09048435288173 * S_Income + -0.33276938238431 * S_Mnt + 0.04318269159154 * S_MntGoldProds + -2.0876028997983 * S_MntMeatProducts + -0.1082096588215 * 
S_NumCatalogPurchases + -0.35286072202398 * S_NumDealsPurchases + 0.41909763538671 * S_NumWebVisitsMonth + -0.00388254493812 * S_RFMstat + -0.25572729223699 * S_Recency + 0.03657184300378 * S_Teenhome + -0.16144911909057 * S_Year_Birth ;
42502     +          +    -0.35286072202398 * S_NumDealsPurchases
42503     +          +     0.41909763538671 * S_NumWebVisitsMonth
42504     +          +    -0.00388254493812 * S_RFMstat  +    -0.25572729223699 *
42505     +        S_Recency  +     0.03657184300378 * S_Teenhome
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.14329179496615 * Marital_StatusDivorced + 0.35890266446407 * Marital_StatusMarried + -0.32958224268654 * Marital_StatusSingle + 0.26093411772209 * Marital_StatusTogether ;
42506     +          +    -0.16144911909057 * S_Year_Birth ;
42507     +   H1x1_1  = H1x1_1  +    -0.14329179496615 * Marital_StatusDivorced
42508     +          +     0.35890266446407 * Marital_StatusMarried
42509     +          +    -0.32958224268654 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.31162998470604 * Marital_StatusDivorced + -0.02828904025667 * Marital_StatusMarried + 0.2062300465945 * Marital_StatusSingle + -0.11283173230117 * Marital_StatusTogether ;
42510     +          +     0.26093411772209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.22625757706844 + H1x1_1 ;
42511     +   H1x1_2  = H1x1_2  +     0.31162998470604 * Marital_StatusDivorced
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.80839017705591 + H1x1_2 ;
42512     +          +    -0.02828904025667 * Marital_StatusMarried
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
42513     +          +      0.2062300465945 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
42514     +          +    -0.11283173230117 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
42515     +   H1x1_1  =     0.22625757706844 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
42516     +   H1x1_2  =    -2.80839017705591 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   END;
42517     +   DROP _EXP_BAR;
42518     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   ELSE DO;
42519     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
42520     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
42521     +END;
MPRINT(EM_DIAGRAM):   END;
42522     +ELSE DO;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
42523     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
42524     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
42525     +END;
42526     +*** *************************;
42527     +*** Writing the Node H1x2_ ;
42528     +*** *************************;
42529     +IF _DM_BAD EQ 0 THEN DO;
42530     +   H1x2_1  =     0.27800214153202 * S_AcceptedCmpTotal
42531     +          +     0.25771103125393 * S_Frq  +     0.06540858611057 * S_Income
42532     +          +     0.88062167564978 * S_Mnt  +    -0.03352879166216 *
42533     +        S_MntGoldProds  +    -0.36438303456911 * S_MntMeatProducts
42534     +          +    -0.01120232190428 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27800214153202 * S_AcceptedCmpTotal + 0.25771103125393 * S_Frq + 0.06540858611057 * S_Income + 0.88062167564978 * S_Mnt + -0.03352879166216 * S_MntGoldProds + -0.36438303456911 * S_MntMeatProducts + -0.01120232190428 * 
S_NumCatalogPurchases + 0.08335061407191 * S_NumDealsPurchases + 0.19045617784308 * S_NumWebVisitsMonth + -0.06814497340743 * S_RFMstat + -0.3861487824541 * S_Recency + -0.01223664611486 * S_Teenhome + 0.11830416426236 * S_Year_Birth ;
42535     +          +     0.08335061407191 * S_NumDealsPurchases
42536     +          +     0.19045617784308 * S_NumWebVisitsMonth
42537     +          +    -0.06814497340743 * S_RFMstat  +     -0.3861487824541 *
42538     +        S_Recency  +    -0.01223664611486 * S_Teenhome
42539     +          +     0.11830416426236 * S_Year_Birth ;
42540     +   H1x2_2  =     0.00966586432047 * S_AcceptedCmpTotal
42541     +          +    -0.15805213020363 * S_Frq  +    -0.10704590641296 * S_Income
42542     +          +    -0.22835348335472 * S_Mnt  +     0.04216459566963 *
42543     +        S_MntGoldProds  +     0.12105776304851 * S_MntMeatProducts
42544     +          +     0.05405710367459 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.00966586432047 * S_AcceptedCmpTotal + -0.15805213020363 * S_Frq + -0.10704590641296 * S_Income + -0.22835348335472 * S_Mnt + 0.04216459566963 * S_MntGoldProds + 0.12105776304851 * S_MntMeatProducts + 0.05405710367459 * 
S_NumCatalogPurchases + 0.05779108423435 * S_NumDealsPurchases + 0.06578830114376 * S_NumWebVisitsMonth + 0.03581918113264 * S_RFMstat + -0.03493380943266 * S_Recency + 0.07188455936346 * S_Teenhome + -0.01037640411629 * S_Year_Birth ;
42545     +          +     0.05779108423435 * S_NumDealsPurchases
42546     +          +     0.06578830114376 * S_NumWebVisitsMonth
42547     +          +     0.03581918113264 * S_RFMstat  +    -0.03493380943266 *
42548     +        S_Recency  +     0.07188455936346 * S_Teenhome
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.11011761565852 * Marital_StatusDivorced + -0.0971208757038 * Marital_StatusMarried + -0.07250288479873 * Marital_StatusSingle + -0.09370040203357 * Marital_StatusTogether ;
42549     +          +    -0.01037640411629 * S_Year_Birth ;
42550     +   H1x2_1  = H1x2_1  +    -0.11011761565852 * Marital_StatusDivorced
42551     +          +     -0.0971208757038 * Marital_StatusMarried
42552     +          +    -0.07250288479873 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.00981909678131 * Marital_StatusDivorced + 0.21091057941446 * Marital_StatusMarried + -0.10578923343752 * Marital_StatusSingle + 0.14340624257864 * Marital_StatusTogether ;
42553     +          +    -0.09370040203357 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.44195571181963 + H1x2_1 ;
42554     +   H1x2_2  = H1x2_2  +     0.00981909678131 * Marital_StatusDivorced
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.92908634775882 + H1x2_2 ;
42555     +          +     0.21091057941446 * Marital_StatusMarried
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
42556     +          +    -0.10578923343752 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
42557     +          +     0.14340624257864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
42558     +   H1x2_1  =    -1.44195571181963 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
42559     +   H1x2_2  =    -1.92908634775882 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   END;
42560     +   DROP _EXP_BAR;
42561     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   ELSE DO;
42562     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
42563     +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
42564     +END;
MPRINT(EM_DIAGRAM):   END;
42565     +ELSE DO;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
42566     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
42567     +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
42568     +END;
MPRINT(EM_DIAGRAM):   H2x1_1 = 22.0923538262076 * H1x1_1 + 8.31949814946749 * H1x1_2 ;
42569     +*** *************************;
42570     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -17.2128148948815 * H1x2_1 + -68.7975539209644 * H1x2_2 ;
42571     +*** *************************;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.74489671021313 + H2x1_1 ;
42572     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0;
42573     +   H2x1_1  =     22.0923538262076 * H1x1_1  +     8.31949814946749 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 );
42574     +   H2x1_1  = H2x1_1  +    -17.2128148948815 * H1x2_1
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
42575     +          +    -68.7975539209644 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
42576     +   H2x1_1  =    -0.74489671021313 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
42577     +   H2x1_2  = 0;
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
42578     +   _MAX_ = MAX (H2x1_1 , H2x1_2 );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
42579     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
42580     +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
42581     +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   END;
42582     +   H2x1_2  = EXP(H2x1_2  - _MAX_);
42583     +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   ELSE DO;
42584     +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
42585     +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
42586     +END;
MPRINT(EM_DIAGRAM):   END;
42587     +ELSE DO;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
42588     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
42589     +   H2x1_2  = .;
42590     +END;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
42591     +*** *************************;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
42592     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
42593     +*** *************************;
42594     +
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
42595     +*** Generate dummy variables for DepVar ;
42596     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
42597     +label F_DepVar = 'From: DepVar' ;
42598     +length F_DepVar $ 12;
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
42599     +F_DepVar = put( DepVar , BEST. );
42600     +%DMNORMIP( F_DepVar )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
MPRINT(EM_DIAGRAM):   end;
42601     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   else do;
42602     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
42603     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
42604     +end;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
42605     +else do;
MPRINT(EM_DIAGRAM):   end;
42606     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
42607     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
42608     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
42609     +   end;
MPRINT(EM_DIAGRAM):   end;
42610     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
42611     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
42612     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
42613     +   end;
MPRINT(EM_DIAGRAM):   end;
42614     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
42615     +      DepVar1 = .;
42616     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -142.808746328345 * H2x1_1 + -41.474410437113 * H2x1_2 ;
42617     +   end;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 56.9415259403341 + P_DepVar1 ;
42618     +end;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
42619     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
42620     +   P_DepVar1  =    -142.808746328345 * H2x1_1  +     -41.474410437113 * H2x1_2
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
42621     +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
42622     +   P_DepVar1  =     56.9415259403341 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
42623     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
42624     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
42625     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
42626     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
42627     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   END;
42628     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
42629     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE DO;
42630     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
42631     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
42632     +END;
MPRINT(EM_DIAGRAM):   END;
42633     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
42634     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
42635     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   END;
42636     +END;
MPRINT(EM_DIAGRAM):   *** *****************************;
42637     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
42638     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   *** ******************************;
42639     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
42640     +END;
42641     +*** *****************************;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
42642     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
42643     +*** ******************************;
42644     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
42645     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
42646     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
42647     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
42648     +*** *************************;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
42649     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
42650     +*** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
42651     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
42652     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
42653     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   END;
42654     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   ********************************;
42655     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
42656     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   ********************************;
42657     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   drop S_:;
42658     +END;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural45;
42659     +********************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42660     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural45;
42661     +********************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42662     +drop S_:;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar1;
42663     +* Renaming variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar1 = P_DepVar1;
42664     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar0;
42665     +* Renaming Posterior variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar0 = P_DepVar0;
42666     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42667     +drop AutoNeural45_P_DepVar1;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural45;
42668     +AutoNeural45_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42669     +drop AutoNeural45_P_DepVar0;
42670     +AutoNeural45_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   length AutoNeural45_WARN_ $4;
42671     +*------------------------------------------------------------*;
42672     +* Renaming _WARN_ variable for AutoNeural45;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_WARN_;
42673     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   AutoNeural45_WARN_ = _WARN_;
42674     +length AutoNeural45_WARN_ $4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42675     +drop AutoNeural45_WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42676     +AutoNeural45_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
42677     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
42678     +* Ensmbl57: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural47;
42679     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42680     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
42681     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
42682     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   ***********************************;
42683     +* NODE: AutoNeural47;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
42684     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
42685     +***********************************;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
42686     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
42687     +***********************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
42688     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
42689     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
42690     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
42691     + _MAX_ = .;
42692     + _MAXP_ = .;
42693     + _SUM_ = .;
42694     + _NTRIALS = .;
42695     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
42696     +LENGTH _WARN_ $4
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
42697     +      F_DepVar  $ 12
42698     +;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
42699     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
42700     +
42701     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
42702     +
42703     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
42704     +
42705     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
42706     +
42707     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
42708     +
42709     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
42710     +
42711     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
42712     +
42713     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
42714     +
42715     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
42716     +
42717     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
42718     +
42719     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
42720     +
42721     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
42722     +
42723     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
42724     +
42725     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
42726     +
42727     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
42728     +
42729     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
42730     +
42731     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
42732     +
42733     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
42734     +
42735     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
42736     +
42737     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
42738     +
42739     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
42740     +
42741     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
42742     +
42743     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
42744     +
42745     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
42746     +
42747     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
42748     +
42749     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
42750     +
42751     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
42752     +
42753     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
42754     +
42755     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
42756     +
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
42757     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
42758     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
42759     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
42760     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
42761     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
42762     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
42763     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
42764     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
42765     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
42766     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42767     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
42768     +   Marital_StatusSingle = .;
42769     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   else do;
42770     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
42771     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
42772     +end;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
42773     +else do;
42774     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(DMNORMIP):   call dmnorm(_dm8,
42775     +   _dm8 = put( Marital_Status , $8. );
42776     +   %DMNORMIP( _dm8 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
42777     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42778     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
42779     +      if _dm8 <= 'MARRIED'  then do;
42780     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   else do;
42781     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
42782     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
42783     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42784     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
42785     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   end;
42786     +               Marital_StatusMarried = 1;
42787     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
42788     +            end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
42789     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
42790     +      end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42791     +      else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
42792     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
42793     +            Marital_StatusSingle = 1;
42794     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
42795     +         end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
42796     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
42797     +   end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42798     +   else do;
MPRINT(EM_DIAGRAM):   end;
42799     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   else do;
42800     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
42801     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
42802     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
42803     +      else do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
42804     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42805     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   end;
42806     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   end;
42807     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   end;
42808     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
42809     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
42810     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
42811     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
42812     +   end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
42813     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42814     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42815     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
42816     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   end;
42817     +      Marital_StatusTogether = .;
42818     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** *************************;
42819     +      _DM_BAD = 1;
42820     +   end;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
42821     +end;
42822     +
42823     +*** *************************;
42824     +*** Checking missing input Interval
42825     +*** *************************;
42826     +
42827     +IF NMISS(
42828     +   AcceptedCmpTotal ,
42829     +   Frq ,
42830     +   Income ,
42831     +   Mnt ,
42832     +   MntGoldProds ,
42833     +   MntMeatProducts ,
42834     +   NumCatalogPurchases ,
42835     +   NumDealsPurchases ,
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , Recency , Teenhome , Year_Birth ) THEN DO;
42836     +   NumWebVisitsMonth ,
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
42837     +   RFMstat ,
42838     +   Recency ,
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42839     +   Teenhome ,
MPRINT(EM_DIAGRAM):   END;
42840     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   *** *************************;
42841     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
42842     +
MPRINT(EM_DIAGRAM):   *** *************************;
42843     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
42844     +END;
42845     +*** *************************;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
42846     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
42847     +*** *************************;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
42848     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
42849     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
42850     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
42851     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
42852     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
42853     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
42854     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
42855     +        MntGoldProds ;
42856     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
42857     +        MntMeatProducts ;
42858     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
42859     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
42860     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
42861     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
42862     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
42863     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   END;
42864     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
42865     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE DO;
42866     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
42867     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
42868     +END;
42869     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
42870     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
42871     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
42872     +        AcceptedCmpTotal ;
42873     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
42874     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
42875     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
42876     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
42877     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
42878     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
42879     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
42880     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
42881     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
42882     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
42883     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
42884     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
42885     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
42886     +   ELSE S_NumCatalogPurchases
42887     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
42888     +         ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
42889     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
42890     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
42891     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
42892     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
42893     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
42894     +        NumWebVisitsMonth ;
42895     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
42896     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
42897     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
42898     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
42899     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
42900     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   END;
42901     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
42902     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** *************************;
42903     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   *** *************************;
42904     +END;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
42905     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42906     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
42907     +*** *************************;
42908     +*** *************************;
42909     +*** Writing the Node H1x1_ ;
42910     +*** *************************;
42911     +IF _DM_BAD EQ 0 THEN DO;
42912     +   H1x1_1  =      1.3507655650527 * S_AcceptedCmpTotal
42913     +          +    -1.10614122240879 * S_Frq  +     1.75303764660855 * S_Income
42914     +          +    -3.36358487853209 * S_Mnt  +     0.66482370197508 *
42915     +        S_MntGoldProds  +     2.20380795880989 * S_MntMeatProducts
42916     +          +     0.96941096546276 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.3507655650527 * S_AcceptedCmpTotal + -1.10614122240879 * S_Frq + 1.75303764660855 * S_Income + -3.36358487853209 * S_Mnt + 0.66482370197508 * S_MntGoldProds + 2.20380795880989 * S_MntMeatProducts + 0.96941096546276 * 
S_NumCatalogPurchases + -0.78169009272221 * S_NumDealsPurchases + 2.46694552614806 * S_NumWebVisitsMonth + -0.70379796230966 * S_RFMstat + -2.91060571548081 * S_Recency + -1.09760548427625 * S_Teenhome + -0.04996948842393 * S_Year_Birth ;
42917     +          +    -0.78169009272221 * S_NumDealsPurchases
42918     +          +     2.46694552614806 * S_NumWebVisitsMonth
42919     +          +    -0.70379796230966 * S_RFMstat  +    -2.91060571548081 *
42920     +        S_Recency  +    -1.09760548427625 * S_Teenhome
42921     +          +    -0.04996948842393 * S_Year_Birth ;
42922     +   H1x1_2  =    -0.31908942522077 * S_AcceptedCmpTotal
42923     +          +     3.74791296051726 * S_Frq  +     2.24284839751303 * S_Income
42924     +          +    -1.78405040388815 * S_Mnt  +      0.8742942749026 *
42925     +        S_MntGoldProds  +    -0.14368654003355 * S_MntMeatProducts
42926     +          +    -2.01779739147185 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31908942522077 * S_AcceptedCmpTotal + 3.74791296051726 * S_Frq + 2.24284839751303 * S_Income + -1.78405040388815 * S_Mnt + 0.8742942749026 * S_MntGoldProds + -0.14368654003355 * S_MntMeatProducts + -2.01779739147185 * 
S_NumCatalogPurchases + -2.6507470301089 * S_NumDealsPurchases + 0.43757499676531 * S_NumWebVisitsMonth + -1.37847156147455 * S_RFMstat + -0.69576523519337 * S_Recency + -0.45321912120397 * S_Teenhome + 0.52676912620048 * S_Year_Birth ;
42927     +          +     -2.6507470301089 * S_NumDealsPurchases
42928     +          +     0.43757499676531 * S_NumWebVisitsMonth
42929     +          +    -1.37847156147455 * S_RFMstat  +    -0.69576523519337 *
42930     +        S_Recency  +    -0.45321912120397 * S_Teenhome
42931     +          +     0.52676912620048 * S_Year_Birth ;
42932     +   H1x1_3  =     2.41023196591392 * S_AcceptedCmpTotal
42933     +          +    -2.36084733932675 * S_Frq  +     1.24213632619464 * S_Income
42934     +          +    -1.85110475917758 * S_Mnt  +    -0.28004157450889 *
42935     +        S_MntGoldProds  +     2.40469717841771 * S_MntMeatProducts
42936     +          +      3.9474982958259 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.41023196591392 * S_AcceptedCmpTotal + -2.36084733932675 * S_Frq + 1.24213632619464 * S_Income + -1.85110475917758 * S_Mnt + -0.28004157450889 * S_MntGoldProds + 2.40469717841771 * S_MntMeatProducts + 3.9474982958259 * 
S_NumCatalogPurchases + 0.376468804707 * S_NumDealsPurchases + 3.31501013882439 * S_NumWebVisitsMonth + 0.11559780336909 * S_RFMstat + -4.25267693921008 * S_Recency + -1.57729700618019 * S_Teenhome + 0.1824973506119 * S_Year_Birth ;
42937     +          +       0.376468804707 * S_NumDealsPurchases
42938     +          +     3.31501013882439 * S_NumWebVisitsMonth
42939     +          +     0.11559780336909 * S_RFMstat  +    -4.25267693921008 *
42940     +        S_Recency  +    -1.57729700618019 * S_Teenhome
42941     +          +      0.1824973506119 * S_Year_Birth ;
42942     +   H1x1_4  =     -0.2757766975278 * S_AcceptedCmpTotal
42943     +          +     3.82725387338192 * S_Frq  +      -0.761164420496 * S_Income
42944     +          +    -1.14207863171921 * S_Mnt  +     -0.1745335405903 *
42945     +        S_MntGoldProds  +    -5.79657274001258 * S_MntMeatProducts
42946     +          +    -1.47064436222345 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.2757766975278 * S_AcceptedCmpTotal + 3.82725387338192 * S_Frq + -0.761164420496 * S_Income + -1.14207863171921 * S_Mnt + -0.1745335405903 * S_MntGoldProds + -5.79657274001258 * S_MntMeatProducts + -1.47064436222345 * 
S_NumCatalogPurchases + -0.47773085529503 * S_NumDealsPurchases + 0.20028656323595 * S_NumWebVisitsMonth + -0.18383173425255 * S_RFMstat + 0.10522454853137 * S_Recency + -0.11530372179295 * S_Teenhome + -0.34167488644648 * S_Year_Birth ;
42947     +          +    -0.47773085529503 * S_NumDealsPurchases
42948     +          +     0.20028656323595 * S_NumWebVisitsMonth
42949     +          +    -0.18383173425255 * S_RFMstat  +     0.10522454853137 *
42950     +        S_Recency  +    -0.11530372179295 * S_Teenhome
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.48263364530339 * Marital_StatusDivorced + -1.68634246986018 * Marital_StatusMarried + 0.61674763327859 * Marital_StatusSingle + -1.26649958570453 * Marital_StatusTogether ;
42951     +          +    -0.34167488644648 * S_Year_Birth ;
42952     +   H1x1_1  = H1x1_1  +     1.48263364530339 * Marital_StatusDivorced
42953     +          +    -1.68634246986018 * Marital_StatusMarried
42954     +          +     0.61674763327859 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.03937964147637 * Marital_StatusDivorced + -0.63821523628652 * Marital_StatusMarried + -1.40431603473643 * Marital_StatusSingle + -0.20849152262706 * Marital_StatusTogether ;
42955     +          +    -1.26649958570453 * Marital_StatusTogether ;
42956     +   H1x1_2  = H1x1_2  +     1.03937964147637 * Marital_StatusDivorced
42957     +          +    -0.63821523628652 * Marital_StatusMarried
42958     +          +    -1.40431603473643 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00632006555267 * Marital_StatusDivorced + -2.86773035723606 * Marital_StatusMarried + 2.52900517550184 * Marital_StatusSingle + -3.34343954102751 * Marital_StatusTogether ;
42959     +          +    -0.20849152262706 * Marital_StatusTogether ;
42960     +   H1x1_3  = H1x1_3  +    -0.00632006555267 * Marital_StatusDivorced
42961     +          +    -2.86773035723606 * Marital_StatusMarried
42962     +          +     2.52900517550184 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.05620673245628 * Marital_StatusDivorced + -0.89880425714459 * Marital_StatusMarried + 0.97652284934456 * Marital_StatusSingle + -0.83414241747679 * Marital_StatusTogether ;
42963     +          +    -3.34343954102751 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.73505942586437 + H1x1_1 ;
42964     +   H1x1_4  = H1x1_4  +     0.05620673245628 * Marital_StatusDivorced
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.97401194500651 + H1x1_2 ;
42965     +          +    -0.89880425714459 * Marital_StatusMarried
MPRINT(EM_DIAGRAM):   H1x1_3 = -7.86049995366383 + H1x1_3 ;
42966     +          +     0.97652284934456 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.77808914097545 + H1x1_4 ;
42967     +          +    -0.83414241747679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
42968     +   H1x1_1  =    -0.73505942586437 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
42969     +   H1x1_2  =     2.97401194500651 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
42970     +   H1x1_3  =    -7.86049995366383 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
42971     +   H1x1_4  =    -3.77808914097545 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
42972     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
42973     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   END;
42974     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
42975     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   ELSE DO;
42976     +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
42977     +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
42978     +END;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
42979     +ELSE DO;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
MPRINT(EM_DIAGRAM):   END;
42980     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
42981     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
42982     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
42983     +   H1x1_4  = .;
42984     +END;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
42985     +*** *************************;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
42986     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
42987     +*** *************************;
42988     +
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
42989     +*** Generate dummy variables for DepVar ;
42990     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
42991     +label F_DepVar = 'From: DepVar' ;
42992     +length F_DepVar $ 12;
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
42993     +F_DepVar = put( DepVar , BEST. );
42994     +%DMNORMIP( F_DepVar )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
MPRINT(EM_DIAGRAM):   end;
42995     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   else do;
42996     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
42997     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
42998     +end;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
42999     +else do;
MPRINT(EM_DIAGRAM):   end;
43000     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
43001     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
43002     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
43003     +   end;
MPRINT(EM_DIAGRAM):   end;
43004     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
43005     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
43006     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
43007     +   end;
MPRINT(EM_DIAGRAM):   end;
43008     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
43009     +      DepVar1 = .;
43010     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1091261255058 * H1x1_1 + -15.4649724088409 * H1x1_2 + 14.2519883476498 * H1x1_3 + -25.0940711325771 * H1x1_4 ;
43011     +   end;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.7898064443713 + P_DepVar1 ;
43012     +end;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
43013     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
43014     +   P_DepVar1  =     17.1091261255058 * H1x1_1  +    -15.4649724088409 * H1x1_2
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
43015     +          +     14.2519883476498 * H1x1_3  +    -25.0940711325771 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
43016     +   P_DepVar1  =     -0.7898064443713 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
43017     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
43018     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
43019     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
43020     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
43021     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   END;
43022     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
43023     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE DO;
43024     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
43025     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
43026     +END;
MPRINT(EM_DIAGRAM):   END;
43027     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
43028     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
43029     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   END;
43030     +END;
MPRINT(EM_DIAGRAM):   *** *****************************;
43031     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
43032     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   *** ******************************;
43033     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
43034     +END;
43035     +*** *****************************;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
43036     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
43037     +*** ******************************;
43038     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
43039     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
43040     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
43041     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
43042     +*** *************************;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
43043     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
43044     +*** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
43045     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
43046     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
43047     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   END;
43048     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   ********************************;
43049     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
43050     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   ********************************;
43051     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   drop S_:;
43052     +END;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural47;
43053     +********************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43054     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural47;
43055     +********************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43056     +drop S_:;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar1;
43057     +* Renaming variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar1 = P_DepVar1;
43058     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar0;
43059     +* Renaming Posterior variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar0 = P_DepVar0;
43060     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43061     +drop AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural47;
43062     +AutoNeural47_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43063     +drop AutoNeural47_P_DepVar0;
43064     +AutoNeural47_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   length AutoNeural47_WARN_ $4;
43065     +*------------------------------------------------------------*;
43066     +* Renaming _WARN_ variable for AutoNeural47;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_WARN_;
43067     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   AutoNeural47_WARN_ = _WARN_;
43068     +length AutoNeural47_WARN_ $4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43069     +drop AutoNeural47_WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43070     +AutoNeural47_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
43071     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
43072     +* Ensmbl57: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural41;
43073     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43074     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
43075     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
43076     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   ***********************************;
43077     +* NODE: AutoNeural41;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
43078     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
43079     +***********************************;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
43080     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
43081     +***********************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
43082     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
43083     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
43084     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
43085     + _MAX_ = .;
43086     + _MAXP_ = .;
43087     + _SUM_ = .;
43088     + _NTRIALS = .;
43089     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
43090     +LENGTH _WARN_ $4
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
43091     +      F_DepVar  $ 12
43092     +;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
43093     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
43094     +
43095     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
43096     +
43097     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
43098     +
43099     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
43100     +
43101     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
43102     +
43103     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
43104     +
43105     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
43106     +
43107     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
43108     +
43109     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
43110     +
43111     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
43112     +
43113     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
43114     +
43115     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
43116     +
43117     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
43118     +
43119     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
43120     +
43121     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
43122     +
43123     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
43124     +
43125     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
43126     +
43127     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
43128     +
43129     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
43130     +
43131     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
43132     +
43133     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
43134     +
43135     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
43136     +
43137     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
43138     +
43139     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
43140     +
43141     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
43142     +
43143     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
43144     +
43145     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
43146     +
43147     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
43148     +
43149     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
43150     +
43151     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
43152     +
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
43153     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
43154     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
43155     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
43156     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
43157     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
43158     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
43159     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
43160     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
43161     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
43162     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43163     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
43164     +   Marital_StatusSingle = .;
43165     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   else do;
43166     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
43167     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
43168     +end;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
43169     +else do;
43170     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(DMNORMIP):   call dmnorm(_dm8,
43171     +   _dm8 = put( Marital_Status , $8. );
43172     +   %DMNORMIP( _dm8 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
43173     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
43174     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
43175     +      if _dm8 <= 'MARRIED'  then do;
43176     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   else do;
43177     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
43178     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
43179     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
43180     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
43181     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   end;
43182     +               Marital_StatusMarried = 1;
43183     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
43184     +            end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
43185     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
43186     +      end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
43187     +      else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
43188     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
43189     +            Marital_StatusSingle = 1;
43190     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
43191     +         end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
43192     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
43193     +   end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
43194     +   else do;
MPRINT(EM_DIAGRAM):   end;
43195     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   else do;
43196     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
43197     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
43198     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
43199     +      else do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
43200     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
43201     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   end;
43202     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   end;
43203     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   end;
43204     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
43205     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
43206     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
43207     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
43208     +   end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
43209     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
43210     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43211     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
43212     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   end;
43213     +      Marital_StatusTogether = .;
43214     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** *************************;
43215     +      _DM_BAD = 1;
43216     +   end;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
43217     +end;
43218     +
43219     +*** *************************;
43220     +*** Checking missing input Interval
43221     +*** *************************;
43222     +
43223     +IF NMISS(
43224     +   AcceptedCmpTotal ,
43225     +   Frq ,
43226     +   Income ,
43227     +   Mnt ,
43228     +   MntGoldProds ,
43229     +   MntMeatProducts ,
43230     +   NumCatalogPurchases ,
43231     +   NumDealsPurchases ,
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , Recency , Teenhome , Year_Birth ) THEN DO;
43232     +   NumWebVisitsMonth ,
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
43233     +   RFMstat ,
43234     +   Recency ,
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43235     +   Teenhome ,
MPRINT(EM_DIAGRAM):   END;
43236     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   *** *************************;
43237     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
43238     +
MPRINT(EM_DIAGRAM):   *** *************************;
43239     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
43240     +END;
43241     +*** *************************;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
43242     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
43243     +*** *************************;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
43244     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
43245     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
43246     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
43247     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
43248     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
43249     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
43250     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
43251     +        MntGoldProds ;
43252     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
43253     +        MntMeatProducts ;
43254     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
43255     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
43256     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
43257     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
43258     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
43259     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   END;
43260     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
43261     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE DO;
43262     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
43263     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
43264     +END;
43265     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
43266     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
43267     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
43268     +        AcceptedCmpTotal ;
43269     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
43270     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
43271     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
43272     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
43273     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
43274     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
43275     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
43276     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
43277     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
43278     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
43279     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
43280     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
43281     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
43282     +   ELSE S_NumCatalogPurchases
43283     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
43284     +         ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
43285     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
43286     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
43287     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
43288     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
43289     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
43290     +        NumWebVisitsMonth ;
43291     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
43292     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
43293     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
43294     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
43295     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
43296     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   END;
43297     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
43298     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** *************************;
43299     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   *** *************************;
43300     +END;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
43301     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
43302     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
43303     +*** *************************;
43304     +*** *************************;
43305     +*** Writing the Node H1x1_ ;
43306     +*** *************************;
43307     +IF _DM_BAD EQ 0 THEN DO;
43308     +   H1x1_1  =     0.27619305633764 * S_AcceptedCmpTotal
43309     +          +    -0.11236902682497 * S_Frq  +     0.02547336321659 * S_Income
43310     +          +     1.22594163788316 * S_Mnt  +    -0.13304067437519 *
43311     +        S_MntGoldProds  +    -0.25318386797622 * S_MntMeatProducts
43312     +          +     0.18813452089487 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27619305633764 * S_AcceptedCmpTotal + -0.11236902682497 * S_Frq + 0.02547336321659 * S_Income + 1.22594163788316 * S_Mnt + -0.13304067437519 * S_MntGoldProds + -0.25318386797622 * S_MntMeatProducts + 0.18813452089487 * 
S_NumCatalogPurchases + 0.07572009513796 * S_NumDealsPurchases + 0.26290613719398 * S_NumWebVisitsMonth + -0.07407700105008 * S_RFMstat + -0.42371914006256 * S_Recency + -0.08184869022013 * S_Teenhome + 0.01152140021328 * S_Year_Birth ;
43313     +          +     0.07572009513796 * S_NumDealsPurchases
43314     +          +     0.26290613719398 * S_NumWebVisitsMonth
43315     +          +    -0.07407700105008 * S_RFMstat  +    -0.42371914006256 *
43316     +        S_Recency  +    -0.08184869022013 * S_Teenhome
43317     +          +     0.01152140021328 * S_Year_Birth ;
43318     +   H1x1_2  =     0.10663705781144 * S_AcceptedCmpTotal
43319     +          +     -1.0540282734074 * S_Frq  +    -0.11987114679821 * S_Income
43320     +          +     0.64876951297444 * S_Mnt  +     0.19900484060335 *
43321     +        S_MntGoldProds  +     0.97085619241432 * S_MntMeatProducts
43322     +          +      0.3860900431806 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.10663705781144 * S_AcceptedCmpTotal + -1.0540282734074 * S_Frq + -0.11987114679821 * S_Income + 0.64876951297444 * S_Mnt + 0.19900484060335 * S_MntGoldProds + 0.97085619241432 * S_MntMeatProducts + 0.3860900431806 * 
S_NumCatalogPurchases + -0.05602869666287 * S_NumDealsPurchases + 0.25751125196672 * S_NumWebVisitsMonth + 0.02624606311455 * S_RFMstat + -0.13483172331925 * S_Recency + 0.00740928227007 * S_Teenhome + 0.00743631640493 * S_Year_Birth ;
43323     +          +    -0.05602869666287 * S_NumDealsPurchases
43324     +          +     0.25751125196672 * S_NumWebVisitsMonth
43325     +          +     0.02624606311455 * S_RFMstat  +    -0.13483172331925 *
43326     +        S_Recency  +     0.00740928227007 * S_Teenhome
43327     +          +     0.00743631640493 * S_Year_Birth ;
43328     +   H1x1_3  =     0.25721067351974 * S_AcceptedCmpTotal
43329     +          +    -0.86907357751772 * S_Frq  +    -0.08157123692791 * S_Income
43330     +          +     0.01248777269658 * S_Mnt  +     0.05157436079695 *
43331     +        S_MntGoldProds  +     0.77615263309304 * S_MntMeatProducts
43332     +          +     0.20017136343834 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.25721067351974 * S_AcceptedCmpTotal + -0.86907357751772 * S_Frq + -0.08157123692791 * S_Income + 0.01248777269658 * S_Mnt + 0.05157436079695 * S_MntGoldProds + 0.77615263309304 * S_MntMeatProducts + 0.20017136343834 * 
S_NumCatalogPurchases + 0.4177949842415 * S_NumDealsPurchases + 0.12267139708832 * S_NumWebVisitsMonth + -0.04813980569775 * S_RFMstat + -0.35935125476541 * S_Recency + -0.04165775695782 * S_Teenhome + -0.02142572027654 * S_Year_Birth ;
43333     +          +      0.4177949842415 * S_NumDealsPurchases
43334     +          +     0.12267139708832 * S_NumWebVisitsMonth
43335     +          +    -0.04813980569775 * S_RFMstat  +    -0.35935125476541 *
43336     +        S_Recency  +    -0.04165775695782 * S_Teenhome
43337     +          +    -0.02142572027654 * S_Year_Birth ;
43338     +   H1x1_4  =    -0.14554708768829 * S_AcceptedCmpTotal
43339     +          +     -0.0597172306674 * S_Frq  +    -0.28285875178634 * S_Income
43340     +          +     1.04591505007314 * S_Mnt  +     0.00461806901547 *
43341     +        S_MntGoldProds  +    -0.61862352433469 * S_MntMeatProducts
43342     +          +    -0.41475045310519 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14554708768829 * S_AcceptedCmpTotal + -0.0597172306674 * S_Frq + -0.28285875178634 * S_Income + 1.04591505007314 * S_Mnt + 0.00461806901547 * S_MntGoldProds + -0.61862352433469 * S_MntMeatProducts + -0.41475045310519 * 
S_NumCatalogPurchases + 0.05270183882345 * S_NumDealsPurchases + -0.3411138782759 * S_NumWebVisitsMonth + -0.06158026374803 * S_RFMstat + 0.33899005947536 * S_Recency + 0.09131411279492 * S_Teenhome + -0.00935201223775 * S_Year_Birth ;
43343     +          +     0.05270183882345 * S_NumDealsPurchases
43344     +          +     -0.3411138782759 * S_NumWebVisitsMonth
43345     +          +    -0.06158026374803 * S_RFMstat  +     0.33899005947536 *
43346     +        S_Recency  +     0.09131411279492 * S_Teenhome
43347     +          +    -0.00935201223775 * S_Year_Birth ;
43348     +   H1x1_5  =     0.19976617457438 * S_AcceptedCmpTotal
43349     +          +    -0.47746743016353 * S_Frq  +     0.16855808605754 * S_Income
43350     +          +    -0.87114248882356 * S_Mnt  +     0.16259754490995 *
43351     +        S_MntGoldProds  +     0.11590070773645 * S_MntMeatProducts
43352     +          +     0.28201604995327 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.19976617457438 * S_AcceptedCmpTotal + -0.47746743016353 * S_Frq + 0.16855808605754 * S_Income + -0.87114248882356 * S_Mnt + 0.16259754490995 * S_MntGoldProds + 0.11590070773645 * S_MntMeatProducts + 0.28201604995327 * 
S_NumCatalogPurchases + -0.0106712941301 * S_NumDealsPurchases + 0.44937825968958 * S_NumWebVisitsMonth + 0.00709750447129 * S_RFMstat + -0.47138460185175 * S_Recency + -0.07776231003236 * S_Teenhome + -0.02330056365233 * S_Year_Birth ;
43353     +          +     -0.0106712941301 * S_NumDealsPurchases
43354     +          +     0.44937825968958 * S_NumWebVisitsMonth
43355     +          +     0.00709750447129 * S_RFMstat  +    -0.47138460185175 *
43356     +        S_Recency  +    -0.07776231003236 * S_Teenhome
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.29133741090287 * Marital_StatusDivorced + -0.2248578245828 * Marital_StatusMarried + 0.07509958702397 * Marital_StatusSingle + -0.12991422082545 * Marital_StatusTogether ;
43357     +          +    -0.02330056365233 * S_Year_Birth ;
43358     +   H1x1_1  = H1x1_1  +    -0.29133741090287 * Marital_StatusDivorced
43359     +          +     -0.2248578245828 * Marital_StatusMarried
43360     +          +     0.07509958702397 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.1074732716993 * Marital_StatusDivorced + 0.45662921783631 * Marital_StatusMarried + -0.7587900494362 * Marital_StatusSingle + 0.91918379082777 * Marital_StatusTogether ;
43361     +          +    -0.12991422082545 * Marital_StatusTogether ;
43362     +   H1x1_2  = H1x1_2  +     -1.1074732716993 * Marital_StatusDivorced
43363     +          +     0.45662921783631 * Marital_StatusMarried
43364     +          +     -0.7587900494362 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00289956415432 * Marital_StatusDivorced + 0.48232640763102 * Marital_StatusMarried + -0.26767355443511 * Marital_StatusSingle + 0.26207298280723 * Marital_StatusTogether ;
43365     +          +     0.91918379082777 * Marital_StatusTogether ;
43366     +   H1x1_3  = H1x1_3  +    -0.00289956415432 * Marital_StatusDivorced
43367     +          +     0.48232640763102 * Marital_StatusMarried
43368     +          +    -0.26767355443511 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.33422568214247 * Marital_StatusDivorced + 0.692510056964 * Marital_StatusMarried + -0.62467969689335 * Marital_StatusSingle + 0.57377256791387 * Marital_StatusTogether ;
43369     +          +     0.26207298280723 * Marital_StatusTogether ;
43370     +   H1x1_4  = H1x1_4  +    -0.33422568214247 * Marital_StatusDivorced
43371     +          +       0.692510056964 * Marital_StatusMarried
43372     +          +    -0.62467969689335 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.08963617061236 * Marital_StatusDivorced + -0.12414433690654 * Marital_StatusMarried + 0.01287765001755 * Marital_StatusSingle + -0.08087882377532 * Marital_StatusTogether ;
43373     +          +     0.57377256791387 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91971008925725 + H1x1_1 ;
43374     +   H1x1_5  = H1x1_5  +     0.08963617061236 * Marital_StatusDivorced
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32368735038167 + H1x1_2 ;
43375     +          +    -0.12414433690654 * Marital_StatusMarried
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.01494899635831 + H1x1_3 ;
43376     +          +     0.01287765001755 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.37995275511318 + H1x1_4 ;
43377     +          +    -0.08087882377532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.85001953980369 + H1x1_5 ;
43378     +   H1x1_1  =    -1.91971008925725 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
43379     +   H1x1_2  =     0.32368735038167 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
43380     +   H1x1_3  =    -1.01494899635831 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
43381     +   H1x1_4  =     0.37995275511318 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
43382     +   H1x1_5  =     0.85001953980369 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
43383     +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   END;
43384     +   H1x1_2  = SIN(H1x1_2 );
43385     +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   ELSE DO;
43386     +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
43387     +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
43388     +END;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
43389     +ELSE DO;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
43390     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   END;
43391     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
43392     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
43393     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
43394     +   H1x1_5  = .;
43395     +END;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
43396     +*** *************************;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
43397     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
43398     +*** *************************;
43399     +
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
43400     +*** Generate dummy variables for DepVar ;
43401     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
43402     +label F_DepVar = 'From: DepVar' ;
43403     +length F_DepVar $ 12;
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
43404     +F_DepVar = put( DepVar , BEST. );
43405     +%DMNORMIP( F_DepVar )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
MPRINT(EM_DIAGRAM):   end;
43406     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   else do;
43407     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
43408     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
43409     +end;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
43410     +else do;
MPRINT(EM_DIAGRAM):   end;
43411     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
43412     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
43413     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
43414     +   end;
MPRINT(EM_DIAGRAM):   end;
43415     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
43416     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
43417     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
43418     +   end;
MPRINT(EM_DIAGRAM):   end;
43419     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
43420     +      DepVar1 = .;
43421     +      DepVar0 = .;
43422     +   end;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 70.1947351743048 * H1x1_1 + 37.5347968698288 * H1x1_2 + 63.5093925909107 * H1x1_3 + -88.4297436279603 * H1x1_4 + 56.9032773964405 * H1x1_5 ;
43423     +end;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 22.2427233048176 + P_DepVar1 ;
43424     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
43425     +   P_DepVar1  =     70.1947351743048 * H1x1_1  +     37.5347968698288 * H1x1_2
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
43426     +          +     63.5093925909107 * H1x1_3  +    -88.4297436279603 * H1x1_4
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
43427     +          +     56.9032773964405 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
43428     +   P_DepVar1  =     22.2427233048176 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
43429     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
43430     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
43431     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
43432     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
43433     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   END;
43434     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
43435     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE DO;
43436     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
43437     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
43438     +END;
MPRINT(EM_DIAGRAM):   END;
43439     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
43440     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
43441     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   END;
43442     +END;
MPRINT(EM_DIAGRAM):   *** *****************************;
43443     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
43444     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   *** ******************************;
43445     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
43446     +END;
43447     +*** *****************************;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
43448     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
43449     +*** ******************************;
43450     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
43451     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
43452     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
43453     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
43454     +*** *************************;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
43455     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
43456     +*** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
43457     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
43458     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
43459     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   END;
43460     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   ********************************;
43461     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
43462     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   ********************************;
43463     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   drop S_:;
43464     +END;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural41;
43465     +********************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43466     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural41;
43467     +********************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43468     +drop S_:;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar1;
43469     +* Renaming variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar1 = P_DepVar1;
43470     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar0;
43471     +* Renaming Posterior variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar0 = P_DepVar0;
43472     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43473     +drop AutoNeural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural41;
43474     +AutoNeural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43475     +drop AutoNeural41_P_DepVar0;
43476     +AutoNeural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   length AutoNeural41_WARN_ $4;
43477     +*------------------------------------------------------------*;
43478     +* Renaming _WARN_ variable for AutoNeural41;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_WARN_;
43479     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   AutoNeural41_WARN_ = _WARN_;
43480     +length AutoNeural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43481     +drop AutoNeural41_WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43482     +AutoNeural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
43483     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
43484     +* Ensmbl57: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural42;
43485     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43486     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
43487     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
43488     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   ***********************************;
43489     +* NODE: AutoNeural42;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
43490     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
43491     +***********************************;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
43492     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
43493     +***********************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
43494     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
43495     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
43496     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
43497     + _MAX_ = .;
43498     + _MAXP_ = .;
43499     + _SUM_ = .;
43500     + _NTRIALS = .;
43501     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
43502     +LENGTH _WARN_ $4
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
43503     +      F_DepVar  $ 12
43504     +;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
43505     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
43506     +
43507     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
43508     +
43509     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
43510     +
43511     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
43512     +
43513     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
43514     +
43515     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
43516     +
43517     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
43518     +
43519     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
43520     +
43521     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
43522     +
43523     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
43524     +
43525     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
43526     +
43527     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
43528     +
43529     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
43530     +
43531     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
43532     +
43533     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
43534     +
43535     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
43536     +
43537     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
43538     +
43539     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
43540     +
43541     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
43542     +
43543     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
43544     +
43545     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
43546     +
43547     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
43548     +
43549     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
43550     +
43551     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
43552     +
43553     +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
43554     +
43555     +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
43556     +
43557     +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
43558     +
43559     +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
43560     +
43561     +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
43562     +
43563     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
43564     +
43565     +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
43566     +
43567     +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
43568     +
43569     +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
43570     +
43571     +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
43572     +
43573     +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
43574     +
43575     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
43576     +
43577     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
43578     +
43579     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
43580     +
43581     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
43582     +
43583     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
43584     +
43585     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
43586     +
43587     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
43588     +
43589     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
43590     +
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
43591     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
43592     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
43593     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
43594     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
43595     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
43596     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
43597     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
43598     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
43599     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
43600     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43601     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
43602     +   Marital_StatusSingle = .;
43603     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   else do;
43604     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
43605     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
43606     +end;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
43607     +else do;
43608     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(DMNORMIP):   call dmnorm(_dm8,
43609     +   _dm8 = put( Marital_Status , $8. );
43610     +   %DMNORMIP( _dm8 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
43611     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
43612     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
43613     +      if _dm8 <= 'MARRIED'  then do;
43614     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   else do;
43615     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
43616     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
43617     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
43618     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
43619     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   end;
43620     +               Marital_StatusMarried = 1;
43621     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
43622     +            end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
43623     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
43624     +      end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
43625     +      else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
43626     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
43627     +            Marital_StatusSingle = 1;
43628     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
43629     +         end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
43630     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
43631     +   end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
43632     +   else do;
MPRINT(EM_DIAGRAM):   end;
43633     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   else do;
43634     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
43635     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
43636     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
43637     +      else do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
43638     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
43639     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   end;
43640     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   end;
43641     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   end;
43642     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
43643     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
43644     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
43645     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
43646     +   end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
43647     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
43648     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43649     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
43650     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   end;
43651     +      Marital_StatusTogether = .;
43652     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** *************************;
43653     +      _DM_BAD = 1;
43654     +   end;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
43655     +end;
43656     +
43657     +*** *************************;
43658     +*** Checking missing input Interval
43659     +*** *************************;
43660     +
43661     +IF NMISS(
43662     +   AcceptedCmpTotal ,
43663     +   Frq ,
43664     +   Income ,
43665     +   Mnt ,
43666     +   MntGoldProds ,
43667     +   MntMeatProducts ,
43668     +   NumCatalogPurchases ,
43669     +   NumDealsPurchases ,
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , Recency , Teenhome , Year_Birth ) THEN DO;
43670     +   NumWebVisitsMonth ,
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
43671     +   RFMstat ,
43672     +   Recency ,
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43673     +   Teenhome ,
MPRINT(EM_DIAGRAM):   END;
43674     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   *** *************************;
43675     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
43676     +
MPRINT(EM_DIAGRAM):   *** *************************;
43677     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
43678     +END;
43679     +*** *************************;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
43680     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
43681     +*** *************************;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
43682     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
43683     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
43684     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
43685     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
43686     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
43687     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
43688     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
43689     +        MntGoldProds ;
43690     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
43691     +        MntMeatProducts ;
43692     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
43693     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
43694     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
43695     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
43696     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
43697     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   END;
43698     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
43699     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE DO;
43700     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
43701     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
43702     +END;
43703     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
43704     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
43705     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
43706     +        AcceptedCmpTotal ;
43707     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
43708     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
43709     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
43710     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
43711     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
43712     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
43713     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
43714     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
43715     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
43716     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
43717     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
43718     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
43719     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
43720     +   ELSE S_NumCatalogPurchases
43721     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
43722     +         ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
43723     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
43724     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
43725     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
43726     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
43727     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
43728     +        NumWebVisitsMonth ;
43729     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
43730     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
43731     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
43732     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
43733     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
43734     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   END;
43735     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
43736     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** *************************;
43737     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   *** *************************;
43738     +END;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
43739     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
43740     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
43741     +*** *************************;
43742     +*** *************************;
43743     +*** Writing the Node H1x1_ ;
43744     +*** *************************;
43745     +IF _DM_BAD EQ 0 THEN DO;
43746     +   H1x1_1  =    -3.92905088817122 * S_AcceptedCmpTotal
43747     +          +    -4.76567955922662 * S_Frq  +    -3.20305851407308 * S_Income
43748     +          +     10.4290156082038 * S_Mnt  +     2.82139196372317 *
43749     +        S_MntGoldProds  +    -4.54749029525518 * S_MntMeatProducts
43750     +          +    -12.1201262560598 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.92905088817122 * S_AcceptedCmpTotal + -4.76567955922662 * S_Frq + -3.20305851407308 * S_Income + 10.4290156082038 * S_Mnt + 2.82139196372317 * S_MntGoldProds + -4.54749029525518 * S_MntMeatProducts + -12.1201262560598 * 
S_NumCatalogPurchases + -7.64265449386917 * S_NumDealsPurchases + -0.8154661733691 * S_NumWebVisitsMonth + -7.34275682075933 * S_RFMstat + 3.14025498790893 * S_Recency + 3.79010135100643 * S_Teenhome + -1.18831354068466 * S_Year_Birth ;
43751     +          +    -7.64265449386917 * S_NumDealsPurchases
43752     +          +     -0.8154661733691 * S_NumWebVisitsMonth
43753     +          +    -7.34275682075933 * S_RFMstat  +     3.14025498790893 *
43754     +        S_Recency  +     3.79010135100643 * S_Teenhome
43755     +          +    -1.18831354068466 * S_Year_Birth ;
43756     +   H1x1_2  =    -4.72019183577823 * S_AcceptedCmpTotal
43757     +          +     5.14902294151494 * S_Frq  +     -2.7967028726716 * S_Income
43758     +          +     7.90170532262596 * S_Mnt  +    -0.27896242131344 *
43759     +        S_MntGoldProds  +    -6.13177486713562 * S_MntMeatProducts
43760     +          +    -5.64377068696071 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_2 = -4.72019183577823 * S_AcceptedCmpTotal + 5.14902294151494 * S_Frq + -2.7967028726716 * S_Income + 7.90170532262596 * S_Mnt + -0.27896242131344 * S_MntGoldProds + -6.13177486713562 * S_MntMeatProducts + -5.64377068696071 * 
S_NumCatalogPurchases + 1.315880732417 * S_NumDealsPurchases + -7.12689902819995 * S_NumWebVisitsMonth + -0.1333171344564 * S_RFMstat + 8.57178329047956 * S_Recency + 2.42655161118896 * S_Teenhome + 0.41845495922131 * S_Year_Birth ;
43761     +          +       1.315880732417 * S_NumDealsPurchases
43762     +          +    -7.12689902819995 * S_NumWebVisitsMonth
43763     +          +     -0.1333171344564 * S_RFMstat  +     8.57178329047956 *
43764     +        S_Recency  +     2.42655161118896 * S_Teenhome
43765     +          +     0.41845495922131 * S_Year_Birth ;
43766     +   H1x1_3  =    -3.47660178529996 * S_AcceptedCmpTotal
43767     +          +     6.36750571377116 * S_Frq  +    -3.65638554203354 * S_Income
43768     +          +     5.03085244876136 * S_Mnt  +    -1.53184712146016 *
43769     +        S_MntGoldProds  +    -11.4803326240536 * S_MntMeatProducts
43770     +          +    -7.71653347900468 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.47660178529996 * S_AcceptedCmpTotal + 6.36750571377116 * S_Frq + -3.65638554203354 * S_Income + 5.03085244876136 * S_Mnt + -1.53184712146016 * S_MntGoldProds + -11.4803326240536 * S_MntMeatProducts + -7.71653347900468 * 
S_NumCatalogPurchases + -2.29382480020793 * S_NumDealsPurchases + -3.92350308032578 * S_NumWebVisitsMonth + 0.1666173174602 * S_RFMstat + 5.5545699438819 * S_Recency + 1.88830044274756 * S_Teenhome + 0.36177301880441 * S_Year_Birth ;
43771     +          +    -2.29382480020793 * S_NumDealsPurchases
43772     +          +    -3.92350308032578 * S_NumWebVisitsMonth
43773     +          +      0.1666173174602 * S_RFMstat  +      5.5545699438819 *
43774     +        S_Recency  +     1.88830044274756 * S_Teenhome
43775     +          +     0.36177301880441 * S_Year_Birth ;
43776     +   H1x1_4  =     3.46597508500309 * S_AcceptedCmpTotal
43777     +          +    -3.55913679518365 * S_Frq  +     -3.8279864380535 * S_Income
43778     +          +     4.37031319397754 * S_Mnt  +     0.25558899887189 *
43779     +        S_MntGoldProds  +     1.30937005137526 * S_MntMeatProducts
43780     +          +     0.50178849511862 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.46597508500309 * S_AcceptedCmpTotal + -3.55913679518365 * S_Frq + -3.8279864380535 * S_Income + 4.37031319397754 * S_Mnt + 0.25558899887189 * S_MntGoldProds + 1.30937005137526 * S_MntMeatProducts + 0.50178849511862 * 
S_NumCatalogPurchases + 3.33915340676542 * S_NumDealsPurchases + 2.99171363234904 * S_NumWebVisitsMonth + -1.10860117011224 * S_RFMstat + -5.2144291963152 * S_Recency + 1.84778865722952 * S_Teenhome + 1.48264084751626 * S_Year_Birth ;
43781     +          +     3.33915340676542 * S_NumDealsPurchases
43782     +          +     2.99171363234904 * S_NumWebVisitsMonth
43783     +          +    -1.10860117011224 * S_RFMstat  +     -5.2144291963152 *
43784     +        S_Recency  +     1.84778865722952 * S_Teenhome
43785     +          +     1.48264084751626 * S_Year_Birth ;
43786     +   H1x1_5  =    -3.28077802512331 * S_AcceptedCmpTotal
43787     +          +     3.26112701694144 * S_Frq  +    -3.51257256391539 * S_Income
43788     +          +     -13.277904245629 * S_Mnt  +    -0.08185099069039 *
43789     +        S_MntGoldProds  +      2.6349809613264 * S_MntMeatProducts
43790     +          +    -5.23430097842472 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.28077802512331 * S_AcceptedCmpTotal + 3.26112701694144 * S_Frq + -3.51257256391539 * S_Income + -13.277904245629 * S_Mnt + -0.08185099069039 * S_MntGoldProds + 2.6349809613264 * S_MntMeatProducts + -5.23430097842472 * 
S_NumCatalogPurchases + -1.25644862473488 * S_NumDealsPurchases + -3.0943337340276 * S_NumWebVisitsMonth + 0.96429102250453 * S_RFMstat + 4.60373013139143 * S_Recency + 1.52557456336148 * S_Teenhome + 0.00287578113165 * S_Year_Birth ;
43791     +          +    -1.25644862473488 * S_NumDealsPurchases
43792     +          +     -3.0943337340276 * S_NumWebVisitsMonth
43793     +          +     0.96429102250453 * S_RFMstat  +     4.60373013139143 *
43794     +        S_Recency  +     1.52557456336148 * S_Teenhome
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.77432710413329 * Marital_StatusDivorced + 5.12496303990022 * Marital_StatusMarried + -7.61364369696186 * Marital_StatusSingle + 2.78937374370395 * Marital_StatusTogether ;
43795     +          +     0.00287578113165 * S_Year_Birth ;
43796     +   H1x1_1  = H1x1_1  +     1.77432710413329 * Marital_StatusDivorced
43797     +          +     5.12496303990022 * Marital_StatusMarried
43798     +          +    -7.61364369696186 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -5.49070434381597 * Marital_StatusDivorced + 7.65332274940308 * Marital_StatusMarried + -5.13332947688313 * Marital_StatusSingle + 8.25159601985572 * Marital_StatusTogether ;
43799     +          +     2.78937374370395 * Marital_StatusTogether ;
43800     +   H1x1_2  = H1x1_2  +    -5.49070434381597 * Marital_StatusDivorced
43801     +          +     7.65332274940308 * Marital_StatusMarried
43802     +          +    -5.13332947688313 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.57910552070948 * Marital_StatusDivorced + 7.95162959069432 * Marital_StatusMarried + -6.10797604390061 * Marital_StatusSingle + 2.98577039618027 * Marital_StatusTogether ;
43803     +          +     8.25159601985572 * Marital_StatusTogether ;
43804     +   H1x1_3  = H1x1_3  +     1.57910552070948 * Marital_StatusDivorced
43805     +          +     7.95162959069432 * Marital_StatusMarried
43806     +          +    -6.10797604390061 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 3.65411081783958 * Marital_StatusDivorced + 5.45977621823616 * Marital_StatusMarried + -10.3527985391218 * Marital_StatusSingle + 4.66094015963389 * Marital_StatusTogether ;
43807     +          +     2.98577039618027 * Marital_StatusTogether ;
43808     +   H1x1_4  = H1x1_4  +     3.65411081783958 * Marital_StatusDivorced
43809     +          +     5.45977621823616 * Marital_StatusMarried
43810     +          +    -10.3527985391218 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.57864743151562 * Marital_StatusDivorced + 8.15909630638185 * Marital_StatusMarried + -5.88497367282032 * Marital_StatusSingle + 3.05474303626666 * Marital_StatusTogether ;
43811     +          +     4.66094015963389 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.55078746609233 + H1x1_1 ;
43812     +   H1x1_5  = H1x1_5  +     1.57864743151562 * Marital_StatusDivorced
MPRINT(EM_DIAGRAM):   H1x1_2 = 5.40474806112383 + H1x1_2 ;
43813     +          +     8.15909630638185 * Marital_StatusMarried
MPRINT(EM_DIAGRAM):   H1x1_3 = 11.2733164995662 + H1x1_3 ;
43814     +          +    -5.88497367282032 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.78487963966384 + H1x1_4 ;
43815     +          +     3.05474303626666 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.8784406873535 + H1x1_5 ;
43816     +   H1x1_1  =    -1.55078746609233 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
43817     +   H1x1_2  =     5.40474806112383 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
43818     +   H1x1_3  =     11.2733164995662 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
43819     +   H1x1_4  =    -7.78487963966384 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
43820     +   H1x1_5  =      3.8784406873535 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
43821     +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
43822     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
43823     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
43824     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
43825     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
43826     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
43827     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
43828     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
43829     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
43830     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
43831     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
43832     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
43833     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
43834     +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
43835     +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
43836     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
43837     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   END;
43838     +   H1x1_3  = H1x1_3  / _SUM_;
43839     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   ELSE DO;
43840     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
43841     +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
43842     +END;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
43843     +ELSE DO;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
43844     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
43845     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   END;
43846     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
43847     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
43848     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
43849     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
43850     +END;
43851     +*** *************************;
43852     +*** Writing the Node H1x2_ ;
43853     +*** *************************;
43854     +IF _DM_BAD EQ 0 THEN DO;
43855     +   H1x2_1  =     0.07453146398445 * S_AcceptedCmpTotal
43856     +          +     0.17438368465616 * S_Frq  +     0.97121905855093 * S_Income
43857     +          +    -0.15757686261675 * S_Mnt  +     0.28678754855648 *
43858     +        S_MntGoldProds  +     2.03999655184815 * S_MntMeatProducts
43859     +          +      0.8747576336553 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.07453146398445 * S_AcceptedCmpTotal + 0.17438368465616 * S_Frq + 0.97121905855093 * S_Income + -0.15757686261675 * S_Mnt + 0.28678754855648 * S_MntGoldProds + 2.03999655184815 * S_MntMeatProducts + 0.8747576336553 * 
S_NumCatalogPurchases + -0.23551985234916 * S_NumDealsPurchases + 0.83901499225112 * S_NumWebVisitsMonth + -0.7643570473353 * S_RFMstat + 0.0823609346051 * S_Recency + -0.38340703993831 * S_Teenhome + 1.16037573405943 * S_Year_Birth ;
43860     +          +    -0.23551985234916 * S_NumDealsPurchases
43861     +          +     0.83901499225112 * S_NumWebVisitsMonth
43862     +          +     -0.7643570473353 * S_RFMstat  +      0.0823609346051 *
43863     +        S_Recency  +    -0.38340703993831 * S_Teenhome
43864     +          +     1.16037573405943 * S_Year_Birth ;
43865     +   H1x2_2  =      -2.285017059996 * S_AcceptedCmpTotal
43866     +          +    -0.29646095672581 * S_Frq  +     -3.5024410668082 * S_Income
43867     +          +    -2.12091528193185 * S_Mnt  +    -1.48506012188621 *
43868     +        S_MntGoldProds  +    -1.38316375865608 * S_MntMeatProducts
43869     +          +    -0.99107054453387 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.285017059996 * S_AcceptedCmpTotal + -0.29646095672581 * S_Frq + -3.5024410668082 * S_Income + -2.12091528193185 * S_Mnt + -1.48506012188621 * S_MntGoldProds + -1.38316375865608 * S_MntMeatProducts + -0.99107054453387 * 
S_NumCatalogPurchases + -0.68379823410573 * S_NumDealsPurchases + -1.67939872609259 * S_NumWebVisitsMonth + 0.49106697429539 * S_RFMstat + -0.01117108974211 * S_Recency + -1.65033346710833 * S_Teenhome + -1.03897054098621 * S_Year_Birth ;
43870     +          +    -0.68379823410573 * S_NumDealsPurchases
43871     +          +    -1.67939872609259 * S_NumWebVisitsMonth
43872     +          +     0.49106697429539 * S_RFMstat  +    -0.01117108974211 *
43873     +        S_Recency  +    -1.65033346710833 * S_Teenhome
43874     +          +    -1.03897054098621 * S_Year_Birth ;
43875     +   H1x2_3  =      2.9562672276462 * S_AcceptedCmpTotal
43876     +          +    -0.19531439441895 * S_Frq  +      0.3125078734463 * S_Income
43877     +          +     -1.6099267525002 * S_Mnt  +    -0.36573328507463 *
43878     +        S_MntGoldProds  +     -0.3392853565114 * S_MntMeatProducts
43879     +          +      1.4506330104932 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.9562672276462 * S_AcceptedCmpTotal + -0.19531439441895 * S_Frq + 0.3125078734463 * S_Income + -1.6099267525002 * S_Mnt + -0.36573328507463 * S_MntGoldProds + -0.3392853565114 * S_MntMeatProducts + 1.4506330104932 * 
S_NumCatalogPurchases + 0.20085283861849 * S_NumDealsPurchases + 2.37974383924154 * S_NumWebVisitsMonth + -0.1106906484364 * S_RFMstat + -3.36701384866793 * S_Recency + 0.60726269989058 * S_Teenhome + 0.51474814816173 * S_Year_Birth ;
43880     +          +     0.20085283861849 * S_NumDealsPurchases
43881     +          +     2.37974383924154 * S_NumWebVisitsMonth
43882     +          +     -0.1106906484364 * S_RFMstat  +    -3.36701384866793 *
43883     +        S_Recency  +     0.60726269989058 * S_Teenhome
43884     +          +     0.51474814816173 * S_Year_Birth ;
43885     +   H1x2_4  =    -3.19375607611292 * S_AcceptedCmpTotal
43886     +          +    -1.28391627024222 * S_Frq  +     1.20886875907222 * S_Income
43887     +          +     0.33241907162962 * S_Mnt  +     0.81131852742978 *
43888     +        S_MntGoldProds  +     0.66955477854362 * S_MntMeatProducts
43889     +          +    -0.79952426911069 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x2_4 = -3.19375607611292 * S_AcceptedCmpTotal + -1.28391627024222 * S_Frq + 1.20886875907222 * S_Income + 0.33241907162962 * S_Mnt + 0.81131852742978 * S_MntGoldProds + 0.66955477854362 * S_MntMeatProducts + -0.79952426911069 * 
S_NumCatalogPurchases + -0.70571099772216 * S_NumDealsPurchases + -0.32158728049114 * S_NumWebVisitsMonth + -0.83126265863782 * S_RFMstat + 1.49830148501327 * S_Recency + 2.29389047813725 * S_Teenhome + 0.04615513391624 * S_Year_Birth ;
43890     +          +    -0.70571099772216 * S_NumDealsPurchases
43891     +          +    -0.32158728049114 * S_NumWebVisitsMonth
43892     +          +    -0.83126265863782 * S_RFMstat  +     1.49830148501327 *
43893     +        S_Recency  +     2.29389047813725 * S_Teenhome
43894     +          +     0.04615513391624 * S_Year_Birth ;
43895     +   H1x2_5  =     -0.6002425930451 * S_AcceptedCmpTotal
43896     +          +    -0.86762771301251 * S_Frq  +    -0.57793933969656 * S_Income
43897     +          +     0.41975808190408 * S_Mnt  +    -0.13242897225011 *
43898     +        S_MntGoldProds  +    -1.44402585881872 * S_MntMeatProducts
43899     +          +    -0.41491605544255 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.6002425930451 * S_AcceptedCmpTotal + -0.86762771301251 * S_Frq + -0.57793933969656 * S_Income + 0.41975808190408 * S_Mnt + -0.13242897225011 * S_MntGoldProds + -1.44402585881872 * S_MntMeatProducts + -0.41491605544255 * 
S_NumCatalogPurchases + 0.49374983047507 * S_NumDealsPurchases + -1.38692718220359 * S_NumWebVisitsMonth + -0.07580803465143 * S_RFMstat + 0.4152505934779 * S_Recency + 1.29605991841828 * S_Teenhome + 2.17160180088465 * S_Year_Birth ;
43900     +          +     0.49374983047507 * S_NumDealsPurchases
43901     +          +    -1.38692718220359 * S_NumWebVisitsMonth
43902     +          +    -0.07580803465143 * S_RFMstat  +      0.4152505934779 *
43903     +        S_Recency  +     1.29605991841828 * S_Teenhome
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.77674448865903 * Marital_StatusDivorced + -1.29227303709115 * Marital_StatusMarried + 0.71446782242025 * Marital_StatusSingle + 0.55295867102727 * Marital_StatusTogether ;
43904     +          +     2.17160180088465 * S_Year_Birth ;
43905     +   H1x2_1  = H1x2_1  +     0.77674448865903 * Marital_StatusDivorced
43906     +          +    -1.29227303709115 * Marital_StatusMarried
43907     +          +     0.71446782242025 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.1845223373129 * Marital_StatusDivorced + 2.0815223604364 * Marital_StatusMarried + 0.79462013188709 * Marital_StatusSingle + 0.20668835346022 * Marital_StatusTogether ;
43908     +          +     0.55295867102727 * Marital_StatusTogether ;
43909     +   H1x2_2  = H1x2_2  +     -0.1845223373129 * Marital_StatusDivorced
43910     +          +      2.0815223604364 * Marital_StatusMarried
43911     +          +     0.79462013188709 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.02774258915556 * Marital_StatusDivorced + 0.44769683627357 * Marital_StatusMarried + 1.09957357551209 * Marital_StatusSingle + 0.98246644516303 * Marital_StatusTogether ;
43912     +          +     0.20668835346022 * Marital_StatusTogether ;
43913     +   H1x2_3  = H1x2_3  +    -1.02774258915556 * Marital_StatusDivorced
43914     +          +     0.44769683627357 * Marital_StatusMarried
43915     +          +     1.09957357551209 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.02578628033933 * Marital_StatusDivorced + -0.71096069683657 * Marital_StatusMarried + -0.46849808497503 * Marital_StatusSingle + -0.50186472808298 * Marital_StatusTogether ;
43916     +          +     0.98246644516303 * Marital_StatusTogether ;
43917     +   H1x2_4  = H1x2_4  +     1.02578628033933 * Marital_StatusDivorced
43918     +          +    -0.71096069683657 * Marital_StatusMarried
43919     +          +    -0.46849808497503 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83514340443964 * Marital_StatusDivorced + 0.21000014809177 * Marital_StatusMarried + -1.05959388759825 * Marital_StatusSingle + -0.8202251717493 * Marital_StatusTogether ;
43920     +          +    -0.50186472808298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.66244588339698 + H1x2_1 ;
43921     +   H1x2_5  = H1x2_5  +     0.83514340443964 * Marital_StatusDivorced
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.36306484617725 + H1x2_2 ;
43922     +          +     0.21000014809177 * Marital_StatusMarried
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.00299288434405 + H1x2_3 ;
43923     +          +    -1.05959388759825 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.32206403734945 + H1x2_4 ;
43924     +          +     -0.8202251717493 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.48514364636978 + H1x2_5 ;
43925     +   H1x2_1  =     0.66244588339698 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
43926     +   H1x2_2  =     0.36306484617725 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
43927     +   H1x2_3  =     0.00299288434405 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
43928     +   H1x2_4  =     0.32206403734945 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
43929     +   H1x2_5  =     0.48514364636978 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
43930     +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
43931     +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
43932     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
43933     +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
43934     +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
43935     +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
43936     +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
43937     +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
43938     +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
43939     +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
43940     +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
43941     +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
43942     +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
43943     +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
43944     +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
43945     +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
43946     +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   END;
43947     +   H1x2_3  = H1x2_3  / _SUM_;
43948     +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   ELSE DO;
43949     +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
43950     +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
43951     +END;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
43952     +ELSE DO;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
43953     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
43954     +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   END;
43955     +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
43956     +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
43957     +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
43958     +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
43959     +END;
43960     +*** *************************;
43961     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 5.34062678932931 * H1x1_1 + 7.71604112891627 * H1x1_2 + 7.54377937186103 * H1x1_3 + -5.90943850663966 * H1x1_4 + -6.06522890475814 * H1x1_5 + -7.94470945127082 * H1x1_6 ;
43962     +*** *************************;
43963     +IF _DM_BAD EQ 0 THEN DO;
43964     +   H2x1_1  =     5.34062678932931 * H1x1_1  +     7.71604112891627 * H1x1_2
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.1479485803131 * H1x1_1 + 1.4482835893576 * H1x1_2 + -0.15220644394866 * H1x1_3 + -1.30000676790854 * H1x1_4 + -0.49333138568117 * H1x1_5 + -1.96124154717115 * H1x1_6 ;
43965     +          +     7.54377937186103 * H1x1_3  +    -5.90943850663966 * H1x1_4
43966     +          +    -6.06522890475814 * H1x1_5  +    -7.94470945127082 * H1x1_6 ;
43967     +   H2x1_2  =      1.1479485803131 * H1x1_1  +      1.4482835893576 * H1x1_2
MPRINT(EM_DIAGRAM):   H2x1_3 = 2.12915623251937 * H1x1_1 + 4.39530013559682 * H1x1_2 + 3.38050961443392 * H1x1_3 + -5.12182301645649 * H1x1_4 + -3.74697079524831 * H1x1_5 + -5.26174801543685 * H1x1_6 ;
43968     +          +    -0.15220644394866 * H1x1_3  +    -1.30000676790854 * H1x1_4
43969     +          +    -0.49333138568117 * H1x1_5  +    -1.96124154717115 * H1x1_6 ;
43970     +   H2x1_3  =     2.12915623251937 * H1x1_1  +     4.39530013559682 * H1x1_2
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.54854810712303 * H1x1_1 + 1.6486650469525 * H1x1_2 + 1.84563084742932 * H1x1_3 + -2.43710509923951 * H1x1_4 + 0.03038093596976 * H1x1_5 + -1.34566786751269 * H1x1_6 ;
43971     +          +     3.38050961443392 * H1x1_3  +    -5.12182301645649 * H1x1_4
43972     +          +    -3.74697079524831 * H1x1_5  +    -5.26174801543685 * H1x1_6 ;
43973     +   H2x1_4  =     0.54854810712303 * H1x1_1  +      1.6486650469525 * H1x1_2
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.89845480530178 * H1x1_1 + 3.19967829294268 * H1x1_2 + 3.58592569542093 * H1x1_3 + -3.76417733693485 * H1x1_4 + -4.1568039640005 * H1x1_5 + -4.42895004794637 * H1x1_6 ;
43974     +          +     1.84563084742932 * H1x1_3  +    -2.43710509923951 * H1x1_4
43975     +          +     0.03038093596976 * H1x1_5  +    -1.34566786751269 * H1x1_6 ;
43976     +   H2x1_5  =     0.89845480530178 * H1x1_1  +     3.19967829294268 * H1x1_2
43977     +          +     3.58592569542093 * H1x1_3  +    -3.76417733693485 * H1x1_4
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.44545310705069 * H1x2_1 + 2.72471946580982 * H1x2_2 + -1.42856846603531 * H1x2_3 + 0.25357521888082 * H1x2_4 + -1.25902268741411 * H1x2_5 + -1.70956044020454 * H1x2_6 ;
43978     +          +     -4.1568039640005 * H1x1_5  +    -4.42895004794637 * H1x1_6 ;
43979     +   H2x1_1  = H2x1_1  +     0.44545310705069 * H1x2_1
43980     +          +     2.72471946580982 * H1x2_2  +    -1.42856846603531 * H1x2_3
43981     +          +     0.25357521888082 * H1x2_4  +    -1.25902268741411 * H1x2_5
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.9465771639497 * H1x2_1 + -0.41110969777104 * H1x2_2 + -0.92834816798625 * H1x2_3 + -1.7337755087443 * H1x2_4 + -1.2522448489667 * H1x2_5 + -0.90111756793979 * H1x2_6 ;
43982     +          +    -1.70956044020454 * H1x2_6 ;
43983     +   H2x1_2  = H2x1_2  +      0.9465771639497 * H1x2_1
43984     +          +    -0.41110969777104 * H1x2_2  +    -0.92834816798625 * H1x2_3
43985     +          +     -1.7337755087443 * H1x2_4  +     -1.2522448489667 * H1x2_5
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.22355080983787 * H1x2_1 + -0.18918346120545 * H1x2_2 + -1.50592518382263 * H1x2_3 + -1.00672320426732 * H1x2_4 + -1.09510249463921 * H1x2_5 + 0.83089577154267 * H1x2_6 ;
43986     +          +    -0.90111756793979 * H1x2_6 ;
43987     +   H2x1_3  = H2x1_3  +    -0.22355080983787 * H1x2_1
43988     +          +    -0.18918346120545 * H1x2_2  +    -1.50592518382263 * H1x2_3
43989     +          +    -1.00672320426732 * H1x2_4  +    -1.09510249463921 * H1x2_5
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.74505363577487 * H1x2_1 + 0.41544439689687 * H1x2_2 + -0.11467073820729 * H1x2_3 + -2.16913690278917 * H1x2_4 + 1.07667011067144 * H1x2_5 + -0.21291665093094 * H1x2_6 ;
43990     +          +     0.83089577154267 * H1x2_6 ;
43991     +   H2x1_4  = H2x1_4  +    -0.74505363577487 * H1x2_1
43992     +          +     0.41544439689687 * H1x2_2  +    -0.11467073820729 * H1x2_3
43993     +          +    -2.16913690278917 * H1x2_4  +     1.07667011067144 * H1x2_5
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.22639397151159 * H1x2_1 + 0.59976504799464 * H1x2_2 + -1.19497833953318 * H1x2_3 + 0.40681132265012 * H1x2_4 + -1.18142813082248 * H1x2_5 + 0.28627108561279 * H1x2_6 ;
43994     +          +    -0.21291665093094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.80837297417824 + H2x1_1 ;
43995     +   H2x1_5  = H2x1_5  +    -0.22639397151159 * H1x2_1
MPRINT(EM_DIAGRAM):   H2x1_2 = -3.15918654233626 + H2x1_2 ;
43996     +          +     0.59976504799464 * H1x2_2  +    -1.19497833953318 * H1x2_3
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.1148455701308 + H2x1_3 ;
43997     +          +     0.40681132265012 * H1x2_4  +    -1.18142813082248 * H1x2_5
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.43637271773179 + H2x1_4 ;
43998     +          +     0.28627108561279 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.5068240097035 + H2x1_5 ;
43999     +   H2x1_1  =     0.80837297417824 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
44000     +   H2x1_2  =    -3.15918654233626 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
44001     +   H2x1_3  =     -1.1148455701308 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
44002     +   H2x1_4  =    -2.43637271773179 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
44003     +   H2x1_5  =     -1.5068240097035 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
44004     +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
44005     +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
44006     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
44007     +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
44008     +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
44009     +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
44010     +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
44011     +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
44012     +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
44013     +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
44014     +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
44015     +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
44016     +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
44017     +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
44018     +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
44019     +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
44020     +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   END;
44021     +   H2x1_3  = H2x1_3  / _SUM_;
44022     +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   ELSE DO;
44023     +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
44024     +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
44025     +END;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
44026     +ELSE DO;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
44027     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
44028     +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   END;
44029     +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
44030     +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
44031     +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
44032     +   H2x1_6  = .;
44033     +END;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
44034     +*** *************************;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
44035     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
44036     +*** *************************;
44037     +
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
44038     +*** Generate dummy variables for DepVar ;
44039     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
44040     +label F_DepVar = 'From: DepVar' ;
44041     +length F_DepVar $ 12;
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
44042     +F_DepVar = put( DepVar , BEST. );
44043     +%DMNORMIP( F_DepVar )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
MPRINT(EM_DIAGRAM):   end;
44044     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   else do;
44045     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
44046     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
44047     +end;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
44048     +else do;
MPRINT(EM_DIAGRAM):   end;
44049     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
44050     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
44051     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
44052     +   end;
MPRINT(EM_DIAGRAM):   end;
44053     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
44054     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
44055     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
44056     +   end;
MPRINT(EM_DIAGRAM):   end;
44057     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
44058     +      DepVar1 = .;
44059     +      DepVar0 = .;
44060     +   end;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.9408685199347 * H2x1_1 + 1.48309430635242 * H2x1_2 + -4.3496216751271 * H2x1_3 + 0.01239249943556 * H2x1_4 + -6.27169756239783 * H2x1_5 + 2.70843493957574 * H2x1_6 ;
44061     +end;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.67267561171469 + P_DepVar1 ;
44062     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
44063     +   P_DepVar1  =    -14.9408685199347 * H2x1_1  +     1.48309430635242 * H2x1_2
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
44064     +          +     -4.3496216751271 * H2x1_3  +     0.01239249943556 * H2x1_4
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
44065     +          +    -6.27169756239783 * H2x1_5  +     2.70843493957574 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
44066     +   P_DepVar1  =     5.67267561171469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
44067     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
44068     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
44069     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
44070     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
44071     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   END;
44072     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
44073     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE DO;
44074     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
44075     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
44076     +END;
MPRINT(EM_DIAGRAM):   END;
44077     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
44078     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
44079     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   END;
44080     +END;
MPRINT(EM_DIAGRAM):   *** *****************************;
44081     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
44082     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   *** ******************************;
44083     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
44084     +END;
44085     +*** *****************************;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
44086     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
44087     +*** ******************************;
44088     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
44089     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
44090     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
44091     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
44092     +*** *************************;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
44093     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
44094     +*** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
44095     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
44096     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
44097     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   END;
44098     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   ********************************;
44099     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
44100     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   ********************************;
44101     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   drop S_:;
44102     +END;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural42;
44103     +********************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
44104     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural42;
44105     +********************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
44106     +drop S_:;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar1;
44107     +* Renaming variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar1 = P_DepVar1;
44108     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar0;
44109     +* Renaming Posterior variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar0 = P_DepVar0;
44110     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
44111     +drop AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural42;
44112     +AutoNeural42_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
44113     +drop AutoNeural42_P_DepVar0;
44114     +AutoNeural42_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   length AutoNeural42_WARN_ $4;
44115     +*------------------------------------------------------------*;
44116     +* Renaming _WARN_ variable for AutoNeural42;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_WARN_;
44117     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   AutoNeural42_WARN_ = _WARN_;
44118     +length AutoNeural42_WARN_ $4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
44119     +drop AutoNeural42_WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
44120     +AutoNeural42_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
44121     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
44122     +* Ensmbl57: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural43;
44123     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
44124     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
44125     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
44126     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   ***********************************;
44127     +* NODE: AutoNeural43;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
44128     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
44129     +***********************************;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
44130     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
44131     +***********************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
44132     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
44133     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
44134     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
44135     + _MAX_ = .;
44136     + _MAXP_ = .;
44137     + _SUM_ = .;
44138     + _NTRIALS = .;
44139     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
44140     +LENGTH _WARN_ $4
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
44141     +      F_DepVar  $ 12
44142     +;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
44143     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
44144     +
44145     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
44146     +
44147     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
44148     +
44149     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
44150     +
44151     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
44152     +
44153     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
44154     +
44155     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
44156     +
44157     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
44158     +
44159     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
44160     +
44161     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
44162     +
44163     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
44164     +
44165     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
44166     +
44167     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
44168     +
44169     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
44170     +
44171     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
44172     +
44173     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
44174     +
44175     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
44176     +
44177     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
44178     +
44179     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
44180     +
44181     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
44182     +
44183     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
44184     +
44185     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
44186     +
44187     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
44188     +
44189     +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
44190     +
44191     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
44192     +
44193     +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
44194     +
44195     +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
44196     +
44197     +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
44198     +
44199     +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
44200     +
44201     +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
44202     +
44203     +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
44204     +
44205     +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
44206     +
44207     +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
44208     +
44209     +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
44210     +
44211     +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
44212     +
44213     +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
44214     +
44215     +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
44216     +
44217     +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
44218     +
44219     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
44220     +
44221     +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
44222     +
44223     +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
44224     +
44225     +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
44226     +
44227     +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
44228     +
44229     +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
44230     +
44231     +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
44232     +
44233     +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
44234     +
44235     +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
44236     +
44237     +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
44238     +
44239     +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
44240     +
44241     +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
44242     +
44243     +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
44244     +
44245     +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
44246     +
44247     +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
44248     +
44249     +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
44250     +
44251     +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
44252     +
44253     +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
44254     +
44255     +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
44256     +
44257     +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
44258     +
44259     +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
44260     +
44261     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
44262     +
44263     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
44264     +
44265     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
44266     +
44267     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
44268     +
44269     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
44270     +
44271     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
44272     +
44273     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
44274     +
44275     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
44276     +
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
44277     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
44278     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
44279     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
44280     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
44281     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
44282     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
44283     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
44284     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
44285     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
44286     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44287     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
44288     +   Marital_StatusSingle = .;
44289     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   else do;
44290     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
44291     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
44292     +end;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
44293     +else do;
44294     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(DMNORMIP):   call dmnorm(_dm8,
44295     +   _dm8 = put( Marital_Status , $8. );
44296     +   %DMNORMIP( _dm8 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
44297     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
44298     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
44299     +      if _dm8 <= 'MARRIED'  then do;
44300     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   else do;
44301     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
44302     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
44303     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
44304     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
44305     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   end;
44306     +               Marital_StatusMarried = 1;
44307     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
44308     +            end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
44309     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
44310     +      end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
44311     +      else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
44312     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
44313     +            Marital_StatusSingle = 1;
44314     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
44315     +         end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
44316     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
44317     +   end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
44318     +   else do;
MPRINT(EM_DIAGRAM):   end;
44319     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   else do;
44320     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
44321     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
44322     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
44323     +      else do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
44324     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
44325     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   end;
44326     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   end;
44327     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   end;
44328     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
44329     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
44330     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
44331     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
44332     +   end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
44333     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
44334     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44335     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
44336     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   end;
44337     +      Marital_StatusTogether = .;
44338     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** *************************;
44339     +      _DM_BAD = 1;
44340     +   end;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
44341     +end;
44342     +
44343     +*** *************************;
44344     +*** Checking missing input Interval
44345     +*** *************************;
44346     +
44347     +IF NMISS(
44348     +   AcceptedCmpTotal ,
44349     +   Frq ,
44350     +   Income ,
44351     +   Mnt ,
44352     +   MntGoldProds ,
44353     +   MntMeatProducts ,
44354     +   NumCatalogPurchases ,
44355     +   NumDealsPurchases ,
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , Recency , Teenhome , Year_Birth ) THEN DO;
44356     +   NumWebVisitsMonth ,
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
44357     +   RFMstat ,
44358     +   Recency ,
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44359     +   Teenhome ,
MPRINT(EM_DIAGRAM):   END;
44360     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   *** *************************;
44361     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
44362     +
MPRINT(EM_DIAGRAM):   *** *************************;
44363     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
44364     +END;
44365     +*** *************************;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
44366     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
44367     +*** *************************;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
44368     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
44369     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
44370     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
44371     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
44372     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
44373     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
44374     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
44375     +        MntGoldProds ;
44376     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
44377     +        MntMeatProducts ;
44378     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
44379     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
44380     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
44381     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
44382     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
44383     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   END;
44384     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
44385     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE DO;
44386     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
44387     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
44388     +END;
44389     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
44390     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
44391     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
44392     +        AcceptedCmpTotal ;
44393     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
44394     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
44395     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
44396     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
44397     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
44398     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
44399     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
44400     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
44401     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
44402     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
44403     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
44404     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
44405     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
44406     +   ELSE S_NumCatalogPurchases
44407     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
44408     +         ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
44409     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
44410     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
44411     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
44412     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
44413     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
44414     +        NumWebVisitsMonth ;
44415     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
44416     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
44417     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
44418     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
44419     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
44420     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   END;
44421     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
44422     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** *************************;
44423     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   *** *************************;
44424     +END;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
44425     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
44426     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
44427     +*** *************************;
44428     +*** *************************;
44429     +*** Writing the Node H1x1_ ;
44430     +*** *************************;
44431     +IF _DM_BAD EQ 0 THEN DO;
44432     +   H1x1_1  =    -0.29618919413806 * S_AcceptedCmpTotal
44433     +          +     0.65621237028757 * S_Frq  +     0.03418945976327 * S_Income
44434     +          +     1.44880456678399 * S_Mnt  +     0.74166093949552 *
44435     +        S_MntGoldProds  +     1.02706876663519 * S_MntMeatProducts
44436     +          +    -0.82528424139262 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.29618919413806 * S_AcceptedCmpTotal + 0.65621237028757 * S_Frq + 0.03418945976327 * S_Income + 1.44880456678399 * S_Mnt + 0.74166093949552 * S_MntGoldProds + 1.02706876663519 * S_MntMeatProducts + -0.82528424139262 * 
S_NumCatalogPurchases + 0.5929046965244 * S_NumDealsPurchases + -0.52362488197384 * S_NumWebVisitsMonth + 0.37882892269923 * S_RFMstat + 2.12340115344155 * S_Recency + -0.83670225777249 * S_Teenhome + 0.53976656905831 * S_Year_Birth ;
44437     +          +      0.5929046965244 * S_NumDealsPurchases
44438     +          +    -0.52362488197384 * S_NumWebVisitsMonth
44439     +          +     0.37882892269923 * S_RFMstat  +     2.12340115344155 *
44440     +        S_Recency  +    -0.83670225777249 * S_Teenhome
44441     +          +     0.53976656905831 * S_Year_Birth ;
44442     +   H1x1_2  =     0.29962396390652 * S_AcceptedCmpTotal
44443     +          +     -2.5902198016826 * S_Frq  +    -0.18776639473475 * S_Income
44444     +          +    -2.77524252217737 * S_Mnt  +     0.96018065616836 *
44445     +        S_MntGoldProds  +     3.16907172523474 * S_MntMeatProducts
44446     +          +    -0.60117742307807 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29962396390652 * S_AcceptedCmpTotal + -2.5902198016826 * S_Frq + -0.18776639473475 * S_Income + -2.77524252217737 * S_Mnt + 0.96018065616836 * S_MntGoldProds + 3.16907172523474 * S_MntMeatProducts + -0.60117742307807 * 
S_NumCatalogPurchases + 1.09806082321711 * S_NumDealsPurchases + 1.26617704720444 * S_NumWebVisitsMonth + 1.08444062320284 * S_RFMstat + 1.05523311776937 * S_Recency + -0.2630764341314 * S_Teenhome + -0.42373178164016 * S_Year_Birth ;
44447     +          +     1.09806082321711 * S_NumDealsPurchases
44448     +          +     1.26617704720444 * S_NumWebVisitsMonth
44449     +          +     1.08444062320284 * S_RFMstat  +     1.05523311776937 *
44450     +        S_Recency  +     -0.2630764341314 * S_Teenhome
44451     +          +    -0.42373178164016 * S_Year_Birth ;
44452     +   H1x1_3  =     2.31041583450369 * S_AcceptedCmpTotal
44453     +          +    -1.96810851023784 * S_Frq  +     0.93795839333407 * S_Income
44454     +          +    -1.55337331547216 * S_Mnt  +     1.13417428979776 *
44455     +        S_MntGoldProds  +     3.70573651287077 * S_MntMeatProducts
44456     +          +     1.63075268570383 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.31041583450369 * S_AcceptedCmpTotal + -1.96810851023784 * S_Frq + 0.93795839333407 * S_Income + -1.55337331547216 * S_Mnt + 1.13417428979776 * S_MntGoldProds + 3.70573651287077 * S_MntMeatProducts + 1.63075268570383 * 
S_NumCatalogPurchases + 0.62057902628545 * S_NumDealsPurchases + 1.85944172136218 * S_NumWebVisitsMonth + 0.51474936656536 * S_RFMstat + -2.17922024885571 * S_Recency + -0.78663308544854 * S_Teenhome + -0.08719031066365 * S_Year_Birth ;
44457     +          +     0.62057902628545 * S_NumDealsPurchases
44458     +          +     1.85944172136218 * S_NumWebVisitsMonth
44459     +          +     0.51474936656536 * S_RFMstat  +    -2.17922024885571 *
44460     +        S_Recency  +    -0.78663308544854 * S_Teenhome
44461     +          +    -0.08719031066365 * S_Year_Birth ;
44462     +   H1x1_4  =     -0.0390409024382 * S_AcceptedCmpTotal
44463     +          +     2.11606776858073 * S_Frq  +     -0.3817450995856 * S_Income
44464     +          +     0.40531492299483 * S_Mnt  +     0.54341985868017 *
44465     +        S_MntGoldProds  +    -5.50809183295151 * S_MntMeatProducts
44466     +          +    -2.59032878085972 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.0390409024382 * S_AcceptedCmpTotal + 2.11606776858073 * S_Frq + -0.3817450995856 * S_Income + 0.40531492299483 * S_Mnt + 0.54341985868017 * S_MntGoldProds + -5.50809183295151 * S_MntMeatProducts + -2.59032878085972 * 
S_NumCatalogPurchases + -0.44146008176644 * S_NumDealsPurchases + 1.16377649939583 * S_NumWebVisitsMonth + -0.40950445519308 * S_RFMstat + 1.44701615363875 * S_Recency + -0.44721505258044 * S_Teenhome + -0.53780522701747 * S_Year_Birth ;
44467     +          +    -0.44146008176644 * S_NumDealsPurchases
44468     +          +     1.16377649939583 * S_NumWebVisitsMonth
44469     +          +    -0.40950445519308 * S_RFMstat  +     1.44701615363875 *
44470     +        S_Recency  +    -0.44721505258044 * S_Teenhome
44471     +          +    -0.53780522701747 * S_Year_Birth ;
44472     +   H1x1_5  =    -0.96249689474011 * S_AcceptedCmpTotal
44473     +          +     1.18171571446591 * S_Frq  +     0.15643078933994 * S_Income
44474     +          +      1.1855275327594 * S_Mnt  +    -0.31882188338593 *
44475     +        S_MntGoldProds  +    -0.17799046807331 * S_MntMeatProducts
44476     +          +    -2.88423926492169 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.96249689474011 * S_AcceptedCmpTotal + 1.18171571446591 * S_Frq + 0.15643078933994 * S_Income + 1.1855275327594 * S_Mnt + -0.31882188338593 * S_MntGoldProds + -0.17799046807331 * S_MntMeatProducts + -2.88423926492169 * 
S_NumCatalogPurchases + 0.76448279454687 * S_NumDealsPurchases + 0.63782718366339 * S_NumWebVisitsMonth + -1.52311206450608 * S_RFMstat + 2.66138322599513 * S_Recency + 0.19809045233143 * S_Teenhome + -0.11944673598308 * S_Year_Birth ;
44477     +          +     0.76448279454687 * S_NumDealsPurchases
44478     +          +     0.63782718366339 * S_NumWebVisitsMonth
44479     +          +    -1.52311206450608 * S_RFMstat  +     2.66138322599513 *
44480     +        S_Recency  +     0.19809045233143 * S_Teenhome
44481     +          +    -0.11944673598308 * S_Year_Birth ;
44482     +   H1x1_6  =     1.48018319811202 * S_AcceptedCmpTotal
44483     +          +    -2.35201132061873 * S_Frq  +     1.49549206730687 * S_Income
44484     +          +    -0.92311571755706 * S_Mnt  +    -0.17036386789536 *
44485     +        S_MntGoldProds  +     2.42959371021324 * S_MntMeatProducts
44486     +          +     1.71243370379543 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.48018319811202 * S_AcceptedCmpTotal + -2.35201132061873 * S_Frq + 1.49549206730687 * S_Income + -0.92311571755706 * S_Mnt + -0.17036386789536 * S_MntGoldProds + 2.42959371021324 * S_MntMeatProducts + 1.71243370379543 * 
S_NumCatalogPurchases + 1.59034024362028 * S_NumDealsPurchases + 2.43090724707282 * S_NumWebVisitsMonth + -1.84934930083177 * S_RFMstat + -1.10219728762745 * S_Recency + -1.20398234836557 * S_Teenhome + -0.04071326663204 * S_Year_Birth ;
44487     +          +     1.59034024362028 * S_NumDealsPurchases
44488     +          +     2.43090724707282 * S_NumWebVisitsMonth
44489     +          +    -1.84934930083177 * S_RFMstat  +    -1.10219728762745 *
44490     +        S_Recency  +    -1.20398234836557 * S_Teenhome
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.53952272056325 * Marital_StatusDivorced + 1.90782989914192 * Marital_StatusMarried + -1.16189886119693 * Marital_StatusSingle + 1.42717413956591 * Marital_StatusTogether ;
44491     +          +    -0.04071326663204 * S_Year_Birth ;
44492     +   H1x1_1  = H1x1_1  +    -1.53952272056325 * Marital_StatusDivorced
44493     +          +     1.90782989914192 * Marital_StatusMarried
44494     +          +    -1.16189886119693 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.65814869063598 * Marital_StatusDivorced + 0.30468777490799 * Marital_StatusMarried + 0.61978761938746 * Marital_StatusSingle + -0.78873321292122 * Marital_StatusTogether ;
44495     +          +     1.42717413956591 * Marital_StatusTogether ;
44496     +   H1x1_2  = H1x1_2  +     0.65814869063598 * Marital_StatusDivorced
44497     +          +     0.30468777490799 * Marital_StatusMarried
44498     +          +     0.61978761938746 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.1292120736254 * Marital_StatusDivorced + -1.73477859605124 * Marital_StatusMarried + 1.32595981126289 * Marital_StatusSingle + -1.40161784211243 * Marital_StatusTogether ;
44499     +          +    -0.78873321292122 * Marital_StatusTogether ;
44500     +   H1x1_3  = H1x1_3  +      0.1292120736254 * Marital_StatusDivorced
44501     +          +    -1.73477859605124 * Marital_StatusMarried
44502     +          +     1.32595981126289 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.20617554754163 * Marital_StatusDivorced + 0.06077392213964 * Marital_StatusMarried + 0.21115279121703 * Marital_StatusSingle + -0.61340758151821 * Marital_StatusTogether ;
44503     +          +    -1.40161784211243 * Marital_StatusTogether ;
44504     +   H1x1_4  = H1x1_4  +     0.20617554754163 * Marital_StatusDivorced
44505     +          +     0.06077392213964 * Marital_StatusMarried
44506     +          +     0.21115279121703 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.69141266071894 * Marital_StatusDivorced + -0.24067068377767 * Marital_StatusMarried + 0.2728964145401 * Marital_StatusSingle + -0.61614895252648 * Marital_StatusTogether ;
44507     +          +    -0.61340758151821 * Marital_StatusTogether ;
44508     +   H1x1_5  = H1x1_5  +    -0.69141266071894 * Marital_StatusDivorced
44509     +          +    -0.24067068377767 * Marital_StatusMarried
44510     +          +      0.2728964145401 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.81455860225062 * Marital_StatusDivorced + -0.15640287278595 * Marital_StatusMarried + 0.54159395450762 * Marital_StatusSingle + -0.43264862434738 * Marital_StatusTogether ;
44511     +          +    -0.61614895252648 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.36385036888345 + H1x1_1 ;
44512     +   H1x1_6  = H1x1_6  +    -0.81455860225062 * Marital_StatusDivorced
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.02663558500629 + H1x1_2 ;
44513     +          +    -0.15640287278595 * Marital_StatusMarried
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.50526409213811 + H1x1_3 ;
44514     +          +     0.54159395450762 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.63048769294892 + H1x1_4 ;
44515     +          +    -0.43264862434738 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.21111796976731 + H1x1_5 ;
44516     +   H1x1_1  =    -0.36385036888345 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.76174187739611 + H1x1_6 ;
44517     +   H1x1_2  =     0.02663558500629 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
44518     +   H1x1_3  =    -3.50526409213811 + H1x1_3 ;
44519     +   H1x1_4  =     0.63048769294892 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7 );
44520     +   H1x1_5  =     1.21111796976731 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
44521     +   H1x1_6  =    -1.76174187739611 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
44522     +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
44523     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
44524     +         );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
44525     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
44526     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
44527     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
44528     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
44529     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
44530     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
44531     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
44532     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
44533     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
44534     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
44535     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
44536     +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
44537     +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
44538     +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
44539     +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
44540     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
44541     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
44542     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   END;
44543     +   H1x1_4  = H1x1_4  / _SUM_;
44544     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   ELSE DO;
44545     +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
44546     +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
44547     +END;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
44548     +ELSE DO;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
44549     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
44550     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
44551     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   END;
44552     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
44553     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
44554     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
44555     +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
44556     +END;
44557     +*** *************************;
44558     +*** Writing the Node H1x2_ ;
44559     +*** *************************;
44560     +IF _DM_BAD EQ 0 THEN DO;
44561     +   H1x2_1  =     0.51589041180152 * S_AcceptedCmpTotal
44562     +          +     -0.6498311499195 * S_Frq  +    -1.08182644925044 * S_Income
44563     +          +    -1.19064228379044 * S_Mnt  +    -1.27287496888491 *
44564     +        S_MntGoldProds  +    -1.33897837883991 * S_MntMeatProducts
44565     +          +     0.14209124492657 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.51589041180152 * S_AcceptedCmpTotal + -0.6498311499195 * S_Frq + -1.08182644925044 * S_Income + -1.19064228379044 * S_Mnt + -1.27287496888491 * S_MntGoldProds + -1.33897837883991 * S_MntMeatProducts + 0.14209124492657 * 
S_NumCatalogPurchases + -1.31625106509803 * S_NumDealsPurchases + 2.35745588368331 * S_NumWebVisitsMonth + -1.28657356976181 * S_RFMstat + 0.25408650330935 * S_Recency + 1.23527100408525 * S_Teenhome + -1.87183507669176 * S_Year_Birth ;
44566     +          +    -1.31625106509803 * S_NumDealsPurchases
44567     +          +     2.35745588368331 * S_NumWebVisitsMonth
44568     +          +    -1.28657356976181 * S_RFMstat  +     0.25408650330935 *
44569     +        S_Recency  +     1.23527100408525 * S_Teenhome
44570     +          +    -1.87183507669176 * S_Year_Birth ;
44571     +   H1x2_2  =    -1.23424462482032 * S_AcceptedCmpTotal
44572     +          +     1.46358102529667 * S_Frq  +     1.75790517593121 * S_Income
44573     +          +      -0.424881586919 * S_Mnt  +     -0.9331242135447 *
44574     +        S_MntGoldProds  +     0.54942904780681 * S_MntMeatProducts
44575     +          +     1.18605040958794 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.23424462482032 * S_AcceptedCmpTotal + 1.46358102529667 * S_Frq + 1.75790517593121 * S_Income + -0.424881586919 * S_Mnt + -0.9331242135447 * S_MntGoldProds + 0.54942904780681 * S_MntMeatProducts + 1.18605040958794 * 
S_NumCatalogPurchases + -0.89798157472835 * S_NumDealsPurchases + -0.09236646871049 * S_NumWebVisitsMonth + -1.29341547638046 * S_RFMstat + 1.66853355984342 * S_Recency + -0.50770218335102 * S_Teenhome + -1.07353749220663 * S_Year_Birth ;
44576     +          +    -0.89798157472835 * S_NumDealsPurchases
44577     +          +    -0.09236646871049 * S_NumWebVisitsMonth
44578     +          +    -1.29341547638046 * S_RFMstat  +     1.66853355984342 *
44579     +        S_Recency  +    -0.50770218335102 * S_Teenhome
44580     +          +    -1.07353749220663 * S_Year_Birth ;
44581     +   H1x2_3  =     0.77624009560593 * S_AcceptedCmpTotal
44582     +          +    -0.52739784343536 * S_Frq  +     0.03893675518591 * S_Income
44583     +          +     2.17484611279249 * S_Mnt  +    -0.17952459801341 *
44584     +        S_MntGoldProds  +     0.34588410829653 * S_MntMeatProducts
44585     +          +    -1.53424308314822 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.77624009560593 * S_AcceptedCmpTotal + -0.52739784343536 * S_Frq + 0.03893675518591 * S_Income + 2.17484611279249 * S_Mnt + -0.17952459801341 * S_MntGoldProds + 0.34588410829653 * S_MntMeatProducts + -1.53424308314822 * 
S_NumCatalogPurchases + -0.80590323269981 * S_NumDealsPurchases + -1.40104490662303 * S_NumWebVisitsMonth + 1.66586308350968 * S_RFMstat + -0.47553614859646 * S_Recency + 0.96086280467056 * S_Teenhome + -1.77672596886127 * S_Year_Birth ;
44586     +          +    -0.80590323269981 * S_NumDealsPurchases
44587     +          +    -1.40104490662303 * S_NumWebVisitsMonth
44588     +          +     1.66586308350968 * S_RFMstat  +    -0.47553614859646 *
44589     +        S_Recency  +     0.96086280467056 * S_Teenhome
44590     +          +    -1.77672596886127 * S_Year_Birth ;
44591     +   H1x2_4  =     0.58137966699652 * S_AcceptedCmpTotal
44592     +          +      1.4040418295752 * S_Frq  +    -0.24832517883948 * S_Income
44593     +          +    -0.61141424736299 * S_Mnt  +     0.20471254162898 *
44594     +        S_MntGoldProds  +     0.44314427658514 * S_MntMeatProducts
44595     +          +    -1.25862219948587 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.58137966699652 * S_AcceptedCmpTotal + 1.4040418295752 * S_Frq + -0.24832517883948 * S_Income + -0.61141424736299 * S_Mnt + 0.20471254162898 * S_MntGoldProds + 0.44314427658514 * S_MntMeatProducts + -1.25862219948587 * 
S_NumCatalogPurchases + 1.95015982914109 * S_NumDealsPurchases + 0.64320281589594 * S_NumWebVisitsMonth + 0.79165027029588 * S_RFMstat + 0.66988554846863 * S_Recency + -0.00184949563812 * S_Teenhome + -0.90548552271817 * S_Year_Birth ;
44596     +          +     1.95015982914109 * S_NumDealsPurchases
44597     +          +     0.64320281589594 * S_NumWebVisitsMonth
44598     +          +     0.79165027029588 * S_RFMstat  +     0.66988554846863 *
44599     +        S_Recency  +    -0.00184949563812 * S_Teenhome
44600     +          +    -0.90548552271817 * S_Year_Birth ;
44601     +   H1x2_5  =      0.5931660751286 * S_AcceptedCmpTotal
44602     +          +     0.58645753040534 * S_Frq  +     1.15236353289832 * S_Income
44603     +          +     0.33853280493921 * S_Mnt  +    -0.34695797092699 *
44604     +        S_MntGoldProds  +     2.24596975589576 * S_MntMeatProducts
44605     +          +     0.30573893169917 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.5931660751286 * S_AcceptedCmpTotal + 0.58645753040534 * S_Frq + 1.15236353289832 * S_Income + 0.33853280493921 * S_Mnt + -0.34695797092699 * S_MntGoldProds + 2.24596975589576 * S_MntMeatProducts + 0.30573893169917 * 
S_NumCatalogPurchases + 0.93169788380491 * S_NumDealsPurchases + 0.04516037232248 * S_NumWebVisitsMonth + 0.56461660789519 * S_RFMstat + -0.73850030816559 * S_Recency + 0.1429120113072 * S_Teenhome + 0.57728849891114 * S_Year_Birth ;
44606     +          +     0.93169788380491 * S_NumDealsPurchases
44607     +          +     0.04516037232248 * S_NumWebVisitsMonth
44608     +          +     0.56461660789519 * S_RFMstat  +    -0.73850030816559 *
44609     +        S_Recency  +      0.1429120113072 * S_Teenhome
44610     +          +     0.57728849891114 * S_Year_Birth ;
44611     +   H1x2_6  =    -0.61564457275113 * S_AcceptedCmpTotal
44612     +          +     0.25558411574917 * S_Frq  +      0.1079727446126 * S_Income
44613     +          +    -1.20360633098467 * S_Mnt  +     1.72797334940475 *
44614     +        S_MntGoldProds  +    -1.65210775934619 * S_MntMeatProducts
44615     +          +      0.2704422632168 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.61564457275113 * S_AcceptedCmpTotal + 0.25558411574917 * S_Frq + 0.1079727446126 * S_Income + -1.20360633098467 * S_Mnt + 1.72797334940475 * S_MntGoldProds + -1.65210775934619 * S_MntMeatProducts + 0.2704422632168 * 
S_NumCatalogPurchases + 2.3389342094366 * S_NumDealsPurchases + 0.01076302858809 * S_NumWebVisitsMonth + -2.36764292681458 * S_RFMstat + 1.10196533018748 * S_Recency + 0.68455094392125 * S_Teenhome + 1.22292273319927 * S_Year_Birth ;
44616     +          +      2.3389342094366 * S_NumDealsPurchases
44617     +          +     0.01076302858809 * S_NumWebVisitsMonth
44618     +          +    -2.36764292681458 * S_RFMstat  +     1.10196533018748 *
44619     +        S_Recency  +     0.68455094392125 * S_Teenhome
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.04566893512123 * Marital_StatusDivorced + 0.8255833782513 * Marital_StatusMarried + -0.48959165020896 * Marital_StatusSingle + 2.83781371812098 * Marital_StatusTogether ;
44620     +          +     1.22292273319927 * S_Year_Birth ;
44621     +   H1x2_1  = H1x2_1  +    -2.04566893512123 * Marital_StatusDivorced
44622     +          +      0.8255833782513 * Marital_StatusMarried
44623     +          +    -0.48959165020896 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.67000557197818 * Marital_StatusDivorced + -0.36405013930464 * Marital_StatusMarried + -0.11895921007246 * Marital_StatusSingle + -0.94713834966834 * Marital_StatusTogether ;
44624     +          +     2.83781371812098 * Marital_StatusTogether ;
44625     +   H1x2_2  = H1x2_2  +     0.67000557197818 * Marital_StatusDivorced
44626     +          +    -0.36405013930464 * Marital_StatusMarried
44627     +          +    -0.11895921007246 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26597574107473 * Marital_StatusDivorced + -1.38902793752658 * Marital_StatusMarried + 0.47104623132568 * Marital_StatusSingle + -0.55354712799424 * Marital_StatusTogether ;
44628     +          +    -0.94713834966834 * Marital_StatusTogether ;
44629     +   H1x2_3  = H1x2_3  +     0.26597574107473 * Marital_StatusDivorced
44630     +          +    -1.38902793752658 * Marital_StatusMarried
44631     +          +     0.47104623132568 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.69625977318234 * Marital_StatusDivorced + 0.03793816986941 * Marital_StatusMarried + 0.32286910605532 * Marital_StatusSingle + -1.44817209305758 * Marital_StatusTogether ;
44632     +          +    -0.55354712799424 * Marital_StatusTogether ;
44633     +   H1x2_4  = H1x2_4  +    -1.69625977318234 * Marital_StatusDivorced
44634     +          +     0.03793816986941 * Marital_StatusMarried
44635     +          +     0.32286910605532 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.19745523338489 * Marital_StatusDivorced + -0.60013237897988 * Marital_StatusMarried + -1.54090744803073 * Marital_StatusSingle + -2.24346446510302 * Marital_StatusTogether ;
44636     +          +    -1.44817209305758 * Marital_StatusTogether ;
44637     +   H1x2_5  = H1x2_5  +     0.19745523338489 * Marital_StatusDivorced
44638     +          +    -0.60013237897988 * Marital_StatusMarried
44639     +          +    -1.54090744803073 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.47464108124928 * Marital_StatusDivorced + 2.39490119482132 * Marital_StatusMarried + 0.73080073298893 * Marital_StatusSingle + -0.62296432915598 * Marital_StatusTogether ;
44640     +          +    -2.24346446510302 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.03099135229255 + H1x2_1 ;
44641     +   H1x2_6  = H1x2_6  +     0.47464108124928 * Marital_StatusDivorced
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9436150278938 + H1x2_2 ;
44642     +          +     2.39490119482132 * Marital_StatusMarried
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.17327523864686 + H1x2_3 ;
44643     +          +     0.73080073298893 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.30103807123555 + H1x2_4 ;
44644     +          +    -0.62296432915598 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -2.06815743640812 + H1x2_5 ;
44645     +   H1x2_1  =     1.03099135229255 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.90356790294644 + H1x2_6 ;
44646     +   H1x2_2  =     -0.9436150278938 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
44647     +   H1x2_3  =    -0.17327523864686 + H1x2_3 ;
44648     +   H1x2_4  =     0.30103807123555 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7 );
44649     +   H1x2_5  =    -2.06815743640812 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
44650     +   H1x2_6  =     1.90356790294644 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
44651     +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
44652     +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
44653     +         );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
44654     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
44655     +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
44656     +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
44657     +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
44658     +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
44659     +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
44660     +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
44661     +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
44662     +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
44663     +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
44664     +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
44665     +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
44666     +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
44667     +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
44668     +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
44669     +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
44670     +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
44671     +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   END;
44672     +   H1x2_4  = H1x2_4  / _SUM_;
44673     +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   ELSE DO;
44674     +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
44675     +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
44676     +END;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
44677     +ELSE DO;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
44678     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
44679     +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
44680     +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   END;
44681     +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
44682     +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
44683     +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
44684     +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
44685     +END;
44686     +*** *************************;
44687     +*** Writing the Node H1x3_ ;
44688     +*** *************************;
44689     +IF _DM_BAD EQ 0 THEN DO;
44690     +   H1x3_1  =    -0.02577999703823 * S_AcceptedCmpTotal
44691     +          +     1.15166430232754 * S_Frq  +     0.14876168620543 * S_Income
44692     +          +    -0.18380736633059 * S_Mnt  +     0.50048252433262 *
44693     +        S_MntGoldProds  +    -0.33191625929347 * S_MntMeatProducts
44694     +          +     2.25334156596167 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02577999703823 * S_AcceptedCmpTotal + 1.15166430232754 * S_Frq + 0.14876168620543 * S_Income + -0.18380736633059 * S_Mnt + 0.50048252433262 * S_MntGoldProds + -0.33191625929347 * S_MntMeatProducts + 2.25334156596167 * 
S_NumCatalogPurchases + 1.11206221926547 * S_NumDealsPurchases + -0.86546062057987 * S_NumWebVisitsMonth + -0.98321051175326 * S_RFMstat + 1.25274008829299 * S_Recency + -1.57916593034924 * S_Teenhome + -2.06345344469395 * S_Year_Birth ;
44695     +          +     1.11206221926547 * S_NumDealsPurchases
44696     +          +    -0.86546062057987 * S_NumWebVisitsMonth
44697     +          +    -0.98321051175326 * S_RFMstat  +     1.25274008829299 *
44698     +        S_Recency  +    -1.57916593034924 * S_Teenhome
44699     +          +    -2.06345344469395 * S_Year_Birth ;
44700     +   H1x3_2  =    -1.17329843303132 * S_AcceptedCmpTotal
44701     +          +     1.78916673039241 * S_Frq  +    -0.84674133842717 * S_Income
44702     +          +     0.28484675606294 * S_Mnt  +     0.63187019772354 *
44703     +        S_MntGoldProds  +    -0.96245535082151 * S_MntMeatProducts
44704     +          +    -0.72830662589886 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.17329843303132 * S_AcceptedCmpTotal + 1.78916673039241 * S_Frq + -0.84674133842717 * S_Income + 0.28484675606294 * S_Mnt + 0.63187019772354 * S_MntGoldProds + -0.96245535082151 * S_MntMeatProducts + -0.72830662589886 * 
S_NumCatalogPurchases + -1.43194640925705 * S_NumDealsPurchases + 0.27875145672985 * S_NumWebVisitsMonth + -2.03430995128807 * S_RFMstat + -0.52413738058555 * S_Recency + -1.01056905981073 * S_Teenhome + 0.00830584207402 * S_Year_Birth ;
44705     +          +    -1.43194640925705 * S_NumDealsPurchases
44706     +          +     0.27875145672985 * S_NumWebVisitsMonth
44707     +          +    -2.03430995128807 * S_RFMstat  +    -0.52413738058555 *
44708     +        S_Recency  +    -1.01056905981073 * S_Teenhome
44709     +          +     0.00830584207402 * S_Year_Birth ;
44710     +   H1x3_3  =    -1.51193899177395 * S_AcceptedCmpTotal
44711     +          +    -1.18260896990859 * S_Frq  +    -0.95243122164169 * S_Income
44712     +          +    -0.18792820239336 * S_Mnt  +    -0.06982279743147 *
44713     +        S_MntGoldProds  +    -1.14763783870634 * S_MntMeatProducts
44714     +          +    -0.29577972728188 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x3_3 = -1.51193899177395 * S_AcceptedCmpTotal + -1.18260896990859 * S_Frq + -0.95243122164169 * S_Income + -0.18792820239336 * S_Mnt + -0.06982279743147 * S_MntGoldProds + -1.14763783870634 * S_MntMeatProducts + -0.29577972728188 * 
S_NumCatalogPurchases + -0.09204036503823 * S_NumDealsPurchases + 1.09127760712522 * S_NumWebVisitsMonth + 0.67251355869104 * S_RFMstat + 0.02406054275944 * S_Recency + -1.61269837976842 * S_Teenhome + 1.49645524045306 * S_Year_Birth ;
44715     +          +    -0.09204036503823 * S_NumDealsPurchases
44716     +          +     1.09127760712522 * S_NumWebVisitsMonth
44717     +          +     0.67251355869104 * S_RFMstat  +     0.02406054275944 *
44718     +        S_Recency  +    -1.61269837976842 * S_Teenhome
44719     +          +     1.49645524045306 * S_Year_Birth ;
44720     +   H1x3_4  =      0.0300271349218 * S_AcceptedCmpTotal
44721     +          +     0.92676949944979 * S_Frq  +    -0.43729227407729 * S_Income
44722     +          +     0.20149694045928 * S_Mnt  +    -0.72339995493149 *
44723     +        S_MntGoldProds  +     0.79792093415572 * S_MntMeatProducts
44724     +          +     0.74771164805463 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.0300271349218 * S_AcceptedCmpTotal + 0.92676949944979 * S_Frq + -0.43729227407729 * S_Income + 0.20149694045928 * S_Mnt + -0.72339995493149 * S_MntGoldProds + 0.79792093415572 * S_MntMeatProducts + 0.74771164805463 * 
S_NumCatalogPurchases + 1.48674373289951 * S_NumDealsPurchases + -0.43724934700095 * S_NumWebVisitsMonth + -0.83295997374079 * S_RFMstat + -0.78737099754706 * S_Recency + 1.5969237416548 * S_Teenhome + -0.1539761100948 * S_Year_Birth ;
44725     +          +     1.48674373289951 * S_NumDealsPurchases
44726     +          +    -0.43724934700095 * S_NumWebVisitsMonth
44727     +          +    -0.83295997374079 * S_RFMstat  +    -0.78737099754706 *
44728     +        S_Recency  +      1.5969237416548 * S_Teenhome
44729     +          +     -0.1539761100948 * S_Year_Birth ;
44730     +   H1x3_5  =     0.10850479066736 * S_AcceptedCmpTotal
44731     +          +    -0.69523987336905 * S_Frq  +    -1.03313846128362 * S_Income
44732     +          +     0.25026080496919 * S_Mnt  +    -0.97357883151863 *
44733     +        S_MntGoldProds  +    -0.61754054300662 * S_MntMeatProducts
44734     +          +     0.32607897654777 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.10850479066736 * S_AcceptedCmpTotal + -0.69523987336905 * S_Frq + -1.03313846128362 * S_Income + 0.25026080496919 * S_Mnt + -0.97357883151863 * S_MntGoldProds + -0.61754054300662 * S_MntMeatProducts + 0.32607897654777 * 
S_NumCatalogPurchases + -0.05989936582211 * S_NumDealsPurchases + -0.8863628882594 * S_NumWebVisitsMonth + 1.1124532739734 * S_RFMstat + -0.38719199193265 * S_Recency + 1.1633098880037 * S_Teenhome + -1.12745203473451 * S_Year_Birth ;
44735     +          +    -0.05989936582211 * S_NumDealsPurchases
44736     +          +     -0.8863628882594 * S_NumWebVisitsMonth
44737     +          +      1.1124532739734 * S_RFMstat  +    -0.38719199193265 *
44738     +        S_Recency  +      1.1633098880037 * S_Teenhome
44739     +          +    -1.12745203473451 * S_Year_Birth ;
44740     +   H1x3_6  =    -0.11588080697234 * S_AcceptedCmpTotal
44741     +          +     0.62360534366171 * S_Frq  +     0.05171263107667 * S_Income
44742     +          +    -2.09517372359855 * S_Mnt  +     1.82275072298905 *
44743     +        S_MntGoldProds  +    -0.20222711303443 * S_MntMeatProducts
44744     +          +    -0.32855091358254 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x3_6 = -0.11588080697234 * S_AcceptedCmpTotal + 0.62360534366171 * S_Frq + 0.05171263107667 * S_Income + -2.09517372359855 * S_Mnt + 1.82275072298905 * S_MntGoldProds + -0.20222711303443 * S_MntMeatProducts + -0.32855091358254 * 
S_NumCatalogPurchases + -0.04262624947945 * S_NumDealsPurchases + 0.34844893542429 * S_NumWebVisitsMonth + 1.02395415516187 * S_RFMstat + 0.72163010188304 * S_Recency + 0.25374922499465 * S_Teenhome + -0.26482823596248 * S_Year_Birth ;
44745     +          +    -0.04262624947945 * S_NumDealsPurchases
44746     +          +     0.34844893542429 * S_NumWebVisitsMonth
44747     +          +     1.02395415516187 * S_RFMstat  +     0.72163010188304 *
44748     +        S_Recency  +     0.25374922499465 * S_Teenhome
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.22579923464903 * Marital_StatusDivorced + -1.19357131519861 * Marital_StatusMarried + 1.01104838285626 * Marital_StatusSingle + -1.80955917142309 * Marital_StatusTogether ;
44749     +          +    -0.26482823596248 * S_Year_Birth ;
44750     +   H1x3_1  = H1x3_1  +     0.22579923464903 * Marital_StatusDivorced
44751     +          +    -1.19357131519861 * Marital_StatusMarried
44752     +          +     1.01104838285626 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.94571479472535 * Marital_StatusDivorced + 0.41518199668826 * Marital_StatusMarried + 1.03267293059069 * Marital_StatusSingle + -0.66743874470855 * Marital_StatusTogether ;
44753     +          +    -1.80955917142309 * Marital_StatusTogether ;
44754     +   H1x3_2  = H1x3_2  +    -0.94571479472535 * Marital_StatusDivorced
44755     +          +     0.41518199668826 * Marital_StatusMarried
44756     +          +     1.03267293059069 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.15213926695809 * Marital_StatusDivorced + 0.56306179671807 * Marital_StatusMarried + -1.20896369649342 * Marital_StatusSingle + 0.2381860290523 * Marital_StatusTogether ;
44757     +          +    -0.66743874470855 * Marital_StatusTogether ;
44758     +   H1x3_3  = H1x3_3  +    -0.15213926695809 * Marital_StatusDivorced
44759     +          +     0.56306179671807 * Marital_StatusMarried
44760     +          +    -1.20896369649342 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.0736711015636 * Marital_StatusDivorced + -2.56951757071166 * Marital_StatusMarried + 0.89024254219017 * Marital_StatusSingle + -1.38303524163943 * Marital_StatusTogether ;
44761     +          +      0.2381860290523 * Marital_StatusTogether ;
44762     +   H1x3_4  = H1x3_4  +      1.0736711015636 * Marital_StatusDivorced
44763     +          +    -2.56951757071166 * Marital_StatusMarried
44764     +          +     0.89024254219017 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 2.33108578518176 * Marital_StatusDivorced + -0.82560993254767 * Marital_StatusMarried + 0.67892086377875 * Marital_StatusSingle + -0.99872502550085 * Marital_StatusTogether ;
44765     +          +    -1.38303524163943 * Marital_StatusTogether ;
44766     +   H1x3_5  = H1x3_5  +     2.33108578518176 * Marital_StatusDivorced
44767     +          +    -0.82560993254767 * Marital_StatusMarried
44768     +          +     0.67892086377875 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -1.46724646572707 * Marital_StatusDivorced + 1.62783448403167 * Marital_StatusMarried + 0.73020544049082 * Marital_StatusSingle + -0.22473120319236 * Marital_StatusTogether ;
44769     +          +    -0.99872502550085 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67900930500511 + H1x3_1 ;
44770     +   H1x3_6  = H1x3_6  +    -1.46724646572707 * Marital_StatusDivorced
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.40060666199115 + H1x3_2 ;
44771     +          +     1.62783448403167 * Marital_StatusMarried
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.29463847527526 + H1x3_3 ;
44772     +          +     0.73020544049082 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x3_4 = -0.04357875847579 + H1x3_4 ;
44773     +          +    -0.22473120319236 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.8612643972197 + H1x3_5 ;
44774     +   H1x3_1  =     0.67900930500511 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -1.88380703730164 + H1x3_6 ;
44775     +   H1x3_2  =     1.40060666199115 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
44776     +   H1x3_3  =     0.29463847527526 + H1x3_3 ;
44777     +   H1x3_4  =    -0.04357875847579 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7 );
44778     +   H1x3_5  =      0.8612643972197 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
44779     +   H1x3_6  =    -1.88380703730164 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
44780     +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
44781     +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
44782     +         );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
44783     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
44784     +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
44785     +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
44786     +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
44787     +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
44788     +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
44789     +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
44790     +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
44791     +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
44792     +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
44793     +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
44794     +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
44795     +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
44796     +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
44797     +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
44798     +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
44799     +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
44800     +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   END;
44801     +   H1x3_4  = H1x3_4  / _SUM_;
44802     +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   ELSE DO;
44803     +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
44804     +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
44805     +END;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
44806     +ELSE DO;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
44807     +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
44808     +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
44809     +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   END;
44810     +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
44811     +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
44812     +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
44813     +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
44814     +END;
44815     +*** *************************;
44816     +*** Writing the Node H2x1_ ;
44817     +*** *************************;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.95656178134917 * H1x1_1 + 1.37796748135739 * H1x1_2 + 1.78756036673938 * H1x1_3 + -0.8439546201475 * H1x1_4 + -1.03166099242293 * H1x1_5 + 0.52943703441707 * H1x1_6 + 0.59795148287931 * H1x1_7 ;
44818     +IF _DM_BAD EQ 0 THEN DO;
44819     +   H2x1_1  =    -0.95656178134917 * H1x1_1  +     1.37796748135739 * H1x1_2
44820     +          +     1.78756036673938 * H1x1_3  +     -0.8439546201475 * H1x1_4
44821     +          +    -1.03166099242293 * H1x1_5  +     0.52943703441707 * H1x1_6
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.91190798936382 * H1x1_1 + -0.175949167006 * H1x1_2 + -0.20010954623703 * H1x1_3 + -1.12168184279533 * H1x1_4 + 0.35517508917627 * H1x1_5 + -0.45519619936571 * H1x1_6 + 1.08432924744886 * H1x1_7 ;
44822     +          +     0.59795148287931 * H1x1_7 ;
44823     +   H2x1_2  =     1.91190798936382 * H1x1_1  +      -0.175949167006 * H1x1_2
44824     +          +    -0.20010954623703 * H1x1_3  +    -1.12168184279533 * H1x1_4
44825     +          +     0.35517508917627 * H1x1_5  +    -0.45519619936571 * H1x1_6
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.27236838695598 * H1x1_1 + 2.63546136140352 * H1x1_2 + 1.80045649255758 * H1x1_3 + -2.98830892061373 * H1x1_4 + -2.46045881589621 * H1x1_5 + 3.22396803549708 * H1x1_6 + -2.34667330067152 * H1x1_7 ;
44826     +          +     1.08432924744886 * H1x1_7 ;
44827     +   H2x1_3  =    -0.27236838695598 * H1x1_1  +     2.63546136140352 * H1x1_2
44828     +          +     1.80045649255758 * H1x1_3  +    -2.98830892061373 * H1x1_4
44829     +          +    -2.46045881589621 * H1x1_5  +     3.22396803549708 * H1x1_6
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.13210205675036 * H1x1_1 + 3.91450403558871 * H1x1_2 + 4.933279615521 * H1x1_3 + -2.59282514986249 * H1x1_4 + -2.03653671740081 * H1x1_5 + 4.064405082461 * H1x1_6 + -2.60526325926954 * H1x1_7 ;
44830     +          +    -2.34667330067152 * H1x1_7 ;
44831     +   H2x1_4  =    -3.13210205675036 * H1x1_1  +     3.91450403558871 * H1x1_2
44832     +          +       4.933279615521 * H1x1_3  +    -2.59282514986249 * H1x1_4
44833     +          +    -2.03653671740081 * H1x1_5  +       4.064405082461 * H1x1_6
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.63232084982839 * H1x1_1 + 0.33718773947492 * H1x1_2 + 1.29296448887546 * H1x1_3 + 1.12889621039023 * H1x1_4 + 2.18934908118237 * H1x1_5 + 0.87862098785892 * H1x1_6 + 0.91832061749569 * H1x1_7 ;
44834     +          +    -2.60526325926954 * H1x1_7 ;
44835     +   H2x1_5  =    -0.63232084982839 * H1x1_1  +     0.33718773947492 * H1x1_2
44836     +          +     1.29296448887546 * H1x1_3  +     1.12889621039023 * H1x1_4
44837     +          +     2.18934908118237 * H1x1_5  +     0.87862098785892 * H1x1_6
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.81043244413035 * H1x1_1 + 1.4777958998418 * H1x1_2 + 2.53190667102186 * H1x1_3 + 0.4670787906688 * H1x1_4 + -0.00303664790933 * H1x1_5 + 0.21078497178324 * H1x1_6 + 0.34792900678934 * H1x1_7 ;
44838     +          +     0.91832061749569 * H1x1_7 ;
44839     +   H2x1_6  =     1.81043244413035 * H1x1_1  +      1.4777958998418 * H1x1_2
44840     +          +     2.53190667102186 * H1x1_3  +      0.4670787906688 * H1x1_4
44841     +          +    -0.00303664790933 * H1x1_5  +     0.21078497178324 * H1x1_6
MPRINT(EM_DIAGRAM):   H2x1_7 = 2.7297431384039 * H1x1_1 + -1.30829815853208 * H1x1_2 + -0.74317234707744 * H1x1_3 + 0.02621795882884 * H1x1_4 + 1.92641283593631 * H1x1_5 + 0.32006968332264 * H1x1_6 + 0.87129000431049 * H1x1_7 ;
44842     +          +     0.34792900678934 * H1x1_7 ;
44843     +   H2x1_7  =      2.7297431384039 * H1x1_1  +    -1.30829815853208 * H1x1_2
44844     +          +    -0.74317234707744 * H1x1_3  +     0.02621795882884 * H1x1_4
44845     +          +     1.92641283593631 * H1x1_5  +     0.32006968332264 * H1x1_6
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.1938127062121 * H1x2_1 + 0.21780666650637 * H1x2_2 + -0.59195589593425 * H1x2_3 + 0.38436245185742 * H1x2_4 + 0.62573807049092 * H1x2_5 + -0.61319348011502 * H1x2_6 + 0.47203210338015 * H1x2_7 ;
44846     +          +     0.87129000431049 * H1x1_7 ;
44847     +   H2x1_1  = H2x1_1  +     -2.1938127062121 * H1x2_1
44848     +          +     0.21780666650637 * H1x2_2  +    -0.59195589593425 * H1x2_3
44849     +          +     0.38436245185742 * H1x2_4  +     0.62573807049092 * H1x2_5
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.26087177829438 * H1x2_1 + 1.5809361009025 * H1x2_2 + 1.48270435958935 * H1x2_3 + -0.08943866833208 * H1x2_4 + 1.06601866330059 * H1x2_5 + 0.65908674086625 * H1x2_6 + -0.41138217409507 * H1x2_7 ;
44850     +          +    -0.61319348011502 * H1x2_6  +     0.47203210338015 * H1x2_7 ;
44851     +   H2x1_2  = H2x1_2  +    -0.26087177829438 * H1x2_1
44852     +          +      1.5809361009025 * H1x2_2  +     1.48270435958935 * H1x2_3
44853     +          +    -0.08943866833208 * H1x2_4  +     1.06601866330059 * H1x2_5
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.38416253176813 * H1x2_1 + -0.18005172775158 * H1x2_2 + -0.64477973121074 * H1x2_3 + -0.89326621554735 * H1x2_4 + 2.10808351608759 * H1x2_5 + -0.79701502540522 * H1x2_6 + 0.12564972289045 * H1x2_7 ;
44854     +          +     0.65908674086625 * H1x2_6  +    -0.41138217409507 * H1x2_7 ;
44855     +   H2x1_3  = H2x1_3  +     0.38416253176813 * H1x2_1
44856     +          +    -0.18005172775158 * H1x2_2  +    -0.64477973121074 * H1x2_3
44857     +          +    -0.89326621554735 * H1x2_4  +     2.10808351608759 * H1x2_5
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.45607666975085 * H1x2_1 + 0.66281103175614 * H1x2_2 + -2.2042052849244 * H1x2_3 + -0.88338513539567 * H1x2_4 + 0.8444719755129 * H1x2_5 + -1.34699546034909 * H1x2_6 + -0.92256004986079 * H1x2_7 ;
44858     +          +    -0.79701502540522 * H1x2_6  +     0.12564972289045 * H1x2_7 ;
44859     +   H2x1_4  = H2x1_4  +     0.45607666975085 * H1x2_1
44860     +          +     0.66281103175614 * H1x2_2  +     -2.2042052849244 * H1x2_3
44861     +          +    -0.88338513539567 * H1x2_4  +      0.8444719755129 * H1x2_5
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.36966827041497 * H1x2_1 + -0.50899589190563 * H1x2_2 + -1.06117764109728 * H1x2_3 + -0.15325014700397 * H1x2_4 + 0.77845029985607 * H1x2_5 + 0.15661838238861 * H1x2_6 + -1.46533717081069 * H1x2_7 ;
44862     +          +    -1.34699546034909 * H1x2_6  +    -0.92256004986079 * H1x2_7 ;
44863     +   H2x1_5  = H2x1_5  +    -1.36966827041497 * H1x2_1
44864     +          +    -0.50899589190563 * H1x2_2  +    -1.06117764109728 * H1x2_3
44865     +          +    -0.15325014700397 * H1x2_4  +     0.77845029985607 * H1x2_5
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -1.39055542164691 * H1x2_1 + -0.58359991825266 * H1x2_2 + 1.77147289208184 * H1x2_3 + -0.35342441714416 * H1x2_4 + 0.33680205236698 * H1x2_5 + -0.30165800401137 * H1x2_6 + -1.49792110543314 * H1x2_7 ;
44866     +          +     0.15661838238861 * H1x2_6  +    -1.46533717081069 * H1x2_7 ;
44867     +   H2x1_6  = H2x1_6  +    -1.39055542164691 * H1x2_1
44868     +          +    -0.58359991825266 * H1x2_2  +     1.77147289208184 * H1x2_3
44869     +          +    -0.35342441714416 * H1x2_4  +     0.33680205236698 * H1x2_5
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.20334369322498 * H1x2_1 + -0.56117684469389 * H1x2_2 + 1.27451151893116 * H1x2_3 + -0.39759641471947 * H1x2_4 + -0.48424888739695 * H1x2_5 + 0.5776601194378 * H1x2_6 + -0.11343742791086 * H1x2_7 ;
44870     +          +    -0.30165800401137 * H1x2_6  +    -1.49792110543314 * H1x2_7 ;
44871     +   H2x1_7  = H2x1_7  +     0.20334369322498 * H1x2_1
44872     +          +    -0.56117684469389 * H1x2_2  +     1.27451151893116 * H1x2_3
44873     +          +    -0.39759641471947 * H1x2_4  +    -0.48424888739695 * H1x2_5
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.06990804266869 * H1x3_1 + 1.59179747886577 * H1x3_2 + -0.3658160611529 * H1x3_3 + -0.16177521959465 * H1x3_4 + 0.23353693967535 * H1x3_5 + 0.96164596504173 * H1x3_6 + -0.49996390114171 * H1x3_7 ;
44874     +          +      0.5776601194378 * H1x2_6  +    -0.11343742791086 * H1x2_7 ;
44875     +   H2x1_1  = H2x1_1  +    -0.06990804266869 * H1x3_1
44876     +          +     1.59179747886577 * H1x3_2  +     -0.3658160611529 * H1x3_3
44877     +          +    -0.16177521959465 * H1x3_4  +     0.23353693967535 * H1x3_5
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.34775541988885 * H1x3_1 + -0.94185062200477 * H1x3_2 + 2.40002799790884 * H1x3_3 + 1.3228491036493 * H1x3_4 + -2.27212522601702 * H1x3_5 + 0.22676652176348 * H1x3_6 + 0.96810343094913 * H1x3_7 ;
44878     +          +     0.96164596504173 * H1x3_6  +    -0.49996390114171 * H1x3_7 ;
44879     +   H2x1_2  = H2x1_2  +    -1.34775541988885 * H1x3_1
44880     +          +    -0.94185062200477 * H1x3_2  +     2.40002799790884 * H1x3_3
44881     +          +      1.3228491036493 * H1x3_4  +    -2.27212522601702 * H1x3_5
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.68382731119741 * H1x3_1 + -0.90388882694092 * H1x3_2 + 0.51668393396039 * H1x3_3 + 0.45716345972756 * H1x3_4 + -0.49320936872992 * H1x3_5 + 0.11919896076076 * H1x3_6 + -0.14288859595709 * H1x3_7 ;
44882     +          +     0.22676652176348 * H1x3_6  +     0.96810343094913 * H1x3_7 ;
44883     +   H2x1_3  = H2x1_3  +    -0.68382731119741 * H1x3_1
44884     +          +    -0.90388882694092 * H1x3_2  +     0.51668393396039 * H1x3_3
44885     +          +     0.45716345972756 * H1x3_4  +    -0.49320936872992 * H1x3_5
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.68614915242276 * H1x3_1 + 0.55556081003484 * H1x3_2 + 0.26058803548386 * H1x3_3 + 0.44653924204999 * H1x3_4 + -0.97704608173388 * H1x3_5 + -0.04291306465274 * H1x3_6 + -0.70203538063923 * H1x3_7 ;
44886     +          +     0.11919896076076 * H1x3_6  +    -0.14288859595709 * H1x3_7 ;
44887     +   H2x1_4  = H2x1_4  +    -0.68614915242276 * H1x3_1
44888     +          +     0.55556081003484 * H1x3_2  +     0.26058803548386 * H1x3_3
44889     +          +     0.44653924204999 * H1x3_4  +    -0.97704608173388 * H1x3_5
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.58123765973845 * H1x3_1 + 0.48842685419846 * H1x3_2 + 1.59951720976688 * H1x3_3 + 0.39804915100427 * H1x3_4 + -0.47629764750379 * H1x3_5 + -1.56133001160202 * H1x3_6 + 1.12232825939123 * H1x3_7 ;
44890     +          +    -0.04291306465274 * H1x3_6  +    -0.70203538063923 * H1x3_7 ;
44891     +   H2x1_5  = H2x1_5  +     0.58123765973845 * H1x3_1
44892     +          +     0.48842685419846 * H1x3_2  +     1.59951720976688 * H1x3_3
44893     +          +     0.39804915100427 * H1x3_4  +    -0.47629764750379 * H1x3_5
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.35903530664944 * H1x3_1 + -1.21870303791063 * H1x3_2 + -0.0358958118983 * H1x3_3 + 1.71577031345204 * H1x3_4 + -0.29111463093854 * H1x3_5 + -1.77383444462785 * H1x3_6 + -0.93379473274206 * H1x3_7 ;
44894     +          +    -1.56133001160202 * H1x3_6  +     1.12232825939123 * H1x3_7 ;
44895     +   H2x1_6  = H2x1_6  +    -0.35903530664944 * H1x3_1
44896     +          +    -1.21870303791063 * H1x3_2  +     -0.0358958118983 * H1x3_3
44897     +          +     1.71577031345204 * H1x3_4  +    -0.29111463093854 * H1x3_5
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.79356954272121 * H1x3_1 + -2.23344635077437 * H1x3_2 + 0.01459894574902 * H1x3_3 + -1.76556734796059 * H1x3_4 + 0.55679401249834 * H1x3_5 + -0.00867866380584 * H1x3_6 + 1.61311341603142 * H1x3_7 ;
44898     +          +    -1.77383444462785 * H1x3_6  +    -0.93379473274206 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45495097945606 + H2x1_1 ;
44899     +   H2x1_7  = H2x1_7  +     0.79356954272121 * H1x3_1
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.00150409200191 + H2x1_2 ;
44900     +          +    -2.23344635077437 * H1x3_2  +     0.01459894574902 * H1x3_3
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.06766385008662 + H2x1_3 ;
44901     +          +    -1.76556734796059 * H1x3_4  +     0.55679401249834 * H1x3_5
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.15767488957433 + H2x1_4 ;
44902     +          +    -0.00867866380584 * H1x3_6  +     1.61311341603142 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 3.00862692955968 + H2x1_5 ;
44903     +   H2x1_1  =     0.45495097945606 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.46151036473661 + H2x1_6 ;
44904     +   H2x1_2  =    -0.00150409200191 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = -1.14350195577506 + H2x1_7 ;
44905     +   H2x1_3  =     0.06766385008662 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
44906     +   H2x1_4  =    -0.15767488957433 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
44907     +   H2x1_5  =     3.00862692955968 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
44908     +   H2x1_6  =     1.46151036473661 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
44909     +   H2x1_7  =    -1.14350195577506 + H2x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
44910     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
44911     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
44912     +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
44913     +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_7 = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
44914     +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   END;
44915     +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
44916     +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   ELSE DO;
44917     +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
44918     +   H2x1_7  = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
44919     +END;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
44920     +ELSE DO;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
44921     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
44922     +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
44923     +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   END;
44924     +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
44925     +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
44926     +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
44927     +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
44928     +END;
44929     +*** *************************;
44930     +*** Writing the Node H2x2_ ;
44931     +*** *************************;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.6098073780758 * H1x1_1 + -0.36212005078054 * H1x1_2 + 0.06355695656592 * H1x1_3 + 0.42978415336514 * H1x1_4 + 1.73171637681701 * H1x1_5 + -0.19499247120261 * H1x1_6 + 0.74015079276747 * H1x1_7 ;
44932     +IF _DM_BAD EQ 0 THEN DO;
44933     +   H2x2_1  =     -0.6098073780758 * H1x1_1  +    -0.36212005078054 * H1x1_2
44934     +          +     0.06355695656592 * H1x1_3  +     0.42978415336514 * H1x1_4
44935     +          +     1.73171637681701 * H1x1_5  +    -0.19499247120261 * H1x1_6
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.94291268086892 * H1x1_1 + -0.57821086705904 * H1x1_2 + 1.78126629448091 * H1x1_3 + -1.19267460568433 * H1x1_4 + -0.23111688249081 * H1x1_5 + 0.48499259969431 * H1x1_6 + -1.56999349458897 * H1x1_7 ;
44936     +          +     0.74015079276747 * H1x1_7 ;
44937     +   H2x2_2  =     0.94291268086892 * H1x1_1  +    -0.57821086705904 * H1x1_2
44938     +          +     1.78126629448091 * H1x1_3  +    -1.19267460568433 * H1x1_4
44939     +          +    -0.23111688249081 * H1x1_5  +     0.48499259969431 * H1x1_6
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.83943846185187 * H1x1_1 + 0.07494097035466 * H1x1_2 + -0.22510824455886 * H1x1_3 + 0.73702100581613 * H1x1_4 + 0.84717434356729 * H1x1_5 + 1.1890648131813 * H1x1_6 + -0.69985750736721 * H1x1_7 ;
44940     +          +    -1.56999349458897 * H1x1_7 ;
44941     +   H2x2_3  =    -0.83943846185187 * H1x1_1  +     0.07494097035466 * H1x1_2
44942     +          +    -0.22510824455886 * H1x1_3  +     0.73702100581613 * H1x1_4
44943     +          +     0.84717434356729 * H1x1_5  +      1.1890648131813 * H1x1_6
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.34186573490327 * H1x1_1 + 0.10476556384336 * H1x1_2 + -0.07073923857851 * H1x1_3 + 0.49865386241422 * H1x1_4 + 1.20386613863792 * H1x1_5 + 0.13033316874168 * H1x1_6 + 0.36095712511699 * H1x1_7 ;
44944     +          +    -0.69985750736721 * H1x1_7 ;
44945     +   H2x2_4  =     1.34186573490327 * H1x1_1  +     0.10476556384336 * H1x1_2
44946     +          +    -0.07073923857851 * H1x1_3  +     0.49865386241422 * H1x1_4
44947     +          +     1.20386613863792 * H1x1_5  +     0.13033316874168 * H1x1_6
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.18683850895928 * H1x1_1 + 0.14087720385762 * H1x1_2 + 0.39026989292984 * H1x1_3 + 0.40839626117338 * H1x1_4 + 0.17816964710989 * H1x1_5 + 0.64340089705428 * H1x1_6 + -1.27363167094111 * H1x1_7 ;
44948     +          +     0.36095712511699 * H1x1_7 ;
44949     +   H2x2_5  =     0.18683850895928 * H1x1_1  +     0.14087720385762 * H1x1_2
44950     +          +     0.39026989292984 * H1x1_3  +     0.40839626117338 * H1x1_4
44951     +          +     0.17816964710989 * H1x1_5  +     0.64340089705428 * H1x1_6
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.67895838050616 * H1x1_1 + 0.23794862788395 * H1x1_2 + 1.47625698143483 * H1x1_3 + -0.78874578699705 * H1x1_4 + 0.11576168045678 * H1x1_5 + 0.44470888441177 * H1x1_6 + 1.87629961612594 * H1x1_7 ;
44952     +          +    -1.27363167094111 * H1x1_7 ;
44953     +   H2x2_6  =     0.67895838050616 * H1x1_1  +     0.23794862788395 * H1x1_2
44954     +          +     1.47625698143483 * H1x1_3  +    -0.78874578699705 * H1x1_4
44955     +          +     0.11576168045678 * H1x1_5  +     0.44470888441177 * H1x1_6
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.68721855914482 * H1x1_1 + -0.49548906059129 * H1x1_2 + -0.95479435424814 * H1x1_3 + -0.39636357013457 * H1x1_4 + 1.05784760554335 * H1x1_5 + 0.55302681608178 * H1x1_6 + 0.46646041474723 * H1x1_7 ;
44956     +          +     1.87629961612594 * H1x1_7 ;
44957     +   H2x2_7  =     0.68721855914482 * H1x1_1  +    -0.49548906059129 * H1x1_2
44958     +          +    -0.95479435424814 * H1x1_3  +    -0.39636357013457 * H1x1_4
44959     +          +     1.05784760554335 * H1x1_5  +     0.55302681608178 * H1x1_6
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.27434389803517 * H1x2_1 + -0.02074671287693 * H1x2_2 + -1.51155778758517 * H1x2_3 + -1.19011584420542 * H1x2_4 + -0.8540083688408 * H1x2_5 + -0.51772310023527 * H1x2_6 + -0.0192399267251 * H1x2_7 ;
44960     +          +     0.46646041474723 * H1x1_7 ;
44961     +   H2x2_1  = H2x2_1  +    -0.27434389803517 * H1x2_1
44962     +          +    -0.02074671287693 * H1x2_2  +    -1.51155778758517 * H1x2_3
44963     +          +    -1.19011584420542 * H1x2_4  +     -0.8540083688408 * H1x2_5
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.312525087163 * H1x2_1 + 1.19175487774401 * H1x2_2 + -1.10903746388023 * H1x2_3 + 0.2627511726941 * H1x2_4 + -1.49474705736936 * H1x2_5 + 0.79354329450131 * H1x2_6 + -0.48676510074213 * H1x2_7 ;
44964     +          +    -0.51772310023527 * H1x2_6  +     -0.0192399267251 * H1x2_7 ;
44965     +   H2x2_2  = H2x2_2  +      -1.312525087163 * H1x2_1
44966     +          +     1.19175487774401 * H1x2_2  +    -1.10903746388023 * H1x2_3
44967     +          +      0.2627511726941 * H1x2_4  +    -1.49474705736936 * H1x2_5
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.36715282986404 * H1x2_1 + -1.54691354420052 * H1x2_2 + 0.58334429972967 * H1x2_3 + 3.32026929025218 * H1x2_4 + 0.08578287392048 * H1x2_5 + 0.66591130534429 * H1x2_6 + 0.57559013181145 * H1x2_7 ;
44968     +          +     0.79354329450131 * H1x2_6  +    -0.48676510074213 * H1x2_7 ;
44969     +   H2x2_3  = H2x2_3  +     0.36715282986404 * H1x2_1
44970     +          +    -1.54691354420052 * H1x2_2  +     0.58334429972967 * H1x2_3
44971     +          +     3.32026929025218 * H1x2_4  +     0.08578287392048 * H1x2_5
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.28239253398808 * H1x2_1 + 0.06662925242621 * H1x2_2 + 0.49967984015316 * H1x2_3 + 0.65508978056742 * H1x2_4 + -0.28141359636508 * H1x2_5 + -0.11787887977724 * H1x2_6 + -0.6607325871171 * H1x2_7 ;
44972     +          +     0.66591130534429 * H1x2_6  +     0.57559013181145 * H1x2_7 ;
44973     +   H2x2_4  = H2x2_4  +     1.28239253398808 * H1x2_1
44974     +          +     0.06662925242621 * H1x2_2  +     0.49967984015316 * H1x2_3
44975     +          +     0.65508978056742 * H1x2_4  +    -0.28141359636508 * H1x2_5
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.49511046906315 * H1x2_1 + -1.88759923025868 * H1x2_2 + -0.99578805432186 * H1x2_3 + 0.47300607025135 * H1x2_4 + 0.73725488149784 * H1x2_5 + 0.56107930260304 * H1x2_6 + -0.6618265083723 * H1x2_7 ;
44976     +          +    -0.11787887977724 * H1x2_6  +     -0.6607325871171 * H1x2_7 ;
44977     +   H2x2_5  = H2x2_5  +    -0.49511046906315 * H1x2_1
44978     +          +    -1.88759923025868 * H1x2_2  +    -0.99578805432186 * H1x2_3
44979     +          +     0.47300607025135 * H1x2_4  +     0.73725488149784 * H1x2_5
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + -0.56511063846684 * H1x2_1 + 0.1682036403191 * H1x2_2 + -0.7835100270482 * H1x2_3 + -0.05926261017522 * H1x2_4 + 0.28303530518131 * H1x2_5 + 1.57291802723543 * H1x2_6 + -1.59403373749444 * H1x2_7 ;
44980     +          +     0.56107930260304 * H1x2_6  +     -0.6618265083723 * H1x2_7 ;
44981     +   H2x2_6  = H2x2_6  +    -0.56511063846684 * H1x2_1
44982     +          +      0.1682036403191 * H1x2_2  +     -0.7835100270482 * H1x2_3
44983     +          +    -0.05926261017522 * H1x2_4  +     0.28303530518131 * H1x2_5
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -1.06397759700592 * H1x2_1 + -0.21206214531111 * H1x2_2 + 1.52697813698804 * H1x2_3 + -0.03132126915438 * H1x2_4 + 0.11910805580916 * H1x2_5 + 1.03394382602734 * H1x2_6 + -0.28139834412941 * H1x2_7 ;
44984     +          +     1.57291802723543 * H1x2_6  +    -1.59403373749444 * H1x2_7 ;
44985     +   H2x2_7  = H2x2_7  +    -1.06397759700592 * H1x2_1
44986     +          +    -0.21206214531111 * H1x2_2  +     1.52697813698804 * H1x2_3
44987     +          +    -0.03132126915438 * H1x2_4  +     0.11910805580916 * H1x2_5
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.18028681022903 * H1x3_1 + -0.56354962807969 * H1x3_2 + -0.32071823564038 * H1x3_3 + -1.14868021494554 * H1x3_4 + 0.50491385711883 * H1x3_5 + 0.3595638799915 * H1x3_6 + -1.04253859844314 * H1x3_7 ;
44988     +          +     1.03394382602734 * H1x2_6  +    -0.28139834412941 * H1x2_7 ;
44989     +   H2x2_1  = H2x2_1  +    -1.18028681022903 * H1x3_1
44990     +          +    -0.56354962807969 * H1x3_2  +    -0.32071823564038 * H1x3_3
44991     +          +    -1.14868021494554 * H1x3_4  +     0.50491385711883 * H1x3_5
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 1.10237781244945 * H1x3_1 + 1.08171284637926 * H1x3_2 + 0.51153068676713 * H1x3_3 + -0.0106772728333 * H1x3_4 + 0.21777593557961 * H1x3_5 + 0.10772516691825 * H1x3_6 + -0.91346091248416 * H1x3_7 ;
44992     +          +      0.3595638799915 * H1x3_6  +    -1.04253859844314 * H1x3_7 ;
44993     +   H2x2_2  = H2x2_2  +     1.10237781244945 * H1x3_1
44994     +          +     1.08171284637926 * H1x3_2  +     0.51153068676713 * H1x3_3
44995     +          +     -0.0106772728333 * H1x3_4  +     0.21777593557961 * H1x3_5
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.71132206215234 * H1x3_1 + 0.60006902706544 * H1x3_2 + -0.471170925786 * H1x3_3 + 0.07477379311969 * H1x3_4 + -0.34034195429991 * H1x3_5 + 1.63429052967629 * H1x3_6 + 0.13697740143754 * H1x3_7 ;
44996     +          +     0.10772516691825 * H1x3_6  +    -0.91346091248416 * H1x3_7 ;
44997     +   H2x2_3  = H2x2_3  +    -0.71132206215234 * H1x3_1
44998     +          +     0.60006902706544 * H1x3_2  +      -0.471170925786 * H1x3_3
44999     +          +     0.07477379311969 * H1x3_4  +    -0.34034195429991 * H1x3_5
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.76338339806809 * H1x3_1 + 0.34600443003632 * H1x3_2 + -0.60707577837208 * H1x3_3 + 1.37001034857478 * H1x3_4 + -1.24749521510775 * H1x3_5 + -1.45784349983015 * H1x3_6 + 0.12879195100917 * H1x3_7 ;
45000     +          +     1.63429052967629 * H1x3_6  +     0.13697740143754 * H1x3_7 ;
45001     +   H2x2_4  = H2x2_4  +     0.76338339806809 * H1x3_1
45002     +          +     0.34600443003632 * H1x3_2  +    -0.60707577837208 * H1x3_3
45003     +          +     1.37001034857478 * H1x3_4  +    -1.24749521510775 * H1x3_5
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -2.33392280718246 * H1x3_1 + -0.48123076018945 * H1x3_2 + -0.76638732765894 * H1x3_3 + -1.76560846551209 * H1x3_4 + 1.62249911960883 * H1x3_5 + -0.31271093507345 * H1x3_6 + -0.34748800562391 * H1x3_7 ;
45004     +          +    -1.45784349983015 * H1x3_6  +     0.12879195100917 * H1x3_7 ;
45005     +   H2x2_5  = H2x2_5  +    -2.33392280718246 * H1x3_1
45006     +          +    -0.48123076018945 * H1x3_2  +    -0.76638732765894 * H1x3_3
45007     +          +    -1.76560846551209 * H1x3_4  +     1.62249911960883 * H1x3_5
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.53202536648562 * H1x3_1 + 0.36605088046069 * H1x3_2 + -1.7626773020241 * H1x3_3 + 0.14681062331369 * H1x3_4 + 0.10699108516053 * H1x3_5 + 2.24609371442936 * H1x3_6 + -0.59076884674419 * H1x3_7 ;
45008     +          +    -0.31271093507345 * H1x3_6  +    -0.34748800562391 * H1x3_7 ;
45009     +   H2x2_6  = H2x2_6  +     0.53202536648562 * H1x3_1
45010     +          +     0.36605088046069 * H1x3_2  +     -1.7626773020241 * H1x3_3
45011     +          +     0.14681062331369 * H1x3_4  +     0.10699108516053 * H1x3_5
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -0.05290923023086 * H1x3_1 + -0.30472796298249 * H1x3_2 + 1.89100111779461 * H1x3_3 + 0.51110284119421 * H1x3_4 + -0.2014479939412 * H1x3_5 + 1.02507111515379 * H1x3_6 + -0.63211120065975 * H1x3_7 ;
45012     +          +     2.24609371442936 * H1x3_6  +    -0.59076884674419 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.15023760884419 + H2x2_1 ;
45013     +   H2x2_7  = H2x2_7  +    -0.05290923023086 * H1x3_1
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.03542203438136 + H2x2_2 ;
45014     +          +    -0.30472796298249 * H1x3_2  +     1.89100111779461 * H1x3_3
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.03202542428687 + H2x2_3 ;
45015     +          +     0.51110284119421 * H1x3_4  +     -0.2014479939412 * H1x3_5
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.79380822765375 + H2x2_4 ;
45016     +          +     1.02507111515379 * H1x3_6  +    -0.63211120065975 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.37637686056399 + H2x2_5 ;
45017     +   H2x2_1  =    -2.15023760884419 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.12032383488066 + H2x2_6 ;
45018     +   H2x2_2  =    -1.03542203438136 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.84544057856735 + H2x2_7 ;
45019     +   H2x2_3  =    -1.03202542428687 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
45020     +   H2x2_4  =     0.79380822765375 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
45021     +   H2x2_5  =    -0.37637686056399 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
45022     +   H2x2_6  =    -0.12032383488066 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
45023     +   H2x2_7  =     0.84544057856735 + H2x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
45024     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
45025     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
45026     +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
45027     +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_7 = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
45028     +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   END;
45029     +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
45030     +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   ELSE DO;
45031     +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
45032     +   H2x2_7  = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
45033     +END;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
45034     +ELSE DO;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
45035     +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
45036     +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
45037     +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   END;
45038     +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
45039     +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
45040     +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
45041     +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
45042     +END;
45043     +*** *************************;
45044     +*** Writing the Node H3x1_ ;
45045     +*** *************************;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.90634182479211 * H2x1_1 + -0.09135307681655 * H2x1_2 + -1.1697186659188 * H2x1_3 + -1.58089509972168 * H2x1_4 + -0.36298075828987 * H2x1_5 + -0.1512750341775 * H2x1_6 + -0.95333639415651 * H2x1_7 ;
45046     +IF _DM_BAD EQ 0 THEN DO;
45047     +   H3x1_1  =    -0.90634182479211 * H2x1_1  +    -0.09135307681655 * H2x1_2
45048     +          +     -1.1697186659188 * H2x1_3  +    -1.58089509972168 * H2x1_4
45049     +          +    -0.36298075828987 * H2x1_5  +     -0.1512750341775 * H2x1_6
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.55686365647701 * H2x1_1 + 1.5696753982442 * H2x1_2 + -0.32250855602992 * H2x1_3 + 0.19455668370146 * H2x1_4 + 0.44351097086868 * H2x1_5 + 0.27358852097745 * H2x1_6 + 0.4281879736941 * H2x1_7 ;
45050     +          +    -0.95333639415651 * H2x1_7 ;
45051     +   H3x1_2  =     0.55686365647701 * H2x1_1  +      1.5696753982442 * H2x1_2
45052     +          +    -0.32250855602992 * H2x1_3  +     0.19455668370146 * H2x1_4
45053     +          +     0.44351097086868 * H2x1_5  +     0.27358852097745 * H2x1_6
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.12633341645489 * H2x1_1 + -0.66899185238366 * H2x1_2 + -2.56536949854372 * H2x1_3 + -1.44702955697377 * H2x1_4 + -2.12726548877297 * H2x1_5 + 0.98860110338896 * H2x1_6 + -1.81290069415788 * H2x1_7 ;
45054     +          +      0.4281879736941 * H2x1_7 ;
45055     +   H3x1_3  =     0.12633341645489 * H2x1_1  +    -0.66899185238366 * H2x1_2
45056     +          +    -2.56536949854372 * H2x1_3  +    -1.44702955697377 * H2x1_4
45057     +          +    -2.12726548877297 * H2x1_5  +     0.98860110338896 * H2x1_6
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.5244883189849 * H2x1_1 + -0.8795974458787 * H2x1_2 + -0.90961705850703 * H2x1_3 + -0.41256891447907 * H2x1_4 + -1.55913982799805 * H2x1_5 + -0.9171280329681 * H2x1_6 + -0.70506147827449 * H2x1_7 ;
45058     +          +    -1.81290069415788 * H2x1_7 ;
45059     +   H3x1_4  =     -1.5244883189849 * H2x1_1  +     -0.8795974458787 * H2x1_2
45060     +          +    -0.90961705850703 * H2x1_3  +    -0.41256891447907 * H2x1_4
45061     +          +    -1.55913982799805 * H2x1_5  +     -0.9171280329681 * H2x1_6
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.35217616707387 * H2x1_1 + -1.16700891298034 * H2x1_2 + 0.5371834401358 * H2x1_3 + 2.90147333104132 * H2x1_4 + 0.77800792666349 * H2x1_5 + 0.78250225671691 * H2x1_6 + -0.59091463760785 * H2x1_7 ;
45062     +          +    -0.70506147827449 * H2x1_7 ;
45063     +   H3x1_5  =     0.35217616707387 * H2x1_1  +    -1.16700891298034 * H2x1_2
45064     +          +      0.5371834401358 * H2x1_3  +     2.90147333104132 * H2x1_4
45065     +          +     0.77800792666349 * H2x1_5  +     0.78250225671691 * H2x1_6
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.44929632444778 * H2x1_1 + -0.78833736143978 * H2x1_2 + -2.25458905584756 * H2x1_3 + -1.94571232358746 * H2x1_4 + 1.80055450278469 * H2x1_5 + 1.56927477052283 * H2x1_6 + 0.56206783006188 * H2x1_7 ;
45066     +          +    -0.59091463760785 * H2x1_7 ;
45067     +   H3x1_6  =    -0.44929632444778 * H2x1_1  +    -0.78833736143978 * H2x1_2
45068     +          +    -2.25458905584756 * H2x1_3  +    -1.94571232358746 * H2x1_4
45069     +          +     1.80055450278469 * H2x1_5  +     1.56927477052283 * H2x1_6
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.50414812258238 * H2x2_1 + 2.71183535634521 * H2x2_2 + 0.92780495410356 * H2x2_3 + 1.94819401410825 * H2x2_4 + 0.85505273909828 * H2x2_5 + -0.66540689026991 * H2x2_6 + -0.32749055872531 * H2x2_7 ;
45070     +          +     0.56206783006188 * H2x1_7 ;
45071     +   H3x1_1  = H3x1_1  +    -1.50414812258238 * H2x2_1
45072     +          +     2.71183535634521 * H2x2_2  +     0.92780495410356 * H2x2_3
45073     +          +     1.94819401410825 * H2x2_4  +     0.85505273909828 * H2x2_5
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.55540470737424 * H2x2_1 + -1.17598972209898 * H2x2_2 + -0.16619065810258 * H2x2_3 + -0.58955298520043 * H2x2_4 + 1.04029871696373 * H2x2_5 + -0.71430896416332 * H2x2_6 + -1.57031773170963 * H2x2_7 ;
45074     +          +    -0.66540689026991 * H2x2_6  +    -0.32749055872531 * H2x2_7 ;
45075     +   H3x1_2  = H3x1_2  +     0.55540470737424 * H2x2_1
45076     +          +    -1.17598972209898 * H2x2_2  +    -0.16619065810258 * H2x2_3
45077     +          +    -0.58955298520043 * H2x2_4  +     1.04029871696373 * H2x2_5
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -1.83796456414338 * H2x2_1 + 1.49146311784803 * H2x2_2 + 0.05550989818961 * H2x2_3 + -0.08016006878981 * H2x2_4 + -1.41328284571945 * H2x2_5 + -0.58920642563444 * H2x2_6 + 1.30950353008631 * H2x2_7 ;
45078     +          +    -0.71430896416332 * H2x2_6  +    -1.57031773170963 * H2x2_7 ;
45079     +   H3x1_3  = H3x1_3  +    -1.83796456414338 * H2x2_1
45080     +          +     1.49146311784803 * H2x2_2  +     0.05550989818961 * H2x2_3
45081     +          +    -0.08016006878981 * H2x2_4  +    -1.41328284571945 * H2x2_5
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.91384399854626 * H2x2_1 + -0.0377841204978 * H2x2_2 + 0.67274196472005 * H2x2_3 + 0.76900504900432 * H2x2_4 + 0.71823373480501 * H2x2_5 + -0.04199535362683 * H2x2_6 + -0.23501610033448 * H2x2_7 ;
45082     +          +    -0.58920642563444 * H2x2_6  +     1.30950353008631 * H2x2_7 ;
45083     +   H3x1_4  = H3x1_4  +     0.91384399854626 * H2x2_1
45084     +          +     -0.0377841204978 * H2x2_2  +     0.67274196472005 * H2x2_3
45085     +          +     0.76900504900432 * H2x2_4  +     0.71823373480501 * H2x2_5
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.06769558303335 * H2x2_1 + -0.95662890382057 * H2x2_2 + -0.56314830579562 * H2x2_3 + -0.17355939108245 * H2x2_4 + 0.49684441057813 * H2x2_5 + -0.27220440010331 * H2x2_6 + 1.13747855812864 * H2x2_7 ;
45086     +          +    -0.04199535362683 * H2x2_6  +    -0.23501610033448 * H2x2_7 ;
45087     +   H3x1_5  = H3x1_5  +    -0.06769558303335 * H2x2_1
45088     +          +    -0.95662890382057 * H2x2_2  +    -0.56314830579562 * H2x2_3
45089     +          +    -0.17355939108245 * H2x2_4  +     0.49684441057813 * H2x2_5
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.58306849781773 * H2x2_1 + -1.96921645645113 * H2x2_2 + 0.09529919260054 * H2x2_3 + 1.84321935581989 * H2x2_4 + 1.90621049776113 * H2x2_5 + 0.22735961476244 * H2x2_6 + 1.7681869270915 * H2x2_7 ;
45090     +          +    -0.27220440010331 * H2x2_6  +     1.13747855812864 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.84072071725045 + H3x1_1 ;
45091     +   H3x1_6  = H3x1_6  +    -0.58306849781773 * H2x2_1
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.84331420680493 + H3x1_2 ;
45092     +          +    -1.96921645645113 * H2x2_2  +     0.09529919260054 * H2x2_3
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.15131491327763 + H3x1_3 ;
45093     +          +     1.84321935581989 * H2x2_4  +     1.90621049776113 * H2x2_5
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.56905094914727 + H3x1_4 ;
45094     +          +     0.22735961476244 * H2x2_6  +      1.7681869270915 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.29747074025762 + H3x1_5 ;
45095     +   H3x1_1  =     0.84072071725045 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 1.70771922783336 + H3x1_6 ;
45096     +   H3x1_2  =    -0.84331420680493 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 0;
45097     +   H3x1_3  =    -1.15131491327763 + H3x1_3 ;
45098     +   H3x1_4  =    -0.56905094914727 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 , H3x1_7 );
45099     +   H3x1_5  =     1.29747074025762 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
45100     +   H3x1_6  =     1.70771922783336 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
45101     +   H3x1_7  = 0;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
45102     +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 , H3x1_7
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
45103     +         );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
45104     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
45105     +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
45106     +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
45107     +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
45108     +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
45109     +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
45110     +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
45111     +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
45112     +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = EXP(H3x1_7 - _MAX_);
45113     +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_7 ;
45114     +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
45115     +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
45116     +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
45117     +   H3x1_7  = EXP(H3x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
45118     +   _SUM_ = _SUM_ + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
45119     +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
45120     +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 / _SUM_;
45121     +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   END;
45122     +   H3x1_4  = H3x1_4  / _SUM_;
45123     +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   ELSE DO;
45124     +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
45125     +   H3x1_7  = H3x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
45126     +END;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
45127     +ELSE DO;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
45128     +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
45129     +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
45130     +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   END;
45131     +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
45132     +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
45133     +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
45134     +   H3x1_7  = .;
45135     +END;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
45136     +*** *************************;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
45137     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
45138     +*** *************************;
45139     +
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
45140     +*** Generate dummy variables for DepVar ;
45141     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
45142     +label F_DepVar = 'From: DepVar' ;
45143     +length F_DepVar $ 12;
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
45144     +F_DepVar = put( DepVar , BEST. );
45145     +%DMNORMIP( F_DepVar )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
MPRINT(EM_DIAGRAM):   end;
45146     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   else do;
45147     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
45148     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
45149     +end;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
45150     +else do;
MPRINT(EM_DIAGRAM):   end;
45151     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
45152     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
45153     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
45154     +   end;
MPRINT(EM_DIAGRAM):   end;
45155     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
45156     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
45157     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
45158     +   end;
MPRINT(EM_DIAGRAM):   end;
45159     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
45160     +      DepVar1 = .;
45161     +      DepVar0 = .;
45162     +   end;
45163     +end;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.5125772193731 * H3x1_1 + 0.35682915649078 * H3x1_2 + -0.04349805114958 * H3x1_3 + -0.04491244667008 * H3x1_4 + 34.5477259369591 * H3x1_5 + -16.5063579573423 * H3x1_6 + 0.83421675743806 * H3x1_7 ;
45164     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.85864742009761 + P_DepVar1 ;
45165     +   P_DepVar1  =    -10.5125772193731 * H3x1_1  +     0.35682915649078 * H3x1_2
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
45166     +          +    -0.04349805114958 * H3x1_3  +    -0.04491244667008 * H3x1_4
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
45167     +          +     34.5477259369591 * H3x1_5  +    -16.5063579573423 * H3x1_6
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
45168     +          +     0.83421675743806 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
45169     +   P_DepVar1  =     6.85864742009761 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
45170     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
45171     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
45172     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
45173     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
45174     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   END;
45175     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
45176     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE DO;
45177     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
45178     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
45179     +END;
MPRINT(EM_DIAGRAM):   END;
45180     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
45181     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
45182     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   END;
45183     +END;
MPRINT(EM_DIAGRAM):   *** *****************************;
45184     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
45185     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   *** ******************************;
45186     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
45187     +END;
45188     +*** *****************************;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
45189     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
45190     +*** ******************************;
45191     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
45192     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
45193     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
45194     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
45195     +*** *************************;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
45196     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
45197     +*** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
45198     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
45199     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
45200     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   END;
45201     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   ********************************;
45202     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
45203     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   ********************************;
45204     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   drop S_:;
45205     +END;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural43;
45206     +********************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45207     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural43;
45208     +********************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45209     +drop S_:;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar1;
45210     +* Renaming variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar1 = P_DepVar1;
45211     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar0;
45212     +* Renaming Posterior variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar0 = P_DepVar0;
45213     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45214     +drop AutoNeural43_P_DepVar1;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural43;
45215     +AutoNeural43_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45216     +drop AutoNeural43_P_DepVar0;
45217     +AutoNeural43_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   length AutoNeural43_WARN_ $4;
45218     +*------------------------------------------------------------*;
45219     +* Renaming _WARN_ variable for AutoNeural43;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_WARN_;
45220     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   AutoNeural43_WARN_ = _WARN_;
45221     +length AutoNeural43_WARN_ $4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45222     +drop AutoNeural43_WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45223     +AutoNeural43_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
45224     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
45225     +* Ensmbl57: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural46;
45226     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45227     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
45228     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
45229     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   ***********************************;
45230     +* NODE: AutoNeural46;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
45231     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
45232     +***********************************;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
45233     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
45234     +***********************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
45235     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
45236     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
45237     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
45238     + _MAX_ = .;
45239     + _MAXP_ = .;
45240     + _SUM_ = .;
45241     + _NTRIALS = .;
45242     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
45243     +LENGTH _WARN_ $4
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
45244     +      F_DepVar  $ 12
45245     +;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
45246     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
45247     +
45248     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
45249     +
45250     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
45251     +
45252     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
45253     +
45254     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
45255     +
45256     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
45257     +
45258     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
45259     +
45260     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
45261     +
45262     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
45263     +
45264     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
45265     +
45266     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
45267     +
45268     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
45269     +
45270     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
45271     +
45272     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
45273     +
45274     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
45275     +
45276     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
45277     +
45278     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
45279     +
45280     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
45281     +
45282     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
45283     +
45284     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
45285     +
45286     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
45287     +
45288     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
45289     +
45290     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
45291     +
45292     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
45293     +
45294     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
45295     +
45296     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
45297     +
45298     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
45299     +
45300     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
45301     +
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
45302     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
45303     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
45304     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
45305     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
45306     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
45307     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
45308     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
45309     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
45310     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
45311     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45312     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
45313     +   Marital_StatusSingle = .;
45314     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   else do;
45315     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
45316     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
45317     +end;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
45318     +else do;
45319     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(DMNORMIP):   call dmnorm(_dm8,
45320     +   _dm8 = put( Marital_Status , $8. );
45321     +   %DMNORMIP( _dm8 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
45322     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
45323     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
45324     +      if _dm8 <= 'MARRIED'  then do;
45325     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   else do;
45326     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
45327     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
45328     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
45329     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
45330     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   end;
45331     +               Marital_StatusMarried = 1;
45332     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
45333     +            end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
45334     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
45335     +      end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
45336     +      else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
45337     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
45338     +            Marital_StatusSingle = 1;
45339     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
45340     +         end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
45341     +      end;
The SAS System

MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
45342     +   end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
45343     +   else do;
MPRINT(EM_DIAGRAM):   end;
45344     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   else do;
45345     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
45346     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
45347     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
45348     +      else do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
45349     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
45350     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   end;
45351     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   end;
45352     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   end;
45353     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
45354     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
45355     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
45356     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
45357     +   end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
45358     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
45359     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45360     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
45361     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   end;
45362     +      Marital_StatusTogether = .;
45363     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** *************************;
45364     +      _DM_BAD = 1;
45365     +   end;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
45366     +end;
45367     +
45368     +*** *************************;
45369     +*** Checking missing input Interval
45370     +*** *************************;
45371     +
45372     +IF NMISS(
45373     +   AcceptedCmpTotal ,
45374     +   Frq ,
45375     +   Income ,
45376     +   Mnt ,
45377     +   MntGoldProds ,
45378     +   MntMeatProducts ,
45379     +   NumCatalogPurchases ,
45380     +   NumDealsPurchases ,
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , Recency , Teenhome , Year_Birth ) THEN DO;
45381     +   NumWebVisitsMonth ,
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
45382     +   RFMstat ,
45383     +   Recency ,
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45384     +   Teenhome ,
MPRINT(EM_DIAGRAM):   END;
45385     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   *** *************************;
45386     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
45387     +
MPRINT(EM_DIAGRAM):   *** *************************;
45388     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
45389     +END;
45390     +*** *************************;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
45391     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
45392     +*** *************************;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
45393     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
45394     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
45395     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
45396     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
45397     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
45398     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
45399     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
45400     +        MntGoldProds ;
45401     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
45402     +        MntMeatProducts ;
45403     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
45404     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
45405     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
45406     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
45407     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
45408     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   END;
45409     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
45410     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE DO;
45411     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
45412     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
45413     +END;
45414     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
45415     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
45416     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
45417     +        AcceptedCmpTotal ;
45418     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
45419     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
45420     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
45421     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
45422     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
45423     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
45424     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
45425     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
45426     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
45427     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
45428     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
45429     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
45430     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
45431     +   ELSE S_NumCatalogPurchases
45432     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
45433     +         ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
45434     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
45435     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
45436     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
45437     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
45438     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
45439     +        NumWebVisitsMonth ;
45440     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
45441     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
45442     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
45443     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
45444     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
45445     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   END;
45446     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
45447     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** *************************;
45448     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   *** *************************;
45449     +END;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
45450     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
45451     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
45452     +*** *************************;
45453     +*** *************************;
45454     +*** Writing the Node H1x1_ ;
45455     +*** *************************;
45456     +IF _DM_BAD EQ 0 THEN DO;
45457     +   H1x1_1  =    -0.10743056275421 * S_AcceptedCmpTotal
45458     +          +     0.03409888241348 * S_Frq  +    -0.00055974837068 * S_Income
45459     +          +       0.134341851096 * S_Mnt  +    -0.00857864409164 *
45460     +        S_MntGoldProds  +      0.4895390061827 * S_MntMeatProducts
45461     +          +    -0.01423451356563 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.10743056275421 * S_AcceptedCmpTotal + 0.03409888241348 * S_Frq + -0.00055974837068 * S_Income + 0.134341851096 * S_Mnt + -0.00857864409164 * S_MntGoldProds + 0.4895390061827 * S_MntMeatProducts + -0.01423451356563 * 
S_NumCatalogPurchases + 0.06006350655487 * S_NumDealsPurchases + -0.20885493964335 * S_NumWebVisitsMonth + -0.01173202621744 * S_RFMstat + 0.25819909101611 * S_Recency + -0.03326479668652 * S_Teenhome + 0.03371888312814 * S_Year_Birth ;
45462     +          +     0.06006350655487 * S_NumDealsPurchases
45463     +          +    -0.20885493964335 * S_NumWebVisitsMonth
45464     +          +    -0.01173202621744 * S_RFMstat  +     0.25819909101611 *
45465     +        S_Recency  +    -0.03326479668652 * S_Teenhome
45466     +          +     0.03371888312814 * S_Year_Birth ;
45467     +   H1x1_2  =    -0.03078478134042 * S_AcceptedCmpTotal
45468     +          +    -0.12351766308972 * S_Frq  +     -0.1943406821731 * S_Income
45469     +          +    -0.36027326127049 * S_Mnt  +     0.05117597516658 *
45470     +        S_MntGoldProds  +     0.07931191953223 * S_MntMeatProducts
45471     +          +    -0.03109266966794 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03078478134042 * S_AcceptedCmpTotal + -0.12351766308972 * S_Frq + -0.1943406821731 * S_Income + -0.36027326127049 * S_Mnt + 0.05117597516658 * S_MntGoldProds + 0.07931191953223 * S_MntMeatProducts + -0.03109266966794 * 
S_NumCatalogPurchases + 0.05524435494328 * S_NumDealsPurchases + -0.0105802056898 * S_NumWebVisitsMonth + 0.01793771049002 * S_RFMstat + 0.0322880575902 * S_Recency + 0.195010707702 * S_Teenhome + -0.0351563039686 * S_Year_Birth ;
45472     +          +     0.05524435494328 * S_NumDealsPurchases
45473     +          +     -0.0105802056898 * S_NumWebVisitsMonth
45474     +          +     0.01793771049002 * S_RFMstat  +      0.0322880575902 *
45475     +        S_Recency  +       0.195010707702 * S_Teenhome
45476     +          +     -0.0351563039686 * S_Year_Birth ;
45477     +   H1x1_3  =     0.23990987498311 * S_AcceptedCmpTotal
45478     +          +     0.04052411845464 * S_Frq  +    -0.00302331972067 * S_Income
45479     +          +     0.39981531247427 * S_Mnt  +     0.01433011413993 *
45480     +        S_MntGoldProds  +    -0.19955782687502 * S_MntMeatProducts
45481     +          +     0.07777995109144 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.23990987498311 * S_AcceptedCmpTotal + 0.04052411845464 * S_Frq + -0.00302331972067 * S_Income + 0.39981531247427 * S_Mnt + 0.01433011413993 * S_MntGoldProds + -0.19955782687502 * S_MntMeatProducts + 0.07777995109144 * 
S_NumCatalogPurchases + 0.08683394019767 * S_NumDealsPurchases + 0.27328366433987 * S_NumWebVisitsMonth + 0.0263930429288 * S_RFMstat + -0.38900647412136 * S_Recency + 0.0640153287908 * S_Teenhome + 0.07587467002123 * S_Year_Birth ;
45482     +          +     0.08683394019767 * S_NumDealsPurchases
45483     +          +     0.27328366433987 * S_NumWebVisitsMonth
45484     +          +      0.0263930429288 * S_RFMstat  +    -0.38900647412136 *
45485     +        S_Recency  +      0.0640153287908 * S_Teenhome
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.05820552608682 * Marital_StatusDivorced + -0.02695167777393 * Marital_StatusMarried + -0.00733864032764 * Marital_StatusSingle + 0.03838747494293 * Marital_StatusTogether ;
45486     +          +     0.07587467002123 * S_Year_Birth ;
45487     +   H1x1_1  = H1x1_1  +    -0.05820552608682 * Marital_StatusDivorced
45488     +          +    -0.02695167777393 * Marital_StatusMarried
45489     +          +    -0.00733864032764 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.00853551919442 * Marital_StatusDivorced + 0.42249671001117 * Marital_StatusMarried + -0.18515416581955 * Marital_StatusSingle + 0.25783473520826 * Marital_StatusTogether ;
45490     +          +     0.03838747494293 * Marital_StatusTogether ;
45491     +   H1x1_2  = H1x1_2  +    -0.00853551919442 * Marital_StatusDivorced
45492     +          +     0.42249671001117 * Marital_StatusMarried
45493     +          +    -0.18515416581955 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.4175036565076 * Marital_StatusDivorced + 0.45127582934777 * Marital_StatusMarried + 0.358157766485 * Marital_StatusSingle + 0.42627185625497 * Marital_StatusTogether ;
45494     +          +     0.25783473520826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.23226472635566 + H1x1_1 ;
45495     +   H1x1_3  = H1x1_3  +      0.4175036565076 * Marital_StatusDivorced
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.2313165328971 + H1x1_2 ;
45496     +          +     0.45127582934777 * Marital_StatusMarried
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.09755782095138 + H1x1_3 ;
45497     +          +       0.358157766485 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
45498     +          +     0.42627185625497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
45499     +   H1x1_1  =    -1.23226472635566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
45500     +   H1x1_2  =      2.2313165328971 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   END;
45501     +   H1x1_3  =     0.09755782095138 + H1x1_3 ;
45502     +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   ELSE DO;
45503     +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
45504     +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
45505     +END;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
45506     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
45507     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
45508     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
45509     +   H1x1_3  = .;
45510     +END;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
45511     +*** *************************;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
45512     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
45513     +*** *************************;
45514     +
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
45515     +*** Generate dummy variables for DepVar ;
45516     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
45517     +label F_DepVar = 'From: DepVar' ;
45518     +length F_DepVar $ 12;
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
45519     +F_DepVar = put( DepVar , BEST. );
45520     +%DMNORMIP( F_DepVar )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
MPRINT(EM_DIAGRAM):   end;
45521     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   else do;
45522     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
45523     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
45524     +end;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
45525     +else do;
MPRINT(EM_DIAGRAM):   end;
45526     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
45527     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
45528     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
45529     +   end;
MPRINT(EM_DIAGRAM):   end;
45530     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
45531     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
45532     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
45533     +   end;
MPRINT(EM_DIAGRAM):   end;
45534     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
45535     +      DepVar1 = .;
45536     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -68.075125441494 * H1x1_1 + -72.7630361672259 * H1x1_2 + -71.6251597703755 * H1x1_3 ;
45537     +   end;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -25.6080957302662 + P_DepVar1 ;
45538     +end;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
45539     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
45540     +   P_DepVar1  =     -68.075125441494 * H1x1_1  +    -72.7630361672259 * H1x1_2
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
45541     +          +    -71.6251597703755 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
45542     +   P_DepVar1  =    -25.6080957302662 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
45543     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
45544     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
45545     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
45546     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
45547     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   END;
45548     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
45549     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE DO;
45550     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
45551     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
45552     +END;
MPRINT(EM_DIAGRAM):   END;
45553     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
45554     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
45555     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   END;
45556     +END;
MPRINT(EM_DIAGRAM):   *** *****************************;
45557     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
45558     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   *** ******************************;
45559     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
45560     +END;
45561     +*** *****************************;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
45562     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
45563     +*** ******************************;
45564     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
45565     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
45566     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
45567     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
45568     +*** *************************;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
45569     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
45570     +*** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
45571     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
45572     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
45573     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   END;
45574     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   ********************************;
45575     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
45576     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   ********************************;
45577     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   drop S_:;
45578     +END;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural46;
45579     +********************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45580     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural46;
45581     +********************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45582     +drop S_:;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar1;
45583     +* Renaming variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar1 = P_DepVar1;
45584     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar0;
45585     +* Renaming Posterior variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar0 = P_DepVar0;
45586     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45587     +drop AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural46;
45588     +AutoNeural46_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45589     +drop AutoNeural46_P_DepVar0;
45590     +AutoNeural46_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   length AutoNeural46_WARN_ $4;
45591     +*------------------------------------------------------------*;
45592     +* Renaming _WARN_ variable for AutoNeural46;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_WARN_;
45593     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   AutoNeural46_WARN_ = _WARN_;
45594     +length AutoNeural46_WARN_ $4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45595     +drop AutoNeural46_WARN_;
45596     +AutoNeural46_WARN_ = _WARN_;
45597     +*------------------------------------------------------------*;
45598     +* Ensmbl57: Average Posteriors of 7 models;
45599     +*------------------------------------------------------------*;
45600     +P_DepVar1 = (
45601     +AutoNeural44_P_DepVar1 +
45602     +AutoNeural45_P_DepVar1 +
45603     +AutoNeural47_P_DepVar1 +
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural44_P_DepVar1 + AutoNeural45_P_DepVar1 + AutoNeural47_P_DepVar1 + AutoNeural41_P_DepVar1 + AutoNeural42_P_DepVar1 + AutoNeural43_P_DepVar1 + AutoNeural46_P_DepVar1 )/7;
45604     +AutoNeural41_P_DepVar1 +
45605     +AutoNeural42_P_DepVar1 +
45606     +AutoNeural43_P_DepVar1 +
45607     +AutoNeural46_P_DepVar1
45608     +)/7;
45609     +P_DepVar0 = (
45610     +AutoNeural44_P_DepVar0 +
45611     +AutoNeural45_P_DepVar0 +
45612     +AutoNeural47_P_DepVar0 +
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural44_P_DepVar0 + AutoNeural45_P_DepVar0 + AutoNeural47_P_DepVar0 + AutoNeural41_P_DepVar0 + AutoNeural42_P_DepVar0 + AutoNeural43_P_DepVar0 + AutoNeural46_P_DepVar0 )/7;
45613     +AutoNeural41_P_DepVar0 +
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45614     +AutoNeural42_P_DepVar0 +
MPRINT(EM_DIAGRAM):   * Ensmbl57: Computing Classification Vars;
45615     +AutoNeural43_P_DepVar0 +
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45616     +AutoNeural46_P_DepVar0
45617     +)/7;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. Use the LENGTH statement as the very first statement in the DATA STEP to declare the length of a character variable.
45618     +*------------------------------------------------------------*;
45619     +* Ensmbl57: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
45620     +*------------------------------------------------------------*;
45621     +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length _format $200;
45622     +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   drop _format;
MPRINT(EM_DIAGRAM):   _format= ' ';
45623     +length _format $200;
MPRINT(EM_DIAGRAM):   _p_= 0;
MPRINT(EM_DIAGRAM):   drop _p_;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
45624     +drop _format;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
45625     +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= '1';
45626     +_p_= 0;
MPRINT(EM_DIAGRAM):   end;
45627     +drop _p_;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
45628     +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
45629     +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _format= '0';
45630     +_format= '1';
MPRINT(EM_DIAGRAM):   end;
45631     +end;
45632     +if P_DepVar0 > _p_ then do;
45633     +_p_= P_DepVar0;
45634     +_format= '0';
45635     +end;
45636     +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
45637     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
45638     +* Ensmbl57: Producing Unformatted variable;
45639     +*------------------------------------------------------------*;
45640     +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
45641     +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45642     +else
MPRINT(EM_DIAGRAM):   * Ensmbl57: Computing _WARN_ Variable;
45643     +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
45644     +*------------------------------------------------------------*;
45645     +* Ensmbl57: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
45646     +*------------------------------------------------------------*;
45647     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   _WARN_ = '';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
45648     +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
45649     +_WARN_ = '';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
45650     +if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
45651     +if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
45652     +if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
45653     +if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
45654     +if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
45655     +if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
45656     +if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
45657     +if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
45658     +if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
45659     +if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
45660     +if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
45661     +if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
45662     +if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
45663     +if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
45664     +if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
45665     +if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
45666     +if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
45667     +if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
45668     +if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
45669     +if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
45670     +if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
45671     +if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
45672     +if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
45673     +if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45674     +if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   * Ensmbl57: Computing Residual Vars;
45675     +if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45676     +if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
45677     +if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
45678     +*------------------------------------------------------------*;
45679     +* Ensmbl57: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
45680     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
45681     +if
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
45682     +F_DepVar NE '1'
MPRINT(EM_DIAGRAM):   end;
45683     +AND F_DepVar NE '0'
45684     +then do;
MPRINT(EM_DIAGRAM):   else do;
45685     +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
45686     +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
45687     +end;
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
45688     +else do;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
45689     +R_DepVar1 = -P_DepVar1;
45690     +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   OTHERWISE;
45691     +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   END;
45692     +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   END;
45693     +WHEN('0') R_DepVar0 = R_DepVar0 +1;
45694     +OTHERWISE;
45695     +END;
45696     +END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
45697      run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL57_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL44_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      

MPRINT(EM_DIAGRAM):   quit;
45698      quit;
45699      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
45700      filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl57\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl57\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring AUTONEURAL44_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45701      *------------------------------------------------------------*;
45702      * Ensmbl57: Scoring AUTONEURAL44_VALIDATE data;
45703      *------------------------------------------------------------*;
45704      data EMWS8.Ensmbl57_VALIDATE
45705      / view=EMWS8.Ensmbl57_VALIDATE
45706      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl57_VALIDATE / view=EMWS8.Ensmbl57_VALIDATE ;
45707      set EMWS8.AutoNeural44_VALIDATE
45708      ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural44_VALIDATE ;
45709      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl57\EMFLOWSCORE.sas.
45710     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45711     +* Ensmbl57: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Combine model for DepVar;
45712     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45713     +* Ensmbl57: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 1 of 7;
45714     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45715     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45716     +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
45717     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
45718     +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
45719     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45720     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45721     +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
45722     +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
45723     +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
45724     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45725     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45726     +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
45727     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
45728     +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
45729     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45730     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45731     +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
45732     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
45733     +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
45734     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45735     +
45736     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
45737     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
MPRINT(EM_DIAGRAM):   Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
45738     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
45739     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
45740     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
45741     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
45742     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
45743     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45744     +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
45745     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
45746     +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
45747     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45748     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45749     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
45750     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45751     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
45752     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
45753     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
45754     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45755     +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
45756     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
45757     +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
45758     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45759     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45760     +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
45761     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
45762     +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
45763     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45764     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45765     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
45766     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
45767     +* NODE: AutoNeural44;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural44;
45768     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45769     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
45770     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
45771     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
45772     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
45773     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
45774     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
45775     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
45776     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
45777     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
45778     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
45779     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
45780     +LENGTH _WARN_ $4
45781     +      F_DepVar  $ 12
45782     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
45783     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
45784     +
45785     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
45786     +
45787     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
45788     +
45789     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
45790     +
45791     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
45792     +
45793     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
45794     +
45795     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
45796     +
45797     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
45798     +
45799     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
45800     +
45801     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
45802     +
45803     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
45804     +
45805     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
45806     +
45807     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
45808     +
45809     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
45810     +
45811     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
45812     +
45813     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
45814     +
45815     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
45816     +
45817     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
45818     +
45819     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
45820     +
45821     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
45822     +
45823     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
45824     +
45825     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
45826     +
45827     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
45828     +
45829     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
45830     +
45831     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
45832     +
45833     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
45834     +
45835     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
45836     +
45837     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
45838     +
45839     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
45840     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
45841     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
45842     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
45843     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
45844     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
45845     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
45846     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
45847     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
45848     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
45849     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
45850     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
45851     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
45852     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
45853     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45854     +end;
MPRINT(EM_DIAGRAM):   end;
45855     +else do;
MPRINT(EM_DIAGRAM):   else do;
45856     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
45857     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
45858     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
45859     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
45860     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
45861     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
45862     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
45863     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
45864     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
45865     +         end;
MPRINT(EM_DIAGRAM):   end;
45866     +         else do;
MPRINT(EM_DIAGRAM):   else do;
45867     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
45868     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
45869     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
45870     +            end;
MPRINT(EM_DIAGRAM):   end;
45871     +         end;
MPRINT(EM_DIAGRAM):   end;
45872     +      end;
MPRINT(EM_DIAGRAM):   end;
45873     +      else do;
MPRINT(EM_DIAGRAM):   else do;
45874     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
45875     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
45876     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
45877     +         end;
MPRINT(EM_DIAGRAM):   end;
45878     +      end;
MPRINT(EM_DIAGRAM):   end;
45879     +   end;
MPRINT(EM_DIAGRAM):   end;
45880     +   else do;
MPRINT(EM_DIAGRAM):   else do;
45881     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
45882     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
45883     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
45884     +      end;
MPRINT(EM_DIAGRAM):   end;
45885     +      else do;
MPRINT(EM_DIAGRAM):   else do;
45886     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
45887     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
45888     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
45889     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
45890     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
45891     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
45892     +         end;
MPRINT(EM_DIAGRAM):   end;
45893     +      end;
MPRINT(EM_DIAGRAM):   end;
45894     +   end;
MPRINT(EM_DIAGRAM):   end;
45895     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
45896     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
45897     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
45898     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
45899     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
45900     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
45901     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45902     +   end;
MPRINT(EM_DIAGRAM):   end;
45903     +end;
MPRINT(EM_DIAGRAM):   end;
45904     +
45905     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
45906     +*** Checking missing input Interval
45907     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
45908     +
45909     +IF NMISS(
45910     +   AcceptedCmpTotal ,
45911     +   Frq ,
45912     +   Income ,
45913     +   Mnt ,
45914     +   MntGoldProds ,
45915     +   MntMeatProducts ,
45916     +   NumCatalogPurchases ,
45917     +   NumDealsPurchases ,
45918     +   NumWebVisitsMonth ,
45919     +   RFMstat ,
45920     +   Recency ,
45921     +   Teenhome ,
45922     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , Recency , Teenhome , Year_Birth ) THEN DO;
45923     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
45924     +
45925     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45926     +END;
MPRINT(EM_DIAGRAM):   END;
45927     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
45928     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
45929     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
45930     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
45931     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
45932     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
45933     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
45934     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
45935     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
45936     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
45937     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
45938     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
45939     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
45940     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
45941     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
45942     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
45943     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
45944     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
45945     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
45946     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
45947     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
45948     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
45949     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
45950     +END;
MPRINT(EM_DIAGRAM):   END;
45951     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
45952     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
45953     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
45954     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
45955     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
45956     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
45957     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
45958     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
45959     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
45960     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
45961     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
45962     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
45963     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
45964     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
45965     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
45966     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
45967     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
45968     +   ELSE S_NumCatalogPurchases
45969     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
45970     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
45971     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
45972     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
45973     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
45974     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
45975     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
45976     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
45977     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
45978     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
45979     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
45980     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
45981     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
45982     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
45983     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
45984     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
45985     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
45986     +END;
MPRINT(EM_DIAGRAM):   END;
45987     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
45988     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
45989     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
45990     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
45991     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
45992     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
45993     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
45994     +   H1x1_1  =    -0.12469827057082 * S_AcceptedCmpTotal
45995     +          +      3.1876739677725 * S_Frq  +     0.13471808395353 * S_Income
45996     +          +    -0.55590218871332 * S_Mnt  +     0.49013595544334 *
45997     +        S_MntGoldProds  +    -8.24401774301659 * S_MntMeatProducts
45998     +          +    -1.41682724778123 * S_NumCatalogPurchases
45999     +          +    -0.81806751697478 * S_NumDealsPurchases
46000     +          +     0.13721060582485 * S_NumWebVisitsMonth
46001     +          +     -0.8599103465088 * S_RFMstat  +    -0.11788382213726 *
46002     +        S_Recency  +    -0.11154618858027 * S_Teenhome
46003     +          +    -0.09280870729016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.12469827057082 * S_AcceptedCmpTotal + 3.1876739677725 * S_Frq + 0.13471808395353 * S_Income + -0.55590218871332 * S_Mnt + 0.49013595544334 * S_MntGoldProds + -8.24401774301659 * S_MntMeatProducts + -1.41682724778123 * 
S_NumCatalogPurchases + -0.81806751697478 * S_NumDealsPurchases + 0.13721060582485 * S_NumWebVisitsMonth + -0.8599103465088 * S_RFMstat + -0.11788382213726 * S_Recency + -0.11154618858027 * S_Teenhome + -0.09280870729016 * S_Year_Birth ;
46004     +   H1x1_1  = H1x1_1  +     0.34960218424017 * Marital_StatusDivorced
46005     +          +    -0.42475372885131 * Marital_StatusMarried
46006     +          +     0.12884500504295 * Marital_StatusSingle
46007     +          +    -0.15810267147538 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.34960218424017 * Marital_StatusDivorced + -0.42475372885131 * Marital_StatusMarried + 0.12884500504295 * Marital_StatusSingle + -0.15810267147538 * Marital_StatusTogether ;
46008     +   H1x1_1  =    -5.00010358329252 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -5.00010358329252 + H1x1_1 ;
46009     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
46010     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
46011     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
46012     +END;
MPRINT(EM_DIAGRAM):   END;
46013     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
46014     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
46015     +END;
MPRINT(EM_DIAGRAM):   END;
46016     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46017     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
46018     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46019     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
46020     +   H1x2_1  =    -0.55977918187183 * S_AcceptedCmpTotal
46021     +          +     3.80877597264064 * S_Frq  +       0.740665099365 * S_Income
46022     +          +      1.2189502767856 * S_Mnt  +    -0.64069435073077 *
46023     +        S_MntGoldProds  +    -1.20953450523092 * S_MntMeatProducts
46024     +          +    -1.27566927607767 * S_NumCatalogPurchases
46025     +          +    -0.30700705450077 * S_NumDealsPurchases
46026     +          +    -1.10002183072059 * S_NumWebVisitsMonth
46027     +          +    -0.17115220906364 * S_RFMstat  +     0.98456522108133 *
46028     +        S_Recency  +    -0.46996209026516 * S_Teenhome
46029     +          +     0.11522881334392 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.55977918187183 * S_AcceptedCmpTotal + 3.80877597264064 * S_Frq + 0.740665099365 * S_Income + 1.2189502767856 * S_Mnt + -0.64069435073077 * S_MntGoldProds + -1.20953450523092 * S_MntMeatProducts + -1.27566927607767 * 
S_NumCatalogPurchases + -0.30700705450077 * S_NumDealsPurchases + -1.10002183072059 * S_NumWebVisitsMonth + -0.17115220906364 * S_RFMstat + 0.98456522108133 * S_Recency + -0.46996209026516 * S_Teenhome + 0.11522881334392 * S_Year_Birth ;
46030     +   H1x2_1  = H1x2_1  +    -0.23272680240317 * Marital_StatusDivorced
46031     +          +    -0.32389187879499 * Marital_StatusMarried
46032     +          +     0.77856411154011 * Marital_StatusSingle
46033     +          +    -0.63289071596123 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.23272680240317 * Marital_StatusDivorced + -0.32389187879499 * Marital_StatusMarried + 0.77856411154011 * Marital_StatusSingle + -0.63289071596123 * Marital_StatusTogether ;
46034     +   H1x2_1  =     3.21350083886443 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 3.21350083886443 + H1x2_1 ;
46035     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
46036     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
46037     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
46038     +END;
MPRINT(EM_DIAGRAM):   END;
46039     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
46040     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
46041     +END;
MPRINT(EM_DIAGRAM):   END;
46042     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46043     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
46044     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46045     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
46046     +   H2x1_1  =    -7.90353913070205 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -7.90353913070205 * H1x1_1 ;
46047     +   H2x1_1  = H2x1_1  +     -3.6151322253591 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -3.6151322253591 * H1x2_1 ;
46048     +   H2x1_1  =     2.06123756742001 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 2.06123756742001 + H2x1_1 ;
46049     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
46050     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
46051     +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
46052     +END;
MPRINT(EM_DIAGRAM):   END;
46053     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
46054     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
46055     +END;
MPRINT(EM_DIAGRAM):   END;
46056     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46057     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
46058     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46059     +
46060     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
46061     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
46062     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
46063     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
46064     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
46065     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
46066     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
46067     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
46068     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
46069     +end;
MPRINT(EM_DIAGRAM):   end;
46070     +else do;
MPRINT(EM_DIAGRAM):   else do;
46071     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
46072     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
46073     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
46074     +   end;
MPRINT(EM_DIAGRAM):   end;
46075     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
46076     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
46077     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
46078     +   end;
MPRINT(EM_DIAGRAM):   end;
46079     +   else do;
MPRINT(EM_DIAGRAM):   else do;
46080     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
46081     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
46082     +   end;
MPRINT(EM_DIAGRAM):   end;
46083     +end;
MPRINT(EM_DIAGRAM):   end;
46084     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
46085     +   P_DepVar1  =     23.6383607789635 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 23.6383607789635 * H2x1_1 ;
46086     +   P_DepVar1  =    -12.8845549880418 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.8845549880418 + P_DepVar1 ;
46087     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
46088     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
46089     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
46090     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
46091     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
46092     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
46093     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
46094     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
46095     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
46096     +END;
MPRINT(EM_DIAGRAM):   END;
46097     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
46098     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
46099     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
46100     +END;
MPRINT(EM_DIAGRAM):   END;
46101     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
46102     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
46103     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
46104     +END;
MPRINT(EM_DIAGRAM):   END;
46105     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
46106     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
46107     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
46108     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
46109     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
46110     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
46111     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
46112     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46113     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
46114     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46115     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
46116     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
46117     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
46118     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
46119     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
46120     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
46121     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
46122     +END;
MPRINT(EM_DIAGRAM):   END;
46123     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
46124     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
46125     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
46126     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
46127     +* Renaming variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural44;
46128     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46129     +* Renaming Posterior variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural44;
46130     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46131     +drop AutoNeural44_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar1;
46132     +AutoNeural44_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar1 = P_DepVar1;
46133     +drop AutoNeural44_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar0;
46134     +AutoNeural44_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar0 = P_DepVar0;
46135     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46136     +* Renaming _WARN_ variable for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural44;
46137     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46138     +length AutoNeural44_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural44_WARN_ $4;
46139     +drop AutoNeural44_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_WARN_;
46140     +AutoNeural44_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural44_WARN_ = _WARN_;
46141     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46142     +* Ensmbl57: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 2 of 7;
46143     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46144     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46145     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
46146     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
46147     +* NODE: AutoNeural45;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural45;
46148     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46149     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
46150     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
46151     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
46152     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
46153     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
46154     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
46155     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
46156     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
46157     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
46158     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
46159     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
46160     +LENGTH _WARN_ $4
46161     +      F_DepVar  $ 12
46162     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
46163     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
46164     +
46165     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
46166     +
46167     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
46168     +
46169     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
46170     +
46171     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
46172     +
46173     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
46174     +
46175     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
46176     +
46177     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
46178     +
46179     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
46180     +
46181     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
46182     +
46183     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
46184     +
46185     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
46186     +
46187     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
46188     +
46189     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
46190     +
46191     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
46192     +
46193     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
46194     +
46195     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
46196     +
46197     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
46198     +
46199     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
46200     +
46201     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
46202     +
46203     +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
46204     +
46205     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
46206     +
46207     +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
46208     +
46209     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
46210     +
46211     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
46212     +
46213     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
46214     +
46215     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
46216     +
46217     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
46218     +
46219     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
46220     +
46221     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
46222     +
46223     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
46224     +
46225     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
46226     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
46227     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
46228     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
46229     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
46230     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
46231     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
46232     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
46233     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
46234     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
46235     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
46236     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
46237     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
46238     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
46239     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
46240     +end;
MPRINT(EM_DIAGRAM):   end;
46241     +else do;
MPRINT(EM_DIAGRAM):   else do;
46242     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
46243     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
46244     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
46245     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
46246     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
46247     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
46248     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
46249     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
46250     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
46251     +         end;
MPRINT(EM_DIAGRAM):   end;
46252     +         else do;
MPRINT(EM_DIAGRAM):   else do;
46253     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
46254     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
46255     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
46256     +            end;
MPRINT(EM_DIAGRAM):   end;
46257     +         end;
MPRINT(EM_DIAGRAM):   end;
46258     +      end;
MPRINT(EM_DIAGRAM):   end;
46259     +      else do;
MPRINT(EM_DIAGRAM):   else do;
46260     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
46261     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
46262     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
46263     +         end;
MPRINT(EM_DIAGRAM):   end;
46264     +      end;
MPRINT(EM_DIAGRAM):   end;
46265     +   end;
MPRINT(EM_DIAGRAM):   end;
46266     +   else do;
MPRINT(EM_DIAGRAM):   else do;
46267     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
46268     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
46269     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
46270     +      end;
MPRINT(EM_DIAGRAM):   end;
46271     +      else do;
MPRINT(EM_DIAGRAM):   else do;
46272     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
46273     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
46274     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
46275     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
46276     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
46277     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
46278     +         end;
MPRINT(EM_DIAGRAM):   end;
46279     +      end;
MPRINT(EM_DIAGRAM):   end;
46280     +   end;
MPRINT(EM_DIAGRAM):   end;
46281     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
46282     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
46283     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
46284     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
46285     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
46286     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
46287     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
46288     +   end;
MPRINT(EM_DIAGRAM):   end;
46289     +end;
MPRINT(EM_DIAGRAM):   end;
46290     +
46291     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46292     +*** Checking missing input Interval
46293     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
46294     +
46295     +IF NMISS(
46296     +   AcceptedCmpTotal ,
46297     +   Frq ,
46298     +   Income ,
46299     +   Mnt ,
46300     +   MntGoldProds ,
46301     +   MntMeatProducts ,
46302     +   NumCatalogPurchases ,
46303     +   NumDealsPurchases ,
46304     +   NumWebVisitsMonth ,
46305     +   RFMstat ,
46306     +   Recency ,
46307     +   Teenhome ,
46308     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , Recency , Teenhome , Year_Birth ) THEN DO;
46309     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
46310     +
46311     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
46312     +END;
MPRINT(EM_DIAGRAM):   END;
46313     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46314     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
46315     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46316     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
46317     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
46318     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
46319     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
46320     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
46321     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
46322     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
46323     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
46324     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
46325     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
46326     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
46327     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
46328     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
46329     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
46330     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
46331     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
46332     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
46333     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
46334     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
46335     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
46336     +END;
MPRINT(EM_DIAGRAM):   END;
46337     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
46338     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
46339     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
46340     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
46341     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
46342     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
46343     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
46344     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
46345     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
46346     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
46347     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
46348     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
46349     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
46350     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
46351     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
46352     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
46353     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
46354     +   ELSE S_NumCatalogPurchases
46355     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
46356     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
46357     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
46358     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
46359     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
46360     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
46361     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
46362     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
46363     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
46364     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
46365     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
46366     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
46367     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
46368     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
46369     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
46370     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
46371     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
46372     +END;
MPRINT(EM_DIAGRAM):   END;
46373     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46374     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
46375     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46376     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46377     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
46378     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46379     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
46380     +   H1x1_1  =     0.05803258857677 * S_AcceptedCmpTotal
46381     +          +     0.20201401677737 * S_Frq  +    -0.20060721007078 * S_Income
46382     +          +     0.60811032155087 * S_Mnt  +     0.01308658928857 *
46383     +        S_MntGoldProds  +    -0.32543222756203 * S_MntMeatProducts
46384     +          +    -0.17075976331442 * S_NumCatalogPurchases
46385     +          +     0.11936859656737 * S_NumDealsPurchases
46386     +          +    -0.02241344557322 * S_NumWebVisitsMonth
46387     +          +    -0.00310652561662 * S_RFMstat  +    -0.02230175002754 *
46388     +        S_Recency  +     0.15041197329983 * S_Teenhome
46389     +          +     0.08314198987289 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.05803258857677 * S_AcceptedCmpTotal + 0.20201401677737 * S_Frq + -0.20060721007078 * S_Income + 0.60811032155087 * S_Mnt + 0.01308658928857 * S_MntGoldProds + -0.32543222756203 * S_MntMeatProducts + -0.17075976331442 * 
S_NumCatalogPurchases + 0.11936859656737 * S_NumDealsPurchases + -0.02241344557322 * S_NumWebVisitsMonth + -0.00310652561662 * S_RFMstat + -0.02230175002754 * S_Recency + 0.15041197329983 * S_Teenhome + 0.08314198987289 * S_Year_Birth ;
46390     +   H1x1_2  =    -0.00804143026158 * S_AcceptedCmpTotal
46391     +          +     0.27782411169423 * S_Frq  +    -0.09048435288173 * S_Income
46392     +          +    -0.33276938238431 * S_Mnt  +     0.04318269159154 *
46393     +        S_MntGoldProds  +     -2.0876028997983 * S_MntMeatProducts
46394     +          +     -0.1082096588215 * S_NumCatalogPurchases
46395     +          +    -0.35286072202398 * S_NumDealsPurchases
46396     +          +     0.41909763538671 * S_NumWebVisitsMonth
46397     +          +    -0.00388254493812 * S_RFMstat  +    -0.25572729223699 *
46398     +        S_Recency  +     0.03657184300378 * S_Teenhome
46399     +          +    -0.16144911909057 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.00804143026158 * S_AcceptedCmpTotal + 0.27782411169423 * S_Frq + -0.09048435288173 * S_Income + -0.33276938238431 * S_Mnt + 0.04318269159154 * S_MntGoldProds + -2.0876028997983 * S_MntMeatProducts + -0.1082096588215 * 
S_NumCatalogPurchases + -0.35286072202398 * S_NumDealsPurchases + 0.41909763538671 * S_NumWebVisitsMonth + -0.00388254493812 * S_RFMstat + -0.25572729223699 * S_Recency + 0.03657184300378 * S_Teenhome + -0.16144911909057 * S_Year_Birth ;
46400     +   H1x1_1  = H1x1_1  +    -0.14329179496615 * Marital_StatusDivorced
46401     +          +     0.35890266446407 * Marital_StatusMarried
46402     +          +    -0.32958224268654 * Marital_StatusSingle
46403     +          +     0.26093411772209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.14329179496615 * Marital_StatusDivorced + 0.35890266446407 * Marital_StatusMarried + -0.32958224268654 * Marital_StatusSingle + 0.26093411772209 * Marital_StatusTogether ;
46404     +   H1x1_2  = H1x1_2  +     0.31162998470604 * Marital_StatusDivorced
46405     +          +    -0.02828904025667 * Marital_StatusMarried
46406     +          +      0.2062300465945 * Marital_StatusSingle
46407     +          +    -0.11283173230117 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.31162998470604 * Marital_StatusDivorced + -0.02828904025667 * Marital_StatusMarried + 0.2062300465945 * Marital_StatusSingle + -0.11283173230117 * Marital_StatusTogether ;
46408     +   H1x1_1  =     0.22625757706844 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.22625757706844 + H1x1_1 ;
46409     +   H1x1_2  =    -2.80839017705591 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.80839017705591 + H1x1_2 ;
46410     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
46411     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
46412     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
46413     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
46414     +END;
MPRINT(EM_DIAGRAM):   END;
46415     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
46416     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
46417     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
46418     +END;
MPRINT(EM_DIAGRAM):   END;
46419     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46420     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
46421     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46422     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
46423     +   H1x2_1  =     0.27800214153202 * S_AcceptedCmpTotal
46424     +          +     0.25771103125393 * S_Frq  +     0.06540858611057 * S_Income
46425     +          +     0.88062167564978 * S_Mnt  +    -0.03352879166216 *
46426     +        S_MntGoldProds  +    -0.36438303456911 * S_MntMeatProducts
46427     +          +    -0.01120232190428 * S_NumCatalogPurchases
46428     +          +     0.08335061407191 * S_NumDealsPurchases
46429     +          +     0.19045617784308 * S_NumWebVisitsMonth
46430     +          +    -0.06814497340743 * S_RFMstat  +     -0.3861487824541 *
46431     +        S_Recency  +    -0.01223664611486 * S_Teenhome
46432     +          +     0.11830416426236 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27800214153202 * S_AcceptedCmpTotal + 0.25771103125393 * S_Frq + 0.06540858611057 * S_Income + 0.88062167564978 * S_Mnt + -0.03352879166216 * S_MntGoldProds + -0.36438303456911 * S_MntMeatProducts + -0.01120232190428 * 
S_NumCatalogPurchases + 0.08335061407191 * S_NumDealsPurchases + 0.19045617784308 * S_NumWebVisitsMonth + -0.06814497340743 * S_RFMstat + -0.3861487824541 * S_Recency + -0.01223664611486 * S_Teenhome + 0.11830416426236 * S_Year_Birth ;
46433     +   H1x2_2  =     0.00966586432047 * S_AcceptedCmpTotal
46434     +          +    -0.15805213020363 * S_Frq  +    -0.10704590641296 * S_Income
46435     +          +    -0.22835348335472 * S_Mnt  +     0.04216459566963 *
46436     +        S_MntGoldProds  +     0.12105776304851 * S_MntMeatProducts
46437     +          +     0.05405710367459 * S_NumCatalogPurchases
46438     +          +     0.05779108423435 * S_NumDealsPurchases
46439     +          +     0.06578830114376 * S_NumWebVisitsMonth
46440     +          +     0.03581918113264 * S_RFMstat  +    -0.03493380943266 *
46441     +        S_Recency  +     0.07188455936346 * S_Teenhome
46442     +          +    -0.01037640411629 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.00966586432047 * S_AcceptedCmpTotal + -0.15805213020363 * S_Frq + -0.10704590641296 * S_Income + -0.22835348335472 * S_Mnt + 0.04216459566963 * S_MntGoldProds + 0.12105776304851 * S_MntMeatProducts + 0.05405710367459 * 
S_NumCatalogPurchases + 0.05779108423435 * S_NumDealsPurchases + 0.06578830114376 * S_NumWebVisitsMonth + 0.03581918113264 * S_RFMstat + -0.03493380943266 * S_Recency + 0.07188455936346 * S_Teenhome + -0.01037640411629 * S_Year_Birth ;
46443     +   H1x2_1  = H1x2_1  +    -0.11011761565852 * Marital_StatusDivorced
46444     +          +     -0.0971208757038 * Marital_StatusMarried
46445     +          +    -0.07250288479873 * Marital_StatusSingle
46446     +          +    -0.09370040203357 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.11011761565852 * Marital_StatusDivorced + -0.0971208757038 * Marital_StatusMarried + -0.07250288479873 * Marital_StatusSingle + -0.09370040203357 * Marital_StatusTogether ;
46447     +   H1x2_2  = H1x2_2  +     0.00981909678131 * Marital_StatusDivorced
46448     +          +     0.21091057941446 * Marital_StatusMarried
46449     +          +    -0.10578923343752 * Marital_StatusSingle
46450     +          +     0.14340624257864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.00981909678131 * Marital_StatusDivorced + 0.21091057941446 * Marital_StatusMarried + -0.10578923343752 * Marital_StatusSingle + 0.14340624257864 * Marital_StatusTogether ;
46451     +   H1x2_1  =    -1.44195571181963 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.44195571181963 + H1x2_1 ;
46452     +   H1x2_2  =    -1.92908634775882 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.92908634775882 + H1x2_2 ;
46453     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
46454     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
46455     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
46456     +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
46457     +END;
MPRINT(EM_DIAGRAM):   END;
46458     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
46459     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
46460     +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
46461     +END;
MPRINT(EM_DIAGRAM):   END;
46462     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46463     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
46464     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46465     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
46466     +   H2x1_1  =     22.0923538262076 * H1x1_1  +     8.31949814946749 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 22.0923538262076 * H1x1_1 + 8.31949814946749 * H1x1_2 ;
46467     +   H2x1_1  = H2x1_1  +    -17.2128148948815 * H1x2_1
46468     +          +    -68.7975539209644 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -17.2128148948815 * H1x2_1 + -68.7975539209644 * H1x2_2 ;
46469     +   H2x1_1  =    -0.74489671021313 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.74489671021313 + H2x1_1 ;
46470     +   H2x1_2  = 0;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0;
46471     +   _MAX_ = MAX (H2x1_1 , H2x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 );
46472     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
46473     +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
46474     +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
46475     +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
46476     +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
46477     +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
46478     +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
46479     +END;
MPRINT(EM_DIAGRAM):   END;
46480     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
46481     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
46482     +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
46483     +END;
MPRINT(EM_DIAGRAM):   END;
46484     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46485     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
46486     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46487     +
46488     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
46489     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
46490     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
46491     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
46492     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
46493     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
46494     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
46495     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
46496     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
46497     +end;
MPRINT(EM_DIAGRAM):   end;
46498     +else do;
MPRINT(EM_DIAGRAM):   else do;
46499     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
46500     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
46501     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
46502     +   end;
MPRINT(EM_DIAGRAM):   end;
46503     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
46504     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
46505     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
46506     +   end;
MPRINT(EM_DIAGRAM):   end;
46507     +   else do;
MPRINT(EM_DIAGRAM):   else do;
46508     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
46509     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
46510     +   end;
MPRINT(EM_DIAGRAM):   end;
46511     +end;
MPRINT(EM_DIAGRAM):   end;
46512     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
46513     +   P_DepVar1  =    -142.808746328345 * H2x1_1  +     -41.474410437113 * H2x1_2
46514     +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -142.808746328345 * H2x1_1 + -41.474410437113 * H2x1_2 ;
46515     +   P_DepVar1  =     56.9415259403341 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 56.9415259403341 + P_DepVar1 ;
46516     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
46517     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
46518     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
46519     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
46520     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
46521     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
46522     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
46523     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
46524     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
46525     +END;
MPRINT(EM_DIAGRAM):   END;
46526     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
46527     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
46528     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
46529     +END;
MPRINT(EM_DIAGRAM):   END;
46530     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
46531     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
46532     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
46533     +END;
MPRINT(EM_DIAGRAM):   END;
46534     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
46535     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
46536     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
46537     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
46538     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
46539     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
46540     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
46541     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46542     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
46543     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46544     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
46545     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
46546     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
46547     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
46548     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
46549     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
46550     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
46551     +END;
MPRINT(EM_DIAGRAM):   END;
46552     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
46553     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
46554     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
46555     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
46556     +* Renaming variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural45;
46557     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46558     +* Renaming Posterior variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural45;
46559     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46560     +drop AutoNeural45_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar1;
46561     +AutoNeural45_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar1 = P_DepVar1;
46562     +drop AutoNeural45_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar0;
46563     +AutoNeural45_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar0 = P_DepVar0;
46564     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46565     +* Renaming _WARN_ variable for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural45;
46566     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46567     +length AutoNeural45_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural45_WARN_ $4;
46568     +drop AutoNeural45_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_WARN_;
46569     +AutoNeural45_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural45_WARN_ = _WARN_;
46570     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46571     +* Ensmbl57: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 3 of 7;
46572     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46573     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46574     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
46575     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
46576     +* NODE: AutoNeural47;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural47;
46577     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46578     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
46579     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
46580     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
46581     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
46582     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
46583     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
46584     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
46585     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
46586     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
46587     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
46588     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
46589     +LENGTH _WARN_ $4
46590     +      F_DepVar  $ 12
46591     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
46592     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
46593     +
46594     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
46595     +
46596     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
46597     +
46598     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
46599     +
46600     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
46601     +
46602     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
46603     +
46604     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
46605     +
46606     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
46607     +
46608     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
46609     +
46610     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
46611     +
46612     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
46613     +
46614     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
46615     +
46616     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
46617     +
46618     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
46619     +
46620     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
46621     +
46622     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
46623     +
46624     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
46625     +
46626     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
46627     +
46628     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
46629     +
46630     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
46631     +
46632     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
46633     +
46634     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
46635     +
46636     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
46637     +
46638     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
46639     +
46640     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
46641     +
46642     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
46643     +
46644     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
46645     +
46646     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
46647     +
46648     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
46649     +
46650     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
46651     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
46652     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
46653     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
46654     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
46655     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
46656     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
46657     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
46658     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
46659     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
46660     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
46661     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
46662     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
46663     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
46664     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
46665     +end;
MPRINT(EM_DIAGRAM):   end;
46666     +else do;
MPRINT(EM_DIAGRAM):   else do;
46667     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
46668     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
46669     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
46670     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
46671     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
46672     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
46673     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
46674     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
46675     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
46676     +         end;
MPRINT(EM_DIAGRAM):   end;
46677     +         else do;
MPRINT(EM_DIAGRAM):   else do;
46678     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
46679     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
46680     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
46681     +            end;
MPRINT(EM_DIAGRAM):   end;
46682     +         end;
MPRINT(EM_DIAGRAM):   end;
46683     +      end;
MPRINT(EM_DIAGRAM):   end;
46684     +      else do;
MPRINT(EM_DIAGRAM):   else do;
46685     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
46686     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
46687     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
46688     +         end;
MPRINT(EM_DIAGRAM):   end;
46689     +      end;
MPRINT(EM_DIAGRAM):   end;
46690     +   end;
MPRINT(EM_DIAGRAM):   end;
46691     +   else do;
MPRINT(EM_DIAGRAM):   else do;
46692     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
46693     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
46694     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
46695     +      end;
MPRINT(EM_DIAGRAM):   end;
46696     +      else do;
MPRINT(EM_DIAGRAM):   else do;
46697     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
46698     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
46699     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
46700     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
46701     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
46702     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
46703     +         end;
MPRINT(EM_DIAGRAM):   end;
46704     +      end;
MPRINT(EM_DIAGRAM):   end;
46705     +   end;
MPRINT(EM_DIAGRAM):   end;
46706     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
46707     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
46708     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
46709     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
46710     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
46711     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
46712     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
46713     +   end;
MPRINT(EM_DIAGRAM):   end;
46714     +end;
MPRINT(EM_DIAGRAM):   end;
46715     +
46716     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46717     +*** Checking missing input Interval
46718     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
46719     +
46720     +IF NMISS(
46721     +   AcceptedCmpTotal ,
46722     +   Frq ,
46723     +   Income ,
46724     +   Mnt ,
46725     +   MntGoldProds ,
46726     +   MntMeatProducts ,
46727     +   NumCatalogPurchases ,
46728     +   NumDealsPurchases ,
46729     +   NumWebVisitsMonth ,
46730     +   RFMstat ,
46731     +   Recency ,
46732     +   Teenhome ,
46733     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , Recency , Teenhome , Year_Birth ) THEN DO;
46734     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
46735     +
46736     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
46737     +END;
MPRINT(EM_DIAGRAM):   END;
46738     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46739     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
46740     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46741     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
46742     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
46743     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
46744     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
46745     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
46746     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
46747     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
46748     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
46749     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
46750     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
46751     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
46752     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
46753     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
46754     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
46755     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
46756     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
46757     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
46758     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
46759     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
46760     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
46761     +END;
MPRINT(EM_DIAGRAM):   END;
46762     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
46763     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
46764     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
46765     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
46766     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
46767     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
46768     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
46769     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
46770     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
46771     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
46772     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
46773     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
46774     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
46775     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
46776     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
46777     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
46778     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
46779     +   ELSE S_NumCatalogPurchases
46780     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
46781     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
46782     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
46783     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
46784     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
46785     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
46786     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
46787     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
46788     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
46789     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
46790     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
46791     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
46792     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
46793     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
46794     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
46795     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
46796     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
46797     +END;
MPRINT(EM_DIAGRAM):   END;
46798     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46799     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
46800     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46801     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46802     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
46803     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46804     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
46805     +   H1x1_1  =      1.3507655650527 * S_AcceptedCmpTotal
46806     +          +    -1.10614122240879 * S_Frq  +     1.75303764660855 * S_Income
46807     +          +    -3.36358487853209 * S_Mnt  +     0.66482370197508 *
46808     +        S_MntGoldProds  +     2.20380795880989 * S_MntMeatProducts
46809     +          +     0.96941096546276 * S_NumCatalogPurchases
46810     +          +    -0.78169009272221 * S_NumDealsPurchases
46811     +          +     2.46694552614806 * S_NumWebVisitsMonth
46812     +          +    -0.70379796230966 * S_RFMstat  +    -2.91060571548081 *
46813     +        S_Recency  +    -1.09760548427625 * S_Teenhome
46814     +          +    -0.04996948842393 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.3507655650527 * S_AcceptedCmpTotal + -1.10614122240879 * S_Frq + 1.75303764660855 * S_Income + -3.36358487853209 * S_Mnt + 0.66482370197508 * S_MntGoldProds + 2.20380795880989 * S_MntMeatProducts + 0.96941096546276 * 
S_NumCatalogPurchases + -0.78169009272221 * S_NumDealsPurchases + 2.46694552614806 * S_NumWebVisitsMonth + -0.70379796230966 * S_RFMstat + -2.91060571548081 * S_Recency + -1.09760548427625 * S_Teenhome + -0.04996948842393 * S_Year_Birth ;
46815     +   H1x1_2  =    -0.31908942522077 * S_AcceptedCmpTotal
46816     +          +     3.74791296051726 * S_Frq  +     2.24284839751303 * S_Income
46817     +          +    -1.78405040388815 * S_Mnt  +      0.8742942749026 *
46818     +        S_MntGoldProds  +    -0.14368654003355 * S_MntMeatProducts
46819     +          +    -2.01779739147185 * S_NumCatalogPurchases
46820     +          +     -2.6507470301089 * S_NumDealsPurchases
46821     +          +     0.43757499676531 * S_NumWebVisitsMonth
46822     +          +    -1.37847156147455 * S_RFMstat  +    -0.69576523519337 *
46823     +        S_Recency  +    -0.45321912120397 * S_Teenhome
46824     +          +     0.52676912620048 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31908942522077 * S_AcceptedCmpTotal + 3.74791296051726 * S_Frq + 2.24284839751303 * S_Income + -1.78405040388815 * S_Mnt + 0.8742942749026 * S_MntGoldProds + -0.14368654003355 * S_MntMeatProducts + -2.01779739147185 * 
S_NumCatalogPurchases + -2.6507470301089 * S_NumDealsPurchases + 0.43757499676531 * S_NumWebVisitsMonth + -1.37847156147455 * S_RFMstat + -0.69576523519337 * S_Recency + -0.45321912120397 * S_Teenhome + 0.52676912620048 * S_Year_Birth ;
46825     +   H1x1_3  =     2.41023196591392 * S_AcceptedCmpTotal
46826     +          +    -2.36084733932675 * S_Frq  +     1.24213632619464 * S_Income
46827     +          +    -1.85110475917758 * S_Mnt  +    -0.28004157450889 *
46828     +        S_MntGoldProds  +     2.40469717841771 * S_MntMeatProducts
46829     +          +      3.9474982958259 * S_NumCatalogPurchases
46830     +          +       0.376468804707 * S_NumDealsPurchases
46831     +          +     3.31501013882439 * S_NumWebVisitsMonth
46832     +          +     0.11559780336909 * S_RFMstat  +    -4.25267693921008 *
46833     +        S_Recency  +    -1.57729700618019 * S_Teenhome
46834     +          +      0.1824973506119 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.41023196591392 * S_AcceptedCmpTotal + -2.36084733932675 * S_Frq + 1.24213632619464 * S_Income + -1.85110475917758 * S_Mnt + -0.28004157450889 * S_MntGoldProds + 2.40469717841771 * S_MntMeatProducts + 3.9474982958259 * 
S_NumCatalogPurchases + 0.376468804707 * S_NumDealsPurchases + 3.31501013882439 * S_NumWebVisitsMonth + 0.11559780336909 * S_RFMstat + -4.25267693921008 * S_Recency + -1.57729700618019 * S_Teenhome + 0.1824973506119 * S_Year_Birth ;
46835     +   H1x1_4  =     -0.2757766975278 * S_AcceptedCmpTotal
46836     +          +     3.82725387338192 * S_Frq  +      -0.761164420496 * S_Income
46837     +          +    -1.14207863171921 * S_Mnt  +     -0.1745335405903 *
46838     +        S_MntGoldProds  +    -5.79657274001258 * S_MntMeatProducts
46839     +          +    -1.47064436222345 * S_NumCatalogPurchases
46840     +          +    -0.47773085529503 * S_NumDealsPurchases
46841     +          +     0.20028656323595 * S_NumWebVisitsMonth
46842     +          +    -0.18383173425255 * S_RFMstat  +     0.10522454853137 *
46843     +        S_Recency  +    -0.11530372179295 * S_Teenhome
46844     +          +    -0.34167488644648 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.2757766975278 * S_AcceptedCmpTotal + 3.82725387338192 * S_Frq + -0.761164420496 * S_Income + -1.14207863171921 * S_Mnt + -0.1745335405903 * S_MntGoldProds + -5.79657274001258 * S_MntMeatProducts + -1.47064436222345 * 
S_NumCatalogPurchases + -0.47773085529503 * S_NumDealsPurchases + 0.20028656323595 * S_NumWebVisitsMonth + -0.18383173425255 * S_RFMstat + 0.10522454853137 * S_Recency + -0.11530372179295 * S_Teenhome + -0.34167488644648 * S_Year_Birth ;
46845     +   H1x1_1  = H1x1_1  +     1.48263364530339 * Marital_StatusDivorced
46846     +          +    -1.68634246986018 * Marital_StatusMarried
46847     +          +     0.61674763327859 * Marital_StatusSingle
46848     +          +    -1.26649958570453 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.48263364530339 * Marital_StatusDivorced + -1.68634246986018 * Marital_StatusMarried + 0.61674763327859 * Marital_StatusSingle + -1.26649958570453 * Marital_StatusTogether ;
46849     +   H1x1_2  = H1x1_2  +     1.03937964147637 * Marital_StatusDivorced
46850     +          +    -0.63821523628652 * Marital_StatusMarried
46851     +          +    -1.40431603473643 * Marital_StatusSingle
46852     +          +    -0.20849152262706 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.03937964147637 * Marital_StatusDivorced + -0.63821523628652 * Marital_StatusMarried + -1.40431603473643 * Marital_StatusSingle + -0.20849152262706 * Marital_StatusTogether ;
46853     +   H1x1_3  = H1x1_3  +    -0.00632006555267 * Marital_StatusDivorced
46854     +          +    -2.86773035723606 * Marital_StatusMarried
46855     +          +     2.52900517550184 * Marital_StatusSingle
46856     +          +    -3.34343954102751 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00632006555267 * Marital_StatusDivorced + -2.86773035723606 * Marital_StatusMarried + 2.52900517550184 * Marital_StatusSingle + -3.34343954102751 * Marital_StatusTogether ;
46857     +   H1x1_4  = H1x1_4  +     0.05620673245628 * Marital_StatusDivorced
46858     +          +    -0.89880425714459 * Marital_StatusMarried
46859     +          +     0.97652284934456 * Marital_StatusSingle
46860     +          +    -0.83414241747679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.05620673245628 * Marital_StatusDivorced + -0.89880425714459 * Marital_StatusMarried + 0.97652284934456 * Marital_StatusSingle + -0.83414241747679 * Marital_StatusTogether ;
46861     +   H1x1_1  =    -0.73505942586437 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.73505942586437 + H1x1_1 ;
46862     +   H1x1_2  =     2.97401194500651 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.97401194500651 + H1x1_2 ;
46863     +   H1x1_3  =    -7.86049995366383 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -7.86049995366383 + H1x1_3 ;
46864     +   H1x1_4  =    -3.77808914097545 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.77808914097545 + H1x1_4 ;
46865     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
46866     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
46867     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
46868     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
46869     +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
46870     +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
46871     +END;
MPRINT(EM_DIAGRAM):   END;
46872     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
46873     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
46874     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
46875     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
46876     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
46877     +END;
MPRINT(EM_DIAGRAM):   END;
46878     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46879     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
46880     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46881     +
46882     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
46883     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
46884     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
46885     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
46886     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
46887     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
46888     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
46889     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
46890     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
46891     +end;
MPRINT(EM_DIAGRAM):   end;
46892     +else do;
MPRINT(EM_DIAGRAM):   else do;
46893     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
46894     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
46895     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
46896     +   end;
MPRINT(EM_DIAGRAM):   end;
46897     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
46898     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
46899     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
46900     +   end;
MPRINT(EM_DIAGRAM):   end;
46901     +   else do;
MPRINT(EM_DIAGRAM):   else do;
46902     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
46903     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
46904     +   end;
MPRINT(EM_DIAGRAM):   end;
46905     +end;
MPRINT(EM_DIAGRAM):   end;
46906     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
46907     +   P_DepVar1  =     17.1091261255058 * H1x1_1  +    -15.4649724088409 * H1x1_2
46908     +          +     14.2519883476498 * H1x1_3  +    -25.0940711325771 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1091261255058 * H1x1_1 + -15.4649724088409 * H1x1_2 + 14.2519883476498 * H1x1_3 + -25.0940711325771 * H1x1_4 ;
46909     +   P_DepVar1  =     -0.7898064443713 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.7898064443713 + P_DepVar1 ;
46910     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
46911     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
46912     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
46913     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
46914     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
46915     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
46916     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
46917     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
46918     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
46919     +END;
MPRINT(EM_DIAGRAM):   END;
46920     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
46921     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
46922     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
46923     +END;
MPRINT(EM_DIAGRAM):   END;
46924     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
46925     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
46926     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
46927     +END;
MPRINT(EM_DIAGRAM):   END;
46928     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
46929     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
46930     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
46931     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
46932     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
46933     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
46934     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
46935     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46936     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
46937     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46938     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
46939     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
46940     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
46941     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
46942     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
46943     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
46944     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
46945     +END;
MPRINT(EM_DIAGRAM):   END;
46946     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
46947     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
46948     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
46949     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
46950     +* Renaming variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural47;
46951     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46952     +* Renaming Posterior variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural47;
46953     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46954     +drop AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar1;
46955     +AutoNeural47_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar1 = P_DepVar1;
46956     +drop AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar0;
46957     +AutoNeural47_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar0 = P_DepVar0;
46958     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46959     +* Renaming _WARN_ variable for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural47;
46960     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46961     +length AutoNeural47_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural47_WARN_ $4;
46962     +drop AutoNeural47_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_WARN_;
46963     +AutoNeural47_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural47_WARN_ = _WARN_;
46964     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46965     +* Ensmbl57: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 4 of 7;
46966     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46967     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46968     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
46969     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
46970     +* NODE: AutoNeural41;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural41;
46971     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46972     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
46973     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
46974     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
46975     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
46976     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
46977     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
46978     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
46979     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
46980     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
46981     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
46982     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
46983     +LENGTH _WARN_ $4
46984     +      F_DepVar  $ 12
46985     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
46986     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
46987     +
46988     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
46989     +
46990     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
46991     +
46992     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
46993     +
46994     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
46995     +
46996     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
46997     +
46998     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
46999     +
47000     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
47001     +
47002     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
47003     +
47004     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
47005     +
47006     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
47007     +
47008     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
47009     +
47010     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
47011     +
47012     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
47013     +
47014     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
47015     +
47016     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
47017     +
47018     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
47019     +
47020     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
47021     +
47022     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
47023     +
47024     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
47025     +
47026     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
47027     +
47028     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
47029     +
47030     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
47031     +
47032     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
47033     +
47034     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
47035     +
47036     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
47037     +
47038     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
47039     +
47040     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
47041     +
47042     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
47043     +
47044     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
47045     +
47046     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
47047     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
47048     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
47049     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
47050     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
47051     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
47052     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
47053     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
47054     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
47055     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
47056     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
47057     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
47058     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
47059     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
47060     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
47061     +end;
MPRINT(EM_DIAGRAM):   end;
47062     +else do;
MPRINT(EM_DIAGRAM):   else do;
47063     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
47064     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
47065     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
47066     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
47067     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
47068     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
47069     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
47070     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
47071     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
47072     +         end;
MPRINT(EM_DIAGRAM):   end;
47073     +         else do;
MPRINT(EM_DIAGRAM):   else do;
47074     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
47075     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
47076     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
47077     +            end;
MPRINT(EM_DIAGRAM):   end;
47078     +         end;
MPRINT(EM_DIAGRAM):   end;
47079     +      end;
MPRINT(EM_DIAGRAM):   end;
47080     +      else do;
MPRINT(EM_DIAGRAM):   else do;
47081     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
47082     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
47083     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
47084     +         end;
MPRINT(EM_DIAGRAM):   end;
47085     +      end;
MPRINT(EM_DIAGRAM):   end;
47086     +   end;
MPRINT(EM_DIAGRAM):   end;
47087     +   else do;
MPRINT(EM_DIAGRAM):   else do;
47088     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
47089     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
47090     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
47091     +      end;
MPRINT(EM_DIAGRAM):   end;
47092     +      else do;
MPRINT(EM_DIAGRAM):   else do;
47093     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
47094     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
47095     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
47096     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
47097     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
47098     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
47099     +         end;
MPRINT(EM_DIAGRAM):   end;
47100     +      end;
MPRINT(EM_DIAGRAM):   end;
47101     +   end;
MPRINT(EM_DIAGRAM):   end;
47102     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
47103     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
47104     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
47105     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
47106     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
47107     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
47108     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
47109     +   end;
MPRINT(EM_DIAGRAM):   end;
47110     +end;
MPRINT(EM_DIAGRAM):   end;
47111     +
47112     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47113     +*** Checking missing input Interval
47114     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
47115     +
47116     +IF NMISS(
47117     +   AcceptedCmpTotal ,
47118     +   Frq ,
47119     +   Income ,
47120     +   Mnt ,
47121     +   MntGoldProds ,
47122     +   MntMeatProducts ,
47123     +   NumCatalogPurchases ,
47124     +   NumDealsPurchases ,
47125     +   NumWebVisitsMonth ,
47126     +   RFMstat ,
47127     +   Recency ,
47128     +   Teenhome ,
47129     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , Recency , Teenhome , Year_Birth ) THEN DO;
47130     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
47131     +
47132     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
47133     +END;
MPRINT(EM_DIAGRAM):   END;
47134     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47135     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
47136     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47137     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
47138     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
47139     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
47140     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
47141     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
47142     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
47143     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
47144     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
47145     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
47146     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
47147     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
47148     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
47149     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
47150     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
47151     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
47152     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
47153     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
47154     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
47155     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
47156     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
47157     +END;
MPRINT(EM_DIAGRAM):   END;
47158     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
47159     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
47160     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
47161     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
47162     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
47163     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
47164     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
47165     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
47166     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
47167     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
47168     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
47169     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
47170     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
47171     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
47172     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
47173     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
47174     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
47175     +   ELSE S_NumCatalogPurchases
47176     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
47177     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
47178     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
47179     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
47180     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
47181     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
47182     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
47183     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
47184     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
47185     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
47186     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
47187     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
47188     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
47189     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
47190     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
47191     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
47192     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
47193     +END;
MPRINT(EM_DIAGRAM):   END;
47194     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47195     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
47196     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47197     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47198     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
47199     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47200     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
47201     +   H1x1_1  =     0.27619305633764 * S_AcceptedCmpTotal
47202     +          +    -0.11236902682497 * S_Frq  +     0.02547336321659 * S_Income
47203     +          +     1.22594163788316 * S_Mnt  +    -0.13304067437519 *
47204     +        S_MntGoldProds  +    -0.25318386797622 * S_MntMeatProducts
47205     +          +     0.18813452089487 * S_NumCatalogPurchases
47206     +          +     0.07572009513796 * S_NumDealsPurchases
47207     +          +     0.26290613719398 * S_NumWebVisitsMonth
47208     +          +    -0.07407700105008 * S_RFMstat  +    -0.42371914006256 *
47209     +        S_Recency  +    -0.08184869022013 * S_Teenhome
47210     +          +     0.01152140021328 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27619305633764 * S_AcceptedCmpTotal + -0.11236902682497 * S_Frq + 0.02547336321659 * S_Income + 1.22594163788316 * S_Mnt + -0.13304067437519 * S_MntGoldProds + -0.25318386797622 * S_MntMeatProducts + 0.18813452089487 * 
S_NumCatalogPurchases + 0.07572009513796 * S_NumDealsPurchases + 0.26290613719398 * S_NumWebVisitsMonth + -0.07407700105008 * S_RFMstat + -0.42371914006256 * S_Recency + -0.08184869022013 * S_Teenhome + 0.01152140021328 * S_Year_Birth ;
47211     +   H1x1_2  =     0.10663705781144 * S_AcceptedCmpTotal
47212     +          +     -1.0540282734074 * S_Frq  +    -0.11987114679821 * S_Income
47213     +          +     0.64876951297444 * S_Mnt  +     0.19900484060335 *
47214     +        S_MntGoldProds  +     0.97085619241432 * S_MntMeatProducts
47215     +          +      0.3860900431806 * S_NumCatalogPurchases
47216     +          +    -0.05602869666287 * S_NumDealsPurchases
47217     +          +     0.25751125196672 * S_NumWebVisitsMonth
47218     +          +     0.02624606311455 * S_RFMstat  +    -0.13483172331925 *
47219     +        S_Recency  +     0.00740928227007 * S_Teenhome
47220     +          +     0.00743631640493 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.10663705781144 * S_AcceptedCmpTotal + -1.0540282734074 * S_Frq + -0.11987114679821 * S_Income + 0.64876951297444 * S_Mnt + 0.19900484060335 * S_MntGoldProds + 0.97085619241432 * S_MntMeatProducts + 0.3860900431806 * 
S_NumCatalogPurchases + -0.05602869666287 * S_NumDealsPurchases + 0.25751125196672 * S_NumWebVisitsMonth + 0.02624606311455 * S_RFMstat + -0.13483172331925 * S_Recency + 0.00740928227007 * S_Teenhome + 0.00743631640493 * S_Year_Birth ;
47221     +   H1x1_3  =     0.25721067351974 * S_AcceptedCmpTotal
47222     +          +    -0.86907357751772 * S_Frq  +    -0.08157123692791 * S_Income
47223     +          +     0.01248777269658 * S_Mnt  +     0.05157436079695 *
47224     +        S_MntGoldProds  +     0.77615263309304 * S_MntMeatProducts
47225     +          +     0.20017136343834 * S_NumCatalogPurchases
47226     +          +      0.4177949842415 * S_NumDealsPurchases
47227     +          +     0.12267139708832 * S_NumWebVisitsMonth
47228     +          +    -0.04813980569775 * S_RFMstat  +    -0.35935125476541 *
47229     +        S_Recency  +    -0.04165775695782 * S_Teenhome
47230     +          +    -0.02142572027654 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.25721067351974 * S_AcceptedCmpTotal + -0.86907357751772 * S_Frq + -0.08157123692791 * S_Income + 0.01248777269658 * S_Mnt + 0.05157436079695 * S_MntGoldProds + 0.77615263309304 * S_MntMeatProducts + 0.20017136343834 * 
S_NumCatalogPurchases + 0.4177949842415 * S_NumDealsPurchases + 0.12267139708832 * S_NumWebVisitsMonth + -0.04813980569775 * S_RFMstat + -0.35935125476541 * S_Recency + -0.04165775695782 * S_Teenhome + -0.02142572027654 * S_Year_Birth ;
47231     +   H1x1_4  =    -0.14554708768829 * S_AcceptedCmpTotal
47232     +          +     -0.0597172306674 * S_Frq  +    -0.28285875178634 * S_Income
47233     +          +     1.04591505007314 * S_Mnt  +     0.00461806901547 *
47234     +        S_MntGoldProds  +    -0.61862352433469 * S_MntMeatProducts
47235     +          +    -0.41475045310519 * S_NumCatalogPurchases
47236     +          +     0.05270183882345 * S_NumDealsPurchases
47237     +          +     -0.3411138782759 * S_NumWebVisitsMonth
47238     +          +    -0.06158026374803 * S_RFMstat  +     0.33899005947536 *
47239     +        S_Recency  +     0.09131411279492 * S_Teenhome
47240     +          +    -0.00935201223775 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14554708768829 * S_AcceptedCmpTotal + -0.0597172306674 * S_Frq + -0.28285875178634 * S_Income + 1.04591505007314 * S_Mnt + 0.00461806901547 * S_MntGoldProds + -0.61862352433469 * S_MntMeatProducts + -0.41475045310519 * 
S_NumCatalogPurchases + 0.05270183882345 * S_NumDealsPurchases + -0.3411138782759 * S_NumWebVisitsMonth + -0.06158026374803 * S_RFMstat + 0.33899005947536 * S_Recency + 0.09131411279492 * S_Teenhome + -0.00935201223775 * S_Year_Birth ;
47241     +   H1x1_5  =     0.19976617457438 * S_AcceptedCmpTotal
47242     +          +    -0.47746743016353 * S_Frq  +     0.16855808605754 * S_Income
47243     +          +    -0.87114248882356 * S_Mnt  +     0.16259754490995 *
47244     +        S_MntGoldProds  +     0.11590070773645 * S_MntMeatProducts
47245     +          +     0.28201604995327 * S_NumCatalogPurchases
47246     +          +     -0.0106712941301 * S_NumDealsPurchases
47247     +          +     0.44937825968958 * S_NumWebVisitsMonth
47248     +          +     0.00709750447129 * S_RFMstat  +    -0.47138460185175 *
47249     +        S_Recency  +    -0.07776231003236 * S_Teenhome
47250     +          +    -0.02330056365233 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.19976617457438 * S_AcceptedCmpTotal + -0.47746743016353 * S_Frq + 0.16855808605754 * S_Income + -0.87114248882356 * S_Mnt + 0.16259754490995 * S_MntGoldProds + 0.11590070773645 * S_MntMeatProducts + 0.28201604995327 * 
S_NumCatalogPurchases + -0.0106712941301 * S_NumDealsPurchases + 0.44937825968958 * S_NumWebVisitsMonth + 0.00709750447129 * S_RFMstat + -0.47138460185175 * S_Recency + -0.07776231003236 * S_Teenhome + -0.02330056365233 * S_Year_Birth ;
47251     +   H1x1_1  = H1x1_1  +    -0.29133741090287 * Marital_StatusDivorced
47252     +          +     -0.2248578245828 * Marital_StatusMarried
47253     +          +     0.07509958702397 * Marital_StatusSingle
47254     +          +    -0.12991422082545 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.29133741090287 * Marital_StatusDivorced + -0.2248578245828 * Marital_StatusMarried + 0.07509958702397 * Marital_StatusSingle + -0.12991422082545 * Marital_StatusTogether ;
47255     +   H1x1_2  = H1x1_2  +     -1.1074732716993 * Marital_StatusDivorced
47256     +          +     0.45662921783631 * Marital_StatusMarried
47257     +          +     -0.7587900494362 * Marital_StatusSingle
47258     +          +     0.91918379082777 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.1074732716993 * Marital_StatusDivorced + 0.45662921783631 * Marital_StatusMarried + -0.7587900494362 * Marital_StatusSingle + 0.91918379082777 * Marital_StatusTogether ;
47259     +   H1x1_3  = H1x1_3  +    -0.00289956415432 * Marital_StatusDivorced
47260     +          +     0.48232640763102 * Marital_StatusMarried
47261     +          +    -0.26767355443511 * Marital_StatusSingle
47262     +          +     0.26207298280723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00289956415432 * Marital_StatusDivorced + 0.48232640763102 * Marital_StatusMarried + -0.26767355443511 * Marital_StatusSingle + 0.26207298280723 * Marital_StatusTogether ;
47263     +   H1x1_4  = H1x1_4  +    -0.33422568214247 * Marital_StatusDivorced
47264     +          +       0.692510056964 * Marital_StatusMarried
47265     +          +    -0.62467969689335 * Marital_StatusSingle
47266     +          +     0.57377256791387 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.33422568214247 * Marital_StatusDivorced + 0.692510056964 * Marital_StatusMarried + -0.62467969689335 * Marital_StatusSingle + 0.57377256791387 * Marital_StatusTogether ;
47267     +   H1x1_5  = H1x1_5  +     0.08963617061236 * Marital_StatusDivorced
47268     +          +    -0.12414433690654 * Marital_StatusMarried
47269     +          +     0.01287765001755 * Marital_StatusSingle
47270     +          +    -0.08087882377532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.08963617061236 * Marital_StatusDivorced + -0.12414433690654 * Marital_StatusMarried + 0.01287765001755 * Marital_StatusSingle + -0.08087882377532 * Marital_StatusTogether ;
47271     +   H1x1_1  =    -1.91971008925725 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91971008925725 + H1x1_1 ;
47272     +   H1x1_2  =     0.32368735038167 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32368735038167 + H1x1_2 ;
47273     +   H1x1_3  =    -1.01494899635831 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.01494899635831 + H1x1_3 ;
47274     +   H1x1_4  =     0.37995275511318 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.37995275511318 + H1x1_4 ;
47275     +   H1x1_5  =     0.85001953980369 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.85001953980369 + H1x1_5 ;
47276     +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
47277     +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
47278     +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
47279     +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
47280     +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
47281     +END;
MPRINT(EM_DIAGRAM):   END;
47282     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
47283     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
47284     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
47285     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
47286     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
47287     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
47288     +END;
MPRINT(EM_DIAGRAM):   END;
47289     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47290     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
47291     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47292     +
47293     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
47294     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
47295     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
47296     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
47297     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
47298     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
47299     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
47300     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
47301     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
47302     +end;
MPRINT(EM_DIAGRAM):   end;
47303     +else do;
MPRINT(EM_DIAGRAM):   else do;
47304     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
47305     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
47306     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
47307     +   end;
MPRINT(EM_DIAGRAM):   end;
47308     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
47309     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
47310     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
47311     +   end;
MPRINT(EM_DIAGRAM):   end;
47312     +   else do;
MPRINT(EM_DIAGRAM):   else do;
47313     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
47314     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
47315     +   end;
MPRINT(EM_DIAGRAM):   end;
47316     +end;
MPRINT(EM_DIAGRAM):   end;
47317     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
47318     +   P_DepVar1  =     70.1947351743048 * H1x1_1  +     37.5347968698288 * H1x1_2
47319     +          +     63.5093925909107 * H1x1_3  +    -88.4297436279603 * H1x1_4
47320     +          +     56.9032773964405 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 70.1947351743048 * H1x1_1 + 37.5347968698288 * H1x1_2 + 63.5093925909107 * H1x1_3 + -88.4297436279603 * H1x1_4 + 56.9032773964405 * H1x1_5 ;
47321     +   P_DepVar1  =     22.2427233048176 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 22.2427233048176 + P_DepVar1 ;
47322     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
47323     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
47324     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
47325     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
47326     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
47327     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
47328     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
47329     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
47330     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
47331     +END;
MPRINT(EM_DIAGRAM):   END;
47332     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
47333     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
47334     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
47335     +END;
MPRINT(EM_DIAGRAM):   END;
47336     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
47337     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
47338     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
47339     +END;
MPRINT(EM_DIAGRAM):   END;
47340     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
47341     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
47342     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
47343     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
47344     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
47345     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
47346     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
47347     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47348     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
47349     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47350     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
47351     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
47352     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
47353     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
47354     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
47355     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
47356     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
47357     +END;
MPRINT(EM_DIAGRAM):   END;
47358     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
47359     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
47360     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
47361     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
47362     +* Renaming variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural41;
47363     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
47364     +* Renaming Posterior variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural41;
47365     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
47366     +drop AutoNeural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar1;
47367     +AutoNeural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar1 = P_DepVar1;
47368     +drop AutoNeural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar0;
47369     +AutoNeural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar0 = P_DepVar0;
47370     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
47371     +* Renaming _WARN_ variable for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural41;
47372     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
47373     +length AutoNeural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural41_WARN_ $4;
47374     +drop AutoNeural41_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_WARN_;
47375     +AutoNeural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural41_WARN_ = _WARN_;
47376     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
47377     +* Ensmbl57: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 5 of 7;
47378     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
47379     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
47380     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
47381     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
47382     +* NODE: AutoNeural42;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural42;
47383     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
47384     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
47385     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
47386     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
47387     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
47388     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
47389     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
47390     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
47391     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
47392     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
47393     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
47394     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
47395     +LENGTH _WARN_ $4
47396     +      F_DepVar  $ 12
47397     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
47398     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
47399     +
47400     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
47401     +
47402     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
47403     +
47404     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
47405     +
47406     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
47407     +
47408     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
47409     +
47410     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
47411     +
47412     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
47413     +
47414     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
47415     +
47416     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
47417     +
47418     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
47419     +
47420     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
47421     +
47422     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
47423     +
47424     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
47425     +
47426     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
47427     +
47428     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
47429     +
47430     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
47431     +
47432     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
47433     +
47434     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
47435     +
47436     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
47437     +
47438     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
47439     +
47440     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
47441     +
47442     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
47443     +
47444     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
47445     +
47446     +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
47447     +
47448     +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
47449     +
47450     +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
47451     +
47452     +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
47453     +
47454     +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
47455     +
47456     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
47457     +
47458     +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
47459     +
47460     +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
47461     +
47462     +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
47463     +
47464     +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
47465     +
47466     +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
47467     +
47468     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
47469     +
47470     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
47471     +
47472     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
47473     +
47474     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
47475     +
47476     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
47477     +
47478     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
47479     +
47480     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
47481     +
47482     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
47483     +
47484     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
47485     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
47486     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
47487     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
47488     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
47489     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
47490     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
47491     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
47492     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
47493     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
47494     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
47495     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
47496     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
47497     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
47498     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
47499     +end;
MPRINT(EM_DIAGRAM):   end;
47500     +else do;
MPRINT(EM_DIAGRAM):   else do;
47501     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
47502     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
47503     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
47504     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
47505     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
47506     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
47507     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
47508     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
47509     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
47510     +         end;
MPRINT(EM_DIAGRAM):   end;
47511     +         else do;
MPRINT(EM_DIAGRAM):   else do;
47512     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
47513     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
47514     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
47515     +            end;
MPRINT(EM_DIAGRAM):   end;
47516     +         end;
MPRINT(EM_DIAGRAM):   end;
47517     +      end;
MPRINT(EM_DIAGRAM):   end;
47518     +      else do;
MPRINT(EM_DIAGRAM):   else do;
47519     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
47520     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
47521     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
47522     +         end;
MPRINT(EM_DIAGRAM):   end;
47523     +      end;
MPRINT(EM_DIAGRAM):   end;
47524     +   end;
MPRINT(EM_DIAGRAM):   end;
47525     +   else do;
MPRINT(EM_DIAGRAM):   else do;
47526     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
47527     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
47528     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
47529     +      end;
MPRINT(EM_DIAGRAM):   end;
47530     +      else do;
MPRINT(EM_DIAGRAM):   else do;
47531     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
47532     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
47533     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
47534     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
47535     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
47536     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
47537     +         end;
MPRINT(EM_DIAGRAM):   end;
47538     +      end;
MPRINT(EM_DIAGRAM):   end;
47539     +   end;
MPRINT(EM_DIAGRAM):   end;
47540     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
47541     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
47542     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
47543     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
47544     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
47545     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
47546     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
47547     +   end;
MPRINT(EM_DIAGRAM):   end;
47548     +end;
MPRINT(EM_DIAGRAM):   end;
47549     +
47550     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47551     +*** Checking missing input Interval
47552     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
47553     +
47554     +IF NMISS(
47555     +   AcceptedCmpTotal ,
47556     +   Frq ,
47557     +   Income ,
47558     +   Mnt ,
47559     +   MntGoldProds ,
47560     +   MntMeatProducts ,
47561     +   NumCatalogPurchases ,
47562     +   NumDealsPurchases ,
47563     +   NumWebVisitsMonth ,
47564     +   RFMstat ,
47565     +   Recency ,
47566     +   Teenhome ,
47567     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , Recency , Teenhome , Year_Birth ) THEN DO;
47568     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
47569     +
47570     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
47571     +END;
MPRINT(EM_DIAGRAM):   END;
47572     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47573     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
47574     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47575     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
47576     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
47577     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
47578     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
47579     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
47580     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
47581     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
47582     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
47583     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
47584     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
47585     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
47586     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
47587     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
47588     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
47589     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
47590     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
47591     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
47592     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
47593     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
47594     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
47595     +END;
MPRINT(EM_DIAGRAM):   END;
47596     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
47597     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
47598     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
47599     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
47600     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
47601     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
47602     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
47603     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
47604     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
47605     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
47606     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
47607     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
47608     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
47609     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
47610     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
47611     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
47612     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
47613     +   ELSE S_NumCatalogPurchases
47614     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
47615     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
47616     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
47617     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
47618     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
47619     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
47620     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
47621     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
47622     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
47623     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
47624     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
47625     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
47626     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
47627     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
47628     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
47629     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
47630     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
47631     +END;
MPRINT(EM_DIAGRAM):   END;
47632     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47633     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
47634     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47635     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47636     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
47637     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47638     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
47639     +   H1x1_1  =    -3.92905088817122 * S_AcceptedCmpTotal
47640     +          +    -4.76567955922662 * S_Frq  +    -3.20305851407308 * S_Income
47641     +          +     10.4290156082038 * S_Mnt  +     2.82139196372317 *
47642     +        S_MntGoldProds  +    -4.54749029525518 * S_MntMeatProducts
47643     +          +    -12.1201262560598 * S_NumCatalogPurchases
47644     +          +    -7.64265449386917 * S_NumDealsPurchases
47645     +          +     -0.8154661733691 * S_NumWebVisitsMonth
47646     +          +    -7.34275682075933 * S_RFMstat  +     3.14025498790893 *
47647     +        S_Recency  +     3.79010135100643 * S_Teenhome
47648     +          +    -1.18831354068466 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.92905088817122 * S_AcceptedCmpTotal + -4.76567955922662 * S_Frq + -3.20305851407308 * S_Income + 10.4290156082038 * S_Mnt + 2.82139196372317 * S_MntGoldProds + -4.54749029525518 * S_MntMeatProducts + -12.1201262560598 * 
S_NumCatalogPurchases + -7.64265449386917 * S_NumDealsPurchases + -0.8154661733691 * S_NumWebVisitsMonth + -7.34275682075933 * S_RFMstat + 3.14025498790893 * S_Recency + 3.79010135100643 * S_Teenhome + -1.18831354068466 * S_Year_Birth ;
47649     +   H1x1_2  =    -4.72019183577823 * S_AcceptedCmpTotal
47650     +          +     5.14902294151494 * S_Frq  +     -2.7967028726716 * S_Income
47651     +          +     7.90170532262596 * S_Mnt  +    -0.27896242131344 *
47652     +        S_MntGoldProds  +    -6.13177486713562 * S_MntMeatProducts
47653     +          +    -5.64377068696071 * S_NumCatalogPurchases
47654     +          +       1.315880732417 * S_NumDealsPurchases
47655     +          +    -7.12689902819995 * S_NumWebVisitsMonth
47656     +          +     -0.1333171344564 * S_RFMstat  +     8.57178329047956 *
47657     +        S_Recency  +     2.42655161118896 * S_Teenhome
47658     +          +     0.41845495922131 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -4.72019183577823 * S_AcceptedCmpTotal + 5.14902294151494 * S_Frq + -2.7967028726716 * S_Income + 7.90170532262596 * S_Mnt + -0.27896242131344 * S_MntGoldProds + -6.13177486713562 * S_MntMeatProducts + -5.64377068696071 * 
S_NumCatalogPurchases + 1.315880732417 * S_NumDealsPurchases + -7.12689902819995 * S_NumWebVisitsMonth + -0.1333171344564 * S_RFMstat + 8.57178329047956 * S_Recency + 2.42655161118896 * S_Teenhome + 0.41845495922131 * S_Year_Birth ;
47659     +   H1x1_3  =    -3.47660178529996 * S_AcceptedCmpTotal
47660     +          +     6.36750571377116 * S_Frq  +    -3.65638554203354 * S_Income
47661     +          +     5.03085244876136 * S_Mnt  +    -1.53184712146016 *
47662     +        S_MntGoldProds  +    -11.4803326240536 * S_MntMeatProducts
47663     +          +    -7.71653347900468 * S_NumCatalogPurchases
47664     +          +    -2.29382480020793 * S_NumDealsPurchases
47665     +          +    -3.92350308032578 * S_NumWebVisitsMonth
47666     +          +      0.1666173174602 * S_RFMstat  +      5.5545699438819 *
47667     +        S_Recency  +     1.88830044274756 * S_Teenhome
47668     +          +     0.36177301880441 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.47660178529996 * S_AcceptedCmpTotal + 6.36750571377116 * S_Frq + -3.65638554203354 * S_Income + 5.03085244876136 * S_Mnt + -1.53184712146016 * S_MntGoldProds + -11.4803326240536 * S_MntMeatProducts + -7.71653347900468 * 
S_NumCatalogPurchases + -2.29382480020793 * S_NumDealsPurchases + -3.92350308032578 * S_NumWebVisitsMonth + 0.1666173174602 * S_RFMstat + 5.5545699438819 * S_Recency + 1.88830044274756 * S_Teenhome + 0.36177301880441 * S_Year_Birth ;
47669     +   H1x1_4  =     3.46597508500309 * S_AcceptedCmpTotal
47670     +          +    -3.55913679518365 * S_Frq  +     -3.8279864380535 * S_Income
47671     +          +     4.37031319397754 * S_Mnt  +     0.25558899887189 *
47672     +        S_MntGoldProds  +     1.30937005137526 * S_MntMeatProducts
47673     +          +     0.50178849511862 * S_NumCatalogPurchases
47674     +          +     3.33915340676542 * S_NumDealsPurchases
47675     +          +     2.99171363234904 * S_NumWebVisitsMonth
47676     +          +    -1.10860117011224 * S_RFMstat  +     -5.2144291963152 *
47677     +        S_Recency  +     1.84778865722952 * S_Teenhome
47678     +          +     1.48264084751626 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.46597508500309 * S_AcceptedCmpTotal + -3.55913679518365 * S_Frq + -3.8279864380535 * S_Income + 4.37031319397754 * S_Mnt + 0.25558899887189 * S_MntGoldProds + 1.30937005137526 * S_MntMeatProducts + 0.50178849511862 * 
S_NumCatalogPurchases + 3.33915340676542 * S_NumDealsPurchases + 2.99171363234904 * S_NumWebVisitsMonth + -1.10860117011224 * S_RFMstat + -5.2144291963152 * S_Recency + 1.84778865722952 * S_Teenhome + 1.48264084751626 * S_Year_Birth ;
47679     +   H1x1_5  =    -3.28077802512331 * S_AcceptedCmpTotal
47680     +          +     3.26112701694144 * S_Frq  +    -3.51257256391539 * S_Income
47681     +          +     -13.277904245629 * S_Mnt  +    -0.08185099069039 *
47682     +        S_MntGoldProds  +      2.6349809613264 * S_MntMeatProducts
47683     +          +    -5.23430097842472 * S_NumCatalogPurchases
47684     +          +    -1.25644862473488 * S_NumDealsPurchases
47685     +          +     -3.0943337340276 * S_NumWebVisitsMonth
47686     +          +     0.96429102250453 * S_RFMstat  +     4.60373013139143 *
47687     +        S_Recency  +     1.52557456336148 * S_Teenhome
47688     +          +     0.00287578113165 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.28077802512331 * S_AcceptedCmpTotal + 3.26112701694144 * S_Frq + -3.51257256391539 * S_Income + -13.277904245629 * S_Mnt + -0.08185099069039 * S_MntGoldProds + 2.6349809613264 * S_MntMeatProducts + -5.23430097842472 * 
S_NumCatalogPurchases + -1.25644862473488 * S_NumDealsPurchases + -3.0943337340276 * S_NumWebVisitsMonth + 0.96429102250453 * S_RFMstat + 4.60373013139143 * S_Recency + 1.52557456336148 * S_Teenhome + 0.00287578113165 * S_Year_Birth ;
47689     +   H1x1_1  = H1x1_1  +     1.77432710413329 * Marital_StatusDivorced
47690     +          +     5.12496303990022 * Marital_StatusMarried
47691     +          +    -7.61364369696186 * Marital_StatusSingle
47692     +          +     2.78937374370395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.77432710413329 * Marital_StatusDivorced + 5.12496303990022 * Marital_StatusMarried + -7.61364369696186 * Marital_StatusSingle + 2.78937374370395 * Marital_StatusTogether ;
47693     +   H1x1_2  = H1x1_2  +    -5.49070434381597 * Marital_StatusDivorced
47694     +          +     7.65332274940308 * Marital_StatusMarried
47695     +          +    -5.13332947688313 * Marital_StatusSingle
47696     +          +     8.25159601985572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -5.49070434381597 * Marital_StatusDivorced + 7.65332274940308 * Marital_StatusMarried + -5.13332947688313 * Marital_StatusSingle + 8.25159601985572 * Marital_StatusTogether ;
47697     +   H1x1_3  = H1x1_3  +     1.57910552070948 * Marital_StatusDivorced
47698     +          +     7.95162959069432 * Marital_StatusMarried
47699     +          +    -6.10797604390061 * Marital_StatusSingle
47700     +          +     2.98577039618027 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.57910552070948 * Marital_StatusDivorced + 7.95162959069432 * Marital_StatusMarried + -6.10797604390061 * Marital_StatusSingle + 2.98577039618027 * Marital_StatusTogether ;
47701     +   H1x1_4  = H1x1_4  +     3.65411081783958 * Marital_StatusDivorced
47702     +          +     5.45977621823616 * Marital_StatusMarried
47703     +          +    -10.3527985391218 * Marital_StatusSingle
47704     +          +     4.66094015963389 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 3.65411081783958 * Marital_StatusDivorced + 5.45977621823616 * Marital_StatusMarried + -10.3527985391218 * Marital_StatusSingle + 4.66094015963389 * Marital_StatusTogether ;
47705     +   H1x1_5  = H1x1_5  +     1.57864743151562 * Marital_StatusDivorced
47706     +          +     8.15909630638185 * Marital_StatusMarried
47707     +          +    -5.88497367282032 * Marital_StatusSingle
47708     +          +     3.05474303626666 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.57864743151562 * Marital_StatusDivorced + 8.15909630638185 * Marital_StatusMarried + -5.88497367282032 * Marital_StatusSingle + 3.05474303626666 * Marital_StatusTogether ;
47709     +   H1x1_1  =    -1.55078746609233 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.55078746609233 + H1x1_1 ;
47710     +   H1x1_2  =     5.40474806112383 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 5.40474806112383 + H1x1_2 ;
47711     +   H1x1_3  =     11.2733164995662 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 11.2733164995662 + H1x1_3 ;
47712     +   H1x1_4  =    -7.78487963966384 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.78487963966384 + H1x1_4 ;
47713     +   H1x1_5  =      3.8784406873535 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.8784406873535 + H1x1_5 ;
47714     +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
47715     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
47716     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
47717     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
47718     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
47719     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
47720     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
47721     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
47722     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
47723     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
47724     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
47725     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
47726     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
47727     +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
47728     +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
47729     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
47730     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
47731     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
47732     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
47733     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
47734     +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
47735     +END;
MPRINT(EM_DIAGRAM):   END;
47736     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
47737     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
47738     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
47739     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
47740     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
47741     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
47742     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
47743     +END;
MPRINT(EM_DIAGRAM):   END;
47744     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47745     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
47746     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47747     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
47748     +   H1x2_1  =     0.07453146398445 * S_AcceptedCmpTotal
47749     +          +     0.17438368465616 * S_Frq  +     0.97121905855093 * S_Income
47750     +          +    -0.15757686261675 * S_Mnt  +     0.28678754855648 *
47751     +        S_MntGoldProds  +     2.03999655184815 * S_MntMeatProducts
47752     +          +      0.8747576336553 * S_NumCatalogPurchases
47753     +          +    -0.23551985234916 * S_NumDealsPurchases
47754     +          +     0.83901499225112 * S_NumWebVisitsMonth
47755     +          +     -0.7643570473353 * S_RFMstat  +      0.0823609346051 *
47756     +        S_Recency  +    -0.38340703993831 * S_Teenhome
47757     +          +     1.16037573405943 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.07453146398445 * S_AcceptedCmpTotal + 0.17438368465616 * S_Frq + 0.97121905855093 * S_Income + -0.15757686261675 * S_Mnt + 0.28678754855648 * S_MntGoldProds + 2.03999655184815 * S_MntMeatProducts + 0.8747576336553 * 
S_NumCatalogPurchases + -0.23551985234916 * S_NumDealsPurchases + 0.83901499225112 * S_NumWebVisitsMonth + -0.7643570473353 * S_RFMstat + 0.0823609346051 * S_Recency + -0.38340703993831 * S_Teenhome + 1.16037573405943 * S_Year_Birth ;
47758     +   H1x2_2  =      -2.285017059996 * S_AcceptedCmpTotal
47759     +          +    -0.29646095672581 * S_Frq  +     -3.5024410668082 * S_Income
47760     +          +    -2.12091528193185 * S_Mnt  +    -1.48506012188621 *
47761     +        S_MntGoldProds  +    -1.38316375865608 * S_MntMeatProducts
47762     +          +    -0.99107054453387 * S_NumCatalogPurchases
47763     +          +    -0.68379823410573 * S_NumDealsPurchases
47764     +          +    -1.67939872609259 * S_NumWebVisitsMonth
47765     +          +     0.49106697429539 * S_RFMstat  +    -0.01117108974211 *
47766     +        S_Recency  +    -1.65033346710833 * S_Teenhome
47767     +          +    -1.03897054098621 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.285017059996 * S_AcceptedCmpTotal + -0.29646095672581 * S_Frq + -3.5024410668082 * S_Income + -2.12091528193185 * S_Mnt + -1.48506012188621 * S_MntGoldProds + -1.38316375865608 * S_MntMeatProducts + -0.99107054453387 * 
S_NumCatalogPurchases + -0.68379823410573 * S_NumDealsPurchases + -1.67939872609259 * S_NumWebVisitsMonth + 0.49106697429539 * S_RFMstat + -0.01117108974211 * S_Recency + -1.65033346710833 * S_Teenhome + -1.03897054098621 * S_Year_Birth ;
47768     +   H1x2_3  =      2.9562672276462 * S_AcceptedCmpTotal
47769     +          +    -0.19531439441895 * S_Frq  +      0.3125078734463 * S_Income
47770     +          +     -1.6099267525002 * S_Mnt  +    -0.36573328507463 *
47771     +        S_MntGoldProds  +     -0.3392853565114 * S_MntMeatProducts
47772     +          +      1.4506330104932 * S_NumCatalogPurchases
47773     +          +     0.20085283861849 * S_NumDealsPurchases
47774     +          +     2.37974383924154 * S_NumWebVisitsMonth
47775     +          +     -0.1106906484364 * S_RFMstat  +    -3.36701384866793 *
47776     +        S_Recency  +     0.60726269989058 * S_Teenhome
47777     +          +     0.51474814816173 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.9562672276462 * S_AcceptedCmpTotal + -0.19531439441895 * S_Frq + 0.3125078734463 * S_Income + -1.6099267525002 * S_Mnt + -0.36573328507463 * S_MntGoldProds + -0.3392853565114 * S_MntMeatProducts + 1.4506330104932 * 
S_NumCatalogPurchases + 0.20085283861849 * S_NumDealsPurchases + 2.37974383924154 * S_NumWebVisitsMonth + -0.1106906484364 * S_RFMstat + -3.36701384866793 * S_Recency + 0.60726269989058 * S_Teenhome + 0.51474814816173 * S_Year_Birth ;
47778     +   H1x2_4  =    -3.19375607611292 * S_AcceptedCmpTotal
47779     +          +    -1.28391627024222 * S_Frq  +     1.20886875907222 * S_Income
47780     +          +     0.33241907162962 * S_Mnt  +     0.81131852742978 *
47781     +        S_MntGoldProds  +     0.66955477854362 * S_MntMeatProducts
47782     +          +    -0.79952426911069 * S_NumCatalogPurchases
47783     +          +    -0.70571099772216 * S_NumDealsPurchases
47784     +          +    -0.32158728049114 * S_NumWebVisitsMonth
47785     +          +    -0.83126265863782 * S_RFMstat  +     1.49830148501327 *
47786     +        S_Recency  +     2.29389047813725 * S_Teenhome
47787     +          +     0.04615513391624 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -3.19375607611292 * S_AcceptedCmpTotal + -1.28391627024222 * S_Frq + 1.20886875907222 * S_Income + 0.33241907162962 * S_Mnt + 0.81131852742978 * S_MntGoldProds + 0.66955477854362 * S_MntMeatProducts + -0.79952426911069 * 
S_NumCatalogPurchases + -0.70571099772216 * S_NumDealsPurchases + -0.32158728049114 * S_NumWebVisitsMonth + -0.83126265863782 * S_RFMstat + 1.49830148501327 * S_Recency + 2.29389047813725 * S_Teenhome + 0.04615513391624 * S_Year_Birth ;
47788     +   H1x2_5  =     -0.6002425930451 * S_AcceptedCmpTotal
47789     +          +    -0.86762771301251 * S_Frq  +    -0.57793933969656 * S_Income
47790     +          +     0.41975808190408 * S_Mnt  +    -0.13242897225011 *
47791     +        S_MntGoldProds  +    -1.44402585881872 * S_MntMeatProducts
47792     +          +    -0.41491605544255 * S_NumCatalogPurchases
47793     +          +     0.49374983047507 * S_NumDealsPurchases
47794     +          +    -1.38692718220359 * S_NumWebVisitsMonth
47795     +          +    -0.07580803465143 * S_RFMstat  +      0.4152505934779 *
47796     +        S_Recency  +     1.29605991841828 * S_Teenhome
47797     +          +     2.17160180088465 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.6002425930451 * S_AcceptedCmpTotal + -0.86762771301251 * S_Frq + -0.57793933969656 * S_Income + 0.41975808190408 * S_Mnt + -0.13242897225011 * S_MntGoldProds + -1.44402585881872 * S_MntMeatProducts + -0.41491605544255 * 
S_NumCatalogPurchases + 0.49374983047507 * S_NumDealsPurchases + -1.38692718220359 * S_NumWebVisitsMonth + -0.07580803465143 * S_RFMstat + 0.4152505934779 * S_Recency + 1.29605991841828 * S_Teenhome + 2.17160180088465 * S_Year_Birth ;
47798     +   H1x2_1  = H1x2_1  +     0.77674448865903 * Marital_StatusDivorced
47799     +          +    -1.29227303709115 * Marital_StatusMarried
47800     +          +     0.71446782242025 * Marital_StatusSingle
47801     +          +     0.55295867102727 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.77674448865903 * Marital_StatusDivorced + -1.29227303709115 * Marital_StatusMarried + 0.71446782242025 * Marital_StatusSingle + 0.55295867102727 * Marital_StatusTogether ;
47802     +   H1x2_2  = H1x2_2  +     -0.1845223373129 * Marital_StatusDivorced
47803     +          +      2.0815223604364 * Marital_StatusMarried
47804     +          +     0.79462013188709 * Marital_StatusSingle
47805     +          +     0.20668835346022 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.1845223373129 * Marital_StatusDivorced + 2.0815223604364 * Marital_StatusMarried + 0.79462013188709 * Marital_StatusSingle + 0.20668835346022 * Marital_StatusTogether ;
47806     +   H1x2_3  = H1x2_3  +    -1.02774258915556 * Marital_StatusDivorced
47807     +          +     0.44769683627357 * Marital_StatusMarried
47808     +          +     1.09957357551209 * Marital_StatusSingle
47809     +          +     0.98246644516303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.02774258915556 * Marital_StatusDivorced + 0.44769683627357 * Marital_StatusMarried + 1.09957357551209 * Marital_StatusSingle + 0.98246644516303 * Marital_StatusTogether ;
47810     +   H1x2_4  = H1x2_4  +     1.02578628033933 * Marital_StatusDivorced
47811     +          +    -0.71096069683657 * Marital_StatusMarried
47812     +          +    -0.46849808497503 * Marital_StatusSingle
47813     +          +    -0.50186472808298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.02578628033933 * Marital_StatusDivorced + -0.71096069683657 * Marital_StatusMarried + -0.46849808497503 * Marital_StatusSingle + -0.50186472808298 * Marital_StatusTogether ;
47814     +   H1x2_5  = H1x2_5  +     0.83514340443964 * Marital_StatusDivorced
47815     +          +     0.21000014809177 * Marital_StatusMarried
47816     +          +    -1.05959388759825 * Marital_StatusSingle
47817     +          +     -0.8202251717493 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83514340443964 * Marital_StatusDivorced + 0.21000014809177 * Marital_StatusMarried + -1.05959388759825 * Marital_StatusSingle + -0.8202251717493 * Marital_StatusTogether ;
47818     +   H1x2_1  =     0.66244588339698 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.66244588339698 + H1x2_1 ;
47819     +   H1x2_2  =     0.36306484617725 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.36306484617725 + H1x2_2 ;
47820     +   H1x2_3  =     0.00299288434405 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.00299288434405 + H1x2_3 ;
47821     +   H1x2_4  =     0.32206403734945 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.32206403734945 + H1x2_4 ;
47822     +   H1x2_5  =     0.48514364636978 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.48514364636978 + H1x2_5 ;
47823     +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
47824     +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
47825     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
47826     +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
47827     +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
47828     +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
47829     +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
47830     +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
47831     +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
47832     +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
47833     +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
47834     +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
47835     +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
47836     +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
47837     +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
47838     +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
47839     +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
47840     +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
47841     +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
47842     +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
47843     +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
47844     +END;
MPRINT(EM_DIAGRAM):   END;
47845     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
47846     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
47847     +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
47848     +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
47849     +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
47850     +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
47851     +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
47852     +END;
MPRINT(EM_DIAGRAM):   END;
47853     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47854     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
47855     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47856     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
47857     +   H2x1_1  =     5.34062678932931 * H1x1_1  +     7.71604112891627 * H1x1_2
47858     +          +     7.54377937186103 * H1x1_3  +    -5.90943850663966 * H1x1_4
47859     +          +    -6.06522890475814 * H1x1_5  +    -7.94470945127082 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 5.34062678932931 * H1x1_1 + 7.71604112891627 * H1x1_2 + 7.54377937186103 * H1x1_3 + -5.90943850663966 * H1x1_4 + -6.06522890475814 * H1x1_5 + -7.94470945127082 * H1x1_6 ;
47860     +   H2x1_2  =      1.1479485803131 * H1x1_1  +      1.4482835893576 * H1x1_2
47861     +          +    -0.15220644394866 * H1x1_3  +    -1.30000676790854 * H1x1_4
47862     +          +    -0.49333138568117 * H1x1_5  +    -1.96124154717115 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.1479485803131 * H1x1_1 + 1.4482835893576 * H1x1_2 + -0.15220644394866 * H1x1_3 + -1.30000676790854 * H1x1_4 + -0.49333138568117 * H1x1_5 + -1.96124154717115 * H1x1_6 ;
47863     +   H2x1_3  =     2.12915623251937 * H1x1_1  +     4.39530013559682 * H1x1_2
47864     +          +     3.38050961443392 * H1x1_3  +    -5.12182301645649 * H1x1_4
47865     +          +    -3.74697079524831 * H1x1_5  +    -5.26174801543685 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 2.12915623251937 * H1x1_1 + 4.39530013559682 * H1x1_2 + 3.38050961443392 * H1x1_3 + -5.12182301645649 * H1x1_4 + -3.74697079524831 * H1x1_5 + -5.26174801543685 * H1x1_6 ;
47866     +   H2x1_4  =     0.54854810712303 * H1x1_1  +      1.6486650469525 * H1x1_2
47867     +          +     1.84563084742932 * H1x1_3  +    -2.43710509923951 * H1x1_4
47868     +          +     0.03038093596976 * H1x1_5  +    -1.34566786751269 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.54854810712303 * H1x1_1 + 1.6486650469525 * H1x1_2 + 1.84563084742932 * H1x1_3 + -2.43710509923951 * H1x1_4 + 0.03038093596976 * H1x1_5 + -1.34566786751269 * H1x1_6 ;
47869     +   H2x1_5  =     0.89845480530178 * H1x1_1  +     3.19967829294268 * H1x1_2
47870     +          +     3.58592569542093 * H1x1_3  +    -3.76417733693485 * H1x1_4
47871     +          +     -4.1568039640005 * H1x1_5  +    -4.42895004794637 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.89845480530178 * H1x1_1 + 3.19967829294268 * H1x1_2 + 3.58592569542093 * H1x1_3 + -3.76417733693485 * H1x1_4 + -4.1568039640005 * H1x1_5 + -4.42895004794637 * H1x1_6 ;
47872     +   H2x1_1  = H2x1_1  +     0.44545310705069 * H1x2_1
47873     +          +     2.72471946580982 * H1x2_2  +    -1.42856846603531 * H1x2_3
47874     +          +     0.25357521888082 * H1x2_4  +    -1.25902268741411 * H1x2_5
47875     +          +    -1.70956044020454 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.44545310705069 * H1x2_1 + 2.72471946580982 * H1x2_2 + -1.42856846603531 * H1x2_3 + 0.25357521888082 * H1x2_4 + -1.25902268741411 * H1x2_5 + -1.70956044020454 * H1x2_6 ;
47876     +   H2x1_2  = H2x1_2  +      0.9465771639497 * H1x2_1
47877     +          +    -0.41110969777104 * H1x2_2  +    -0.92834816798625 * H1x2_3
47878     +          +     -1.7337755087443 * H1x2_4  +     -1.2522448489667 * H1x2_5
47879     +          +    -0.90111756793979 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.9465771639497 * H1x2_1 + -0.41110969777104 * H1x2_2 + -0.92834816798625 * H1x2_3 + -1.7337755087443 * H1x2_4 + -1.2522448489667 * H1x2_5 + -0.90111756793979 * H1x2_6 ;
47880     +   H2x1_3  = H2x1_3  +    -0.22355080983787 * H1x2_1
47881     +          +    -0.18918346120545 * H1x2_2  +    -1.50592518382263 * H1x2_3
47882     +          +    -1.00672320426732 * H1x2_4  +    -1.09510249463921 * H1x2_5
47883     +          +     0.83089577154267 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.22355080983787 * H1x2_1 + -0.18918346120545 * H1x2_2 + -1.50592518382263 * H1x2_3 + -1.00672320426732 * H1x2_4 + -1.09510249463921 * H1x2_5 + 0.83089577154267 * H1x2_6 ;
47884     +   H2x1_4  = H2x1_4  +    -0.74505363577487 * H1x2_1
47885     +          +     0.41544439689687 * H1x2_2  +    -0.11467073820729 * H1x2_3
47886     +          +    -2.16913690278917 * H1x2_4  +     1.07667011067144 * H1x2_5
47887     +          +    -0.21291665093094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.74505363577487 * H1x2_1 + 0.41544439689687 * H1x2_2 + -0.11467073820729 * H1x2_3 + -2.16913690278917 * H1x2_4 + 1.07667011067144 * H1x2_5 + -0.21291665093094 * H1x2_6 ;
47888     +   H2x1_5  = H2x1_5  +    -0.22639397151159 * H1x2_1
47889     +          +     0.59976504799464 * H1x2_2  +    -1.19497833953318 * H1x2_3
47890     +          +     0.40681132265012 * H1x2_4  +    -1.18142813082248 * H1x2_5
47891     +          +     0.28627108561279 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.22639397151159 * H1x2_1 + 0.59976504799464 * H1x2_2 + -1.19497833953318 * H1x2_3 + 0.40681132265012 * H1x2_4 + -1.18142813082248 * H1x2_5 + 0.28627108561279 * H1x2_6 ;
47892     +   H2x1_1  =     0.80837297417824 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.80837297417824 + H2x1_1 ;
47893     +   H2x1_2  =    -3.15918654233626 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -3.15918654233626 + H2x1_2 ;
47894     +   H2x1_3  =     -1.1148455701308 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.1148455701308 + H2x1_3 ;
47895     +   H2x1_4  =    -2.43637271773179 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.43637271773179 + H2x1_4 ;
47896     +   H2x1_5  =     -1.5068240097035 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.5068240097035 + H2x1_5 ;
47897     +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
47898     +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
47899     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
47900     +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
47901     +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
47902     +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
47903     +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
47904     +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
47905     +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
47906     +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
47907     +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
47908     +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
47909     +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
47910     +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
47911     +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
47912     +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
47913     +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
47914     +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
47915     +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
47916     +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
47917     +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
47918     +END;
MPRINT(EM_DIAGRAM):   END;
47919     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
47920     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
47921     +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
47922     +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
47923     +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
47924     +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
47925     +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
47926     +END;
MPRINT(EM_DIAGRAM):   END;
47927     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47928     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
47929     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47930     +
47931     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
47932     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
47933     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
47934     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
47935     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
47936     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
47937     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
47938     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
47939     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
47940     +end;
MPRINT(EM_DIAGRAM):   end;
47941     +else do;
MPRINT(EM_DIAGRAM):   else do;
47942     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
47943     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
47944     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
47945     +   end;
MPRINT(EM_DIAGRAM):   end;
47946     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
47947     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
47948     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
47949     +   end;
MPRINT(EM_DIAGRAM):   end;
47950     +   else do;
MPRINT(EM_DIAGRAM):   else do;
47951     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
47952     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
47953     +   end;
MPRINT(EM_DIAGRAM):   end;
47954     +end;
MPRINT(EM_DIAGRAM):   end;
47955     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
47956     +   P_DepVar1  =    -14.9408685199347 * H2x1_1  +     1.48309430635242 * H2x1_2
47957     +          +     -4.3496216751271 * H2x1_3  +     0.01239249943556 * H2x1_4
47958     +          +    -6.27169756239783 * H2x1_5  +     2.70843493957574 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.9408685199347 * H2x1_1 + 1.48309430635242 * H2x1_2 + -4.3496216751271 * H2x1_3 + 0.01239249943556 * H2x1_4 + -6.27169756239783 * H2x1_5 + 2.70843493957574 * H2x1_6 ;
47959     +   P_DepVar1  =     5.67267561171469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.67267561171469 + P_DepVar1 ;
47960     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
47961     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
47962     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
47963     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
47964     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
47965     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
47966     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
47967     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
47968     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
47969     +END;
MPRINT(EM_DIAGRAM):   END;
47970     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
47971     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
47972     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
47973     +END;
MPRINT(EM_DIAGRAM):   END;
47974     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
47975     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
47976     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
47977     +END;
MPRINT(EM_DIAGRAM):   END;
47978     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
47979     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
47980     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
47981     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
47982     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
47983     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
47984     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
47985     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47986     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
47987     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
47988     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
47989     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
47990     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
47991     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
47992     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
47993     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
47994     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
47995     +END;
MPRINT(EM_DIAGRAM):   END;
47996     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
47997     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
47998     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
47999     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
48000     +* Renaming variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural42;
48001     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48002     +* Renaming Posterior variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural42;
48003     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48004     +drop AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar1;
48005     +AutoNeural42_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar1 = P_DepVar1;
48006     +drop AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar0;
48007     +AutoNeural42_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar0 = P_DepVar0;
48008     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48009     +* Renaming _WARN_ variable for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural42;
48010     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48011     +length AutoNeural42_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural42_WARN_ $4;
48012     +drop AutoNeural42_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_WARN_;
48013     +AutoNeural42_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural42_WARN_ = _WARN_;
48014     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48015     +* Ensmbl57: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 6 of 7;
48016     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48017     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48018     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
48019     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
48020     +* NODE: AutoNeural43;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural43;
48021     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48022     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
48023     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
48024     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
48025     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
48026     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
48027     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
48028     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
48029     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
48030     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
48031     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
48032     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
48033     +LENGTH _WARN_ $4
48034     +      F_DepVar  $ 12
48035     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
48036     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
48037     +
48038     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
48039     +
48040     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
48041     +
48042     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
48043     +
48044     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
48045     +
48046     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
48047     +
48048     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
48049     +
48050     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
48051     +
48052     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
48053     +
48054     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
48055     +
48056     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
48057     +
48058     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
48059     +
48060     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
48061     +
48062     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
48063     +
48064     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
48065     +
48066     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
48067     +
48068     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
48069     +
48070     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
48071     +
48072     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
48073     +
48074     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
48075     +
48076     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
48077     +
48078     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
48079     +
48080     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
48081     +
48082     +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
48083     +
48084     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
48085     +
48086     +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
48087     +
48088     +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
48089     +
48090     +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
48091     +
48092     +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
48093     +
48094     +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
48095     +
48096     +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
48097     +
48098     +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
48099     +
48100     +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
48101     +
48102     +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
48103     +
48104     +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
48105     +
48106     +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
48107     +
48108     +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
48109     +
48110     +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
48111     +
48112     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
48113     +
48114     +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
48115     +
48116     +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
48117     +
48118     +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
48119     +
48120     +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
48121     +
48122     +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
48123     +
48124     +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
48125     +
48126     +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
48127     +
48128     +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
48129     +
48130     +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
48131     +
48132     +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
48133     +
48134     +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
48135     +
48136     +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
48137     +
48138     +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
48139     +
48140     +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
48141     +
48142     +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
48143     +
48144     +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
48145     +
48146     +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
48147     +
48148     +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
48149     +
48150     +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
48151     +
48152     +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
48153     +
48154     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
48155     +
48156     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
48157     +
48158     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
48159     +
48160     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
48161     +
48162     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
48163     +
48164     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
48165     +
48166     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
48167     +
48168     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
48169     +
48170     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
48171     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
48172     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
48173     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
48174     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
48175     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
48176     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
48177     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
48178     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
48179     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
48180     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
48181     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
48182     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
48183     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
48184     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
48185     +end;
MPRINT(EM_DIAGRAM):   end;
48186     +else do;
MPRINT(EM_DIAGRAM):   else do;
48187     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
48188     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
48189     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
48190     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
48191     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
48192     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
48193     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
48194     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
48195     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
48196     +         end;
MPRINT(EM_DIAGRAM):   end;
48197     +         else do;
MPRINT(EM_DIAGRAM):   else do;
48198     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
48199     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
48200     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
48201     +            end;
MPRINT(EM_DIAGRAM):   end;
48202     +         end;
MPRINT(EM_DIAGRAM):   end;
48203     +      end;
MPRINT(EM_DIAGRAM):   end;
48204     +      else do;
MPRINT(EM_DIAGRAM):   else do;
48205     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
48206     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
48207     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
48208     +         end;
MPRINT(EM_DIAGRAM):   end;
48209     +      end;
MPRINT(EM_DIAGRAM):   end;
48210     +   end;
MPRINT(EM_DIAGRAM):   end;
48211     +   else do;
MPRINT(EM_DIAGRAM):   else do;
48212     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
48213     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
48214     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
48215     +      end;
MPRINT(EM_DIAGRAM):   end;
48216     +      else do;
MPRINT(EM_DIAGRAM):   else do;
48217     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
48218     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
48219     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
48220     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
48221     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
48222     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
48223     +         end;
MPRINT(EM_DIAGRAM):   end;
48224     +      end;
MPRINT(EM_DIAGRAM):   end;
48225     +   end;
MPRINT(EM_DIAGRAM):   end;
48226     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
48227     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
48228     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
48229     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
48230     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
48231     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
48232     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
48233     +   end;
MPRINT(EM_DIAGRAM):   end;
48234     +end;
MPRINT(EM_DIAGRAM):   end;
48235     +
48236     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
48237     +*** Checking missing input Interval
48238     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
48239     +
48240     +IF NMISS(
48241     +   AcceptedCmpTotal ,
48242     +   Frq ,
48243     +   Income ,
48244     +   Mnt ,
48245     +   MntGoldProds ,
48246     +   MntMeatProducts ,
48247     +   NumCatalogPurchases ,
48248     +   NumDealsPurchases ,
48249     +   NumWebVisitsMonth ,
48250     +   RFMstat ,
48251     +   Recency ,
48252     +   Teenhome ,
48253     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , Recency , Teenhome , Year_Birth ) THEN DO;
48254     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
48255     +
48256     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
48257     +END;
MPRINT(EM_DIAGRAM):   END;
48258     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
48259     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
48260     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
48261     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
48262     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
48263     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
48264     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
48265     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
48266     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
48267     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
48268     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
48269     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
48270     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
48271     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
48272     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
48273     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
48274     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
48275     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
48276     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
48277     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
48278     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
48279     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
48280     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
48281     +END;
MPRINT(EM_DIAGRAM):   END;
48282     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
48283     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
48284     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
48285     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
48286     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
48287     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
48288     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
48289     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
48290     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
48291     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
48292     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
48293     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
48294     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
48295     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
48296     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
48297     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
48298     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
48299     +   ELSE S_NumCatalogPurchases
48300     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
48301     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
48302     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
48303     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
48304     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
48305     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
48306     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
48307     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
48308     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
48309     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
48310     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
48311     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
48312     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
48313     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
48314     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
48315     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
48316     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
48317     +END;
MPRINT(EM_DIAGRAM):   END;
48318     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
48319     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
48320     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
48321     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
48322     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
48323     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
48324     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
48325     +   H1x1_1  =    -0.29618919413806 * S_AcceptedCmpTotal
48326     +          +     0.65621237028757 * S_Frq  +     0.03418945976327 * S_Income
48327     +          +     1.44880456678399 * S_Mnt  +     0.74166093949552 *
48328     +        S_MntGoldProds  +     1.02706876663519 * S_MntMeatProducts
48329     +          +    -0.82528424139262 * S_NumCatalogPurchases
48330     +          +      0.5929046965244 * S_NumDealsPurchases
48331     +          +    -0.52362488197384 * S_NumWebVisitsMonth
48332     +          +     0.37882892269923 * S_RFMstat  +     2.12340115344155 *
48333     +        S_Recency  +    -0.83670225777249 * S_Teenhome
48334     +          +     0.53976656905831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.29618919413806 * S_AcceptedCmpTotal + 0.65621237028757 * S_Frq + 0.03418945976327 * S_Income + 1.44880456678399 * S_Mnt + 0.74166093949552 * S_MntGoldProds + 1.02706876663519 * S_MntMeatProducts + -0.82528424139262 * 
S_NumCatalogPurchases + 0.5929046965244 * S_NumDealsPurchases + -0.52362488197384 * S_NumWebVisitsMonth + 0.37882892269923 * S_RFMstat + 2.12340115344155 * S_Recency + -0.83670225777249 * S_Teenhome + 0.53976656905831 * S_Year_Birth ;
48335     +   H1x1_2  =     0.29962396390652 * S_AcceptedCmpTotal
48336     +          +     -2.5902198016826 * S_Frq  +    -0.18776639473475 * S_Income
48337     +          +    -2.77524252217737 * S_Mnt  +     0.96018065616836 *
48338     +        S_MntGoldProds  +     3.16907172523474 * S_MntMeatProducts
48339     +          +    -0.60117742307807 * S_NumCatalogPurchases
48340     +          +     1.09806082321711 * S_NumDealsPurchases
48341     +          +     1.26617704720444 * S_NumWebVisitsMonth
48342     +          +     1.08444062320284 * S_RFMstat  +     1.05523311776937 *
48343     +        S_Recency  +     -0.2630764341314 * S_Teenhome
48344     +          +    -0.42373178164016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29962396390652 * S_AcceptedCmpTotal + -2.5902198016826 * S_Frq + -0.18776639473475 * S_Income + -2.77524252217737 * S_Mnt + 0.96018065616836 * S_MntGoldProds + 3.16907172523474 * S_MntMeatProducts + -0.60117742307807 * 
S_NumCatalogPurchases + 1.09806082321711 * S_NumDealsPurchases + 1.26617704720444 * S_NumWebVisitsMonth + 1.08444062320284 * S_RFMstat + 1.05523311776937 * S_Recency + -0.2630764341314 * S_Teenhome + -0.42373178164016 * S_Year_Birth ;
48345     +   H1x1_3  =     2.31041583450369 * S_AcceptedCmpTotal
48346     +          +    -1.96810851023784 * S_Frq  +     0.93795839333407 * S_Income
48347     +          +    -1.55337331547216 * S_Mnt  +     1.13417428979776 *
48348     +        S_MntGoldProds  +     3.70573651287077 * S_MntMeatProducts
48349     +          +     1.63075268570383 * S_NumCatalogPurchases
48350     +          +     0.62057902628545 * S_NumDealsPurchases
48351     +          +     1.85944172136218 * S_NumWebVisitsMonth
48352     +          +     0.51474936656536 * S_RFMstat  +    -2.17922024885571 *
48353     +        S_Recency  +    -0.78663308544854 * S_Teenhome
48354     +          +    -0.08719031066365 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.31041583450369 * S_AcceptedCmpTotal + -1.96810851023784 * S_Frq + 0.93795839333407 * S_Income + -1.55337331547216 * S_Mnt + 1.13417428979776 * S_MntGoldProds + 3.70573651287077 * S_MntMeatProducts + 1.63075268570383 * 
S_NumCatalogPurchases + 0.62057902628545 * S_NumDealsPurchases + 1.85944172136218 * S_NumWebVisitsMonth + 0.51474936656536 * S_RFMstat + -2.17922024885571 * S_Recency + -0.78663308544854 * S_Teenhome + -0.08719031066365 * S_Year_Birth ;
48355     +   H1x1_4  =     -0.0390409024382 * S_AcceptedCmpTotal
48356     +          +     2.11606776858073 * S_Frq  +     -0.3817450995856 * S_Income
48357     +          +     0.40531492299483 * S_Mnt  +     0.54341985868017 *
48358     +        S_MntGoldProds  +    -5.50809183295151 * S_MntMeatProducts
48359     +          +    -2.59032878085972 * S_NumCatalogPurchases
48360     +          +    -0.44146008176644 * S_NumDealsPurchases
48361     +          +     1.16377649939583 * S_NumWebVisitsMonth
48362     +          +    -0.40950445519308 * S_RFMstat  +     1.44701615363875 *
48363     +        S_Recency  +    -0.44721505258044 * S_Teenhome
48364     +          +    -0.53780522701747 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.0390409024382 * S_AcceptedCmpTotal + 2.11606776858073 * S_Frq + -0.3817450995856 * S_Income + 0.40531492299483 * S_Mnt + 0.54341985868017 * S_MntGoldProds + -5.50809183295151 * S_MntMeatProducts + -2.59032878085972 * 
S_NumCatalogPurchases + -0.44146008176644 * S_NumDealsPurchases + 1.16377649939583 * S_NumWebVisitsMonth + -0.40950445519308 * S_RFMstat + 1.44701615363875 * S_Recency + -0.44721505258044 * S_Teenhome + -0.53780522701747 * S_Year_Birth ;
48365     +   H1x1_5  =    -0.96249689474011 * S_AcceptedCmpTotal
48366     +          +     1.18171571446591 * S_Frq  +     0.15643078933994 * S_Income
48367     +          +      1.1855275327594 * S_Mnt  +    -0.31882188338593 *
48368     +        S_MntGoldProds  +    -0.17799046807331 * S_MntMeatProducts
48369     +          +    -2.88423926492169 * S_NumCatalogPurchases
48370     +          +     0.76448279454687 * S_NumDealsPurchases
48371     +          +     0.63782718366339 * S_NumWebVisitsMonth
48372     +          +    -1.52311206450608 * S_RFMstat  +     2.66138322599513 *
48373     +        S_Recency  +     0.19809045233143 * S_Teenhome
48374     +          +    -0.11944673598308 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.96249689474011 * S_AcceptedCmpTotal + 1.18171571446591 * S_Frq + 0.15643078933994 * S_Income + 1.1855275327594 * S_Mnt + -0.31882188338593 * S_MntGoldProds + -0.17799046807331 * S_MntMeatProducts + -2.88423926492169 * 
S_NumCatalogPurchases + 0.76448279454687 * S_NumDealsPurchases + 0.63782718366339 * S_NumWebVisitsMonth + -1.52311206450608 * S_RFMstat + 2.66138322599513 * S_Recency + 0.19809045233143 * S_Teenhome + -0.11944673598308 * S_Year_Birth ;
48375     +   H1x1_6  =     1.48018319811202 * S_AcceptedCmpTotal
48376     +          +    -2.35201132061873 * S_Frq  +     1.49549206730687 * S_Income
48377     +          +    -0.92311571755706 * S_Mnt  +    -0.17036386789536 *
48378     +        S_MntGoldProds  +     2.42959371021324 * S_MntMeatProducts
48379     +          +     1.71243370379543 * S_NumCatalogPurchases
48380     +          +     1.59034024362028 * S_NumDealsPurchases
48381     +          +     2.43090724707282 * S_NumWebVisitsMonth
48382     +          +    -1.84934930083177 * S_RFMstat  +    -1.10219728762745 *
48383     +        S_Recency  +    -1.20398234836557 * S_Teenhome
48384     +          +    -0.04071326663204 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.48018319811202 * S_AcceptedCmpTotal + -2.35201132061873 * S_Frq + 1.49549206730687 * S_Income + -0.92311571755706 * S_Mnt + -0.17036386789536 * S_MntGoldProds + 2.42959371021324 * S_MntMeatProducts + 1.71243370379543 * 
S_NumCatalogPurchases + 1.59034024362028 * S_NumDealsPurchases + 2.43090724707282 * S_NumWebVisitsMonth + -1.84934930083177 * S_RFMstat + -1.10219728762745 * S_Recency + -1.20398234836557 * S_Teenhome + -0.04071326663204 * S_Year_Birth ;
48385     +   H1x1_1  = H1x1_1  +    -1.53952272056325 * Marital_StatusDivorced
48386     +          +     1.90782989914192 * Marital_StatusMarried
48387     +          +    -1.16189886119693 * Marital_StatusSingle
48388     +          +     1.42717413956591 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.53952272056325 * Marital_StatusDivorced + 1.90782989914192 * Marital_StatusMarried + -1.16189886119693 * Marital_StatusSingle + 1.42717413956591 * Marital_StatusTogether ;
48389     +   H1x1_2  = H1x1_2  +     0.65814869063598 * Marital_StatusDivorced
48390     +          +     0.30468777490799 * Marital_StatusMarried
48391     +          +     0.61978761938746 * Marital_StatusSingle
48392     +          +    -0.78873321292122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.65814869063598 * Marital_StatusDivorced + 0.30468777490799 * Marital_StatusMarried + 0.61978761938746 * Marital_StatusSingle + -0.78873321292122 * Marital_StatusTogether ;
48393     +   H1x1_3  = H1x1_3  +      0.1292120736254 * Marital_StatusDivorced
48394     +          +    -1.73477859605124 * Marital_StatusMarried
48395     +          +     1.32595981126289 * Marital_StatusSingle
48396     +          +    -1.40161784211243 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.1292120736254 * Marital_StatusDivorced + -1.73477859605124 * Marital_StatusMarried + 1.32595981126289 * Marital_StatusSingle + -1.40161784211243 * Marital_StatusTogether ;
48397     +   H1x1_4  = H1x1_4  +     0.20617554754163 * Marital_StatusDivorced
48398     +          +     0.06077392213964 * Marital_StatusMarried
48399     +          +     0.21115279121703 * Marital_StatusSingle
48400     +          +    -0.61340758151821 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.20617554754163 * Marital_StatusDivorced + 0.06077392213964 * Marital_StatusMarried + 0.21115279121703 * Marital_StatusSingle + -0.61340758151821 * Marital_StatusTogether ;
48401     +   H1x1_5  = H1x1_5  +    -0.69141266071894 * Marital_StatusDivorced
48402     +          +    -0.24067068377767 * Marital_StatusMarried
48403     +          +      0.2728964145401 * Marital_StatusSingle
48404     +          +    -0.61614895252648 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.69141266071894 * Marital_StatusDivorced + -0.24067068377767 * Marital_StatusMarried + 0.2728964145401 * Marital_StatusSingle + -0.61614895252648 * Marital_StatusTogether ;
48405     +   H1x1_6  = H1x1_6  +    -0.81455860225062 * Marital_StatusDivorced
48406     +          +    -0.15640287278595 * Marital_StatusMarried
48407     +          +     0.54159395450762 * Marital_StatusSingle
48408     +          +    -0.43264862434738 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.81455860225062 * Marital_StatusDivorced + -0.15640287278595 * Marital_StatusMarried + 0.54159395450762 * Marital_StatusSingle + -0.43264862434738 * Marital_StatusTogether ;
48409     +   H1x1_1  =    -0.36385036888345 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.36385036888345 + H1x1_1 ;
48410     +   H1x1_2  =     0.02663558500629 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.02663558500629 + H1x1_2 ;
48411     +   H1x1_3  =    -3.50526409213811 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.50526409213811 + H1x1_3 ;
48412     +   H1x1_4  =     0.63048769294892 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.63048769294892 + H1x1_4 ;
48413     +   H1x1_5  =     1.21111796976731 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.21111796976731 + H1x1_5 ;
48414     +   H1x1_6  =    -1.76174187739611 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.76174187739611 + H1x1_6 ;
48415     +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
48416     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
48417     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7 );
48418     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
48419     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
48420     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
48421     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
48422     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
48423     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
48424     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
48425     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
48426     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
48427     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
48428     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
48429     +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
48430     +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
48431     +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
48432     +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
48433     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
48434     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
48435     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
48436     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
48437     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
48438     +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
48439     +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
48440     +END;
MPRINT(EM_DIAGRAM):   END;
48441     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
48442     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
48443     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
48444     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
48445     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
48446     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
48447     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
48448     +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
48449     +END;
MPRINT(EM_DIAGRAM):   END;
48450     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
48451     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
48452     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
48453     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
48454     +   H1x2_1  =     0.51589041180152 * S_AcceptedCmpTotal
48455     +          +     -0.6498311499195 * S_Frq  +    -1.08182644925044 * S_Income
48456     +          +    -1.19064228379044 * S_Mnt  +    -1.27287496888491 *
48457     +        S_MntGoldProds  +    -1.33897837883991 * S_MntMeatProducts
48458     +          +     0.14209124492657 * S_NumCatalogPurchases
48459     +          +    -1.31625106509803 * S_NumDealsPurchases
48460     +          +     2.35745588368331 * S_NumWebVisitsMonth
48461     +          +    -1.28657356976181 * S_RFMstat  +     0.25408650330935 *
48462     +        S_Recency  +     1.23527100408525 * S_Teenhome
48463     +          +    -1.87183507669176 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.51589041180152 * S_AcceptedCmpTotal + -0.6498311499195 * S_Frq + -1.08182644925044 * S_Income + -1.19064228379044 * S_Mnt + -1.27287496888491 * S_MntGoldProds + -1.33897837883991 * S_MntMeatProducts + 0.14209124492657 * 
S_NumCatalogPurchases + -1.31625106509803 * S_NumDealsPurchases + 2.35745588368331 * S_NumWebVisitsMonth + -1.28657356976181 * S_RFMstat + 0.25408650330935 * S_Recency + 1.23527100408525 * S_Teenhome + -1.87183507669176 * S_Year_Birth ;
48464     +   H1x2_2  =    -1.23424462482032 * S_AcceptedCmpTotal
48465     +          +     1.46358102529667 * S_Frq  +     1.75790517593121 * S_Income
48466     +          +      -0.424881586919 * S_Mnt  +     -0.9331242135447 *
48467     +        S_MntGoldProds  +     0.54942904780681 * S_MntMeatProducts
48468     +          +     1.18605040958794 * S_NumCatalogPurchases
48469     +          +    -0.89798157472835 * S_NumDealsPurchases
48470     +          +    -0.09236646871049 * S_NumWebVisitsMonth
48471     +          +    -1.29341547638046 * S_RFMstat  +     1.66853355984342 *
48472     +        S_Recency  +    -0.50770218335102 * S_Teenhome
48473     +          +    -1.07353749220663 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.23424462482032 * S_AcceptedCmpTotal + 1.46358102529667 * S_Frq + 1.75790517593121 * S_Income + -0.424881586919 * S_Mnt + -0.9331242135447 * S_MntGoldProds + 0.54942904780681 * S_MntMeatProducts + 1.18605040958794 * 
S_NumCatalogPurchases + -0.89798157472835 * S_NumDealsPurchases + -0.09236646871049 * S_NumWebVisitsMonth + -1.29341547638046 * S_RFMstat + 1.66853355984342 * S_Recency + -0.50770218335102 * S_Teenhome + -1.07353749220663 * S_Year_Birth ;
48474     +   H1x2_3  =     0.77624009560593 * S_AcceptedCmpTotal
48475     +          +    -0.52739784343536 * S_Frq  +     0.03893675518591 * S_Income
48476     +          +     2.17484611279249 * S_Mnt  +    -0.17952459801341 *
48477     +        S_MntGoldProds  +     0.34588410829653 * S_MntMeatProducts
48478     +          +    -1.53424308314822 * S_NumCatalogPurchases
48479     +          +    -0.80590323269981 * S_NumDealsPurchases
48480     +          +    -1.40104490662303 * S_NumWebVisitsMonth
48481     +          +     1.66586308350968 * S_RFMstat  +    -0.47553614859646 *
48482     +        S_Recency  +     0.96086280467056 * S_Teenhome
48483     +          +    -1.77672596886127 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.77624009560593 * S_AcceptedCmpTotal + -0.52739784343536 * S_Frq + 0.03893675518591 * S_Income + 2.17484611279249 * S_Mnt + -0.17952459801341 * S_MntGoldProds + 0.34588410829653 * S_MntMeatProducts + -1.53424308314822 * 
S_NumCatalogPurchases + -0.80590323269981 * S_NumDealsPurchases + -1.40104490662303 * S_NumWebVisitsMonth + 1.66586308350968 * S_RFMstat + -0.47553614859646 * S_Recency + 0.96086280467056 * S_Teenhome + -1.77672596886127 * S_Year_Birth ;
48484     +   H1x2_4  =     0.58137966699652 * S_AcceptedCmpTotal
48485     +          +      1.4040418295752 * S_Frq  +    -0.24832517883948 * S_Income
48486     +          +    -0.61141424736299 * S_Mnt  +     0.20471254162898 *
48487     +        S_MntGoldProds  +     0.44314427658514 * S_MntMeatProducts
48488     +          +    -1.25862219948587 * S_NumCatalogPurchases
48489     +          +     1.95015982914109 * S_NumDealsPurchases
48490     +          +     0.64320281589594 * S_NumWebVisitsMonth
48491     +          +     0.79165027029588 * S_RFMstat  +     0.66988554846863 *
48492     +        S_Recency  +    -0.00184949563812 * S_Teenhome
48493     +          +    -0.90548552271817 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.58137966699652 * S_AcceptedCmpTotal + 1.4040418295752 * S_Frq + -0.24832517883948 * S_Income + -0.61141424736299 * S_Mnt + 0.20471254162898 * S_MntGoldProds + 0.44314427658514 * S_MntMeatProducts + -1.25862219948587 * 
S_NumCatalogPurchases + 1.95015982914109 * S_NumDealsPurchases + 0.64320281589594 * S_NumWebVisitsMonth + 0.79165027029588 * S_RFMstat + 0.66988554846863 * S_Recency + -0.00184949563812 * S_Teenhome + -0.90548552271817 * S_Year_Birth ;
48494     +   H1x2_5  =      0.5931660751286 * S_AcceptedCmpTotal
48495     +          +     0.58645753040534 * S_Frq  +     1.15236353289832 * S_Income
48496     +          +     0.33853280493921 * S_Mnt  +    -0.34695797092699 *
48497     +        S_MntGoldProds  +     2.24596975589576 * S_MntMeatProducts
48498     +          +     0.30573893169917 * S_NumCatalogPurchases
48499     +          +     0.93169788380491 * S_NumDealsPurchases
48500     +          +     0.04516037232248 * S_NumWebVisitsMonth
48501     +          +     0.56461660789519 * S_RFMstat  +    -0.73850030816559 *
48502     +        S_Recency  +      0.1429120113072 * S_Teenhome
48503     +          +     0.57728849891114 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.5931660751286 * S_AcceptedCmpTotal + 0.58645753040534 * S_Frq + 1.15236353289832 * S_Income + 0.33853280493921 * S_Mnt + -0.34695797092699 * S_MntGoldProds + 2.24596975589576 * S_MntMeatProducts + 0.30573893169917 * 
S_NumCatalogPurchases + 0.93169788380491 * S_NumDealsPurchases + 0.04516037232248 * S_NumWebVisitsMonth + 0.56461660789519 * S_RFMstat + -0.73850030816559 * S_Recency + 0.1429120113072 * S_Teenhome + 0.57728849891114 * S_Year_Birth ;
48504     +   H1x2_6  =    -0.61564457275113 * S_AcceptedCmpTotal
48505     +          +     0.25558411574917 * S_Frq  +      0.1079727446126 * S_Income
48506     +          +    -1.20360633098467 * S_Mnt  +     1.72797334940475 *
48507     +        S_MntGoldProds  +    -1.65210775934619 * S_MntMeatProducts
48508     +          +      0.2704422632168 * S_NumCatalogPurchases
48509     +          +      2.3389342094366 * S_NumDealsPurchases
48510     +          +     0.01076302858809 * S_NumWebVisitsMonth
48511     +          +    -2.36764292681458 * S_RFMstat  +     1.10196533018748 *
48512     +        S_Recency  +     0.68455094392125 * S_Teenhome
48513     +          +     1.22292273319927 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.61564457275113 * S_AcceptedCmpTotal + 0.25558411574917 * S_Frq + 0.1079727446126 * S_Income + -1.20360633098467 * S_Mnt + 1.72797334940475 * S_MntGoldProds + -1.65210775934619 * S_MntMeatProducts + 0.2704422632168 * 
S_NumCatalogPurchases + 2.3389342094366 * S_NumDealsPurchases + 0.01076302858809 * S_NumWebVisitsMonth + -2.36764292681458 * S_RFMstat + 1.10196533018748 * S_Recency + 0.68455094392125 * S_Teenhome + 1.22292273319927 * S_Year_Birth ;
48514     +   H1x2_1  = H1x2_1  +    -2.04566893512123 * Marital_StatusDivorced
48515     +          +      0.8255833782513 * Marital_StatusMarried
48516     +          +    -0.48959165020896 * Marital_StatusSingle
48517     +          +     2.83781371812098 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.04566893512123 * Marital_StatusDivorced + 0.8255833782513 * Marital_StatusMarried + -0.48959165020896 * Marital_StatusSingle + 2.83781371812098 * Marital_StatusTogether ;
48518     +   H1x2_2  = H1x2_2  +     0.67000557197818 * Marital_StatusDivorced
48519     +          +    -0.36405013930464 * Marital_StatusMarried
48520     +          +    -0.11895921007246 * Marital_StatusSingle
48521     +          +    -0.94713834966834 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.67000557197818 * Marital_StatusDivorced + -0.36405013930464 * Marital_StatusMarried + -0.11895921007246 * Marital_StatusSingle + -0.94713834966834 * Marital_StatusTogether ;
48522     +   H1x2_3  = H1x2_3  +     0.26597574107473 * Marital_StatusDivorced
48523     +          +    -1.38902793752658 * Marital_StatusMarried
48524     +          +     0.47104623132568 * Marital_StatusSingle
48525     +          +    -0.55354712799424 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26597574107473 * Marital_StatusDivorced + -1.38902793752658 * Marital_StatusMarried + 0.47104623132568 * Marital_StatusSingle + -0.55354712799424 * Marital_StatusTogether ;
48526     +   H1x2_4  = H1x2_4  +    -1.69625977318234 * Marital_StatusDivorced
48527     +          +     0.03793816986941 * Marital_StatusMarried
48528     +          +     0.32286910605532 * Marital_StatusSingle
48529     +          +    -1.44817209305758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.69625977318234 * Marital_StatusDivorced + 0.03793816986941 * Marital_StatusMarried + 0.32286910605532 * Marital_StatusSingle + -1.44817209305758 * Marital_StatusTogether ;
48530     +   H1x2_5  = H1x2_5  +     0.19745523338489 * Marital_StatusDivorced
48531     +          +    -0.60013237897988 * Marital_StatusMarried
48532     +          +    -1.54090744803073 * Marital_StatusSingle
48533     +          +    -2.24346446510302 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.19745523338489 * Marital_StatusDivorced + -0.60013237897988 * Marital_StatusMarried + -1.54090744803073 * Marital_StatusSingle + -2.24346446510302 * Marital_StatusTogether ;
48534     +   H1x2_6  = H1x2_6  +     0.47464108124928 * Marital_StatusDivorced
48535     +          +     2.39490119482132 * Marital_StatusMarried
48536     +          +     0.73080073298893 * Marital_StatusSingle
48537     +          +    -0.62296432915598 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.47464108124928 * Marital_StatusDivorced + 2.39490119482132 * Marital_StatusMarried + 0.73080073298893 * Marital_StatusSingle + -0.62296432915598 * Marital_StatusTogether ;
48538     +   H1x2_1  =     1.03099135229255 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.03099135229255 + H1x2_1 ;
48539     +   H1x2_2  =     -0.9436150278938 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9436150278938 + H1x2_2 ;
48540     +   H1x2_3  =    -0.17327523864686 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.17327523864686 + H1x2_3 ;
48541     +   H1x2_4  =     0.30103807123555 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.30103807123555 + H1x2_4 ;
48542     +   H1x2_5  =    -2.06815743640812 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -2.06815743640812 + H1x2_5 ;
48543     +   H1x2_6  =     1.90356790294644 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.90356790294644 + H1x2_6 ;
48544     +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
48545     +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
48546     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7 );
48547     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
48548     +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
48549     +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
48550     +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
48551     +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
48552     +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
48553     +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
48554     +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
48555     +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
48556     +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
48557     +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
48558     +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
48559     +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
48560     +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
48561     +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
48562     +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
48563     +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
48564     +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
48565     +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
48566     +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
48567     +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
48568     +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
48569     +END;
MPRINT(EM_DIAGRAM):   END;
48570     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
48571     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
48572     +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
48573     +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
48574     +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
48575     +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
48576     +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
48577     +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
48578     +END;
MPRINT(EM_DIAGRAM):   END;
48579     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
48580     +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
48581     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
48582     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
48583     +   H1x3_1  =    -0.02577999703823 * S_AcceptedCmpTotal
48584     +          +     1.15166430232754 * S_Frq  +     0.14876168620543 * S_Income
48585     +          +    -0.18380736633059 * S_Mnt  +     0.50048252433262 *
48586     +        S_MntGoldProds  +    -0.33191625929347 * S_MntMeatProducts
48587     +          +     2.25334156596167 * S_NumCatalogPurchases
48588     +          +     1.11206221926547 * S_NumDealsPurchases
48589     +          +    -0.86546062057987 * S_NumWebVisitsMonth
48590     +          +    -0.98321051175326 * S_RFMstat  +     1.25274008829299 *
48591     +        S_Recency  +    -1.57916593034924 * S_Teenhome
48592     +          +    -2.06345344469395 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02577999703823 * S_AcceptedCmpTotal + 1.15166430232754 * S_Frq + 0.14876168620543 * S_Income + -0.18380736633059 * S_Mnt + 0.50048252433262 * S_MntGoldProds + -0.33191625929347 * S_MntMeatProducts + 2.25334156596167 * 
S_NumCatalogPurchases + 1.11206221926547 * S_NumDealsPurchases + -0.86546062057987 * S_NumWebVisitsMonth + -0.98321051175326 * S_RFMstat + 1.25274008829299 * S_Recency + -1.57916593034924 * S_Teenhome + -2.06345344469395 * S_Year_Birth ;
48593     +   H1x3_2  =    -1.17329843303132 * S_AcceptedCmpTotal
48594     +          +     1.78916673039241 * S_Frq  +    -0.84674133842717 * S_Income
48595     +          +     0.28484675606294 * S_Mnt  +     0.63187019772354 *
48596     +        S_MntGoldProds  +    -0.96245535082151 * S_MntMeatProducts
48597     +          +    -0.72830662589886 * S_NumCatalogPurchases
48598     +          +    -1.43194640925705 * S_NumDealsPurchases
48599     +          +     0.27875145672985 * S_NumWebVisitsMonth
48600     +          +    -2.03430995128807 * S_RFMstat  +    -0.52413738058555 *
48601     +        S_Recency  +    -1.01056905981073 * S_Teenhome
48602     +          +     0.00830584207402 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.17329843303132 * S_AcceptedCmpTotal + 1.78916673039241 * S_Frq + -0.84674133842717 * S_Income + 0.28484675606294 * S_Mnt + 0.63187019772354 * S_MntGoldProds + -0.96245535082151 * S_MntMeatProducts + -0.72830662589886 * 
S_NumCatalogPurchases + -1.43194640925705 * S_NumDealsPurchases + 0.27875145672985 * S_NumWebVisitsMonth + -2.03430995128807 * S_RFMstat + -0.52413738058555 * S_Recency + -1.01056905981073 * S_Teenhome + 0.00830584207402 * S_Year_Birth ;
48603     +   H1x3_3  =    -1.51193899177395 * S_AcceptedCmpTotal
48604     +          +    -1.18260896990859 * S_Frq  +    -0.95243122164169 * S_Income
48605     +          +    -0.18792820239336 * S_Mnt  +    -0.06982279743147 *
48606     +        S_MntGoldProds  +    -1.14763783870634 * S_MntMeatProducts
48607     +          +    -0.29577972728188 * S_NumCatalogPurchases
48608     +          +    -0.09204036503823 * S_NumDealsPurchases
48609     +          +     1.09127760712522 * S_NumWebVisitsMonth
48610     +          +     0.67251355869104 * S_RFMstat  +     0.02406054275944 *
48611     +        S_Recency  +    -1.61269837976842 * S_Teenhome
48612     +          +     1.49645524045306 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -1.51193899177395 * S_AcceptedCmpTotal + -1.18260896990859 * S_Frq + -0.95243122164169 * S_Income + -0.18792820239336 * S_Mnt + -0.06982279743147 * S_MntGoldProds + -1.14763783870634 * S_MntMeatProducts + -0.29577972728188 * 
S_NumCatalogPurchases + -0.09204036503823 * S_NumDealsPurchases + 1.09127760712522 * S_NumWebVisitsMonth + 0.67251355869104 * S_RFMstat + 0.02406054275944 * S_Recency + -1.61269837976842 * S_Teenhome + 1.49645524045306 * S_Year_Birth ;
48613     +   H1x3_4  =      0.0300271349218 * S_AcceptedCmpTotal
48614     +          +     0.92676949944979 * S_Frq  +    -0.43729227407729 * S_Income
48615     +          +     0.20149694045928 * S_Mnt  +    -0.72339995493149 *
48616     +        S_MntGoldProds  +     0.79792093415572 * S_MntMeatProducts
48617     +          +     0.74771164805463 * S_NumCatalogPurchases
48618     +          +     1.48674373289951 * S_NumDealsPurchases
48619     +          +    -0.43724934700095 * S_NumWebVisitsMonth
48620     +          +    -0.83295997374079 * S_RFMstat  +    -0.78737099754706 *
48621     +        S_Recency  +      1.5969237416548 * S_Teenhome
48622     +          +     -0.1539761100948 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.0300271349218 * S_AcceptedCmpTotal + 0.92676949944979 * S_Frq + -0.43729227407729 * S_Income + 0.20149694045928 * S_Mnt + -0.72339995493149 * S_MntGoldProds + 0.79792093415572 * S_MntMeatProducts + 0.74771164805463 * 
S_NumCatalogPurchases + 1.48674373289951 * S_NumDealsPurchases + -0.43724934700095 * S_NumWebVisitsMonth + -0.83295997374079 * S_RFMstat + -0.78737099754706 * S_Recency + 1.5969237416548 * S_Teenhome + -0.1539761100948 * S_Year_Birth ;
48623     +   H1x3_5  =     0.10850479066736 * S_AcceptedCmpTotal
48624     +          +    -0.69523987336905 * S_Frq  +    -1.03313846128362 * S_Income
48625     +          +     0.25026080496919 * S_Mnt  +    -0.97357883151863 *
48626     +        S_MntGoldProds  +    -0.61754054300662 * S_MntMeatProducts
48627     +          +     0.32607897654777 * S_NumCatalogPurchases
48628     +          +    -0.05989936582211 * S_NumDealsPurchases
48629     +          +     -0.8863628882594 * S_NumWebVisitsMonth
48630     +          +      1.1124532739734 * S_RFMstat  +    -0.38719199193265 *
48631     +        S_Recency  +      1.1633098880037 * S_Teenhome
48632     +          +    -1.12745203473451 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.10850479066736 * S_AcceptedCmpTotal + -0.69523987336905 * S_Frq + -1.03313846128362 * S_Income + 0.25026080496919 * S_Mnt + -0.97357883151863 * S_MntGoldProds + -0.61754054300662 * S_MntMeatProducts + 0.32607897654777 * 
S_NumCatalogPurchases + -0.05989936582211 * S_NumDealsPurchases + -0.8863628882594 * S_NumWebVisitsMonth + 1.1124532739734 * S_RFMstat + -0.38719199193265 * S_Recency + 1.1633098880037 * S_Teenhome + -1.12745203473451 * S_Year_Birth ;
48633     +   H1x3_6  =    -0.11588080697234 * S_AcceptedCmpTotal
48634     +          +     0.62360534366171 * S_Frq  +     0.05171263107667 * S_Income
48635     +          +    -2.09517372359855 * S_Mnt  +     1.82275072298905 *
48636     +        S_MntGoldProds  +    -0.20222711303443 * S_MntMeatProducts
48637     +          +    -0.32855091358254 * S_NumCatalogPurchases
48638     +          +    -0.04262624947945 * S_NumDealsPurchases
48639     +          +     0.34844893542429 * S_NumWebVisitsMonth
48640     +          +     1.02395415516187 * S_RFMstat  +     0.72163010188304 *
48641     +        S_Recency  +     0.25374922499465 * S_Teenhome
48642     +          +    -0.26482823596248 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -0.11588080697234 * S_AcceptedCmpTotal + 0.62360534366171 * S_Frq + 0.05171263107667 * S_Income + -2.09517372359855 * S_Mnt + 1.82275072298905 * S_MntGoldProds + -0.20222711303443 * S_MntMeatProducts + -0.32855091358254 * 
S_NumCatalogPurchases + -0.04262624947945 * S_NumDealsPurchases + 0.34844893542429 * S_NumWebVisitsMonth + 1.02395415516187 * S_RFMstat + 0.72163010188304 * S_Recency + 0.25374922499465 * S_Teenhome + -0.26482823596248 * S_Year_Birth ;
48643     +   H1x3_1  = H1x3_1  +     0.22579923464903 * Marital_StatusDivorced
48644     +          +    -1.19357131519861 * Marital_StatusMarried
48645     +          +     1.01104838285626 * Marital_StatusSingle
48646     +          +    -1.80955917142309 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.22579923464903 * Marital_StatusDivorced + -1.19357131519861 * Marital_StatusMarried + 1.01104838285626 * Marital_StatusSingle + -1.80955917142309 * Marital_StatusTogether ;
48647     +   H1x3_2  = H1x3_2  +    -0.94571479472535 * Marital_StatusDivorced
48648     +          +     0.41518199668826 * Marital_StatusMarried
48649     +          +     1.03267293059069 * Marital_StatusSingle
48650     +          +    -0.66743874470855 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.94571479472535 * Marital_StatusDivorced + 0.41518199668826 * Marital_StatusMarried + 1.03267293059069 * Marital_StatusSingle + -0.66743874470855 * Marital_StatusTogether ;
48651     +   H1x3_3  = H1x3_3  +    -0.15213926695809 * Marital_StatusDivorced
48652     +          +     0.56306179671807 * Marital_StatusMarried
48653     +          +    -1.20896369649342 * Marital_StatusSingle
48654     +          +      0.2381860290523 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.15213926695809 * Marital_StatusDivorced + 0.56306179671807 * Marital_StatusMarried + -1.20896369649342 * Marital_StatusSingle + 0.2381860290523 * Marital_StatusTogether ;
48655     +   H1x3_4  = H1x3_4  +      1.0736711015636 * Marital_StatusDivorced
48656     +          +    -2.56951757071166 * Marital_StatusMarried
48657     +          +     0.89024254219017 * Marital_StatusSingle
48658     +          +    -1.38303524163943 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.0736711015636 * Marital_StatusDivorced + -2.56951757071166 * Marital_StatusMarried + 0.89024254219017 * Marital_StatusSingle + -1.38303524163943 * Marital_StatusTogether ;
48659     +   H1x3_5  = H1x3_5  +     2.33108578518176 * Marital_StatusDivorced
48660     +          +    -0.82560993254767 * Marital_StatusMarried
48661     +          +     0.67892086377875 * Marital_StatusSingle
48662     +          +    -0.99872502550085 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 2.33108578518176 * Marital_StatusDivorced + -0.82560993254767 * Marital_StatusMarried + 0.67892086377875 * Marital_StatusSingle + -0.99872502550085 * Marital_StatusTogether ;
48663     +   H1x3_6  = H1x3_6  +    -1.46724646572707 * Marital_StatusDivorced
48664     +          +     1.62783448403167 * Marital_StatusMarried
48665     +          +     0.73020544049082 * Marital_StatusSingle
48666     +          +    -0.22473120319236 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -1.46724646572707 * Marital_StatusDivorced + 1.62783448403167 * Marital_StatusMarried + 0.73020544049082 * Marital_StatusSingle + -0.22473120319236 * Marital_StatusTogether ;
48667     +   H1x3_1  =     0.67900930500511 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67900930500511 + H1x3_1 ;
48668     +   H1x3_2  =     1.40060666199115 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.40060666199115 + H1x3_2 ;
48669     +   H1x3_3  =     0.29463847527526 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.29463847527526 + H1x3_3 ;
48670     +   H1x3_4  =    -0.04357875847579 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -0.04357875847579 + H1x3_4 ;
48671     +   H1x3_5  =      0.8612643972197 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.8612643972197 + H1x3_5 ;
48672     +   H1x3_6  =    -1.88380703730164 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -1.88380703730164 + H1x3_6 ;
48673     +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
48674     +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
48675     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7 );
48676     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
48677     +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
48678     +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
48679     +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
48680     +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
48681     +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
48682     +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
48683     +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
48684     +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
48685     +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
48686     +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
48687     +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
48688     +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
48689     +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
48690     +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
48691     +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
48692     +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
48693     +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
48694     +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
48695     +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
48696     +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
48697     +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
48698     +END;
MPRINT(EM_DIAGRAM):   END;
48699     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
48700     +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
48701     +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
48702     +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
48703     +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
48704     +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
48705     +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
48706     +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
48707     +END;
MPRINT(EM_DIAGRAM):   END;
48708     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
48709     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
48710     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
48711     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
48712     +   H2x1_1  =    -0.95656178134917 * H1x1_1  +     1.37796748135739 * H1x1_2
48713     +          +     1.78756036673938 * H1x1_3  +     -0.8439546201475 * H1x1_4
48714     +          +    -1.03166099242293 * H1x1_5  +     0.52943703441707 * H1x1_6
48715     +          +     0.59795148287931 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.95656178134917 * H1x1_1 + 1.37796748135739 * H1x1_2 + 1.78756036673938 * H1x1_3 + -0.8439546201475 * H1x1_4 + -1.03166099242293 * H1x1_5 + 0.52943703441707 * H1x1_6 + 0.59795148287931 * H1x1_7 ;
48716     +   H2x1_2  =     1.91190798936382 * H1x1_1  +      -0.175949167006 * H1x1_2
48717     +          +    -0.20010954623703 * H1x1_3  +    -1.12168184279533 * H1x1_4
48718     +          +     0.35517508917627 * H1x1_5  +    -0.45519619936571 * H1x1_6
48719     +          +     1.08432924744886 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.91190798936382 * H1x1_1 + -0.175949167006 * H1x1_2 + -0.20010954623703 * H1x1_3 + -1.12168184279533 * H1x1_4 + 0.35517508917627 * H1x1_5 + -0.45519619936571 * H1x1_6 + 1.08432924744886 * H1x1_7 ;
48720     +   H2x1_3  =    -0.27236838695598 * H1x1_1  +     2.63546136140352 * H1x1_2
48721     +          +     1.80045649255758 * H1x1_3  +    -2.98830892061373 * H1x1_4
48722     +          +    -2.46045881589621 * H1x1_5  +     3.22396803549708 * H1x1_6
48723     +          +    -2.34667330067152 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.27236838695598 * H1x1_1 + 2.63546136140352 * H1x1_2 + 1.80045649255758 * H1x1_3 + -2.98830892061373 * H1x1_4 + -2.46045881589621 * H1x1_5 + 3.22396803549708 * H1x1_6 + -2.34667330067152 * H1x1_7 ;
48724     +   H2x1_4  =    -3.13210205675036 * H1x1_1  +     3.91450403558871 * H1x1_2
48725     +          +       4.933279615521 * H1x1_3  +    -2.59282514986249 * H1x1_4
48726     +          +    -2.03653671740081 * H1x1_5  +       4.064405082461 * H1x1_6
48727     +          +    -2.60526325926954 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.13210205675036 * H1x1_1 + 3.91450403558871 * H1x1_2 + 4.933279615521 * H1x1_3 + -2.59282514986249 * H1x1_4 + -2.03653671740081 * H1x1_5 + 4.064405082461 * H1x1_6 + -2.60526325926954 * H1x1_7 ;
48728     +   H2x1_5  =    -0.63232084982839 * H1x1_1  +     0.33718773947492 * H1x1_2
48729     +          +     1.29296448887546 * H1x1_3  +     1.12889621039023 * H1x1_4
48730     +          +     2.18934908118237 * H1x1_5  +     0.87862098785892 * H1x1_6
48731     +          +     0.91832061749569 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.63232084982839 * H1x1_1 + 0.33718773947492 * H1x1_2 + 1.29296448887546 * H1x1_3 + 1.12889621039023 * H1x1_4 + 2.18934908118237 * H1x1_5 + 0.87862098785892 * H1x1_6 + 0.91832061749569 * H1x1_7 ;
48732     +   H2x1_6  =     1.81043244413035 * H1x1_1  +      1.4777958998418 * H1x1_2
48733     +          +     2.53190667102186 * H1x1_3  +      0.4670787906688 * H1x1_4
48734     +          +    -0.00303664790933 * H1x1_5  +     0.21078497178324 * H1x1_6
48735     +          +     0.34792900678934 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.81043244413035 * H1x1_1 + 1.4777958998418 * H1x1_2 + 2.53190667102186 * H1x1_3 + 0.4670787906688 * H1x1_4 + -0.00303664790933 * H1x1_5 + 0.21078497178324 * H1x1_6 + 0.34792900678934 * H1x1_7 ;
48736     +   H2x1_7  =      2.7297431384039 * H1x1_1  +    -1.30829815853208 * H1x1_2
48737     +          +    -0.74317234707744 * H1x1_3  +     0.02621795882884 * H1x1_4
48738     +          +     1.92641283593631 * H1x1_5  +     0.32006968332264 * H1x1_6
48739     +          +     0.87129000431049 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = 2.7297431384039 * H1x1_1 + -1.30829815853208 * H1x1_2 + -0.74317234707744 * H1x1_3 + 0.02621795882884 * H1x1_4 + 1.92641283593631 * H1x1_5 + 0.32006968332264 * H1x1_6 + 0.87129000431049 * H1x1_7 ;
48740     +   H2x1_1  = H2x1_1  +     -2.1938127062121 * H1x2_1
48741     +          +     0.21780666650637 * H1x2_2  +    -0.59195589593425 * H1x2_3
48742     +          +     0.38436245185742 * H1x2_4  +     0.62573807049092 * H1x2_5
48743     +          +    -0.61319348011502 * H1x2_6  +     0.47203210338015 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.1938127062121 * H1x2_1 + 0.21780666650637 * H1x2_2 + -0.59195589593425 * H1x2_3 + 0.38436245185742 * H1x2_4 + 0.62573807049092 * H1x2_5 + -0.61319348011502 * H1x2_6 + 0.47203210338015 * H1x2_7 ;
48744     +   H2x1_2  = H2x1_2  +    -0.26087177829438 * H1x2_1
48745     +          +      1.5809361009025 * H1x2_2  +     1.48270435958935 * H1x2_3
48746     +          +    -0.08943866833208 * H1x2_4  +     1.06601866330059 * H1x2_5
48747     +          +     0.65908674086625 * H1x2_6  +    -0.41138217409507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.26087177829438 * H1x2_1 + 1.5809361009025 * H1x2_2 + 1.48270435958935 * H1x2_3 + -0.08943866833208 * H1x2_4 + 1.06601866330059 * H1x2_5 + 0.65908674086625 * H1x2_6 + -0.41138217409507 * H1x2_7 ;
48748     +   H2x1_3  = H2x1_3  +     0.38416253176813 * H1x2_1
48749     +          +    -0.18005172775158 * H1x2_2  +    -0.64477973121074 * H1x2_3
48750     +          +    -0.89326621554735 * H1x2_4  +     2.10808351608759 * H1x2_5
48751     +          +    -0.79701502540522 * H1x2_6  +     0.12564972289045 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.38416253176813 * H1x2_1 + -0.18005172775158 * H1x2_2 + -0.64477973121074 * H1x2_3 + -0.89326621554735 * H1x2_4 + 2.10808351608759 * H1x2_5 + -0.79701502540522 * H1x2_6 + 0.12564972289045 * H1x2_7 ;
48752     +   H2x1_4  = H2x1_4  +     0.45607666975085 * H1x2_1
48753     +          +     0.66281103175614 * H1x2_2  +     -2.2042052849244 * H1x2_3
48754     +          +    -0.88338513539567 * H1x2_4  +      0.8444719755129 * H1x2_5
48755     +          +    -1.34699546034909 * H1x2_6  +    -0.92256004986079 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.45607666975085 * H1x2_1 + 0.66281103175614 * H1x2_2 + -2.2042052849244 * H1x2_3 + -0.88338513539567 * H1x2_4 + 0.8444719755129 * H1x2_5 + -1.34699546034909 * H1x2_6 + -0.92256004986079 * H1x2_7 ;
48756     +   H2x1_5  = H2x1_5  +    -1.36966827041497 * H1x2_1
48757     +          +    -0.50899589190563 * H1x2_2  +    -1.06117764109728 * H1x2_3
48758     +          +    -0.15325014700397 * H1x2_4  +     0.77845029985607 * H1x2_5
48759     +          +     0.15661838238861 * H1x2_6  +    -1.46533717081069 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.36966827041497 * H1x2_1 + -0.50899589190563 * H1x2_2 + -1.06117764109728 * H1x2_3 + -0.15325014700397 * H1x2_4 + 0.77845029985607 * H1x2_5 + 0.15661838238861 * H1x2_6 + -1.46533717081069 * H1x2_7 ;
48760     +   H2x1_6  = H2x1_6  +    -1.39055542164691 * H1x2_1
48761     +          +    -0.58359991825266 * H1x2_2  +     1.77147289208184 * H1x2_3
48762     +          +    -0.35342441714416 * H1x2_4  +     0.33680205236698 * H1x2_5
48763     +          +    -0.30165800401137 * H1x2_6  +    -1.49792110543314 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -1.39055542164691 * H1x2_1 + -0.58359991825266 * H1x2_2 + 1.77147289208184 * H1x2_3 + -0.35342441714416 * H1x2_4 + 0.33680205236698 * H1x2_5 + -0.30165800401137 * H1x2_6 + -1.49792110543314 * H1x2_7 ;
48764     +   H2x1_7  = H2x1_7  +     0.20334369322498 * H1x2_1
48765     +          +    -0.56117684469389 * H1x2_2  +     1.27451151893116 * H1x2_3
48766     +          +    -0.39759641471947 * H1x2_4  +    -0.48424888739695 * H1x2_5
48767     +          +      0.5776601194378 * H1x2_6  +    -0.11343742791086 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.20334369322498 * H1x2_1 + -0.56117684469389 * H1x2_2 + 1.27451151893116 * H1x2_3 + -0.39759641471947 * H1x2_4 + -0.48424888739695 * H1x2_5 + 0.5776601194378 * H1x2_6 + -0.11343742791086 * H1x2_7 ;
48768     +   H2x1_1  = H2x1_1  +    -0.06990804266869 * H1x3_1
48769     +          +     1.59179747886577 * H1x3_2  +     -0.3658160611529 * H1x3_3
48770     +          +    -0.16177521959465 * H1x3_4  +     0.23353693967535 * H1x3_5
48771     +          +     0.96164596504173 * H1x3_6  +    -0.49996390114171 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.06990804266869 * H1x3_1 + 1.59179747886577 * H1x3_2 + -0.3658160611529 * H1x3_3 + -0.16177521959465 * H1x3_4 + 0.23353693967535 * H1x3_5 + 0.96164596504173 * H1x3_6 + -0.49996390114171 * H1x3_7 ;
48772     +   H2x1_2  = H2x1_2  +    -1.34775541988885 * H1x3_1
48773     +          +    -0.94185062200477 * H1x3_2  +     2.40002799790884 * H1x3_3
48774     +          +      1.3228491036493 * H1x3_4  +    -2.27212522601702 * H1x3_5
48775     +          +     0.22676652176348 * H1x3_6  +     0.96810343094913 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.34775541988885 * H1x3_1 + -0.94185062200477 * H1x3_2 + 2.40002799790884 * H1x3_3 + 1.3228491036493 * H1x3_4 + -2.27212522601702 * H1x3_5 + 0.22676652176348 * H1x3_6 + 0.96810343094913 * H1x3_7 ;
48776     +   H2x1_3  = H2x1_3  +    -0.68382731119741 * H1x3_1
48777     +          +    -0.90388882694092 * H1x3_2  +     0.51668393396039 * H1x3_3
48778     +          +     0.45716345972756 * H1x3_4  +    -0.49320936872992 * H1x3_5
48779     +          +     0.11919896076076 * H1x3_6  +    -0.14288859595709 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.68382731119741 * H1x3_1 + -0.90388882694092 * H1x3_2 + 0.51668393396039 * H1x3_3 + 0.45716345972756 * H1x3_4 + -0.49320936872992 * H1x3_5 + 0.11919896076076 * H1x3_6 + -0.14288859595709 * H1x3_7 ;
48780     +   H2x1_4  = H2x1_4  +    -0.68614915242276 * H1x3_1
48781     +          +     0.55556081003484 * H1x3_2  +     0.26058803548386 * H1x3_3
48782     +          +     0.44653924204999 * H1x3_4  +    -0.97704608173388 * H1x3_5
48783     +          +    -0.04291306465274 * H1x3_6  +    -0.70203538063923 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.68614915242276 * H1x3_1 + 0.55556081003484 * H1x3_2 + 0.26058803548386 * H1x3_3 + 0.44653924204999 * H1x3_4 + -0.97704608173388 * H1x3_5 + -0.04291306465274 * H1x3_6 + -0.70203538063923 * H1x3_7 ;
48784     +   H2x1_5  = H2x1_5  +     0.58123765973845 * H1x3_1
48785     +          +     0.48842685419846 * H1x3_2  +     1.59951720976688 * H1x3_3
48786     +          +     0.39804915100427 * H1x3_4  +    -0.47629764750379 * H1x3_5
48787     +          +    -1.56133001160202 * H1x3_6  +     1.12232825939123 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.58123765973845 * H1x3_1 + 0.48842685419846 * H1x3_2 + 1.59951720976688 * H1x3_3 + 0.39804915100427 * H1x3_4 + -0.47629764750379 * H1x3_5 + -1.56133001160202 * H1x3_6 + 1.12232825939123 * H1x3_7 ;
48788     +   H2x1_6  = H2x1_6  +    -0.35903530664944 * H1x3_1
48789     +          +    -1.21870303791063 * H1x3_2  +     -0.0358958118983 * H1x3_3
48790     +          +     1.71577031345204 * H1x3_4  +    -0.29111463093854 * H1x3_5
48791     +          +    -1.77383444462785 * H1x3_6  +    -0.93379473274206 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.35903530664944 * H1x3_1 + -1.21870303791063 * H1x3_2 + -0.0358958118983 * H1x3_3 + 1.71577031345204 * H1x3_4 + -0.29111463093854 * H1x3_5 + -1.77383444462785 * H1x3_6 + -0.93379473274206 * H1x3_7 ;
48792     +   H2x1_7  = H2x1_7  +     0.79356954272121 * H1x3_1
48793     +          +    -2.23344635077437 * H1x3_2  +     0.01459894574902 * H1x3_3
48794     +          +    -1.76556734796059 * H1x3_4  +     0.55679401249834 * H1x3_5
48795     +          +    -0.00867866380584 * H1x3_6  +     1.61311341603142 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.79356954272121 * H1x3_1 + -2.23344635077437 * H1x3_2 + 0.01459894574902 * H1x3_3 + -1.76556734796059 * H1x3_4 + 0.55679401249834 * H1x3_5 + -0.00867866380584 * H1x3_6 + 1.61311341603142 * H1x3_7 ;
48796     +   H2x1_1  =     0.45495097945606 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45495097945606 + H2x1_1 ;
48797     +   H2x1_2  =    -0.00150409200191 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.00150409200191 + H2x1_2 ;
48798     +   H2x1_3  =     0.06766385008662 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.06766385008662 + H2x1_3 ;
48799     +   H2x1_4  =    -0.15767488957433 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.15767488957433 + H2x1_4 ;
48800     +   H2x1_5  =     3.00862692955968 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 3.00862692955968 + H2x1_5 ;
48801     +   H2x1_6  =     1.46151036473661 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.46151036473661 + H2x1_6 ;
48802     +   H2x1_7  =    -1.14350195577506 + H2x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = -1.14350195577506 + H2x1_7 ;
48803     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
48804     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
48805     +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
48806     +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
48807     +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
48808     +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
48809     +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
48810     +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
48811     +   H2x1_7  = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_7 = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
48812     +END;
MPRINT(EM_DIAGRAM):   END;
48813     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
48814     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
48815     +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
48816     +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
48817     +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
48818     +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
48819     +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
48820     +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
48821     +END;
MPRINT(EM_DIAGRAM):   END;
48822     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
48823     +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
48824     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
48825     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
48826     +   H2x2_1  =     -0.6098073780758 * H1x1_1  +    -0.36212005078054 * H1x1_2
48827     +          +     0.06355695656592 * H1x1_3  +     0.42978415336514 * H1x1_4
48828     +          +     1.73171637681701 * H1x1_5  +    -0.19499247120261 * H1x1_6
48829     +          +     0.74015079276747 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.6098073780758 * H1x1_1 + -0.36212005078054 * H1x1_2 + 0.06355695656592 * H1x1_3 + 0.42978415336514 * H1x1_4 + 1.73171637681701 * H1x1_5 + -0.19499247120261 * H1x1_6 + 0.74015079276747 * H1x1_7 ;
48830     +   H2x2_2  =     0.94291268086892 * H1x1_1  +    -0.57821086705904 * H1x1_2
48831     +          +     1.78126629448091 * H1x1_3  +    -1.19267460568433 * H1x1_4
48832     +          +    -0.23111688249081 * H1x1_5  +     0.48499259969431 * H1x1_6
48833     +          +    -1.56999349458897 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.94291268086892 * H1x1_1 + -0.57821086705904 * H1x1_2 + 1.78126629448091 * H1x1_3 + -1.19267460568433 * H1x1_4 + -0.23111688249081 * H1x1_5 + 0.48499259969431 * H1x1_6 + -1.56999349458897 * H1x1_7 ;
48834     +   H2x2_3  =    -0.83943846185187 * H1x1_1  +     0.07494097035466 * H1x1_2
48835     +          +    -0.22510824455886 * H1x1_3  +     0.73702100581613 * H1x1_4
48836     +          +     0.84717434356729 * H1x1_5  +      1.1890648131813 * H1x1_6
48837     +          +    -0.69985750736721 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.83943846185187 * H1x1_1 + 0.07494097035466 * H1x1_2 + -0.22510824455886 * H1x1_3 + 0.73702100581613 * H1x1_4 + 0.84717434356729 * H1x1_5 + 1.1890648131813 * H1x1_6 + -0.69985750736721 * H1x1_7 ;
48838     +   H2x2_4  =     1.34186573490327 * H1x1_1  +     0.10476556384336 * H1x1_2
48839     +          +    -0.07073923857851 * H1x1_3  +     0.49865386241422 * H1x1_4
48840     +          +     1.20386613863792 * H1x1_5  +     0.13033316874168 * H1x1_6
48841     +          +     0.36095712511699 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.34186573490327 * H1x1_1 + 0.10476556384336 * H1x1_2 + -0.07073923857851 * H1x1_3 + 0.49865386241422 * H1x1_4 + 1.20386613863792 * H1x1_5 + 0.13033316874168 * H1x1_6 + 0.36095712511699 * H1x1_7 ;
48842     +   H2x2_5  =     0.18683850895928 * H1x1_1  +     0.14087720385762 * H1x1_2
48843     +          +     0.39026989292984 * H1x1_3  +     0.40839626117338 * H1x1_4
48844     +          +     0.17816964710989 * H1x1_5  +     0.64340089705428 * H1x1_6
48845     +          +    -1.27363167094111 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.18683850895928 * H1x1_1 + 0.14087720385762 * H1x1_2 + 0.39026989292984 * H1x1_3 + 0.40839626117338 * H1x1_4 + 0.17816964710989 * H1x1_5 + 0.64340089705428 * H1x1_6 + -1.27363167094111 * H1x1_7 ;
48846     +   H2x2_6  =     0.67895838050616 * H1x1_1  +     0.23794862788395 * H1x1_2
48847     +          +     1.47625698143483 * H1x1_3  +    -0.78874578699705 * H1x1_4
48848     +          +     0.11576168045678 * H1x1_5  +     0.44470888441177 * H1x1_6
48849     +          +     1.87629961612594 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.67895838050616 * H1x1_1 + 0.23794862788395 * H1x1_2 + 1.47625698143483 * H1x1_3 + -0.78874578699705 * H1x1_4 + 0.11576168045678 * H1x1_5 + 0.44470888441177 * H1x1_6 + 1.87629961612594 * H1x1_7 ;
48850     +   H2x2_7  =     0.68721855914482 * H1x1_1  +    -0.49548906059129 * H1x1_2
48851     +          +    -0.95479435424814 * H1x1_3  +    -0.39636357013457 * H1x1_4
48852     +          +     1.05784760554335 * H1x1_5  +     0.55302681608178 * H1x1_6
48853     +          +     0.46646041474723 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.68721855914482 * H1x1_1 + -0.49548906059129 * H1x1_2 + -0.95479435424814 * H1x1_3 + -0.39636357013457 * H1x1_4 + 1.05784760554335 * H1x1_5 + 0.55302681608178 * H1x1_6 + 0.46646041474723 * H1x1_7 ;
48854     +   H2x2_1  = H2x2_1  +    -0.27434389803517 * H1x2_1
48855     +          +    -0.02074671287693 * H1x2_2  +    -1.51155778758517 * H1x2_3
48856     +          +    -1.19011584420542 * H1x2_4  +     -0.8540083688408 * H1x2_5
48857     +          +    -0.51772310023527 * H1x2_6  +     -0.0192399267251 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.27434389803517 * H1x2_1 + -0.02074671287693 * H1x2_2 + -1.51155778758517 * H1x2_3 + -1.19011584420542 * H1x2_4 + -0.8540083688408 * H1x2_5 + -0.51772310023527 * H1x2_6 + -0.0192399267251 * H1x2_7 ;
48858     +   H2x2_2  = H2x2_2  +      -1.312525087163 * H1x2_1
48859     +          +     1.19175487774401 * H1x2_2  +    -1.10903746388023 * H1x2_3
48860     +          +      0.2627511726941 * H1x2_4  +    -1.49474705736936 * H1x2_5
48861     +          +     0.79354329450131 * H1x2_6  +    -0.48676510074213 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.312525087163 * H1x2_1 + 1.19175487774401 * H1x2_2 + -1.10903746388023 * H1x2_3 + 0.2627511726941 * H1x2_4 + -1.49474705736936 * H1x2_5 + 0.79354329450131 * H1x2_6 + -0.48676510074213 * H1x2_7 ;
48862     +   H2x2_3  = H2x2_3  +     0.36715282986404 * H1x2_1
48863     +          +    -1.54691354420052 * H1x2_2  +     0.58334429972967 * H1x2_3
48864     +          +     3.32026929025218 * H1x2_4  +     0.08578287392048 * H1x2_5
48865     +          +     0.66591130534429 * H1x2_6  +     0.57559013181145 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.36715282986404 * H1x2_1 + -1.54691354420052 * H1x2_2 + 0.58334429972967 * H1x2_3 + 3.32026929025218 * H1x2_4 + 0.08578287392048 * H1x2_5 + 0.66591130534429 * H1x2_6 + 0.57559013181145 * H1x2_7 ;
48866     +   H2x2_4  = H2x2_4  +     1.28239253398808 * H1x2_1
48867     +          +     0.06662925242621 * H1x2_2  +     0.49967984015316 * H1x2_3
48868     +          +     0.65508978056742 * H1x2_4  +    -0.28141359636508 * H1x2_5
48869     +          +    -0.11787887977724 * H1x2_6  +     -0.6607325871171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.28239253398808 * H1x2_1 + 0.06662925242621 * H1x2_2 + 0.49967984015316 * H1x2_3 + 0.65508978056742 * H1x2_4 + -0.28141359636508 * H1x2_5 + -0.11787887977724 * H1x2_6 + -0.6607325871171 * H1x2_7 ;
48870     +   H2x2_5  = H2x2_5  +    -0.49511046906315 * H1x2_1
48871     +          +    -1.88759923025868 * H1x2_2  +    -0.99578805432186 * H1x2_3
48872     +          +     0.47300607025135 * H1x2_4  +     0.73725488149784 * H1x2_5
48873     +          +     0.56107930260304 * H1x2_6  +     -0.6618265083723 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.49511046906315 * H1x2_1 + -1.88759923025868 * H1x2_2 + -0.99578805432186 * H1x2_3 + 0.47300607025135 * H1x2_4 + 0.73725488149784 * H1x2_5 + 0.56107930260304 * H1x2_6 + -0.6618265083723 * H1x2_7 ;
48874     +   H2x2_6  = H2x2_6  +    -0.56511063846684 * H1x2_1
48875     +          +      0.1682036403191 * H1x2_2  +     -0.7835100270482 * H1x2_3
48876     +          +    -0.05926261017522 * H1x2_4  +     0.28303530518131 * H1x2_5
48877     +          +     1.57291802723543 * H1x2_6  +    -1.59403373749444 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + -0.56511063846684 * H1x2_1 + 0.1682036403191 * H1x2_2 + -0.7835100270482 * H1x2_3 + -0.05926261017522 * H1x2_4 + 0.28303530518131 * H1x2_5 + 1.57291802723543 * H1x2_6 + -1.59403373749444 * H1x2_7 ;
48878     +   H2x2_7  = H2x2_7  +    -1.06397759700592 * H1x2_1
48879     +          +    -0.21206214531111 * H1x2_2  +     1.52697813698804 * H1x2_3
48880     +          +    -0.03132126915438 * H1x2_4  +     0.11910805580916 * H1x2_5
48881     +          +     1.03394382602734 * H1x2_6  +    -0.28139834412941 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -1.06397759700592 * H1x2_1 + -0.21206214531111 * H1x2_2 + 1.52697813698804 * H1x2_3 + -0.03132126915438 * H1x2_4 + 0.11910805580916 * H1x2_5 + 1.03394382602734 * H1x2_6 + -0.28139834412941 * H1x2_7 ;
48882     +   H2x2_1  = H2x2_1  +    -1.18028681022903 * H1x3_1
48883     +          +    -0.56354962807969 * H1x3_2  +    -0.32071823564038 * H1x3_3
48884     +          +    -1.14868021494554 * H1x3_4  +     0.50491385711883 * H1x3_5
48885     +          +      0.3595638799915 * H1x3_6  +    -1.04253859844314 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.18028681022903 * H1x3_1 + -0.56354962807969 * H1x3_2 + -0.32071823564038 * H1x3_3 + -1.14868021494554 * H1x3_4 + 0.50491385711883 * H1x3_5 + 0.3595638799915 * H1x3_6 + -1.04253859844314 * H1x3_7 ;
48886     +   H2x2_2  = H2x2_2  +     1.10237781244945 * H1x3_1
48887     +          +     1.08171284637926 * H1x3_2  +     0.51153068676713 * H1x3_3
48888     +          +     -0.0106772728333 * H1x3_4  +     0.21777593557961 * H1x3_5
48889     +          +     0.10772516691825 * H1x3_6  +    -0.91346091248416 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 1.10237781244945 * H1x3_1 + 1.08171284637926 * H1x3_2 + 0.51153068676713 * H1x3_3 + -0.0106772728333 * H1x3_4 + 0.21777593557961 * H1x3_5 + 0.10772516691825 * H1x3_6 + -0.91346091248416 * H1x3_7 ;
48890     +   H2x2_3  = H2x2_3  +    -0.71132206215234 * H1x3_1
48891     +          +     0.60006902706544 * H1x3_2  +      -0.471170925786 * H1x3_3
48892     +          +     0.07477379311969 * H1x3_4  +    -0.34034195429991 * H1x3_5
48893     +          +     1.63429052967629 * H1x3_6  +     0.13697740143754 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.71132206215234 * H1x3_1 + 0.60006902706544 * H1x3_2 + -0.471170925786 * H1x3_3 + 0.07477379311969 * H1x3_4 + -0.34034195429991 * H1x3_5 + 1.63429052967629 * H1x3_6 + 0.13697740143754 * H1x3_7 ;
48894     +   H2x2_4  = H2x2_4  +     0.76338339806809 * H1x3_1
48895     +          +     0.34600443003632 * H1x3_2  +    -0.60707577837208 * H1x3_3
48896     +          +     1.37001034857478 * H1x3_4  +    -1.24749521510775 * H1x3_5
48897     +          +    -1.45784349983015 * H1x3_6  +     0.12879195100917 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.76338339806809 * H1x3_1 + 0.34600443003632 * H1x3_2 + -0.60707577837208 * H1x3_3 + 1.37001034857478 * H1x3_4 + -1.24749521510775 * H1x3_5 + -1.45784349983015 * H1x3_6 + 0.12879195100917 * H1x3_7 ;
48898     +   H2x2_5  = H2x2_5  +    -2.33392280718246 * H1x3_1
48899     +          +    -0.48123076018945 * H1x3_2  +    -0.76638732765894 * H1x3_3
48900     +          +    -1.76560846551209 * H1x3_4  +     1.62249911960883 * H1x3_5
48901     +          +    -0.31271093507345 * H1x3_6  +    -0.34748800562391 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -2.33392280718246 * H1x3_1 + -0.48123076018945 * H1x3_2 + -0.76638732765894 * H1x3_3 + -1.76560846551209 * H1x3_4 + 1.62249911960883 * H1x3_5 + -0.31271093507345 * H1x3_6 + -0.34748800562391 * H1x3_7 ;
48902     +   H2x2_6  = H2x2_6  +     0.53202536648562 * H1x3_1
48903     +          +     0.36605088046069 * H1x3_2  +     -1.7626773020241 * H1x3_3
48904     +          +     0.14681062331369 * H1x3_4  +     0.10699108516053 * H1x3_5
48905     +          +     2.24609371442936 * H1x3_6  +    -0.59076884674419 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.53202536648562 * H1x3_1 + 0.36605088046069 * H1x3_2 + -1.7626773020241 * H1x3_3 + 0.14681062331369 * H1x3_4 + 0.10699108516053 * H1x3_5 + 2.24609371442936 * H1x3_6 + -0.59076884674419 * H1x3_7 ;
48906     +   H2x2_7  = H2x2_7  +    -0.05290923023086 * H1x3_1
48907     +          +    -0.30472796298249 * H1x3_2  +     1.89100111779461 * H1x3_3
48908     +          +     0.51110284119421 * H1x3_4  +     -0.2014479939412 * H1x3_5
48909     +          +     1.02507111515379 * H1x3_6  +    -0.63211120065975 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -0.05290923023086 * H1x3_1 + -0.30472796298249 * H1x3_2 + 1.89100111779461 * H1x3_3 + 0.51110284119421 * H1x3_4 + -0.2014479939412 * H1x3_5 + 1.02507111515379 * H1x3_6 + -0.63211120065975 * H1x3_7 ;
48910     +   H2x2_1  =    -2.15023760884419 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.15023760884419 + H2x2_1 ;
48911     +   H2x2_2  =    -1.03542203438136 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.03542203438136 + H2x2_2 ;
48912     +   H2x2_3  =    -1.03202542428687 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.03202542428687 + H2x2_3 ;
48913     +   H2x2_4  =     0.79380822765375 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.79380822765375 + H2x2_4 ;
48914     +   H2x2_5  =    -0.37637686056399 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.37637686056399 + H2x2_5 ;
48915     +   H2x2_6  =    -0.12032383488066 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.12032383488066 + H2x2_6 ;
48916     +   H2x2_7  =     0.84544057856735 + H2x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.84544057856735 + H2x2_7 ;
48917     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
48918     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
48919     +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
48920     +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
48921     +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
48922     +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
48923     +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
48924     +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
48925     +   H2x2_7  = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_7 = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
48926     +END;
MPRINT(EM_DIAGRAM):   END;
48927     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
48928     +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
48929     +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
48930     +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
48931     +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
48932     +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
48933     +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
48934     +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
48935     +END;
MPRINT(EM_DIAGRAM):   END;
48936     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
48937     +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
48938     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
48939     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
48940     +   H3x1_1  =    -0.90634182479211 * H2x1_1  +    -0.09135307681655 * H2x1_2
48941     +          +     -1.1697186659188 * H2x1_3  +    -1.58089509972168 * H2x1_4
48942     +          +    -0.36298075828987 * H2x1_5  +     -0.1512750341775 * H2x1_6
48943     +          +    -0.95333639415651 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.90634182479211 * H2x1_1 + -0.09135307681655 * H2x1_2 + -1.1697186659188 * H2x1_3 + -1.58089509972168 * H2x1_4 + -0.36298075828987 * H2x1_5 + -0.1512750341775 * H2x1_6 + -0.95333639415651 * H2x1_7 ;
48944     +   H3x1_2  =     0.55686365647701 * H2x1_1  +      1.5696753982442 * H2x1_2
48945     +          +    -0.32250855602992 * H2x1_3  +     0.19455668370146 * H2x1_4
48946     +          +     0.44351097086868 * H2x1_5  +     0.27358852097745 * H2x1_6
48947     +          +      0.4281879736941 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.55686365647701 * H2x1_1 + 1.5696753982442 * H2x1_2 + -0.32250855602992 * H2x1_3 + 0.19455668370146 * H2x1_4 + 0.44351097086868 * H2x1_5 + 0.27358852097745 * H2x1_6 + 0.4281879736941 * H2x1_7 ;
48948     +   H3x1_3  =     0.12633341645489 * H2x1_1  +    -0.66899185238366 * H2x1_2
48949     +          +    -2.56536949854372 * H2x1_3  +    -1.44702955697377 * H2x1_4
48950     +          +    -2.12726548877297 * H2x1_5  +     0.98860110338896 * H2x1_6
48951     +          +    -1.81290069415788 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.12633341645489 * H2x1_1 + -0.66899185238366 * H2x1_2 + -2.56536949854372 * H2x1_3 + -1.44702955697377 * H2x1_4 + -2.12726548877297 * H2x1_5 + 0.98860110338896 * H2x1_6 + -1.81290069415788 * H2x1_7 ;
48952     +   H3x1_4  =     -1.5244883189849 * H2x1_1  +     -0.8795974458787 * H2x1_2
48953     +          +    -0.90961705850703 * H2x1_3  +    -0.41256891447907 * H2x1_4
48954     +          +    -1.55913982799805 * H2x1_5  +     -0.9171280329681 * H2x1_6
48955     +          +    -0.70506147827449 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.5244883189849 * H2x1_1 + -0.8795974458787 * H2x1_2 + -0.90961705850703 * H2x1_3 + -0.41256891447907 * H2x1_4 + -1.55913982799805 * H2x1_5 + -0.9171280329681 * H2x1_6 + -0.70506147827449 * H2x1_7 ;
48956     +   H3x1_5  =     0.35217616707387 * H2x1_1  +    -1.16700891298034 * H2x1_2
48957     +          +      0.5371834401358 * H2x1_3  +     2.90147333104132 * H2x1_4
48958     +          +     0.77800792666349 * H2x1_5  +     0.78250225671691 * H2x1_6
48959     +          +    -0.59091463760785 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.35217616707387 * H2x1_1 + -1.16700891298034 * H2x1_2 + 0.5371834401358 * H2x1_3 + 2.90147333104132 * H2x1_4 + 0.77800792666349 * H2x1_5 + 0.78250225671691 * H2x1_6 + -0.59091463760785 * H2x1_7 ;
48960     +   H3x1_6  =    -0.44929632444778 * H2x1_1  +    -0.78833736143978 * H2x1_2
48961     +          +    -2.25458905584756 * H2x1_3  +    -1.94571232358746 * H2x1_4
48962     +          +     1.80055450278469 * H2x1_5  +     1.56927477052283 * H2x1_6
48963     +          +     0.56206783006188 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.44929632444778 * H2x1_1 + -0.78833736143978 * H2x1_2 + -2.25458905584756 * H2x1_3 + -1.94571232358746 * H2x1_4 + 1.80055450278469 * H2x1_5 + 1.56927477052283 * H2x1_6 + 0.56206783006188 * H2x1_7 ;
48964     +   H3x1_1  = H3x1_1  +    -1.50414812258238 * H2x2_1
48965     +          +     2.71183535634521 * H2x2_2  +     0.92780495410356 * H2x2_3
48966     +          +     1.94819401410825 * H2x2_4  +     0.85505273909828 * H2x2_5
48967     +          +    -0.66540689026991 * H2x2_6  +    -0.32749055872531 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.50414812258238 * H2x2_1 + 2.71183535634521 * H2x2_2 + 0.92780495410356 * H2x2_3 + 1.94819401410825 * H2x2_4 + 0.85505273909828 * H2x2_5 + -0.66540689026991 * H2x2_6 + -0.32749055872531 * H2x2_7 ;
48968     +   H3x1_2  = H3x1_2  +     0.55540470737424 * H2x2_1
48969     +          +    -1.17598972209898 * H2x2_2  +    -0.16619065810258 * H2x2_3
48970     +          +    -0.58955298520043 * H2x2_4  +     1.04029871696373 * H2x2_5
48971     +          +    -0.71430896416332 * H2x2_6  +    -1.57031773170963 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.55540470737424 * H2x2_1 + -1.17598972209898 * H2x2_2 + -0.16619065810258 * H2x2_3 + -0.58955298520043 * H2x2_4 + 1.04029871696373 * H2x2_5 + -0.71430896416332 * H2x2_6 + -1.57031773170963 * H2x2_7 ;
48972     +   H3x1_3  = H3x1_3  +    -1.83796456414338 * H2x2_1
48973     +          +     1.49146311784803 * H2x2_2  +     0.05550989818961 * H2x2_3
48974     +          +    -0.08016006878981 * H2x2_4  +    -1.41328284571945 * H2x2_5
48975     +          +    -0.58920642563444 * H2x2_6  +     1.30950353008631 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -1.83796456414338 * H2x2_1 + 1.49146311784803 * H2x2_2 + 0.05550989818961 * H2x2_3 + -0.08016006878981 * H2x2_4 + -1.41328284571945 * H2x2_5 + -0.58920642563444 * H2x2_6 + 1.30950353008631 * H2x2_7 ;
48976     +   H3x1_4  = H3x1_4  +     0.91384399854626 * H2x2_1
48977     +          +     -0.0377841204978 * H2x2_2  +     0.67274196472005 * H2x2_3
48978     +          +     0.76900504900432 * H2x2_4  +     0.71823373480501 * H2x2_5
48979     +          +    -0.04199535362683 * H2x2_6  +    -0.23501610033448 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.91384399854626 * H2x2_1 + -0.0377841204978 * H2x2_2 + 0.67274196472005 * H2x2_3 + 0.76900504900432 * H2x2_4 + 0.71823373480501 * H2x2_5 + -0.04199535362683 * H2x2_6 + -0.23501610033448 * H2x2_7 ;
48980     +   H3x1_5  = H3x1_5  +    -0.06769558303335 * H2x2_1
48981     +          +    -0.95662890382057 * H2x2_2  +    -0.56314830579562 * H2x2_3
48982     +          +    -0.17355939108245 * H2x2_4  +     0.49684441057813 * H2x2_5
48983     +          +    -0.27220440010331 * H2x2_6  +     1.13747855812864 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.06769558303335 * H2x2_1 + -0.95662890382057 * H2x2_2 + -0.56314830579562 * H2x2_3 + -0.17355939108245 * H2x2_4 + 0.49684441057813 * H2x2_5 + -0.27220440010331 * H2x2_6 + 1.13747855812864 * H2x2_7 ;
48984     +   H3x1_6  = H3x1_6  +    -0.58306849781773 * H2x2_1
48985     +          +    -1.96921645645113 * H2x2_2  +     0.09529919260054 * H2x2_3
48986     +          +     1.84321935581989 * H2x2_4  +     1.90621049776113 * H2x2_5
48987     +          +     0.22735961476244 * H2x2_6  +      1.7681869270915 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.58306849781773 * H2x2_1 + -1.96921645645113 * H2x2_2 + 0.09529919260054 * H2x2_3 + 1.84321935581989 * H2x2_4 + 1.90621049776113 * H2x2_5 + 0.22735961476244 * H2x2_6 + 1.7681869270915 * H2x2_7 ;
48988     +   H3x1_1  =     0.84072071725045 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.84072071725045 + H3x1_1 ;
48989     +   H3x1_2  =    -0.84331420680493 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.84331420680493 + H3x1_2 ;
48990     +   H3x1_3  =    -1.15131491327763 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.15131491327763 + H3x1_3 ;
48991     +   H3x1_4  =    -0.56905094914727 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.56905094914727 + H3x1_4 ;
48992     +   H3x1_5  =     1.29747074025762 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.29747074025762 + H3x1_5 ;
48993     +   H3x1_6  =     1.70771922783336 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 1.70771922783336 + H3x1_6 ;
48994     +   H3x1_7  = 0;
MPRINT(EM_DIAGRAM):   H3x1_7 = 0;
48995     +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 , H3x1_7
48996     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 , H3x1_7 );
48997     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
48998     +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
48999     +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
49000     +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
49001     +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
49002     +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
49003     +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
49004     +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
49005     +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
49006     +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
49007     +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
49008     +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
49009     +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
49010     +   H3x1_7  = EXP(H3x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_7 = EXP(H3x1_7 - _MAX_);
49011     +   _SUM_ = _SUM_ + H3x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_7 ;
49012     +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
49013     +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
49014     +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
49015     +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
49016     +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
49017     +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
49018     +   H3x1_7  = H3x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 / _SUM_;
49019     +END;
MPRINT(EM_DIAGRAM):   END;
49020     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
49021     +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
49022     +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
49023     +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
49024     +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
49025     +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
49026     +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
49027     +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
49028     +END;
MPRINT(EM_DIAGRAM):   END;
49029     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49030     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
49031     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49032     +
49033     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
49034     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
49035     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
49036     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
49037     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
49038     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
49039     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
49040     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
49041     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
49042     +end;
MPRINT(EM_DIAGRAM):   end;
49043     +else do;
MPRINT(EM_DIAGRAM):   else do;
49044     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
49045     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
49046     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
49047     +   end;
MPRINT(EM_DIAGRAM):   end;
49048     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
49049     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
49050     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
49051     +   end;
MPRINT(EM_DIAGRAM):   end;
49052     +   else do;
MPRINT(EM_DIAGRAM):   else do;
49053     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
49054     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
49055     +   end;
MPRINT(EM_DIAGRAM):   end;
49056     +end;
MPRINT(EM_DIAGRAM):   end;
49057     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
49058     +   P_DepVar1  =    -10.5125772193731 * H3x1_1  +     0.35682915649078 * H3x1_2
49059     +          +    -0.04349805114958 * H3x1_3  +    -0.04491244667008 * H3x1_4
49060     +          +     34.5477259369591 * H3x1_5  +    -16.5063579573423 * H3x1_6
49061     +          +     0.83421675743806 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.5125772193731 * H3x1_1 + 0.35682915649078 * H3x1_2 + -0.04349805114958 * H3x1_3 + -0.04491244667008 * H3x1_4 + 34.5477259369591 * H3x1_5 + -16.5063579573423 * H3x1_6 + 0.83421675743806 * H3x1_7 ;
49062     +   P_DepVar1  =     6.85864742009761 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.85864742009761 + P_DepVar1 ;
49063     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
49064     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
49065     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
49066     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
49067     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
49068     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
49069     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
49070     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
49071     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
49072     +END;
MPRINT(EM_DIAGRAM):   END;
49073     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
49074     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
49075     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
49076     +END;
MPRINT(EM_DIAGRAM):   END;
49077     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
49078     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
49079     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
49080     +END;
MPRINT(EM_DIAGRAM):   END;
49081     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
49082     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
49083     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
49084     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
49085     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
49086     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
49087     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
49088     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49089     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
49090     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49091     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
49092     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
49093     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
49094     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
49095     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
49096     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
49097     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
49098     +END;
MPRINT(EM_DIAGRAM):   END;
49099     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
49100     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
49101     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
49102     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
49103     +* Renaming variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural43;
49104     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49105     +* Renaming Posterior variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural43;
49106     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49107     +drop AutoNeural43_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar1;
49108     +AutoNeural43_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar1 = P_DepVar1;
49109     +drop AutoNeural43_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar0;
49110     +AutoNeural43_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar0 = P_DepVar0;
49111     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49112     +* Renaming _WARN_ variable for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural43;
49113     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49114     +length AutoNeural43_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural43_WARN_ $4;
49115     +drop AutoNeural43_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_WARN_;
49116     +AutoNeural43_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural43_WARN_ = _WARN_;
49117     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49118     +* Ensmbl57: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Scoring Code of model 7 of 7;
49119     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49120     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49121     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
49122     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
49123     +* NODE: AutoNeural46;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural46;
49124     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49125     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
49126     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
49127     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
49128     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
49129     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
49130     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
49131     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
49132     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
49133     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
49134     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
49135     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
49136     +LENGTH _WARN_ $4
49137     +      F_DepVar  $ 12
49138     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
49139     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
49140     +
49141     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
49142     +
49143     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
49144     +
49145     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
49146     +
49147     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
49148     +
49149     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
49150     +
49151     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
49152     +
49153     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
49154     +
49155     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
49156     +
49157     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
49158     +
49159     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
49160     +
49161     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
49162     +
49163     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
49164     +
49165     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
49166     +
49167     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
49168     +
49169     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
49170     +
49171     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
49172     +
49173     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
49174     +
49175     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
49176     +
49177     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
49178     +
49179     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
49180     +
49181     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
49182     +
49183     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
49184     +
49185     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
49186     +
49187     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
49188     +
49189     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
49190     +
49191     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
49192     +
49193     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
49194     +
49195     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
49196     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
49197     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
49198     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
49199     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
49200     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
49201     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
49202     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
49203     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
49204     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
49205     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
49206     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
49207     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
49208     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
49209     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
49210     +end;
MPRINT(EM_DIAGRAM):   end;
49211     +else do;
MPRINT(EM_DIAGRAM):   else do;
49212     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
49213     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
49214     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
49215     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
49216     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
49217     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
49218     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
49219     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
49220     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
49221     +         end;
MPRINT(EM_DIAGRAM):   end;
49222     +         else do;
MPRINT(EM_DIAGRAM):   else do;
49223     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
49224     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
49225     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
49226     +            end;
MPRINT(EM_DIAGRAM):   end;
49227     +         end;
MPRINT(EM_DIAGRAM):   end;
49228     +      end;
MPRINT(EM_DIAGRAM):   end;
49229     +      else do;
MPRINT(EM_DIAGRAM):   else do;
49230     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
49231     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
49232     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
49233     +         end;
MPRINT(EM_DIAGRAM):   end;
49234     +      end;
MPRINT(EM_DIAGRAM):   end;
49235     +   end;
MPRINT(EM_DIAGRAM):   end;
49236     +   else do;
MPRINT(EM_DIAGRAM):   else do;
49237     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
49238     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
49239     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
49240     +      end;
MPRINT(EM_DIAGRAM):   end;
49241     +      else do;
MPRINT(EM_DIAGRAM):   else do;
49242     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
49243     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
49244     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
49245     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
49246     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
49247     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
49248     +         end;
MPRINT(EM_DIAGRAM):   end;
49249     +      end;
MPRINT(EM_DIAGRAM):   end;
49250     +   end;
MPRINT(EM_DIAGRAM):   end;
49251     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
49252     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
49253     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
49254     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
49255     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
49256     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
49257     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
49258     +   end;
MPRINT(EM_DIAGRAM):   end;
49259     +end;
MPRINT(EM_DIAGRAM):   end;
49260     +
49261     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49262     +*** Checking missing input Interval
49263     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
49264     +
49265     +IF NMISS(
49266     +   AcceptedCmpTotal ,
49267     +   Frq ,
49268     +   Income ,
49269     +   Mnt ,
49270     +   MntGoldProds ,
49271     +   MntMeatProducts ,
49272     +   NumCatalogPurchases ,
49273     +   NumDealsPurchases ,
49274     +   NumWebVisitsMonth ,
49275     +   RFMstat ,
49276     +   Recency ,
49277     +   Teenhome ,
49278     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , Recency , Teenhome , Year_Birth ) THEN DO;
49279     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
49280     +
49281     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
49282     +END;
MPRINT(EM_DIAGRAM):   END;
49283     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49284     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
49285     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49286     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
49287     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
49288     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
49289     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
49290     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
49291     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
49292     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
49293     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
49294     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
49295     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
49296     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
49297     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
49298     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
49299     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
49300     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
49301     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
49302     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
49303     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
49304     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
49305     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
49306     +END;
MPRINT(EM_DIAGRAM):   END;
49307     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
49308     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
49309     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
49310     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
49311     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
49312     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
49313     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
49314     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
49315     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
49316     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
49317     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
49318     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
49319     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
49320     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
49321     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
49322     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
49323     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
49324     +   ELSE S_NumCatalogPurchases
49325     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
49326     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
49327     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
49328     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
49329     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
49330     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
49331     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
49332     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
49333     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
49334     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
49335     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
49336     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
49337     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
49338     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
49339     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
49340     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
49341     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
49342     +END;
MPRINT(EM_DIAGRAM):   END;
49343     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49344     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
49345     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49346     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49347     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
49348     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49349     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
49350     +   H1x1_1  =    -0.10743056275421 * S_AcceptedCmpTotal
49351     +          +     0.03409888241348 * S_Frq  +    -0.00055974837068 * S_Income
49352     +          +       0.134341851096 * S_Mnt  +    -0.00857864409164 *
49353     +        S_MntGoldProds  +      0.4895390061827 * S_MntMeatProducts
49354     +          +    -0.01423451356563 * S_NumCatalogPurchases
49355     +          +     0.06006350655487 * S_NumDealsPurchases
49356     +          +    -0.20885493964335 * S_NumWebVisitsMonth
49357     +          +    -0.01173202621744 * S_RFMstat  +     0.25819909101611 *
49358     +        S_Recency  +    -0.03326479668652 * S_Teenhome
49359     +          +     0.03371888312814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.10743056275421 * S_AcceptedCmpTotal + 0.03409888241348 * S_Frq + -0.00055974837068 * S_Income + 0.134341851096 * S_Mnt + -0.00857864409164 * S_MntGoldProds + 0.4895390061827 * S_MntMeatProducts + -0.01423451356563 * 
S_NumCatalogPurchases + 0.06006350655487 * S_NumDealsPurchases + -0.20885493964335 * S_NumWebVisitsMonth + -0.01173202621744 * S_RFMstat + 0.25819909101611 * S_Recency + -0.03326479668652 * S_Teenhome + 0.03371888312814 * S_Year_Birth ;
49360     +   H1x1_2  =    -0.03078478134042 * S_AcceptedCmpTotal
49361     +          +    -0.12351766308972 * S_Frq  +     -0.1943406821731 * S_Income
49362     +          +    -0.36027326127049 * S_Mnt  +     0.05117597516658 *
49363     +        S_MntGoldProds  +     0.07931191953223 * S_MntMeatProducts
49364     +          +    -0.03109266966794 * S_NumCatalogPurchases
49365     +          +     0.05524435494328 * S_NumDealsPurchases
49366     +          +     -0.0105802056898 * S_NumWebVisitsMonth
49367     +          +     0.01793771049002 * S_RFMstat  +      0.0322880575902 *
49368     +        S_Recency  +       0.195010707702 * S_Teenhome
49369     +          +     -0.0351563039686 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03078478134042 * S_AcceptedCmpTotal + -0.12351766308972 * S_Frq + -0.1943406821731 * S_Income + -0.36027326127049 * S_Mnt + 0.05117597516658 * S_MntGoldProds + 0.07931191953223 * S_MntMeatProducts + -0.03109266966794 * 
S_NumCatalogPurchases + 0.05524435494328 * S_NumDealsPurchases + -0.0105802056898 * S_NumWebVisitsMonth + 0.01793771049002 * S_RFMstat + 0.0322880575902 * S_Recency + 0.195010707702 * S_Teenhome + -0.0351563039686 * S_Year_Birth ;
49370     +   H1x1_3  =     0.23990987498311 * S_AcceptedCmpTotal
49371     +          +     0.04052411845464 * S_Frq  +    -0.00302331972067 * S_Income
49372     +          +     0.39981531247427 * S_Mnt  +     0.01433011413993 *
49373     +        S_MntGoldProds  +    -0.19955782687502 * S_MntMeatProducts
49374     +          +     0.07777995109144 * S_NumCatalogPurchases
49375     +          +     0.08683394019767 * S_NumDealsPurchases
49376     +          +     0.27328366433987 * S_NumWebVisitsMonth
49377     +          +      0.0263930429288 * S_RFMstat  +    -0.38900647412136 *
49378     +        S_Recency  +      0.0640153287908 * S_Teenhome
49379     +          +     0.07587467002123 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.23990987498311 * S_AcceptedCmpTotal + 0.04052411845464 * S_Frq + -0.00302331972067 * S_Income + 0.39981531247427 * S_Mnt + 0.01433011413993 * S_MntGoldProds + -0.19955782687502 * S_MntMeatProducts + 0.07777995109144 * 
S_NumCatalogPurchases + 0.08683394019767 * S_NumDealsPurchases + 0.27328366433987 * S_NumWebVisitsMonth + 0.0263930429288 * S_RFMstat + -0.38900647412136 * S_Recency + 0.0640153287908 * S_Teenhome + 0.07587467002123 * S_Year_Birth ;
49380     +   H1x1_1  = H1x1_1  +    -0.05820552608682 * Marital_StatusDivorced
49381     +          +    -0.02695167777393 * Marital_StatusMarried
49382     +          +    -0.00733864032764 * Marital_StatusSingle
49383     +          +     0.03838747494293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.05820552608682 * Marital_StatusDivorced + -0.02695167777393 * Marital_StatusMarried + -0.00733864032764 * Marital_StatusSingle + 0.03838747494293 * Marital_StatusTogether ;
49384     +   H1x1_2  = H1x1_2  +    -0.00853551919442 * Marital_StatusDivorced
49385     +          +     0.42249671001117 * Marital_StatusMarried
49386     +          +    -0.18515416581955 * Marital_StatusSingle
49387     +          +     0.25783473520826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.00853551919442 * Marital_StatusDivorced + 0.42249671001117 * Marital_StatusMarried + -0.18515416581955 * Marital_StatusSingle + 0.25783473520826 * Marital_StatusTogether ;
49388     +   H1x1_3  = H1x1_3  +      0.4175036565076 * Marital_StatusDivorced
49389     +          +     0.45127582934777 * Marital_StatusMarried
49390     +          +       0.358157766485 * Marital_StatusSingle
49391     +          +     0.42627185625497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.4175036565076 * Marital_StatusDivorced + 0.45127582934777 * Marital_StatusMarried + 0.358157766485 * Marital_StatusSingle + 0.42627185625497 * Marital_StatusTogether ;
49392     +   H1x1_1  =    -1.23226472635566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.23226472635566 + H1x1_1 ;
49393     +   H1x1_2  =      2.2313165328971 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.2313165328971 + H1x1_2 ;
49394     +   H1x1_3  =     0.09755782095138 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.09755782095138 + H1x1_3 ;
49395     +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
49396     +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
49397     +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
49398     +END;
MPRINT(EM_DIAGRAM):   END;
49399     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
49400     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
49401     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
49402     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
49403     +END;
MPRINT(EM_DIAGRAM):   END;
49404     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49405     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
49406     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49407     +
49408     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
49409     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
49410     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
49411     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
49412     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
49413     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
49414     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
49415     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
49416     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
49417     +end;
MPRINT(EM_DIAGRAM):   end;
49418     +else do;
MPRINT(EM_DIAGRAM):   else do;
49419     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
49420     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
49421     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
49422     +   end;
MPRINT(EM_DIAGRAM):   end;
49423     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
49424     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
49425     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
49426     +   end;
MPRINT(EM_DIAGRAM):   end;
49427     +   else do;
MPRINT(EM_DIAGRAM):   else do;
49428     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
49429     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
49430     +   end;
MPRINT(EM_DIAGRAM):   end;
49431     +end;
MPRINT(EM_DIAGRAM):   end;
49432     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
49433     +   P_DepVar1  =     -68.075125441494 * H1x1_1  +    -72.7630361672259 * H1x1_2
49434     +          +    -71.6251597703755 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -68.075125441494 * H1x1_1 + -72.7630361672259 * H1x1_2 + -71.6251597703755 * H1x1_3 ;
49435     +   P_DepVar1  =    -25.6080957302662 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -25.6080957302662 + P_DepVar1 ;
49436     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
49437     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
49438     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
49439     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
49440     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
49441     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
49442     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
49443     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
49444     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
49445     +END;
MPRINT(EM_DIAGRAM):   END;
49446     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
49447     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
49448     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
49449     +END;
MPRINT(EM_DIAGRAM):   END;
49450     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
49451     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
49452     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
49453     +END;
MPRINT(EM_DIAGRAM):   END;
49454     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
49455     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
49456     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
49457     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
49458     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
49459     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
49460     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
49461     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49462     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
49463     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49464     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
49465     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
49466     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
49467     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
49468     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
49469     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
49470     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
49471     +END;
MPRINT(EM_DIAGRAM):   END;
49472     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
49473     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
49474     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
49475     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
49476     +* Renaming variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural46;
49477     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49478     +* Renaming Posterior variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural46;
49479     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49480     +drop AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar1;
49481     +AutoNeural46_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar1 = P_DepVar1;
49482     +drop AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar0;
49483     +AutoNeural46_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar0 = P_DepVar0;
49484     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49485     +* Renaming _WARN_ variable for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural46;
49486     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49487     +length AutoNeural46_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural46_WARN_ $4;
49488     +drop AutoNeural46_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_WARN_;
49489     +AutoNeural46_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural46_WARN_ = _WARN_;
49490     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49491     +* Ensmbl57: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Average Posteriors of 7 models;
49492     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49493     +P_DepVar1 = (
49494     +AutoNeural44_P_DepVar1 +
49495     +AutoNeural45_P_DepVar1 +
49496     +AutoNeural47_P_DepVar1 +
49497     +AutoNeural41_P_DepVar1 +
49498     +AutoNeural42_P_DepVar1 +
49499     +AutoNeural43_P_DepVar1 +
49500     +AutoNeural46_P_DepVar1
49501     +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural44_P_DepVar1 + AutoNeural45_P_DepVar1 + AutoNeural47_P_DepVar1 + AutoNeural41_P_DepVar1 + AutoNeural42_P_DepVar1 + AutoNeural43_P_DepVar1 + AutoNeural46_P_DepVar1 )/7;
49502     +P_DepVar0 = (
49503     +AutoNeural44_P_DepVar0 +
49504     +AutoNeural45_P_DepVar0 +
49505     +AutoNeural47_P_DepVar0 +
49506     +AutoNeural41_P_DepVar0 +
49507     +AutoNeural42_P_DepVar0 +
49508     +AutoNeural43_P_DepVar0 +
49509     +AutoNeural46_P_DepVar0
49510     +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural44_P_DepVar0 + AutoNeural45_P_DepVar0 + AutoNeural47_P_DepVar0 + AutoNeural41_P_DepVar0 + AutoNeural42_P_DepVar0 + AutoNeural43_P_DepVar0 + AutoNeural46_P_DepVar0 )/7;
49511     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49512     +* Ensmbl57: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Computing Classification Vars;
49513     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49514     +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. Use the LENGTH statement as the very first statement in the DATA STEP to declare the length of a character variable.
49515     +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
49516     +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
49517     +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
49518     +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
49519     +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
49520     +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
49521     +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
49522     +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
49523     +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
49524     +end;
MPRINT(EM_DIAGRAM):   end;
49525     +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
49526     +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
49527     +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
49528     +end;
MPRINT(EM_DIAGRAM):   end;
49529     +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
49530     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49531     +* Ensmbl57: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Producing Unformatted variable;
49532     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49533     +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
49534     +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
49535     +else
49536     +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
49537     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49538     +* Ensmbl57: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Computing _WARN_ Variable;
49539     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49540     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
49541     +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
49542     +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
49543     +if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
49544     +if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
49545     +if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
49546     +if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
49547     +if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
49548     +if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
49549     +if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
49550     +if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
49551     +if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
49552     +if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
49553     +if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
49554     +if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
49555     +if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
49556     +if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
49557     +if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
49558     +if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
49559     +if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
49560     +if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
49561     +if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
49562     +if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
49563     +if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
49564     +if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
49565     +if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
49566     +if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
49567     +if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
49568     +if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
49569     +if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
49570     +if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
49571     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49572     +* Ensmbl57: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Computing Residual Vars;
49573     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49574     +if
49575     +F_DepVar NE '1'
49576     +AND F_DepVar NE '0'
49577     +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
49578     +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
49579     +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
49580     +end;
MPRINT(EM_DIAGRAM):   end;
49581     +else do;
MPRINT(EM_DIAGRAM):   else do;
49582     +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
49583     +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
49584     +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
49585     +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
49586     +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
49587     +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
49588     +END;
MPRINT(EM_DIAGRAM):   END;
49589     +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
49590      run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL57_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL44_VALIDATE.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      

MPRINT(EM_DIAGRAM):   quit;
49591      quit;
49592      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl57_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" _DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong 
Classifications" _DISF_= "Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ _RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl57_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl57_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" _DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong 
Classifications" _DISF_= "Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ _RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl57_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl57_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
49652      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMPUBLISHSCORE.sas";
49653      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
49654      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMPUBLISHSCORE.sas.
49655     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
49656     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
49657     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
49658     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
49659     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
49660     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
49661     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
49662     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
49663     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
49664     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
49665     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
49666     +LENGTH _WARN_ $4
49667     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
49668     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
49669     +
49670     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
49671     +
49672     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
49673     +
49674     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
49675     +
49676     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
49677     +
49678     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
49679     +
49680     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
49681     +
49682     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
49683     +
49684     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
49685     +
49686     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
49687     +
49688     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
49689     +
49690     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
49691     +
49692     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
49693     +
49694     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
49695     +
49696     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
49697     +
49698     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
49699     +
49700     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
49701     +
49702     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
49703     +
49704     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
49705     +
49706     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
49707     +
49708     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
49709     +
49710     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
49711     +
49712     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
49713     +
49714     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
49715     +
49716     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
49717     +
49718     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
49719     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
49720     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
49721     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
49722     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
49723     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
49724     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
49725     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
49726     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
49727     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
49728     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
49729     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
49730     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
49731     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
49732     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
49733     +end;
MPRINT(EM_DIAGRAM):   end;
49734     +else do;
MPRINT(EM_DIAGRAM):   else do;
49735     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
49736     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
49737     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
49738     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
49739     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
49740     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
49741     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
49742     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
49743     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
49744     +         end;
MPRINT(EM_DIAGRAM):   end;
49745     +         else do;
MPRINT(EM_DIAGRAM):   else do;
49746     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
49747     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
49748     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
49749     +            end;
MPRINT(EM_DIAGRAM):   end;
49750     +         end;
MPRINT(EM_DIAGRAM):   end;
49751     +      end;
MPRINT(EM_DIAGRAM):   end;
49752     +      else do;
MPRINT(EM_DIAGRAM):   else do;
49753     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
49754     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
49755     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
49756     +         end;
MPRINT(EM_DIAGRAM):   end;
49757     +      end;
MPRINT(EM_DIAGRAM):   end;
49758     +   end;
MPRINT(EM_DIAGRAM):   end;
49759     +   else do;
MPRINT(EM_DIAGRAM):   else do;
49760     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
49761     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
49762     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
49763     +      end;
MPRINT(EM_DIAGRAM):   end;
49764     +      else do;
MPRINT(EM_DIAGRAM):   else do;
49765     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
49766     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
49767     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
49768     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
49769     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
49770     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
49771     +         end;
MPRINT(EM_DIAGRAM):   end;
49772     +      end;
MPRINT(EM_DIAGRAM):   end;
49773     +   end;
MPRINT(EM_DIAGRAM):   end;
49774     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
49775     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
49776     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
49777     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
49778     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
49779     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
49780     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
49781     +   end;
MPRINT(EM_DIAGRAM):   end;
49782     +end;
MPRINT(EM_DIAGRAM):   end;
49783     +
49784     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49785     +*** Checking missing input Interval
49786     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
49787     +
49788     +IF NMISS(
49789     +   AcceptedCmpTotal ,
49790     +   Frq ,
49791     +   Income ,
49792     +   Mnt ,
49793     +   MntGoldProds ,
49794     +   MntMeatProducts ,
49795     +   NumCatalogPurchases ,
49796     +   NumDealsPurchases ,
49797     +   NumWebVisitsMonth ,
49798     +   RFMstat ,
49799     +   Recency ,
49800     +   Teenhome ,
49801     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , Recency , Teenhome , Year_Birth ) THEN DO;
49802     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
49803     +
49804     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
49805     +END;
MPRINT(EM_DIAGRAM):   END;
49806     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49807     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
49808     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49809     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
49810     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
49811     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
49812     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
49813     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
49814     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
49815     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
49816     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
49817     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
49818     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
49819     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
49820     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
49821     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
49822     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
49823     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
49824     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
49825     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
49826     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
49827     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
49828     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
49829     +END;
MPRINT(EM_DIAGRAM):   END;
49830     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
49831     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
49832     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
49833     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
49834     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
49835     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
49836     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
49837     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
49838     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
49839     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
49840     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
49841     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
49842     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
49843     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
49844     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
49845     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
49846     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
49847     +   ELSE S_NumCatalogPurchases
49848     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
49849     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
49850     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
49851     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
49852     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
49853     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
49854     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
49855     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
49856     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
49857     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
49858     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
49859     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
49860     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
49861     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
49862     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
49863     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
49864     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
49865     +END;
MPRINT(EM_DIAGRAM):   END;
49866     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49867     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
49868     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49869     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49870     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
49871     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49872     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
49873     +   H1x1_1  =    -0.12469827057082 * S_AcceptedCmpTotal
49874     +          +      3.1876739677725 * S_Frq  +     0.13471808395353 * S_Income
49875     +          +    -0.55590218871332 * S_Mnt  +     0.49013595544334 *
49876     +        S_MntGoldProds  +    -8.24401774301659 * S_MntMeatProducts
49877     +          +    -1.41682724778123 * S_NumCatalogPurchases
49878     +          +    -0.81806751697478 * S_NumDealsPurchases
49879     +          +     0.13721060582485 * S_NumWebVisitsMonth
49880     +          +     -0.8599103465088 * S_RFMstat  +    -0.11788382213726 *
49881     +        S_Recency  +    -0.11154618858027 * S_Teenhome
49882     +          +    -0.09280870729016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.12469827057082 * S_AcceptedCmpTotal + 3.1876739677725 * S_Frq + 0.13471808395353 * S_Income + -0.55590218871332 * S_Mnt + 0.49013595544334 * S_MntGoldProds + -8.24401774301659 * S_MntMeatProducts + -1.41682724778123 * 
S_NumCatalogPurchases + -0.81806751697478 * S_NumDealsPurchases + 0.13721060582485 * S_NumWebVisitsMonth + -0.8599103465088 * S_RFMstat + -0.11788382213726 * S_Recency + -0.11154618858027 * S_Teenhome + -0.09280870729016 * S_Year_Birth ;
49883     +   H1x1_1  = H1x1_1  +     0.34960218424017 * Marital_StatusDivorced
49884     +          +    -0.42475372885131 * Marital_StatusMarried
49885     +          +     0.12884500504295 * Marital_StatusSingle
49886     +          +    -0.15810267147538 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.34960218424017 * Marital_StatusDivorced + -0.42475372885131 * Marital_StatusMarried + 0.12884500504295 * Marital_StatusSingle + -0.15810267147538 * Marital_StatusTogether ;
49887     +   H1x1_1  =    -5.00010358329252 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -5.00010358329252 + H1x1_1 ;
49888     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
49889     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
49890     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
49891     +END;
MPRINT(EM_DIAGRAM):   END;
49892     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
49893     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
49894     +END;
MPRINT(EM_DIAGRAM):   END;
49895     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49896     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
49897     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49898     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
49899     +   H1x2_1  =    -0.55977918187183 * S_AcceptedCmpTotal
49900     +          +     3.80877597264064 * S_Frq  +       0.740665099365 * S_Income
49901     +          +      1.2189502767856 * S_Mnt  +    -0.64069435073077 *
49902     +        S_MntGoldProds  +    -1.20953450523092 * S_MntMeatProducts
49903     +          +    -1.27566927607767 * S_NumCatalogPurchases
49904     +          +    -0.30700705450077 * S_NumDealsPurchases
49905     +          +    -1.10002183072059 * S_NumWebVisitsMonth
49906     +          +    -0.17115220906364 * S_RFMstat  +     0.98456522108133 *
49907     +        S_Recency  +    -0.46996209026516 * S_Teenhome
49908     +          +     0.11522881334392 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.55977918187183 * S_AcceptedCmpTotal + 3.80877597264064 * S_Frq + 0.740665099365 * S_Income + 1.2189502767856 * S_Mnt + -0.64069435073077 * S_MntGoldProds + -1.20953450523092 * S_MntMeatProducts + -1.27566927607767 * 
S_NumCatalogPurchases + -0.30700705450077 * S_NumDealsPurchases + -1.10002183072059 * S_NumWebVisitsMonth + -0.17115220906364 * S_RFMstat + 0.98456522108133 * S_Recency + -0.46996209026516 * S_Teenhome + 0.11522881334392 * S_Year_Birth ;
49909     +   H1x2_1  = H1x2_1  +    -0.23272680240317 * Marital_StatusDivorced
49910     +          +    -0.32389187879499 * Marital_StatusMarried
49911     +          +     0.77856411154011 * Marital_StatusSingle
49912     +          +    -0.63289071596123 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.23272680240317 * Marital_StatusDivorced + -0.32389187879499 * Marital_StatusMarried + 0.77856411154011 * Marital_StatusSingle + -0.63289071596123 * Marital_StatusTogether ;
49913     +   H1x2_1  =     3.21350083886443 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 3.21350083886443 + H1x2_1 ;
49914     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
49915     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
49916     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
49917     +END;
MPRINT(EM_DIAGRAM):   END;
49918     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
49919     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
49920     +END;
MPRINT(EM_DIAGRAM):   END;
49921     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49922     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
49923     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49924     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
49925     +   H2x1_1  =    -7.90353913070205 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -7.90353913070205 * H1x1_1 ;
49926     +   H2x1_1  = H2x1_1  +     -3.6151322253591 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -3.6151322253591 * H1x2_1 ;
49927     +   H2x1_1  =     2.06123756742001 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 2.06123756742001 + H2x1_1 ;
49928     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
49929     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
49930     +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
49931     +END;
MPRINT(EM_DIAGRAM):   END;
49932     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
49933     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
49934     +END;
MPRINT(EM_DIAGRAM):   END;
49935     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49936     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
49937     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49938     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
49939     +   P_DepVar1  =     23.6383607789635 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 23.6383607789635 * H2x1_1 ;
49940     +   P_DepVar1  =    -12.8845549880418 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.8845549880418 + P_DepVar1 ;
49941     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
49942     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
49943     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
49944     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
49945     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
49946     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
49947     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
49948     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
49949     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
49950     +END;
MPRINT(EM_DIAGRAM):   END;
49951     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
49952     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
49953     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
49954     +END;
MPRINT(EM_DIAGRAM):   END;
49955     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
49956     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
49957     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
49958     +END;
MPRINT(EM_DIAGRAM):   END;
49959     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49960     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
49961     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
49962     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
49963     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
49964     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
49965     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
49966     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
49967     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
49968     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
49969     +END;
MPRINT(EM_DIAGRAM):   END;
49970     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
49971     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
49972     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
49973     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
49974      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
49975      quit;
49976      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
49977      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
49978      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
49979      retain ID 2 Node "AutoNeural44";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural44";
49980      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
49981      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 997 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 997 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

49982      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
49983      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
49984      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 997 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 997 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

49985      proc sort data=EMWS8.AutoNeural44_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural44_variableset out=_temp2(keep=NAME CREATOR);
49986      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
49987      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL44_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

49988      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
49989      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
49990      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
49991      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

49992      proc contents data=EMWS8.AutoNeural44_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural44_train out=_meta(keep=NAME) noprint;
49993      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

49994      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
49995      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
49996      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

49997      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
49998      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
49999      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50000      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50001      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
50002      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 514 rows and 5 columns.

50003      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50004      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
50005      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 514 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 514 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50006      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
50007      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
50008      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
50009     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
50010     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
50011     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
50012     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
50013     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
50014     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
50015      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
50016      quit;
50017      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
50018      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
50019      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
50020      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
50021      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
50022      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

50023      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
50024      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50025      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50026      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
50027      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50028      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50029      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
50030      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
50031      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
50032      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50033      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
50034      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

50035      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
50036      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50037      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50038      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
50039      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
50040      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50041      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

50042      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
50043      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

50044      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50045      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
50046      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 518 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50047      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
50048      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
50049      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
50050     +
50051     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
50052     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
MPRINT(EM_DIAGRAM):   Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
50053     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
50054     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
50055     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
50056     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
50057     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
50058      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
50059      quit;
50060      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
50061      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
50062      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
50063      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
50064      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
50065      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50066      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
50067      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50068      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50069      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
50070      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50071      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

50072      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
50073      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
50074      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
50075      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50076      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
50077      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50078      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
50079      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50080      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

50081      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
50082      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
50083      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50084      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50085      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
50086      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

50087      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50088      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
50089      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 557 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50090      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
50091      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
50092      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
50093     +
50094     +
50095     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
50096     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
50097     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
50098     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
50099     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
50100     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
50101     +
50102     +
50103     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
50104     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
50105     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
50106     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
50107     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
50108     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
50109     +
50110     +
50111     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
50112     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
50113     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
50114     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
50115     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
50116     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
50117     +
50118     +
50119     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
50120     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
50121     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
50122     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
50123     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
50124     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
50125     +
50126     +
50127     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
50128     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
50129     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
50130     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
50131     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
50132     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
50133     +
50134     +
50135     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
50136     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
50137     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
50138     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
50139     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
50140     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
50141     +
50142     +
50143     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
50144     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
50145     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
50146     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
50147     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
50148     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
50149     +
50150     +
50151     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
50152     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
50153     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
50154     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
50155     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
50156     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
50157     +if
50158     +_FILTERNORM1 not in ( '.')
50159     + and
50160     +_FILTERNORM2 not in ( '.')
50161     + and
50162     +_FILTERNORM3 not in ( '.')
50163     + and
50164     +_FILTERNORM4 not in ( '.')
50165     + and
50166     +_FILTERNORM5 not in ( '.')
50167     + and
50168     +_FILTERNORM6 not in ( '.')
50169     + and
50170     +_FILTERNORM7 not in ( ' ')
50171     + and
50172     +_FILTERNORM8 not in ( ' ')
50173     +and
50174     +( Dt_Customer ne .)
50175     +and ( Income ne . and (Income<=107000))
50176     +and ( Kidhome ne .)
50177     +and ( MntFishProducts ne .)
50178     +and ( MntFruits ne .)
50179     +and ( MntGoldProds ne .)
50180     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
50181     +and ( MntSweetProducts ne .)
50182     +and ( MntWines ne .)
50183     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
50184     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
50185     +and ( NumStorePurchases ne .)
50186     +and ( NumWebPurchases ne .)
50187     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
50188     +and ( Recency ne .)
50189     +and ( Teenhome ne .)
50190     +and ( Year_Birth ne .)
50191     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and _FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and _FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 
not in ( ' ') and ( Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne . and (MntMeatProducts<=964)) and ( MntSweetProducts ne 
.) and ( MntWines ne .) and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( NumWebVisitsMonth ne . and 
(NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne .) and ( Year_Birth ne .) then do;
50192     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
50193     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
50194     +end;
MPRINT(EM_DIAGRAM):   end;
50195     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
50196     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
50197      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
50198      quit;
50199      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
50200      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
50201      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
50202      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
50203      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
50204      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

50205      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
50206      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50207      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50208      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
50209      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50210      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50211      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
50212      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
50213      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
50214      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

50215      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
50216      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

50217      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
50218      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50219      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50220      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
50221      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
50222      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50223      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50224      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
50225      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

50226      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50227      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
50228      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 623 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50229      %macro varDept(fcmpdata=,id=);
50230      %global nobs&id scoreFlag&id;
50231      %let scoreFlag&id = 0;
50232      %if &id=1 or ^&fcmpStart %then %do;
50233      proc sort data=&fcmpdata out=_temp&id nodupkey;
50234      by NAME;
50235      where id=&id and LHS in( %let j=1;
50236      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
50237      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
50238      "&var" %let j = %eval(&j+1);
50239      %end;
50240      );
50241      run;
50242      %let dsid = %sysfunc(open(_temp&id));
50243      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
50244      %let dsid = %sysfunc(close(&dsid));
50245      %if &&nobs&id %then %do;
50246      %let scoreFlag&id = 1;
50247      %let fcmpStart = 1;
50248      %end;
50249      %else %let fcmpStart = 0;
50250      %end;
50251      %else %do;
50252      proc sort data=&fcmpdata out=_tempid;
50253      where id=&id;
50254      by LHS;
50255      run;
50256      %let dsid = %sysfunc(open(_tempid));
50257      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
50258      %let dsid = %sysfunc(close(&dsid));
50259      %if ^&&nobs&id %then %do;
50260      proc datasets lib=work nolist;
50261      delete _tempid;
50262      run;
50263      quit;
50264      %end;
50265      %else %do;
50266      data _tempAll;
50267      set %let j=%eval(&id-1);
50268      %do x=1 %to &j;
50269      %if &&nobs&x %then %do;
50270      _temp&x %end;
50271      %end;
50272      ;
50273      run;
50274      proc sql;
50275      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
50276      quit;
50277      data _temp&id;
50278      set _temp&id;
50279      where LHS ne '' and NAME ne '' and Node ne '';
50280      run;
50281      proc datasets lib=work nolist;
50282      delete _tempAll;
50283      run;
50284      %let dsid = %sysfunc(open(_temp&id));
50285      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
50286      %let dsid = %sysfunc(close(&dsid));
50287      %if ^&&nobs&id %then %do;
50288      proc datasets lib=work nolist;
50289      delete _temp&id;
50290      run;
50291      quit;
50292      %end;
50293      %else %do;
50294      %let scoreFlag&id = 1;
50295      data _temp&id;
50296      set _temp&id;
50297      where LHS ne NAME and node ne '';
50298      run;
50299      %let dsid = %sysfunc(open(_temp&id));
50300      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
50301      %let dsid = %sysfunc(close(&dsid));
50302      %if ^&&nobs&id %then %do;
50303      proc datasets lib=work nolist;
50304      delete _temp&id;
50305      run;
50306      quit;
50307      %end;
50308      %else %do;
50309      proc sort data=_temp&id nodupkey;
50310      by LHS NAME;
50311      run;
50312      %end;
50313      %end;
50314      %end;
50315      %end;
50316      %mend varDept;
50317      %macro optCode(outdata=fcmpdata);
50318      %global fcmpStart;
50319      %let fcmpStart = 0;
50320      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
50321      %let NumNodes=9;
50322      %do k=1 %to &NumNodes;
50323      %vardept(fcmpdata=&outdata, id=&k);
50324      %end;
50325      %mend optCode;
50326      %optcode(outData=EMWS8.Ensmbl57_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 71 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 52 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 19 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 19 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 19 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 45 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

50327      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMPUBLISHSCORE.sas";
50328      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
50329      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMPUBLISHSCORE.sas.
50330     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
50331     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
50332     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
50333     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
50334     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
50335     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
50336     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
50337     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
50338     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
50339     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
50340     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
50341     +LENGTH _WARN_ $4
50342     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
50343     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
50344     +
50345     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
50346     +
50347     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
50348     +
50349     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
50350     +
50351     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
50352     +
50353     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
50354     +
50355     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
50356     +
50357     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
50358     +
50359     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
50360     +
50361     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
50362     +
50363     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
50364     +
50365     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
50366     +
50367     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
50368     +
50369     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
50370     +
50371     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
50372     +
50373     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
50374     +
50375     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
50376     +
50377     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
50378     +
50379     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
50380     +
50381     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
50382     +
50383     +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
50384     +
50385     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
50386     +
50387     +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
50388     +
50389     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
50390     +
50391     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
50392     +
50393     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
50394     +
50395     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
50396     +
50397     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
50398     +
50399     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
50400     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
50401     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
50402     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
50403     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
50404     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
50405     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
50406     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
50407     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
50408     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
50409     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
50410     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
50411     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
50412     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
50413     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
50414     +end;
MPRINT(EM_DIAGRAM):   end;
50415     +else do;
MPRINT(EM_DIAGRAM):   else do;
50416     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
50417     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
50418     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
50419     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
50420     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
50421     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
50422     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
50423     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
50424     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
50425     +         end;
MPRINT(EM_DIAGRAM):   end;
50426     +         else do;
MPRINT(EM_DIAGRAM):   else do;
50427     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
50428     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
50429     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
50430     +            end;
MPRINT(EM_DIAGRAM):   end;
50431     +         end;
MPRINT(EM_DIAGRAM):   end;
50432     +      end;
MPRINT(EM_DIAGRAM):   end;
50433     +      else do;
MPRINT(EM_DIAGRAM):   else do;
50434     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
50435     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
50436     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
50437     +         end;
MPRINT(EM_DIAGRAM):   end;
50438     +      end;
MPRINT(EM_DIAGRAM):   end;
50439     +   end;
MPRINT(EM_DIAGRAM):   end;
50440     +   else do;
MPRINT(EM_DIAGRAM):   else do;
50441     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
50442     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
50443     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
50444     +      end;
MPRINT(EM_DIAGRAM):   end;
50445     +      else do;
MPRINT(EM_DIAGRAM):   else do;
50446     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
50447     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
50448     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
50449     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
50450     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
50451     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
50452     +         end;
MPRINT(EM_DIAGRAM):   end;
50453     +      end;
MPRINT(EM_DIAGRAM):   end;
50454     +   end;
MPRINT(EM_DIAGRAM):   end;
50455     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
50456     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
50457     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
50458     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
50459     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
50460     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
50461     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
50462     +   end;
MPRINT(EM_DIAGRAM):   end;
50463     +end;
MPRINT(EM_DIAGRAM):   end;
50464     +
50465     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
50466     +*** Checking missing input Interval
50467     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
50468     +
50469     +IF NMISS(
50470     +   AcceptedCmpTotal ,
50471     +   Frq ,
50472     +   Income ,
50473     +   Mnt ,
50474     +   MntGoldProds ,
50475     +   MntMeatProducts ,
50476     +   NumCatalogPurchases ,
50477     +   NumDealsPurchases ,
50478     +   NumWebVisitsMonth ,
50479     +   RFMstat ,
50480     +   Recency ,
50481     +   Teenhome ,
50482     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , Recency , Teenhome , Year_Birth ) THEN DO;
50483     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
50484     +
50485     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
50486     +END;
MPRINT(EM_DIAGRAM):   END;
50487     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
50488     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
50489     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
50490     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
50491     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
50492     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
50493     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
50494     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
50495     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
50496     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
50497     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
50498     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
50499     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
50500     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
50501     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
50502     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
50503     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
50504     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
50505     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
50506     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
50507     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
50508     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
50509     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
50510     +END;
MPRINT(EM_DIAGRAM):   END;
50511     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
50512     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
50513     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
50514     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
50515     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
50516     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
50517     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
50518     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
50519     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
50520     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
50521     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
50522     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
50523     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
50524     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
50525     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
50526     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
50527     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
50528     +   ELSE S_NumCatalogPurchases
50529     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
50530     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
50531     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
50532     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
50533     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
50534     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
50535     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
50536     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
50537     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
50538     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
50539     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
50540     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
50541     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
50542     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
50543     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
50544     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
50545     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
50546     +END;
MPRINT(EM_DIAGRAM):   END;
50547     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
50548     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
50549     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
50550     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
50551     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
50552     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
50553     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
50554     +   H1x1_1  =     0.05803258857677 * S_AcceptedCmpTotal
50555     +          +     0.20201401677737 * S_Frq  +    -0.20060721007078 * S_Income
50556     +          +     0.60811032155087 * S_Mnt  +     0.01308658928857 *
50557     +        S_MntGoldProds  +    -0.32543222756203 * S_MntMeatProducts
50558     +          +    -0.17075976331442 * S_NumCatalogPurchases
50559     +          +     0.11936859656737 * S_NumDealsPurchases
50560     +          +    -0.02241344557322 * S_NumWebVisitsMonth
50561     +          +    -0.00310652561662 * S_RFMstat  +    -0.02230175002754 *
50562     +        S_Recency  +     0.15041197329983 * S_Teenhome
50563     +          +     0.08314198987289 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.05803258857677 * S_AcceptedCmpTotal + 0.20201401677737 * S_Frq + -0.20060721007078 * S_Income + 0.60811032155087 * S_Mnt + 0.01308658928857 * S_MntGoldProds + -0.32543222756203 * S_MntMeatProducts + -0.17075976331442 * 
S_NumCatalogPurchases + 0.11936859656737 * S_NumDealsPurchases + -0.02241344557322 * S_NumWebVisitsMonth + -0.00310652561662 * S_RFMstat + -0.02230175002754 * S_Recency + 0.15041197329983 * S_Teenhome + 0.08314198987289 * S_Year_Birth ;
50564     +   H1x1_2  =    -0.00804143026158 * S_AcceptedCmpTotal
50565     +          +     0.27782411169423 * S_Frq  +    -0.09048435288173 * S_Income
50566     +          +    -0.33276938238431 * S_Mnt  +     0.04318269159154 *
50567     +        S_MntGoldProds  +     -2.0876028997983 * S_MntMeatProducts
50568     +          +     -0.1082096588215 * S_NumCatalogPurchases
50569     +          +    -0.35286072202398 * S_NumDealsPurchases
50570     +          +     0.41909763538671 * S_NumWebVisitsMonth
50571     +          +    -0.00388254493812 * S_RFMstat  +    -0.25572729223699 *
50572     +        S_Recency  +     0.03657184300378 * S_Teenhome
50573     +          +    -0.16144911909057 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.00804143026158 * S_AcceptedCmpTotal + 0.27782411169423 * S_Frq + -0.09048435288173 * S_Income + -0.33276938238431 * S_Mnt + 0.04318269159154 * S_MntGoldProds + -2.0876028997983 * S_MntMeatProducts + -0.1082096588215 * 
S_NumCatalogPurchases + -0.35286072202398 * S_NumDealsPurchases + 0.41909763538671 * S_NumWebVisitsMonth + -0.00388254493812 * S_RFMstat + -0.25572729223699 * S_Recency + 0.03657184300378 * S_Teenhome + -0.16144911909057 * S_Year_Birth ;
50574     +   H1x1_1  = H1x1_1  +    -0.14329179496615 * Marital_StatusDivorced
50575     +          +     0.35890266446407 * Marital_StatusMarried
50576     +          +    -0.32958224268654 * Marital_StatusSingle
50577     +          +     0.26093411772209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.14329179496615 * Marital_StatusDivorced + 0.35890266446407 * Marital_StatusMarried + -0.32958224268654 * Marital_StatusSingle + 0.26093411772209 * Marital_StatusTogether ;
50578     +   H1x1_2  = H1x1_2  +     0.31162998470604 * Marital_StatusDivorced
50579     +          +    -0.02828904025667 * Marital_StatusMarried
50580     +          +      0.2062300465945 * Marital_StatusSingle
50581     +          +    -0.11283173230117 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.31162998470604 * Marital_StatusDivorced + -0.02828904025667 * Marital_StatusMarried + 0.2062300465945 * Marital_StatusSingle + -0.11283173230117 * Marital_StatusTogether ;
50582     +   H1x1_1  =     0.22625757706844 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.22625757706844 + H1x1_1 ;
50583     +   H1x1_2  =    -2.80839017705591 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.80839017705591 + H1x1_2 ;
50584     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
50585     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
50586     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
50587     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
50588     +END;
MPRINT(EM_DIAGRAM):   END;
50589     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
50590     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
50591     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
50592     +END;
MPRINT(EM_DIAGRAM):   END;
50593     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
50594     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
50595     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
50596     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
50597     +   H1x2_1  =     0.27800214153202 * S_AcceptedCmpTotal
50598     +          +     0.25771103125393 * S_Frq  +     0.06540858611057 * S_Income
50599     +          +     0.88062167564978 * S_Mnt  +    -0.03352879166216 *
50600     +        S_MntGoldProds  +    -0.36438303456911 * S_MntMeatProducts
50601     +          +    -0.01120232190428 * S_NumCatalogPurchases
50602     +          +     0.08335061407191 * S_NumDealsPurchases
50603     +          +     0.19045617784308 * S_NumWebVisitsMonth
50604     +          +    -0.06814497340743 * S_RFMstat  +     -0.3861487824541 *
50605     +        S_Recency  +    -0.01223664611486 * S_Teenhome
50606     +          +     0.11830416426236 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27800214153202 * S_AcceptedCmpTotal + 0.25771103125393 * S_Frq + 0.06540858611057 * S_Income + 0.88062167564978 * S_Mnt + -0.03352879166216 * S_MntGoldProds + -0.36438303456911 * S_MntMeatProducts + -0.01120232190428 * 
S_NumCatalogPurchases + 0.08335061407191 * S_NumDealsPurchases + 0.19045617784308 * S_NumWebVisitsMonth + -0.06814497340743 * S_RFMstat + -0.3861487824541 * S_Recency + -0.01223664611486 * S_Teenhome + 0.11830416426236 * S_Year_Birth ;
50607     +   H1x2_2  =     0.00966586432047 * S_AcceptedCmpTotal
50608     +          +    -0.15805213020363 * S_Frq  +    -0.10704590641296 * S_Income
50609     +          +    -0.22835348335472 * S_Mnt  +     0.04216459566963 *
50610     +        S_MntGoldProds  +     0.12105776304851 * S_MntMeatProducts
50611     +          +     0.05405710367459 * S_NumCatalogPurchases
50612     +          +     0.05779108423435 * S_NumDealsPurchases
50613     +          +     0.06578830114376 * S_NumWebVisitsMonth
50614     +          +     0.03581918113264 * S_RFMstat  +    -0.03493380943266 *
50615     +        S_Recency  +     0.07188455936346 * S_Teenhome
50616     +          +    -0.01037640411629 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.00966586432047 * S_AcceptedCmpTotal + -0.15805213020363 * S_Frq + -0.10704590641296 * S_Income + -0.22835348335472 * S_Mnt + 0.04216459566963 * S_MntGoldProds + 0.12105776304851 * S_MntMeatProducts + 0.05405710367459 * 
S_NumCatalogPurchases + 0.05779108423435 * S_NumDealsPurchases + 0.06578830114376 * S_NumWebVisitsMonth + 0.03581918113264 * S_RFMstat + -0.03493380943266 * S_Recency + 0.07188455936346 * S_Teenhome + -0.01037640411629 * S_Year_Birth ;
50617     +   H1x2_1  = H1x2_1  +    -0.11011761565852 * Marital_StatusDivorced
50618     +          +     -0.0971208757038 * Marital_StatusMarried
50619     +          +    -0.07250288479873 * Marital_StatusSingle
50620     +          +    -0.09370040203357 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.11011761565852 * Marital_StatusDivorced + -0.0971208757038 * Marital_StatusMarried + -0.07250288479873 * Marital_StatusSingle + -0.09370040203357 * Marital_StatusTogether ;
50621     +   H1x2_2  = H1x2_2  +     0.00981909678131 * Marital_StatusDivorced
50622     +          +     0.21091057941446 * Marital_StatusMarried
50623     +          +    -0.10578923343752 * Marital_StatusSingle
50624     +          +     0.14340624257864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.00981909678131 * Marital_StatusDivorced + 0.21091057941446 * Marital_StatusMarried + -0.10578923343752 * Marital_StatusSingle + 0.14340624257864 * Marital_StatusTogether ;
50625     +   H1x2_1  =    -1.44195571181963 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.44195571181963 + H1x2_1 ;
50626     +   H1x2_2  =    -1.92908634775882 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.92908634775882 + H1x2_2 ;
50627     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
50628     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
50629     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
50630     +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
50631     +END;
MPRINT(EM_DIAGRAM):   END;
50632     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
50633     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
50634     +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
50635     +END;
MPRINT(EM_DIAGRAM):   END;
50636     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
50637     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
50638     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
50639     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
50640     +   H2x1_1  =     22.0923538262076 * H1x1_1  +     8.31949814946749 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 22.0923538262076 * H1x1_1 + 8.31949814946749 * H1x1_2 ;
50641     +   H2x1_1  = H2x1_1  +    -17.2128148948815 * H1x2_1
50642     +          +    -68.7975539209644 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -17.2128148948815 * H1x2_1 + -68.7975539209644 * H1x2_2 ;
50643     +   H2x1_1  =    -0.74489671021313 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.74489671021313 + H2x1_1 ;
50644     +   H2x1_2  = 0;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0;
50645     +   _MAX_ = MAX (H2x1_1 , H2x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 );
50646     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
50647     +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
50648     +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
50649     +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
50650     +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
50651     +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
50652     +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
50653     +END;
MPRINT(EM_DIAGRAM):   END;
50654     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
50655     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
50656     +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
50657     +END;
MPRINT(EM_DIAGRAM):   END;
50658     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
50659     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
50660     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
50661     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
50662     +   P_DepVar1  =    -142.808746328345 * H2x1_1  +     -41.474410437113 * H2x1_2
50663     +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -142.808746328345 * H2x1_1 + -41.474410437113 * H2x1_2 ;
50664     +   P_DepVar1  =     56.9415259403341 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 56.9415259403341 + P_DepVar1 ;
50665     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
50666     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
50667     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
50668     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
50669     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
50670     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
50671     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
50672     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
50673     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
50674     +END;
MPRINT(EM_DIAGRAM):   END;
50675     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
50676     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
50677     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
50678     +END;
MPRINT(EM_DIAGRAM):   END;
50679     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
50680     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
50681     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
50682     +END;
MPRINT(EM_DIAGRAM):   END;
50683     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
50684     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
50685     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
50686     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
50687     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
50688     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
50689     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
50690     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
50691     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
50692     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
50693     +END;
MPRINT(EM_DIAGRAM):   END;
50694     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
50695     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
50696     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
50697     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
50698      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
50699      quit;
50700      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
50701      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
50702      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
50703      retain ID 2 Node "AutoNeural45";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural45";
50704      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
50705      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1339 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1339 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50706      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
50707      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50708      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1339 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1339 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

50709      proc sort data=EMWS8.AutoNeural45_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural45_variableset out=_temp2(keep=NAME CREATOR);
50710      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50711      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL45_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50712      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
50713      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
50714      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
50715      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50716      proc contents data=EMWS8.AutoNeural45_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural45_train out=_meta(keep=NAME) noprint;
50717      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

50718      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
50719      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50720      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

50721      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
50722      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
50723      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50724      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50725      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
50726      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 658 rows and 5 columns.

50727      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50728      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
50729      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 658 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 658 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50730      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
50731      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
50732      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
50733     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
50734     +* Formula Code;
The SAS System

MPRINT(EM_DIAGRAM):   * Formula Code;
50735     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
50736     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
50737     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
50738     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
50739      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
50740      quit;
50741      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
50742      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
50743      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
50744      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
50745      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
50746      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50747      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
50748      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50749      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50750      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
50751      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50752      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50753      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
50754      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
50755      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
50756      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

50757      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
50758      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

50759      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
50760      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50761      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50762      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
50763      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
50764      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50765      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

50766      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
50767      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

50768      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50769      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
50770      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 662 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50771      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
50772      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
50773      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
50774     +
50775     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
50776     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
MPRINT(EM_DIAGRAM):   Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
50777     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
50778     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
50779     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
50780     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
50781     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
50782      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
50783      quit;
50784      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
50785      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
50786      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
50787      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
50788      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
50789      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50790      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
50791      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50792      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

50793      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
50794      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50795      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50796      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
50797      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
50798      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
50799      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50800      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
50801      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

50802      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
50803      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50804      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50805      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
50806      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
50807      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50808      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50809      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
50810      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

50811      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

50812      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
50813      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 701 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50814      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
50815      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
50816      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
50817     +
50818     +
50819     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
50820     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
50821     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
50822     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
50823     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
50824     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
50825     +
50826     +
50827     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
50828     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
50829     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
50830     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
50831     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
50832     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
50833     +
50834     +
50835     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
50836     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
50837     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
50838     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
50839     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
50840     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
50841     +
50842     +
50843     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
50844     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
50845     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
50846     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
50847     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
50848     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
50849     +
50850     +
50851     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
50852     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
50853     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
50854     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
50855     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
50856     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
50857     +
50858     +
50859     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
50860     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
50861     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
50862     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
50863     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
50864     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
50865     +
50866     +
50867     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
50868     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
50869     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
50870     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
50871     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
50872     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
50873     +
50874     +
50875     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
50876     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
50877     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
50878     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
50879     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
50880     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
50881     +if
50882     +_FILTERNORM1 not in ( '.')
50883     + and
50884     +_FILTERNORM2 not in ( '.')
50885     + and
50886     +_FILTERNORM3 not in ( '.')
50887     + and
50888     +_FILTERNORM4 not in ( '.')
50889     + and
50890     +_FILTERNORM5 not in ( '.')
50891     + and
50892     +_FILTERNORM6 not in ( '.')
50893     + and
50894     +_FILTERNORM7 not in ( ' ')
50895     + and
50896     +_FILTERNORM8 not in ( ' ')
50897     +and
50898     +( Dt_Customer ne .)
50899     +and ( Income ne . and (Income<=107000))
50900     +and ( Kidhome ne .)
50901     +and ( MntFishProducts ne .)
50902     +and ( MntFruits ne .)
50903     +and ( MntGoldProds ne .)
50904     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
50905     +and ( MntSweetProducts ne .)
50906     +and ( MntWines ne .)
50907     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
50908     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
50909     +and ( NumStorePurchases ne .)
50910     +and ( NumWebPurchases ne .)
50911     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
50912     +and ( Recency ne .)
50913     +and ( Teenhome ne .)
50914     +and ( Year_Birth ne .)
50915     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and _FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and _FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 
not in ( ' ') and ( Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne . and (MntMeatProducts<=964)) and ( MntSweetProducts ne 
.) and ( MntWines ne .) and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( NumWebVisitsMonth ne . and 
(NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne .) and ( Year_Birth ne .) then do;
50916     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
50917     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
50918     +end;
MPRINT(EM_DIAGRAM):   end;
50919     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
50920     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
50921      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
50922      quit;
50923      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
50924      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
50925      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
50926      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
50927      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
50928      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50929      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
50930      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50931      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50932      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
50933      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50934      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50935      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
50936      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
50937      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
50938      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50939      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
50940      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

50941      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
50942      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50943      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50944      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
50945      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
50946      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
50947      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50948      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
50949      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

50950      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

50951      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
50952      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 767 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

50953      %macro varDept(fcmpdata=,id=);
50954      %global nobs&id scoreFlag&id;
50955      %let scoreFlag&id = 0;
50956      %if &id=1 or ^&fcmpStart %then %do;
50957      proc sort data=&fcmpdata out=_temp&id nodupkey;
50958      by NAME;
50959      where id=&id and LHS in( %let j=1;
50960      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
50961      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
50962      "&var" %let j = %eval(&j+1);
50963      %end;
50964      );
50965      run;
50966      %let dsid = %sysfunc(open(_temp&id));
50967      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
50968      %let dsid = %sysfunc(close(&dsid));
50969      %if &&nobs&id %then %do;
50970      %let scoreFlag&id = 1;
50971      %let fcmpStart = 1;
50972      %end;
50973      %else %let fcmpStart = 0;
50974      %end;
50975      %else %do;
50976      proc sort data=&fcmpdata out=_tempid;
50977      where id=&id;
50978      by LHS;
50979      run;
50980      %let dsid = %sysfunc(open(_tempid));
50981      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
50982      %let dsid = %sysfunc(close(&dsid));
50983      %if ^&&nobs&id %then %do;
50984      proc datasets lib=work nolist;
50985      delete _tempid;
50986      run;
50987      quit;
50988      %end;
50989      %else %do;
50990      data _tempAll;
50991      set %let j=%eval(&id-1);
50992      %do x=1 %to &j;
50993      %if &&nobs&x %then %do;
50994      _temp&x %end;
50995      %end;
50996      ;
50997      run;
50998      proc sql;
50999      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
51000      quit;
51001      data _temp&id;
51002      set _temp&id;
51003      where LHS ne '' and NAME ne '' and Node ne '';
51004      run;
51005      proc datasets lib=work nolist;
51006      delete _tempAll;
51007      run;
51008      %let dsid = %sysfunc(open(_temp&id));
51009      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
51010      %let dsid = %sysfunc(close(&dsid));
51011      %if ^&&nobs&id %then %do;
51012      proc datasets lib=work nolist;
51013      delete _temp&id;
51014      run;
51015      quit;
51016      %end;
51017      %else %do;
51018      %let scoreFlag&id = 1;
51019      data _temp&id;
51020      set _temp&id;
51021      where LHS ne NAME and node ne '';
51022      run;
51023      %let dsid = %sysfunc(open(_temp&id));
51024      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
51025      %let dsid = %sysfunc(close(&dsid));
51026      %if ^&&nobs&id %then %do;
51027      proc datasets lib=work nolist;
51028      delete _temp&id;
51029      run;
51030      quit;
51031      %end;
51032      %else %do;
51033      proc sort data=_temp&id nodupkey;
51034      by LHS NAME;
51035      run;
51036      %end;
51037      %end;
51038      %end;
51039      %end;
51040      %mend varDept;
51041      %macro optCode(outdata=fcmpdata);
51042      %global fcmpStart;
51043      %let fcmpStart = 0;
51044      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
51045      %let NumNodes=9;
51046      %do k=1 %to &NumNodes;
51047      %vardept(fcmpdata=&outdata, id=&k);
51048      %end;
51049      %mend optCode;
51050      %optcode(outData=EMWS8.Ensmbl57_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 80 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 58 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 22 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 22 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 22 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 22 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 22 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 22 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 48 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

51051      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas";
51052      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
51053      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas.
51054     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
51055     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
51056     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
51057     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
51058     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
51059     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
51060     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
51061     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
51062     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
51063     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
51064     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
51065     +LENGTH _WARN_ $4
51066     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
51067     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
51068     +
51069     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
51070     +
51071     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
51072     +
51073     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
51074     +
51075     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
51076     +
51077     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
51078     +
51079     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
51080     +
51081     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
51082     +
51083     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
51084     +
51085     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
51086     +
51087     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
51088     +
51089     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
51090     +
51091     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
51092     +
51093     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
51094     +
51095     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
51096     +
51097     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
51098     +
51099     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
51100     +
51101     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
51102     +
51103     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
51104     +
51105     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
51106     +
51107     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
51108     +
51109     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
51110     +
51111     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
51112     +
51113     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
51114     +
51115     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
51116     +
51117     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
51118     +
51119     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
51120     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
51121     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
51122     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
51123     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
51124     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
51125     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
51126     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
51127     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
51128     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
51129     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
51130     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
51131     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
51132     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
51133     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
51134     +end;
MPRINT(EM_DIAGRAM):   end;
51135     +else do;
MPRINT(EM_DIAGRAM):   else do;
51136     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
51137     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
51138     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
51139     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
51140     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
51141     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
51142     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
51143     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
51144     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
51145     +         end;
MPRINT(EM_DIAGRAM):   end;
51146     +         else do;
MPRINT(EM_DIAGRAM):   else do;
51147     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
51148     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
51149     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
51150     +            end;
MPRINT(EM_DIAGRAM):   end;
51151     +         end;
MPRINT(EM_DIAGRAM):   end;
51152     +      end;
MPRINT(EM_DIAGRAM):   end;
51153     +      else do;
MPRINT(EM_DIAGRAM):   else do;
51154     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
51155     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
51156     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
51157     +         end;
MPRINT(EM_DIAGRAM):   end;
51158     +      end;
MPRINT(EM_DIAGRAM):   end;
51159     +   end;
MPRINT(EM_DIAGRAM):   end;
51160     +   else do;
MPRINT(EM_DIAGRAM):   else do;
51161     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
51162     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
51163     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
51164     +      end;
MPRINT(EM_DIAGRAM):   end;
51165     +      else do;
MPRINT(EM_DIAGRAM):   else do;
51166     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
51167     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
51168     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
51169     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
51170     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
51171     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
51172     +         end;
MPRINT(EM_DIAGRAM):   end;
51173     +      end;
MPRINT(EM_DIAGRAM):   end;
51174     +   end;
MPRINT(EM_DIAGRAM):   end;
51175     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
51176     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
51177     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
51178     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
51179     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
51180     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
51181     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
51182     +   end;
MPRINT(EM_DIAGRAM):   end;
51183     +end;
MPRINT(EM_DIAGRAM):   end;
51184     +
51185     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
51186     +*** Checking missing input Interval
51187     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
51188     +
51189     +IF NMISS(
51190     +   AcceptedCmpTotal ,
51191     +   Frq ,
51192     +   Income ,
51193     +   Mnt ,
51194     +   MntGoldProds ,
51195     +   MntMeatProducts ,
51196     +   NumCatalogPurchases ,
51197     +   NumDealsPurchases ,
51198     +   NumWebVisitsMonth ,
51199     +   RFMstat ,
51200     +   Recency ,
51201     +   Teenhome ,
51202     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , Recency , Teenhome , Year_Birth ) THEN DO;
51203     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
51204     +
51205     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
51206     +END;
MPRINT(EM_DIAGRAM):   END;
51207     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
51208     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
51209     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
51210     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
51211     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
51212     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
51213     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
51214     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
51215     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
51216     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
51217     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
51218     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
51219     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
51220     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
51221     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
51222     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
51223     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
51224     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
51225     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
51226     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
51227     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
51228     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
51229     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
51230     +END;
MPRINT(EM_DIAGRAM):   END;
51231     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
51232     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
51233     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
51234     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
51235     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
51236     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
51237     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
51238     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
51239     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
51240     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
51241     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
51242     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
51243     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
51244     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
51245     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
51246     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
51247     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
51248     +   ELSE S_NumCatalogPurchases
51249     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
51250     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
51251     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
51252     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
51253     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
51254     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
51255     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
51256     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
51257     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
51258     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
51259     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
51260     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
51261     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
51262     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
51263     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
51264     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
51265     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
51266     +END;
MPRINT(EM_DIAGRAM):   END;
51267     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
51268     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
51269     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
51270     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
51271     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
51272     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
51273     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
51274     +   H1x1_1  =      1.3507655650527 * S_AcceptedCmpTotal
51275     +          +    -1.10614122240879 * S_Frq  +     1.75303764660855 * S_Income
51276     +          +    -3.36358487853209 * S_Mnt  +     0.66482370197508 *
51277     +        S_MntGoldProds  +     2.20380795880989 * S_MntMeatProducts
51278     +          +     0.96941096546276 * S_NumCatalogPurchases
51279     +          +    -0.78169009272221 * S_NumDealsPurchases
51280     +          +     2.46694552614806 * S_NumWebVisitsMonth
51281     +          +    -0.70379796230966 * S_RFMstat  +    -2.91060571548081 *
51282     +        S_Recency  +    -1.09760548427625 * S_Teenhome
51283     +          +    -0.04996948842393 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.3507655650527 * S_AcceptedCmpTotal + -1.10614122240879 * S_Frq + 1.75303764660855 * S_Income + -3.36358487853209 * S_Mnt + 0.66482370197508 * S_MntGoldProds + 2.20380795880989 * S_MntMeatProducts + 0.96941096546276 * 
S_NumCatalogPurchases + -0.78169009272221 * S_NumDealsPurchases + 2.46694552614806 * S_NumWebVisitsMonth + -0.70379796230966 * S_RFMstat + -2.91060571548081 * S_Recency + -1.09760548427625 * S_Teenhome + -0.04996948842393 * S_Year_Birth ;
51284     +   H1x1_2  =    -0.31908942522077 * S_AcceptedCmpTotal
51285     +          +     3.74791296051726 * S_Frq  +     2.24284839751303 * S_Income
51286     +          +    -1.78405040388815 * S_Mnt  +      0.8742942749026 *
51287     +        S_MntGoldProds  +    -0.14368654003355 * S_MntMeatProducts
51288     +          +    -2.01779739147185 * S_NumCatalogPurchases
51289     +          +     -2.6507470301089 * S_NumDealsPurchases
51290     +          +     0.43757499676531 * S_NumWebVisitsMonth
51291     +          +    -1.37847156147455 * S_RFMstat  +    -0.69576523519337 *
51292     +        S_Recency  +    -0.45321912120397 * S_Teenhome
51293     +          +     0.52676912620048 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31908942522077 * S_AcceptedCmpTotal + 3.74791296051726 * S_Frq + 2.24284839751303 * S_Income + -1.78405040388815 * S_Mnt + 0.8742942749026 * S_MntGoldProds + -0.14368654003355 * S_MntMeatProducts + -2.01779739147185 * 
S_NumCatalogPurchases + -2.6507470301089 * S_NumDealsPurchases + 0.43757499676531 * S_NumWebVisitsMonth + -1.37847156147455 * S_RFMstat + -0.69576523519337 * S_Recency + -0.45321912120397 * S_Teenhome + 0.52676912620048 * S_Year_Birth ;
51294     +   H1x1_3  =     2.41023196591392 * S_AcceptedCmpTotal
51295     +          +    -2.36084733932675 * S_Frq  +     1.24213632619464 * S_Income
51296     +          +    -1.85110475917758 * S_Mnt  +    -0.28004157450889 *
51297     +        S_MntGoldProds  +     2.40469717841771 * S_MntMeatProducts
51298     +          +      3.9474982958259 * S_NumCatalogPurchases
51299     +          +       0.376468804707 * S_NumDealsPurchases
51300     +          +     3.31501013882439 * S_NumWebVisitsMonth
51301     +          +     0.11559780336909 * S_RFMstat  +    -4.25267693921008 *
51302     +        S_Recency  +    -1.57729700618019 * S_Teenhome
51303     +          +      0.1824973506119 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.41023196591392 * S_AcceptedCmpTotal + -2.36084733932675 * S_Frq + 1.24213632619464 * S_Income + -1.85110475917758 * S_Mnt + -0.28004157450889 * S_MntGoldProds + 2.40469717841771 * S_MntMeatProducts + 3.9474982958259 * 
S_NumCatalogPurchases + 0.376468804707 * S_NumDealsPurchases + 3.31501013882439 * S_NumWebVisitsMonth + 0.11559780336909 * S_RFMstat + -4.25267693921008 * S_Recency + -1.57729700618019 * S_Teenhome + 0.1824973506119 * S_Year_Birth ;
51304     +   H1x1_4  =     -0.2757766975278 * S_AcceptedCmpTotal
51305     +          +     3.82725387338192 * S_Frq  +      -0.761164420496 * S_Income
51306     +          +    -1.14207863171921 * S_Mnt  +     -0.1745335405903 *
51307     +        S_MntGoldProds  +    -5.79657274001258 * S_MntMeatProducts
51308     +          +    -1.47064436222345 * S_NumCatalogPurchases
51309     +          +    -0.47773085529503 * S_NumDealsPurchases
51310     +          +     0.20028656323595 * S_NumWebVisitsMonth
51311     +          +    -0.18383173425255 * S_RFMstat  +     0.10522454853137 *
51312     +        S_Recency  +    -0.11530372179295 * S_Teenhome
51313     +          +    -0.34167488644648 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.2757766975278 * S_AcceptedCmpTotal + 3.82725387338192 * S_Frq + -0.761164420496 * S_Income + -1.14207863171921 * S_Mnt + -0.1745335405903 * S_MntGoldProds + -5.79657274001258 * S_MntMeatProducts + -1.47064436222345 * 
S_NumCatalogPurchases + -0.47773085529503 * S_NumDealsPurchases + 0.20028656323595 * S_NumWebVisitsMonth + -0.18383173425255 * S_RFMstat + 0.10522454853137 * S_Recency + -0.11530372179295 * S_Teenhome + -0.34167488644648 * S_Year_Birth ;
51314     +   H1x1_1  = H1x1_1  +     1.48263364530339 * Marital_StatusDivorced
51315     +          +    -1.68634246986018 * Marital_StatusMarried
51316     +          +     0.61674763327859 * Marital_StatusSingle
51317     +          +    -1.26649958570453 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.48263364530339 * Marital_StatusDivorced + -1.68634246986018 * Marital_StatusMarried + 0.61674763327859 * Marital_StatusSingle + -1.26649958570453 * Marital_StatusTogether ;
51318     +   H1x1_2  = H1x1_2  +     1.03937964147637 * Marital_StatusDivorced
51319     +          +    -0.63821523628652 * Marital_StatusMarried
51320     +          +    -1.40431603473643 * Marital_StatusSingle
51321     +          +    -0.20849152262706 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.03937964147637 * Marital_StatusDivorced + -0.63821523628652 * Marital_StatusMarried + -1.40431603473643 * Marital_StatusSingle + -0.20849152262706 * Marital_StatusTogether ;
51322     +   H1x1_3  = H1x1_3  +    -0.00632006555267 * Marital_StatusDivorced
51323     +          +    -2.86773035723606 * Marital_StatusMarried
51324     +          +     2.52900517550184 * Marital_StatusSingle
51325     +          +    -3.34343954102751 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00632006555267 * Marital_StatusDivorced + -2.86773035723606 * Marital_StatusMarried + 2.52900517550184 * Marital_StatusSingle + -3.34343954102751 * Marital_StatusTogether ;
51326     +   H1x1_4  = H1x1_4  +     0.05620673245628 * Marital_StatusDivorced
51327     +          +    -0.89880425714459 * Marital_StatusMarried
51328     +          +     0.97652284934456 * Marital_StatusSingle
51329     +          +    -0.83414241747679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.05620673245628 * Marital_StatusDivorced + -0.89880425714459 * Marital_StatusMarried + 0.97652284934456 * Marital_StatusSingle + -0.83414241747679 * Marital_StatusTogether ;
51330     +   H1x1_1  =    -0.73505942586437 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.73505942586437 + H1x1_1 ;
51331     +   H1x1_2  =     2.97401194500651 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.97401194500651 + H1x1_2 ;
51332     +   H1x1_3  =    -7.86049995366383 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -7.86049995366383 + H1x1_3 ;
51333     +   H1x1_4  =    -3.77808914097545 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.77808914097545 + H1x1_4 ;
51334     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
51335     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
51336     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
51337     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
51338     +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
51339     +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
51340     +END;
MPRINT(EM_DIAGRAM):   END;
51341     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
51342     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
51343     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
51344     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
51345     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
51346     +END;
MPRINT(EM_DIAGRAM):   END;
51347     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
51348     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
51349     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
51350     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
51351     +   P_DepVar1  =     17.1091261255058 * H1x1_1  +    -15.4649724088409 * H1x1_2
51352     +          +     14.2519883476498 * H1x1_3  +    -25.0940711325771 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1091261255058 * H1x1_1 + -15.4649724088409 * H1x1_2 + 14.2519883476498 * H1x1_3 + -25.0940711325771 * H1x1_4 ;
51353     +   P_DepVar1  =     -0.7898064443713 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.7898064443713 + P_DepVar1 ;
51354     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
51355     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
51356     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
51357     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
51358     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
51359     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
51360     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
51361     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
51362     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
51363     +END;
MPRINT(EM_DIAGRAM):   END;
51364     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
51365     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
51366     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
51367     +END;
MPRINT(EM_DIAGRAM):   END;
51368     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
51369     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
51370     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
51371     +END;
MPRINT(EM_DIAGRAM):   END;
51372     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
51373     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
51374     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
51375     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
51376     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
51377     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
51378     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
51379     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
51380     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
51381     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
51382     +END;
MPRINT(EM_DIAGRAM):   END;
51383     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
51384     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
51385     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
51386     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
51387      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
51388      quit;
51389      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
51390      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
51391      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
51392      retain ID 2 Node "AutoNeural47";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural47";
51393      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
51394      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1083 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1083 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51395      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
51396      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51397      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1083 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1083 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51398      proc sort data=EMWS8.AutoNeural47_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural47_variableset out=_temp2(keep=NAME CREATOR);
51399      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51400      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL47_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51401      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
51402      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
51403      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
51404      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51405      proc contents data=EMWS8.AutoNeural47_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural47_train out=_meta(keep=NAME) noprint;
51406      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

51407      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
51408      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51409      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51410      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
51411      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
51412      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51413      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

51414      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
51415      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 550 rows and 5 columns.

51416      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51417      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
51418      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 550 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 550 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51419      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
51420      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
51421      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
51422     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
51423     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
51424     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
51425     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
51426     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
51427     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
51428      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
51429      quit;
51430      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
51431      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
51432      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
51433      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
51434      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
51435      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51436      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
51437      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51438      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

51439      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
51440      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51441      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51442      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
51443      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
51444      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
51445      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51446      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
51447      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

51448      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
51449      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51450      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51451      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
51452      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
51453      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51454      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

51455      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
51456      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

51457      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51458      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
51459      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 554 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51460      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
51461      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
51462      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
51463     +
51464     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
51465     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
MPRINT(EM_DIAGRAM):   Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
51466     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
51467     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
51468     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
51469     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
51470     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
51471      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
51472      quit;
51473      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
51474      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
51475      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
51476      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
51477      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
51478      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51479      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
51480      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51481      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51482      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
51483      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51484      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51485      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
51486      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
51487      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
51488      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51489      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
51490      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51491      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
51492      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51493      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

51494      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
51495      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
51496      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51497      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51498      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
51499      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

51500      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51501      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
51502      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 593 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51503      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
51504      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
51505      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
51506     +
51507     +
51508     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
51509     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
51510     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
51511     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
51512     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
51513     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
51514     +
51515     +
51516     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
51517     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
51518     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
51519     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
51520     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
51521     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
51522     +
51523     +
51524     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
51525     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
51526     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
51527     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
51528     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
51529     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
51530     +
51531     +
51532     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
51533     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
51534     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
51535     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
51536     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
51537     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
51538     +
51539     +
51540     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
51541     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
51542     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
51543     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
51544     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
51545     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
51546     +
51547     +
51548     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
51549     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
51550     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
51551     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
51552     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
51553     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
51554     +
51555     +
51556     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
51557     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
51558     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
51559     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
51560     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
51561     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
51562     +
51563     +
51564     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
51565     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
51566     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
51567     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
51568     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
51569     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
51570     +if
51571     +_FILTERNORM1 not in ( '.')
51572     + and
51573     +_FILTERNORM2 not in ( '.')
51574     + and
51575     +_FILTERNORM3 not in ( '.')
51576     + and
51577     +_FILTERNORM4 not in ( '.')
51578     + and
51579     +_FILTERNORM5 not in ( '.')
51580     + and
51581     +_FILTERNORM6 not in ( '.')
51582     + and
51583     +_FILTERNORM7 not in ( ' ')
51584     + and
51585     +_FILTERNORM8 not in ( ' ')
51586     +and
51587     +( Dt_Customer ne .)
51588     +and ( Income ne . and (Income<=107000))
51589     +and ( Kidhome ne .)
51590     +and ( MntFishProducts ne .)
51591     +and ( MntFruits ne .)
51592     +and ( MntGoldProds ne .)
51593     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
51594     +and ( MntSweetProducts ne .)
51595     +and ( MntWines ne .)
51596     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
51597     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
51598     +and ( NumStorePurchases ne .)
51599     +and ( NumWebPurchases ne .)
51600     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
51601     +and ( Recency ne .)
51602     +and ( Teenhome ne .)
51603     +and ( Year_Birth ne .)
51604     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and _FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and _FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 
not in ( ' ') and ( Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne . and (MntMeatProducts<=964)) and ( MntSweetProducts ne 
.) and ( MntWines ne .) and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( NumWebVisitsMonth ne . and 
(NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne .) and ( Year_Birth ne .) then do;
51605     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
51606     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
51607     +end;
MPRINT(EM_DIAGRAM):   end;
51608     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
51609     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
51610      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
51611      quit;
51612      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
51613      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
51614      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
51615      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
51616      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
51617      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

51618      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
51619      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51620      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51621      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
51622      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51623      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51624      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
51625      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
51626      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
51627      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

51628      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
51629      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

51630      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
51631      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51632      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

51633      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
51634      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
51635      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51636      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51637      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
51638      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

51639      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51640      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
51641      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

51642      %macro varDept(fcmpdata=,id=);
51643      %global nobs&id scoreFlag&id;
51644      %let scoreFlag&id = 0;
51645      %if &id=1 or ^&fcmpStart %then %do;
51646      proc sort data=&fcmpdata out=_temp&id nodupkey;
51647      by NAME;
51648      where id=&id and LHS in( %let j=1;
51649      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
51650      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
51651      "&var" %let j = %eval(&j+1);
51652      %end;
51653      );
51654      run;
51655      %let dsid = %sysfunc(open(_temp&id));
51656      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
51657      %let dsid = %sysfunc(close(&dsid));
51658      %if &&nobs&id %then %do;
51659      %let scoreFlag&id = 1;
51660      %let fcmpStart = 1;
51661      %end;
51662      %else %let fcmpStart = 0;
51663      %end;
51664      %else %do;
51665      proc sort data=&fcmpdata out=_tempid;
51666      where id=&id;
51667      by LHS;
51668      run;
51669      %let dsid = %sysfunc(open(_tempid));
51670      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
51671      %let dsid = %sysfunc(close(&dsid));
51672      %if ^&&nobs&id %then %do;
51673      proc datasets lib=work nolist;
51674      delete _tempid;
51675      run;
51676      quit;
51677      %end;
51678      %else %do;
51679      data _tempAll;
51680      set %let j=%eval(&id-1);
51681      %do x=1 %to &j;
51682      %if &&nobs&x %then %do;
51683      _temp&x %end;
51684      %end;
51685      ;
51686      run;
51687      proc sql;
51688      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
51689      quit;
51690      data _temp&id;
51691      set _temp&id;
51692      where LHS ne '' and NAME ne '' and Node ne '';
51693      run;
51694      proc datasets lib=work nolist;
51695      delete _tempAll;
51696      run;
51697      %let dsid = %sysfunc(open(_temp&id));
51698      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
51699      %let dsid = %sysfunc(close(&dsid));
51700      %if ^&&nobs&id %then %do;
51701      proc datasets lib=work nolist;
51702      delete _temp&id;
51703      run;
51704      quit;
51705      %end;
51706      %else %do;
51707      %let scoreFlag&id = 1;
51708      data _temp&id;
51709      set _temp&id;
51710      where LHS ne NAME and node ne '';
51711      run;
51712      %let dsid = %sysfunc(open(_temp&id));
51713      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
51714      %let dsid = %sysfunc(close(&dsid));
51715      %if ^&&nobs&id %then %do;
51716      proc datasets lib=work nolist;
51717      delete _temp&id;
51718      run;
51719      quit;
51720      %end;
51721      %else %do;
51722      proc sort data=_temp&id nodupkey;
51723      by LHS NAME;
51724      run;
51725      %end;
51726      %end;
51727      %end;
51728      %end;
51729      %mend varDept;
51730      %macro optCode(outdata=fcmpdata);
51731      %global fcmpStart;
51732      %let fcmpStart = 0;
51733      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
51734      %let NumNodes=9;
51735      %do k=1 %to &NumNodes;
51736      %vardept(fcmpdata=&outdata, id=&k);
51737      %end;
51738      %mend optCode;
51739      %optcode(outData=EMWS8.Ensmbl57_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 74 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 54 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 20 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 20 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 20 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 46 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

51740      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMPUBLISHSCORE.sas";
51741      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
51742      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMPUBLISHSCORE.sas.
51743     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
51744     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
51745     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
51746     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
51747     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
51748     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
51749     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
51750     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
51751     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
51752     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
51753     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
51754     +LENGTH _WARN_ $4
51755     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
51756     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
51757     +
51758     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
51759     +
51760     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
51761     +
51762     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
51763     +
51764     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
51765     +
51766     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
51767     +
51768     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
51769     +
51770     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
51771     +
51772     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
51773     +
51774     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
51775     +
51776     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
51777     +
51778     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
51779     +
51780     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
51781     +
51782     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
51783     +
51784     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
51785     +
51786     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
51787     +
51788     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
51789     +
51790     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
51791     +
51792     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
51793     +
51794     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
51795     +
51796     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
51797     +
51798     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
51799     +
51800     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
51801     +
51802     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
51803     +
51804     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
51805     +
51806     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
51807     +
51808     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
51809     +
51810     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
51811     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
51812     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
51813     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
51814     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
51815     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
51816     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
51817     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
51818     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
51819     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
51820     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
51821     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
51822     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
51823     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
51824     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
51825     +end;
MPRINT(EM_DIAGRAM):   end;
51826     +else do;
MPRINT(EM_DIAGRAM):   else do;
51827     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
51828     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
51829     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
51830     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
51831     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
51832     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
51833     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
51834     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
51835     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
51836     +         end;
MPRINT(EM_DIAGRAM):   end;
51837     +         else do;
MPRINT(EM_DIAGRAM):   else do;
51838     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
51839     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
51840     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
51841     +            end;
MPRINT(EM_DIAGRAM):   end;
51842     +         end;
MPRINT(EM_DIAGRAM):   end;
51843     +      end;
MPRINT(EM_DIAGRAM):   end;
51844     +      else do;
MPRINT(EM_DIAGRAM):   else do;
51845     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
51846     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
51847     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
51848     +         end;
MPRINT(EM_DIAGRAM):   end;
51849     +      end;
MPRINT(EM_DIAGRAM):   end;
51850     +   end;
MPRINT(EM_DIAGRAM):   end;
51851     +   else do;
MPRINT(EM_DIAGRAM):   else do;
51852     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
51853     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
51854     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
51855     +      end;
MPRINT(EM_DIAGRAM):   end;
51856     +      else do;
MPRINT(EM_DIAGRAM):   else do;
51857     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
51858     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
51859     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
51860     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
51861     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
51862     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
51863     +         end;
MPRINT(EM_DIAGRAM):   end;
51864     +      end;
MPRINT(EM_DIAGRAM):   end;
51865     +   end;
MPRINT(EM_DIAGRAM):   end;
51866     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
51867     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
51868     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
51869     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
51870     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
51871     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
51872     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
51873     +   end;
MPRINT(EM_DIAGRAM):   end;
51874     +end;
MPRINT(EM_DIAGRAM):   end;
51875     +
51876     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
51877     +*** Checking missing input Interval
51878     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
51879     +
51880     +IF NMISS(
51881     +   AcceptedCmpTotal ,
51882     +   Frq ,
51883     +   Income ,
51884     +   Mnt ,
51885     +   MntGoldProds ,
51886     +   MntMeatProducts ,
51887     +   NumCatalogPurchases ,
51888     +   NumDealsPurchases ,
51889     +   NumWebVisitsMonth ,
51890     +   RFMstat ,
51891     +   Recency ,
51892     +   Teenhome ,
51893     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , Recency , Teenhome , Year_Birth ) THEN DO;
51894     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
51895     +
51896     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
51897     +END;
MPRINT(EM_DIAGRAM):   END;
51898     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
51899     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
51900     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
51901     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
51902     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
51903     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
51904     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
51905     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
51906     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
51907     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
51908     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
51909     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
51910     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
51911     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
51912     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
51913     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
51914     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
51915     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
51916     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
51917     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
51918     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
51919     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
51920     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
51921     +END;
MPRINT(EM_DIAGRAM):   END;
51922     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
51923     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
51924     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
51925     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
51926     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
51927     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
51928     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
51929     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
51930     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
51931     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
51932     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
51933     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
51934     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
51935     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
51936     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
51937     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
51938     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
51939     +   ELSE S_NumCatalogPurchases
51940     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
51941     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
51942     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
51943     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
51944     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
51945     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
51946     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
51947     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
51948     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
51949     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
51950     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
51951     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
51952     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
51953     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
51954     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
51955     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
51956     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
51957     +END;
MPRINT(EM_DIAGRAM):   END;
51958     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
51959     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
51960     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
51961     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
51962     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
51963     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
51964     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
51965     +   H1x1_1  =     0.27619305633764 * S_AcceptedCmpTotal
51966     +          +    -0.11236902682497 * S_Frq  +     0.02547336321659 * S_Income
51967     +          +     1.22594163788316 * S_Mnt  +    -0.13304067437519 *
51968     +        S_MntGoldProds  +    -0.25318386797622 * S_MntMeatProducts
51969     +          +     0.18813452089487 * S_NumCatalogPurchases
51970     +          +     0.07572009513796 * S_NumDealsPurchases
51971     +          +     0.26290613719398 * S_NumWebVisitsMonth
51972     +          +    -0.07407700105008 * S_RFMstat  +    -0.42371914006256 *
51973     +        S_Recency  +    -0.08184869022013 * S_Teenhome
51974     +          +     0.01152140021328 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27619305633764 * S_AcceptedCmpTotal + -0.11236902682497 * S_Frq + 0.02547336321659 * S_Income + 1.22594163788316 * S_Mnt + -0.13304067437519 * S_MntGoldProds + -0.25318386797622 * S_MntMeatProducts + 0.18813452089487 * 
S_NumCatalogPurchases + 0.07572009513796 * S_NumDealsPurchases + 0.26290613719398 * S_NumWebVisitsMonth + -0.07407700105008 * S_RFMstat + -0.42371914006256 * S_Recency + -0.08184869022013 * S_Teenhome + 0.01152140021328 * S_Year_Birth ;
51975     +   H1x1_2  =     0.10663705781144 * S_AcceptedCmpTotal
51976     +          +     -1.0540282734074 * S_Frq  +    -0.11987114679821 * S_Income
51977     +          +     0.64876951297444 * S_Mnt  +     0.19900484060335 *
51978     +        S_MntGoldProds  +     0.97085619241432 * S_MntMeatProducts
51979     +          +      0.3860900431806 * S_NumCatalogPurchases
51980     +          +    -0.05602869666287 * S_NumDealsPurchases
51981     +          +     0.25751125196672 * S_NumWebVisitsMonth
51982     +          +     0.02624606311455 * S_RFMstat  +    -0.13483172331925 *
51983     +        S_Recency  +     0.00740928227007 * S_Teenhome
51984     +          +     0.00743631640493 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.10663705781144 * S_AcceptedCmpTotal + -1.0540282734074 * S_Frq + -0.11987114679821 * S_Income + 0.64876951297444 * S_Mnt + 0.19900484060335 * S_MntGoldProds + 0.97085619241432 * S_MntMeatProducts + 0.3860900431806 * 
S_NumCatalogPurchases + -0.05602869666287 * S_NumDealsPurchases + 0.25751125196672 * S_NumWebVisitsMonth + 0.02624606311455 * S_RFMstat + -0.13483172331925 * S_Recency + 0.00740928227007 * S_Teenhome + 0.00743631640493 * S_Year_Birth ;
51985     +   H1x1_3  =     0.25721067351974 * S_AcceptedCmpTotal
51986     +          +    -0.86907357751772 * S_Frq  +    -0.08157123692791 * S_Income
51987     +          +     0.01248777269658 * S_Mnt  +     0.05157436079695 *
51988     +        S_MntGoldProds  +     0.77615263309304 * S_MntMeatProducts
51989     +          +     0.20017136343834 * S_NumCatalogPurchases
51990     +          +      0.4177949842415 * S_NumDealsPurchases
51991     +          +     0.12267139708832 * S_NumWebVisitsMonth
51992     +          +    -0.04813980569775 * S_RFMstat  +    -0.35935125476541 *
51993     +        S_Recency  +    -0.04165775695782 * S_Teenhome
51994     +          +    -0.02142572027654 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.25721067351974 * S_AcceptedCmpTotal + -0.86907357751772 * S_Frq + -0.08157123692791 * S_Income + 0.01248777269658 * S_Mnt + 0.05157436079695 * S_MntGoldProds + 0.77615263309304 * S_MntMeatProducts + 0.20017136343834 * 
S_NumCatalogPurchases + 0.4177949842415 * S_NumDealsPurchases + 0.12267139708832 * S_NumWebVisitsMonth + -0.04813980569775 * S_RFMstat + -0.35935125476541 * S_Recency + -0.04165775695782 * S_Teenhome + -0.02142572027654 * S_Year_Birth ;
51995     +   H1x1_4  =    -0.14554708768829 * S_AcceptedCmpTotal
51996     +          +     -0.0597172306674 * S_Frq  +    -0.28285875178634 * S_Income
51997     +          +     1.04591505007314 * S_Mnt  +     0.00461806901547 *
51998     +        S_MntGoldProds  +    -0.61862352433469 * S_MntMeatProducts
51999     +          +    -0.41475045310519 * S_NumCatalogPurchases
52000     +          +     0.05270183882345 * S_NumDealsPurchases
52001     +          +     -0.3411138782759 * S_NumWebVisitsMonth
52002     +          +    -0.06158026374803 * S_RFMstat  +     0.33899005947536 *
52003     +        S_Recency  +     0.09131411279492 * S_Teenhome
52004     +          +    -0.00935201223775 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14554708768829 * S_AcceptedCmpTotal + -0.0597172306674 * S_Frq + -0.28285875178634 * S_Income + 1.04591505007314 * S_Mnt + 0.00461806901547 * S_MntGoldProds + -0.61862352433469 * S_MntMeatProducts + -0.41475045310519 * 
S_NumCatalogPurchases + 0.05270183882345 * S_NumDealsPurchases + -0.3411138782759 * S_NumWebVisitsMonth + -0.06158026374803 * S_RFMstat + 0.33899005947536 * S_Recency + 0.09131411279492 * S_Teenhome + -0.00935201223775 * S_Year_Birth ;
52005     +   H1x1_5  =     0.19976617457438 * S_AcceptedCmpTotal
52006     +          +    -0.47746743016353 * S_Frq  +     0.16855808605754 * S_Income
52007     +          +    -0.87114248882356 * S_Mnt  +     0.16259754490995 *
52008     +        S_MntGoldProds  +     0.11590070773645 * S_MntMeatProducts
52009     +          +     0.28201604995327 * S_NumCatalogPurchases
52010     +          +     -0.0106712941301 * S_NumDealsPurchases
52011     +          +     0.44937825968958 * S_NumWebVisitsMonth
52012     +          +     0.00709750447129 * S_RFMstat  +    -0.47138460185175 *
52013     +        S_Recency  +    -0.07776231003236 * S_Teenhome
52014     +          +    -0.02330056365233 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.19976617457438 * S_AcceptedCmpTotal + -0.47746743016353 * S_Frq + 0.16855808605754 * S_Income + -0.87114248882356 * S_Mnt + 0.16259754490995 * S_MntGoldProds + 0.11590070773645 * S_MntMeatProducts + 0.28201604995327 * 
S_NumCatalogPurchases + -0.0106712941301 * S_NumDealsPurchases + 0.44937825968958 * S_NumWebVisitsMonth + 0.00709750447129 * S_RFMstat + -0.47138460185175 * S_Recency + -0.07776231003236 * S_Teenhome + -0.02330056365233 * S_Year_Birth ;
52015     +   H1x1_1  = H1x1_1  +    -0.29133741090287 * Marital_StatusDivorced
52016     +          +     -0.2248578245828 * Marital_StatusMarried
52017     +          +     0.07509958702397 * Marital_StatusSingle
52018     +          +    -0.12991422082545 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.29133741090287 * Marital_StatusDivorced + -0.2248578245828 * Marital_StatusMarried + 0.07509958702397 * Marital_StatusSingle + -0.12991422082545 * Marital_StatusTogether ;
52019     +   H1x1_2  = H1x1_2  +     -1.1074732716993 * Marital_StatusDivorced
52020     +          +     0.45662921783631 * Marital_StatusMarried
52021     +          +     -0.7587900494362 * Marital_StatusSingle
52022     +          +     0.91918379082777 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.1074732716993 * Marital_StatusDivorced + 0.45662921783631 * Marital_StatusMarried + -0.7587900494362 * Marital_StatusSingle + 0.91918379082777 * Marital_StatusTogether ;
52023     +   H1x1_3  = H1x1_3  +    -0.00289956415432 * Marital_StatusDivorced
52024     +          +     0.48232640763102 * Marital_StatusMarried
52025     +          +    -0.26767355443511 * Marital_StatusSingle
52026     +          +     0.26207298280723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00289956415432 * Marital_StatusDivorced + 0.48232640763102 * Marital_StatusMarried + -0.26767355443511 * Marital_StatusSingle + 0.26207298280723 * Marital_StatusTogether ;
52027     +   H1x1_4  = H1x1_4  +    -0.33422568214247 * Marital_StatusDivorced
52028     +          +       0.692510056964 * Marital_StatusMarried
52029     +          +    -0.62467969689335 * Marital_StatusSingle
52030     +          +     0.57377256791387 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.33422568214247 * Marital_StatusDivorced + 0.692510056964 * Marital_StatusMarried + -0.62467969689335 * Marital_StatusSingle + 0.57377256791387 * Marital_StatusTogether ;
52031     +   H1x1_5  = H1x1_5  +     0.08963617061236 * Marital_StatusDivorced
52032     +          +    -0.12414433690654 * Marital_StatusMarried
52033     +          +     0.01287765001755 * Marital_StatusSingle
52034     +          +    -0.08087882377532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.08963617061236 * Marital_StatusDivorced + -0.12414433690654 * Marital_StatusMarried + 0.01287765001755 * Marital_StatusSingle + -0.08087882377532 * Marital_StatusTogether ;
52035     +   H1x1_1  =    -1.91971008925725 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91971008925725 + H1x1_1 ;
52036     +   H1x1_2  =     0.32368735038167 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32368735038167 + H1x1_2 ;
52037     +   H1x1_3  =    -1.01494899635831 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.01494899635831 + H1x1_3 ;
52038     +   H1x1_4  =     0.37995275511318 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.37995275511318 + H1x1_4 ;
52039     +   H1x1_5  =     0.85001953980369 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.85001953980369 + H1x1_5 ;
52040     +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
52041     +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
52042     +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
52043     +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
52044     +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
52045     +END;
MPRINT(EM_DIAGRAM):   END;
52046     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
52047     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
52048     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
52049     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
52050     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
52051     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
52052     +END;
MPRINT(EM_DIAGRAM):   END;
52053     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
52054     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
52055     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
52056     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
52057     +   P_DepVar1  =     70.1947351743048 * H1x1_1  +     37.5347968698288 * H1x1_2
52058     +          +     63.5093925909107 * H1x1_3  +    -88.4297436279603 * H1x1_4
52059     +          +     56.9032773964405 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 70.1947351743048 * H1x1_1 + 37.5347968698288 * H1x1_2 + 63.5093925909107 * H1x1_3 + -88.4297436279603 * H1x1_4 + 56.9032773964405 * H1x1_5 ;
52060     +   P_DepVar1  =     22.2427233048176 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 22.2427233048176 + P_DepVar1 ;
52061     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
52062     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
52063     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
52064     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
52065     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
52066     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
52067     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
52068     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
52069     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
52070     +END;
MPRINT(EM_DIAGRAM):   END;
52071     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
52072     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
52073     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
52074     +END;
MPRINT(EM_DIAGRAM):   END;
52075     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
52076     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
52077     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
52078     +END;
MPRINT(EM_DIAGRAM):   END;
52079     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
52080     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
52081     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
52082     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
52083     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
52084     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
52085     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
52086     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
52087     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
52088     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
52089     +END;
MPRINT(EM_DIAGRAM):   END;
52090     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
52091     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
52092     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
52093     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
52094      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
52095      quit;
52096      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
52097      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
52098      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
52099      retain ID 2 Node "AutoNeural41";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural41";
52100      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
52101      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1140 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1140 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52102      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
52103      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
52104      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1140 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1140 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52105      proc sort data=EMWS8.AutoNeural41_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural41_variableset out=_temp2(keep=NAME CREATOR);
52106      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
52107      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL41_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

52108      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
52109      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
52110      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
52111      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52112      proc contents data=EMWS8.AutoNeural41_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural41_train out=_meta(keep=NAME) noprint;
52113      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

52114      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
52115      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
52116      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52117      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
52118      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
52119      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
52120      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52121      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
52122      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 576 rows and 5 columns.

52123      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52124      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
52125      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 576 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 576 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

52126      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
52127      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
52128      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
52129     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
52130     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
52131     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
52132     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
52133     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
52134     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
52135      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
52136      quit;
52137      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
52138      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
52139      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
52140      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
52141      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
52142      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

52143      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
52144      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
52145      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52146      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
52147      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
52148      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52149      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
52150      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
52151      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
52152      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52153      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
52154      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

52155      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
52156      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
52157      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52158      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
52159      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
52160      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
52161      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52162      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
52163      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

52164      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52165      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
52166      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 580 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52167      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
52168      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
52169      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
52170     +
52171     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
52172     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
MPRINT(EM_DIAGRAM):   Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
52173     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
52174     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
52175     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
52176     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
52177     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
52178      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
52179      quit;
52180      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
52181      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
52182      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
52183      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
52184      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
52185      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52186      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
52187      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
52188      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

52189      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
52190      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
52191      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52192      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
52193      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
52194      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
52195      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52196      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
52197      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

52198      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
52199      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
52200      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52201      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
52202      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
52203      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
52204      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52205      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
52206      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

52207      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

52208      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
52209      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 619 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52210      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
52211      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
52212      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
52213     +
52214     +
52215     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
52216     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
52217     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
52218     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
52219     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
52220     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
52221     +
52222     +
52223     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
52224     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
52225     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
52226     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
52227     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
52228     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
52229     +
52230     +
52231     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
52232     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
52233     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
52234     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
52235     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
52236     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
52237     +
52238     +
52239     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
52240     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
52241     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
52242     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
52243     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
52244     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
52245     +
52246     +
52247     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
52248     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
52249     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
52250     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
52251     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
52252     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
52253     +
52254     +
52255     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
52256     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
52257     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
52258     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
52259     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
52260     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
52261     +
52262     +
52263     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
52264     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
52265     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
52266     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
52267     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
52268     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
52269     +
52270     +
52271     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
52272     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
52273     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
52274     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
52275     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
52276     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
52277     +if
52278     +_FILTERNORM1 not in ( '.')
52279     + and
52280     +_FILTERNORM2 not in ( '.')
52281     + and
52282     +_FILTERNORM3 not in ( '.')
52283     + and
52284     +_FILTERNORM4 not in ( '.')
52285     + and
52286     +_FILTERNORM5 not in ( '.')
52287     + and
52288     +_FILTERNORM6 not in ( '.')
52289     + and
52290     +_FILTERNORM7 not in ( ' ')
52291     + and
52292     +_FILTERNORM8 not in ( ' ')
52293     +and
52294     +( Dt_Customer ne .)
52295     +and ( Income ne . and (Income<=107000))
52296     +and ( Kidhome ne .)
52297     +and ( MntFishProducts ne .)
52298     +and ( MntFruits ne .)
52299     +and ( MntGoldProds ne .)
52300     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
52301     +and ( MntSweetProducts ne .)
52302     +and ( MntWines ne .)
52303     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
52304     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
52305     +and ( NumStorePurchases ne .)
52306     +and ( NumWebPurchases ne .)
52307     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
52308     +and ( Recency ne .)
52309     +and ( Teenhome ne .)
52310     +and ( Year_Birth ne .)
52311     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and _FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and _FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 
not in ( ' ') and ( Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne . and (MntMeatProducts<=964)) and ( MntSweetProducts ne 
.) and ( MntWines ne .) and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( NumWebVisitsMonth ne . and 
(NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne .) and ( Year_Birth ne .) then do;
52312     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
52313     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
52314     +end;
MPRINT(EM_DIAGRAM):   end;
52315     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
52316     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
52317      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
52318      quit;
52319      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
52320      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
52321      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
52322      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
52323      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
52324      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52325      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
52326      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
52327      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

52328      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
52329      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
52330      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52331      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
52332      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
52333      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
52334      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52335      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
52336      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

52337      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
52338      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
52339      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52340      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
52341      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
52342      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
52343      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

52344      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
52345      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

52346      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52347      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
52348      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 685 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52349      %macro varDept(fcmpdata=,id=);
52350      %global nobs&id scoreFlag&id;
52351      %let scoreFlag&id = 0;
52352      %if &id=1 or ^&fcmpStart %then %do;
52353      proc sort data=&fcmpdata out=_temp&id nodupkey;
52354      by NAME;
52355      where id=&id and LHS in( %let j=1;
52356      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
52357      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
52358      "&var" %let j = %eval(&j+1);
52359      %end;
52360      );
52361      run;
52362      %let dsid = %sysfunc(open(_temp&id));
52363      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
52364      %let dsid = %sysfunc(close(&dsid));
52365      %if &&nobs&id %then %do;
52366      %let scoreFlag&id = 1;
52367      %let fcmpStart = 1;
52368      %end;
52369      %else %let fcmpStart = 0;
52370      %end;
52371      %else %do;
52372      proc sort data=&fcmpdata out=_tempid;
52373      where id=&id;
52374      by LHS;
52375      run;
52376      %let dsid = %sysfunc(open(_tempid));
52377      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
52378      %let dsid = %sysfunc(close(&dsid));
52379      %if ^&&nobs&id %then %do;
52380      proc datasets lib=work nolist;
52381      delete _tempid;
52382      run;
52383      quit;
52384      %end;
52385      %else %do;
52386      data _tempAll;
52387      set %let j=%eval(&id-1);
52388      %do x=1 %to &j;
52389      %if &&nobs&x %then %do;
52390      _temp&x %end;
52391      %end;
52392      ;
52393      run;
52394      proc sql;
52395      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
52396      quit;
52397      data _temp&id;
52398      set _temp&id;
52399      where LHS ne '' and NAME ne '' and Node ne '';
52400      run;
52401      proc datasets lib=work nolist;
52402      delete _tempAll;
52403      run;
52404      %let dsid = %sysfunc(open(_temp&id));
52405      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
52406      %let dsid = %sysfunc(close(&dsid));
52407      %if ^&&nobs&id %then %do;
52408      proc datasets lib=work nolist;
52409      delete _temp&id;
52410      run;
52411      quit;
52412      %end;
52413      %else %do;
52414      %let scoreFlag&id = 1;
52415      data _temp&id;
52416      set _temp&id;
52417      where LHS ne NAME and node ne '';
52418      run;
52419      %let dsid = %sysfunc(open(_temp&id));
52420      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
52421      %let dsid = %sysfunc(close(&dsid));
52422      %if ^&&nobs&id %then %do;
52423      proc datasets lib=work nolist;
52424      delete _temp&id;
52425      run;
52426      quit;
52427      %end;
52428      %else %do;
52429      proc sort data=_temp&id nodupkey;
52430      by LHS NAME;
52431      run;
52432      %end;
52433      %end;
52434      %end;
52435      %end;
52436      %mend varDept;
52437      %macro optCode(outdata=fcmpdata);
52438      %global fcmpStart;
52439      %let fcmpStart = 0;
52440      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
52441      %let NumNodes=9;
52442      %do k=1 %to &NumNodes;
52443      %vardept(fcmpdata=&outdata, id=&k);
52444      %end;
52445      %mend optCode;
52446      %optcode(outData=EMWS8.Ensmbl57_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 77 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 56 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 21 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 21 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 21 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 21 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 47 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

52447      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas";
52448      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
52449      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas.
52450     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
52451     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
52452     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
52453     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
52454     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
52455     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
52456     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
52457     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
52458     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
52459     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
52460     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
52461     +LENGTH _WARN_ $4
52462     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
52463     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
52464     +
52465     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
52466     +
52467     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
52468     +
52469     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
52470     +
52471     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
52472     +
52473     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
52474     +
52475     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
52476     +
52477     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
52478     +
52479     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
52480     +
52481     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
52482     +
52483     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
52484     +
52485     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
52486     +
52487     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
52488     +
52489     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
52490     +
52491     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
52492     +
52493     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
52494     +
52495     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
52496     +
52497     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
52498     +
52499     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
52500     +
52501     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
52502     +
52503     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
52504     +
52505     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
52506     +
52507     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
52508     +
52509     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
52510     +
52511     +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
52512     +
52513     +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
52514     +
52515     +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
52516     +
52517     +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
52518     +
52519     +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
52520     +
52521     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
52522     +
52523     +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
52524     +
52525     +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
52526     +
52527     +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
52528     +
52529     +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
52530     +
52531     +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
52532     +
52533     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
52534     +
52535     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
52536     +
52537     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
52538     +
52539     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
52540     +
52541     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
52542     +
52543     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
52544     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
52545     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
52546     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
52547     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
52548     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
52549     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
52550     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
52551     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
52552     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
52553     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
52554     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
52555     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
52556     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
52557     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
52558     +end;
MPRINT(EM_DIAGRAM):   end;
52559     +else do;
MPRINT(EM_DIAGRAM):   else do;
52560     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
52561     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
52562     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
52563     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
52564     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
52565     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
52566     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
52567     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
52568     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
52569     +         end;
MPRINT(EM_DIAGRAM):   end;
52570     +         else do;
MPRINT(EM_DIAGRAM):   else do;
52571     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
52572     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
52573     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
52574     +            end;
MPRINT(EM_DIAGRAM):   end;
52575     +         end;
MPRINT(EM_DIAGRAM):   end;
52576     +      end;
MPRINT(EM_DIAGRAM):   end;
52577     +      else do;
MPRINT(EM_DIAGRAM):   else do;
52578     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
52579     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
52580     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
52581     +         end;
MPRINT(EM_DIAGRAM):   end;
52582     +      end;
MPRINT(EM_DIAGRAM):   end;
52583     +   end;
MPRINT(EM_DIAGRAM):   end;
52584     +   else do;
MPRINT(EM_DIAGRAM):   else do;
52585     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
52586     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
52587     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
52588     +      end;
MPRINT(EM_DIAGRAM):   end;
52589     +      else do;
MPRINT(EM_DIAGRAM):   else do;
52590     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
52591     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
52592     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
52593     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
52594     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
52595     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
52596     +         end;
MPRINT(EM_DIAGRAM):   end;
52597     +      end;
MPRINT(EM_DIAGRAM):   end;
52598     +   end;
MPRINT(EM_DIAGRAM):   end;
52599     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
52600     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
52601     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
52602     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
52603     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
52604     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
52605     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
52606     +   end;
MPRINT(EM_DIAGRAM):   end;
52607     +end;
MPRINT(EM_DIAGRAM):   end;
52608     +
52609     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
52610     +*** Checking missing input Interval
52611     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
52612     +
52613     +IF NMISS(
52614     +   AcceptedCmpTotal ,
52615     +   Frq ,
52616     +   Income ,
52617     +   Mnt ,
52618     +   MntGoldProds ,
52619     +   MntMeatProducts ,
52620     +   NumCatalogPurchases ,
52621     +   NumDealsPurchases ,
52622     +   NumWebVisitsMonth ,
52623     +   RFMstat ,
52624     +   Recency ,
52625     +   Teenhome ,
52626     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , Recency , Teenhome , Year_Birth ) THEN DO;
52627     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
52628     +
52629     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
52630     +END;
MPRINT(EM_DIAGRAM):   END;
52631     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
52632     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
52633     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
52634     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
52635     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
52636     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
52637     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
52638     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
52639     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
52640     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
52641     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
52642     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
52643     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
52644     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
52645     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
52646     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
52647     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
52648     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
52649     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
52650     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
52651     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
52652     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
52653     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
52654     +END;
MPRINT(EM_DIAGRAM):   END;
52655     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
52656     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
52657     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
52658     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
52659     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
52660     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
52661     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
52662     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
52663     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
52664     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
52665     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
52666     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
52667     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
52668     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
52669     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
52670     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
52671     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
52672     +   ELSE S_NumCatalogPurchases
52673     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
52674     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
52675     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
52676     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
52677     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
52678     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
52679     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
52680     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
52681     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
52682     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
52683     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
52684     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
52685     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
52686     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
52687     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
52688     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
52689     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
52690     +END;
MPRINT(EM_DIAGRAM):   END;
52691     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
52692     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
52693     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
52694     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
52695     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
52696     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
52697     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
52698     +   H1x1_1  =    -3.92905088817122 * S_AcceptedCmpTotal
52699     +          +    -4.76567955922662 * S_Frq  +    -3.20305851407308 * S_Income
52700     +          +     10.4290156082038 * S_Mnt  +     2.82139196372317 *
52701     +        S_MntGoldProds  +    -4.54749029525518 * S_MntMeatProducts
52702     +          +    -12.1201262560598 * S_NumCatalogPurchases
52703     +          +    -7.64265449386917 * S_NumDealsPurchases
52704     +          +     -0.8154661733691 * S_NumWebVisitsMonth
52705     +          +    -7.34275682075933 * S_RFMstat  +     3.14025498790893 *
52706     +        S_Recency  +     3.79010135100643 * S_Teenhome
52707     +          +    -1.18831354068466 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.92905088817122 * S_AcceptedCmpTotal + -4.76567955922662 * S_Frq + -3.20305851407308 * S_Income + 10.4290156082038 * S_Mnt + 2.82139196372317 * S_MntGoldProds + -4.54749029525518 * S_MntMeatProducts + -12.1201262560598 * 
S_NumCatalogPurchases + -7.64265449386917 * S_NumDealsPurchases + -0.8154661733691 * S_NumWebVisitsMonth + -7.34275682075933 * S_RFMstat + 3.14025498790893 * S_Recency + 3.79010135100643 * S_Teenhome + -1.18831354068466 * S_Year_Birth ;
52708     +   H1x1_2  =    -4.72019183577823 * S_AcceptedCmpTotal
52709     +          +     5.14902294151494 * S_Frq  +     -2.7967028726716 * S_Income
52710     +          +     7.90170532262596 * S_Mnt  +    -0.27896242131344 *
52711     +        S_MntGoldProds  +    -6.13177486713562 * S_MntMeatProducts
52712     +          +    -5.64377068696071 * S_NumCatalogPurchases
52713     +          +       1.315880732417 * S_NumDealsPurchases
52714     +          +    -7.12689902819995 * S_NumWebVisitsMonth
52715     +          +     -0.1333171344564 * S_RFMstat  +     8.57178329047956 *
52716     +        S_Recency  +     2.42655161118896 * S_Teenhome
52717     +          +     0.41845495922131 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -4.72019183577823 * S_AcceptedCmpTotal + 5.14902294151494 * S_Frq + -2.7967028726716 * S_Income + 7.90170532262596 * S_Mnt + -0.27896242131344 * S_MntGoldProds + -6.13177486713562 * S_MntMeatProducts + -5.64377068696071 * 
S_NumCatalogPurchases + 1.315880732417 * S_NumDealsPurchases + -7.12689902819995 * S_NumWebVisitsMonth + -0.1333171344564 * S_RFMstat + 8.57178329047956 * S_Recency + 2.42655161118896 * S_Teenhome + 0.41845495922131 * S_Year_Birth ;
52718     +   H1x1_3  =    -3.47660178529996 * S_AcceptedCmpTotal
52719     +          +     6.36750571377116 * S_Frq  +    -3.65638554203354 * S_Income
52720     +          +     5.03085244876136 * S_Mnt  +    -1.53184712146016 *
52721     +        S_MntGoldProds  +    -11.4803326240536 * S_MntMeatProducts
52722     +          +    -7.71653347900468 * S_NumCatalogPurchases
52723     +          +    -2.29382480020793 * S_NumDealsPurchases
52724     +          +    -3.92350308032578 * S_NumWebVisitsMonth
52725     +          +      0.1666173174602 * S_RFMstat  +      5.5545699438819 *
52726     +        S_Recency  +     1.88830044274756 * S_Teenhome
52727     +          +     0.36177301880441 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.47660178529996 * S_AcceptedCmpTotal + 6.36750571377116 * S_Frq + -3.65638554203354 * S_Income + 5.03085244876136 * S_Mnt + -1.53184712146016 * S_MntGoldProds + -11.4803326240536 * S_MntMeatProducts + -7.71653347900468 * 
S_NumCatalogPurchases + -2.29382480020793 * S_NumDealsPurchases + -3.92350308032578 * S_NumWebVisitsMonth + 0.1666173174602 * S_RFMstat + 5.5545699438819 * S_Recency + 1.88830044274756 * S_Teenhome + 0.36177301880441 * S_Year_Birth ;
52728     +   H1x1_4  =     3.46597508500309 * S_AcceptedCmpTotal
52729     +          +    -3.55913679518365 * S_Frq  +     -3.8279864380535 * S_Income
52730     +          +     4.37031319397754 * S_Mnt  +     0.25558899887189 *
52731     +        S_MntGoldProds  +     1.30937005137526 * S_MntMeatProducts
52732     +          +     0.50178849511862 * S_NumCatalogPurchases
52733     +          +     3.33915340676542 * S_NumDealsPurchases
52734     +          +     2.99171363234904 * S_NumWebVisitsMonth
52735     +          +    -1.10860117011224 * S_RFMstat  +     -5.2144291963152 *
52736     +        S_Recency  +     1.84778865722952 * S_Teenhome
52737     +          +     1.48264084751626 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.46597508500309 * S_AcceptedCmpTotal + -3.55913679518365 * S_Frq + -3.8279864380535 * S_Income + 4.37031319397754 * S_Mnt + 0.25558899887189 * S_MntGoldProds + 1.30937005137526 * S_MntMeatProducts + 0.50178849511862 * 
S_NumCatalogPurchases + 3.33915340676542 * S_NumDealsPurchases + 2.99171363234904 * S_NumWebVisitsMonth + -1.10860117011224 * S_RFMstat + -5.2144291963152 * S_Recency + 1.84778865722952 * S_Teenhome + 1.48264084751626 * S_Year_Birth ;
52738     +   H1x1_5  =    -3.28077802512331 * S_AcceptedCmpTotal
52739     +          +     3.26112701694144 * S_Frq  +    -3.51257256391539 * S_Income
52740     +          +     -13.277904245629 * S_Mnt  +    -0.08185099069039 *
52741     +        S_MntGoldProds  +      2.6349809613264 * S_MntMeatProducts
52742     +          +    -5.23430097842472 * S_NumCatalogPurchases
52743     +          +    -1.25644862473488 * S_NumDealsPurchases
52744     +          +     -3.0943337340276 * S_NumWebVisitsMonth
52745     +          +     0.96429102250453 * S_RFMstat  +     4.60373013139143 *
52746     +        S_Recency  +     1.52557456336148 * S_Teenhome
52747     +          +     0.00287578113165 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.28077802512331 * S_AcceptedCmpTotal + 3.26112701694144 * S_Frq + -3.51257256391539 * S_Income + -13.277904245629 * S_Mnt + -0.08185099069039 * S_MntGoldProds + 2.6349809613264 * S_MntMeatProducts + -5.23430097842472 * 
S_NumCatalogPurchases + -1.25644862473488 * S_NumDealsPurchases + -3.0943337340276 * S_NumWebVisitsMonth + 0.96429102250453 * S_RFMstat + 4.60373013139143 * S_Recency + 1.52557456336148 * S_Teenhome + 0.00287578113165 * S_Year_Birth ;
52748     +   H1x1_1  = H1x1_1  +     1.77432710413329 * Marital_StatusDivorced
52749     +          +     5.12496303990022 * Marital_StatusMarried
52750     +          +    -7.61364369696186 * Marital_StatusSingle
52751     +          +     2.78937374370395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.77432710413329 * Marital_StatusDivorced + 5.12496303990022 * Marital_StatusMarried + -7.61364369696186 * Marital_StatusSingle + 2.78937374370395 * Marital_StatusTogether ;
52752     +   H1x1_2  = H1x1_2  +    -5.49070434381597 * Marital_StatusDivorced
52753     +          +     7.65332274940308 * Marital_StatusMarried
52754     +          +    -5.13332947688313 * Marital_StatusSingle
52755     +          +     8.25159601985572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -5.49070434381597 * Marital_StatusDivorced + 7.65332274940308 * Marital_StatusMarried + -5.13332947688313 * Marital_StatusSingle + 8.25159601985572 * Marital_StatusTogether ;
52756     +   H1x1_3  = H1x1_3  +     1.57910552070948 * Marital_StatusDivorced
52757     +          +     7.95162959069432 * Marital_StatusMarried
52758     +          +    -6.10797604390061 * Marital_StatusSingle
52759     +          +     2.98577039618027 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.57910552070948 * Marital_StatusDivorced + 7.95162959069432 * Marital_StatusMarried + -6.10797604390061 * Marital_StatusSingle + 2.98577039618027 * Marital_StatusTogether ;
52760     +   H1x1_4  = H1x1_4  +     3.65411081783958 * Marital_StatusDivorced
52761     +          +     5.45977621823616 * Marital_StatusMarried
52762     +          +    -10.3527985391218 * Marital_StatusSingle
52763     +          +     4.66094015963389 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 3.65411081783958 * Marital_StatusDivorced + 5.45977621823616 * Marital_StatusMarried + -10.3527985391218 * Marital_StatusSingle + 4.66094015963389 * Marital_StatusTogether ;
52764     +   H1x1_5  = H1x1_5  +     1.57864743151562 * Marital_StatusDivorced
52765     +          +     8.15909630638185 * Marital_StatusMarried
52766     +          +    -5.88497367282032 * Marital_StatusSingle
52767     +          +     3.05474303626666 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.57864743151562 * Marital_StatusDivorced + 8.15909630638185 * Marital_StatusMarried + -5.88497367282032 * Marital_StatusSingle + 3.05474303626666 * Marital_StatusTogether ;
52768     +   H1x1_1  =    -1.55078746609233 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.55078746609233 + H1x1_1 ;
52769     +   H1x1_2  =     5.40474806112383 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 5.40474806112383 + H1x1_2 ;
52770     +   H1x1_3  =     11.2733164995662 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 11.2733164995662 + H1x1_3 ;
52771     +   H1x1_4  =    -7.78487963966384 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.78487963966384 + H1x1_4 ;
52772     +   H1x1_5  =      3.8784406873535 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.8784406873535 + H1x1_5 ;
52773     +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
52774     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
52775     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
52776     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
52777     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
52778     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
52779     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
52780     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
52781     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
52782     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
52783     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
52784     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
52785     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
52786     +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
52787     +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
52788     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
52789     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
52790     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
52791     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
52792     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
52793     +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
52794     +END;
MPRINT(EM_DIAGRAM):   END;
52795     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
52796     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
52797     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
52798     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
52799     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
52800     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
52801     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
52802     +END;
MPRINT(EM_DIAGRAM):   END;
52803     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
52804     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
52805     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
52806     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
52807     +   H1x2_1  =     0.07453146398445 * S_AcceptedCmpTotal
52808     +          +     0.17438368465616 * S_Frq  +     0.97121905855093 * S_Income
52809     +          +    -0.15757686261675 * S_Mnt  +     0.28678754855648 *
52810     +        S_MntGoldProds  +     2.03999655184815 * S_MntMeatProducts
52811     +          +      0.8747576336553 * S_NumCatalogPurchases
52812     +          +    -0.23551985234916 * S_NumDealsPurchases
52813     +          +     0.83901499225112 * S_NumWebVisitsMonth
52814     +          +     -0.7643570473353 * S_RFMstat  +      0.0823609346051 *
52815     +        S_Recency  +    -0.38340703993831 * S_Teenhome
52816     +          +     1.16037573405943 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.07453146398445 * S_AcceptedCmpTotal + 0.17438368465616 * S_Frq + 0.97121905855093 * S_Income + -0.15757686261675 * S_Mnt + 0.28678754855648 * S_MntGoldProds + 2.03999655184815 * S_MntMeatProducts + 0.8747576336553 * 
S_NumCatalogPurchases + -0.23551985234916 * S_NumDealsPurchases + 0.83901499225112 * S_NumWebVisitsMonth + -0.7643570473353 * S_RFMstat + 0.0823609346051 * S_Recency + -0.38340703993831 * S_Teenhome + 1.16037573405943 * S_Year_Birth ;
52817     +   H1x2_2  =      -2.285017059996 * S_AcceptedCmpTotal
52818     +          +    -0.29646095672581 * S_Frq  +     -3.5024410668082 * S_Income
52819     +          +    -2.12091528193185 * S_Mnt  +    -1.48506012188621 *
52820     +        S_MntGoldProds  +    -1.38316375865608 * S_MntMeatProducts
52821     +          +    -0.99107054453387 * S_NumCatalogPurchases
52822     +          +    -0.68379823410573 * S_NumDealsPurchases
52823     +          +    -1.67939872609259 * S_NumWebVisitsMonth
52824     +          +     0.49106697429539 * S_RFMstat  +    -0.01117108974211 *
52825     +        S_Recency  +    -1.65033346710833 * S_Teenhome
52826     +          +    -1.03897054098621 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.285017059996 * S_AcceptedCmpTotal + -0.29646095672581 * S_Frq + -3.5024410668082 * S_Income + -2.12091528193185 * S_Mnt + -1.48506012188621 * S_MntGoldProds + -1.38316375865608 * S_MntMeatProducts + -0.99107054453387 * 
S_NumCatalogPurchases + -0.68379823410573 * S_NumDealsPurchases + -1.67939872609259 * S_NumWebVisitsMonth + 0.49106697429539 * S_RFMstat + -0.01117108974211 * S_Recency + -1.65033346710833 * S_Teenhome + -1.03897054098621 * S_Year_Birth ;
52827     +   H1x2_3  =      2.9562672276462 * S_AcceptedCmpTotal
52828     +          +    -0.19531439441895 * S_Frq  +      0.3125078734463 * S_Income
52829     +          +     -1.6099267525002 * S_Mnt  +    -0.36573328507463 *
52830     +        S_MntGoldProds  +     -0.3392853565114 * S_MntMeatProducts
52831     +          +      1.4506330104932 * S_NumCatalogPurchases
52832     +          +     0.20085283861849 * S_NumDealsPurchases
52833     +          +     2.37974383924154 * S_NumWebVisitsMonth
52834     +          +     -0.1106906484364 * S_RFMstat  +    -3.36701384866793 *
52835     +        S_Recency  +     0.60726269989058 * S_Teenhome
52836     +          +     0.51474814816173 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.9562672276462 * S_AcceptedCmpTotal + -0.19531439441895 * S_Frq + 0.3125078734463 * S_Income + -1.6099267525002 * S_Mnt + -0.36573328507463 * S_MntGoldProds + -0.3392853565114 * S_MntMeatProducts + 1.4506330104932 * 
S_NumCatalogPurchases + 0.20085283861849 * S_NumDealsPurchases + 2.37974383924154 * S_NumWebVisitsMonth + -0.1106906484364 * S_RFMstat + -3.36701384866793 * S_Recency + 0.60726269989058 * S_Teenhome + 0.51474814816173 * S_Year_Birth ;
52837     +   H1x2_4  =    -3.19375607611292 * S_AcceptedCmpTotal
52838     +          +    -1.28391627024222 * S_Frq  +     1.20886875907222 * S_Income
52839     +          +     0.33241907162962 * S_Mnt  +     0.81131852742978 *
52840     +        S_MntGoldProds  +     0.66955477854362 * S_MntMeatProducts
52841     +          +    -0.79952426911069 * S_NumCatalogPurchases
52842     +          +    -0.70571099772216 * S_NumDealsPurchases
52843     +          +    -0.32158728049114 * S_NumWebVisitsMonth
52844     +          +    -0.83126265863782 * S_RFMstat  +     1.49830148501327 *
52845     +        S_Recency  +     2.29389047813725 * S_Teenhome
52846     +          +     0.04615513391624 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -3.19375607611292 * S_AcceptedCmpTotal + -1.28391627024222 * S_Frq + 1.20886875907222 * S_Income + 0.33241907162962 * S_Mnt + 0.81131852742978 * S_MntGoldProds + 0.66955477854362 * S_MntMeatProducts + -0.79952426911069 * 
S_NumCatalogPurchases + -0.70571099772216 * S_NumDealsPurchases + -0.32158728049114 * S_NumWebVisitsMonth + -0.83126265863782 * S_RFMstat + 1.49830148501327 * S_Recency + 2.29389047813725 * S_Teenhome + 0.04615513391624 * S_Year_Birth ;
52847     +   H1x2_5  =     -0.6002425930451 * S_AcceptedCmpTotal
52848     +          +    -0.86762771301251 * S_Frq  +    -0.57793933969656 * S_Income
52849     +          +     0.41975808190408 * S_Mnt  +    -0.13242897225011 *
52850     +        S_MntGoldProds  +    -1.44402585881872 * S_MntMeatProducts
52851     +          +    -0.41491605544255 * S_NumCatalogPurchases
52852     +          +     0.49374983047507 * S_NumDealsPurchases
52853     +          +    -1.38692718220359 * S_NumWebVisitsMonth
52854     +          +    -0.07580803465143 * S_RFMstat  +      0.4152505934779 *
52855     +        S_Recency  +     1.29605991841828 * S_Teenhome
52856     +          +     2.17160180088465 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.6002425930451 * S_AcceptedCmpTotal + -0.86762771301251 * S_Frq + -0.57793933969656 * S_Income + 0.41975808190408 * S_Mnt + -0.13242897225011 * S_MntGoldProds + -1.44402585881872 * S_MntMeatProducts + -0.41491605544255 * 
S_NumCatalogPurchases + 0.49374983047507 * S_NumDealsPurchases + -1.38692718220359 * S_NumWebVisitsMonth + -0.07580803465143 * S_RFMstat + 0.4152505934779 * S_Recency + 1.29605991841828 * S_Teenhome + 2.17160180088465 * S_Year_Birth ;
52857     +   H1x2_1  = H1x2_1  +     0.77674448865903 * Marital_StatusDivorced
52858     +          +    -1.29227303709115 * Marital_StatusMarried
52859     +          +     0.71446782242025 * Marital_StatusSingle
52860     +          +     0.55295867102727 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.77674448865903 * Marital_StatusDivorced + -1.29227303709115 * Marital_StatusMarried + 0.71446782242025 * Marital_StatusSingle + 0.55295867102727 * Marital_StatusTogether ;
52861     +   H1x2_2  = H1x2_2  +     -0.1845223373129 * Marital_StatusDivorced
52862     +          +      2.0815223604364 * Marital_StatusMarried
52863     +          +     0.79462013188709 * Marital_StatusSingle
52864     +          +     0.20668835346022 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.1845223373129 * Marital_StatusDivorced + 2.0815223604364 * Marital_StatusMarried + 0.79462013188709 * Marital_StatusSingle + 0.20668835346022 * Marital_StatusTogether ;
52865     +   H1x2_3  = H1x2_3  +    -1.02774258915556 * Marital_StatusDivorced
52866     +          +     0.44769683627357 * Marital_StatusMarried
52867     +          +     1.09957357551209 * Marital_StatusSingle
52868     +          +     0.98246644516303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.02774258915556 * Marital_StatusDivorced + 0.44769683627357 * Marital_StatusMarried + 1.09957357551209 * Marital_StatusSingle + 0.98246644516303 * Marital_StatusTogether ;
52869     +   H1x2_4  = H1x2_4  +     1.02578628033933 * Marital_StatusDivorced
52870     +          +    -0.71096069683657 * Marital_StatusMarried
52871     +          +    -0.46849808497503 * Marital_StatusSingle
52872     +          +    -0.50186472808298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.02578628033933 * Marital_StatusDivorced + -0.71096069683657 * Marital_StatusMarried + -0.46849808497503 * Marital_StatusSingle + -0.50186472808298 * Marital_StatusTogether ;
52873     +   H1x2_5  = H1x2_5  +     0.83514340443964 * Marital_StatusDivorced
52874     +          +     0.21000014809177 * Marital_StatusMarried
52875     +          +    -1.05959388759825 * Marital_StatusSingle
52876     +          +     -0.8202251717493 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83514340443964 * Marital_StatusDivorced + 0.21000014809177 * Marital_StatusMarried + -1.05959388759825 * Marital_StatusSingle + -0.8202251717493 * Marital_StatusTogether ;
52877     +   H1x2_1  =     0.66244588339698 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.66244588339698 + H1x2_1 ;
52878     +   H1x2_2  =     0.36306484617725 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.36306484617725 + H1x2_2 ;
52879     +   H1x2_3  =     0.00299288434405 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.00299288434405 + H1x2_3 ;
52880     +   H1x2_4  =     0.32206403734945 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.32206403734945 + H1x2_4 ;
52881     +   H1x2_5  =     0.48514364636978 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.48514364636978 + H1x2_5 ;
52882     +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
52883     +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
52884     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
52885     +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
52886     +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
52887     +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
52888     +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
52889     +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
52890     +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
52891     +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
52892     +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
52893     +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
52894     +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
52895     +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
52896     +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
52897     +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
52898     +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
52899     +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
52900     +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
52901     +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
52902     +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
52903     +END;
MPRINT(EM_DIAGRAM):   END;
52904     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
52905     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
52906     +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
52907     +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
52908     +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
52909     +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
52910     +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
52911     +END;
MPRINT(EM_DIAGRAM):   END;
52912     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
52913     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
52914     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
52915     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
52916     +   H2x1_1  =     5.34062678932931 * H1x1_1  +     7.71604112891627 * H1x1_2
52917     +          +     7.54377937186103 * H1x1_3  +    -5.90943850663966 * H1x1_4
52918     +          +    -6.06522890475814 * H1x1_5  +    -7.94470945127082 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 5.34062678932931 * H1x1_1 + 7.71604112891627 * H1x1_2 + 7.54377937186103 * H1x1_3 + -5.90943850663966 * H1x1_4 + -6.06522890475814 * H1x1_5 + -7.94470945127082 * H1x1_6 ;
52919     +   H2x1_2  =      1.1479485803131 * H1x1_1  +      1.4482835893576 * H1x1_2
52920     +          +    -0.15220644394866 * H1x1_3  +    -1.30000676790854 * H1x1_4
52921     +          +    -0.49333138568117 * H1x1_5  +    -1.96124154717115 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.1479485803131 * H1x1_1 + 1.4482835893576 * H1x1_2 + -0.15220644394866 * H1x1_3 + -1.30000676790854 * H1x1_4 + -0.49333138568117 * H1x1_5 + -1.96124154717115 * H1x1_6 ;
52922     +   H2x1_3  =     2.12915623251937 * H1x1_1  +     4.39530013559682 * H1x1_2
52923     +          +     3.38050961443392 * H1x1_3  +    -5.12182301645649 * H1x1_4
52924     +          +    -3.74697079524831 * H1x1_5  +    -5.26174801543685 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 2.12915623251937 * H1x1_1 + 4.39530013559682 * H1x1_2 + 3.38050961443392 * H1x1_3 + -5.12182301645649 * H1x1_4 + -3.74697079524831 * H1x1_5 + -5.26174801543685 * H1x1_6 ;
52925     +   H2x1_4  =     0.54854810712303 * H1x1_1  +      1.6486650469525 * H1x1_2
52926     +          +     1.84563084742932 * H1x1_3  +    -2.43710509923951 * H1x1_4
52927     +          +     0.03038093596976 * H1x1_5  +    -1.34566786751269 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.54854810712303 * H1x1_1 + 1.6486650469525 * H1x1_2 + 1.84563084742932 * H1x1_3 + -2.43710509923951 * H1x1_4 + 0.03038093596976 * H1x1_5 + -1.34566786751269 * H1x1_6 ;
52928     +   H2x1_5  =     0.89845480530178 * H1x1_1  +     3.19967829294268 * H1x1_2
52929     +          +     3.58592569542093 * H1x1_3  +    -3.76417733693485 * H1x1_4
52930     +          +     -4.1568039640005 * H1x1_5  +    -4.42895004794637 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.89845480530178 * H1x1_1 + 3.19967829294268 * H1x1_2 + 3.58592569542093 * H1x1_3 + -3.76417733693485 * H1x1_4 + -4.1568039640005 * H1x1_5 + -4.42895004794637 * H1x1_6 ;
52931     +   H2x1_1  = H2x1_1  +     0.44545310705069 * H1x2_1
52932     +          +     2.72471946580982 * H1x2_2  +    -1.42856846603531 * H1x2_3
52933     +          +     0.25357521888082 * H1x2_4  +    -1.25902268741411 * H1x2_5
52934     +          +    -1.70956044020454 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.44545310705069 * H1x2_1 + 2.72471946580982 * H1x2_2 + -1.42856846603531 * H1x2_3 + 0.25357521888082 * H1x2_4 + -1.25902268741411 * H1x2_5 + -1.70956044020454 * H1x2_6 ;
52935     +   H2x1_2  = H2x1_2  +      0.9465771639497 * H1x2_1
52936     +          +    -0.41110969777104 * H1x2_2  +    -0.92834816798625 * H1x2_3
52937     +          +     -1.7337755087443 * H1x2_4  +     -1.2522448489667 * H1x2_5
52938     +          +    -0.90111756793979 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.9465771639497 * H1x2_1 + -0.41110969777104 * H1x2_2 + -0.92834816798625 * H1x2_3 + -1.7337755087443 * H1x2_4 + -1.2522448489667 * H1x2_5 + -0.90111756793979 * H1x2_6 ;
52939     +   H2x1_3  = H2x1_3  +    -0.22355080983787 * H1x2_1
52940     +          +    -0.18918346120545 * H1x2_2  +    -1.50592518382263 * H1x2_3
52941     +          +    -1.00672320426732 * H1x2_4  +    -1.09510249463921 * H1x2_5
52942     +          +     0.83089577154267 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.22355080983787 * H1x2_1 + -0.18918346120545 * H1x2_2 + -1.50592518382263 * H1x2_3 + -1.00672320426732 * H1x2_4 + -1.09510249463921 * H1x2_5 + 0.83089577154267 * H1x2_6 ;
52943     +   H2x1_4  = H2x1_4  +    -0.74505363577487 * H1x2_1
52944     +          +     0.41544439689687 * H1x2_2  +    -0.11467073820729 * H1x2_3
52945     +          +    -2.16913690278917 * H1x2_4  +     1.07667011067144 * H1x2_5
52946     +          +    -0.21291665093094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.74505363577487 * H1x2_1 + 0.41544439689687 * H1x2_2 + -0.11467073820729 * H1x2_3 + -2.16913690278917 * H1x2_4 + 1.07667011067144 * H1x2_5 + -0.21291665093094 * H1x2_6 ;
52947     +   H2x1_5  = H2x1_5  +    -0.22639397151159 * H1x2_1
52948     +          +     0.59976504799464 * H1x2_2  +    -1.19497833953318 * H1x2_3
52949     +          +     0.40681132265012 * H1x2_4  +    -1.18142813082248 * H1x2_5
52950     +          +     0.28627108561279 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.22639397151159 * H1x2_1 + 0.59976504799464 * H1x2_2 + -1.19497833953318 * H1x2_3 + 0.40681132265012 * H1x2_4 + -1.18142813082248 * H1x2_5 + 0.28627108561279 * H1x2_6 ;
52951     +   H2x1_1  =     0.80837297417824 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.80837297417824 + H2x1_1 ;
52952     +   H2x1_2  =    -3.15918654233626 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -3.15918654233626 + H2x1_2 ;
52953     +   H2x1_3  =     -1.1148455701308 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.1148455701308 + H2x1_3 ;
52954     +   H2x1_4  =    -2.43637271773179 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.43637271773179 + H2x1_4 ;
52955     +   H2x1_5  =     -1.5068240097035 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.5068240097035 + H2x1_5 ;
52956     +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
52957     +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
52958     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
52959     +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
52960     +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
52961     +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
52962     +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
52963     +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
52964     +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
52965     +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
52966     +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
52967     +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
52968     +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
52969     +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
52970     +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
52971     +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
52972     +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
52973     +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
52974     +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
52975     +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
52976     +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
52977     +END;
MPRINT(EM_DIAGRAM):   END;
52978     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
52979     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
52980     +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
52981     +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
52982     +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
52983     +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
52984     +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
52985     +END;
MPRINT(EM_DIAGRAM):   END;
52986     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
52987     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
52988     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
52989     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
52990     +   P_DepVar1  =    -14.9408685199347 * H2x1_1  +     1.48309430635242 * H2x1_2
52991     +          +     -4.3496216751271 * H2x1_3  +     0.01239249943556 * H2x1_4
52992     +          +    -6.27169756239783 * H2x1_5  +     2.70843493957574 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.9408685199347 * H2x1_1 + 1.48309430635242 * H2x1_2 + -4.3496216751271 * H2x1_3 + 0.01239249943556 * H2x1_4 + -6.27169756239783 * H2x1_5 + 2.70843493957574 * H2x1_6 ;
52993     +   P_DepVar1  =     5.67267561171469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.67267561171469 + P_DepVar1 ;
52994     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
52995     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
52996     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
52997     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
52998     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
52999     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
53000     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
53001     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
53002     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
53003     +END;
MPRINT(EM_DIAGRAM):   END;
53004     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
53005     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
53006     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
53007     +END;
MPRINT(EM_DIAGRAM):   END;
53008     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
53009     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
53010     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
53011     +END;
MPRINT(EM_DIAGRAM):   END;
53012     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53013     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
53014     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53015     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
53016     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
53017     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
53018     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
53019     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
53020     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
53021     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
53022     +END;
MPRINT(EM_DIAGRAM):   END;
53023     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
53024     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
53025     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
53026     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
53027      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
53028      quit;
53029      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
53030      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
53031      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
53032      retain ID 2 Node "AutoNeural42";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural42";
53033      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
53034      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3812 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3812 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

53035      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
53036      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
53037      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3812 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3812 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53038      proc sort data=EMWS8.AutoNeural42_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural42_variableset out=_temp2(keep=NAME CREATOR);
53039      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
53040      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL42_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53041      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
53042      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
53043      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
53044      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

53045      proc contents data=EMWS8.AutoNeural42_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural42_train out=_meta(keep=NAME) noprint;
53046      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

53047      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
53048      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
53049      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

53050      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
53051      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
53052      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
53053      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53054      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
53055      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1780 rows and 5 columns.

53056      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53057      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
53058      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1780 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1780 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

53059      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
53060      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
53061      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
53062     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
53063     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
53064     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
53065     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
53066     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
53067     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
53068      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
53069      quit;
53070      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
53071      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
53072      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
53073      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
53074      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
53075      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53076      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
53077      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
53078      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53079      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
53080      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
53081      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53082      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
53083      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
53084      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
53085      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

53086      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
53087      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

53088      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
53089      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
53090      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53091      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
53092      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
53093      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
53094      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53095      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
53096      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

53097      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

53098      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
53099      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1784 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53100      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
53101      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
53102      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
53103     +
53104     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
53105     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
MPRINT(EM_DIAGRAM):   Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
53106     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
53107     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
53108     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
53109     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
53110     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
53111      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
53112      quit;
53113      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
53114      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
53115      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
53116      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
53117      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
53118      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53119      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
53120      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
53121      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

53122      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
53123      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
53124      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53125      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
53126      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
53127      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
53128      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53129      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
53130      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53131      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
53132      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
53133      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53134      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
53135      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
53136      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
53137      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53138      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
53139      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

53140      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53141      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
53142      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1823 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

53143      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
53144      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
53145      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
53146     +
53147     +
53148     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
53149     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
53150     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
53151     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
53152     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
53153     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
53154     +
53155     +
53156     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
53157     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
53158     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
53159     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
53160     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
53161     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
53162     +
53163     +
53164     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
53165     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
53166     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
53167     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
53168     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
53169     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
53170     +
53171     +
53172     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
53173     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
53174     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
53175     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
53176     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
53177     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
53178     +
53179     +
53180     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
53181     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
53182     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
53183     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
53184     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
53185     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
53186     +
53187     +
53188     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
53189     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
53190     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
53191     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
53192     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
53193     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
53194     +
53195     +
53196     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
53197     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
53198     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
53199     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
53200     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
53201     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
53202     +
53203     +
53204     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
53205     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
53206     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
53207     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
53208     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
53209     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
53210     +if
53211     +_FILTERNORM1 not in ( '.')
53212     + and
53213     +_FILTERNORM2 not in ( '.')
53214     + and
53215     +_FILTERNORM3 not in ( '.')
53216     + and
53217     +_FILTERNORM4 not in ( '.')
53218     + and
53219     +_FILTERNORM5 not in ( '.')
53220     + and
53221     +_FILTERNORM6 not in ( '.')
53222     + and
53223     +_FILTERNORM7 not in ( ' ')
53224     + and
53225     +_FILTERNORM8 not in ( ' ')
53226     +and
53227     +( Dt_Customer ne .)
53228     +and ( Income ne . and (Income<=107000))
53229     +and ( Kidhome ne .)
53230     +and ( MntFishProducts ne .)
53231     +and ( MntFruits ne .)
53232     +and ( MntGoldProds ne .)
53233     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
53234     +and ( MntSweetProducts ne .)
53235     +and ( MntWines ne .)
53236     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
53237     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
53238     +and ( NumStorePurchases ne .)
53239     +and ( NumWebPurchases ne .)
53240     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
53241     +and ( Recency ne .)
53242     +and ( Teenhome ne .)
53243     +and ( Year_Birth ne .)
53244     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and _FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and _FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 
not in ( ' ') and ( Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne . and (MntMeatProducts<=964)) and ( MntSweetProducts ne 
.) and ( MntWines ne .) and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( NumWebVisitsMonth ne . and 
(NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne .) and ( Year_Birth ne .) then do;
53245     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
53246     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
53247     +end;
MPRINT(EM_DIAGRAM):   end;
53248     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
53249     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
53250      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
53251      quit;
53252      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
53253      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
53254      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
53255      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
53256      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
53257      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53258      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
53259      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
53260      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53261      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
53262      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
53263      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

53264      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
53265      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
53266      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
53267      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53268      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
53269      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

53270      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
53271      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
53272      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53273      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
53274      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
53275      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
53276      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53277      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
53278      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

53279      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

53280      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
53281      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 1889 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

53282      %macro varDept(fcmpdata=,id=);
53283      %global nobs&id scoreFlag&id;
53284      %let scoreFlag&id = 0;
53285      %if &id=1 or ^&fcmpStart %then %do;
53286      proc sort data=&fcmpdata out=_temp&id nodupkey;
53287      by NAME;
53288      where id=&id and LHS in( %let j=1;
53289      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
53290      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
53291      "&var" %let j = %eval(&j+1);
53292      %end;
53293      );
53294      run;
53295      %let dsid = %sysfunc(open(_temp&id));
53296      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
53297      %let dsid = %sysfunc(close(&dsid));
53298      %if &&nobs&id %then %do;
53299      %let scoreFlag&id = 1;
53300      %let fcmpStart = 1;
53301      %end;
53302      %else %let fcmpStart = 0;
53303      %end;
53304      %else %do;
53305      proc sort data=&fcmpdata out=_tempid;
53306      where id=&id;
53307      by LHS;
53308      run;
53309      %let dsid = %sysfunc(open(_tempid));
53310      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
53311      %let dsid = %sysfunc(close(&dsid));
53312      %if ^&&nobs&id %then %do;
53313      proc datasets lib=work nolist;
53314      delete _tempid;
53315      run;
53316      quit;
53317      %end;
53318      %else %do;
53319      data _tempAll;
53320      set %let j=%eval(&id-1);
53321      %do x=1 %to &j;
53322      %if &&nobs&x %then %do;
53323      _temp&x %end;
53324      %end;
53325      ;
53326      run;
53327      proc sql;
53328      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
53329      quit;
53330      data _temp&id;
53331      set _temp&id;
53332      where LHS ne '' and NAME ne '' and Node ne '';
53333      run;
53334      proc datasets lib=work nolist;
53335      delete _tempAll;
53336      run;
53337      %let dsid = %sysfunc(open(_temp&id));
53338      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
53339      %let dsid = %sysfunc(close(&dsid));
53340      %if ^&&nobs&id %then %do;
53341      proc datasets lib=work nolist;
53342      delete _temp&id;
53343      run;
53344      quit;
53345      %end;
53346      %else %do;
53347      %let scoreFlag&id = 1;
53348      data _temp&id;
53349      set _temp&id;
53350      where LHS ne NAME and node ne '';
53351      run;
53352      %let dsid = %sysfunc(open(_temp&id));
53353      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
53354      %let dsid = %sysfunc(close(&dsid));
53355      %if ^&&nobs&id %then %do;
53356      proc datasets lib=work nolist;
53357      delete _temp&id;
53358      run;
53359      quit;
53360      %end;
53361      %else %do;
53362      proc sort data=_temp&id nodupkey;
53363      by LHS NAME;
53364      run;
53365      %end;
53366      %end;
53367      %end;
53368      %end;
53369      %mend varDept;
53370      %macro optCode(outdata=fcmpdata);
53371      %global fcmpStart;
53372      %let fcmpStart = 0;
53373      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
53374      %let NumNodes=9;
53375      %do k=1 %to &NumNodes;
53376      %vardept(fcmpdata=&outdata, id=&k);
53377      %end;
53378      %mend optCode;
53379      %optcode(outData=EMWS8.Ensmbl57_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 116 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 82 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 60 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.25 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

53380      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMPUBLISHSCORE.sas";
53381      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
53382      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMPUBLISHSCORE.sas.
53383     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
53384     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
53385     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
53386     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
53387     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
53388     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
53389     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
53390     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
53391     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
53392     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
53393     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
53394     +LENGTH _WARN_ $4
53395     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
53396     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
53397     +
53398     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
53399     +
53400     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
53401     +
53402     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
53403     +
53404     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
53405     +
53406     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
53407     +
53408     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
53409     +
53410     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
53411     +
53412     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
53413     +
53414     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
53415     +
53416     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
53417     +
53418     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
53419     +
53420     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
53421     +
53422     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
53423     +
53424     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
53425     +
53426     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
53427     +
53428     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
53429     +
53430     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
53431     +
53432     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
53433     +
53434     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
53435     +
53436     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
53437     +
53438     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
53439     +
53440     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
53441     +
53442     +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
53443     +
53444     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
53445     +
53446     +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
53447     +
53448     +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
53449     +
53450     +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
53451     +
53452     +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
53453     +
53454     +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
53455     +
53456     +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
53457     +
53458     +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
53459     +
53460     +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
53461     +
53462     +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
53463     +
53464     +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
53465     +
53466     +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
53467     +
53468     +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
53469     +
53470     +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
53471     +
53472     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
53473     +
53474     +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
53475     +
53476     +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
53477     +
53478     +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
53479     +
53480     +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
53481     +
53482     +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
53483     +
53484     +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
53485     +
53486     +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
53487     +
53488     +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
53489     +
53490     +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
53491     +
53492     +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
53493     +
53494     +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
53495     +
53496     +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
53497     +
53498     +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
53499     +
53500     +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
53501     +
53502     +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
53503     +
53504     +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
53505     +
53506     +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
53507     +
53508     +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
53509     +
53510     +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
53511     +
53512     +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
53513     +
53514     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
53515     +
53516     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
53517     +
53518     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
53519     +
53520     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
53521     +
53522     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
53523     +
53524     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
53525     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
53526     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
53527     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
53528     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
53529     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
53530     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
53531     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
53532     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
53533     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
53534     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
53535     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
53536     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
53537     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
53538     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
53539     +end;
MPRINT(EM_DIAGRAM):   end;
53540     +else do;
MPRINT(EM_DIAGRAM):   else do;
53541     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
53542     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
53543     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
53544     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
53545     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
53546     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
53547     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
53548     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
53549     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
53550     +         end;
MPRINT(EM_DIAGRAM):   end;
53551     +         else do;
MPRINT(EM_DIAGRAM):   else do;
53552     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
53553     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
53554     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
53555     +            end;
MPRINT(EM_DIAGRAM):   end;
53556     +         end;
MPRINT(EM_DIAGRAM):   end;
53557     +      end;
MPRINT(EM_DIAGRAM):   end;
53558     +      else do;
MPRINT(EM_DIAGRAM):   else do;
53559     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
53560     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
53561     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
53562     +         end;
MPRINT(EM_DIAGRAM):   end;
53563     +      end;
MPRINT(EM_DIAGRAM):   end;
53564     +   end;
MPRINT(EM_DIAGRAM):   end;
53565     +   else do;
MPRINT(EM_DIAGRAM):   else do;
53566     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
53567     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
53568     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
53569     +      end;
MPRINT(EM_DIAGRAM):   end;
53570     +      else do;
MPRINT(EM_DIAGRAM):   else do;
53571     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
53572     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
53573     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
53574     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
53575     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
53576     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
53577     +         end;
MPRINT(EM_DIAGRAM):   end;
53578     +      end;
MPRINT(EM_DIAGRAM):   end;
53579     +   end;
MPRINT(EM_DIAGRAM):   end;
53580     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
53581     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
53582     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
53583     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
53584     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
53585     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
53586     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
53587     +   end;
MPRINT(EM_DIAGRAM):   end;
53588     +end;
MPRINT(EM_DIAGRAM):   end;
53589     +
53590     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53591     +*** Checking missing input Interval
53592     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
53593     +
53594     +IF NMISS(
53595     +   AcceptedCmpTotal ,
53596     +   Frq ,
53597     +   Income ,
53598     +   Mnt ,
53599     +   MntGoldProds ,
53600     +   MntMeatProducts ,
53601     +   NumCatalogPurchases ,
53602     +   NumDealsPurchases ,
53603     +   NumWebVisitsMonth ,
53604     +   RFMstat ,
53605     +   Recency ,
53606     +   Teenhome ,
53607     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , Recency , Teenhome , Year_Birth ) THEN DO;
53608     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
53609     +
53610     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
53611     +END;
MPRINT(EM_DIAGRAM):   END;
53612     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53613     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
53614     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53615     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
53616     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
53617     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
53618     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
53619     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
53620     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
53621     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
53622     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
53623     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
53624     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
53625     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
53626     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
53627     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
53628     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
53629     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
53630     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
53631     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
53632     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
53633     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
53634     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
53635     +END;
MPRINT(EM_DIAGRAM):   END;
53636     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
53637     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
53638     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
53639     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
53640     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
53641     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
53642     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
53643     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
53644     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
53645     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
53646     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
53647     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
53648     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
53649     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
53650     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
53651     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
53652     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
53653     +   ELSE S_NumCatalogPurchases
53654     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
53655     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
53656     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
53657     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
53658     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
53659     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
53660     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
53661     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
53662     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
53663     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
53664     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
53665     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
53666     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
53667     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
53668     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
53669     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
53670     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
53671     +END;
MPRINT(EM_DIAGRAM):   END;
53672     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53673     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
53674     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53675     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53676     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
53677     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53678     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
53679     +   H1x1_1  =    -0.29618919413806 * S_AcceptedCmpTotal
53680     +          +     0.65621237028757 * S_Frq  +     0.03418945976327 * S_Income
53681     +          +     1.44880456678399 * S_Mnt  +     0.74166093949552 *
53682     +        S_MntGoldProds  +     1.02706876663519 * S_MntMeatProducts
53683     +          +    -0.82528424139262 * S_NumCatalogPurchases
53684     +          +      0.5929046965244 * S_NumDealsPurchases
53685     +          +    -0.52362488197384 * S_NumWebVisitsMonth
53686     +          +     0.37882892269923 * S_RFMstat  +     2.12340115344155 *
53687     +        S_Recency  +    -0.83670225777249 * S_Teenhome
53688     +          +     0.53976656905831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.29618919413806 * S_AcceptedCmpTotal + 0.65621237028757 * S_Frq + 0.03418945976327 * S_Income + 1.44880456678399 * S_Mnt + 0.74166093949552 * S_MntGoldProds + 1.02706876663519 * S_MntMeatProducts + -0.82528424139262 * 
S_NumCatalogPurchases + 0.5929046965244 * S_NumDealsPurchases + -0.52362488197384 * S_NumWebVisitsMonth + 0.37882892269923 * S_RFMstat + 2.12340115344155 * S_Recency + -0.83670225777249 * S_Teenhome + 0.53976656905831 * S_Year_Birth ;
53689     +   H1x1_2  =     0.29962396390652 * S_AcceptedCmpTotal
53690     +          +     -2.5902198016826 * S_Frq  +    -0.18776639473475 * S_Income
53691     +          +    -2.77524252217737 * S_Mnt  +     0.96018065616836 *
53692     +        S_MntGoldProds  +     3.16907172523474 * S_MntMeatProducts
53693     +          +    -0.60117742307807 * S_NumCatalogPurchases
53694     +          +     1.09806082321711 * S_NumDealsPurchases
53695     +          +     1.26617704720444 * S_NumWebVisitsMonth
53696     +          +     1.08444062320284 * S_RFMstat  +     1.05523311776937 *
53697     +        S_Recency  +     -0.2630764341314 * S_Teenhome
53698     +          +    -0.42373178164016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29962396390652 * S_AcceptedCmpTotal + -2.5902198016826 * S_Frq + -0.18776639473475 * S_Income + -2.77524252217737 * S_Mnt + 0.96018065616836 * S_MntGoldProds + 3.16907172523474 * S_MntMeatProducts + -0.60117742307807 * 
S_NumCatalogPurchases + 1.09806082321711 * S_NumDealsPurchases + 1.26617704720444 * S_NumWebVisitsMonth + 1.08444062320284 * S_RFMstat + 1.05523311776937 * S_Recency + -0.2630764341314 * S_Teenhome + -0.42373178164016 * S_Year_Birth ;
53699     +   H1x1_3  =     2.31041583450369 * S_AcceptedCmpTotal
53700     +          +    -1.96810851023784 * S_Frq  +     0.93795839333407 * S_Income
53701     +          +    -1.55337331547216 * S_Mnt  +     1.13417428979776 *
53702     +        S_MntGoldProds  +     3.70573651287077 * S_MntMeatProducts
53703     +          +     1.63075268570383 * S_NumCatalogPurchases
53704     +          +     0.62057902628545 * S_NumDealsPurchases
53705     +          +     1.85944172136218 * S_NumWebVisitsMonth
53706     +          +     0.51474936656536 * S_RFMstat  +    -2.17922024885571 *
53707     +        S_Recency  +    -0.78663308544854 * S_Teenhome
53708     +          +    -0.08719031066365 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.31041583450369 * S_AcceptedCmpTotal + -1.96810851023784 * S_Frq + 0.93795839333407 * S_Income + -1.55337331547216 * S_Mnt + 1.13417428979776 * S_MntGoldProds + 3.70573651287077 * S_MntMeatProducts + 1.63075268570383 * 
S_NumCatalogPurchases + 0.62057902628545 * S_NumDealsPurchases + 1.85944172136218 * S_NumWebVisitsMonth + 0.51474936656536 * S_RFMstat + -2.17922024885571 * S_Recency + -0.78663308544854 * S_Teenhome + -0.08719031066365 * S_Year_Birth ;
53709     +   H1x1_4  =     -0.0390409024382 * S_AcceptedCmpTotal
53710     +          +     2.11606776858073 * S_Frq  +     -0.3817450995856 * S_Income
53711     +          +     0.40531492299483 * S_Mnt  +     0.54341985868017 *
53712     +        S_MntGoldProds  +    -5.50809183295151 * S_MntMeatProducts
53713     +          +    -2.59032878085972 * S_NumCatalogPurchases
53714     +          +    -0.44146008176644 * S_NumDealsPurchases
53715     +          +     1.16377649939583 * S_NumWebVisitsMonth
53716     +          +    -0.40950445519308 * S_RFMstat  +     1.44701615363875 *
53717     +        S_Recency  +    -0.44721505258044 * S_Teenhome
53718     +          +    -0.53780522701747 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.0390409024382 * S_AcceptedCmpTotal + 2.11606776858073 * S_Frq + -0.3817450995856 * S_Income + 0.40531492299483 * S_Mnt + 0.54341985868017 * S_MntGoldProds + -5.50809183295151 * S_MntMeatProducts + -2.59032878085972 * 
S_NumCatalogPurchases + -0.44146008176644 * S_NumDealsPurchases + 1.16377649939583 * S_NumWebVisitsMonth + -0.40950445519308 * S_RFMstat + 1.44701615363875 * S_Recency + -0.44721505258044 * S_Teenhome + -0.53780522701747 * S_Year_Birth ;
53719     +   H1x1_5  =    -0.96249689474011 * S_AcceptedCmpTotal
53720     +          +     1.18171571446591 * S_Frq  +     0.15643078933994 * S_Income
53721     +          +      1.1855275327594 * S_Mnt  +    -0.31882188338593 *
53722     +        S_MntGoldProds  +    -0.17799046807331 * S_MntMeatProducts
53723     +          +    -2.88423926492169 * S_NumCatalogPurchases
53724     +          +     0.76448279454687 * S_NumDealsPurchases
53725     +          +     0.63782718366339 * S_NumWebVisitsMonth
53726     +          +    -1.52311206450608 * S_RFMstat  +     2.66138322599513 *
53727     +        S_Recency  +     0.19809045233143 * S_Teenhome
53728     +          +    -0.11944673598308 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.96249689474011 * S_AcceptedCmpTotal + 1.18171571446591 * S_Frq + 0.15643078933994 * S_Income + 1.1855275327594 * S_Mnt + -0.31882188338593 * S_MntGoldProds + -0.17799046807331 * S_MntMeatProducts + -2.88423926492169 * 
S_NumCatalogPurchases + 0.76448279454687 * S_NumDealsPurchases + 0.63782718366339 * S_NumWebVisitsMonth + -1.52311206450608 * S_RFMstat + 2.66138322599513 * S_Recency + 0.19809045233143 * S_Teenhome + -0.11944673598308 * S_Year_Birth ;
53729     +   H1x1_6  =     1.48018319811202 * S_AcceptedCmpTotal
53730     +          +    -2.35201132061873 * S_Frq  +     1.49549206730687 * S_Income
53731     +          +    -0.92311571755706 * S_Mnt  +    -0.17036386789536 *
53732     +        S_MntGoldProds  +     2.42959371021324 * S_MntMeatProducts
53733     +          +     1.71243370379543 * S_NumCatalogPurchases
53734     +          +     1.59034024362028 * S_NumDealsPurchases
53735     +          +     2.43090724707282 * S_NumWebVisitsMonth
53736     +          +    -1.84934930083177 * S_RFMstat  +    -1.10219728762745 *
53737     +        S_Recency  +    -1.20398234836557 * S_Teenhome
53738     +          +    -0.04071326663204 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.48018319811202 * S_AcceptedCmpTotal + -2.35201132061873 * S_Frq + 1.49549206730687 * S_Income + -0.92311571755706 * S_Mnt + -0.17036386789536 * S_MntGoldProds + 2.42959371021324 * S_MntMeatProducts + 1.71243370379543 * 
S_NumCatalogPurchases + 1.59034024362028 * S_NumDealsPurchases + 2.43090724707282 * S_NumWebVisitsMonth + -1.84934930083177 * S_RFMstat + -1.10219728762745 * S_Recency + -1.20398234836557 * S_Teenhome + -0.04071326663204 * S_Year_Birth ;
53739     +   H1x1_1  = H1x1_1  +    -1.53952272056325 * Marital_StatusDivorced
53740     +          +     1.90782989914192 * Marital_StatusMarried
53741     +          +    -1.16189886119693 * Marital_StatusSingle
53742     +          +     1.42717413956591 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.53952272056325 * Marital_StatusDivorced + 1.90782989914192 * Marital_StatusMarried + -1.16189886119693 * Marital_StatusSingle + 1.42717413956591 * Marital_StatusTogether ;
53743     +   H1x1_2  = H1x1_2  +     0.65814869063598 * Marital_StatusDivorced
53744     +          +     0.30468777490799 * Marital_StatusMarried
53745     +          +     0.61978761938746 * Marital_StatusSingle
53746     +          +    -0.78873321292122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.65814869063598 * Marital_StatusDivorced + 0.30468777490799 * Marital_StatusMarried + 0.61978761938746 * Marital_StatusSingle + -0.78873321292122 * Marital_StatusTogether ;
53747     +   H1x1_3  = H1x1_3  +      0.1292120736254 * Marital_StatusDivorced
53748     +          +    -1.73477859605124 * Marital_StatusMarried
53749     +          +     1.32595981126289 * Marital_StatusSingle
53750     +          +    -1.40161784211243 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.1292120736254 * Marital_StatusDivorced + -1.73477859605124 * Marital_StatusMarried + 1.32595981126289 * Marital_StatusSingle + -1.40161784211243 * Marital_StatusTogether ;
53751     +   H1x1_4  = H1x1_4  +     0.20617554754163 * Marital_StatusDivorced
53752     +          +     0.06077392213964 * Marital_StatusMarried
53753     +          +     0.21115279121703 * Marital_StatusSingle
53754     +          +    -0.61340758151821 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.20617554754163 * Marital_StatusDivorced + 0.06077392213964 * Marital_StatusMarried + 0.21115279121703 * Marital_StatusSingle + -0.61340758151821 * Marital_StatusTogether ;
53755     +   H1x1_5  = H1x1_5  +    -0.69141266071894 * Marital_StatusDivorced
53756     +          +    -0.24067068377767 * Marital_StatusMarried
53757     +          +      0.2728964145401 * Marital_StatusSingle
53758     +          +    -0.61614895252648 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.69141266071894 * Marital_StatusDivorced + -0.24067068377767 * Marital_StatusMarried + 0.2728964145401 * Marital_StatusSingle + -0.61614895252648 * Marital_StatusTogether ;
53759     +   H1x1_6  = H1x1_6  +    -0.81455860225062 * Marital_StatusDivorced
53760     +          +    -0.15640287278595 * Marital_StatusMarried
53761     +          +     0.54159395450762 * Marital_StatusSingle
53762     +          +    -0.43264862434738 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.81455860225062 * Marital_StatusDivorced + -0.15640287278595 * Marital_StatusMarried + 0.54159395450762 * Marital_StatusSingle + -0.43264862434738 * Marital_StatusTogether ;
53763     +   H1x1_1  =    -0.36385036888345 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.36385036888345 + H1x1_1 ;
53764     +   H1x1_2  =     0.02663558500629 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.02663558500629 + H1x1_2 ;
53765     +   H1x1_3  =    -3.50526409213811 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.50526409213811 + H1x1_3 ;
53766     +   H1x1_4  =     0.63048769294892 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.63048769294892 + H1x1_4 ;
53767     +   H1x1_5  =     1.21111796976731 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.21111796976731 + H1x1_5 ;
53768     +   H1x1_6  =    -1.76174187739611 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.76174187739611 + H1x1_6 ;
53769     +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
53770     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
53771     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7 );
53772     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
53773     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
53774     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
53775     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
53776     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
53777     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
53778     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
53779     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
53780     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
53781     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
53782     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
53783     +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
53784     +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
53785     +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
53786     +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
53787     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
53788     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
53789     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
53790     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
53791     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
53792     +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
53793     +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
53794     +END;
MPRINT(EM_DIAGRAM):   END;
53795     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
53796     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
53797     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
53798     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
53799     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
53800     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
53801     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
53802     +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
53803     +END;
MPRINT(EM_DIAGRAM):   END;
53804     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53805     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
53806     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53807     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
53808     +   H1x2_1  =     0.51589041180152 * S_AcceptedCmpTotal
53809     +          +     -0.6498311499195 * S_Frq  +    -1.08182644925044 * S_Income
53810     +          +    -1.19064228379044 * S_Mnt  +    -1.27287496888491 *
53811     +        S_MntGoldProds  +    -1.33897837883991 * S_MntMeatProducts
53812     +          +     0.14209124492657 * S_NumCatalogPurchases
53813     +          +    -1.31625106509803 * S_NumDealsPurchases
53814     +          +     2.35745588368331 * S_NumWebVisitsMonth
53815     +          +    -1.28657356976181 * S_RFMstat  +     0.25408650330935 *
53816     +        S_Recency  +     1.23527100408525 * S_Teenhome
53817     +          +    -1.87183507669176 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.51589041180152 * S_AcceptedCmpTotal + -0.6498311499195 * S_Frq + -1.08182644925044 * S_Income + -1.19064228379044 * S_Mnt + -1.27287496888491 * S_MntGoldProds + -1.33897837883991 * S_MntMeatProducts + 0.14209124492657 * 
S_NumCatalogPurchases + -1.31625106509803 * S_NumDealsPurchases + 2.35745588368331 * S_NumWebVisitsMonth + -1.28657356976181 * S_RFMstat + 0.25408650330935 * S_Recency + 1.23527100408525 * S_Teenhome + -1.87183507669176 * S_Year_Birth ;
53818     +   H1x2_2  =    -1.23424462482032 * S_AcceptedCmpTotal
53819     +          +     1.46358102529667 * S_Frq  +     1.75790517593121 * S_Income
53820     +          +      -0.424881586919 * S_Mnt  +     -0.9331242135447 *
53821     +        S_MntGoldProds  +     0.54942904780681 * S_MntMeatProducts
53822     +          +     1.18605040958794 * S_NumCatalogPurchases
53823     +          +    -0.89798157472835 * S_NumDealsPurchases
53824     +          +    -0.09236646871049 * S_NumWebVisitsMonth
53825     +          +    -1.29341547638046 * S_RFMstat  +     1.66853355984342 *
53826     +        S_Recency  +    -0.50770218335102 * S_Teenhome
53827     +          +    -1.07353749220663 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.23424462482032 * S_AcceptedCmpTotal + 1.46358102529667 * S_Frq + 1.75790517593121 * S_Income + -0.424881586919 * S_Mnt + -0.9331242135447 * S_MntGoldProds + 0.54942904780681 * S_MntMeatProducts + 1.18605040958794 * 
S_NumCatalogPurchases + -0.89798157472835 * S_NumDealsPurchases + -0.09236646871049 * S_NumWebVisitsMonth + -1.29341547638046 * S_RFMstat + 1.66853355984342 * S_Recency + -0.50770218335102 * S_Teenhome + -1.07353749220663 * S_Year_Birth ;
53828     +   H1x2_3  =     0.77624009560593 * S_AcceptedCmpTotal
53829     +          +    -0.52739784343536 * S_Frq  +     0.03893675518591 * S_Income
53830     +          +     2.17484611279249 * S_Mnt  +    -0.17952459801341 *
53831     +        S_MntGoldProds  +     0.34588410829653 * S_MntMeatProducts
53832     +          +    -1.53424308314822 * S_NumCatalogPurchases
53833     +          +    -0.80590323269981 * S_NumDealsPurchases
53834     +          +    -1.40104490662303 * S_NumWebVisitsMonth
53835     +          +     1.66586308350968 * S_RFMstat  +    -0.47553614859646 *
53836     +        S_Recency  +     0.96086280467056 * S_Teenhome
53837     +          +    -1.77672596886127 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.77624009560593 * S_AcceptedCmpTotal + -0.52739784343536 * S_Frq + 0.03893675518591 * S_Income + 2.17484611279249 * S_Mnt + -0.17952459801341 * S_MntGoldProds + 0.34588410829653 * S_MntMeatProducts + -1.53424308314822 * 
S_NumCatalogPurchases + -0.80590323269981 * S_NumDealsPurchases + -1.40104490662303 * S_NumWebVisitsMonth + 1.66586308350968 * S_RFMstat + -0.47553614859646 * S_Recency + 0.96086280467056 * S_Teenhome + -1.77672596886127 * S_Year_Birth ;
53838     +   H1x2_4  =     0.58137966699652 * S_AcceptedCmpTotal
53839     +          +      1.4040418295752 * S_Frq  +    -0.24832517883948 * S_Income
53840     +          +    -0.61141424736299 * S_Mnt  +     0.20471254162898 *
53841     +        S_MntGoldProds  +     0.44314427658514 * S_MntMeatProducts
53842     +          +    -1.25862219948587 * S_NumCatalogPurchases
53843     +          +     1.95015982914109 * S_NumDealsPurchases
53844     +          +     0.64320281589594 * S_NumWebVisitsMonth
53845     +          +     0.79165027029588 * S_RFMstat  +     0.66988554846863 *
53846     +        S_Recency  +    -0.00184949563812 * S_Teenhome
53847     +          +    -0.90548552271817 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.58137966699652 * S_AcceptedCmpTotal + 1.4040418295752 * S_Frq + -0.24832517883948 * S_Income + -0.61141424736299 * S_Mnt + 0.20471254162898 * S_MntGoldProds + 0.44314427658514 * S_MntMeatProducts + -1.25862219948587 * 
S_NumCatalogPurchases + 1.95015982914109 * S_NumDealsPurchases + 0.64320281589594 * S_NumWebVisitsMonth + 0.79165027029588 * S_RFMstat + 0.66988554846863 * S_Recency + -0.00184949563812 * S_Teenhome + -0.90548552271817 * S_Year_Birth ;
53848     +   H1x2_5  =      0.5931660751286 * S_AcceptedCmpTotal
53849     +          +     0.58645753040534 * S_Frq  +     1.15236353289832 * S_Income
53850     +          +     0.33853280493921 * S_Mnt  +    -0.34695797092699 *
53851     +        S_MntGoldProds  +     2.24596975589576 * S_MntMeatProducts
53852     +          +     0.30573893169917 * S_NumCatalogPurchases
53853     +          +     0.93169788380491 * S_NumDealsPurchases
53854     +          +     0.04516037232248 * S_NumWebVisitsMonth
53855     +          +     0.56461660789519 * S_RFMstat  +    -0.73850030816559 *
53856     +        S_Recency  +      0.1429120113072 * S_Teenhome
53857     +          +     0.57728849891114 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.5931660751286 * S_AcceptedCmpTotal + 0.58645753040534 * S_Frq + 1.15236353289832 * S_Income + 0.33853280493921 * S_Mnt + -0.34695797092699 * S_MntGoldProds + 2.24596975589576 * S_MntMeatProducts + 0.30573893169917 * 
S_NumCatalogPurchases + 0.93169788380491 * S_NumDealsPurchases + 0.04516037232248 * S_NumWebVisitsMonth + 0.56461660789519 * S_RFMstat + -0.73850030816559 * S_Recency + 0.1429120113072 * S_Teenhome + 0.57728849891114 * S_Year_Birth ;
53858     +   H1x2_6  =    -0.61564457275113 * S_AcceptedCmpTotal
53859     +          +     0.25558411574917 * S_Frq  +      0.1079727446126 * S_Income
53860     +          +    -1.20360633098467 * S_Mnt  +     1.72797334940475 *
53861     +        S_MntGoldProds  +    -1.65210775934619 * S_MntMeatProducts
53862     +          +      0.2704422632168 * S_NumCatalogPurchases
53863     +          +      2.3389342094366 * S_NumDealsPurchases
53864     +          +     0.01076302858809 * S_NumWebVisitsMonth
53865     +          +    -2.36764292681458 * S_RFMstat  +     1.10196533018748 *
53866     +        S_Recency  +     0.68455094392125 * S_Teenhome
53867     +          +     1.22292273319927 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.61564457275113 * S_AcceptedCmpTotal + 0.25558411574917 * S_Frq + 0.1079727446126 * S_Income + -1.20360633098467 * S_Mnt + 1.72797334940475 * S_MntGoldProds + -1.65210775934619 * S_MntMeatProducts + 0.2704422632168 * 
S_NumCatalogPurchases + 2.3389342094366 * S_NumDealsPurchases + 0.01076302858809 * S_NumWebVisitsMonth + -2.36764292681458 * S_RFMstat + 1.10196533018748 * S_Recency + 0.68455094392125 * S_Teenhome + 1.22292273319927 * S_Year_Birth ;
53868     +   H1x2_1  = H1x2_1  +    -2.04566893512123 * Marital_StatusDivorced
53869     +          +      0.8255833782513 * Marital_StatusMarried
53870     +          +    -0.48959165020896 * Marital_StatusSingle
53871     +          +     2.83781371812098 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.04566893512123 * Marital_StatusDivorced + 0.8255833782513 * Marital_StatusMarried + -0.48959165020896 * Marital_StatusSingle + 2.83781371812098 * Marital_StatusTogether ;
53872     +   H1x2_2  = H1x2_2  +     0.67000557197818 * Marital_StatusDivorced
53873     +          +    -0.36405013930464 * Marital_StatusMarried
53874     +          +    -0.11895921007246 * Marital_StatusSingle
53875     +          +    -0.94713834966834 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.67000557197818 * Marital_StatusDivorced + -0.36405013930464 * Marital_StatusMarried + -0.11895921007246 * Marital_StatusSingle + -0.94713834966834 * Marital_StatusTogether ;
53876     +   H1x2_3  = H1x2_3  +     0.26597574107473 * Marital_StatusDivorced
53877     +          +    -1.38902793752658 * Marital_StatusMarried
53878     +          +     0.47104623132568 * Marital_StatusSingle
53879     +          +    -0.55354712799424 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26597574107473 * Marital_StatusDivorced + -1.38902793752658 * Marital_StatusMarried + 0.47104623132568 * Marital_StatusSingle + -0.55354712799424 * Marital_StatusTogether ;
53880     +   H1x2_4  = H1x2_4  +    -1.69625977318234 * Marital_StatusDivorced
53881     +          +     0.03793816986941 * Marital_StatusMarried
53882     +          +     0.32286910605532 * Marital_StatusSingle
53883     +          +    -1.44817209305758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.69625977318234 * Marital_StatusDivorced + 0.03793816986941 * Marital_StatusMarried + 0.32286910605532 * Marital_StatusSingle + -1.44817209305758 * Marital_StatusTogether ;
53884     +   H1x2_5  = H1x2_5  +     0.19745523338489 * Marital_StatusDivorced
53885     +          +    -0.60013237897988 * Marital_StatusMarried
53886     +          +    -1.54090744803073 * Marital_StatusSingle
53887     +          +    -2.24346446510302 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.19745523338489 * Marital_StatusDivorced + -0.60013237897988 * Marital_StatusMarried + -1.54090744803073 * Marital_StatusSingle + -2.24346446510302 * Marital_StatusTogether ;
53888     +   H1x2_6  = H1x2_6  +     0.47464108124928 * Marital_StatusDivorced
53889     +          +     2.39490119482132 * Marital_StatusMarried
53890     +          +     0.73080073298893 * Marital_StatusSingle
53891     +          +    -0.62296432915598 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.47464108124928 * Marital_StatusDivorced + 2.39490119482132 * Marital_StatusMarried + 0.73080073298893 * Marital_StatusSingle + -0.62296432915598 * Marital_StatusTogether ;
53892     +   H1x2_1  =     1.03099135229255 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.03099135229255 + H1x2_1 ;
53893     +   H1x2_2  =     -0.9436150278938 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9436150278938 + H1x2_2 ;
53894     +   H1x2_3  =    -0.17327523864686 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.17327523864686 + H1x2_3 ;
53895     +   H1x2_4  =     0.30103807123555 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.30103807123555 + H1x2_4 ;
53896     +   H1x2_5  =    -2.06815743640812 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -2.06815743640812 + H1x2_5 ;
53897     +   H1x2_6  =     1.90356790294644 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.90356790294644 + H1x2_6 ;
53898     +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
53899     +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
53900     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7 );
53901     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
53902     +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
53903     +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
53904     +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
53905     +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
53906     +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
53907     +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
53908     +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
53909     +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
53910     +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
53911     +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
53912     +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
53913     +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
53914     +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
53915     +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
53916     +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
53917     +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
53918     +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
53919     +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
53920     +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
53921     +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
53922     +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
53923     +END;
MPRINT(EM_DIAGRAM):   END;
53924     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
53925     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
53926     +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
53927     +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
53928     +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
53929     +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
53930     +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
53931     +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
53932     +END;
MPRINT(EM_DIAGRAM):   END;
53933     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53934     +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
53935     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53936     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
53937     +   H1x3_1  =    -0.02577999703823 * S_AcceptedCmpTotal
53938     +          +     1.15166430232754 * S_Frq  +     0.14876168620543 * S_Income
53939     +          +    -0.18380736633059 * S_Mnt  +     0.50048252433262 *
53940     +        S_MntGoldProds  +    -0.33191625929347 * S_MntMeatProducts
53941     +          +     2.25334156596167 * S_NumCatalogPurchases
53942     +          +     1.11206221926547 * S_NumDealsPurchases
53943     +          +    -0.86546062057987 * S_NumWebVisitsMonth
53944     +          +    -0.98321051175326 * S_RFMstat  +     1.25274008829299 *
53945     +        S_Recency  +    -1.57916593034924 * S_Teenhome
53946     +          +    -2.06345344469395 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02577999703823 * S_AcceptedCmpTotal + 1.15166430232754 * S_Frq + 0.14876168620543 * S_Income + -0.18380736633059 * S_Mnt + 0.50048252433262 * S_MntGoldProds + -0.33191625929347 * S_MntMeatProducts + 2.25334156596167 * 
S_NumCatalogPurchases + 1.11206221926547 * S_NumDealsPurchases + -0.86546062057987 * S_NumWebVisitsMonth + -0.98321051175326 * S_RFMstat + 1.25274008829299 * S_Recency + -1.57916593034924 * S_Teenhome + -2.06345344469395 * S_Year_Birth ;
53947     +   H1x3_2  =    -1.17329843303132 * S_AcceptedCmpTotal
53948     +          +     1.78916673039241 * S_Frq  +    -0.84674133842717 * S_Income
53949     +          +     0.28484675606294 * S_Mnt  +     0.63187019772354 *
53950     +        S_MntGoldProds  +    -0.96245535082151 * S_MntMeatProducts
53951     +          +    -0.72830662589886 * S_NumCatalogPurchases
53952     +          +    -1.43194640925705 * S_NumDealsPurchases
53953     +          +     0.27875145672985 * S_NumWebVisitsMonth
53954     +          +    -2.03430995128807 * S_RFMstat  +    -0.52413738058555 *
53955     +        S_Recency  +    -1.01056905981073 * S_Teenhome
53956     +          +     0.00830584207402 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.17329843303132 * S_AcceptedCmpTotal + 1.78916673039241 * S_Frq + -0.84674133842717 * S_Income + 0.28484675606294 * S_Mnt + 0.63187019772354 * S_MntGoldProds + -0.96245535082151 * S_MntMeatProducts + -0.72830662589886 * 
S_NumCatalogPurchases + -1.43194640925705 * S_NumDealsPurchases + 0.27875145672985 * S_NumWebVisitsMonth + -2.03430995128807 * S_RFMstat + -0.52413738058555 * S_Recency + -1.01056905981073 * S_Teenhome + 0.00830584207402 * S_Year_Birth ;
53957     +   H1x3_3  =    -1.51193899177395 * S_AcceptedCmpTotal
53958     +          +    -1.18260896990859 * S_Frq  +    -0.95243122164169 * S_Income
53959     +          +    -0.18792820239336 * S_Mnt  +    -0.06982279743147 *
53960     +        S_MntGoldProds  +    -1.14763783870634 * S_MntMeatProducts
53961     +          +    -0.29577972728188 * S_NumCatalogPurchases
53962     +          +    -0.09204036503823 * S_NumDealsPurchases
53963     +          +     1.09127760712522 * S_NumWebVisitsMonth
53964     +          +     0.67251355869104 * S_RFMstat  +     0.02406054275944 *
53965     +        S_Recency  +    -1.61269837976842 * S_Teenhome
53966     +          +     1.49645524045306 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -1.51193899177395 * S_AcceptedCmpTotal + -1.18260896990859 * S_Frq + -0.95243122164169 * S_Income + -0.18792820239336 * S_Mnt + -0.06982279743147 * S_MntGoldProds + -1.14763783870634 * S_MntMeatProducts + -0.29577972728188 * 
S_NumCatalogPurchases + -0.09204036503823 * S_NumDealsPurchases + 1.09127760712522 * S_NumWebVisitsMonth + 0.67251355869104 * S_RFMstat + 0.02406054275944 * S_Recency + -1.61269837976842 * S_Teenhome + 1.49645524045306 * S_Year_Birth ;
53967     +   H1x3_4  =      0.0300271349218 * S_AcceptedCmpTotal
53968     +          +     0.92676949944979 * S_Frq  +    -0.43729227407729 * S_Income
53969     +          +     0.20149694045928 * S_Mnt  +    -0.72339995493149 *
53970     +        S_MntGoldProds  +     0.79792093415572 * S_MntMeatProducts
53971     +          +     0.74771164805463 * S_NumCatalogPurchases
53972     +          +     1.48674373289951 * S_NumDealsPurchases
53973     +          +    -0.43724934700095 * S_NumWebVisitsMonth
53974     +          +    -0.83295997374079 * S_RFMstat  +    -0.78737099754706 *
53975     +        S_Recency  +      1.5969237416548 * S_Teenhome
53976     +          +     -0.1539761100948 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.0300271349218 * S_AcceptedCmpTotal + 0.92676949944979 * S_Frq + -0.43729227407729 * S_Income + 0.20149694045928 * S_Mnt + -0.72339995493149 * S_MntGoldProds + 0.79792093415572 * S_MntMeatProducts + 0.74771164805463 * 
S_NumCatalogPurchases + 1.48674373289951 * S_NumDealsPurchases + -0.43724934700095 * S_NumWebVisitsMonth + -0.83295997374079 * S_RFMstat + -0.78737099754706 * S_Recency + 1.5969237416548 * S_Teenhome + -0.1539761100948 * S_Year_Birth ;
53977     +   H1x3_5  =     0.10850479066736 * S_AcceptedCmpTotal
53978     +          +    -0.69523987336905 * S_Frq  +    -1.03313846128362 * S_Income
53979     +          +     0.25026080496919 * S_Mnt  +    -0.97357883151863 *
53980     +        S_MntGoldProds  +    -0.61754054300662 * S_MntMeatProducts
53981     +          +     0.32607897654777 * S_NumCatalogPurchases
53982     +          +    -0.05989936582211 * S_NumDealsPurchases
53983     +          +     -0.8863628882594 * S_NumWebVisitsMonth
53984     +          +      1.1124532739734 * S_RFMstat  +    -0.38719199193265 *
53985     +        S_Recency  +      1.1633098880037 * S_Teenhome
53986     +          +    -1.12745203473451 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.10850479066736 * S_AcceptedCmpTotal + -0.69523987336905 * S_Frq + -1.03313846128362 * S_Income + 0.25026080496919 * S_Mnt + -0.97357883151863 * S_MntGoldProds + -0.61754054300662 * S_MntMeatProducts + 0.32607897654777 * 
S_NumCatalogPurchases + -0.05989936582211 * S_NumDealsPurchases + -0.8863628882594 * S_NumWebVisitsMonth + 1.1124532739734 * S_RFMstat + -0.38719199193265 * S_Recency + 1.1633098880037 * S_Teenhome + -1.12745203473451 * S_Year_Birth ;
53987     +   H1x3_6  =    -0.11588080697234 * S_AcceptedCmpTotal
53988     +          +     0.62360534366171 * S_Frq  +     0.05171263107667 * S_Income
53989     +          +    -2.09517372359855 * S_Mnt  +     1.82275072298905 *
53990     +        S_MntGoldProds  +    -0.20222711303443 * S_MntMeatProducts
53991     +          +    -0.32855091358254 * S_NumCatalogPurchases
53992     +          +    -0.04262624947945 * S_NumDealsPurchases
53993     +          +     0.34844893542429 * S_NumWebVisitsMonth
53994     +          +     1.02395415516187 * S_RFMstat  +     0.72163010188304 *
53995     +        S_Recency  +     0.25374922499465 * S_Teenhome
53996     +          +    -0.26482823596248 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -0.11588080697234 * S_AcceptedCmpTotal + 0.62360534366171 * S_Frq + 0.05171263107667 * S_Income + -2.09517372359855 * S_Mnt + 1.82275072298905 * S_MntGoldProds + -0.20222711303443 * S_MntMeatProducts + -0.32855091358254 * 
S_NumCatalogPurchases + -0.04262624947945 * S_NumDealsPurchases + 0.34844893542429 * S_NumWebVisitsMonth + 1.02395415516187 * S_RFMstat + 0.72163010188304 * S_Recency + 0.25374922499465 * S_Teenhome + -0.26482823596248 * S_Year_Birth ;
53997     +   H1x3_1  = H1x3_1  +     0.22579923464903 * Marital_StatusDivorced
53998     +          +    -1.19357131519861 * Marital_StatusMarried
53999     +          +     1.01104838285626 * Marital_StatusSingle
54000     +          +    -1.80955917142309 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.22579923464903 * Marital_StatusDivorced + -1.19357131519861 * Marital_StatusMarried + 1.01104838285626 * Marital_StatusSingle + -1.80955917142309 * Marital_StatusTogether ;
54001     +   H1x3_2  = H1x3_2  +    -0.94571479472535 * Marital_StatusDivorced
54002     +          +     0.41518199668826 * Marital_StatusMarried
54003     +          +     1.03267293059069 * Marital_StatusSingle
54004     +          +    -0.66743874470855 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.94571479472535 * Marital_StatusDivorced + 0.41518199668826 * Marital_StatusMarried + 1.03267293059069 * Marital_StatusSingle + -0.66743874470855 * Marital_StatusTogether ;
54005     +   H1x3_3  = H1x3_3  +    -0.15213926695809 * Marital_StatusDivorced
54006     +          +     0.56306179671807 * Marital_StatusMarried
54007     +          +    -1.20896369649342 * Marital_StatusSingle
54008     +          +      0.2381860290523 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.15213926695809 * Marital_StatusDivorced + 0.56306179671807 * Marital_StatusMarried + -1.20896369649342 * Marital_StatusSingle + 0.2381860290523 * Marital_StatusTogether ;
54009     +   H1x3_4  = H1x3_4  +      1.0736711015636 * Marital_StatusDivorced
54010     +          +    -2.56951757071166 * Marital_StatusMarried
54011     +          +     0.89024254219017 * Marital_StatusSingle
54012     +          +    -1.38303524163943 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.0736711015636 * Marital_StatusDivorced + -2.56951757071166 * Marital_StatusMarried + 0.89024254219017 * Marital_StatusSingle + -1.38303524163943 * Marital_StatusTogether ;
54013     +   H1x3_5  = H1x3_5  +     2.33108578518176 * Marital_StatusDivorced
54014     +          +    -0.82560993254767 * Marital_StatusMarried
54015     +          +     0.67892086377875 * Marital_StatusSingle
54016     +          +    -0.99872502550085 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 2.33108578518176 * Marital_StatusDivorced + -0.82560993254767 * Marital_StatusMarried + 0.67892086377875 * Marital_StatusSingle + -0.99872502550085 * Marital_StatusTogether ;
54017     +   H1x3_6  = H1x3_6  +    -1.46724646572707 * Marital_StatusDivorced
54018     +          +     1.62783448403167 * Marital_StatusMarried
54019     +          +     0.73020544049082 * Marital_StatusSingle
54020     +          +    -0.22473120319236 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -1.46724646572707 * Marital_StatusDivorced + 1.62783448403167 * Marital_StatusMarried + 0.73020544049082 * Marital_StatusSingle + -0.22473120319236 * Marital_StatusTogether ;
54021     +   H1x3_1  =     0.67900930500511 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67900930500511 + H1x3_1 ;
54022     +   H1x3_2  =     1.40060666199115 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.40060666199115 + H1x3_2 ;
54023     +   H1x3_3  =     0.29463847527526 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.29463847527526 + H1x3_3 ;
54024     +   H1x3_4  =    -0.04357875847579 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -0.04357875847579 + H1x3_4 ;
54025     +   H1x3_5  =      0.8612643972197 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.8612643972197 + H1x3_5 ;
54026     +   H1x3_6  =    -1.88380703730164 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -1.88380703730164 + H1x3_6 ;
54027     +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
54028     +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
54029     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7 );
54030     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
54031     +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
54032     +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
54033     +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
54034     +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
54035     +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
54036     +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
54037     +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
54038     +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
54039     +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
54040     +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
54041     +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
54042     +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
54043     +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
54044     +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
54045     +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
54046     +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
54047     +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
54048     +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
54049     +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
54050     +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
54051     +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
54052     +END;
MPRINT(EM_DIAGRAM):   END;
54053     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
54054     +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
54055     +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
54056     +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
54057     +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
54058     +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
54059     +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
54060     +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
54061     +END;
MPRINT(EM_DIAGRAM):   END;
54062     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
54063     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
54064     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
54065     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
54066     +   H2x1_1  =    -0.95656178134917 * H1x1_1  +     1.37796748135739 * H1x1_2
54067     +          +     1.78756036673938 * H1x1_3  +     -0.8439546201475 * H1x1_4
54068     +          +    -1.03166099242293 * H1x1_5  +     0.52943703441707 * H1x1_6
54069     +          +     0.59795148287931 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.95656178134917 * H1x1_1 + 1.37796748135739 * H1x1_2 + 1.78756036673938 * H1x1_3 + -0.8439546201475 * H1x1_4 + -1.03166099242293 * H1x1_5 + 0.52943703441707 * H1x1_6 + 0.59795148287931 * H1x1_7 ;
54070     +   H2x1_2  =     1.91190798936382 * H1x1_1  +      -0.175949167006 * H1x1_2
54071     +          +    -0.20010954623703 * H1x1_3  +    -1.12168184279533 * H1x1_4
54072     +          +     0.35517508917627 * H1x1_5  +    -0.45519619936571 * H1x1_6
54073     +          +     1.08432924744886 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.91190798936382 * H1x1_1 + -0.175949167006 * H1x1_2 + -0.20010954623703 * H1x1_3 + -1.12168184279533 * H1x1_4 + 0.35517508917627 * H1x1_5 + -0.45519619936571 * H1x1_6 + 1.08432924744886 * H1x1_7 ;
54074     +   H2x1_3  =    -0.27236838695598 * H1x1_1  +     2.63546136140352 * H1x1_2
54075     +          +     1.80045649255758 * H1x1_3  +    -2.98830892061373 * H1x1_4
54076     +          +    -2.46045881589621 * H1x1_5  +     3.22396803549708 * H1x1_6
54077     +          +    -2.34667330067152 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.27236838695598 * H1x1_1 + 2.63546136140352 * H1x1_2 + 1.80045649255758 * H1x1_3 + -2.98830892061373 * H1x1_4 + -2.46045881589621 * H1x1_5 + 3.22396803549708 * H1x1_6 + -2.34667330067152 * H1x1_7 ;
54078     +   H2x1_4  =    -3.13210205675036 * H1x1_1  +     3.91450403558871 * H1x1_2
54079     +          +       4.933279615521 * H1x1_3  +    -2.59282514986249 * H1x1_4
54080     +          +    -2.03653671740081 * H1x1_5  +       4.064405082461 * H1x1_6
54081     +          +    -2.60526325926954 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.13210205675036 * H1x1_1 + 3.91450403558871 * H1x1_2 + 4.933279615521 * H1x1_3 + -2.59282514986249 * H1x1_4 + -2.03653671740081 * H1x1_5 + 4.064405082461 * H1x1_6 + -2.60526325926954 * H1x1_7 ;
54082     +   H2x1_5  =    -0.63232084982839 * H1x1_1  +     0.33718773947492 * H1x1_2
54083     +          +     1.29296448887546 * H1x1_3  +     1.12889621039023 * H1x1_4
54084     +          +     2.18934908118237 * H1x1_5  +     0.87862098785892 * H1x1_6
54085     +          +     0.91832061749569 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.63232084982839 * H1x1_1 + 0.33718773947492 * H1x1_2 + 1.29296448887546 * H1x1_3 + 1.12889621039023 * H1x1_4 + 2.18934908118237 * H1x1_5 + 0.87862098785892 * H1x1_6 + 0.91832061749569 * H1x1_7 ;
54086     +   H2x1_6  =     1.81043244413035 * H1x1_1  +      1.4777958998418 * H1x1_2
54087     +          +     2.53190667102186 * H1x1_3  +      0.4670787906688 * H1x1_4
54088     +          +    -0.00303664790933 * H1x1_5  +     0.21078497178324 * H1x1_6
54089     +          +     0.34792900678934 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.81043244413035 * H1x1_1 + 1.4777958998418 * H1x1_2 + 2.53190667102186 * H1x1_3 + 0.4670787906688 * H1x1_4 + -0.00303664790933 * H1x1_5 + 0.21078497178324 * H1x1_6 + 0.34792900678934 * H1x1_7 ;
54090     +   H2x1_7  =      2.7297431384039 * H1x1_1  +    -1.30829815853208 * H1x1_2
54091     +          +    -0.74317234707744 * H1x1_3  +     0.02621795882884 * H1x1_4
54092     +          +     1.92641283593631 * H1x1_5  +     0.32006968332264 * H1x1_6
54093     +          +     0.87129000431049 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = 2.7297431384039 * H1x1_1 + -1.30829815853208 * H1x1_2 + -0.74317234707744 * H1x1_3 + 0.02621795882884 * H1x1_4 + 1.92641283593631 * H1x1_5 + 0.32006968332264 * H1x1_6 + 0.87129000431049 * H1x1_7 ;
54094     +   H2x1_1  = H2x1_1  +     -2.1938127062121 * H1x2_1
54095     +          +     0.21780666650637 * H1x2_2  +    -0.59195589593425 * H1x2_3
54096     +          +     0.38436245185742 * H1x2_4  +     0.62573807049092 * H1x2_5
54097     +          +    -0.61319348011502 * H1x2_6  +     0.47203210338015 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.1938127062121 * H1x2_1 + 0.21780666650637 * H1x2_2 + -0.59195589593425 * H1x2_3 + 0.38436245185742 * H1x2_4 + 0.62573807049092 * H1x2_5 + -0.61319348011502 * H1x2_6 + 0.47203210338015 * H1x2_7 ;
54098     +   H2x1_2  = H2x1_2  +    -0.26087177829438 * H1x2_1
54099     +          +      1.5809361009025 * H1x2_2  +     1.48270435958935 * H1x2_3
54100     +          +    -0.08943866833208 * H1x2_4  +     1.06601866330059 * H1x2_5
54101     +          +     0.65908674086625 * H1x2_6  +    -0.41138217409507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.26087177829438 * H1x2_1 + 1.5809361009025 * H1x2_2 + 1.48270435958935 * H1x2_3 + -0.08943866833208 * H1x2_4 + 1.06601866330059 * H1x2_5 + 0.65908674086625 * H1x2_6 + -0.41138217409507 * H1x2_7 ;
54102     +   H2x1_3  = H2x1_3  +     0.38416253176813 * H1x2_1
54103     +          +    -0.18005172775158 * H1x2_2  +    -0.64477973121074 * H1x2_3
54104     +          +    -0.89326621554735 * H1x2_4  +     2.10808351608759 * H1x2_5
54105     +          +    -0.79701502540522 * H1x2_6  +     0.12564972289045 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.38416253176813 * H1x2_1 + -0.18005172775158 * H1x2_2 + -0.64477973121074 * H1x2_3 + -0.89326621554735 * H1x2_4 + 2.10808351608759 * H1x2_5 + -0.79701502540522 * H1x2_6 + 0.12564972289045 * H1x2_7 ;
54106     +   H2x1_4  = H2x1_4  +     0.45607666975085 * H1x2_1
54107     +          +     0.66281103175614 * H1x2_2  +     -2.2042052849244 * H1x2_3
54108     +          +    -0.88338513539567 * H1x2_4  +      0.8444719755129 * H1x2_5
54109     +          +    -1.34699546034909 * H1x2_6  +    -0.92256004986079 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.45607666975085 * H1x2_1 + 0.66281103175614 * H1x2_2 + -2.2042052849244 * H1x2_3 + -0.88338513539567 * H1x2_4 + 0.8444719755129 * H1x2_5 + -1.34699546034909 * H1x2_6 + -0.92256004986079 * H1x2_7 ;
54110     +   H2x1_5  = H2x1_5  +    -1.36966827041497 * H1x2_1
54111     +          +    -0.50899589190563 * H1x2_2  +    -1.06117764109728 * H1x2_3
54112     +          +    -0.15325014700397 * H1x2_4  +     0.77845029985607 * H1x2_5
54113     +          +     0.15661838238861 * H1x2_6  +    -1.46533717081069 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.36966827041497 * H1x2_1 + -0.50899589190563 * H1x2_2 + -1.06117764109728 * H1x2_3 + -0.15325014700397 * H1x2_4 + 0.77845029985607 * H1x2_5 + 0.15661838238861 * H1x2_6 + -1.46533717081069 * H1x2_7 ;
54114     +   H2x1_6  = H2x1_6  +    -1.39055542164691 * H1x2_1
54115     +          +    -0.58359991825266 * H1x2_2  +     1.77147289208184 * H1x2_3
54116     +          +    -0.35342441714416 * H1x2_4  +     0.33680205236698 * H1x2_5
54117     +          +    -0.30165800401137 * H1x2_6  +    -1.49792110543314 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -1.39055542164691 * H1x2_1 + -0.58359991825266 * H1x2_2 + 1.77147289208184 * H1x2_3 + -0.35342441714416 * H1x2_4 + 0.33680205236698 * H1x2_5 + -0.30165800401137 * H1x2_6 + -1.49792110543314 * H1x2_7 ;
54118     +   H2x1_7  = H2x1_7  +     0.20334369322498 * H1x2_1
54119     +          +    -0.56117684469389 * H1x2_2  +     1.27451151893116 * H1x2_3
54120     +          +    -0.39759641471947 * H1x2_4  +    -0.48424888739695 * H1x2_5
54121     +          +      0.5776601194378 * H1x2_6  +    -0.11343742791086 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.20334369322498 * H1x2_1 + -0.56117684469389 * H1x2_2 + 1.27451151893116 * H1x2_3 + -0.39759641471947 * H1x2_4 + -0.48424888739695 * H1x2_5 + 0.5776601194378 * H1x2_6 + -0.11343742791086 * H1x2_7 ;
54122     +   H2x1_1  = H2x1_1  +    -0.06990804266869 * H1x3_1
54123     +          +     1.59179747886577 * H1x3_2  +     -0.3658160611529 * H1x3_3
54124     +          +    -0.16177521959465 * H1x3_4  +     0.23353693967535 * H1x3_5
54125     +          +     0.96164596504173 * H1x3_6  +    -0.49996390114171 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.06990804266869 * H1x3_1 + 1.59179747886577 * H1x3_2 + -0.3658160611529 * H1x3_3 + -0.16177521959465 * H1x3_4 + 0.23353693967535 * H1x3_5 + 0.96164596504173 * H1x3_6 + -0.49996390114171 * H1x3_7 ;
54126     +   H2x1_2  = H2x1_2  +    -1.34775541988885 * H1x3_1
54127     +          +    -0.94185062200477 * H1x3_2  +     2.40002799790884 * H1x3_3
54128     +          +      1.3228491036493 * H1x3_4  +    -2.27212522601702 * H1x3_5
54129     +          +     0.22676652176348 * H1x3_6  +     0.96810343094913 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.34775541988885 * H1x3_1 + -0.94185062200477 * H1x3_2 + 2.40002799790884 * H1x3_3 + 1.3228491036493 * H1x3_4 + -2.27212522601702 * H1x3_5 + 0.22676652176348 * H1x3_6 + 0.96810343094913 * H1x3_7 ;
54130     +   H2x1_3  = H2x1_3  +    -0.68382731119741 * H1x3_1
54131     +          +    -0.90388882694092 * H1x3_2  +     0.51668393396039 * H1x3_3
54132     +          +     0.45716345972756 * H1x3_4  +    -0.49320936872992 * H1x3_5
54133     +          +     0.11919896076076 * H1x3_6  +    -0.14288859595709 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.68382731119741 * H1x3_1 + -0.90388882694092 * H1x3_2 + 0.51668393396039 * H1x3_3 + 0.45716345972756 * H1x3_4 + -0.49320936872992 * H1x3_5 + 0.11919896076076 * H1x3_6 + -0.14288859595709 * H1x3_7 ;
54134     +   H2x1_4  = H2x1_4  +    -0.68614915242276 * H1x3_1
54135     +          +     0.55556081003484 * H1x3_2  +     0.26058803548386 * H1x3_3
54136     +          +     0.44653924204999 * H1x3_4  +    -0.97704608173388 * H1x3_5
54137     +          +    -0.04291306465274 * H1x3_6  +    -0.70203538063923 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.68614915242276 * H1x3_1 + 0.55556081003484 * H1x3_2 + 0.26058803548386 * H1x3_3 + 0.44653924204999 * H1x3_4 + -0.97704608173388 * H1x3_5 + -0.04291306465274 * H1x3_6 + -0.70203538063923 * H1x3_7 ;
54138     +   H2x1_5  = H2x1_5  +     0.58123765973845 * H1x3_1
54139     +          +     0.48842685419846 * H1x3_2  +     1.59951720976688 * H1x3_3
54140     +          +     0.39804915100427 * H1x3_4  +    -0.47629764750379 * H1x3_5
54141     +          +    -1.56133001160202 * H1x3_6  +     1.12232825939123 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.58123765973845 * H1x3_1 + 0.48842685419846 * H1x3_2 + 1.59951720976688 * H1x3_3 + 0.39804915100427 * H1x3_4 + -0.47629764750379 * H1x3_5 + -1.56133001160202 * H1x3_6 + 1.12232825939123 * H1x3_7 ;
54142     +   H2x1_6  = H2x1_6  +    -0.35903530664944 * H1x3_1
54143     +          +    -1.21870303791063 * H1x3_2  +     -0.0358958118983 * H1x3_3
54144     +          +     1.71577031345204 * H1x3_4  +    -0.29111463093854 * H1x3_5
54145     +          +    -1.77383444462785 * H1x3_6  +    -0.93379473274206 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.35903530664944 * H1x3_1 + -1.21870303791063 * H1x3_2 + -0.0358958118983 * H1x3_3 + 1.71577031345204 * H1x3_4 + -0.29111463093854 * H1x3_5 + -1.77383444462785 * H1x3_6 + -0.93379473274206 * H1x3_7 ;
54146     +   H2x1_7  = H2x1_7  +     0.79356954272121 * H1x3_1
54147     +          +    -2.23344635077437 * H1x3_2  +     0.01459894574902 * H1x3_3
54148     +          +    -1.76556734796059 * H1x3_4  +     0.55679401249834 * H1x3_5
54149     +          +    -0.00867866380584 * H1x3_6  +     1.61311341603142 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.79356954272121 * H1x3_1 + -2.23344635077437 * H1x3_2 + 0.01459894574902 * H1x3_3 + -1.76556734796059 * H1x3_4 + 0.55679401249834 * H1x3_5 + -0.00867866380584 * H1x3_6 + 1.61311341603142 * H1x3_7 ;
54150     +   H2x1_1  =     0.45495097945606 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45495097945606 + H2x1_1 ;
54151     +   H2x1_2  =    -0.00150409200191 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.00150409200191 + H2x1_2 ;
54152     +   H2x1_3  =     0.06766385008662 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.06766385008662 + H2x1_3 ;
54153     +   H2x1_4  =    -0.15767488957433 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.15767488957433 + H2x1_4 ;
54154     +   H2x1_5  =     3.00862692955968 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 3.00862692955968 + H2x1_5 ;
54155     +   H2x1_6  =     1.46151036473661 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.46151036473661 + H2x1_6 ;
54156     +   H2x1_7  =    -1.14350195577506 + H2x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = -1.14350195577506 + H2x1_7 ;
54157     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
54158     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
54159     +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
54160     +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
54161     +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
54162     +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
54163     +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
54164     +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
54165     +   H2x1_7  = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_7 = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
54166     +END;
MPRINT(EM_DIAGRAM):   END;
54167     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
54168     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
54169     +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
54170     +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
54171     +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
54172     +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
54173     +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
54174     +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
54175     +END;
MPRINT(EM_DIAGRAM):   END;
54176     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
54177     +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
54178     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
54179     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
54180     +   H2x2_1  =     -0.6098073780758 * H1x1_1  +    -0.36212005078054 * H1x1_2
54181     +          +     0.06355695656592 * H1x1_3  +     0.42978415336514 * H1x1_4
54182     +          +     1.73171637681701 * H1x1_5  +    -0.19499247120261 * H1x1_6
54183     +          +     0.74015079276747 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.6098073780758 * H1x1_1 + -0.36212005078054 * H1x1_2 + 0.06355695656592 * H1x1_3 + 0.42978415336514 * H1x1_4 + 1.73171637681701 * H1x1_5 + -0.19499247120261 * H1x1_6 + 0.74015079276747 * H1x1_7 ;
54184     +   H2x2_2  =     0.94291268086892 * H1x1_1  +    -0.57821086705904 * H1x1_2
54185     +          +     1.78126629448091 * H1x1_3  +    -1.19267460568433 * H1x1_4
54186     +          +    -0.23111688249081 * H1x1_5  +     0.48499259969431 * H1x1_6
54187     +          +    -1.56999349458897 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.94291268086892 * H1x1_1 + -0.57821086705904 * H1x1_2 + 1.78126629448091 * H1x1_3 + -1.19267460568433 * H1x1_4 + -0.23111688249081 * H1x1_5 + 0.48499259969431 * H1x1_6 + -1.56999349458897 * H1x1_7 ;
54188     +   H2x2_3  =    -0.83943846185187 * H1x1_1  +     0.07494097035466 * H1x1_2
54189     +          +    -0.22510824455886 * H1x1_3  +     0.73702100581613 * H1x1_4
54190     +          +     0.84717434356729 * H1x1_5  +      1.1890648131813 * H1x1_6
54191     +          +    -0.69985750736721 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.83943846185187 * H1x1_1 + 0.07494097035466 * H1x1_2 + -0.22510824455886 * H1x1_3 + 0.73702100581613 * H1x1_4 + 0.84717434356729 * H1x1_5 + 1.1890648131813 * H1x1_6 + -0.69985750736721 * H1x1_7 ;
54192     +   H2x2_4  =     1.34186573490327 * H1x1_1  +     0.10476556384336 * H1x1_2
54193     +          +    -0.07073923857851 * H1x1_3  +     0.49865386241422 * H1x1_4
54194     +          +     1.20386613863792 * H1x1_5  +     0.13033316874168 * H1x1_6
54195     +          +     0.36095712511699 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.34186573490327 * H1x1_1 + 0.10476556384336 * H1x1_2 + -0.07073923857851 * H1x1_3 + 0.49865386241422 * H1x1_4 + 1.20386613863792 * H1x1_5 + 0.13033316874168 * H1x1_6 + 0.36095712511699 * H1x1_7 ;
54196     +   H2x2_5  =     0.18683850895928 * H1x1_1  +     0.14087720385762 * H1x1_2
54197     +          +     0.39026989292984 * H1x1_3  +     0.40839626117338 * H1x1_4
54198     +          +     0.17816964710989 * H1x1_5  +     0.64340089705428 * H1x1_6
54199     +          +    -1.27363167094111 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.18683850895928 * H1x1_1 + 0.14087720385762 * H1x1_2 + 0.39026989292984 * H1x1_3 + 0.40839626117338 * H1x1_4 + 0.17816964710989 * H1x1_5 + 0.64340089705428 * H1x1_6 + -1.27363167094111 * H1x1_7 ;
54200     +   H2x2_6  =     0.67895838050616 * H1x1_1  +     0.23794862788395 * H1x1_2
54201     +          +     1.47625698143483 * H1x1_3  +    -0.78874578699705 * H1x1_4
54202     +          +     0.11576168045678 * H1x1_5  +     0.44470888441177 * H1x1_6
54203     +          +     1.87629961612594 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.67895838050616 * H1x1_1 + 0.23794862788395 * H1x1_2 + 1.47625698143483 * H1x1_3 + -0.78874578699705 * H1x1_4 + 0.11576168045678 * H1x1_5 + 0.44470888441177 * H1x1_6 + 1.87629961612594 * H1x1_7 ;
54204     +   H2x2_7  =     0.68721855914482 * H1x1_1  +    -0.49548906059129 * H1x1_2
54205     +          +    -0.95479435424814 * H1x1_3  +    -0.39636357013457 * H1x1_4
54206     +          +     1.05784760554335 * H1x1_5  +     0.55302681608178 * H1x1_6
54207     +          +     0.46646041474723 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.68721855914482 * H1x1_1 + -0.49548906059129 * H1x1_2 + -0.95479435424814 * H1x1_3 + -0.39636357013457 * H1x1_4 + 1.05784760554335 * H1x1_5 + 0.55302681608178 * H1x1_6 + 0.46646041474723 * H1x1_7 ;
54208     +   H2x2_1  = H2x2_1  +    -0.27434389803517 * H1x2_1
54209     +          +    -0.02074671287693 * H1x2_2  +    -1.51155778758517 * H1x2_3
54210     +          +    -1.19011584420542 * H1x2_4  +     -0.8540083688408 * H1x2_5
54211     +          +    -0.51772310023527 * H1x2_6  +     -0.0192399267251 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.27434389803517 * H1x2_1 + -0.02074671287693 * H1x2_2 + -1.51155778758517 * H1x2_3 + -1.19011584420542 * H1x2_4 + -0.8540083688408 * H1x2_5 + -0.51772310023527 * H1x2_6 + -0.0192399267251 * H1x2_7 ;
54212     +   H2x2_2  = H2x2_2  +      -1.312525087163 * H1x2_1
54213     +          +     1.19175487774401 * H1x2_2  +    -1.10903746388023 * H1x2_3
54214     +          +      0.2627511726941 * H1x2_4  +    -1.49474705736936 * H1x2_5
54215     +          +     0.79354329450131 * H1x2_6  +    -0.48676510074213 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.312525087163 * H1x2_1 + 1.19175487774401 * H1x2_2 + -1.10903746388023 * H1x2_3 + 0.2627511726941 * H1x2_4 + -1.49474705736936 * H1x2_5 + 0.79354329450131 * H1x2_6 + -0.48676510074213 * H1x2_7 ;
54216     +   H2x2_3  = H2x2_3  +     0.36715282986404 * H1x2_1
54217     +          +    -1.54691354420052 * H1x2_2  +     0.58334429972967 * H1x2_3
54218     +          +     3.32026929025218 * H1x2_4  +     0.08578287392048 * H1x2_5
54219     +          +     0.66591130534429 * H1x2_6  +     0.57559013181145 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.36715282986404 * H1x2_1 + -1.54691354420052 * H1x2_2 + 0.58334429972967 * H1x2_3 + 3.32026929025218 * H1x2_4 + 0.08578287392048 * H1x2_5 + 0.66591130534429 * H1x2_6 + 0.57559013181145 * H1x2_7 ;
54220     +   H2x2_4  = H2x2_4  +     1.28239253398808 * H1x2_1
54221     +          +     0.06662925242621 * H1x2_2  +     0.49967984015316 * H1x2_3
54222     +          +     0.65508978056742 * H1x2_4  +    -0.28141359636508 * H1x2_5
54223     +          +    -0.11787887977724 * H1x2_6  +     -0.6607325871171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.28239253398808 * H1x2_1 + 0.06662925242621 * H1x2_2 + 0.49967984015316 * H1x2_3 + 0.65508978056742 * H1x2_4 + -0.28141359636508 * H1x2_5 + -0.11787887977724 * H1x2_6 + -0.6607325871171 * H1x2_7 ;
54224     +   H2x2_5  = H2x2_5  +    -0.49511046906315 * H1x2_1
54225     +          +    -1.88759923025868 * H1x2_2  +    -0.99578805432186 * H1x2_3
54226     +          +     0.47300607025135 * H1x2_4  +     0.73725488149784 * H1x2_5
54227     +          +     0.56107930260304 * H1x2_6  +     -0.6618265083723 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.49511046906315 * H1x2_1 + -1.88759923025868 * H1x2_2 + -0.99578805432186 * H1x2_3 + 0.47300607025135 * H1x2_4 + 0.73725488149784 * H1x2_5 + 0.56107930260304 * H1x2_6 + -0.6618265083723 * H1x2_7 ;
54228     +   H2x2_6  = H2x2_6  +    -0.56511063846684 * H1x2_1
54229     +          +      0.1682036403191 * H1x2_2  +     -0.7835100270482 * H1x2_3
54230     +          +    -0.05926261017522 * H1x2_4  +     0.28303530518131 * H1x2_5
54231     +          +     1.57291802723543 * H1x2_6  +    -1.59403373749444 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + -0.56511063846684 * H1x2_1 + 0.1682036403191 * H1x2_2 + -0.7835100270482 * H1x2_3 + -0.05926261017522 * H1x2_4 + 0.28303530518131 * H1x2_5 + 1.57291802723543 * H1x2_6 + -1.59403373749444 * H1x2_7 ;
54232     +   H2x2_7  = H2x2_7  +    -1.06397759700592 * H1x2_1
54233     +          +    -0.21206214531111 * H1x2_2  +     1.52697813698804 * H1x2_3
54234     +          +    -0.03132126915438 * H1x2_4  +     0.11910805580916 * H1x2_5
54235     +          +     1.03394382602734 * H1x2_6  +    -0.28139834412941 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -1.06397759700592 * H1x2_1 + -0.21206214531111 * H1x2_2 + 1.52697813698804 * H1x2_3 + -0.03132126915438 * H1x2_4 + 0.11910805580916 * H1x2_5 + 1.03394382602734 * H1x2_6 + -0.28139834412941 * H1x2_7 ;
54236     +   H2x2_1  = H2x2_1  +    -1.18028681022903 * H1x3_1
54237     +          +    -0.56354962807969 * H1x3_2  +    -0.32071823564038 * H1x3_3
54238     +          +    -1.14868021494554 * H1x3_4  +     0.50491385711883 * H1x3_5
54239     +          +      0.3595638799915 * H1x3_6  +    -1.04253859844314 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.18028681022903 * H1x3_1 + -0.56354962807969 * H1x3_2 + -0.32071823564038 * H1x3_3 + -1.14868021494554 * H1x3_4 + 0.50491385711883 * H1x3_5 + 0.3595638799915 * H1x3_6 + -1.04253859844314 * H1x3_7 ;
54240     +   H2x2_2  = H2x2_2  +     1.10237781244945 * H1x3_1
54241     +          +     1.08171284637926 * H1x3_2  +     0.51153068676713 * H1x3_3
54242     +          +     -0.0106772728333 * H1x3_4  +     0.21777593557961 * H1x3_5
54243     +          +     0.10772516691825 * H1x3_6  +    -0.91346091248416 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 1.10237781244945 * H1x3_1 + 1.08171284637926 * H1x3_2 + 0.51153068676713 * H1x3_3 + -0.0106772728333 * H1x3_4 + 0.21777593557961 * H1x3_5 + 0.10772516691825 * H1x3_6 + -0.91346091248416 * H1x3_7 ;
54244     +   H2x2_3  = H2x2_3  +    -0.71132206215234 * H1x3_1
54245     +          +     0.60006902706544 * H1x3_2  +      -0.471170925786 * H1x3_3
54246     +          +     0.07477379311969 * H1x3_4  +    -0.34034195429991 * H1x3_5
54247     +          +     1.63429052967629 * H1x3_6  +     0.13697740143754 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.71132206215234 * H1x3_1 + 0.60006902706544 * H1x3_2 + -0.471170925786 * H1x3_3 + 0.07477379311969 * H1x3_4 + -0.34034195429991 * H1x3_5 + 1.63429052967629 * H1x3_6 + 0.13697740143754 * H1x3_7 ;
54248     +   H2x2_4  = H2x2_4  +     0.76338339806809 * H1x3_1
54249     +          +     0.34600443003632 * H1x3_2  +    -0.60707577837208 * H1x3_3
54250     +          +     1.37001034857478 * H1x3_4  +    -1.24749521510775 * H1x3_5
54251     +          +    -1.45784349983015 * H1x3_6  +     0.12879195100917 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.76338339806809 * H1x3_1 + 0.34600443003632 * H1x3_2 + -0.60707577837208 * H1x3_3 + 1.37001034857478 * H1x3_4 + -1.24749521510775 * H1x3_5 + -1.45784349983015 * H1x3_6 + 0.12879195100917 * H1x3_7 ;
54252     +   H2x2_5  = H2x2_5  +    -2.33392280718246 * H1x3_1
54253     +          +    -0.48123076018945 * H1x3_2  +    -0.76638732765894 * H1x3_3
54254     +          +    -1.76560846551209 * H1x3_4  +     1.62249911960883 * H1x3_5
54255     +          +    -0.31271093507345 * H1x3_6  +    -0.34748800562391 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -2.33392280718246 * H1x3_1 + -0.48123076018945 * H1x3_2 + -0.76638732765894 * H1x3_3 + -1.76560846551209 * H1x3_4 + 1.62249911960883 * H1x3_5 + -0.31271093507345 * H1x3_6 + -0.34748800562391 * H1x3_7 ;
54256     +   H2x2_6  = H2x2_6  +     0.53202536648562 * H1x3_1
54257     +          +     0.36605088046069 * H1x3_2  +     -1.7626773020241 * H1x3_3
54258     +          +     0.14681062331369 * H1x3_4  +     0.10699108516053 * H1x3_5
54259     +          +     2.24609371442936 * H1x3_6  +    -0.59076884674419 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.53202536648562 * H1x3_1 + 0.36605088046069 * H1x3_2 + -1.7626773020241 * H1x3_3 + 0.14681062331369 * H1x3_4 + 0.10699108516053 * H1x3_5 + 2.24609371442936 * H1x3_6 + -0.59076884674419 * H1x3_7 ;
54260     +   H2x2_7  = H2x2_7  +    -0.05290923023086 * H1x3_1
54261     +          +    -0.30472796298249 * H1x3_2  +     1.89100111779461 * H1x3_3
54262     +          +     0.51110284119421 * H1x3_4  +     -0.2014479939412 * H1x3_5
54263     +          +     1.02507111515379 * H1x3_6  +    -0.63211120065975 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -0.05290923023086 * H1x3_1 + -0.30472796298249 * H1x3_2 + 1.89100111779461 * H1x3_3 + 0.51110284119421 * H1x3_4 + -0.2014479939412 * H1x3_5 + 1.02507111515379 * H1x3_6 + -0.63211120065975 * H1x3_7 ;
54264     +   H2x2_1  =    -2.15023760884419 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.15023760884419 + H2x2_1 ;
54265     +   H2x2_2  =    -1.03542203438136 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.03542203438136 + H2x2_2 ;
54266     +   H2x2_3  =    -1.03202542428687 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.03202542428687 + H2x2_3 ;
54267     +   H2x2_4  =     0.79380822765375 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.79380822765375 + H2x2_4 ;
54268     +   H2x2_5  =    -0.37637686056399 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.37637686056399 + H2x2_5 ;
54269     +   H2x2_6  =    -0.12032383488066 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.12032383488066 + H2x2_6 ;
54270     +   H2x2_7  =     0.84544057856735 + H2x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.84544057856735 + H2x2_7 ;
54271     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
54272     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
54273     +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
54274     +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
54275     +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
54276     +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
54277     +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
54278     +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
54279     +   H2x2_7  = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_7 = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
54280     +END;
MPRINT(EM_DIAGRAM):   END;
54281     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
54282     +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
54283     +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
54284     +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
54285     +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
54286     +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
54287     +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
54288     +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
54289     +END;
MPRINT(EM_DIAGRAM):   END;
54290     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
54291     +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
54292     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
54293     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
54294     +   H3x1_1  =    -0.90634182479211 * H2x1_1  +    -0.09135307681655 * H2x1_2
54295     +          +     -1.1697186659188 * H2x1_3  +    -1.58089509972168 * H2x1_4
54296     +          +    -0.36298075828987 * H2x1_5  +     -0.1512750341775 * H2x1_6
54297     +          +    -0.95333639415651 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.90634182479211 * H2x1_1 + -0.09135307681655 * H2x1_2 + -1.1697186659188 * H2x1_3 + -1.58089509972168 * H2x1_4 + -0.36298075828987 * H2x1_5 + -0.1512750341775 * H2x1_6 + -0.95333639415651 * H2x1_7 ;
54298     +   H3x1_2  =     0.55686365647701 * H2x1_1  +      1.5696753982442 * H2x1_2
54299     +          +    -0.32250855602992 * H2x1_3  +     0.19455668370146 * H2x1_4
54300     +          +     0.44351097086868 * H2x1_5  +     0.27358852097745 * H2x1_6
54301     +          +      0.4281879736941 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.55686365647701 * H2x1_1 + 1.5696753982442 * H2x1_2 + -0.32250855602992 * H2x1_3 + 0.19455668370146 * H2x1_4 + 0.44351097086868 * H2x1_5 + 0.27358852097745 * H2x1_6 + 0.4281879736941 * H2x1_7 ;
54302     +   H3x1_3  =     0.12633341645489 * H2x1_1  +    -0.66899185238366 * H2x1_2
54303     +          +    -2.56536949854372 * H2x1_3  +    -1.44702955697377 * H2x1_4
54304     +          +    -2.12726548877297 * H2x1_5  +     0.98860110338896 * H2x1_6
54305     +          +    -1.81290069415788 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.12633341645489 * H2x1_1 + -0.66899185238366 * H2x1_2 + -2.56536949854372 * H2x1_3 + -1.44702955697377 * H2x1_4 + -2.12726548877297 * H2x1_5 + 0.98860110338896 * H2x1_6 + -1.81290069415788 * H2x1_7 ;
54306     +   H3x1_4  =     -1.5244883189849 * H2x1_1  +     -0.8795974458787 * H2x1_2
54307     +          +    -0.90961705850703 * H2x1_3  +    -0.41256891447907 * H2x1_4
54308     +          +    -1.55913982799805 * H2x1_5  +     -0.9171280329681 * H2x1_6
54309     +          +    -0.70506147827449 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.5244883189849 * H2x1_1 + -0.8795974458787 * H2x1_2 + -0.90961705850703 * H2x1_3 + -0.41256891447907 * H2x1_4 + -1.55913982799805 * H2x1_5 + -0.9171280329681 * H2x1_6 + -0.70506147827449 * H2x1_7 ;
54310     +   H3x1_5  =     0.35217616707387 * H2x1_1  +    -1.16700891298034 * H2x1_2
54311     +          +      0.5371834401358 * H2x1_3  +     2.90147333104132 * H2x1_4
54312     +          +     0.77800792666349 * H2x1_5  +     0.78250225671691 * H2x1_6
54313     +          +    -0.59091463760785 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.35217616707387 * H2x1_1 + -1.16700891298034 * H2x1_2 + 0.5371834401358 * H2x1_3 + 2.90147333104132 * H2x1_4 + 0.77800792666349 * H2x1_5 + 0.78250225671691 * H2x1_6 + -0.59091463760785 * H2x1_7 ;
54314     +   H3x1_6  =    -0.44929632444778 * H2x1_1  +    -0.78833736143978 * H2x1_2
54315     +          +    -2.25458905584756 * H2x1_3  +    -1.94571232358746 * H2x1_4
54316     +          +     1.80055450278469 * H2x1_5  +     1.56927477052283 * H2x1_6
54317     +          +     0.56206783006188 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.44929632444778 * H2x1_1 + -0.78833736143978 * H2x1_2 + -2.25458905584756 * H2x1_3 + -1.94571232358746 * H2x1_4 + 1.80055450278469 * H2x1_5 + 1.56927477052283 * H2x1_6 + 0.56206783006188 * H2x1_7 ;
54318     +   H3x1_1  = H3x1_1  +    -1.50414812258238 * H2x2_1
54319     +          +     2.71183535634521 * H2x2_2  +     0.92780495410356 * H2x2_3
54320     +          +     1.94819401410825 * H2x2_4  +     0.85505273909828 * H2x2_5
54321     +          +    -0.66540689026991 * H2x2_6  +    -0.32749055872531 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.50414812258238 * H2x2_1 + 2.71183535634521 * H2x2_2 + 0.92780495410356 * H2x2_3 + 1.94819401410825 * H2x2_4 + 0.85505273909828 * H2x2_5 + -0.66540689026991 * H2x2_6 + -0.32749055872531 * H2x2_7 ;
54322     +   H3x1_2  = H3x1_2  +     0.55540470737424 * H2x2_1
54323     +          +    -1.17598972209898 * H2x2_2  +    -0.16619065810258 * H2x2_3
54324     +          +    -0.58955298520043 * H2x2_4  +     1.04029871696373 * H2x2_5
54325     +          +    -0.71430896416332 * H2x2_6  +    -1.57031773170963 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.55540470737424 * H2x2_1 + -1.17598972209898 * H2x2_2 + -0.16619065810258 * H2x2_3 + -0.58955298520043 * H2x2_4 + 1.04029871696373 * H2x2_5 + -0.71430896416332 * H2x2_6 + -1.57031773170963 * H2x2_7 ;
54326     +   H3x1_3  = H3x1_3  +    -1.83796456414338 * H2x2_1
54327     +          +     1.49146311784803 * H2x2_2  +     0.05550989818961 * H2x2_3
54328     +          +    -0.08016006878981 * H2x2_4  +    -1.41328284571945 * H2x2_5
54329     +          +    -0.58920642563444 * H2x2_6  +     1.30950353008631 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -1.83796456414338 * H2x2_1 + 1.49146311784803 * H2x2_2 + 0.05550989818961 * H2x2_3 + -0.08016006878981 * H2x2_4 + -1.41328284571945 * H2x2_5 + -0.58920642563444 * H2x2_6 + 1.30950353008631 * H2x2_7 ;
54330     +   H3x1_4  = H3x1_4  +     0.91384399854626 * H2x2_1
54331     +          +     -0.0377841204978 * H2x2_2  +     0.67274196472005 * H2x2_3
54332     +          +     0.76900504900432 * H2x2_4  +     0.71823373480501 * H2x2_5
54333     +          +    -0.04199535362683 * H2x2_6  +    -0.23501610033448 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.91384399854626 * H2x2_1 + -0.0377841204978 * H2x2_2 + 0.67274196472005 * H2x2_3 + 0.76900504900432 * H2x2_4 + 0.71823373480501 * H2x2_5 + -0.04199535362683 * H2x2_6 + -0.23501610033448 * H2x2_7 ;
54334     +   H3x1_5  = H3x1_5  +    -0.06769558303335 * H2x2_1
54335     +          +    -0.95662890382057 * H2x2_2  +    -0.56314830579562 * H2x2_3
54336     +          +    -0.17355939108245 * H2x2_4  +     0.49684441057813 * H2x2_5
54337     +          +    -0.27220440010331 * H2x2_6  +     1.13747855812864 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.06769558303335 * H2x2_1 + -0.95662890382057 * H2x2_2 + -0.56314830579562 * H2x2_3 + -0.17355939108245 * H2x2_4 + 0.49684441057813 * H2x2_5 + -0.27220440010331 * H2x2_6 + 1.13747855812864 * H2x2_7 ;
54338     +   H3x1_6  = H3x1_6  +    -0.58306849781773 * H2x2_1
54339     +          +    -1.96921645645113 * H2x2_2  +     0.09529919260054 * H2x2_3
54340     +          +     1.84321935581989 * H2x2_4  +     1.90621049776113 * H2x2_5
54341     +          +     0.22735961476244 * H2x2_6  +      1.7681869270915 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.58306849781773 * H2x2_1 + -1.96921645645113 * H2x2_2 + 0.09529919260054 * H2x2_3 + 1.84321935581989 * H2x2_4 + 1.90621049776113 * H2x2_5 + 0.22735961476244 * H2x2_6 + 1.7681869270915 * H2x2_7 ;
54342     +   H3x1_1  =     0.84072071725045 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.84072071725045 + H3x1_1 ;
54343     +   H3x1_2  =    -0.84331420680493 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.84331420680493 + H3x1_2 ;
54344     +   H3x1_3  =    -1.15131491327763 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.15131491327763 + H3x1_3 ;
54345     +   H3x1_4  =    -0.56905094914727 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.56905094914727 + H3x1_4 ;
54346     +   H3x1_5  =     1.29747074025762 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.29747074025762 + H3x1_5 ;
54347     +   H3x1_6  =     1.70771922783336 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 1.70771922783336 + H3x1_6 ;
54348     +   H3x1_7  = 0;
MPRINT(EM_DIAGRAM):   H3x1_7 = 0;
54349     +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 , H3x1_7
54350     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 , H3x1_7 );
54351     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
54352     +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
54353     +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
54354     +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
54355     +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
54356     +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
54357     +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
54358     +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
54359     +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
54360     +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
54361     +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
54362     +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
54363     +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
54364     +   H3x1_7  = EXP(H3x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_7 = EXP(H3x1_7 - _MAX_);
54365     +   _SUM_ = _SUM_ + H3x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_7 ;
54366     +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
54367     +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
54368     +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
54369     +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
54370     +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
54371     +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
54372     +   H3x1_7  = H3x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 / _SUM_;
54373     +END;
MPRINT(EM_DIAGRAM):   END;
54374     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
54375     +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
54376     +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
54377     +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
54378     +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
54379     +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
54380     +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
54381     +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
54382     +END;
MPRINT(EM_DIAGRAM):   END;
54383     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
54384     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
54385     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
54386     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
54387     +   P_DepVar1  =    -10.5125772193731 * H3x1_1  +     0.35682915649078 * H3x1_2
54388     +          +    -0.04349805114958 * H3x1_3  +    -0.04491244667008 * H3x1_4
54389     +          +     34.5477259369591 * H3x1_5  +    -16.5063579573423 * H3x1_6
54390     +          +     0.83421675743806 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.5125772193731 * H3x1_1 + 0.35682915649078 * H3x1_2 + -0.04349805114958 * H3x1_3 + -0.04491244667008 * H3x1_4 + 34.5477259369591 * H3x1_5 + -16.5063579573423 * H3x1_6 + 0.83421675743806 * H3x1_7 ;
54391     +   P_DepVar1  =     6.85864742009761 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.85864742009761 + P_DepVar1 ;
54392     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
54393     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
54394     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
54395     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
54396     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
54397     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
54398     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
54399     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
54400     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
54401     +END;
MPRINT(EM_DIAGRAM):   END;
54402     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
54403     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
54404     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
54405     +END;
MPRINT(EM_DIAGRAM):   END;
54406     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
54407     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
54408     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
54409     +END;
MPRINT(EM_DIAGRAM):   END;
54410     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
54411     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
54412     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
54413     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
54414     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
54415     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
54416     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
54417     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
54418     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
54419     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
54420     +END;
MPRINT(EM_DIAGRAM):   END;
54421     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
54422     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
54423     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
54424     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
54425      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
54426      quit;
54427      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
54428      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
54429      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
54430      retain ID 2 Node "AutoNeural43";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural43";
54431      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
54432      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 12131 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 12131 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54433      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
54434      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
54435      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 12131 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 12131 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

54436      proc sort data=EMWS8.AutoNeural43_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural43_variableset out=_temp2(keep=NAME CREATOR);
54437      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
54438      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL43_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54439      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
54440      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
54441      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
54442      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54443      proc contents data=EMWS8.AutoNeural43_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural43_train out=_meta(keep=NAME) noprint;
54444      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 95 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

54445      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
54446      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
54447      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 95 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 95 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

54448      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
54449      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
54450      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
54451      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 95 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 95 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54452      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
54453      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 5682 rows and 5 columns.

54454      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

54455      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
54456      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 5682 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 5682 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54457      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
54458      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
54459      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
54460     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
54461     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
54462     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
54463     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
54464     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
54465     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
54466      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
54467      quit;
54468      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
54469      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
54470      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
54471      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
54472      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
54473      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54474      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
54475      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
54476      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54477      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
54478      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
54479      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

54480      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
54481      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
54482      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
54483      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54484      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
54485      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

54486      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
54487      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
54488      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54489      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
54490      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
54491      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
54492      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54493      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
54494      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

54495      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54496      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
54497      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 5686 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54498      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
54499      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
54500      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
54501     +
54502     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
54503     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
MPRINT(EM_DIAGRAM):   Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
54504     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
54505     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
54506     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
54507     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
54508     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
54509      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
54510      quit;
54511      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
54512      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
54513      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
54514      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
54515      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
54516      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54517      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
54518      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
54519      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54520      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
54521      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
54522      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54523      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
54524      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
54525      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
54526      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

54527      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
54528      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54529      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
54530      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
54531      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54532      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
54533      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
54534      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
54535      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

54536      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
54537      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

54538      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54539      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
54540      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 5725 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54541      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
54542      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
54543      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
54544     +
54545     +
54546     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
54547     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
54548     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
54549     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
54550     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
54551     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
54552     +
54553     +
54554     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
54555     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
54556     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
54557     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
54558     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
54559     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
54560     +
54561     +
54562     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
54563     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
54564     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
54565     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
54566     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
54567     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
54568     +
54569     +
54570     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
54571     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
54572     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
54573     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
54574     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
54575     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
54576     +
54577     +
54578     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
54579     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
54580     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
54581     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
54582     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
54583     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
54584     +
54585     +
54586     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
54587     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
54588     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
54589     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
54590     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
54591     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
54592     +
54593     +
54594     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
54595     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
54596     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
54597     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
54598     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
54599     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
54600     +
54601     +
54602     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
54603     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
54604     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
54605     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
54606     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
54607     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
54608     +if
54609     +_FILTERNORM1 not in ( '.')
54610     + and
54611     +_FILTERNORM2 not in ( '.')
54612     + and
54613     +_FILTERNORM3 not in ( '.')
54614     + and
54615     +_FILTERNORM4 not in ( '.')
54616     + and
54617     +_FILTERNORM5 not in ( '.')
54618     + and
54619     +_FILTERNORM6 not in ( '.')
54620     + and
54621     +_FILTERNORM7 not in ( ' ')
54622     + and
54623     +_FILTERNORM8 not in ( ' ')
54624     +and
54625     +( Dt_Customer ne .)
54626     +and ( Income ne . and (Income<=107000))
54627     +and ( Kidhome ne .)
54628     +and ( MntFishProducts ne .)
54629     +and ( MntFruits ne .)
54630     +and ( MntGoldProds ne .)
54631     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
54632     +and ( MntSweetProducts ne .)
54633     +and ( MntWines ne .)
54634     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
54635     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
54636     +and ( NumStorePurchases ne .)
54637     +and ( NumWebPurchases ne .)
54638     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
54639     +and ( Recency ne .)
54640     +and ( Teenhome ne .)
54641     +and ( Year_Birth ne .)
54642     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and _FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and _FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 
not in ( ' ') and ( Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne . and (MntMeatProducts<=964)) and ( MntSweetProducts ne 
.) and ( MntWines ne .) and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( NumWebVisitsMonth ne . and 
(NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne .) and ( Year_Birth ne .) then do;
54643     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
54644     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
54645     +end;
MPRINT(EM_DIAGRAM):   end;
54646     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
54647     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
54648      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
54649      quit;
54650      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
54651      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
54652      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
54653      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
54654      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
54655      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54656      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
54657      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
54658      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54659      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
54660      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
54661      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54662      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
54663      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
54664      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
54665      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54666      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
54667      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

54668      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
54669      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
54670      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54671      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
54672      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
54673      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
54674      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

54675      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
54676      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

54677      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54678      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
54679      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 5791 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54680      %macro varDept(fcmpdata=,id=);
54681      %global nobs&id scoreFlag&id;
54682      %let scoreFlag&id = 0;
54683      %if &id=1 or ^&fcmpStart %then %do;
54684      proc sort data=&fcmpdata out=_temp&id nodupkey;
54685      by NAME;
54686      where id=&id and LHS in( %let j=1;
54687      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
54688      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
54689      "&var" %let j = %eval(&j+1);
54690      %end;
54691      );
54692      run;
54693      %let dsid = %sysfunc(open(_temp&id));
54694      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
54695      %let dsid = %sysfunc(close(&dsid));
54696      %if &&nobs&id %then %do;
54697      %let scoreFlag&id = 1;
54698      %let fcmpStart = 1;
54699      %end;
54700      %else %let fcmpStart = 0;
54701      %end;
54702      %else %do;
54703      proc sort data=&fcmpdata out=_tempid;
54704      where id=&id;
54705      by LHS;
54706      run;
54707      %let dsid = %sysfunc(open(_tempid));
54708      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
54709      %let dsid = %sysfunc(close(&dsid));
54710      %if ^&&nobs&id %then %do;
54711      proc datasets lib=work nolist;
54712      delete _tempid;
54713      run;
54714      quit;
54715      %end;
54716      %else %do;
54717      data _tempAll;
54718      set %let j=%eval(&id-1);
54719      %do x=1 %to &j;
54720      %if &&nobs&x %then %do;
54721      _temp&x %end;
54722      %end;
54723      ;
54724      run;
54725      proc sql;
54726      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
54727      quit;
54728      data _temp&id;
54729      set _temp&id;
54730      where LHS ne '' and NAME ne '' and Node ne '';
54731      run;
54732      proc datasets lib=work nolist;
54733      delete _tempAll;
54734      run;
54735      %let dsid = %sysfunc(open(_temp&id));
54736      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
54737      %let dsid = %sysfunc(close(&dsid));
54738      %if ^&&nobs&id %then %do;
54739      proc datasets lib=work nolist;
54740      delete _temp&id;
54741      run;
54742      quit;
54743      %end;
54744      %else %do;
54745      %let scoreFlag&id = 1;
54746      data _temp&id;
54747      set _temp&id;
54748      where LHS ne NAME and node ne '';
54749      run;
54750      %let dsid = %sysfunc(open(_temp&id));
54751      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
54752      %let dsid = %sysfunc(close(&dsid));
54753      %if ^&&nobs&id %then %do;
54754      proc datasets lib=work nolist;
54755      delete _temp&id;
54756      run;
54757      quit;
54758      %end;
54759      %else %do;
54760      proc sort data=_temp&id nodupkey;
54761      by LHS NAME;
54762      run;
54763      %end;
54764      %end;
54765      %end;
54766      %end;
54767      %mend varDept;
54768      %macro optCode(outdata=fcmpdata);
54769      %global fcmpStart;
54770      %let fcmpStart = 0;
54771      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
54772      %let NumNodes=9;
54773      %do k=1 %to &NumNodes;
54774      %vardept(fcmpdata=&outdata, id=&k);
54775      %end;
54776      %mend optCode;
54777      %optcode(outData=EMWS8.Ensmbl57_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 188 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 130 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 58 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 58 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 58 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 58 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 58 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 58 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 84 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
The SAS System

      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

54778      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas";
54779      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
54780      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas.
54781     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
54782     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
54783     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
54784     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
54785     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
54786     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
54787     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
54788     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
54789     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
54790     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
54791     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
54792     +LENGTH _WARN_ $4
54793     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
54794     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
54795     +
54796     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
54797     +
54798     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
54799     +
54800     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
54801     +
54802     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
54803     +
54804     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
54805     +
54806     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
54807     +
54808     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
54809     +
54810     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
54811     +
54812     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
54813     +
54814     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
54815     +
54816     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
54817     +
54818     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
54819     +
54820     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
54821     +
54822     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
54823     +
54824     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
54825     +
54826     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
54827     +
54828     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
54829     +
54830     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
54831     +
54832     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
54833     +
54834     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
54835     +
54836     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
54837     +
54838     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
54839     +
54840     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
54841     +
54842     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
54843     +
54844     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
54845     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
54846     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
54847     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
54848     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
54849     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
54850     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
54851     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
54852     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
54853     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
54854     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
54855     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
54856     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
54857     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
54858     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
54859     +end;
MPRINT(EM_DIAGRAM):   end;
54860     +else do;
MPRINT(EM_DIAGRAM):   else do;
54861     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
54862     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
54863     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
54864     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
54865     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
54866     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
54867     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
54868     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
54869     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
54870     +         end;
MPRINT(EM_DIAGRAM):   end;
54871     +         else do;
MPRINT(EM_DIAGRAM):   else do;
54872     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
54873     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
54874     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
54875     +            end;
MPRINT(EM_DIAGRAM):   end;
54876     +         end;
MPRINT(EM_DIAGRAM):   end;
54877     +      end;
MPRINT(EM_DIAGRAM):   end;
54878     +      else do;
MPRINT(EM_DIAGRAM):   else do;
54879     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
54880     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
54881     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
54882     +         end;
MPRINT(EM_DIAGRAM):   end;
54883     +      end;
MPRINT(EM_DIAGRAM):   end;
54884     +   end;
MPRINT(EM_DIAGRAM):   end;
54885     +   else do;
MPRINT(EM_DIAGRAM):   else do;
54886     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
54887     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
54888     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
54889     +      end;
MPRINT(EM_DIAGRAM):   end;
54890     +      else do;
MPRINT(EM_DIAGRAM):   else do;
54891     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
54892     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
54893     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
54894     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
54895     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
54896     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
54897     +         end;
MPRINT(EM_DIAGRAM):   end;
54898     +      end;
MPRINT(EM_DIAGRAM):   end;
54899     +   end;
MPRINT(EM_DIAGRAM):   end;
54900     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
54901     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
54902     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
54903     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
54904     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
54905     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
54906     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
54907     +   end;
MPRINT(EM_DIAGRAM):   end;
54908     +end;
MPRINT(EM_DIAGRAM):   end;
54909     +
54910     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
54911     +*** Checking missing input Interval
54912     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
54913     +
54914     +IF NMISS(
54915     +   AcceptedCmpTotal ,
54916     +   Frq ,
54917     +   Income ,
54918     +   Mnt ,
54919     +   MntGoldProds ,
54920     +   MntMeatProducts ,
54921     +   NumCatalogPurchases ,
54922     +   NumDealsPurchases ,
54923     +   NumWebVisitsMonth ,
54924     +   RFMstat ,
54925     +   Recency ,
54926     +   Teenhome ,
54927     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , Recency , Teenhome , Year_Birth ) THEN DO;
54928     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
54929     +
54930     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
54931     +END;
MPRINT(EM_DIAGRAM):   END;
54932     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
54933     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
54934     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
54935     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
54936     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
54937     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
54938     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
54939     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
54940     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
54941     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
54942     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
54943     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
54944     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
54945     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
54946     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
54947     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
54948     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
54949     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
54950     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
54951     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
54952     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
54953     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
54954     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
54955     +END;
MPRINT(EM_DIAGRAM):   END;
54956     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
54957     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
54958     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
54959     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
54960     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
54961     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
54962     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
54963     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
54964     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
54965     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
54966     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
54967     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
54968     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
54969     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
54970     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
54971     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * MntMeatProducts ;
54972     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
54973     +   ELSE S_NumCatalogPurchases
54974     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
54975     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * NumCatalogPurchases ;
54976     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
54977     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
54978     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
54979     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
54980     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
54981     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
54982     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
54983     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
54984     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
54985     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
54986     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
54987     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
54988     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
54989     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
54990     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
54991     +END;
MPRINT(EM_DIAGRAM):   END;
54992     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
54993     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
54994     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
54995     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
54996     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
54997     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
54998     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
54999     +   H1x1_1  =    -0.10743056275421 * S_AcceptedCmpTotal
55000     +          +     0.03409888241348 * S_Frq  +    -0.00055974837068 * S_Income
55001     +          +       0.134341851096 * S_Mnt  +    -0.00857864409164 *
55002     +        S_MntGoldProds  +      0.4895390061827 * S_MntMeatProducts
55003     +          +    -0.01423451356563 * S_NumCatalogPurchases
55004     +          +     0.06006350655487 * S_NumDealsPurchases
55005     +          +    -0.20885493964335 * S_NumWebVisitsMonth
55006     +          +    -0.01173202621744 * S_RFMstat  +     0.25819909101611 *
55007     +        S_Recency  +    -0.03326479668652 * S_Teenhome
55008     +          +     0.03371888312814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.10743056275421 * S_AcceptedCmpTotal + 0.03409888241348 * S_Frq + -0.00055974837068 * S_Income + 0.134341851096 * S_Mnt + -0.00857864409164 * S_MntGoldProds + 0.4895390061827 * S_MntMeatProducts + -0.01423451356563 * 
S_NumCatalogPurchases + 0.06006350655487 * S_NumDealsPurchases + -0.20885493964335 * S_NumWebVisitsMonth + -0.01173202621744 * S_RFMstat + 0.25819909101611 * S_Recency + -0.03326479668652 * S_Teenhome + 0.03371888312814 * S_Year_Birth ;
55009     +   H1x1_2  =    -0.03078478134042 * S_AcceptedCmpTotal
55010     +          +    -0.12351766308972 * S_Frq  +     -0.1943406821731 * S_Income
55011     +          +    -0.36027326127049 * S_Mnt  +     0.05117597516658 *
55012     +        S_MntGoldProds  +     0.07931191953223 * S_MntMeatProducts
55013     +          +    -0.03109266966794 * S_NumCatalogPurchases
55014     +          +     0.05524435494328 * S_NumDealsPurchases
55015     +          +     -0.0105802056898 * S_NumWebVisitsMonth
55016     +          +     0.01793771049002 * S_RFMstat  +      0.0322880575902 *
55017     +        S_Recency  +       0.195010707702 * S_Teenhome
55018     +          +     -0.0351563039686 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03078478134042 * S_AcceptedCmpTotal + -0.12351766308972 * S_Frq + -0.1943406821731 * S_Income + -0.36027326127049 * S_Mnt + 0.05117597516658 * S_MntGoldProds + 0.07931191953223 * S_MntMeatProducts + -0.03109266966794 * 
S_NumCatalogPurchases + 0.05524435494328 * S_NumDealsPurchases + -0.0105802056898 * S_NumWebVisitsMonth + 0.01793771049002 * S_RFMstat + 0.0322880575902 * S_Recency + 0.195010707702 * S_Teenhome + -0.0351563039686 * S_Year_Birth ;
55019     +   H1x1_3  =     0.23990987498311 * S_AcceptedCmpTotal
55020     +          +     0.04052411845464 * S_Frq  +    -0.00302331972067 * S_Income
55021     +          +     0.39981531247427 * S_Mnt  +     0.01433011413993 *
55022     +        S_MntGoldProds  +    -0.19955782687502 * S_MntMeatProducts
55023     +          +     0.07777995109144 * S_NumCatalogPurchases
55024     +          +     0.08683394019767 * S_NumDealsPurchases
55025     +          +     0.27328366433987 * S_NumWebVisitsMonth
55026     +          +      0.0263930429288 * S_RFMstat  +    -0.38900647412136 *
55027     +        S_Recency  +      0.0640153287908 * S_Teenhome
55028     +          +     0.07587467002123 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.23990987498311 * S_AcceptedCmpTotal + 0.04052411845464 * S_Frq + -0.00302331972067 * S_Income + 0.39981531247427 * S_Mnt + 0.01433011413993 * S_MntGoldProds + -0.19955782687502 * S_MntMeatProducts + 0.07777995109144 * 
S_NumCatalogPurchases + 0.08683394019767 * S_NumDealsPurchases + 0.27328366433987 * S_NumWebVisitsMonth + 0.0263930429288 * S_RFMstat + -0.38900647412136 * S_Recency + 0.0640153287908 * S_Teenhome + 0.07587467002123 * S_Year_Birth ;
55029     +   H1x1_1  = H1x1_1  +    -0.05820552608682 * Marital_StatusDivorced
55030     +          +    -0.02695167777393 * Marital_StatusMarried
55031     +          +    -0.00733864032764 * Marital_StatusSingle
55032     +          +     0.03838747494293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.05820552608682 * Marital_StatusDivorced + -0.02695167777393 * Marital_StatusMarried + -0.00733864032764 * Marital_StatusSingle + 0.03838747494293 * Marital_StatusTogether ;
55033     +   H1x1_2  = H1x1_2  +    -0.00853551919442 * Marital_StatusDivorced
55034     +          +     0.42249671001117 * Marital_StatusMarried
55035     +          +    -0.18515416581955 * Marital_StatusSingle
55036     +          +     0.25783473520826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.00853551919442 * Marital_StatusDivorced + 0.42249671001117 * Marital_StatusMarried + -0.18515416581955 * Marital_StatusSingle + 0.25783473520826 * Marital_StatusTogether ;
55037     +   H1x1_3  = H1x1_3  +      0.4175036565076 * Marital_StatusDivorced
55038     +          +     0.45127582934777 * Marital_StatusMarried
55039     +          +       0.358157766485 * Marital_StatusSingle
55040     +          +     0.42627185625497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.4175036565076 * Marital_StatusDivorced + 0.45127582934777 * Marital_StatusMarried + 0.358157766485 * Marital_StatusSingle + 0.42627185625497 * Marital_StatusTogether ;
55041     +   H1x1_1  =    -1.23226472635566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.23226472635566 + H1x1_1 ;
55042     +   H1x1_2  =      2.2313165328971 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.2313165328971 + H1x1_2 ;
55043     +   H1x1_3  =     0.09755782095138 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.09755782095138 + H1x1_3 ;
55044     +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
55045     +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
55046     +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
55047     +END;
MPRINT(EM_DIAGRAM):   END;
55048     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
55049     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
55050     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
55051     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
55052     +END;
MPRINT(EM_DIAGRAM):   END;
55053     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
55054     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
55055     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
55056     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
55057     +   P_DepVar1  =     -68.075125441494 * H1x1_1  +    -72.7630361672259 * H1x1_2
55058     +          +    -71.6251597703755 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -68.075125441494 * H1x1_1 + -72.7630361672259 * H1x1_2 + -71.6251597703755 * H1x1_3 ;
55059     +   P_DepVar1  =    -25.6080957302662 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -25.6080957302662 + P_DepVar1 ;
55060     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
55061     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
55062     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
55063     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
55064     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
55065     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
55066     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
55067     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
55068     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
55069     +END;
MPRINT(EM_DIAGRAM):   END;
55070     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
55071     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
55072     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
55073     +END;
MPRINT(EM_DIAGRAM):   END;
55074     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
55075     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
55076     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
55077     +END;
MPRINT(EM_DIAGRAM):   END;
55078     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
55079     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
55080     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
55081     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
55082     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
55083     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
55084     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
55085     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
55086     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
55087     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
55088     +END;
MPRINT(EM_DIAGRAM):   END;
55089     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
55090     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
55091     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
55092     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
55093      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
55094      quit;
55095      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
55096      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
55097      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
55098      retain ID 2 Node "AutoNeural46";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural46";
55099      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
55100      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 956 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 956 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55101      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
55102      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
55103      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 956 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 956 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55104      proc sort data=EMWS8.AutoNeural46_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural46_variableset out=_temp2(keep=NAME CREATOR);
55105      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
55106      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL46_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

55107      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
55108      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
55109      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
55110      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55111      proc contents data=EMWS8.AutoNeural46_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural46_train out=_meta(keep=NAME) noprint;
55112      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

55113      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
55114      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
55115      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55116      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
55117      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
55118      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
55119      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55120      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
55121      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 496 rows and 5 columns.

55122      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

55123      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
55124      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 496 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 496 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55125      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
55126      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
55127      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
55128     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
55129     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
55130     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
55131     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
55132     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
55133     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
55134      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
55135      quit;
55136      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
55137      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
55138      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
55139      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
55140      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
55141      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55142      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
55143      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
55144      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

55145      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
55146      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
55147      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55148      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
55149      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
55150      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
55151      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55152      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
55153      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

55154      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
55155      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
55156      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55157      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
55158      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
55159      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
55160      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

55161      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
55162      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

55163      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55164      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
55165      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 500 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55166      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
55167      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
55168      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
55169     +
55170     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
55171     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
MPRINT(EM_DIAGRAM):   Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
55172     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
55173     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
55174     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
55175     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
55176     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
55177      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
55178      quit;
55179      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
55180      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
55181      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
55182      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
55183      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
55184      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

55185      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
55186      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
55187      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55188      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
55189      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
55190      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55191      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
55192      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
55193      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
55194      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

55195      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
55196      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55197      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
55198      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
55199      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55200      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
55201      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
55202      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
55203      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

55204      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
55205      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

55206      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55207      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
55208      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 539 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55209      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
55210      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
55211      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
55212     +
55213     +
55214     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
55215     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
55216     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
55217     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
55218     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
55219     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
55220     +
55221     +
55222     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
55223     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
55224     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
55225     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
55226     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
55227     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
55228     +
55229     +
55230     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
55231     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
55232     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
55233     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
55234     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
55235     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
55236     +
55237     +
55238     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
55239     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
55240     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
55241     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
55242     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
55243     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
55244     +
55245     +
55246     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
55247     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
55248     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
55249     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
55250     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
55251     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
55252     +
55253     +
55254     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
55255     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
55256     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
55257     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
55258     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
55259     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
55260     +
55261     +
55262     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
55263     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
55264     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
55265     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
55266     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
55267     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
55268     +
55269     +
55270     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
55271     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
55272     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
55273     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
55274     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
55275     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
55276     +if
55277     +_FILTERNORM1 not in ( '.')
55278     + and
55279     +_FILTERNORM2 not in ( '.')
55280     + and
55281     +_FILTERNORM3 not in ( '.')
55282     + and
55283     +_FILTERNORM4 not in ( '.')
55284     + and
55285     +_FILTERNORM5 not in ( '.')
55286     + and
55287     +_FILTERNORM6 not in ( '.')
55288     + and
55289     +_FILTERNORM7 not in ( ' ')
55290     + and
55291     +_FILTERNORM8 not in ( ' ')
55292     +and
55293     +( Dt_Customer ne .)
55294     +and ( Income ne . and (Income<=107000))
55295     +and ( Kidhome ne .)
55296     +and ( MntFishProducts ne .)
55297     +and ( MntFruits ne .)
55298     +and ( MntGoldProds ne .)
55299     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
55300     +and ( MntSweetProducts ne .)
55301     +and ( MntWines ne .)
55302     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
55303     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
55304     +and ( NumStorePurchases ne .)
55305     +and ( NumWebPurchases ne .)
55306     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
55307     +and ( Recency ne .)
55308     +and ( Teenhome ne .)
55309     +and ( Year_Birth ne .)
55310     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and _FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and _FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 
not in ( ' ') and ( Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne . and (MntMeatProducts<=964)) and ( MntSweetProducts ne 
.) and ( MntWines ne .) and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( NumWebVisitsMonth ne . and 
(NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne .) and ( Year_Birth ne .) then do;
55311     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
55312     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
55313     +end;
MPRINT(EM_DIAGRAM):   end;
55314     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
55315     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
55316      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
55317      quit;
55318      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
55319      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
55320      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
55321      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
55322      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
55323      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

55324      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
55325      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
55326      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55327      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
55328      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
55329      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55330      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
55331      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
55332      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
55333      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

55334      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
55335      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

55336      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
55337      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
55338      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

55339      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
55340      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
55341      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
55342      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55343      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
55344      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

55345      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55346      proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl57_FCMP data=_tempx;
55347      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL57_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL57_FCMP has 605 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

55348      %macro varDept(fcmpdata=,id=);
55349      %global nobs&id scoreFlag&id;
55350      %let scoreFlag&id = 0;
55351      %if &id=1 or ^&fcmpStart %then %do;
55352      proc sort data=&fcmpdata out=_temp&id nodupkey;
55353      by NAME;
55354      where id=&id and LHS in( %let j=1;
55355      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
55356      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
55357      "&var" %let j = %eval(&j+1);
55358      %end;
55359      );
55360      run;
55361      %let dsid = %sysfunc(open(_temp&id));
55362      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
55363      %let dsid = %sysfunc(close(&dsid));
55364      %if &&nobs&id %then %do;
55365      %let scoreFlag&id = 1;
55366      %let fcmpStart = 1;
55367      %end;
55368      %else %let fcmpStart = 0;
55369      %end;
55370      %else %do;
55371      proc sort data=&fcmpdata out=_tempid;
55372      where id=&id;
55373      by LHS;
55374      run;
55375      %let dsid = %sysfunc(open(_tempid));
55376      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
55377      %let dsid = %sysfunc(close(&dsid));
55378      %if ^&&nobs&id %then %do;
55379      proc datasets lib=work nolist;
55380      delete _tempid;
55381      run;
55382      quit;
55383      %end;
55384      %else %do;
55385      data _tempAll;
55386      set %let j=%eval(&id-1);
55387      %do x=1 %to &j;
55388      %if &&nobs&x %then %do;
55389      _temp&x %end;
55390      %end;
55391      ;
55392      run;
55393      proc sql;
55394      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
55395      quit;
55396      data _temp&id;
55397      set _temp&id;
55398      where LHS ne '' and NAME ne '' and Node ne '';
55399      run;
55400      proc datasets lib=work nolist;
55401      delete _tempAll;
55402      run;
55403      %let dsid = %sysfunc(open(_temp&id));
55404      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
55405      %let dsid = %sysfunc(close(&dsid));
55406      %if ^&&nobs&id %then %do;
55407      proc datasets lib=work nolist;
55408      delete _temp&id;
55409      run;
55410      quit;
55411      %end;
55412      %else %do;
55413      %let scoreFlag&id = 1;
55414      data _temp&id;
55415      set _temp&id;
55416      where LHS ne NAME and node ne '';
55417      run;
55418      %let dsid = %sysfunc(open(_temp&id));
55419      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
55420      %let dsid = %sysfunc(close(&dsid));
55421      %if ^&&nobs&id %then %do;
55422      proc datasets lib=work nolist;
55423      delete _temp&id;
55424      run;
55425      quit;
55426      %end;
55427      %else %do;
55428      proc sort data=_temp&id nodupkey;
55429      by LHS NAME;
55430      run;
55431      %end;
55432      %end;
55433      %end;
55434      %end;
55435      %mend varDept;
55436      %macro optCode(outdata=fcmpdata);
55437      %global fcmpStart;
55438      %let fcmpStart = 0;
55439      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
55440      %let NumNodes=9;
55441      %do k=1 %to &NumNodes;
55442      %vardept(fcmpdata=&outdata, id=&k);
55443      %end;
55444      %mend optCode;
55445      %optcode(outData=EMWS8.Ensmbl57_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 71 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 52 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 19 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 19 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 19 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 45 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl57_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

55446      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
55447      * Ensmbl57: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Computing metadata for TRAIN data;
55448      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL57_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl57\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl57_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl57_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl57_TRAIN out=WORK.M0IN1_B2 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0IN1_B2;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0IN1_B2(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0IN1_B2;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0IN1_B2;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M116SM6K NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M116SM6K;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M116SM6K;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TXIZ9Z(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M116SM6K;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M116SM6K;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M116SM6K;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M116SM6K;
MPRINT(EMADVISECOLUMNS):   set WORK.M116SM6K;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural44_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural44_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl57_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl57";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl57";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl57";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl57";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl57";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl57";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl57";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl57";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl57";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl57";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl57: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" "P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl57";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
55768      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
55769      set EMWS8.Ensmbl57_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl57_EMINFO;
55770      where DATA='Ensmbl57' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl57' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
55771      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL57_EMINFO.
      WHERE (DATA='Ensmbl57') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

55772      data EMWS8.Ensmbl57_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl57_EMINFO;
55773      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
55774      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
55775      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL57_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
55779      run;
55780      data EMWS8.Ensmbl57_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl57_EMINFO;
55781      set EMWS8.Ensmbl57_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl57_EMINFO WORK.MODELTEMP_INFO;
55782      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL57_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL57_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55783      proc sort data = EMWS8.Ensmbl57_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl57_EMINFO NOTHREADS;
55784      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
55785      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL57_EMINFO.
NOTE: The data set EMWS8.ENSMBL57_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

55786      proc sort data = EMWS8.AutoNeural44_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural44_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
55787      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
55788      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL44_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55789      proc sort data = EMWS8.Ensmbl57_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl57_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
55790      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
55791      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL57_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

55792      data EMWS8.Ensmbl57_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl57_EMINFO;
55793      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
55794      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
55795      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL57_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

55796      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
55797      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
55798      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
55799      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.ENSMBL57_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.ENSMBL57_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
