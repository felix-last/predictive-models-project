MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.31 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                16.31 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0HP5FO7 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0HP5FO7 new;
MPRINT(EM_DIAGRAM):   run;
342162     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
342163     set EMWS8.AutoNeural7_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_OUTKEY;
342164     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
342165     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 56 observations read from the data set EMWS8.AUTONEURAL7_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342166     filename emflow
342166   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural7: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
342167     *------------------------------------------------------------*;
342168     * AutoNeural7: Scoring DATA data;
342169     *------------------------------------------------------------*;
342170     data EMWS8.AutoNeural7_TRAIN
342171     / view=EMWS8.AutoNeural7_TRAIN
342172     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural7_TRAIN / view=EMWS8.AutoNeural7_TRAIN ;
342173     set EMWS8.Meta_TRAIN
342174     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
342175     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMFLOWSCORE.sas.
342176    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
342177    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
342178    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
342179    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
342180    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
342181    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
342182    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
342183    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
342184    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
342185    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
342186    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
342187    +LENGTH _WARN_ $4
342188    +      F_DepVar  $ 12
342189    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
342190    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
342191    +
342192    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
342193    +
342194    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
342195    +
342196    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
342197    +
342198    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
342199    +
342200    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
342201    +
342202    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
342203    +
342204    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
342205    +
342206    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
342207    +
342208    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
342209    +
342210    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
342211    +
342212    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
342213    +
342214    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
342215    +
342216    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
342217    +
342218    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
342219    +
342220    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
342221    +
342222    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
342223    +
342224    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
342225    +
342226    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
342227    +
342228    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
342229    +
342230    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
342231    +
342232    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
342233    +
342234    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
342235    +
342236    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
342237    +
342238    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
342239    +
342240    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
342241    +
342242    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
342243    +
342244    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
342245    +
342246    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
342247    +
342248    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
342249    +
342250    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
342251    +
342252    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
342253    +
342254    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
342255    +
342256    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
342257    +
342258    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
342259    +
342260    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
342261    +
342262    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
342263    +
342264    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
342265    +
342266    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
342267    +
342268    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
342269    +
342270    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
342271    +
342272    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
342273    +
342274    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
342275    +
342276    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
342277    +
342278    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
342279    +
342280    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
342281    +
342282    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
342283    +
342284    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
342285    +
342286    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
342287    +
342288    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
342289    +
342290    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
342291    +
342292    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
342293    +
342294    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
342295    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
342296    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
342297    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
342298    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
342299    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342300    +end;
MPRINT(EM_DIAGRAM):   end;
342301    +else do;
MPRINT(EM_DIAGRAM):   else do;
342302    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
342303    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
342304    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
342305    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
342306    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
342307    +   end;
MPRINT(EM_DIAGRAM):   end;
342308    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
342309    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
342310    +   end;
MPRINT(EM_DIAGRAM):   end;
342311    +   else do;
MPRINT(EM_DIAGRAM):   else do;
342312    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
342313    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
342314    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342315    +   end;
MPRINT(EM_DIAGRAM):   end;
342316    +end;
MPRINT(EM_DIAGRAM):   end;
342317    +
342318    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
342319    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
342320    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
342321    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
342322    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
342323    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342324    +end;
MPRINT(EM_DIAGRAM):   end;
342325    +else do;
MPRINT(EM_DIAGRAM):   else do;
342326    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
342327    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
342328    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
342329    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
342330    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
342331    +   end;
MPRINT(EM_DIAGRAM):   end;
342332    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
342333    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
342334    +   end;
MPRINT(EM_DIAGRAM):   end;
342335    +   else do;
MPRINT(EM_DIAGRAM):   else do;
342336    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
342337    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
342338    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342339    +   end;
MPRINT(EM_DIAGRAM):   end;
342340    +end;
MPRINT(EM_DIAGRAM):   end;
342341    +
342342    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
342343    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
342344    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
342345    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
342346    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
342347    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342348    +end;
MPRINT(EM_DIAGRAM):   end;
342349    +else do;
MPRINT(EM_DIAGRAM):   else do;
342350    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
342351    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
342352    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
342353    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
342354    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
342355    +   end;
MPRINT(EM_DIAGRAM):   end;
342356    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
342357    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
342358    +   end;
MPRINT(EM_DIAGRAM):   end;
342359    +   else do;
MPRINT(EM_DIAGRAM):   else do;
342360    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
342361    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
342362    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342363    +   end;
MPRINT(EM_DIAGRAM):   end;
342364    +end;
MPRINT(EM_DIAGRAM):   end;
342365    +
342366    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
342367    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
342368    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
342369    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
342370    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
342371    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342372    +end;
MPRINT(EM_DIAGRAM):   end;
342373    +else do;
MPRINT(EM_DIAGRAM):   else do;
342374    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
342375    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
342376    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
342377    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
342378    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
342379    +   end;
MPRINT(EM_DIAGRAM):   end;
342380    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
342381    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
342382    +   end;
MPRINT(EM_DIAGRAM):   end;
342383    +   else do;
MPRINT(EM_DIAGRAM):   else do;
342384    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
342385    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
342386    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342387    +   end;
MPRINT(EM_DIAGRAM):   end;
342388    +end;
MPRINT(EM_DIAGRAM):   end;
342389    +
342390    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
342391    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
342392    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
342393    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
342394    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
342395    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342396    +end;
MPRINT(EM_DIAGRAM):   end;
342397    +else do;
MPRINT(EM_DIAGRAM):   else do;
342398    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
342399    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
342400    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
342401    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
342402    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
342403    +   end;
MPRINT(EM_DIAGRAM):   end;
342404    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
342405    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
342406    +   end;
MPRINT(EM_DIAGRAM):   end;
342407    +   else do;
MPRINT(EM_DIAGRAM):   else do;
342408    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
342409    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
342410    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342411    +   end;
MPRINT(EM_DIAGRAM):   end;
342412    +end;
MPRINT(EM_DIAGRAM):   end;
342413    +
342414    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
342415    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
342416    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
342417    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
342418    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
342419    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342420    +end;
MPRINT(EM_DIAGRAM):   end;
342421    +else do;
MPRINT(EM_DIAGRAM):   else do;
342422    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
342423    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
342424    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
342425    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
342426    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
342427    +   end;
MPRINT(EM_DIAGRAM):   end;
342428    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
342429    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
342430    +   end;
MPRINT(EM_DIAGRAM):   end;
342431    +   else do;
MPRINT(EM_DIAGRAM):   else do;
342432    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
342433    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
342434    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342435    +   end;
MPRINT(EM_DIAGRAM):   end;
342436    +end;
MPRINT(EM_DIAGRAM):   end;
342437    +
342438    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
342439    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
342440    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
342441    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
342442    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
342443    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342444    +end;
MPRINT(EM_DIAGRAM):   end;
342445    +else do;
MPRINT(EM_DIAGRAM):   else do;
342446    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
342447    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
342448    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
342449    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
342450    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
342451    +   end;
MPRINT(EM_DIAGRAM):   end;
342452    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
342453    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
342454    +   end;
MPRINT(EM_DIAGRAM):   end;
342455    +   else do;
MPRINT(EM_DIAGRAM):   else do;
342456    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
342457    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
342458    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342459    +   end;
MPRINT(EM_DIAGRAM):   end;
342460    +end;
MPRINT(EM_DIAGRAM):   end;
342461    +
342462    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
342463    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
342464    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
342465    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
342466    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
342467    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
342468    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
342469    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
342470    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
342471    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
342472    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
342473    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
342474    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
342475    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342476    +end;
MPRINT(EM_DIAGRAM):   end;
342477    +else do;
MPRINT(EM_DIAGRAM):   else do;
342478    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
342479    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
342480    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
342481    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
342482    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
342483    +   end;
MPRINT(EM_DIAGRAM):   end;
342484    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
342485    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
342486    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
342487    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
342488    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
342489    +   end;
MPRINT(EM_DIAGRAM):   end;
342490    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
342491    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
342492    +   end;
MPRINT(EM_DIAGRAM):   end;
342493    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
342494    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
342495    +   end;
MPRINT(EM_DIAGRAM):   end;
342496    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
342497    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
342498    +   end;
MPRINT(EM_DIAGRAM):   end;
342499    +   else do;
MPRINT(EM_DIAGRAM):   else do;
342500    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
342501    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
342502    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
342503    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
342504    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
342505    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342506    +   end;
MPRINT(EM_DIAGRAM):   end;
342507    +end;
MPRINT(EM_DIAGRAM):   end;
342508    +
342509    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
342510    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
342511    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
342512    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
342513    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
342514    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
342515    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
342516    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
342517    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
342518    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
342519    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
342520    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
342521    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
342522    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
342523    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342524    +end;
MPRINT(EM_DIAGRAM):   end;
342525    +else do;
MPRINT(EM_DIAGRAM):   else do;
342526    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
342527    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
342528    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
342529    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
342530    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
342531    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
342532    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
342533    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
342534    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
342535    +         end;
MPRINT(EM_DIAGRAM):   end;
342536    +         else do;
MPRINT(EM_DIAGRAM):   else do;
342537    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
342538    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
342539    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
342540    +            end;
MPRINT(EM_DIAGRAM):   end;
342541    +         end;
MPRINT(EM_DIAGRAM):   end;
342542    +      end;
MPRINT(EM_DIAGRAM):   end;
342543    +      else do;
MPRINT(EM_DIAGRAM):   else do;
342544    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
342545    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
342546    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
342547    +         end;
MPRINT(EM_DIAGRAM):   end;
342548    +      end;
MPRINT(EM_DIAGRAM):   end;
342549    +   end;
MPRINT(EM_DIAGRAM):   end;
342550    +   else do;
MPRINT(EM_DIAGRAM):   else do;
342551    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
342552    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
342553    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
342554    +      end;
MPRINT(EM_DIAGRAM):   end;
342555    +      else do;
MPRINT(EM_DIAGRAM):   else do;
342556    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
342557    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
342558    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
342559    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
342560    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
342561    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
342562    +         end;
MPRINT(EM_DIAGRAM):   end;
342563    +      end;
MPRINT(EM_DIAGRAM):   end;
342564    +   end;
MPRINT(EM_DIAGRAM):   end;
342565    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
342566    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
342567    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
342568    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
342569    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
342570    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
342571    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342572    +   end;
MPRINT(EM_DIAGRAM):   end;
342573    +end;
MPRINT(EM_DIAGRAM):   end;
342574    +
342575    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342576    +*** Checking missing input Interval
342577    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
342578    +
342579    +IF NMISS(
342580    +   AcceptedCmpTotal ,
342581    +   Age ,
342582    +   Frq ,
342583    +   Income ,
342584    +   Kidhome ,
342585    +   Mnt ,
342586    +   MntFishProducts ,
342587    +   MntFruits ,
342588    +   MntGoldProds ,
342589    +   MntMeatProducts ,
342590    +   MntSweetProducts ,
342591    +   MntWines ,
342592    +   MonthsAsCustomer ,
342593    +   NumCatalogPurchases ,
342594    +   NumDealsPurchases ,
342595    +   NumDistPurchases ,
342596    +   NumStorePurchases ,
342597    +   NumWebPurchases ,
342598    +   NumWebVisitsMonth ,
342599    +   RFMstat ,
342600    +   RMntFrq ,
342601    +   Recency ,
342602    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
342603    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
342604    +
342605    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342606    +END;
MPRINT(EM_DIAGRAM):   END;
342607    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342608    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
342609    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342610    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
342611    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
342612    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
342613    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
342614    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
342615    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
342616    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
342617    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
342618    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
342619    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
342620    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
342621    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
342622    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
342623    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
342624    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
342625    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
342626    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
342627    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
342628    +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
342629    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
342630    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
342631    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
342632    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
342633    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
342634    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
342635    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
342636    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
342637    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
342638    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
342639    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
342640    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
342641    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
342642    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
342643    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
342644    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
342645    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
342646    +END;
MPRINT(EM_DIAGRAM):   END;
342647    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
342648    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
342649    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
342650    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
342651    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
342652    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
342653    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
342654    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
342655    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
342656    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
342657    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
342658    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
342659    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
342660    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
342661    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
342662    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
342663    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
342664    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
342665    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
342666    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
342667    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
342668    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
342669    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
342670    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
342671    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
342672    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
342673    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
342674    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
342675    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
342676    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
342677    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
342678    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
342679    +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
342680    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
342681    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
342682    +   ELSE S_NumCatalogPurchases
342683    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
342684    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
342685    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
342686    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
342687    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
342688    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
342689    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
342690    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
342691    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
342692    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
342693    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
342694    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
342695    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
342696    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
342697    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
342698    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
342699    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
342700    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
342701    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
342702    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
342703    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
342704    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
342705    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
342706    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
342707    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
342708    +END;
MPRINT(EM_DIAGRAM):   END;
342709    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342710    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
342711    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342712    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342713    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
342714    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342715    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342716    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
342717    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342718    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
342719    +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
342720    +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
342721    +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
342722    +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
342723    +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
342724    +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
342725    +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
342726    +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
342727    +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
342728    +          +     0.08390531145773 * S_NumDealsPurchases
342729    +          +    -0.29505970645775 * S_NumDistPurchases
342730    +          +    -0.13820571170194 * S_NumStorePurchases
342731    +          +     0.11468011313368 * S_NumWebPurchases
342732    +          +    -0.18421241371843 * S_NumWebVisitsMonth
342733    +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
342734    +        S_RMntFrq  +     0.18022777532589 * S_Recency
342735    +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 * 
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome 
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 * 
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts + 
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 * 
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 * 
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 * 
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 * 
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq + 
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
342736    +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
342737    +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
342738    +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
342739    +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
342740    +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
342741    +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
342742    +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
342743    +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
342744    +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
342745    +          +     0.18009076035363 * S_NumDealsPurchases
342746    +          +     0.03853861006587 * S_NumDistPurchases
342747    +          +    -0.05118063952874 * S_NumStorePurchases
342748    +          +    -0.03282286120473 * S_NumWebPurchases
342749    +          +     0.31160900419026 * S_NumWebVisitsMonth
342750    +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
342751    +        S_RMntFrq  +    -0.34796767111274 * S_Recency
342752    +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age 
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome + 
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 * 
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts + 
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 * 
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 * 
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 * 
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 * 
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq + 
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
342753    +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
342754    +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
342755    +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
342756    +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
342757    +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 * 
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 + 
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 * 
HigherEducationBinary0 ;
342758    +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
342759    +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
342760    +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
342761    +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
342762    +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 * 
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 + 
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 * 
HigherEducationBinary0 ;
342763    +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
342764    +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
342765    +        EducationGraduation  +     0.01586948449127 * EducationMaster
342766    +          +    -0.04750981393889 * Marital_StatusDivorced
342767    +          +     0.28216925676677 * Marital_StatusMarried
342768    +          +    -0.20757827413964 * Marital_StatusSingle
342769    +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle + 
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127 
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 * 
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 * 
Marital_StatusTogether ;
342770    +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
342771    +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
342772    +        EducationGraduation  +    -0.06975725710115 * EducationMaster
342773    +          +     0.05981919620577 * Marital_StatusDivorced
342774    +          +    -0.17161573846062 * Marital_StatusMarried
342775    +          +     0.15869440681091 * Marital_StatusSingle
342776    +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle + 
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation + 
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced + 
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle + 
-0.13282372850158 * Marital_StatusTogether ;
342777    +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
342778    +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
342779    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
342780    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
342781    +END;
MPRINT(EM_DIAGRAM):   END;
342782    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
342783    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
342784    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
342785    +END;
MPRINT(EM_DIAGRAM):   END;
342786    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342787    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
342788    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342789    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
342790    +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
342791    +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
342792    +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
342793    +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
342794    +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
342795    +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
342796    +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
342797    +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
342798    +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
342799    +          +     0.00741910846933 * S_NumDealsPurchases
342800    +          +       1.334289252268 * S_NumDistPurchases
342801    +          +    -0.29851567180932 * S_NumStorePurchases
342802    +          +    -0.52115313259666 * S_NumWebPurchases
342803    +          +     0.93907168501909 * S_NumWebVisitsMonth
342804    +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
342805    +        S_RMntFrq  +    -0.12807368149309 * S_Recency
342806    +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age 
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome + 
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 * 
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts + 
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 * 
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 * 
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 * 
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 * 
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq + 
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
342807    +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
342808    +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
342809    +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
342810    +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
342811    +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
342812    +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
342813    +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
342814    +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
342815    +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
342816    +          +     1.60427001186844 * S_NumDealsPurchases
342817    +          +    -0.18447618033353 * S_NumDistPurchases
342818    +          +    -1.29966073003539 * S_NumStorePurchases
342819    +          +    -1.12373457341536 * S_NumWebPurchases
342820    +          +     1.46099221440494 * S_NumWebVisitsMonth
342821    +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
342822    +        S_RMntFrq  +      0.4480370534729 * S_Recency
342823    +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 * 
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 * 
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts + 
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 * 
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines + 
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases + 
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases + 
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases + 
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 * 
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
342824    +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
342825    +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
342826    +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
342827    +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
342828    +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 * 
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 + 
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 * 
HigherEducationBinary0 ;
342829    +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
342830    +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
342831    +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
342832    +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
342833    +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 * 
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 + 
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 * 
HigherEducationBinary0 ;
342834    +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
342835    +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
342836    +        EducationGraduation  +    -0.81257694655594 * EducationMaster
342837    +          +     0.59819559998538 * Marital_StatusDivorced
342838    +          +     0.92957772553633 * Marital_StatusMarried
342839    +          +    -1.11796266958894 * Marital_StatusSingle
342840    +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 * 
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster + 
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried + 
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
342841    +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
342842    +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
342843    +        EducationGraduation  +    -0.65110715251273 * EducationMaster
342844    +          +      1.0870909562212 * Marital_StatusDivorced
342845    +          +     1.50333961797515 * Marital_StatusMarried
342846    +          +    -1.41407780765932 * Marital_StatusSingle
342847    +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle + 
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation + 
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced + 
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle + 
-0.52528072358697 * Marital_StatusTogether ;
342848    +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
342849    +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
342850    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
342851    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
342852    +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
342853    +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
342854    +END;
MPRINT(EM_DIAGRAM):   END;
342855    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
342856    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
342857    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
342858    +END;
MPRINT(EM_DIAGRAM):   END;
342859    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342860    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
342861    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342862    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
342863    +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
342864    +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
342865    +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
342866    +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
342867    +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
342868    +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
342869    +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
342870    +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
342871    +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
342872    +          +     -1.1174504455343 * S_NumDealsPurchases
342873    +          +    -0.18561253113498 * S_NumDistPurchases
342874    +          +    -0.35231054612792 * S_NumStorePurchases
342875    +          +      0.9249490354172 * S_NumWebPurchases
342876    +          +    -0.79868535147175 * S_NumWebVisitsMonth
342877    +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
342878    +        S_RMntFrq  +     0.62439123699986 * S_Recency
342879    +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 * 
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 * 
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts + 
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 * 
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines + 
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases + 
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases + 
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases + 
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 * 
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
342880    +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
342881    +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
342882    +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
342883    +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
342884    +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
342885    +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
342886    +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
342887    +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
342888    +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
342889    +          +     1.05434863590054 * S_NumDealsPurchases
342890    +          +    -0.73255174632068 * S_NumDistPurchases
342891    +          +     0.53949953455044 * S_NumStorePurchases
342892    +          +    -0.61709467816649 * S_NumWebPurchases
342893    +          +     1.36235282484348 * S_NumWebVisitsMonth
342894    +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
342895    +        S_RMntFrq  +    -0.24276831608869 * S_Recency
342896    +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 * 
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome 
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 * 
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts + 
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 * 
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 * 
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 * 
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 * 
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq + 
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
342897    +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
342898    +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
342899    +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
342900    +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
342901    +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 * 
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 + 
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 * 
HigherEducationBinary0 ;
342902    +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
342903    +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
342904    +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
342905    +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
342906    +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833 
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 + 
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 * 
HigherEducationBinary0 ;
342907    +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
342908    +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
342909    +        EducationGraduation  +    -0.45477734340809 * EducationMaster
342910    +          +     0.22253248036322 * Marital_StatusDivorced
342911    +          +    -1.72455332745001 * Marital_StatusMarried
342912    +          +     0.57787272107232 * Marital_StatusSingle
342913    +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle + 
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation + 
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced + 
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle + 
0.16267074825086 * Marital_StatusTogether ;
342914    +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
342915    +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
342916    +        EducationGraduation  +    -1.12620982139344 * EducationMaster
342917    +          +     0.14637124403046 * Marital_StatusDivorced
342918    +          +     0.18905186437528 * Marital_StatusMarried
342919    +          +     0.00511958458521 * Marital_StatusSingle
342920    +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle + 
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation + 
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced + 
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle + 
-0.915980703129 * Marital_StatusTogether ;
342921    +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
342922    +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
342923    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
342924    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
342925    +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
342926    +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
342927    +END;
MPRINT(EM_DIAGRAM):   END;
342928    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
342929    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
342930    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
342931    +END;
MPRINT(EM_DIAGRAM):   END;
342932    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342933    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
342934    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342935    +
342936    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
342937    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
342938    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
342939    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
342940    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
342941    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
342942    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
342943    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
342944    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
342945    +end;
MPRINT(EM_DIAGRAM):   end;
342946    +else do;
MPRINT(EM_DIAGRAM):   else do;
342947    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
342948    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
342949    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
342950    +   end;
MPRINT(EM_DIAGRAM):   end;
342951    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
342952    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
342953    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
342954    +   end;
MPRINT(EM_DIAGRAM):   end;
342955    +   else do;
MPRINT(EM_DIAGRAM):   else do;
342956    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
342957    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
342958    +   end;
MPRINT(EM_DIAGRAM):   end;
342959    +end;
MPRINT(EM_DIAGRAM):   end;
342960    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
342961    +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
342962    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
342963    +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
342964    +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 * 
H1x2_2 ;
342965    +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
342966    +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 * 
H1x3_2 ;
342967    +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
342968    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
342969    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
342970    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
342971    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
342972    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
342973    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
342974    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
342975    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
342976    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
342977    +END;
MPRINT(EM_DIAGRAM):   END;
342978    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
342979    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
342980    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
342981    +END;
MPRINT(EM_DIAGRAM):   END;
342982    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
342983    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
342984    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
342985    +END;
MPRINT(EM_DIAGRAM):   END;
342986    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
342987    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
342988    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
342989    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
342990    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
342991    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
342992    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
342993    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342994    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
342995    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342996    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
342997    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
342998    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
342999    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
343000    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
343001    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
343002    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
343003    +END;
MPRINT(EM_DIAGRAM):   END;
343004    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
343005    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
343006    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
343007    +drop
343008    +H1x1_1
343009    +H1x1_2
343010    +H1x2_1
343011    +H1x2_2
343012    +H1x3_1
343013    +H1x3_2
343014    +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
343015    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
343016     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL7_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
343017     quit;
343018     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
343019     filename emflow
343019   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural7: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
343020     *------------------------------------------------------------*;
343021     * AutoNeural7: Scoring VALIDATE data;
343022     *------------------------------------------------------------*;
343023     data EMWS8.AutoNeural7_VALIDATE
343024     / view=EMWS8.AutoNeural7_VALIDATE
343025     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural7_VALIDATE / view=EMWS8.AutoNeural7_VALIDATE ;
343026     set EMWS8.Meta_VALIDATE
343027     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
343028     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMFLOWSCORE.sas.
343029    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
343030    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
343031    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
343032    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
343033    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
343034    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
343035    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
343036    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
343037    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
343038    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
343039    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
343040    +LENGTH _WARN_ $4
343041    +      F_DepVar  $ 12
343042    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
343043    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
343044    +
343045    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
343046    +
343047    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
343048    +
343049    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
343050    +
343051    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
343052    +
343053    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
343054    +
343055    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
343056    +
343057    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
343058    +
343059    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
343060    +
343061    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
343062    +
343063    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
343064    +
343065    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
343066    +
343067    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
343068    +
343069    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
343070    +
343071    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
343072    +
343073    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
343074    +
343075    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
343076    +
343077    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
343078    +
343079    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
343080    +
343081    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
343082    +
343083    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
343084    +
343085    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
343086    +
343087    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
343088    +
343089    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
343090    +
343091    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
343092    +
343093    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
343094    +
343095    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
343096    +
343097    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
343098    +
343099    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
343100    +
343101    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
343102    +
343103    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
343104    +
343105    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
343106    +
343107    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
343108    +
343109    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
343110    +
343111    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
343112    +
343113    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
343114    +
343115    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
343116    +
343117    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
343118    +
343119    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
343120    +
343121    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
343122    +
343123    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
343124    +
343125    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
343126    +
343127    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
343128    +
343129    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
343130    +
343131    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
343132    +
343133    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
343134    +
343135    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
343136    +
343137    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
343138    +
343139    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
343140    +
343141    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
343142    +
343143    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
343144    +
343145    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
343146    +
343147    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
343148    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
343149    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
343150    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
343151    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
343152    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343153    +end;
MPRINT(EM_DIAGRAM):   end;
343154    +else do;
MPRINT(EM_DIAGRAM):   else do;
343155    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
343156    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
343157    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
343158    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
343159    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
343160    +   end;
MPRINT(EM_DIAGRAM):   end;
343161    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
343162    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
343163    +   end;
MPRINT(EM_DIAGRAM):   end;
343164    +   else do;
MPRINT(EM_DIAGRAM):   else do;
343165    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
343166    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
343167    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343168    +   end;
MPRINT(EM_DIAGRAM):   end;
343169    +end;
MPRINT(EM_DIAGRAM):   end;
343170    +
343171    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
343172    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
343173    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
343174    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
343175    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
343176    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343177    +end;
MPRINT(EM_DIAGRAM):   end;
343178    +else do;
MPRINT(EM_DIAGRAM):   else do;
343179    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
343180    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
343181    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
343182    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
343183    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
343184    +   end;
MPRINT(EM_DIAGRAM):   end;
343185    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
343186    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
343187    +   end;
MPRINT(EM_DIAGRAM):   end;
343188    +   else do;
MPRINT(EM_DIAGRAM):   else do;
343189    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
343190    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
343191    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343192    +   end;
MPRINT(EM_DIAGRAM):   end;
343193    +end;
MPRINT(EM_DIAGRAM):   end;
343194    +
343195    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
343196    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
343197    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
343198    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
343199    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
343200    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343201    +end;
MPRINT(EM_DIAGRAM):   end;
343202    +else do;
MPRINT(EM_DIAGRAM):   else do;
343203    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
343204    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
343205    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
343206    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
343207    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
343208    +   end;
MPRINT(EM_DIAGRAM):   end;
343209    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
343210    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
343211    +   end;
MPRINT(EM_DIAGRAM):   end;
343212    +   else do;
MPRINT(EM_DIAGRAM):   else do;
343213    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
343214    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
343215    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343216    +   end;
MPRINT(EM_DIAGRAM):   end;
343217    +end;
MPRINT(EM_DIAGRAM):   end;
343218    +
343219    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
343220    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
343221    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
343222    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
343223    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
343224    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343225    +end;
MPRINT(EM_DIAGRAM):   end;
343226    +else do;
MPRINT(EM_DIAGRAM):   else do;
343227    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
343228    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
343229    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
343230    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
343231    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
343232    +   end;
MPRINT(EM_DIAGRAM):   end;
343233    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
343234    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
343235    +   end;
MPRINT(EM_DIAGRAM):   end;
343236    +   else do;
MPRINT(EM_DIAGRAM):   else do;
343237    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
343238    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
343239    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343240    +   end;
MPRINT(EM_DIAGRAM):   end;
343241    +end;
MPRINT(EM_DIAGRAM):   end;
343242    +
343243    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
343244    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
343245    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
343246    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
343247    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
343248    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343249    +end;
MPRINT(EM_DIAGRAM):   end;
343250    +else do;
MPRINT(EM_DIAGRAM):   else do;
343251    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
343252    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
343253    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
343254    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
343255    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
343256    +   end;
MPRINT(EM_DIAGRAM):   end;
343257    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
343258    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
343259    +   end;
MPRINT(EM_DIAGRAM):   end;
343260    +   else do;
MPRINT(EM_DIAGRAM):   else do;
343261    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
343262    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
343263    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343264    +   end;
MPRINT(EM_DIAGRAM):   end;
343265    +end;
MPRINT(EM_DIAGRAM):   end;
343266    +
343267    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
343268    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
343269    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
343270    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
343271    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
343272    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343273    +end;
MPRINT(EM_DIAGRAM):   end;
343274    +else do;
MPRINT(EM_DIAGRAM):   else do;
343275    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
343276    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
343277    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
343278    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
343279    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
343280    +   end;
MPRINT(EM_DIAGRAM):   end;
343281    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
343282    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
343283    +   end;
MPRINT(EM_DIAGRAM):   end;
343284    +   else do;
MPRINT(EM_DIAGRAM):   else do;
343285    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
343286    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
343287    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343288    +   end;
MPRINT(EM_DIAGRAM):   end;
343289    +end;
MPRINT(EM_DIAGRAM):   end;
343290    +
343291    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
343292    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
343293    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
343294    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
343295    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
343296    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343297    +end;
MPRINT(EM_DIAGRAM):   end;
343298    +else do;
MPRINT(EM_DIAGRAM):   else do;
343299    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
343300    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
343301    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
343302    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
343303    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
343304    +   end;
MPRINT(EM_DIAGRAM):   end;
343305    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
343306    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
343307    +   end;
MPRINT(EM_DIAGRAM):   end;
343308    +   else do;
MPRINT(EM_DIAGRAM):   else do;
343309    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
343310    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
343311    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343312    +   end;
MPRINT(EM_DIAGRAM):   end;
343313    +end;
MPRINT(EM_DIAGRAM):   end;
343314    +
343315    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
343316    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
343317    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
343318    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
343319    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
343320    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
343321    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
343322    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
343323    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
343324    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
343325    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
343326    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
343327    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
343328    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343329    +end;
MPRINT(EM_DIAGRAM):   end;
343330    +else do;
MPRINT(EM_DIAGRAM):   else do;
343331    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
343332    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
343333    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
343334    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
343335    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
343336    +   end;
MPRINT(EM_DIAGRAM):   end;
343337    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
343338    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
343339    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
343340    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
343341    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
343342    +   end;
MPRINT(EM_DIAGRAM):   end;
343343    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
343344    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
343345    +   end;
MPRINT(EM_DIAGRAM):   end;
343346    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
343347    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
343348    +   end;
MPRINT(EM_DIAGRAM):   end;
343349    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
343350    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
343351    +   end;
MPRINT(EM_DIAGRAM):   end;
343352    +   else do;
MPRINT(EM_DIAGRAM):   else do;
343353    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
343354    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
343355    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
343356    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
343357    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
343358    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343359    +   end;
MPRINT(EM_DIAGRAM):   end;
343360    +end;
MPRINT(EM_DIAGRAM):   end;
343361    +
343362    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
343363    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
343364    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
343365    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
343366    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
343367    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
343368    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
343369    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
343370    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
343371    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
343372    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
343373    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
343374    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
343375    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
343376    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343377    +end;
MPRINT(EM_DIAGRAM):   end;
343378    +else do;
MPRINT(EM_DIAGRAM):   else do;
343379    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
343380    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
343381    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
343382    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
343383    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
343384    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
343385    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
343386    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
343387    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
343388    +         end;
MPRINT(EM_DIAGRAM):   end;
343389    +         else do;
MPRINT(EM_DIAGRAM):   else do;
343390    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
343391    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
343392    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
343393    +            end;
MPRINT(EM_DIAGRAM):   end;
343394    +         end;
MPRINT(EM_DIAGRAM):   end;
343395    +      end;
MPRINT(EM_DIAGRAM):   end;
343396    +      else do;
MPRINT(EM_DIAGRAM):   else do;
343397    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
343398    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
343399    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
343400    +         end;
MPRINT(EM_DIAGRAM):   end;
343401    +      end;
MPRINT(EM_DIAGRAM):   end;
343402    +   end;
MPRINT(EM_DIAGRAM):   end;
343403    +   else do;
MPRINT(EM_DIAGRAM):   else do;
343404    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
343405    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
343406    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
343407    +      end;
MPRINT(EM_DIAGRAM):   end;
343408    +      else do;
MPRINT(EM_DIAGRAM):   else do;
343409    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
343410    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
343411    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
343412    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
343413    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
343414    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
343415    +         end;
MPRINT(EM_DIAGRAM):   end;
343416    +      end;
MPRINT(EM_DIAGRAM):   end;
343417    +   end;
MPRINT(EM_DIAGRAM):   end;
343418    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
343419    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
343420    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
343421    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
343422    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
343423    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
343424    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343425    +   end;
MPRINT(EM_DIAGRAM):   end;
343426    +end;
MPRINT(EM_DIAGRAM):   end;
343427    +
343428    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343429    +*** Checking missing input Interval
343430    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
343431    +
343432    +IF NMISS(
343433    +   AcceptedCmpTotal ,
343434    +   Age ,
343435    +   Frq ,
343436    +   Income ,
343437    +   Kidhome ,
343438    +   Mnt ,
343439    +   MntFishProducts ,
343440    +   MntFruits ,
343441    +   MntGoldProds ,
343442    +   MntMeatProducts ,
343443    +   MntSweetProducts ,
343444    +   MntWines ,
343445    +   MonthsAsCustomer ,
343446    +   NumCatalogPurchases ,
343447    +   NumDealsPurchases ,
343448    +   NumDistPurchases ,
343449    +   NumStorePurchases ,
343450    +   NumWebPurchases ,
343451    +   NumWebVisitsMonth ,
343452    +   RFMstat ,
343453    +   RMntFrq ,
343454    +   Recency ,
343455    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
343456    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
343457    +
343458    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343459    +END;
MPRINT(EM_DIAGRAM):   END;
343460    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343461    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
343462    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343463    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
343464    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
343465    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
343466    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
343467    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
343468    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
343469    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
343470    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
343471    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
343472    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
343473    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
343474    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
343475    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
343476    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
343477    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
343478    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
343479    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
343480    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
343481    +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
343482    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
343483    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
343484    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
343485    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
343486    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
343487    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
343488    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
343489    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
343490    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
343491    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
343492    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
343493    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
343494    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
343495    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
343496    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
343497    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
343498    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
343499    +END;
MPRINT(EM_DIAGRAM):   END;
343500    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
343501    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
343502    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
343503    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
343504    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
343505    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
343506    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
343507    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
343508    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
343509    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
343510    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
343511    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
343512    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
343513    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
343514    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
343515    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
343516    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
343517    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
343518    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
343519    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
343520    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
343521    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
343522    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
343523    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
343524    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
343525    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
343526    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
343527    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
343528    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
343529    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
343530    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
343531    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
343532    +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
343533    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
343534    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
343535    +   ELSE S_NumCatalogPurchases
343536    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
343537    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
343538    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
343539    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
343540    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
343541    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
343542    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
343543    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
343544    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
343545    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
343546    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
343547    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
343548    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
343549    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
343550    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
343551    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
343552    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
343553    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
343554    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
343555    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
343556    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
343557    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
343558    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
343559    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
343560    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
343561    +END;
MPRINT(EM_DIAGRAM):   END;
343562    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343563    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
343564    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343565    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343566    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
343567    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343568    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343569    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
343570    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343571    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
343572    +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
343573    +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
343574    +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
343575    +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
343576    +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
343577    +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
343578    +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
343579    +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
343580    +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
343581    +          +     0.08390531145773 * S_NumDealsPurchases
343582    +          +    -0.29505970645775 * S_NumDistPurchases
343583    +          +    -0.13820571170194 * S_NumStorePurchases
343584    +          +     0.11468011313368 * S_NumWebPurchases
343585    +          +    -0.18421241371843 * S_NumWebVisitsMonth
343586    +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
343587    +        S_RMntFrq  +     0.18022777532589 * S_Recency
343588    +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 * 
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome 
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 * 
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts + 
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 * 
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 * 
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 * 
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 * 
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq + 
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
343589    +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
343590    +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
343591    +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
343592    +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
343593    +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
343594    +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
343595    +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
343596    +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
343597    +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
343598    +          +     0.18009076035363 * S_NumDealsPurchases
343599    +          +     0.03853861006587 * S_NumDistPurchases
343600    +          +    -0.05118063952874 * S_NumStorePurchases
343601    +          +    -0.03282286120473 * S_NumWebPurchases
343602    +          +     0.31160900419026 * S_NumWebVisitsMonth
343603    +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
343604    +        S_RMntFrq  +    -0.34796767111274 * S_Recency
343605    +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age 
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome + 
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 * 
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts + 
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 * 
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 * 
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 * 
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 * 
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq + 
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
343606    +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
343607    +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
343608    +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
343609    +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
343610    +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 * 
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 + 
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 * 
HigherEducationBinary0 ;
343611    +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
343612    +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
343613    +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
343614    +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
343615    +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 * 
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 + 
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 * 
HigherEducationBinary0 ;
343616    +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
343617    +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
343618    +        EducationGraduation  +     0.01586948449127 * EducationMaster
343619    +          +    -0.04750981393889 * Marital_StatusDivorced
343620    +          +     0.28216925676677 * Marital_StatusMarried
343621    +          +    -0.20757827413964 * Marital_StatusSingle
343622    +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle + 
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127 
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 * 
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 * 
Marital_StatusTogether ;
343623    +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
343624    +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
343625    +        EducationGraduation  +    -0.06975725710115 * EducationMaster
343626    +          +     0.05981919620577 * Marital_StatusDivorced
343627    +          +    -0.17161573846062 * Marital_StatusMarried
343628    +          +     0.15869440681091 * Marital_StatusSingle
343629    +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle + 
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation + 
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced + 
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle + 
-0.13282372850158 * Marital_StatusTogether ;
343630    +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
343631    +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
343632    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
343633    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
343634    +END;
MPRINT(EM_DIAGRAM):   END;
343635    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
343636    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
343637    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
343638    +END;
MPRINT(EM_DIAGRAM):   END;
343639    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343640    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
343641    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343642    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
343643    +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
343644    +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
343645    +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
343646    +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
343647    +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
343648    +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
343649    +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
343650    +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
343651    +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
343652    +          +     0.00741910846933 * S_NumDealsPurchases
343653    +          +       1.334289252268 * S_NumDistPurchases
343654    +          +    -0.29851567180932 * S_NumStorePurchases
343655    +          +    -0.52115313259666 * S_NumWebPurchases
343656    +          +     0.93907168501909 * S_NumWebVisitsMonth
343657    +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
343658    +        S_RMntFrq  +    -0.12807368149309 * S_Recency
343659    +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age 
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome + 
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 * 
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts + 
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 * 
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 * 
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 * 
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 * 
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq + 
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
343660    +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
343661    +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
343662    +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
343663    +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
343664    +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
343665    +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
343666    +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
343667    +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
343668    +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
343669    +          +     1.60427001186844 * S_NumDealsPurchases
343670    +          +    -0.18447618033353 * S_NumDistPurchases
343671    +          +    -1.29966073003539 * S_NumStorePurchases
343672    +          +    -1.12373457341536 * S_NumWebPurchases
343673    +          +     1.46099221440494 * S_NumWebVisitsMonth
343674    +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
343675    +        S_RMntFrq  +      0.4480370534729 * S_Recency
343676    +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 * 
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 * 
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts + 
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 * 
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines + 
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases + 
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases + 
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases + 
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 * 
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
343677    +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
343678    +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
343679    +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
343680    +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
343681    +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 * 
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 + 
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 * 
HigherEducationBinary0 ;
343682    +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
343683    +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
343684    +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
343685    +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
343686    +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 * 
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 + 
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 * 
HigherEducationBinary0 ;
343687    +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
343688    +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
343689    +        EducationGraduation  +    -0.81257694655594 * EducationMaster
343690    +          +     0.59819559998538 * Marital_StatusDivorced
343691    +          +     0.92957772553633 * Marital_StatusMarried
343692    +          +    -1.11796266958894 * Marital_StatusSingle
343693    +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 * 
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster + 
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried + 
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
343694    +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
343695    +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
343696    +        EducationGraduation  +    -0.65110715251273 * EducationMaster
343697    +          +      1.0870909562212 * Marital_StatusDivorced
343698    +          +     1.50333961797515 * Marital_StatusMarried
343699    +          +    -1.41407780765932 * Marital_StatusSingle
343700    +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle + 
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation + 
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced + 
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle + 
-0.52528072358697 * Marital_StatusTogether ;
343701    +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
343702    +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
343703    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
343704    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
343705    +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
343706    +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
343707    +END;
MPRINT(EM_DIAGRAM):   END;
343708    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
343709    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
343710    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
343711    +END;
MPRINT(EM_DIAGRAM):   END;
343712    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343713    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
343714    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343715    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
343716    +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
343717    +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
343718    +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
343719    +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
343720    +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
343721    +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
343722    +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
343723    +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
343724    +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
343725    +          +     -1.1174504455343 * S_NumDealsPurchases
343726    +          +    -0.18561253113498 * S_NumDistPurchases
343727    +          +    -0.35231054612792 * S_NumStorePurchases
343728    +          +      0.9249490354172 * S_NumWebPurchases
343729    +          +    -0.79868535147175 * S_NumWebVisitsMonth
343730    +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
343731    +        S_RMntFrq  +     0.62439123699986 * S_Recency
343732    +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 * 
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 * 
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts + 
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 * 
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines + 
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases + 
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases + 
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases + 
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 * 
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
343733    +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
343734    +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
343735    +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
343736    +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
343737    +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
343738    +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
343739    +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
343740    +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
343741    +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
343742    +          +     1.05434863590054 * S_NumDealsPurchases
343743    +          +    -0.73255174632068 * S_NumDistPurchases
343744    +          +     0.53949953455044 * S_NumStorePurchases
343745    +          +    -0.61709467816649 * S_NumWebPurchases
343746    +          +     1.36235282484348 * S_NumWebVisitsMonth
343747    +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
343748    +        S_RMntFrq  +    -0.24276831608869 * S_Recency
343749    +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 * 
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome 
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 * 
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts + 
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 * 
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 * 
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 * 
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 * 
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq + 
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
343750    +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
343751    +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
343752    +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
343753    +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
343754    +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 * 
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 + 
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 * 
HigherEducationBinary0 ;
343755    +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
343756    +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
343757    +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
343758    +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
343759    +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833 
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 + 
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 * 
HigherEducationBinary0 ;
343760    +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
343761    +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
343762    +        EducationGraduation  +    -0.45477734340809 * EducationMaster
343763    +          +     0.22253248036322 * Marital_StatusDivorced
343764    +          +    -1.72455332745001 * Marital_StatusMarried
343765    +          +     0.57787272107232 * Marital_StatusSingle
343766    +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle + 
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation + 
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced + 
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle + 
0.16267074825086 * Marital_StatusTogether ;
343767    +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
343768    +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
343769    +        EducationGraduation  +    -1.12620982139344 * EducationMaster
343770    +          +     0.14637124403046 * Marital_StatusDivorced
343771    +          +     0.18905186437528 * Marital_StatusMarried
343772    +          +     0.00511958458521 * Marital_StatusSingle
343773    +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle + 
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation + 
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced + 
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle + 
-0.915980703129 * Marital_StatusTogether ;
343774    +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
343775    +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
343776    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
343777    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
343778    +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
343779    +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
343780    +END;
MPRINT(EM_DIAGRAM):   END;
343781    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
343782    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
343783    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
343784    +END;
MPRINT(EM_DIAGRAM):   END;
343785    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343786    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
343787    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343788    +
343789    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
343790    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
343791    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
343792    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
343793    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
343794    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
343795    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
343796    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
343797    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
343798    +end;
MPRINT(EM_DIAGRAM):   end;
343799    +else do;
MPRINT(EM_DIAGRAM):   else do;
343800    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
343801    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
343802    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
343803    +   end;
MPRINT(EM_DIAGRAM):   end;
343804    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
343805    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
343806    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
343807    +   end;
MPRINT(EM_DIAGRAM):   end;
343808    +   else do;
MPRINT(EM_DIAGRAM):   else do;
343809    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
343810    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
343811    +   end;
MPRINT(EM_DIAGRAM):   end;
343812    +end;
MPRINT(EM_DIAGRAM):   end;
343813    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
343814    +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
343815    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
343816    +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
343817    +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 * 
H1x2_2 ;
343818    +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
343819    +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 * 
H1x3_2 ;
343820    +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
343821    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
343822    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
343823    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
343824    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
343825    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
343826    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
343827    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
343828    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
343829    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
343830    +END;
MPRINT(EM_DIAGRAM):   END;
343831    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
343832    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
343833    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
343834    +END;
MPRINT(EM_DIAGRAM):   END;
343835    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
343836    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
343837    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
343838    +END;
MPRINT(EM_DIAGRAM):   END;
343839    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
343840    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
343841    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
343842    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
343843    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
343844    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
343845    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
343846    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343847    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
343848    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343849    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
343850    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
343851    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
343852    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
343853    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
343854    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
343855    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
343856    +END;
MPRINT(EM_DIAGRAM):   END;
343857    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
343858    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
343859    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
343860    +drop
343861    +H1x1_1
343862    +H1x1_2
343863    +H1x2_1
343864    +H1x2_2
343865    +H1x3_1
343866    +H1x3_2
343867    +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
343868    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
343869     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL7_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
343870     quit;
343871     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
343872     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
343873     * AutoNeural7: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural7: Computing metadata for TRAIN data;
343874     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL7_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural7_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural7_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural7_TRAIN out=WORK.M0MMP29R 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0MMP29R;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0MMP29R(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0MMP29R;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0MMP29R;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3L4PKML NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3L4PKML;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3L4PKML;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2T5IYPE(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3L4PKML;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3L4PKML;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3L4PKML;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3L4PKML;
MPRINT(EMADVISECOLUMNS):   set WORK.M3L4PKML;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural7";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural7";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural7";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural7";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural7";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural7";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural7";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural7";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural7";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural7";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural7: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
344186     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
344187     set EMWS8.AutoNeural7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_EMINFO;
344188     where DATA='AutoNeural7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
344189     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL7_EMINFO.
      WHERE (DATA='AutoNeural7') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

344190     data EMWS8.AutoNeural7_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural7_EMINFO;
344191     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
344192     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
344193     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
344197     run;
344198     data EMWS8.AutoNeural7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural7_EMINFO;
344199     set EMWS8.AutoNeural7_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_EMINFO WORK.MODELTEMP_INFO;
344200     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL7_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

344201     proc sort data = EMWS8.AutoNeural7_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural7_EMINFO NOTHREADS;
344202     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
344203     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL7_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL7_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

344204     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
344205     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
344206     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

344207     proc sort data = EMWS8.AutoNeural7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
344208     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
344209     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL7_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

344210     data EMWS8.AutoNeural7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural7_EMINFO;
344211     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
344212     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
344213     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL7_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

344214     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
344215     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
344216     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
344217     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.AUTONEURAL7_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL7_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
