MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "08.25 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                08.25 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2OZ_RPD 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2OZ_RPD new;
MPRINT(EM_DIAGRAM):   run;
571274     filename emflow
571274   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural7: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
571275     *------------------------------------------------------------*;
571276     * AutoNeural7: Scoring DATA data;
571277     *------------------------------------------------------------*;
571278     data EMWS8.AutoNeural7_TRAIN
571279     / view=EMWS8.AutoNeural7_TRAIN
571280     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural7_TRAIN / view=EMWS8.AutoNeural7_TRAIN ;
571281     set EMWS8.Meta_TRAIN
571282     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
571283     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMFLOWSCORE.sas.
571284    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
571285    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
571286    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
571287    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
571288    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
571289    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
571290    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
571291    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
571292    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
571293    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
571294    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
571295    +LENGTH _WARN_ $4
571296    +      F_DepVar  $ 12
571297    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
571298    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
571299    +
571300    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
571301    +
571302    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
571303    +
571304    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
571305    +
571306    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
571307    +
571308    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
571309    +
571310    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
571311    +
571312    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
571313    +
571314    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
571315    +
571316    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
571317    +
571318    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
571319    +
571320    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
571321    +
571322    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
571323    +
571324    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
571325    +
571326    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
571327    +
571328    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
571329    +
571330    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
571331    +
571332    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
571333    +
571334    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
571335    +
571336    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
571337    +
571338    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
571339    +
571340    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
571341    +
571342    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
571343    +
571344    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
571345    +
571346    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
571347    +
571348    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
571349    +
571350    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
571351    +
571352    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
571353    +
571354    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
571355    +
571356    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
571357    +
571358    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
571359    +
571360    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
571361    +
571362    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
571363    +
571364    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
571365    +
571366    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
571367    +
571368    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
571369    +
571370    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
571371    +
571372    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
571373    +
571374    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
571375    +
571376    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
571377    +
571378    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
571379    +
571380    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
571381    +
571382    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
571383    +
571384    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
571385    +
571386    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
571387    +
571388    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
571389    +
571390    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
571391    +
571392    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
571393    +
571394    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
571395    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
571396    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
571397    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
571398    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
571399    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
571400    +end;
MPRINT(EM_DIAGRAM):   end;
571401    +else do;
MPRINT(EM_DIAGRAM):   else do;
571402    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
571403    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
571404    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
571405    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
571406    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
571407    +   end;
MPRINT(EM_DIAGRAM):   end;
571408    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
571409    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
571410    +   end;
MPRINT(EM_DIAGRAM):   end;
571411    +   else do;
MPRINT(EM_DIAGRAM):   else do;
571412    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
571413    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
571414    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
571415    +   end;
MPRINT(EM_DIAGRAM):   end;
571416    +end;
MPRINT(EM_DIAGRAM):   end;
571417    +
571418    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
571419    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
571420    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
571421    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
571422    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
571423    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
571424    +end;
MPRINT(EM_DIAGRAM):   end;
571425    +else do;
MPRINT(EM_DIAGRAM):   else do;
571426    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
571427    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
571428    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
571429    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
571430    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
571431    +   end;
MPRINT(EM_DIAGRAM):   end;
571432    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
571433    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
571434    +   end;
MPRINT(EM_DIAGRAM):   end;
571435    +   else do;
MPRINT(EM_DIAGRAM):   else do;
571436    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
571437    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
571438    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
571439    +   end;
MPRINT(EM_DIAGRAM):   end;
571440    +end;
MPRINT(EM_DIAGRAM):   end;
571441    +
571442    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
571443    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
571444    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
571445    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
571446    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
571447    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
571448    +end;
MPRINT(EM_DIAGRAM):   end;
571449    +else do;
MPRINT(EM_DIAGRAM):   else do;
571450    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
571451    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
571452    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
571453    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
571454    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
571455    +   end;
MPRINT(EM_DIAGRAM):   end;
571456    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
571457    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
571458    +   end;
MPRINT(EM_DIAGRAM):   end;
571459    +   else do;
MPRINT(EM_DIAGRAM):   else do;
571460    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
571461    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
571462    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
571463    +   end;
MPRINT(EM_DIAGRAM):   end;
571464    +end;
MPRINT(EM_DIAGRAM):   end;
571465    +
571466    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
571467    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
571468    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
571469    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
571470    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
571471    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
571472    +end;
MPRINT(EM_DIAGRAM):   end;
571473    +else do;
MPRINT(EM_DIAGRAM):   else do;
571474    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
571475    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
571476    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
571477    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
571478    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
571479    +   end;
MPRINT(EM_DIAGRAM):   end;
571480    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
571481    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
571482    +   end;
MPRINT(EM_DIAGRAM):   end;
571483    +   else do;
MPRINT(EM_DIAGRAM):   else do;
571484    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
571485    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
571486    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
571487    +   end;
MPRINT(EM_DIAGRAM):   end;
571488    +end;
MPRINT(EM_DIAGRAM):   end;
571489    +
571490    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
571491    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
571492    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
571493    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
571494    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
571495    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
571496    +end;
MPRINT(EM_DIAGRAM):   end;
571497    +else do;
MPRINT(EM_DIAGRAM):   else do;
571498    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
571499    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
571500    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
571501    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
571502    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
571503    +   end;
MPRINT(EM_DIAGRAM):   end;
571504    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
571505    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
571506    +   end;
MPRINT(EM_DIAGRAM):   end;
571507    +   else do;
MPRINT(EM_DIAGRAM):   else do;
571508    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
571509    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
571510    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
571511    +   end;
MPRINT(EM_DIAGRAM):   end;
571512    +end;
MPRINT(EM_DIAGRAM):   end;
571513    +
571514    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
571515    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
571516    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
571517    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
571518    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
571519    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
571520    +end;
MPRINT(EM_DIAGRAM):   end;
571521    +else do;
MPRINT(EM_DIAGRAM):   else do;
571522    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
571523    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
571524    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
571525    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
571526    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
571527    +   end;
MPRINT(EM_DIAGRAM):   end;
571528    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
571529    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
571530    +   end;
MPRINT(EM_DIAGRAM):   end;
571531    +   else do;
MPRINT(EM_DIAGRAM):   else do;
571532    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
571533    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
571534    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
571535    +   end;
MPRINT(EM_DIAGRAM):   end;
571536    +end;
MPRINT(EM_DIAGRAM):   end;
571537    +
571538    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
571539    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
571540    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
571541    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
571542    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
571543    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
571544    +end;
MPRINT(EM_DIAGRAM):   end;
571545    +else do;
MPRINT(EM_DIAGRAM):   else do;
571546    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
571547    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
571548    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
571549    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
571550    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
571551    +   end;
MPRINT(EM_DIAGRAM):   end;
571552    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
571553    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
571554    +   end;
MPRINT(EM_DIAGRAM):   end;
571555    +   else do;
MPRINT(EM_DIAGRAM):   else do;
571556    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
571557    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
571558    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
571559    +   end;
MPRINT(EM_DIAGRAM):   end;
571560    +end;
MPRINT(EM_DIAGRAM):   end;
571561    +
571562    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
571563    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
571564    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
571565    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
571566    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
571567    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
571568    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
571569    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
571570    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
571571    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
571572    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
571573    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
571574    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
571575    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
571576    +end;
MPRINT(EM_DIAGRAM):   end;
571577    +else do;
MPRINT(EM_DIAGRAM):   else do;
571578    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
571579    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
571580    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
571581    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
571582    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
571583    +   end;
MPRINT(EM_DIAGRAM):   end;
571584    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
571585    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
571586    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
571587    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
571588    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
571589    +   end;
MPRINT(EM_DIAGRAM):   end;
571590    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
571591    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
571592    +   end;
MPRINT(EM_DIAGRAM):   end;
571593    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
571594    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
571595    +   end;
MPRINT(EM_DIAGRAM):   end;
571596    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
571597    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
571598    +   end;
MPRINT(EM_DIAGRAM):   end;
571599    +   else do;
MPRINT(EM_DIAGRAM):   else do;
571600    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
571601    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
571602    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
571603    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
571604    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
571605    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
571606    +   end;
MPRINT(EM_DIAGRAM):   end;
571607    +end;
MPRINT(EM_DIAGRAM):   end;
571608    +
571609    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
571610    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
571611    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
571612    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
571613    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
571614    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
571615    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
571616    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
571617    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
571618    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
571619    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
571620    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
571621    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
571622    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
571623    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
571624    +end;
MPRINT(EM_DIAGRAM):   end;
571625    +else do;
MPRINT(EM_DIAGRAM):   else do;
571626    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
571627    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
571628    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
571629    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
571630    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
571631    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
571632    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
571633    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
571634    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
571635    +         end;
MPRINT(EM_DIAGRAM):   end;
571636    +         else do;
MPRINT(EM_DIAGRAM):   else do;
571637    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
571638    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
571639    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
571640    +            end;
MPRINT(EM_DIAGRAM):   end;
571641    +         end;
MPRINT(EM_DIAGRAM):   end;
571642    +      end;
MPRINT(EM_DIAGRAM):   end;
571643    +      else do;
MPRINT(EM_DIAGRAM):   else do;
571644    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
571645    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
571646    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
571647    +         end;
MPRINT(EM_DIAGRAM):   end;
571648    +      end;
MPRINT(EM_DIAGRAM):   end;
571649    +   end;
MPRINT(EM_DIAGRAM):   end;
571650    +   else do;
MPRINT(EM_DIAGRAM):   else do;
571651    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
571652    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
571653    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
571654    +      end;
MPRINT(EM_DIAGRAM):   end;
571655    +      else do;
MPRINT(EM_DIAGRAM):   else do;
571656    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
571657    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
571658    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
571659    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
571660    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
571661    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
571662    +         end;
MPRINT(EM_DIAGRAM):   end;
571663    +      end;
MPRINT(EM_DIAGRAM):   end;
571664    +   end;
MPRINT(EM_DIAGRAM):   end;
571665    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
571666    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
571667    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
571668    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
571669    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
571670    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
571671    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
571672    +   end;
MPRINT(EM_DIAGRAM):   end;
571673    +end;
MPRINT(EM_DIAGRAM):   end;
571674    +
571675    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
571676    +*** Checking missing input Interval
571677    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
571678    +
571679    +IF NMISS(
571680    +   AcceptedCmpTotal ,
571681    +   Age ,
571682    +   Frq ,
571683    +   Income ,
571684    +   Kidhome ,
571685    +   Mnt ,
571686    +   MntFishProducts ,
571687    +   MntFruits ,
571688    +   MntGoldProds ,
571689    +   MntMeatProducts ,
571690    +   MntSweetProducts ,
571691    +   MntWines ,
571692    +   MonthsAsCustomer ,
571693    +   NumCatalogPurchases ,
571694    +   NumDealsPurchases ,
571695    +   NumDistPurchases ,
571696    +   NumStorePurchases ,
571697    +   NumWebPurchases ,
571698    +   NumWebVisitsMonth ,
571699    +   RFMstat ,
571700    +   RMntFrq ,
571701    +   Recency ,
571702    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
571703    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
571704    +
571705    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
571706    +END;
MPRINT(EM_DIAGRAM):   END;
571707    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
571708    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
571709    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
571710    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
571711    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
571712    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
571713    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
571714    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
571715    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
571716    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
571717    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
571718    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
571719    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
571720    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
571721    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
571722    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
571723    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
571724    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
571725    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
571726    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
571727    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
571728    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
571729    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
571730    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
571731    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
571732    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
571733    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
571734    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
571735    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
571736    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
571737    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
571738    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
571739    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
571740    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
571741    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
571742    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
571743    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
571744    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
571745    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
571746    +END;
MPRINT(EM_DIAGRAM):   END;
571747    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
571748    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
571749    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
571750    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
571751    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
571752    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
571753    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
571754    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
571755    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
571756    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
571757    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
571758    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
571759    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
571760    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
571761    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
571762    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
571763    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
571764    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
571765    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
571766    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
571767    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
571768    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
571769    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
571770    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
571771    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
571772    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
571773    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
571774    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
571775    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
571776    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
571777    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
571778    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
571779    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
571780    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
571781    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
571782    +   ELSE S_NumCatalogPurchases
571783    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
571784    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
571785    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
571786    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
571787    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
571788    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
571789    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
571790    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
571791    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
571792    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
571793    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
571794    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
571795    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
571796    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
571797    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
571798    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
571799    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
571800    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
571801    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
571802    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
571803    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
571804    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
571805    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
571806    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
571807    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
571808    +END;
MPRINT(EM_DIAGRAM):   END;
571809    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
571810    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
571811    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
571812    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
571813    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
571814    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
571815    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
571816    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
571817    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
571818    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
571819    +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
571820    +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
571821    +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
571822    +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
571823    +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
571824    +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
571825    +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
571826    +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
571827    +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
571828    +          +     0.09708841024031 * S_NumDealsPurchases
571829    +          +    -0.29075561032014 * S_NumDistPurchases
571830    +          +    -0.14495394259873 * S_NumStorePurchases
571831    +          +     0.11890705145732 * S_NumWebPurchases
571832    +          +    -0.16954189911344 * S_NumWebVisitsMonth
571833    +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
571834    +        S_RMntFrq  +     0.17150719398884 * S_Recency
571835    +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
571836    +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
571837    +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
571838    +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
571839    +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
571840    +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
571841    +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
571842    +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
571843    +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
571844    +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
571845    +          +     0.16274478997892 * S_NumDealsPurchases
571846    +          +     0.03966958784582 * S_NumDistPurchases
571847    +          +    -0.04714110726598 * S_NumStorePurchases
571848    +          +    -0.02124229528082 * S_NumWebPurchases
571849    +          +     0.29753299776832 * S_NumWebVisitsMonth
571850    +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
571851    +        S_RMntFrq  +     -0.3340129986623 * S_Recency
571852    +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
571853    +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
571854    +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
571855    +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
571856    +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
571857    +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
571858    +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
571859    +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
571860    +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
571861    +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
571862    +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
571863    +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
571864    +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
571865    +        EducationGraduation  +     0.00619669837452 * EducationMaster
571866    +          +    -0.05037639679806 * Marital_StatusDivorced
571867    +          +     0.28781968727878 * Marital_StatusMarried
571868    +          +    -0.20382417074384 * Marital_StatusSingle
571869    +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
571870    +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
571871    +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
571872    +        EducationGraduation  +    -0.06952670554019 * EducationMaster
571873    +          +     0.06970969219123 * Marital_StatusDivorced
571874    +          +    -0.15787475744986 * Marital_StatusMarried
571875    +          +     0.14345344072192 * Marital_StatusSingle
571876    +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
571877    +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
571878    +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
571879    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
571880    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
571881    +END;
MPRINT(EM_DIAGRAM):   END;
571882    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
571883    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
571884    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
571885    +END;
MPRINT(EM_DIAGRAM):   END;
571886    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
571887    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
571888    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
571889    +
571890    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
571891    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
571892    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
571893    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
571894    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
571895    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
571896    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
571897    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
571898    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
571899    +end;
MPRINT(EM_DIAGRAM):   end;
571900    +else do;
MPRINT(EM_DIAGRAM):   else do;
571901    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
571902    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
571903    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
571904    +   end;
MPRINT(EM_DIAGRAM):   end;
571905    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
571906    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
571907    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
571908    +   end;
MPRINT(EM_DIAGRAM):   end;
571909    +   else do;
MPRINT(EM_DIAGRAM):   else do;
571910    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
571911    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
571912    +   end;
MPRINT(EM_DIAGRAM):   end;
571913    +end;
MPRINT(EM_DIAGRAM):   end;
571914    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
571915    +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
571916    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
571917    +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
571918    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
571919    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
571920    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
571921    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
571922    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
571923    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
571924    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
571925    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
571926    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
571927    +END;
MPRINT(EM_DIAGRAM):   END;
571928    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
571929    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
571930    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
571931    +END;
MPRINT(EM_DIAGRAM):   END;
571932    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
571933    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
571934    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
571935    +END;
MPRINT(EM_DIAGRAM):   END;
571936    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
571937    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
571938    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
571939    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
571940    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
571941    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
571942    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
571943    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
571944    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
571945    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
571946    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
571947    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
571948    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
571949    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
571950    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
571951    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
571952    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
571953    +END;
MPRINT(EM_DIAGRAM):   END;
571954    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
571955    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
571956    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
571957    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
571958     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL7_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
571959     quit;
571960     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
571961     filename emflow
571961   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural7: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
571962     *------------------------------------------------------------*;
571963     * AutoNeural7: Scoring VALIDATE data;
571964     *------------------------------------------------------------*;
571965     data EMWS8.AutoNeural7_VALIDATE
571966     / view=EMWS8.AutoNeural7_VALIDATE
571967     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural7_VALIDATE / view=EMWS8.AutoNeural7_VALIDATE ;
571968     set EMWS8.Meta_VALIDATE
571969     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
571970     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMFLOWSCORE.sas.
571971    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
571972    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
571973    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
571974    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
571975    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
571976    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
571977    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
571978    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
571979    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
571980    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
571981    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
571982    +LENGTH _WARN_ $4
571983    +      F_DepVar  $ 12
571984    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
571985    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
571986    +
571987    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
571988    +
571989    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
571990    +
571991    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
571992    +
571993    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
571994    +
571995    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
571996    +
571997    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
571998    +
571999    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
572000    +
572001    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
572002    +
572003    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
572004    +
572005    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
572006    +
572007    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
572008    +
572009    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
572010    +
572011    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
572012    +
572013    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
572014    +
572015    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
572016    +
572017    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
572018    +
572019    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
572020    +
572021    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
572022    +
572023    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
572024    +
572025    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
572026    +
572027    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
572028    +
572029    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
572030    +
572031    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
572032    +
572033    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
572034    +
572035    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
572036    +
572037    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
572038    +
572039    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
572040    +
572041    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
572042    +
572043    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
572044    +
572045    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
572046    +
572047    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
572048    +
572049    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
572050    +
572051    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
572052    +
572053    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
572054    +
572055    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
572056    +
572057    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
572058    +
572059    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
572060    +
572061    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
572062    +
572063    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
572064    +
572065    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
572066    +
572067    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
572068    +
572069    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
572070    +
572071    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
572072    +
572073    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
572074    +
572075    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
572076    +
572077    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
572078    +
572079    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
572080    +
572081    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
572082    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
572083    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
572084    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
572085    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
572086    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
572087    +end;
MPRINT(EM_DIAGRAM):   end;
572088    +else do;
MPRINT(EM_DIAGRAM):   else do;
572089    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
572090    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
572091    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
572092    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
572093    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
572094    +   end;
MPRINT(EM_DIAGRAM):   end;
572095    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
572096    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
572097    +   end;
MPRINT(EM_DIAGRAM):   end;
572098    +   else do;
MPRINT(EM_DIAGRAM):   else do;
572099    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
572100    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
572101    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
572102    +   end;
MPRINT(EM_DIAGRAM):   end;
572103    +end;
MPRINT(EM_DIAGRAM):   end;
572104    +
572105    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
572106    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
572107    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
572108    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
572109    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
572110    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
572111    +end;
MPRINT(EM_DIAGRAM):   end;
572112    +else do;
MPRINT(EM_DIAGRAM):   else do;
572113    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
572114    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
572115    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
572116    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
572117    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
572118    +   end;
MPRINT(EM_DIAGRAM):   end;
572119    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
572120    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
572121    +   end;
MPRINT(EM_DIAGRAM):   end;
572122    +   else do;
MPRINT(EM_DIAGRAM):   else do;
572123    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
572124    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
572125    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
572126    +   end;
MPRINT(EM_DIAGRAM):   end;
572127    +end;
MPRINT(EM_DIAGRAM):   end;
572128    +
572129    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
572130    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
572131    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
572132    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
572133    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
572134    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
572135    +end;
MPRINT(EM_DIAGRAM):   end;
572136    +else do;
MPRINT(EM_DIAGRAM):   else do;
572137    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
572138    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
572139    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
572140    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
572141    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
572142    +   end;
MPRINT(EM_DIAGRAM):   end;
572143    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
572144    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
572145    +   end;
MPRINT(EM_DIAGRAM):   end;
572146    +   else do;
MPRINT(EM_DIAGRAM):   else do;
572147    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
572148    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
572149    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
572150    +   end;
MPRINT(EM_DIAGRAM):   end;
572151    +end;
MPRINT(EM_DIAGRAM):   end;
572152    +
572153    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
572154    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
572155    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
572156    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
572157    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
572158    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
572159    +end;
MPRINT(EM_DIAGRAM):   end;
572160    +else do;
MPRINT(EM_DIAGRAM):   else do;
572161    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
572162    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
572163    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
572164    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
572165    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
572166    +   end;
MPRINT(EM_DIAGRAM):   end;
572167    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
572168    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
572169    +   end;
MPRINT(EM_DIAGRAM):   end;
572170    +   else do;
MPRINT(EM_DIAGRAM):   else do;
572171    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
572172    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
572173    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
572174    +   end;
MPRINT(EM_DIAGRAM):   end;
572175    +end;
MPRINT(EM_DIAGRAM):   end;
572176    +
572177    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
572178    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
572179    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
572180    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
572181    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
572182    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
572183    +end;
MPRINT(EM_DIAGRAM):   end;
572184    +else do;
MPRINT(EM_DIAGRAM):   else do;
572185    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
572186    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
572187    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
572188    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
572189    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
572190    +   end;
MPRINT(EM_DIAGRAM):   end;
572191    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
572192    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
572193    +   end;
MPRINT(EM_DIAGRAM):   end;
572194    +   else do;
MPRINT(EM_DIAGRAM):   else do;
572195    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
572196    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
572197    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
572198    +   end;
MPRINT(EM_DIAGRAM):   end;
572199    +end;
MPRINT(EM_DIAGRAM):   end;
572200    +
572201    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
572202    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
572203    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
572204    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
572205    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
572206    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
572207    +end;
MPRINT(EM_DIAGRAM):   end;
572208    +else do;
MPRINT(EM_DIAGRAM):   else do;
572209    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
572210    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
572211    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
572212    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
572213    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
572214    +   end;
MPRINT(EM_DIAGRAM):   end;
572215    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
572216    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
572217    +   end;
MPRINT(EM_DIAGRAM):   end;
572218    +   else do;
MPRINT(EM_DIAGRAM):   else do;
572219    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
572220    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
572221    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
572222    +   end;
MPRINT(EM_DIAGRAM):   end;
572223    +end;
MPRINT(EM_DIAGRAM):   end;
572224    +
572225    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
572226    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
572227    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
572228    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
572229    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
572230    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
572231    +end;
MPRINT(EM_DIAGRAM):   end;
572232    +else do;
MPRINT(EM_DIAGRAM):   else do;
572233    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
572234    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
572235    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
572236    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
572237    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
572238    +   end;
MPRINT(EM_DIAGRAM):   end;
572239    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
572240    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
572241    +   end;
MPRINT(EM_DIAGRAM):   end;
572242    +   else do;
MPRINT(EM_DIAGRAM):   else do;
572243    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
572244    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
572245    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
572246    +   end;
MPRINT(EM_DIAGRAM):   end;
572247    +end;
MPRINT(EM_DIAGRAM):   end;
572248    +
572249    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
572250    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
572251    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
572252    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
572253    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
572254    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
572255    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
572256    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
572257    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
572258    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
572259    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
572260    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
572261    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
572262    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
572263    +end;
MPRINT(EM_DIAGRAM):   end;
572264    +else do;
MPRINT(EM_DIAGRAM):   else do;
572265    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
572266    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
572267    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
572268    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
572269    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
572270    +   end;
MPRINT(EM_DIAGRAM):   end;
572271    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
572272    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
572273    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
572274    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
572275    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
572276    +   end;
MPRINT(EM_DIAGRAM):   end;
572277    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
572278    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
572279    +   end;
MPRINT(EM_DIAGRAM):   end;
572280    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
572281    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
572282    +   end;
MPRINT(EM_DIAGRAM):   end;
572283    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
572284    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
572285    +   end;
MPRINT(EM_DIAGRAM):   end;
572286    +   else do;
MPRINT(EM_DIAGRAM):   else do;
572287    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
572288    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
572289    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
572290    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
572291    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
572292    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
572293    +   end;
MPRINT(EM_DIAGRAM):   end;
572294    +end;
MPRINT(EM_DIAGRAM):   end;
572295    +
572296    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
572297    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
572298    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
572299    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
572300    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
572301    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
572302    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
572303    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
572304    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
572305    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
572306    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
572307    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
572308    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
572309    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
572310    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
572311    +end;
MPRINT(EM_DIAGRAM):   end;
572312    +else do;
MPRINT(EM_DIAGRAM):   else do;
572313    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
572314    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
572315    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
572316    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
572317    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
572318    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
572319    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
572320    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
572321    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
572322    +         end;
MPRINT(EM_DIAGRAM):   end;
572323    +         else do;
MPRINT(EM_DIAGRAM):   else do;
572324    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
572325    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
572326    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
572327    +            end;
MPRINT(EM_DIAGRAM):   end;
572328    +         end;
MPRINT(EM_DIAGRAM):   end;
572329    +      end;
MPRINT(EM_DIAGRAM):   end;
572330    +      else do;
MPRINT(EM_DIAGRAM):   else do;
572331    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
572332    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
572333    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
572334    +         end;
MPRINT(EM_DIAGRAM):   end;
572335    +      end;
MPRINT(EM_DIAGRAM):   end;
572336    +   end;
MPRINT(EM_DIAGRAM):   end;
572337    +   else do;
MPRINT(EM_DIAGRAM):   else do;
572338    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
572339    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
572340    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
572341    +      end;
MPRINT(EM_DIAGRAM):   end;
572342    +      else do;
MPRINT(EM_DIAGRAM):   else do;
572343    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
572344    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
572345    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
572346    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
572347    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
572348    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
572349    +         end;
MPRINT(EM_DIAGRAM):   end;
572350    +      end;
MPRINT(EM_DIAGRAM):   end;
572351    +   end;
MPRINT(EM_DIAGRAM):   end;
572352    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
572353    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
572354    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
572355    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
572356    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
572357    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
572358    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
572359    +   end;
MPRINT(EM_DIAGRAM):   end;
572360    +end;
MPRINT(EM_DIAGRAM):   end;
572361    +
572362    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
572363    +*** Checking missing input Interval
572364    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
572365    +
572366    +IF NMISS(
572367    +   AcceptedCmpTotal ,
572368    +   Age ,
572369    +   Frq ,
572370    +   Income ,
572371    +   Kidhome ,
572372    +   Mnt ,
572373    +   MntFishProducts ,
572374    +   MntFruits ,
572375    +   MntGoldProds ,
572376    +   MntMeatProducts ,
572377    +   MntSweetProducts ,
572378    +   MntWines ,
572379    +   MonthsAsCustomer ,
572380    +   NumCatalogPurchases ,
572381    +   NumDealsPurchases ,
572382    +   NumDistPurchases ,
572383    +   NumStorePurchases ,
572384    +   NumWebPurchases ,
572385    +   NumWebVisitsMonth ,
572386    +   RFMstat ,
572387    +   RMntFrq ,
572388    +   Recency ,
572389    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
572390    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
572391    +
572392    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
572393    +END;
MPRINT(EM_DIAGRAM):   END;
572394    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
572395    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
572396    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
572397    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
572398    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
572399    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
572400    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
572401    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
572402    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
572403    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
572404    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
572405    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
572406    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
572407    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
572408    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
572409    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
572410    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
572411    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
572412    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
572413    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
572414    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
572415    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
572416    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
572417    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
572418    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
572419    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
572420    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
572421    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
572422    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
572423    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
572424    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
572425    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
572426    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
572427    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
572428    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
572429    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
572430    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
572431    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
572432    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
572433    +END;
MPRINT(EM_DIAGRAM):   END;
572434    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
572435    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
572436    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
572437    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
572438    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
572439    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
572440    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
572441    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
572442    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
572443    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
572444    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
572445    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
572446    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
572447    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
572448    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
572449    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
572450    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
572451    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
572452    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
572453    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
572454    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
572455    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
572456    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
572457    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
572458    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
572459    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
572460    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
572461    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
572462    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
572463    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
572464    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
572465    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
572466    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
572467    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
572468    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
572469    +   ELSE S_NumCatalogPurchases
572470    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
572471    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
572472    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
572473    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
572474    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
572475    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
572476    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
572477    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
572478    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
572479    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
572480    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
572481    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
572482    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
572483    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
572484    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
572485    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
572486    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
572487    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
572488    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
572489    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
572490    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
572491    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
572492    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
572493    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
572494    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
572495    +END;
MPRINT(EM_DIAGRAM):   END;
572496    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
572497    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
572498    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
572499    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
572500    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
572501    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
572502    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
572503    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
572504    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
572505    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
572506    +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
572507    +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
572508    +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
572509    +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
572510    +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
572511    +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
572512    +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
572513    +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
572514    +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
572515    +          +     0.09708841024031 * S_NumDealsPurchases
572516    +          +    -0.29075561032014 * S_NumDistPurchases
572517    +          +    -0.14495394259873 * S_NumStorePurchases
572518    +          +     0.11890705145732 * S_NumWebPurchases
572519    +          +    -0.16954189911344 * S_NumWebVisitsMonth
572520    +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
572521    +        S_RMntFrq  +     0.17150719398884 * S_Recency
572522    +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
572523    +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
572524    +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
572525    +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
572526    +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
572527    +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
572528    +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
572529    +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
572530    +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
572531    +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
572532    +          +     0.16274478997892 * S_NumDealsPurchases
572533    +          +     0.03966958784582 * S_NumDistPurchases
572534    +          +    -0.04714110726598 * S_NumStorePurchases
572535    +          +    -0.02124229528082 * S_NumWebPurchases
572536    +          +     0.29753299776832 * S_NumWebVisitsMonth
572537    +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
572538    +        S_RMntFrq  +     -0.3340129986623 * S_Recency
572539    +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
572540    +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
572541    +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
572542    +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
572543    +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
572544    +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
572545    +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
572546    +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
572547    +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
572548    +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
572549    +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
572550    +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
572551    +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
572552    +        EducationGraduation  +     0.00619669837452 * EducationMaster
572553    +          +    -0.05037639679806 * Marital_StatusDivorced
572554    +          +     0.28781968727878 * Marital_StatusMarried
572555    +          +    -0.20382417074384 * Marital_StatusSingle
572556    +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
572557    +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
572558    +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
572559    +        EducationGraduation  +    -0.06952670554019 * EducationMaster
572560    +          +     0.06970969219123 * Marital_StatusDivorced
572561    +          +    -0.15787475744986 * Marital_StatusMarried
572562    +          +     0.14345344072192 * Marital_StatusSingle
572563    +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
572564    +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
572565    +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
572566    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
572567    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
572568    +END;
MPRINT(EM_DIAGRAM):   END;
572569    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
572570    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
572571    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
572572    +END;
MPRINT(EM_DIAGRAM):   END;
572573    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
572574    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
572575    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
572576    +
572577    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
572578    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
572579    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
572580    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
572581    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
572582    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
572583    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
572584    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
572585    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
572586    +end;
MPRINT(EM_DIAGRAM):   end;
572587    +else do;
MPRINT(EM_DIAGRAM):   else do;
572588    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
572589    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
572590    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
572591    +   end;
MPRINT(EM_DIAGRAM):   end;
572592    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
572593    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
572594    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
572595    +   end;
MPRINT(EM_DIAGRAM):   end;
572596    +   else do;
MPRINT(EM_DIAGRAM):   else do;
572597    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
572598    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
572599    +   end;
MPRINT(EM_DIAGRAM):   end;
572600    +end;
MPRINT(EM_DIAGRAM):   end;
572601    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
572602    +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
572603    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
572604    +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
572605    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
572606    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
572607    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
572608    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
572609    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
572610    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
572611    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
572612    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
572613    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
572614    +END;
MPRINT(EM_DIAGRAM):   END;
572615    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
572616    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
572617    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
572618    +END;
MPRINT(EM_DIAGRAM):   END;
572619    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
572620    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
572621    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
572622    +END;
MPRINT(EM_DIAGRAM):   END;
572623    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
572624    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
572625    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
572626    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
572627    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
572628    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
572629    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
572630    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
572631    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
572632    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
572633    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
572634    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
572635    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
572636    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
572637    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
572638    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
572639    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
572640    +END;
MPRINT(EM_DIAGRAM):   END;
572641    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
572642    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
572643    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
572644    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
572645     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL7_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
572646     quit;
572647     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
572648     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
572649     * AutoNeural7: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural7: Computing metadata for TRAIN data;
572650     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL7_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural7_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural7_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural7_TRAIN out=WORK.M370M5JY 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M370M5JY;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M370M5JY(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M370M5JY;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M370M5JY;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0COEGZO NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0COEGZO;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0COEGZO;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3K4S6P9(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0COEGZO;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0COEGZO;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0COEGZO;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0COEGZO;
MPRINT(EMADVISECOLUMNS):   set WORK.M0COEGZO;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural7";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural7";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural7";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural7";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural7";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural7";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural7";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural7";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural7";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural7";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural7: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
572962     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
572963     set EMWS8.AutoNeural7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_EMINFO;
572964     where DATA='AutoNeural7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
572965     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL7_EMINFO.
      WHERE (DATA='AutoNeural7') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

572966     data EMWS8.AutoNeural7_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural7_EMINFO;
572967     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
572968     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
572969     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
572973     run;
572974     data EMWS8.AutoNeural7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural7_EMINFO;
572975     set EMWS8.AutoNeural7_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_EMINFO WORK.MODELTEMP_INFO;
572976     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL7_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

572977     proc sort data = EMWS8.AutoNeural7_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural7_EMINFO NOTHREADS;
572978     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
572979     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL7_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL7_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

572980     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
572981     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
572982     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

572983     proc sort data = EMWS8.AutoNeural7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
572984     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
572985     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL7_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

572986     data EMWS8.AutoNeural7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural7_EMINFO;
572987     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
572988     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
572989     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL7_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

572990     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
572991     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
572992     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
572993     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.AUTONEURAL7_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL7_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
