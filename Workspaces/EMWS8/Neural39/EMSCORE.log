MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.17 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                11.17 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1KETXTI 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1KETXTI new;
MPRINT(EM_DIAGRAM):   run;
3220553    data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
3220554    set EMWS8.Neural39_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_OUTKEY;
3220555    if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
3220556    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set EMWS8.NEURAL39_OUTKEY.
NOTE: The data set WORK.OUTKEY has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3220557    filename emflow
3220557  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural39: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3220558    *------------------------------------------------------------*;
3220559    * Neural39: Scoring DATA data;
3220560    *------------------------------------------------------------*;
3220561    data EMWS8.Neural39_TRAIN
3220562    / view=EMWS8.Neural39_TRAIN
3220563    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_TRAIN / view=EMWS8.Neural39_TRAIN ;
3220564    set EMWS8.Meta3_TRAIN
3220565    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
3220566    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas.
3220567   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3220568   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3220569   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3220570   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3220571   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3220572   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3220573   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3220574   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3220575   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3220576   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3220577   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3220578   +LENGTH _WARN_ $4
3220579   +      F_DepVar  $ 12
3220580   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3220581   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
3220582   +
3220583   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
3220584   +
3220585   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
3220586   +
3220587   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
3220588   +
3220589   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
3220590   +
3220591   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
3220592   +
3220593   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
3220594   +
3220595   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
3220596   +
3220597   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
3220598   +
3220599   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
3220600   +
3220601   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3220602   +
3220603   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
3220604   +
3220605   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
3220606   +
3220607   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
3220608   +
3220609   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
3220610   +
3220611   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
3220612   +
3220613   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
3220614   +
3220615   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
3220616   +
3220617   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
3220618   +
3220619   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
3220620   +
3220621   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
3220622   +
3220623   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
3220624   +
3220625   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
3220626   +
3220627   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
3220628   +
3220629   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
3220630   +
3220631   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
3220632   +
3220633   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
3220634   +
3220635   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3220636   +
3220637   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3220638   +
3220639   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3220640   +
3220641   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3220642   +
3220643   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3220644   +
3220645   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3220646   +
3220647   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3220648   +
3220649   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3220650   +
3220651   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3220652   +
3220653   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3220654   +
3220655   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3220656   +
3220657   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3220658   +
3220659   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3220660   +
3220661   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3220662   +
3220663   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3220664   +
3220665   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3220666   +
3220667   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
3220668   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
3220669   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
3220670   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3220671   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3220672   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3220673   +end;
MPRINT(EM_DIAGRAM):   end;
3220674   +else do;
MPRINT(EM_DIAGRAM):   else do;
3220675   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3220676   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
3220677   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3220678   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3220679   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
3220680   +   end;
MPRINT(EM_DIAGRAM):   end;
3220681   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3220682   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
3220683   +   end;
MPRINT(EM_DIAGRAM):   end;
3220684   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3220685   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3220686   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3220687   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3220688   +   end;
MPRINT(EM_DIAGRAM):   end;
3220689   +end;
MPRINT(EM_DIAGRAM):   end;
3220690   +
3220691   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
3220692   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
3220693   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
3220694   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3220695   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3220696   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3220697   +end;
MPRINT(EM_DIAGRAM):   end;
3220698   +else do;
MPRINT(EM_DIAGRAM):   else do;
3220699   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3220700   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
3220701   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3220702   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3220703   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
3220704   +   end;
MPRINT(EM_DIAGRAM):   end;
3220705   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3220706   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
3220707   +   end;
MPRINT(EM_DIAGRAM):   end;
3220708   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3220709   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3220710   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3220711   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3220712   +   end;
MPRINT(EM_DIAGRAM):   end;
3220713   +end;
MPRINT(EM_DIAGRAM):   end;
3220714   +
3220715   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
3220716   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
3220717   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
3220718   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3220719   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3220720   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3220721   +end;
MPRINT(EM_DIAGRAM):   end;
3220722   +else do;
MPRINT(EM_DIAGRAM):   else do;
3220723   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3220724   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
3220725   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3220726   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3220727   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
3220728   +   end;
MPRINT(EM_DIAGRAM):   end;
3220729   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3220730   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
3220731   +   end;
MPRINT(EM_DIAGRAM):   end;
3220732   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3220733   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3220734   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3220735   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3220736   +   end;
MPRINT(EM_DIAGRAM):   end;
3220737   +end;
MPRINT(EM_DIAGRAM):   end;
3220738   +
3220739   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
3220740   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
3220741   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
3220742   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3220743   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3220744   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3220745   +end;
MPRINT(EM_DIAGRAM):   end;
3220746   +else do;
MPRINT(EM_DIAGRAM):   else do;
3220747   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3220748   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
3220749   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3220750   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3220751   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
3220752   +   end;
MPRINT(EM_DIAGRAM):   end;
3220753   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3220754   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
3220755   +   end;
MPRINT(EM_DIAGRAM):   end;
3220756   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3220757   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3220758   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3220759   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3220760   +   end;
MPRINT(EM_DIAGRAM):   end;
3220761   +end;
MPRINT(EM_DIAGRAM):   end;
3220762   +
3220763   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
3220764   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
3220765   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
3220766   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3220767   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3220768   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3220769   +end;
MPRINT(EM_DIAGRAM):   end;
3220770   +else do;
MPRINT(EM_DIAGRAM):   else do;
3220771   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3220772   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
3220773   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3220774   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3220775   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
3220776   +   end;
MPRINT(EM_DIAGRAM):   end;
3220777   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3220778   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
3220779   +   end;
MPRINT(EM_DIAGRAM):   end;
3220780   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3220781   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3220782   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3220783   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3220784   +   end;
MPRINT(EM_DIAGRAM):   end;
3220785   +end;
MPRINT(EM_DIAGRAM):   end;
3220786   +
3220787   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
3220788   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
3220789   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
3220790   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3220791   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3220792   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3220793   +end;
MPRINT(EM_DIAGRAM):   end;
3220794   +else do;
MPRINT(EM_DIAGRAM):   else do;
3220795   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3220796   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
3220797   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3220798   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3220799   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
3220800   +   end;
MPRINT(EM_DIAGRAM):   end;
3220801   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3220802   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
3220803   +   end;
MPRINT(EM_DIAGRAM):   end;
3220804   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3220805   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3220806   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3220807   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3220808   +   end;
MPRINT(EM_DIAGRAM):   end;
3220809   +end;
MPRINT(EM_DIAGRAM):   end;
3220810   +
3220811   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
3220812   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
3220813   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
3220814   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3220815   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3220816   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3220817   +end;
MPRINT(EM_DIAGRAM):   end;
3220818   +else do;
MPRINT(EM_DIAGRAM):   else do;
3220819   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3220820   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
3220821   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3220822   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
3220823   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
3220824   +   end;
MPRINT(EM_DIAGRAM):   end;
3220825   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
3220826   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
3220827   +   end;
MPRINT(EM_DIAGRAM):   end;
3220828   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3220829   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3220830   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3220831   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3220832   +   end;
MPRINT(EM_DIAGRAM):   end;
3220833   +end;
MPRINT(EM_DIAGRAM):   end;
3220834   +
3220835   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
3220836   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
3220837   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3220838   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
3220839   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
3220840   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
3220841   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
3220842   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
3220843   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3220844   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3220845   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3220846   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3220847   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3220848   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3220849   +end;
MPRINT(EM_DIAGRAM):   end;
3220850   +else do;
MPRINT(EM_DIAGRAM):   else do;
3220851   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
3220852   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
3220853   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3220854   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
3220855   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
3220856   +   end;
MPRINT(EM_DIAGRAM):   end;
3220857   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
3220858   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
3220859   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
3220860   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
3220861   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
3220862   +   end;
MPRINT(EM_DIAGRAM):   end;
3220863   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
3220864   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
3220865   +   end;
MPRINT(EM_DIAGRAM):   end;
3220866   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
3220867   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
3220868   +   end;
MPRINT(EM_DIAGRAM):   end;
3220869   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
3220870   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
3220871   +   end;
MPRINT(EM_DIAGRAM):   end;
3220872   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3220873   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3220874   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3220875   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3220876   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3220877   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3220878   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3220879   +   end;
MPRINT(EM_DIAGRAM):   end;
3220880   +end;
MPRINT(EM_DIAGRAM):   end;
3220881   +
3220882   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3220883   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3220884   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3220885   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3220886   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3220887   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3220888   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3220889   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3220890   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3220891   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3220892   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3220893   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3220894   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3220895   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3220896   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3220897   +end;
MPRINT(EM_DIAGRAM):   end;
3220898   +else do;
MPRINT(EM_DIAGRAM):   else do;
3220899   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3220900   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3220901   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3220902   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3220903   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3220904   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3220905   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3220906   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3220907   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3220908   +         end;
MPRINT(EM_DIAGRAM):   end;
3220909   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3220910   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3220911   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3220912   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3220913   +            end;
MPRINT(EM_DIAGRAM):   end;
3220914   +         end;
MPRINT(EM_DIAGRAM):   end;
3220915   +      end;
MPRINT(EM_DIAGRAM):   end;
3220916   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3220917   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3220918   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3220919   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3220920   +         end;
MPRINT(EM_DIAGRAM):   end;
3220921   +      end;
MPRINT(EM_DIAGRAM):   end;
3220922   +   end;
MPRINT(EM_DIAGRAM):   end;
3220923   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3220924   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3220925   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3220926   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3220927   +      end;
MPRINT(EM_DIAGRAM):   end;
3220928   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3220929   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3220930   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3220931   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3220932   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3220933   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3220934   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3220935   +         end;
MPRINT(EM_DIAGRAM):   end;
3220936   +      end;
MPRINT(EM_DIAGRAM):   end;
3220937   +   end;
MPRINT(EM_DIAGRAM):   end;
3220938   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3220939   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3220940   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3220941   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3220942   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3220943   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3220944   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3220945   +   end;
MPRINT(EM_DIAGRAM):   end;
3220946   +end;
MPRINT(EM_DIAGRAM):   end;
3220947   +
3220948   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3220949   +*** Checking missing input Interval
3220950   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3220951   +
3220952   +IF NMISS(
3220953   +   AcceptedCmpTotal ,
3220954   +   Age ,
3220955   +   Frq ,
3220956   +   Income ,
3220957   +   Kidhome ,
3220958   +   MntFishProducts ,
3220959   +   MntFruits ,
3220960   +   MntGoldProds ,
3220961   +   MntSweetProducts ,
3220962   +   MonthsAsCustomer ,
3220963   +   NumDealsPurchases ,
3220964   +   NumWebVisitsMonth ,
3220965   +   RFMstat ,
3220966   +   RMntFrq ,
3220967   +   Recency ,
3220968   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
3220969   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3220970   +
3220971   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3220972   +END;
MPRINT(EM_DIAGRAM):   END;
3220973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3220974   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3220975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3220976   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3220977   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3220978   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3220979   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3220980   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3220981   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3220982   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3220983   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3220984   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3220985   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3220986   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3220987   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
3220988   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3220989   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3220990   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3220991   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3220992   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3220993   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3220994   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3220995   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3220996   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3220997   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3220998   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3220999   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3221000   +END;
MPRINT(EM_DIAGRAM):   END;
3221001   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3221002   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
3221003   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3221004   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3221005   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
3221006   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3221007   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
3221008   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3221009   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
3221010   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3221011   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
3221012   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3221013   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
3221014   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3221015   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3221016   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
3221017   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
3221018   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3221019   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
3221020   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3221021   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
3221022   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
3221023   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3221024   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3221025   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
3221026   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3221027   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3221028   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3221029   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3221030   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3221031   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
3221032   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3221033   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3221034   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
3221035   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3221036   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
3221037   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3221038   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
3221039   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3221040   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
3221041   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3221042   +END;
MPRINT(EM_DIAGRAM):   END;
3221043   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221044   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
3221045   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221046   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221047   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3221048   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221049   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221050   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3221051   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221052   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3221053   +   H11  =    -0.64096829905108 * S_AcceptedCmpTotal  +    -0.11209535704145 *
3221054   +        S_Age  +     0.38442347653056 * S_Frq  +     0.10191582051286 *
3221055   +        S_Income  +     0.27663215475285 * S_Kidhome
3221056   +          +    -0.02861873561507 * S_MntFishProducts
3221057   +          +     0.20598948908915 * S_MntFruits  +     0.20804179479079 *
3221058   +        S_MntGoldProds  +     0.19160035179466 * S_MntSweetProducts
3221059   +          +    -0.30820227749029 * S_MonthsAsCustomer
3221060   +          +    -0.64335583461867 * S_NumDealsPurchases
3221061   +          +    -0.40339200335235 * S_NumWebVisitsMonth
3221062   +          +    -0.05053414482512 * S_RFMstat  +     0.32736870225964 *
3221063   +        S_RMntFrq  +     0.73297917115427 * S_Recency
3221064   +          +     0.11670126537146 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.64096829905108 * S_AcceptedCmpTotal + -0.11209535704145 * S_Age 
+ 0.38442347653056 * S_Frq + 0.10191582051286 * S_Income + 0.27663215475285 * S_Kidhome + 
-0.02861873561507 * S_MntFishProducts + 0.20598948908915 * S_MntFruits + 0.20804179479079 * 
S_MntGoldProds + 0.19160035179466 * S_MntSweetProducts + -0.30820227749029 * 
S_MonthsAsCustomer + -0.64335583461867 * S_NumDealsPurchases + -0.40339200335235 * 
S_NumWebVisitsMonth + -0.05053414482512 * S_RFMstat + 0.32736870225964 * S_RMntFrq + 
0.73297917115427 * S_Recency + 0.11670126537146 * S_Teenhome ;
3221065   +   H12  =     -0.1657091472212 * S_AcceptedCmpTotal  +     0.51956326282264 *
3221066   +        S_Age  +     1.09230379920111 * S_Frq  +     0.41850245998114 *
3221067   +        S_Income  +     0.04677082637593 * S_Kidhome
3221068   +          +    -0.26310923797495 * S_MntFishProducts
3221069   +          +     0.07068396793785 * S_MntFruits  +    -0.13614297077165 *
3221070   +        S_MntGoldProds  +    -0.41288432261418 * S_MntSweetProducts
3221071   +          +     0.31464974024806 * S_MonthsAsCustomer
3221072   +          +    -0.51422897206707 * S_NumDealsPurchases
3221073   +          +    -0.70210448968741 * S_NumWebVisitsMonth
3221074   +          +    -0.20168285475248 * S_RFMstat  +    -0.52597031961785 *
3221075   +        S_RMntFrq  +     1.12297422526954 * S_Recency
3221076   +          +    -0.19583787100677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.1657091472212 * S_AcceptedCmpTotal + 0.51956326282264 * S_Age + 
1.09230379920111 * S_Frq + 0.41850245998114 * S_Income + 0.04677082637593 * S_Kidhome + 
-0.26310923797495 * S_MntFishProducts + 0.07068396793785 * S_MntFruits + -0.13614297077165 * 
S_MntGoldProds + -0.41288432261418 * S_MntSweetProducts + 0.31464974024806 * 
S_MonthsAsCustomer + -0.51422897206707 * S_NumDealsPurchases + -0.70210448968741 * 
S_NumWebVisitsMonth + -0.20168285475248 * S_RFMstat + -0.52597031961785 * S_RMntFrq + 
1.12297422526954 * S_Recency + -0.19583787100677 * S_Teenhome ;
3221077   +   H13  =    -0.52948883352014 * S_AcceptedCmpTotal  +    -0.12557829758966 *
3221078   +        S_Age  +     -0.0390229319101 * S_Frq  +    -0.82750091245735 *
3221079   +        S_Income  +    -0.76074905594112 * S_Kidhome
3221080   +          +     0.28012200156756 * S_MntFishProducts
3221081   +          +    -0.11859027002733 * S_MntFruits  +    -0.41772270940459 *
3221082   +        S_MntGoldProds  +     0.02732432410202 * S_MntSweetProducts
3221083   +          +    -0.02209353426555 * S_MonthsAsCustomer
3221084   +          +    -0.30351716506195 * S_NumDealsPurchases
3221085   +          +    -0.54961975756206 * S_NumWebVisitsMonth
3221086   +          +    -0.10801362755152 * S_RFMstat  +    -0.18473836604054 *
3221087   +        S_RMntFrq  +     0.84276565192556 * S_Recency
3221088   +          +     0.30860891080893 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.52948883352014 * S_AcceptedCmpTotal + -0.12557829758966 * S_Age 
+ -0.0390229319101 * S_Frq + -0.82750091245735 * S_Income + -0.76074905594112 * S_Kidhome + 
0.28012200156756 * S_MntFishProducts + -0.11859027002733 * S_MntFruits + -0.41772270940459 * 
S_MntGoldProds + 0.02732432410202 * S_MntSweetProducts + -0.02209353426555 * 
S_MonthsAsCustomer + -0.30351716506195 * S_NumDealsPurchases + -0.54961975756206 * 
S_NumWebVisitsMonth + -0.10801362755152 * S_RFMstat + -0.18473836604054 * S_RMntFrq + 
0.84276565192556 * S_Recency + 0.30860891080893 * S_Teenhome ;
3221089   +   H14  =    -0.07567218864184 * S_AcceptedCmpTotal  +     0.02462117827216 *
3221090   +        S_Age  +    -0.64320970361048 * S_Frq  +     -1.0659518778449 *
3221091   +        S_Income  +     0.68593841144377 * S_Kidhome
3221092   +          +     -0.0587169446037 * S_MntFishProducts
3221093   +          +     0.24365125001776 * S_MntFruits  +     0.04647719507405 *
3221094   +        S_MntGoldProds  +     0.25871718590254 * S_MntSweetProducts
3221095   +          +    -0.17220981900732 * S_MonthsAsCustomer
3221096   +          +     0.27940162953795 * S_NumDealsPurchases
3221097   +          +    -0.04761461934562 * S_NumWebVisitsMonth
3221098   +          +    -0.11656397034939 * S_RFMstat  +    -0.30754235450488 *
3221099   +        S_RMntFrq  +     0.68962447302378 * S_Recency
3221100   +          +     0.73159731135815 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.07567218864184 * S_AcceptedCmpTotal + 0.02462117827216 * S_Age 
+ -0.64320970361048 * S_Frq + -1.0659518778449 * S_Income + 0.68593841144377 * S_Kidhome + 
-0.0587169446037 * S_MntFishProducts + 0.24365125001776 * S_MntFruits + 0.04647719507405 * 
S_MntGoldProds + 0.25871718590254 * S_MntSweetProducts + -0.17220981900732 * 
S_MonthsAsCustomer + 0.27940162953795 * S_NumDealsPurchases + -0.04761461934562 * 
S_NumWebVisitsMonth + -0.11656397034939 * S_RFMstat + -0.30754235450488 * S_RMntFrq + 
0.68962447302378 * S_Recency + 0.73159731135815 * S_Teenhome ;
3221101   +   H11  = H11  +     0.25038776257796 * AcceptedCmp10
3221102   +          +     0.04282733069599 * AcceptedCmp20  +     0.16936079906612 *
3221103   +        AcceptedCmp30  +     0.05079498344461 * AcceptedCmp40
3221104   +          +      0.6690889070972 * AcceptedCmp50  +    -0.11756177189054 *
3221105   +        Complain0  +     0.00601034671987 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.25038776257796 * AcceptedCmp10 + 0.04282733069599 * 
AcceptedCmp20 + 0.16936079906612 * AcceptedCmp30 + 0.05079498344461 * AcceptedCmp40 + 
0.6690889070972 * AcceptedCmp50 + -0.11756177189054 * Complain0 + 0.00601034671987 * 
HigherEducationBinary0 ;
3221106   +   H12  = H12  +     0.63638345806433 * AcceptedCmp10
3221107   +          +      0.3453598097393 * AcceptedCmp20  +     0.49359811223374 *
3221108   +        AcceptedCmp30  +     0.27581207611627 * AcceptedCmp40
3221109   +          +     0.05866095623494 * AcceptedCmp50  +    -0.13005408285069 *
3221110   +        Complain0  +      0.2160948352192 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.63638345806433 * AcceptedCmp10 + 0.3453598097393 * 
AcceptedCmp20 + 0.49359811223374 * AcceptedCmp30 + 0.27581207611627 * AcceptedCmp40 + 
0.05866095623494 * AcceptedCmp50 + -0.13005408285069 * Complain0 + 0.2160948352192 * 
HigherEducationBinary0 ;
3221111   +   H13  = H13  +     0.09956549586905 * AcceptedCmp10
3221112   +          +     0.03691883338772 * AcceptedCmp20  +     0.47736653446815 *
3221113   +        AcceptedCmp30  +    -0.91581599271765 * AcceptedCmp40
3221114   +          +     0.50560814473618 * AcceptedCmp50  +    -0.33308229467468 *
3221115   +        Complain0  +     0.14672770960028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09956549586905 * AcceptedCmp10 + 0.03691883338772 * 
AcceptedCmp20 + 0.47736653446815 * AcceptedCmp30 + -0.91581599271765 * AcceptedCmp40 + 
0.50560814473618 * AcceptedCmp50 + -0.33308229467468 * Complain0 + 0.14672770960028 * 
HigherEducationBinary0 ;
3221116   +   H14  = H14  +     0.22255149692461 * AcceptedCmp10
3221117   +          +     0.13590153487525 * AcceptedCmp20  +     0.33124716818779 *
3221118   +        AcceptedCmp30  +     0.53538971216451 * AcceptedCmp40
3221119   +          +    -0.15288643860698 * AcceptedCmp50  +     0.30766742713062 *
3221120   +        Complain0  +    -0.54379124310959 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22255149692461 * AcceptedCmp10 + 0.13590153487525 * 
AcceptedCmp20 + 0.33124716818779 * AcceptedCmp30 + 0.53538971216451 * AcceptedCmp40 + 
-0.15288643860698 * AcceptedCmp50 + 0.30766742713062 * Complain0 + -0.54379124310959 * 
HigherEducationBinary0 ;
3221121   +   H11  = H11  +    -0.16246752897554 * Education2n_Cycle
3221122   +          +    -0.02018324007765 * EducationBasic  +    -0.01853488592136 *
3221123   +        EducationGraduation  +    -0.09512206973791 * EducationMaster
3221124   +          +     0.04284251520428 * Marital_StatusDivorced
3221125   +          +    -0.08591343257218 * Marital_StatusMarried
3221126   +          +     0.43667281622253 * Marital_StatusSingle
3221127   +          +     0.35264409549804 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16246752897554 * Education2n_Cycle + -0.02018324007765 * 
EducationBasic + -0.01853488592136 * EducationGraduation + -0.09512206973791 * EducationMaster 
+ 0.04284251520428 * Marital_StatusDivorced + -0.08591343257218 * Marital_StatusMarried + 
0.43667281622253 * Marital_StatusSingle + 0.35264409549804 * Marital_StatusTogether ;
3221128   +   H12  = H12  +     0.33728620033583 * Education2n_Cycle
3221129   +          +    -0.00479023403414 * EducationBasic  +    -0.10257966569549 *
3221130   +        EducationGraduation  +    -0.17955750532548 * EducationMaster
3221131   +          +    -0.10823631131846 * Marital_StatusDivorced
3221132   +          +     0.15344450170599 * Marital_StatusMarried
3221133   +          +    -0.00222187507332 * Marital_StatusSingle
3221134   +          +     0.12886702838116 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.33728620033583 * Education2n_Cycle + -0.00479023403414 * 
EducationBasic + -0.10257966569549 * EducationGraduation + -0.17955750532548 * EducationMaster 
+ -0.10823631131846 * Marital_StatusDivorced + 0.15344450170599 * Marital_StatusMarried + 
-0.00222187507332 * Marital_StatusSingle + 0.12886702838116 * Marital_StatusTogether ;
3221135   +   H13  = H13  +     0.04434288585425 * Education2n_Cycle
3221136   +          +     0.45393732517503 * EducationBasic  +    -0.30230166822748 *
3221137   +        EducationGraduation  +     0.06012880669469 * EducationMaster
3221138   +          +    -0.20523044713629 * Marital_StatusDivorced
3221139   +          +     0.15779331320414 * Marital_StatusMarried
3221140   +          +    -0.33273914160638 * Marital_StatusSingle
3221141   +          +    -0.25472406769802 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.04434288585425 * Education2n_Cycle + 0.45393732517503 * 
EducationBasic + -0.30230166822748 * EducationGraduation + 0.06012880669469 * EducationMaster 
+ -0.20523044713629 * Marital_StatusDivorced + 0.15779331320414 * Marital_StatusMarried + 
-0.33273914160638 * Marital_StatusSingle + -0.25472406769802 * Marital_StatusTogether ;
3221142   +   H14  = H14  +    -0.16441299564379 * Education2n_Cycle
3221143   +          +     0.10809494068924 * EducationBasic  +    -0.23265316836427 *
3221144   +        EducationGraduation  +      0.3018512119562 * EducationMaster
3221145   +          +    -0.24973986133996 * Marital_StatusDivorced
3221146   +          +     1.15862092191103 * Marital_StatusMarried
3221147   +          +    -0.91451543179937 * Marital_StatusSingle
3221148   +          +     0.98391013262071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16441299564379 * Education2n_Cycle + 0.10809494068924 * 
EducationBasic + -0.23265316836427 * EducationGraduation + 0.3018512119562 * EducationMaster + 
-0.24973986133996 * Marital_StatusDivorced + 1.15862092191103 * Marital_StatusMarried + 
-0.91451543179937 * Marital_StatusSingle + 0.98391013262071 * Marital_StatusTogether ;
3221149   +   H11  =     0.70941478033358 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.70941478033358 + H11 ;
3221150   +   H12  =     0.91925226212025 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.91925226212025 + H12 ;
3221151   +   H13  =    -0.26151947698166 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.26151947698166 + H13 ;
3221152   +   H14  =     1.57965424463368 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.57965424463368 + H14 ;
3221153   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3221154   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3221155   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3221156   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3221157   +END;
MPRINT(EM_DIAGRAM):   END;
3221158   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3221159   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3221160   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3221161   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3221162   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3221163   +END;
MPRINT(EM_DIAGRAM):   END;
3221164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221165   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3221166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221167   +
3221168   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3221169   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3221170   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3221171   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3221172   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3221173   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3221174   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3221175   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3221176   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3221177   +end;
MPRINT(EM_DIAGRAM):   end;
3221178   +else do;
MPRINT(EM_DIAGRAM):   else do;
3221179   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3221180   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3221181   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3221182   +   end;
MPRINT(EM_DIAGRAM):   end;
3221183   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3221184   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3221185   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3221186   +   end;
MPRINT(EM_DIAGRAM):   end;
3221187   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3221188   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3221189   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3221190   +   end;
MPRINT(EM_DIAGRAM):   end;
3221191   +end;
MPRINT(EM_DIAGRAM):   end;
3221192   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3221193   +   P_DepVar1  =    -1.20356257603969 * H11  +    -1.94296236893655 * H12
3221194   +          +    -2.81737663487689 * H13  +    -2.69363833398263 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.20356257603969 * H11 + -1.94296236893655 * H12 + 
-2.81737663487689 * H13 + -2.69363833398263 * H14 ;
3221195   +   P_DepVar1  =    -0.80241057184596 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.80241057184596 + P_DepVar1 ;
3221196   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3221197   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3221198   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3221199   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3221200   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3221201   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3221202   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3221203   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3221204   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3221205   +END;
MPRINT(EM_DIAGRAM):   END;
3221206   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3221207   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3221208   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3221209   +END;
MPRINT(EM_DIAGRAM):   END;
3221210   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3221211   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
3221212   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
3221213   +END;
MPRINT(EM_DIAGRAM):   END;
3221214   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3221215   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3221216   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3221217   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3221218   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3221219   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3221220   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3221221   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221222   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3221223   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221224   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3221225   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3221226   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3221227   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3221228   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3221229   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3221230   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3221231   +END;
MPRINT(EM_DIAGRAM):   END;
3221232   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3221233   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3221234   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3221235   +drop
3221236   +H11
3221237   +H12
3221238   +H13
3221239   +H14
3221240   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
3221241   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
3221242    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL39_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
3221243    quit;
3221244    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
3221245    filename emflow
3221245  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural39: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3221246    *------------------------------------------------------------*;
3221247    * Neural39: Scoring VALIDATE data;
3221248    *------------------------------------------------------------*;
3221249    data EMWS8.Neural39_VALIDATE
3221250    / view=EMWS8.Neural39_VALIDATE
3221251    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_VALIDATE / view=EMWS8.Neural39_VALIDATE ;
3221252    set EMWS8.Meta3_VALIDATE
3221253    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
3221254    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas.
3221255   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3221256   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3221257   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3221258   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3221259   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3221260   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3221261   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3221262   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3221263   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3221264   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3221265   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3221266   +LENGTH _WARN_ $4
3221267   +      F_DepVar  $ 12
3221268   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3221269   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
3221270   +
3221271   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
3221272   +
3221273   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
3221274   +
3221275   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
3221276   +
3221277   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
3221278   +
3221279   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
3221280   +
3221281   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
3221282   +
3221283   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
3221284   +
3221285   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
3221286   +
3221287   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
3221288   +
3221289   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3221290   +
3221291   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
3221292   +
3221293   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
3221294   +
3221295   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
3221296   +
3221297   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
3221298   +
3221299   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
3221300   +
3221301   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
3221302   +
3221303   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
3221304   +
3221305   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
3221306   +
3221307   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
3221308   +
3221309   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
3221310   +
3221311   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
3221312   +
3221313   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
3221314   +
3221315   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
3221316   +
3221317   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
3221318   +
3221319   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
3221320   +
3221321   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
3221322   +
3221323   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3221324   +
3221325   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3221326   +
3221327   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3221328   +
3221329   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3221330   +
3221331   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3221332   +
3221333   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3221334   +
3221335   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3221336   +
3221337   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3221338   +
3221339   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3221340   +
3221341   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3221342   +
3221343   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3221344   +
3221345   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3221346   +
3221347   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3221348   +
3221349   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3221350   +
3221351   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3221352   +
3221353   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3221354   +
3221355   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
3221356   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
3221357   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
3221358   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3221359   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3221360   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3221361   +end;
MPRINT(EM_DIAGRAM):   end;
3221362   +else do;
MPRINT(EM_DIAGRAM):   else do;
3221363   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3221364   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
3221365   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3221366   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3221367   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
3221368   +   end;
MPRINT(EM_DIAGRAM):   end;
3221369   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3221370   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
3221371   +   end;
MPRINT(EM_DIAGRAM):   end;
3221372   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3221373   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3221374   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3221375   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3221376   +   end;
MPRINT(EM_DIAGRAM):   end;
3221377   +end;
MPRINT(EM_DIAGRAM):   end;
3221378   +
3221379   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
3221380   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
3221381   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
3221382   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3221383   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3221384   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3221385   +end;
MPRINT(EM_DIAGRAM):   end;
3221386   +else do;
MPRINT(EM_DIAGRAM):   else do;
3221387   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3221388   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
3221389   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3221390   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3221391   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
3221392   +   end;
MPRINT(EM_DIAGRAM):   end;
3221393   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3221394   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
3221395   +   end;
MPRINT(EM_DIAGRAM):   end;
3221396   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3221397   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3221398   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3221399   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3221400   +   end;
MPRINT(EM_DIAGRAM):   end;
3221401   +end;
MPRINT(EM_DIAGRAM):   end;
3221402   +
3221403   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
3221404   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
3221405   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
3221406   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3221407   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3221408   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3221409   +end;
MPRINT(EM_DIAGRAM):   end;
3221410   +else do;
MPRINT(EM_DIAGRAM):   else do;
3221411   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3221412   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
3221413   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3221414   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3221415   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
3221416   +   end;
MPRINT(EM_DIAGRAM):   end;
3221417   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3221418   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
3221419   +   end;
MPRINT(EM_DIAGRAM):   end;
3221420   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3221421   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3221422   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3221423   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3221424   +   end;
MPRINT(EM_DIAGRAM):   end;
3221425   +end;
MPRINT(EM_DIAGRAM):   end;
3221426   +
3221427   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
3221428   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
3221429   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
3221430   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3221431   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3221432   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3221433   +end;
MPRINT(EM_DIAGRAM):   end;
3221434   +else do;
MPRINT(EM_DIAGRAM):   else do;
3221435   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3221436   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
3221437   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3221438   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3221439   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
3221440   +   end;
MPRINT(EM_DIAGRAM):   end;
3221441   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3221442   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
3221443   +   end;
MPRINT(EM_DIAGRAM):   end;
3221444   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3221445   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3221446   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3221447   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3221448   +   end;
MPRINT(EM_DIAGRAM):   end;
3221449   +end;
MPRINT(EM_DIAGRAM):   end;
3221450   +
3221451   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
3221452   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
3221453   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
3221454   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3221455   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3221456   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3221457   +end;
MPRINT(EM_DIAGRAM):   end;
3221458   +else do;
MPRINT(EM_DIAGRAM):   else do;
3221459   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3221460   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
3221461   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3221462   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3221463   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
3221464   +   end;
MPRINT(EM_DIAGRAM):   end;
3221465   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3221466   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
3221467   +   end;
MPRINT(EM_DIAGRAM):   end;
3221468   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3221469   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3221470   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3221471   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3221472   +   end;
MPRINT(EM_DIAGRAM):   end;
3221473   +end;
MPRINT(EM_DIAGRAM):   end;
3221474   +
3221475   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
3221476   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
3221477   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
3221478   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3221479   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3221480   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3221481   +end;
MPRINT(EM_DIAGRAM):   end;
3221482   +else do;
MPRINT(EM_DIAGRAM):   else do;
3221483   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3221484   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
3221485   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3221486   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3221487   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
3221488   +   end;
MPRINT(EM_DIAGRAM):   end;
3221489   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3221490   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
3221491   +   end;
MPRINT(EM_DIAGRAM):   end;
3221492   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3221493   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3221494   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3221495   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3221496   +   end;
MPRINT(EM_DIAGRAM):   end;
3221497   +end;
MPRINT(EM_DIAGRAM):   end;
3221498   +
3221499   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
3221500   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
3221501   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
3221502   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3221503   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3221504   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3221505   +end;
MPRINT(EM_DIAGRAM):   end;
3221506   +else do;
MPRINT(EM_DIAGRAM):   else do;
3221507   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3221508   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
3221509   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3221510   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
3221511   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
3221512   +   end;
MPRINT(EM_DIAGRAM):   end;
3221513   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
3221514   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
3221515   +   end;
MPRINT(EM_DIAGRAM):   end;
3221516   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3221517   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3221518   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3221519   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3221520   +   end;
MPRINT(EM_DIAGRAM):   end;
3221521   +end;
MPRINT(EM_DIAGRAM):   end;
3221522   +
3221523   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
3221524   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
3221525   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3221526   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
3221527   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
3221528   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
3221529   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
3221530   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
3221531   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3221532   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3221533   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3221534   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3221535   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3221536   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3221537   +end;
MPRINT(EM_DIAGRAM):   end;
3221538   +else do;
MPRINT(EM_DIAGRAM):   else do;
3221539   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
3221540   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
3221541   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3221542   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
3221543   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
3221544   +   end;
MPRINT(EM_DIAGRAM):   end;
3221545   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
3221546   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
3221547   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
3221548   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
3221549   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
3221550   +   end;
MPRINT(EM_DIAGRAM):   end;
3221551   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
3221552   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
3221553   +   end;
MPRINT(EM_DIAGRAM):   end;
3221554   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
3221555   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
3221556   +   end;
MPRINT(EM_DIAGRAM):   end;
3221557   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
3221558   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
3221559   +   end;
MPRINT(EM_DIAGRAM):   end;
3221560   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3221561   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3221562   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3221563   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3221564   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3221565   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3221566   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3221567   +   end;
MPRINT(EM_DIAGRAM):   end;
3221568   +end;
MPRINT(EM_DIAGRAM):   end;
3221569   +
3221570   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3221571   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3221572   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3221573   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3221574   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3221575   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3221576   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3221577   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3221578   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3221579   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3221580   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3221581   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3221582   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3221583   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3221584   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3221585   +end;
MPRINT(EM_DIAGRAM):   end;
3221586   +else do;
MPRINT(EM_DIAGRAM):   else do;
3221587   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3221588   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3221589   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3221590   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3221591   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3221592   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3221593   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3221594   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3221595   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3221596   +         end;
MPRINT(EM_DIAGRAM):   end;
3221597   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3221598   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3221599   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3221600   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3221601   +            end;
MPRINT(EM_DIAGRAM):   end;
3221602   +         end;
MPRINT(EM_DIAGRAM):   end;
3221603   +      end;
MPRINT(EM_DIAGRAM):   end;
3221604   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3221605   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3221606   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3221607   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3221608   +         end;
MPRINT(EM_DIAGRAM):   end;
3221609   +      end;
MPRINT(EM_DIAGRAM):   end;
3221610   +   end;
MPRINT(EM_DIAGRAM):   end;
3221611   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3221612   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3221613   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3221614   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3221615   +      end;
MPRINT(EM_DIAGRAM):   end;
3221616   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3221617   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3221618   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3221619   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3221620   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3221621   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3221622   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3221623   +         end;
MPRINT(EM_DIAGRAM):   end;
3221624   +      end;
MPRINT(EM_DIAGRAM):   end;
3221625   +   end;
MPRINT(EM_DIAGRAM):   end;
3221626   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3221627   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3221628   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3221629   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3221630   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3221631   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3221632   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3221633   +   end;
MPRINT(EM_DIAGRAM):   end;
3221634   +end;
MPRINT(EM_DIAGRAM):   end;
3221635   +
3221636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221637   +*** Checking missing input Interval
3221638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3221639   +
3221640   +IF NMISS(
3221641   +   AcceptedCmpTotal ,
3221642   +   Age ,
3221643   +   Frq ,
3221644   +   Income ,
3221645   +   Kidhome ,
3221646   +   MntFishProducts ,
3221647   +   MntFruits ,
3221648   +   MntGoldProds ,
3221649   +   MntSweetProducts ,
3221650   +   MonthsAsCustomer ,
3221651   +   NumDealsPurchases ,
3221652   +   NumWebVisitsMonth ,
3221653   +   RFMstat ,
3221654   +   RMntFrq ,
3221655   +   Recency ,
3221656   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
3221657   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3221658   +
3221659   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3221660   +END;
MPRINT(EM_DIAGRAM):   END;
3221661   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221662   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3221663   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221664   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3221665   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3221666   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3221667   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3221668   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3221669   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3221670   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3221671   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3221672   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3221673   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3221674   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3221675   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
3221676   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3221677   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3221678   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3221679   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3221680   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3221681   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3221682   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3221683   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3221684   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3221685   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3221686   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3221687   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3221688   +END;
MPRINT(EM_DIAGRAM):   END;
3221689   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3221690   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
3221691   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3221692   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3221693   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
3221694   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3221695   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
3221696   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3221697   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
3221698   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3221699   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
3221700   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3221701   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
3221702   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3221703   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3221704   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
3221705   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
3221706   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3221707   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
3221708   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3221709   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
3221710   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
3221711   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3221712   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3221713   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
3221714   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3221715   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3221716   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3221717   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3221718   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3221719   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
3221720   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3221721   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3221722   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
3221723   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3221724   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
3221725   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3221726   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
3221727   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3221728   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
3221729   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3221730   +END;
MPRINT(EM_DIAGRAM):   END;
3221731   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221732   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
3221733   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221734   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221735   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3221736   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221737   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221738   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3221739   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221740   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3221741   +   H11  =    -0.64096829905108 * S_AcceptedCmpTotal  +    -0.11209535704145 *
3221742   +        S_Age  +     0.38442347653056 * S_Frq  +     0.10191582051286 *
3221743   +        S_Income  +     0.27663215475285 * S_Kidhome
3221744   +          +    -0.02861873561507 * S_MntFishProducts
3221745   +          +     0.20598948908915 * S_MntFruits  +     0.20804179479079 *
3221746   +        S_MntGoldProds  +     0.19160035179466 * S_MntSweetProducts
3221747   +          +    -0.30820227749029 * S_MonthsAsCustomer
3221748   +          +    -0.64335583461867 * S_NumDealsPurchases
3221749   +          +    -0.40339200335235 * S_NumWebVisitsMonth
3221750   +          +    -0.05053414482512 * S_RFMstat  +     0.32736870225964 *
3221751   +        S_RMntFrq  +     0.73297917115427 * S_Recency
3221752   +          +     0.11670126537146 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.64096829905108 * S_AcceptedCmpTotal + -0.11209535704145 * S_Age 
+ 0.38442347653056 * S_Frq + 0.10191582051286 * S_Income + 0.27663215475285 * S_Kidhome + 
-0.02861873561507 * S_MntFishProducts + 0.20598948908915 * S_MntFruits + 0.20804179479079 * 
S_MntGoldProds + 0.19160035179466 * S_MntSweetProducts + -0.30820227749029 * 
S_MonthsAsCustomer + -0.64335583461867 * S_NumDealsPurchases + -0.40339200335235 * 
S_NumWebVisitsMonth + -0.05053414482512 * S_RFMstat + 0.32736870225964 * S_RMntFrq + 
0.73297917115427 * S_Recency + 0.11670126537146 * S_Teenhome ;
3221753   +   H12  =     -0.1657091472212 * S_AcceptedCmpTotal  +     0.51956326282264 *
3221754   +        S_Age  +     1.09230379920111 * S_Frq  +     0.41850245998114 *
3221755   +        S_Income  +     0.04677082637593 * S_Kidhome
3221756   +          +    -0.26310923797495 * S_MntFishProducts
3221757   +          +     0.07068396793785 * S_MntFruits  +    -0.13614297077165 *
3221758   +        S_MntGoldProds  +    -0.41288432261418 * S_MntSweetProducts
3221759   +          +     0.31464974024806 * S_MonthsAsCustomer
3221760   +          +    -0.51422897206707 * S_NumDealsPurchases
3221761   +          +    -0.70210448968741 * S_NumWebVisitsMonth
3221762   +          +    -0.20168285475248 * S_RFMstat  +    -0.52597031961785 *
3221763   +        S_RMntFrq  +     1.12297422526954 * S_Recency
3221764   +          +    -0.19583787100677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.1657091472212 * S_AcceptedCmpTotal + 0.51956326282264 * S_Age + 
1.09230379920111 * S_Frq + 0.41850245998114 * S_Income + 0.04677082637593 * S_Kidhome + 
-0.26310923797495 * S_MntFishProducts + 0.07068396793785 * S_MntFruits + -0.13614297077165 * 
S_MntGoldProds + -0.41288432261418 * S_MntSweetProducts + 0.31464974024806 * 
S_MonthsAsCustomer + -0.51422897206707 * S_NumDealsPurchases + -0.70210448968741 * 
S_NumWebVisitsMonth + -0.20168285475248 * S_RFMstat + -0.52597031961785 * S_RMntFrq + 
1.12297422526954 * S_Recency + -0.19583787100677 * S_Teenhome ;
3221765   +   H13  =    -0.52948883352014 * S_AcceptedCmpTotal  +    -0.12557829758966 *
3221766   +        S_Age  +     -0.0390229319101 * S_Frq  +    -0.82750091245735 *
3221767   +        S_Income  +    -0.76074905594112 * S_Kidhome
3221768   +          +     0.28012200156756 * S_MntFishProducts
3221769   +          +    -0.11859027002733 * S_MntFruits  +    -0.41772270940459 *
3221770   +        S_MntGoldProds  +     0.02732432410202 * S_MntSweetProducts
3221771   +          +    -0.02209353426555 * S_MonthsAsCustomer
3221772   +          +    -0.30351716506195 * S_NumDealsPurchases
3221773   +          +    -0.54961975756206 * S_NumWebVisitsMonth
3221774   +          +    -0.10801362755152 * S_RFMstat  +    -0.18473836604054 *
3221775   +        S_RMntFrq  +     0.84276565192556 * S_Recency
3221776   +          +     0.30860891080893 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.52948883352014 * S_AcceptedCmpTotal + -0.12557829758966 * S_Age 
+ -0.0390229319101 * S_Frq + -0.82750091245735 * S_Income + -0.76074905594112 * S_Kidhome + 
0.28012200156756 * S_MntFishProducts + -0.11859027002733 * S_MntFruits + -0.41772270940459 * 
S_MntGoldProds + 0.02732432410202 * S_MntSweetProducts + -0.02209353426555 * 
S_MonthsAsCustomer + -0.30351716506195 * S_NumDealsPurchases + -0.54961975756206 * 
S_NumWebVisitsMonth + -0.10801362755152 * S_RFMstat + -0.18473836604054 * S_RMntFrq + 
0.84276565192556 * S_Recency + 0.30860891080893 * S_Teenhome ;
3221777   +   H14  =    -0.07567218864184 * S_AcceptedCmpTotal  +     0.02462117827216 *
3221778   +        S_Age  +    -0.64320970361048 * S_Frq  +     -1.0659518778449 *
3221779   +        S_Income  +     0.68593841144377 * S_Kidhome
3221780   +          +     -0.0587169446037 * S_MntFishProducts
3221781   +          +     0.24365125001776 * S_MntFruits  +     0.04647719507405 *
3221782   +        S_MntGoldProds  +     0.25871718590254 * S_MntSweetProducts
3221783   +          +    -0.17220981900732 * S_MonthsAsCustomer
3221784   +          +     0.27940162953795 * S_NumDealsPurchases
3221785   +          +    -0.04761461934562 * S_NumWebVisitsMonth
3221786   +          +    -0.11656397034939 * S_RFMstat  +    -0.30754235450488 *
3221787   +        S_RMntFrq  +     0.68962447302378 * S_Recency
3221788   +          +     0.73159731135815 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.07567218864184 * S_AcceptedCmpTotal + 0.02462117827216 * S_Age 
+ -0.64320970361048 * S_Frq + -1.0659518778449 * S_Income + 0.68593841144377 * S_Kidhome + 
-0.0587169446037 * S_MntFishProducts + 0.24365125001776 * S_MntFruits + 0.04647719507405 * 
S_MntGoldProds + 0.25871718590254 * S_MntSweetProducts + -0.17220981900732 * 
S_MonthsAsCustomer + 0.27940162953795 * S_NumDealsPurchases + -0.04761461934562 * 
S_NumWebVisitsMonth + -0.11656397034939 * S_RFMstat + -0.30754235450488 * S_RMntFrq + 
0.68962447302378 * S_Recency + 0.73159731135815 * S_Teenhome ;
3221789   +   H11  = H11  +     0.25038776257796 * AcceptedCmp10
3221790   +          +     0.04282733069599 * AcceptedCmp20  +     0.16936079906612 *
3221791   +        AcceptedCmp30  +     0.05079498344461 * AcceptedCmp40
3221792   +          +      0.6690889070972 * AcceptedCmp50  +    -0.11756177189054 *
3221793   +        Complain0  +     0.00601034671987 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.25038776257796 * AcceptedCmp10 + 0.04282733069599 * 
AcceptedCmp20 + 0.16936079906612 * AcceptedCmp30 + 0.05079498344461 * AcceptedCmp40 + 
0.6690889070972 * AcceptedCmp50 + -0.11756177189054 * Complain0 + 0.00601034671987 * 
HigherEducationBinary0 ;
3221794   +   H12  = H12  +     0.63638345806433 * AcceptedCmp10
3221795   +          +      0.3453598097393 * AcceptedCmp20  +     0.49359811223374 *
3221796   +        AcceptedCmp30  +     0.27581207611627 * AcceptedCmp40
3221797   +          +     0.05866095623494 * AcceptedCmp50  +    -0.13005408285069 *
3221798   +        Complain0  +      0.2160948352192 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.63638345806433 * AcceptedCmp10 + 0.3453598097393 * 
AcceptedCmp20 + 0.49359811223374 * AcceptedCmp30 + 0.27581207611627 * AcceptedCmp40 + 
0.05866095623494 * AcceptedCmp50 + -0.13005408285069 * Complain0 + 0.2160948352192 * 
HigherEducationBinary0 ;
3221799   +   H13  = H13  +     0.09956549586905 * AcceptedCmp10
3221800   +          +     0.03691883338772 * AcceptedCmp20  +     0.47736653446815 *
3221801   +        AcceptedCmp30  +    -0.91581599271765 * AcceptedCmp40
3221802   +          +     0.50560814473618 * AcceptedCmp50  +    -0.33308229467468 *
3221803   +        Complain0  +     0.14672770960028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09956549586905 * AcceptedCmp10 + 0.03691883338772 * 
AcceptedCmp20 + 0.47736653446815 * AcceptedCmp30 + -0.91581599271765 * AcceptedCmp40 + 
0.50560814473618 * AcceptedCmp50 + -0.33308229467468 * Complain0 + 0.14672770960028 * 
HigherEducationBinary0 ;
3221804   +   H14  = H14  +     0.22255149692461 * AcceptedCmp10
3221805   +          +     0.13590153487525 * AcceptedCmp20  +     0.33124716818779 *
3221806   +        AcceptedCmp30  +     0.53538971216451 * AcceptedCmp40
3221807   +          +    -0.15288643860698 * AcceptedCmp50  +     0.30766742713062 *
3221808   +        Complain0  +    -0.54379124310959 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22255149692461 * AcceptedCmp10 + 0.13590153487525 * 
AcceptedCmp20 + 0.33124716818779 * AcceptedCmp30 + 0.53538971216451 * AcceptedCmp40 + 
-0.15288643860698 * AcceptedCmp50 + 0.30766742713062 * Complain0 + -0.54379124310959 * 
HigherEducationBinary0 ;
3221809   +   H11  = H11  +    -0.16246752897554 * Education2n_Cycle
3221810   +          +    -0.02018324007765 * EducationBasic  +    -0.01853488592136 *
3221811   +        EducationGraduation  +    -0.09512206973791 * EducationMaster
3221812   +          +     0.04284251520428 * Marital_StatusDivorced
3221813   +          +    -0.08591343257218 * Marital_StatusMarried
3221814   +          +     0.43667281622253 * Marital_StatusSingle
3221815   +          +     0.35264409549804 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16246752897554 * Education2n_Cycle + -0.02018324007765 * 
EducationBasic + -0.01853488592136 * EducationGraduation + -0.09512206973791 * EducationMaster 
+ 0.04284251520428 * Marital_StatusDivorced + -0.08591343257218 * Marital_StatusMarried + 
0.43667281622253 * Marital_StatusSingle + 0.35264409549804 * Marital_StatusTogether ;
3221816   +   H12  = H12  +     0.33728620033583 * Education2n_Cycle
3221817   +          +    -0.00479023403414 * EducationBasic  +    -0.10257966569549 *
3221818   +        EducationGraduation  +    -0.17955750532548 * EducationMaster
3221819   +          +    -0.10823631131846 * Marital_StatusDivorced
3221820   +          +     0.15344450170599 * Marital_StatusMarried
3221821   +          +    -0.00222187507332 * Marital_StatusSingle
3221822   +          +     0.12886702838116 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.33728620033583 * Education2n_Cycle + -0.00479023403414 * 
EducationBasic + -0.10257966569549 * EducationGraduation + -0.17955750532548 * EducationMaster 
+ -0.10823631131846 * Marital_StatusDivorced + 0.15344450170599 * Marital_StatusMarried + 
-0.00222187507332 * Marital_StatusSingle + 0.12886702838116 * Marital_StatusTogether ;
3221823   +   H13  = H13  +     0.04434288585425 * Education2n_Cycle
3221824   +          +     0.45393732517503 * EducationBasic  +    -0.30230166822748 *
3221825   +        EducationGraduation  +     0.06012880669469 * EducationMaster
3221826   +          +    -0.20523044713629 * Marital_StatusDivorced
3221827   +          +     0.15779331320414 * Marital_StatusMarried
3221828   +          +    -0.33273914160638 * Marital_StatusSingle
3221829   +          +    -0.25472406769802 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.04434288585425 * Education2n_Cycle + 0.45393732517503 * 
EducationBasic + -0.30230166822748 * EducationGraduation + 0.06012880669469 * EducationMaster 
+ -0.20523044713629 * Marital_StatusDivorced + 0.15779331320414 * Marital_StatusMarried + 
-0.33273914160638 * Marital_StatusSingle + -0.25472406769802 * Marital_StatusTogether ;
3221830   +   H14  = H14  +    -0.16441299564379 * Education2n_Cycle
3221831   +          +     0.10809494068924 * EducationBasic  +    -0.23265316836427 *
3221832   +        EducationGraduation  +      0.3018512119562 * EducationMaster
3221833   +          +    -0.24973986133996 * Marital_StatusDivorced
3221834   +          +     1.15862092191103 * Marital_StatusMarried
3221835   +          +    -0.91451543179937 * Marital_StatusSingle
3221836   +          +     0.98391013262071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16441299564379 * Education2n_Cycle + 0.10809494068924 * 
EducationBasic + -0.23265316836427 * EducationGraduation + 0.3018512119562 * EducationMaster + 
-0.24973986133996 * Marital_StatusDivorced + 1.15862092191103 * Marital_StatusMarried + 
-0.91451543179937 * Marital_StatusSingle + 0.98391013262071 * Marital_StatusTogether ;
3221837   +   H11  =     0.70941478033358 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.70941478033358 + H11 ;
3221838   +   H12  =     0.91925226212025 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.91925226212025 + H12 ;
3221839   +   H13  =    -0.26151947698166 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.26151947698166 + H13 ;
3221840   +   H14  =     1.57965424463368 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.57965424463368 + H14 ;
3221841   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3221842   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3221843   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3221844   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3221845   +END;
MPRINT(EM_DIAGRAM):   END;
3221846   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3221847   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3221848   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3221849   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3221850   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3221851   +END;
MPRINT(EM_DIAGRAM):   END;
3221852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221853   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3221854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221855   +
3221856   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3221857   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3221858   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3221859   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3221860   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3221861   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3221862   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3221863   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3221864   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3221865   +end;
MPRINT(EM_DIAGRAM):   end;
3221866   +else do;
MPRINT(EM_DIAGRAM):   else do;
3221867   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3221868   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3221869   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3221870   +   end;
MPRINT(EM_DIAGRAM):   end;
3221871   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3221872   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3221873   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3221874   +   end;
MPRINT(EM_DIAGRAM):   end;
3221875   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3221876   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3221877   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3221878   +   end;
MPRINT(EM_DIAGRAM):   end;
3221879   +end;
MPRINT(EM_DIAGRAM):   end;
3221880   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3221881   +   P_DepVar1  =    -1.20356257603969 * H11  +    -1.94296236893655 * H12
3221882   +          +    -2.81737663487689 * H13  +    -2.69363833398263 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.20356257603969 * H11 + -1.94296236893655 * H12 + 
-2.81737663487689 * H13 + -2.69363833398263 * H14 ;
3221883   +   P_DepVar1  =    -0.80241057184596 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.80241057184596 + P_DepVar1 ;
3221884   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3221885   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3221886   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3221887   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3221888   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3221889   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3221890   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3221891   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3221892   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3221893   +END;
MPRINT(EM_DIAGRAM):   END;
3221894   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3221895   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3221896   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3221897   +END;
MPRINT(EM_DIAGRAM):   END;
3221898   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3221899   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
3221900   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
3221901   +END;
MPRINT(EM_DIAGRAM):   END;
3221902   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3221903   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3221904   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3221905   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3221906   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3221907   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3221908   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3221909   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221910   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3221911   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3221912   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3221913   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3221914   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3221915   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3221916   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3221917   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3221918   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3221919   +END;
MPRINT(EM_DIAGRAM):   END;
3221920   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3221921   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3221922   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3221923   +drop
3221924   +H11
3221925   +H12
3221926   +H13
3221927   +H14
3221928   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
3221929   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
3221930    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL39_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
3221931    quit;
3221932    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
3221933    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3221934    * Neural39: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural39: Computing metadata for TRAIN data;
3221935    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL39_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural39_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural39_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural39_TRAIN out=WORK.M0RG__LW noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0RG__LW;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0RG__LW(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0RG__LW;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0RG__LW;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3IYDDLW NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3IYDDLW;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3IYDDLW;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0986CDP(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3IYDDLW;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3IYDDLW;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3IYDDLW;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3IYDDLW;
MPRINT(EMADVISECOLUMNS):   set WORK.M3IYDDLW;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural39";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural39";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural39: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3222247    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3222248    set EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_EMINFO;
3222249    where DATA='Neural39' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural39' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
3222250    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL39_EMINFO.
      WHERE (DATA='Neural39') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3222251    data EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural39_EMINFO;
3222252    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3222253    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3222254    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL39_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
3222258    run;
3222259    data EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_EMINFO;
3222260    set EMWS8.Neural39_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_EMINFO WORK.MODELTEMP_INFO;
3222261    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL39_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL39_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3222262    proc sort data = EMWS8.Neural39_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural39_EMINFO NOTHREADS;
3222263    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3222264    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL39_EMINFO.
NOTE: The data set EMWS8.NEURAL39_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3222265    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3222266    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3222267    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3222268    proc sort data = EMWS8.Neural39_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural39_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3222269    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3222270    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL39_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3222271    data EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_EMINFO;
3222272    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3222273    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3222274    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL39_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3222275    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3222276    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3222277    run;
MPRINT(EM_DIAGRAM):   run;

The SAS System

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3222278    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

NOTE: View EMWS8.NEURAL39_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL39_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
