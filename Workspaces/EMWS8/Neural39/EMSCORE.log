MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.22 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                17.22 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1RLANVZ 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1RLANVZ new;
MPRINT(EM_DIAGRAM):   run;
199839     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
199840     set EMWS8.Neural39_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_OUTKEY;
199841     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
199842     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set EMWS8.NEURAL39_OUTKEY.
NOTE: The data set WORK.OUTKEY has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

199843     filename emflow
199843   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural39: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
199844     *------------------------------------------------------------*;
199845     * Neural39: Scoring DATA data;
199846     *------------------------------------------------------------*;
199847     data EMWS8.Neural39_TRAIN
199848     / view=EMWS8.Neural39_TRAIN
199849     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_TRAIN / view=EMWS8.Neural39_TRAIN ;
199850     set EMWS8.Meta3_TRAIN
199851     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
199852     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas.
199853    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
199854    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
199855    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
199856    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
199857    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
199858    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
199859    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
199860    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
199861    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
199862    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
199863    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
199864    +LENGTH _WARN_ $4
199865    +      F_DepVar  $ 12
199866    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
199867    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
199868    +
199869    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
199870    +
199871    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
199872    +
199873    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
199874    +
199875    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
199876    +
199877    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
199878    +
199879    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
199880    +
199881    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
199882    +
199883    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
199884    +
199885    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
199886    +
199887    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
199888    +
199889    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
199890    +
199891    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
199892    +
199893    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
199894    +
199895    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
199896    +
199897    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
199898    +
199899    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
199900    +
199901    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
199902    +
199903    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
199904    +
199905    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
199906    +
199907    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
199908    +
199909    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
199910    +
199911    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
199912    +
199913    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
199914    +
199915    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
199916    +
199917    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
199918    +
199919    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
199920    +
199921    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
199922    +
199923    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
199924    +
199925    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
199926    +
199927    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
199928    +
199929    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
199930    +
199931    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
199932    +
199933    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
199934    +
199935    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
199936    +
199937    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
199938    +
199939    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
199940    +
199941    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
199942    +
199943    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
199944    +
199945    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
199946    +
199947    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
199948    +
199949    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
199950    +
199951    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
199952    +
199953    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
199954    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
199955    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
199956    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
199957    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199958    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199959    +end;
MPRINT(EM_DIAGRAM):   end;
199960    +else do;
MPRINT(EM_DIAGRAM):   else do;
199961    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
199962    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
199963    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
199964    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
199965    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
199966    +   end;
MPRINT(EM_DIAGRAM):   end;
199967    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
199968    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
199969    +   end;
MPRINT(EM_DIAGRAM):   end;
199970    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199971    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
199972    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
199973    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199974    +   end;
MPRINT(EM_DIAGRAM):   end;
199975    +end;
MPRINT(EM_DIAGRAM):   end;
199976    +
199977    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
199978    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
199979    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
199980    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
199981    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199982    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199983    +end;
MPRINT(EM_DIAGRAM):   end;
199984    +else do;
MPRINT(EM_DIAGRAM):   else do;
199985    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
199986    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
199987    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
199988    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
199989    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
199990    +   end;
MPRINT(EM_DIAGRAM):   end;
199991    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
199992    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
199993    +   end;
MPRINT(EM_DIAGRAM):   end;
199994    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199995    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
199996    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
199997    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199998    +   end;
MPRINT(EM_DIAGRAM):   end;
199999    +end;
MPRINT(EM_DIAGRAM):   end;
200000    +
200001    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
200002    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
200003    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
200004    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
200005    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200006    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200007    +end;
MPRINT(EM_DIAGRAM):   end;
200008    +else do;
MPRINT(EM_DIAGRAM):   else do;
200009    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
200010    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
200011    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200012    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
200013    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
200014    +   end;
MPRINT(EM_DIAGRAM):   end;
200015    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
200016    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
200017    +   end;
MPRINT(EM_DIAGRAM):   end;
200018    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200019    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
200020    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200021    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200022    +   end;
MPRINT(EM_DIAGRAM):   end;
200023    +end;
MPRINT(EM_DIAGRAM):   end;
200024    +
200025    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
200026    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
200027    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
200028    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
200029    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200030    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200031    +end;
MPRINT(EM_DIAGRAM):   end;
200032    +else do;
MPRINT(EM_DIAGRAM):   else do;
200033    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
200034    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
200035    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200036    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
200037    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
200038    +   end;
MPRINT(EM_DIAGRAM):   end;
200039    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
200040    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
200041    +   end;
MPRINT(EM_DIAGRAM):   end;
200042    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200043    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
200044    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200045    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200046    +   end;
MPRINT(EM_DIAGRAM):   end;
200047    +end;
MPRINT(EM_DIAGRAM):   end;
200048    +
200049    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
200050    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
200051    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
200052    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
200053    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200054    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200055    +end;
MPRINT(EM_DIAGRAM):   end;
200056    +else do;
MPRINT(EM_DIAGRAM):   else do;
200057    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
200058    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
200059    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200060    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
200061    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
200062    +   end;
MPRINT(EM_DIAGRAM):   end;
200063    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
200064    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
200065    +   end;
MPRINT(EM_DIAGRAM):   end;
200066    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200067    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
200068    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200069    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200070    +   end;
MPRINT(EM_DIAGRAM):   end;
200071    +end;
MPRINT(EM_DIAGRAM):   end;
200072    +
200073    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
200074    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
200075    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
200076    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
200077    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200078    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200079    +end;
MPRINT(EM_DIAGRAM):   end;
200080    +else do;
MPRINT(EM_DIAGRAM):   else do;
200081    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
200082    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
200083    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200084    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
200085    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
200086    +   end;
MPRINT(EM_DIAGRAM):   end;
200087    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
200088    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
200089    +   end;
MPRINT(EM_DIAGRAM):   end;
200090    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200091    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
200092    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200093    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200094    +   end;
MPRINT(EM_DIAGRAM):   end;
200095    +end;
MPRINT(EM_DIAGRAM):   end;
200096    +
200097    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
200098    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
200099    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
200100    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
200101    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200102    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200103    +end;
MPRINT(EM_DIAGRAM):   end;
200104    +else do;
MPRINT(EM_DIAGRAM):   else do;
200105    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
200106    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
200107    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200108    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
200109    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
200110    +   end;
MPRINT(EM_DIAGRAM):   end;
200111    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
200112    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
200113    +   end;
MPRINT(EM_DIAGRAM):   end;
200114    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200115    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
200116    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200117    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200118    +   end;
MPRINT(EM_DIAGRAM):   end;
200119    +end;
MPRINT(EM_DIAGRAM):   end;
200120    +
200121    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
200122    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
200123    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
200124    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
200125    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
200126    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
200127    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
200128    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
200129    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
200130    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
200131    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
200132    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
200133    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200134    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200135    +end;
MPRINT(EM_DIAGRAM):   end;
200136    +else do;
MPRINT(EM_DIAGRAM):   else do;
200137    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
200138    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
200139    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200140    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
200141    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
200142    +   end;
MPRINT(EM_DIAGRAM):   end;
200143    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
200144    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
200145    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
200146    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
200147    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
200148    +   end;
MPRINT(EM_DIAGRAM):   end;
200149    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
200150    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
200151    +   end;
MPRINT(EM_DIAGRAM):   end;
200152    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
200153    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
200154    +   end;
MPRINT(EM_DIAGRAM):   end;
200155    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
200156    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
200157    +   end;
MPRINT(EM_DIAGRAM):   end;
200158    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200159    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
200160    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
200161    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
200162    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
200163    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200164    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200165    +   end;
MPRINT(EM_DIAGRAM):   end;
200166    +end;
MPRINT(EM_DIAGRAM):   end;
200167    +
200168    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
200169    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
200170    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
200171    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
200172    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
200173    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
200174    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
200175    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
200176    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
200177    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
200178    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
200179    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
200180    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
200181    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200182    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200183    +end;
MPRINT(EM_DIAGRAM):   end;
200184    +else do;
MPRINT(EM_DIAGRAM):   else do;
200185    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
200186    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
200187    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200188    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
200189    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
200190    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
200191    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
200192    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
200193    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200194    +         end;
MPRINT(EM_DIAGRAM):   end;
200195    +         else do;
MPRINT(EM_DIAGRAM):   else do;
200196    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
200197    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
200198    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200199    +            end;
MPRINT(EM_DIAGRAM):   end;
200200    +         end;
MPRINT(EM_DIAGRAM):   end;
200201    +      end;
MPRINT(EM_DIAGRAM):   end;
200202    +      else do;
MPRINT(EM_DIAGRAM):   else do;
200203    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
200204    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
200205    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200206    +         end;
MPRINT(EM_DIAGRAM):   end;
200207    +      end;
MPRINT(EM_DIAGRAM):   end;
200208    +   end;
MPRINT(EM_DIAGRAM):   end;
200209    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200210    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
200211    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
200212    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200213    +      end;
MPRINT(EM_DIAGRAM):   end;
200214    +      else do;
MPRINT(EM_DIAGRAM):   else do;
200215    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
200216    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
200217    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
200218    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
200219    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
200220    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200221    +         end;
MPRINT(EM_DIAGRAM):   end;
200222    +      end;
MPRINT(EM_DIAGRAM):   end;
200223    +   end;
MPRINT(EM_DIAGRAM):   end;
200224    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
200225    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
200226    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
200227    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
200228    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
200229    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200230    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200231    +   end;
MPRINT(EM_DIAGRAM):   end;
200232    +end;
MPRINT(EM_DIAGRAM):   end;
200233    +
200234    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200235    +*** Checking missing input Interval
200236    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
200237    +
200238    +IF NMISS(
200239    +   AcceptedCmpTotal ,
200240    +   Age ,
200241    +   Frq ,
200242    +   Income ,
200243    +   Kidhome ,
200244    +   MntFishProducts ,
200245    +   MntFruits ,
200246    +   MntGoldProds ,
200247    +   MntSweetProducts ,
200248    +   MonthsAsCustomer ,
200249    +   NumDealsPurchases ,
200250    +   NumWebVisitsMonth ,
200251    +   RFMstat ,
200252    +   RMntFrq ,
200253    +   Recency ,
200254    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
200255    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
200256    +
200257    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200258    +END;
MPRINT(EM_DIAGRAM):   END;
200259    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200260    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
200261    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200262    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
200263    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
200264    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
200265    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
200266    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
200267    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
200268    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
200269    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
200270    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
200271    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
200272    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
200273    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
200274    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
200275    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
200276    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
200277    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
200278    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
200279    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
200280    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
200281    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
200282    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
200283    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
200284    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
200285    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
200286    +END;
MPRINT(EM_DIAGRAM):   END;
200287    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
200288    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
200289    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
200290    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
200291    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
200292    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
200293    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
200294    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
200295    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
200296    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
200297    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
200298    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
200299    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
200300    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
200301    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
200302    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
200303    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
200304    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
200305    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
200306    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
200307    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
200308    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
200309    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
200310    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
200311    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
200312    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
200313    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
200314    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
200315    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
200316    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
200317    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
200318    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
200319    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
200320    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
200321    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
200322    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
200323    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
200324    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
200325    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
200326    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
200327    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
200328    +END;
MPRINT(EM_DIAGRAM):   END;
200329    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200330    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
200331    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200332    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200333    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
200334    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200335    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200336    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
200337    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200338    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
200339    +   H11  =    -0.61879380889194 * S_AcceptedCmpTotal  +    -0.09795242603477 *
200340    +        S_Age  +     0.36103250822255 * S_Frq  +     0.08899052794394 *
200341    +        S_Income  +     0.25564250606874 * S_Kidhome
200342    +          +    -0.02786629817134 * S_MntFishProducts
200343    +          +     0.13529614728112 * S_MntFruits  +     0.19622442891821 *
200344    +        S_MntGoldProds  +     0.14107929478218 * S_MntSweetProducts
200345    +          +    -0.29199173107007 * S_MonthsAsCustomer
200346    +          +    -0.59759788962473 * S_NumDealsPurchases
200347    +          +     -0.3788422274482 * S_NumWebVisitsMonth
200348    +          +    -0.06743318112874 * S_RFMstat  +      0.2833264895355 *
200349    +        S_RMntFrq  +     0.70854972350771 * S_Recency
200350    +          +     0.11936327488967 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.61879380889194 * S_AcceptedCmpTotal + -0.09795242603477 * S_Age 
+ 0.36103250822255 * S_Frq + 0.08899052794394 * S_Income + 0.25564250606874 * S_Kidhome + 
-0.02786629817134 * S_MntFishProducts + 0.13529614728112 * S_MntFruits + 0.19622442891821 * 
S_MntGoldProds + 0.14107929478218 * S_MntSweetProducts + -0.29199173107007 * 
S_MonthsAsCustomer + -0.59759788962473 * S_NumDealsPurchases + -0.3788422274482 * 
S_NumWebVisitsMonth + -0.06743318112874 * S_RFMstat + 0.2833264895355 * S_RMntFrq + 
0.70854972350771 * S_Recency + 0.11936327488967 * S_Teenhome ;
200351    +   H12  =    -0.18766983828727 * S_AcceptedCmpTotal  +       0.517042669033 *
200352    +        S_Age  +     1.02262972068559 * S_Frq  +     0.38007459198406 *
200353    +        S_Income  +     0.07328887474153 * S_Kidhome
200354    +          +    -0.23284570213322 * S_MntFishProducts
200355    +          +     0.02838864374624 * S_MntFruits  +    -0.07574618602845 *
200356    +        S_MntGoldProds  +    -0.41131707239504 * S_MntSweetProducts
200357    +          +     0.29669594858185 * S_MonthsAsCustomer
200358    +          +    -0.51220833966596 * S_NumDealsPurchases
200359    +          +    -0.72293271444385 * S_NumWebVisitsMonth
200360    +          +    -0.20562458645044 * S_RFMstat  +    -0.52495075768839 *
200361    +        S_RMntFrq  +      1.0795232419354 * S_Recency
200362    +          +    -0.18997953891579 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18766983828727 * S_AcceptedCmpTotal + 0.517042669033 * S_Age + 
1.02262972068559 * S_Frq + 0.38007459198406 * S_Income + 0.07328887474153 * S_Kidhome + 
-0.23284570213322 * S_MntFishProducts + 0.02838864374624 * S_MntFruits + -0.07574618602845 * 
S_MntGoldProds + -0.41131707239504 * S_MntSweetProducts + 0.29669594858185 * 
S_MonthsAsCustomer + -0.51220833966596 * S_NumDealsPurchases + -0.72293271444385 * 
S_NumWebVisitsMonth + -0.20562458645044 * S_RFMstat + -0.52495075768839 * S_RMntFrq + 
1.0795232419354 * S_Recency + -0.18997953891579 * S_Teenhome ;
200363    +   H13  =    -0.49159501579895 * S_AcceptedCmpTotal  +    -0.16293971978781 *
200364    +        S_Age  +    -0.02977525702894 * S_Frq  +    -0.78728568889664 *
200365    +        S_Income  +    -0.68209910558389 * S_Kidhome
200366    +          +     0.23366174254474 * S_MntFishProducts
200367    +          +    -0.08764688950673 * S_MntFruits  +    -0.38895649975347 *
200368    +        S_MntGoldProds  +     0.02270546080284 * S_MntSweetProducts
200369    +          +    -0.05759532204753 * S_MonthsAsCustomer
200370    +          +    -0.30170163047261 * S_NumDealsPurchases
200371    +          +    -0.57711437834603 * S_NumWebVisitsMonth
200372    +          +    -0.09851659878757 * S_RFMstat  +    -0.20102310575519 *
200373    +        S_RMntFrq  +     0.80994896921796 * S_Recency
200374    +          +     0.32766576826101 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.49159501579895 * S_AcceptedCmpTotal + -0.16293971978781 * S_Age 
+ -0.02977525702894 * S_Frq + -0.78728568889664 * S_Income + -0.68209910558389 * S_Kidhome + 
0.23366174254474 * S_MntFishProducts + -0.08764688950673 * S_MntFruits + -0.38895649975347 * 
S_MntGoldProds + 0.02270546080284 * S_MntSweetProducts + -0.05759532204753 * 
S_MonthsAsCustomer + -0.30170163047261 * S_NumDealsPurchases + -0.57711437834603 * 
S_NumWebVisitsMonth + -0.09851659878757 * S_RFMstat + -0.20102310575519 * S_RMntFrq + 
0.80994896921796 * S_Recency + 0.32766576826101 * S_Teenhome ;
200375    +   H14  =    -0.11122937165995 * S_AcceptedCmpTotal  +     0.06859829254058 *
200376    +        S_Age  +    -0.60966071706708 * S_Frq  +    -1.00949681880427 *
200377    +        S_Income  +     0.67855138873039 * S_Kidhome
200378    +          +    -0.05297743313476 * S_MntFishProducts
200379    +          +     0.21613302257797 * S_MntFruits  +     0.03843790921347 *
200380    +        S_MntGoldProds  +     0.25543771093558 * S_MntSweetProducts
200381    +          +    -0.15817861274553 * S_MonthsAsCustomer
200382    +          +     0.25133066233725 * S_NumDealsPurchases
200383    +          +     0.08802636187267 * S_NumWebVisitsMonth
200384    +          +    -0.04637957487976 * S_RFMstat  +    -0.31656429052936 *
200385    +        S_RMntFrq  +      0.7228272496527 * S_Recency
200386    +          +     0.58629319995218 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11122937165995 * S_AcceptedCmpTotal + 0.06859829254058 * S_Age 
+ -0.60966071706708 * S_Frq + -1.00949681880427 * S_Income + 0.67855138873039 * S_Kidhome + 
-0.05297743313476 * S_MntFishProducts + 0.21613302257797 * S_MntFruits + 0.03843790921347 * 
S_MntGoldProds + 0.25543771093558 * S_MntSweetProducts + -0.15817861274553 * 
S_MonthsAsCustomer + 0.25133066233725 * S_NumDealsPurchases + 0.08802636187267 * 
S_NumWebVisitsMonth + -0.04637957487976 * S_RFMstat + -0.31656429052936 * S_RMntFrq + 
0.7228272496527 * S_Recency + 0.58629319995218 * S_Teenhome ;
200387    +   H11  = H11  +     0.23190135069025 * AcceptedCmp10
200388    +          +     0.04686213078143 * AcceptedCmp20  +     0.17662818955575 *
200389    +        AcceptedCmp30  +     0.03498741067378 * AcceptedCmp40
200390    +          +     0.61042747626768 * AcceptedCmp50  +    -0.12810871081838 *
200391    +        Complain0  +     0.03047400476944 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23190135069025 * AcceptedCmp10 + 0.04686213078143 * 
AcceptedCmp20 + 0.17662818955575 * AcceptedCmp30 + 0.03498741067378 * AcceptedCmp40 + 
0.61042747626768 * AcceptedCmp50 + -0.12810871081838 * Complain0 + 0.03047400476944 * 
HigherEducationBinary0 ;
200392    +   H12  = H12  +     0.53873807658752 * AcceptedCmp10
200393    +          +     0.29840055428915 * AcceptedCmp20  +     0.52740574468702 *
200394    +        AcceptedCmp30  +     0.27242279016627 * AcceptedCmp40
200395    +          +     0.07126269343217 * AcceptedCmp50  +    -0.14631570192286 *
200396    +        Complain0  +     0.16629352334811 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.53873807658752 * AcceptedCmp10 + 0.29840055428915 * 
AcceptedCmp20 + 0.52740574468702 * AcceptedCmp30 + 0.27242279016627 * AcceptedCmp40 + 
0.07126269343217 * AcceptedCmp50 + -0.14631570192286 * Complain0 + 0.16629352334811 * 
HigherEducationBinary0 ;
200397    +   H13  = H13  +     0.09118941740461 * AcceptedCmp10
200398    +          +     0.04178457860358 * AcceptedCmp20  +     0.48487479920901 *
200399    +        AcceptedCmp30  +    -0.80910928087974 * AcceptedCmp40
200400    +          +      0.4667831985075 * AcceptedCmp50  +    -0.29601289494349 *
200401    +        Complain0  +     0.10690006738431 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09118941740461 * AcceptedCmp10 + 0.04178457860358 * 
AcceptedCmp20 + 0.48487479920901 * AcceptedCmp30 + -0.80910928087974 * AcceptedCmp40 + 
0.4667831985075 * AcceptedCmp50 + -0.29601289494349 * Complain0 + 0.10690006738431 * 
HigherEducationBinary0 ;
200402    +   H14  = H14  +     0.21382858049752 * AcceptedCmp10
200403    +          +     0.12652392800261 * AcceptedCmp20  +     0.30403608200617 *
200404    +        AcceptedCmp30  +     0.51966382166521 * AcceptedCmp40
200405    +          +    -0.14518145187533 * AcceptedCmp50  +     0.27045295957801 *
200406    +        Complain0  +    -0.49307163723406 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.21382858049752 * AcceptedCmp10 + 0.12652392800261 * 
AcceptedCmp20 + 0.30403608200617 * AcceptedCmp30 + 0.51966382166521 * AcceptedCmp40 + 
-0.14518145187533 * AcceptedCmp50 + 0.27045295957801 * Complain0 + -0.49307163723406 * 
HigherEducationBinary0 ;
200407    +   H11  = H11  +    -0.15292649085097 * Education2n_Cycle
200408    +          +     0.00016605452926 * EducationBasic  +    -0.04208965271063 *
200409    +        EducationGraduation  +    -0.05433922630608 * EducationMaster
200410    +          +      0.0528075343138 * Marital_StatusDivorced
200411    +          +    -0.08269844855231 * Marital_StatusMarried
200412    +          +     0.43411839786169 * Marital_StatusSingle
200413    +          +     0.38324605489754 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15292649085097 * Education2n_Cycle + 0.00016605452926 * 
EducationBasic + -0.04208965271063 * EducationGraduation + -0.05433922630608 * EducationMaster 
+ 0.0528075343138 * Marital_StatusDivorced + -0.08269844855231 * Marital_StatusMarried + 
0.43411839786169 * Marital_StatusSingle + 0.38324605489754 * Marital_StatusTogether ;
200414    +   H12  = H12  +      0.3082578019648 * Education2n_Cycle
200415    +          +    -0.01380127751108 * EducationBasic  +    -0.11076736066311 *
200416    +        EducationGraduation  +     -0.1586948328241 * EducationMaster
200417    +          +    -0.12842912869907 * Marital_StatusDivorced
200418    +          +     0.11838814754642 * Marital_StatusMarried
200419    +          +     0.01184261900927 * Marital_StatusSingle
200420    +          +     0.14066273070318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.3082578019648 * Education2n_Cycle + -0.01380127751108 * 
EducationBasic + -0.11076736066311 * EducationGraduation + -0.1586948328241 * EducationMaster 
+ -0.12842912869907 * Marital_StatusDivorced + 0.11838814754642 * Marital_StatusMarried + 
0.01184261900927 * Marital_StatusSingle + 0.14066273070318 * Marital_StatusTogether ;
200421    +   H13  = H13  +     0.02861254390946 * Education2n_Cycle
200422    +          +      0.4349807830691 * EducationBasic  +    -0.31346964692246 *
200423    +        EducationGraduation  +      0.0620488761517 * EducationMaster
200424    +          +    -0.22110722201709 * Marital_StatusDivorced
200425    +          +      0.1355339029843 * Marital_StatusMarried
200426    +          +    -0.33157273596382 * Marital_StatusSingle
200427    +          +    -0.19725820483372 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02861254390946 * Education2n_Cycle + 0.4349807830691 * 
EducationBasic + -0.31346964692246 * EducationGraduation + 0.0620488761517 * EducationMaster + 
-0.22110722201709 * Marital_StatusDivorced + 0.1355339029843 * Marital_StatusMarried + 
-0.33157273596382 * Marital_StatusSingle + -0.19725820483372 * Marital_StatusTogether ;
200428    +   H14  = H14  +    -0.15196350137644 * Education2n_Cycle
200429    +          +     0.11143610044897 * EducationBasic  +    -0.23356442851658 *
200430    +        EducationGraduation  +     0.26881272673711 * EducationMaster
200431    +          +    -0.21663247467797 * Marital_StatusDivorced
200432    +          +     1.11468603898508 * Marital_StatusMarried
200433    +          +    -0.84252388146943 * Marital_StatusSingle
200434    +          +     0.91707021954171 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.15196350137644 * Education2n_Cycle + 0.11143610044897 * 
EducationBasic + -0.23356442851658 * EducationGraduation + 0.26881272673711 * EducationMaster 
+ -0.21663247467797 * Marital_StatusDivorced + 1.11468603898508 * Marital_StatusMarried + 
-0.84252388146943 * Marital_StatusSingle + 0.91707021954171 * Marital_StatusTogether ;
200435    +   H11  =     0.69752617990443 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.69752617990443 + H11 ;
200436    +   H12  =     0.88932226025287 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88932226025287 + H12 ;
200437    +   H13  =    -0.23351093325425 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.23351093325425 + H13 ;
200438    +   H14  =      1.5565991209041 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.5565991209041 + H14 ;
200439    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
200440    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
200441    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
200442    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
200443    +END;
MPRINT(EM_DIAGRAM):   END;
200444    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
200445    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
200446    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
200447    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
200448    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
200449    +END;
MPRINT(EM_DIAGRAM):   END;
200450    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200451    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
200452    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200453    +
200454    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
200455    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
200456    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
200457    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
200458    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
200459    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200460    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
200461    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
200462    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
200463    +end;
MPRINT(EM_DIAGRAM):   end;
200464    +else do;
MPRINT(EM_DIAGRAM):   else do;
200465    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
200466    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
200467    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
200468    +   end;
MPRINT(EM_DIAGRAM):   end;
200469    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
200470    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
200471    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
200472    +   end;
MPRINT(EM_DIAGRAM):   end;
200473    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200474    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
200475    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
200476    +   end;
MPRINT(EM_DIAGRAM):   end;
200477    +end;
MPRINT(EM_DIAGRAM):   end;
200478    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
200479    +   P_DepVar1  =    -1.10683009838286 * H11  +    -1.85294488833715 * H12
200480    +          +    -2.73624761150933 * H13  +    -2.51103548718704 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.10683009838286 * H11 + -1.85294488833715 * H12 + 
-2.73624761150933 * H13 + -2.51103548718704 * H14 ;
200481    +   P_DepVar1  =    -0.86309949021709 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.86309949021709 + P_DepVar1 ;
200482    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
200483    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
200484    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
200485    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
200486    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
200487    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
200488    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
200489    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
200490    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
200491    +END;
MPRINT(EM_DIAGRAM):   END;
200492    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
200493    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
200494    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
200495    +END;
MPRINT(EM_DIAGRAM):   END;
200496    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
200497    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
200498    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
200499    +END;
MPRINT(EM_DIAGRAM):   END;
200500    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
200501    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
200502    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
200503    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
200504    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
200505    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
200506    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
200507    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200508    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
200509    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200510    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
200511    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
200512    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
200513    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
200514    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
200515    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
200516    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
200517    +END;
MPRINT(EM_DIAGRAM):   END;
200518    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
200519    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
200520    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
200521    +drop
200522    +H11
200523    +H12
200524    +H13
200525    +H14
200526    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
200527    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
200528     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL39_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
200529     quit;
200530     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
200531     filename emflow
200531   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural39: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
200532     *------------------------------------------------------------*;
200533     * Neural39: Scoring VALIDATE data;
200534     *------------------------------------------------------------*;
200535     data EMWS8.Neural39_VALIDATE
200536     / view=EMWS8.Neural39_VALIDATE
200537     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_VALIDATE / view=EMWS8.Neural39_VALIDATE ;
200538     set EMWS8.Meta3_VALIDATE
200539     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
200540     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas.
200541    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
200542    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
200543    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
200544    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
200545    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
200546    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
200547    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
200548    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
200549    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
200550    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
200551    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
200552    +LENGTH _WARN_ $4
200553    +      F_DepVar  $ 12
200554    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
200555    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
200556    +
200557    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
200558    +
200559    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
200560    +
200561    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
200562    +
200563    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
200564    +
200565    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
200566    +
200567    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
200568    +
200569    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
200570    +
200571    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
200572    +
200573    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
200574    +
200575    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
200576    +
200577    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
200578    +
200579    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
200580    +
200581    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
200582    +
200583    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
200584    +
200585    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
200586    +
200587    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
200588    +
200589    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
200590    +
200591    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
200592    +
200593    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
200594    +
200595    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
200596    +
200597    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
200598    +
200599    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
200600    +
200601    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
200602    +
200603    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
200604    +
200605    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
200606    +
200607    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
200608    +
200609    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
200610    +
200611    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
200612    +
200613    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
200614    +
200615    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
200616    +
200617    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
200618    +
200619    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
200620    +
200621    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
200622    +
200623    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
200624    +
200625    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
200626    +
200627    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
200628    +
200629    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
200630    +
200631    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
200632    +
200633    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
200634    +
200635    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
200636    +
200637    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
200638    +
200639    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
200640    +
200641    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
200642    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
200643    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
200644    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
200645    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200646    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200647    +end;
MPRINT(EM_DIAGRAM):   end;
200648    +else do;
MPRINT(EM_DIAGRAM):   else do;
200649    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
200650    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
200651    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200652    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
200653    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
200654    +   end;
MPRINT(EM_DIAGRAM):   end;
200655    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
200656    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
200657    +   end;
MPRINT(EM_DIAGRAM):   end;
200658    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200659    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
200660    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200661    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200662    +   end;
MPRINT(EM_DIAGRAM):   end;
200663    +end;
MPRINT(EM_DIAGRAM):   end;
200664    +
200665    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
200666    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
200667    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
200668    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
200669    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200670    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200671    +end;
MPRINT(EM_DIAGRAM):   end;
200672    +else do;
MPRINT(EM_DIAGRAM):   else do;
200673    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
200674    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
200675    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200676    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
200677    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
200678    +   end;
MPRINT(EM_DIAGRAM):   end;
200679    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
200680    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
200681    +   end;
MPRINT(EM_DIAGRAM):   end;
200682    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200683    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
200684    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200685    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200686    +   end;
MPRINT(EM_DIAGRAM):   end;
200687    +end;
MPRINT(EM_DIAGRAM):   end;
200688    +
200689    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
200690    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
200691    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
200692    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
200693    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200694    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200695    +end;
MPRINT(EM_DIAGRAM):   end;
200696    +else do;
MPRINT(EM_DIAGRAM):   else do;
200697    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
200698    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
200699    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200700    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
200701    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
200702    +   end;
MPRINT(EM_DIAGRAM):   end;
200703    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
200704    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
200705    +   end;
MPRINT(EM_DIAGRAM):   end;
200706    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200707    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
200708    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200709    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200710    +   end;
MPRINT(EM_DIAGRAM):   end;
200711    +end;
MPRINT(EM_DIAGRAM):   end;
200712    +
200713    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
200714    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
200715    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
200716    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
200717    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200718    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200719    +end;
MPRINT(EM_DIAGRAM):   end;
200720    +else do;
MPRINT(EM_DIAGRAM):   else do;
200721    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
200722    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
200723    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200724    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
200725    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
200726    +   end;
MPRINT(EM_DIAGRAM):   end;
200727    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
200728    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
200729    +   end;
MPRINT(EM_DIAGRAM):   end;
200730    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200731    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
200732    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200733    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200734    +   end;
MPRINT(EM_DIAGRAM):   end;
200735    +end;
MPRINT(EM_DIAGRAM):   end;
200736    +
200737    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
200738    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
200739    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
200740    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
200741    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200742    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200743    +end;
MPRINT(EM_DIAGRAM):   end;
200744    +else do;
MPRINT(EM_DIAGRAM):   else do;
200745    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
200746    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
200747    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200748    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
200749    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
200750    +   end;
MPRINT(EM_DIAGRAM):   end;
200751    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
200752    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
200753    +   end;
MPRINT(EM_DIAGRAM):   end;
200754    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200755    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
200756    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200757    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200758    +   end;
MPRINT(EM_DIAGRAM):   end;
200759    +end;
MPRINT(EM_DIAGRAM):   end;
200760    +
200761    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
200762    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
200763    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
200764    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
200765    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200766    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200767    +end;
MPRINT(EM_DIAGRAM):   end;
200768    +else do;
MPRINT(EM_DIAGRAM):   else do;
200769    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
200770    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
200771    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200772    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
200773    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
200774    +   end;
MPRINT(EM_DIAGRAM):   end;
200775    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
200776    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
200777    +   end;
MPRINT(EM_DIAGRAM):   end;
200778    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200779    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
200780    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200781    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200782    +   end;
MPRINT(EM_DIAGRAM):   end;
200783    +end;
MPRINT(EM_DIAGRAM):   end;
200784    +
200785    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
200786    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
200787    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
200788    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
200789    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200790    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200791    +end;
MPRINT(EM_DIAGRAM):   end;
200792    +else do;
MPRINT(EM_DIAGRAM):   else do;
200793    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
200794    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
200795    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200796    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
200797    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
200798    +   end;
MPRINT(EM_DIAGRAM):   end;
200799    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
200800    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
200801    +   end;
MPRINT(EM_DIAGRAM):   end;
200802    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200803    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
200804    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200805    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200806    +   end;
MPRINT(EM_DIAGRAM):   end;
200807    +end;
MPRINT(EM_DIAGRAM):   end;
200808    +
200809    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
200810    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
200811    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
200812    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
200813    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
200814    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
200815    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
200816    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
200817    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
200818    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
200819    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
200820    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
200821    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200822    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200823    +end;
MPRINT(EM_DIAGRAM):   end;
200824    +else do;
MPRINT(EM_DIAGRAM):   else do;
200825    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
200826    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
200827    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200828    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
200829    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
200830    +   end;
MPRINT(EM_DIAGRAM):   end;
200831    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
200832    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
200833    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
200834    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
200835    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
200836    +   end;
MPRINT(EM_DIAGRAM):   end;
200837    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
200838    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
200839    +   end;
MPRINT(EM_DIAGRAM):   end;
200840    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
200841    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
200842    +   end;
MPRINT(EM_DIAGRAM):   end;
200843    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
200844    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
200845    +   end;
MPRINT(EM_DIAGRAM):   end;
200846    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200847    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
200848    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
200849    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
200850    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
200851    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200852    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200853    +   end;
MPRINT(EM_DIAGRAM):   end;
200854    +end;
MPRINT(EM_DIAGRAM):   end;
200855    +
200856    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
200857    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
200858    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
200859    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
200860    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
200861    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
200862    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
200863    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
200864    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
200865    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
200866    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
200867    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
200868    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
200869    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200870    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200871    +end;
MPRINT(EM_DIAGRAM):   end;
200872    +else do;
MPRINT(EM_DIAGRAM):   else do;
200873    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
200874    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
200875    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200876    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
200877    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
200878    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
200879    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
200880    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
200881    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200882    +         end;
MPRINT(EM_DIAGRAM):   end;
200883    +         else do;
MPRINT(EM_DIAGRAM):   else do;
200884    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
200885    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
200886    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200887    +            end;
MPRINT(EM_DIAGRAM):   end;
200888    +         end;
MPRINT(EM_DIAGRAM):   end;
200889    +      end;
MPRINT(EM_DIAGRAM):   end;
200890    +      else do;
MPRINT(EM_DIAGRAM):   else do;
200891    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
200892    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
200893    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200894    +         end;
MPRINT(EM_DIAGRAM):   end;
200895    +      end;
MPRINT(EM_DIAGRAM):   end;
200896    +   end;
MPRINT(EM_DIAGRAM):   end;
200897    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200898    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
200899    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
200900    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200901    +      end;
MPRINT(EM_DIAGRAM):   end;
200902    +      else do;
MPRINT(EM_DIAGRAM):   else do;
200903    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
200904    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
200905    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
200906    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
200907    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
200908    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200909    +         end;
MPRINT(EM_DIAGRAM):   end;
200910    +      end;
MPRINT(EM_DIAGRAM):   end;
200911    +   end;
MPRINT(EM_DIAGRAM):   end;
200912    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
200913    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
200914    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
200915    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
200916    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
200917    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200918    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200919    +   end;
MPRINT(EM_DIAGRAM):   end;
200920    +end;
MPRINT(EM_DIAGRAM):   end;
200921    +
200922    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200923    +*** Checking missing input Interval
200924    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
200925    +
200926    +IF NMISS(
200927    +   AcceptedCmpTotal ,
200928    +   Age ,
200929    +   Frq ,
200930    +   Income ,
200931    +   Kidhome ,
200932    +   MntFishProducts ,
200933    +   MntFruits ,
200934    +   MntGoldProds ,
200935    +   MntSweetProducts ,
200936    +   MonthsAsCustomer ,
200937    +   NumDealsPurchases ,
200938    +   NumWebVisitsMonth ,
200939    +   RFMstat ,
200940    +   RMntFrq ,
200941    +   Recency ,
200942    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
200943    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
200944    +
200945    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200946    +END;
MPRINT(EM_DIAGRAM):   END;
200947    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200948    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
200949    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200950    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
200951    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
200952    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
200953    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
200954    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
200955    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
200956    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
200957    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
200958    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
200959    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
200960    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
200961    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
200962    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
200963    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
200964    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
200965    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
200966    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
200967    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
200968    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
200969    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
200970    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
200971    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
200972    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
200973    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
200974    +END;
MPRINT(EM_DIAGRAM):   END;
200975    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
200976    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
200977    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
200978    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
200979    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
200980    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
200981    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
200982    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
200983    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
200984    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
200985    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
200986    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
200987    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
200988    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
200989    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
200990    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
200991    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
200992    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
200993    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
200994    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
200995    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
200996    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
200997    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
200998    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
200999    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
201000    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
201001    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
201002    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
201003    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
201004    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
201005    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
201006    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
201007    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
201008    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
201009    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
201010    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
201011    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
201012    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
201013    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
201014    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
201015    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
201016    +END;
MPRINT(EM_DIAGRAM):   END;
201017    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
201018    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
201019    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
201020    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
201021    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
201022    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
201023    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
201024    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
201025    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
201026    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
201027    +   H11  =    -0.61879380889194 * S_AcceptedCmpTotal  +    -0.09795242603477 *
201028    +        S_Age  +     0.36103250822255 * S_Frq  +     0.08899052794394 *
201029    +        S_Income  +     0.25564250606874 * S_Kidhome
201030    +          +    -0.02786629817134 * S_MntFishProducts
201031    +          +     0.13529614728112 * S_MntFruits  +     0.19622442891821 *
201032    +        S_MntGoldProds  +     0.14107929478218 * S_MntSweetProducts
201033    +          +    -0.29199173107007 * S_MonthsAsCustomer
201034    +          +    -0.59759788962473 * S_NumDealsPurchases
201035    +          +     -0.3788422274482 * S_NumWebVisitsMonth
201036    +          +    -0.06743318112874 * S_RFMstat  +      0.2833264895355 *
201037    +        S_RMntFrq  +     0.70854972350771 * S_Recency
201038    +          +     0.11936327488967 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.61879380889194 * S_AcceptedCmpTotal + -0.09795242603477 * S_Age 
+ 0.36103250822255 * S_Frq + 0.08899052794394 * S_Income + 0.25564250606874 * S_Kidhome + 
-0.02786629817134 * S_MntFishProducts + 0.13529614728112 * S_MntFruits + 0.19622442891821 * 
S_MntGoldProds + 0.14107929478218 * S_MntSweetProducts + -0.29199173107007 * 
S_MonthsAsCustomer + -0.59759788962473 * S_NumDealsPurchases + -0.3788422274482 * 
S_NumWebVisitsMonth + -0.06743318112874 * S_RFMstat + 0.2833264895355 * S_RMntFrq + 
0.70854972350771 * S_Recency + 0.11936327488967 * S_Teenhome ;
201039    +   H12  =    -0.18766983828727 * S_AcceptedCmpTotal  +       0.517042669033 *
201040    +        S_Age  +     1.02262972068559 * S_Frq  +     0.38007459198406 *
201041    +        S_Income  +     0.07328887474153 * S_Kidhome
201042    +          +    -0.23284570213322 * S_MntFishProducts
201043    +          +     0.02838864374624 * S_MntFruits  +    -0.07574618602845 *
201044    +        S_MntGoldProds  +    -0.41131707239504 * S_MntSweetProducts
201045    +          +     0.29669594858185 * S_MonthsAsCustomer
201046    +          +    -0.51220833966596 * S_NumDealsPurchases
201047    +          +    -0.72293271444385 * S_NumWebVisitsMonth
201048    +          +    -0.20562458645044 * S_RFMstat  +    -0.52495075768839 *
201049    +        S_RMntFrq  +      1.0795232419354 * S_Recency
201050    +          +    -0.18997953891579 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18766983828727 * S_AcceptedCmpTotal + 0.517042669033 * S_Age + 
1.02262972068559 * S_Frq + 0.38007459198406 * S_Income + 0.07328887474153 * S_Kidhome + 
-0.23284570213322 * S_MntFishProducts + 0.02838864374624 * S_MntFruits + -0.07574618602845 * 
S_MntGoldProds + -0.41131707239504 * S_MntSweetProducts + 0.29669594858185 * 
S_MonthsAsCustomer + -0.51220833966596 * S_NumDealsPurchases + -0.72293271444385 * 
S_NumWebVisitsMonth + -0.20562458645044 * S_RFMstat + -0.52495075768839 * S_RMntFrq + 
1.0795232419354 * S_Recency + -0.18997953891579 * S_Teenhome ;
201051    +   H13  =    -0.49159501579895 * S_AcceptedCmpTotal  +    -0.16293971978781 *
201052    +        S_Age  +    -0.02977525702894 * S_Frq  +    -0.78728568889664 *
201053    +        S_Income  +    -0.68209910558389 * S_Kidhome
201054    +          +     0.23366174254474 * S_MntFishProducts
201055    +          +    -0.08764688950673 * S_MntFruits  +    -0.38895649975347 *
201056    +        S_MntGoldProds  +     0.02270546080284 * S_MntSweetProducts
201057    +          +    -0.05759532204753 * S_MonthsAsCustomer
201058    +          +    -0.30170163047261 * S_NumDealsPurchases
201059    +          +    -0.57711437834603 * S_NumWebVisitsMonth
201060    +          +    -0.09851659878757 * S_RFMstat  +    -0.20102310575519 *
201061    +        S_RMntFrq  +     0.80994896921796 * S_Recency
201062    +          +     0.32766576826101 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.49159501579895 * S_AcceptedCmpTotal + -0.16293971978781 * S_Age 
+ -0.02977525702894 * S_Frq + -0.78728568889664 * S_Income + -0.68209910558389 * S_Kidhome + 
0.23366174254474 * S_MntFishProducts + -0.08764688950673 * S_MntFruits + -0.38895649975347 * 
S_MntGoldProds + 0.02270546080284 * S_MntSweetProducts + -0.05759532204753 * 
S_MonthsAsCustomer + -0.30170163047261 * S_NumDealsPurchases + -0.57711437834603 * 
S_NumWebVisitsMonth + -0.09851659878757 * S_RFMstat + -0.20102310575519 * S_RMntFrq + 
0.80994896921796 * S_Recency + 0.32766576826101 * S_Teenhome ;
201063    +   H14  =    -0.11122937165995 * S_AcceptedCmpTotal  +     0.06859829254058 *
201064    +        S_Age  +    -0.60966071706708 * S_Frq  +    -1.00949681880427 *
201065    +        S_Income  +     0.67855138873039 * S_Kidhome
201066    +          +    -0.05297743313476 * S_MntFishProducts
201067    +          +     0.21613302257797 * S_MntFruits  +     0.03843790921347 *
201068    +        S_MntGoldProds  +     0.25543771093558 * S_MntSweetProducts
201069    +          +    -0.15817861274553 * S_MonthsAsCustomer
201070    +          +     0.25133066233725 * S_NumDealsPurchases
201071    +          +     0.08802636187267 * S_NumWebVisitsMonth
201072    +          +    -0.04637957487976 * S_RFMstat  +    -0.31656429052936 *
201073    +        S_RMntFrq  +      0.7228272496527 * S_Recency
201074    +          +     0.58629319995218 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11122937165995 * S_AcceptedCmpTotal + 0.06859829254058 * S_Age 
+ -0.60966071706708 * S_Frq + -1.00949681880427 * S_Income + 0.67855138873039 * S_Kidhome + 
-0.05297743313476 * S_MntFishProducts + 0.21613302257797 * S_MntFruits + 0.03843790921347 * 
S_MntGoldProds + 0.25543771093558 * S_MntSweetProducts + -0.15817861274553 * 
S_MonthsAsCustomer + 0.25133066233725 * S_NumDealsPurchases + 0.08802636187267 * 
S_NumWebVisitsMonth + -0.04637957487976 * S_RFMstat + -0.31656429052936 * S_RMntFrq + 
0.7228272496527 * S_Recency + 0.58629319995218 * S_Teenhome ;
201075    +   H11  = H11  +     0.23190135069025 * AcceptedCmp10
201076    +          +     0.04686213078143 * AcceptedCmp20  +     0.17662818955575 *
201077    +        AcceptedCmp30  +     0.03498741067378 * AcceptedCmp40
201078    +          +     0.61042747626768 * AcceptedCmp50  +    -0.12810871081838 *
201079    +        Complain0  +     0.03047400476944 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23190135069025 * AcceptedCmp10 + 0.04686213078143 * 
AcceptedCmp20 + 0.17662818955575 * AcceptedCmp30 + 0.03498741067378 * AcceptedCmp40 + 
0.61042747626768 * AcceptedCmp50 + -0.12810871081838 * Complain0 + 0.03047400476944 * 
HigherEducationBinary0 ;
201080    +   H12  = H12  +     0.53873807658752 * AcceptedCmp10
201081    +          +     0.29840055428915 * AcceptedCmp20  +     0.52740574468702 *
201082    +        AcceptedCmp30  +     0.27242279016627 * AcceptedCmp40
201083    +          +     0.07126269343217 * AcceptedCmp50  +    -0.14631570192286 *
201084    +        Complain0  +     0.16629352334811 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.53873807658752 * AcceptedCmp10 + 0.29840055428915 * 
AcceptedCmp20 + 0.52740574468702 * AcceptedCmp30 + 0.27242279016627 * AcceptedCmp40 + 
0.07126269343217 * AcceptedCmp50 + -0.14631570192286 * Complain0 + 0.16629352334811 * 
HigherEducationBinary0 ;
201085    +   H13  = H13  +     0.09118941740461 * AcceptedCmp10
201086    +          +     0.04178457860358 * AcceptedCmp20  +     0.48487479920901 *
201087    +        AcceptedCmp30  +    -0.80910928087974 * AcceptedCmp40
201088    +          +      0.4667831985075 * AcceptedCmp50  +    -0.29601289494349 *
201089    +        Complain0  +     0.10690006738431 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09118941740461 * AcceptedCmp10 + 0.04178457860358 * 
AcceptedCmp20 + 0.48487479920901 * AcceptedCmp30 + -0.80910928087974 * AcceptedCmp40 + 
0.4667831985075 * AcceptedCmp50 + -0.29601289494349 * Complain0 + 0.10690006738431 * 
HigherEducationBinary0 ;
201090    +   H14  = H14  +     0.21382858049752 * AcceptedCmp10
201091    +          +     0.12652392800261 * AcceptedCmp20  +     0.30403608200617 *
201092    +        AcceptedCmp30  +     0.51966382166521 * AcceptedCmp40
201093    +          +    -0.14518145187533 * AcceptedCmp50  +     0.27045295957801 *
201094    +        Complain0  +    -0.49307163723406 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.21382858049752 * AcceptedCmp10 + 0.12652392800261 * 
AcceptedCmp20 + 0.30403608200617 * AcceptedCmp30 + 0.51966382166521 * AcceptedCmp40 + 
-0.14518145187533 * AcceptedCmp50 + 0.27045295957801 * Complain0 + -0.49307163723406 * 
HigherEducationBinary0 ;
201095    +   H11  = H11  +    -0.15292649085097 * Education2n_Cycle
201096    +          +     0.00016605452926 * EducationBasic  +    -0.04208965271063 *
201097    +        EducationGraduation  +    -0.05433922630608 * EducationMaster
201098    +          +      0.0528075343138 * Marital_StatusDivorced
201099    +          +    -0.08269844855231 * Marital_StatusMarried
201100    +          +     0.43411839786169 * Marital_StatusSingle
201101    +          +     0.38324605489754 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15292649085097 * Education2n_Cycle + 0.00016605452926 * 
EducationBasic + -0.04208965271063 * EducationGraduation + -0.05433922630608 * EducationMaster 
+ 0.0528075343138 * Marital_StatusDivorced + -0.08269844855231 * Marital_StatusMarried + 
0.43411839786169 * Marital_StatusSingle + 0.38324605489754 * Marital_StatusTogether ;
201102    +   H12  = H12  +      0.3082578019648 * Education2n_Cycle
201103    +          +    -0.01380127751108 * EducationBasic  +    -0.11076736066311 *
201104    +        EducationGraduation  +     -0.1586948328241 * EducationMaster
201105    +          +    -0.12842912869907 * Marital_StatusDivorced
201106    +          +     0.11838814754642 * Marital_StatusMarried
201107    +          +     0.01184261900927 * Marital_StatusSingle
201108    +          +     0.14066273070318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.3082578019648 * Education2n_Cycle + -0.01380127751108 * 
EducationBasic + -0.11076736066311 * EducationGraduation + -0.1586948328241 * EducationMaster 
+ -0.12842912869907 * Marital_StatusDivorced + 0.11838814754642 * Marital_StatusMarried + 
0.01184261900927 * Marital_StatusSingle + 0.14066273070318 * Marital_StatusTogether ;
201109    +   H13  = H13  +     0.02861254390946 * Education2n_Cycle
201110    +          +      0.4349807830691 * EducationBasic  +    -0.31346964692246 *
201111    +        EducationGraduation  +      0.0620488761517 * EducationMaster
201112    +          +    -0.22110722201709 * Marital_StatusDivorced
201113    +          +      0.1355339029843 * Marital_StatusMarried
201114    +          +    -0.33157273596382 * Marital_StatusSingle
201115    +          +    -0.19725820483372 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02861254390946 * Education2n_Cycle + 0.4349807830691 * 
EducationBasic + -0.31346964692246 * EducationGraduation + 0.0620488761517 * EducationMaster + 
-0.22110722201709 * Marital_StatusDivorced + 0.1355339029843 * Marital_StatusMarried + 
-0.33157273596382 * Marital_StatusSingle + -0.19725820483372 * Marital_StatusTogether ;
201116    +   H14  = H14  +    -0.15196350137644 * Education2n_Cycle
201117    +          +     0.11143610044897 * EducationBasic  +    -0.23356442851658 *
201118    +        EducationGraduation  +     0.26881272673711 * EducationMaster
201119    +          +    -0.21663247467797 * Marital_StatusDivorced
201120    +          +     1.11468603898508 * Marital_StatusMarried
201121    +          +    -0.84252388146943 * Marital_StatusSingle
201122    +          +     0.91707021954171 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.15196350137644 * Education2n_Cycle + 0.11143610044897 * 
EducationBasic + -0.23356442851658 * EducationGraduation + 0.26881272673711 * EducationMaster 
+ -0.21663247467797 * Marital_StatusDivorced + 1.11468603898508 * Marital_StatusMarried + 
-0.84252388146943 * Marital_StatusSingle + 0.91707021954171 * Marital_StatusTogether ;
201123    +   H11  =     0.69752617990443 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.69752617990443 + H11 ;
201124    +   H12  =     0.88932226025287 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88932226025287 + H12 ;
201125    +   H13  =    -0.23351093325425 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.23351093325425 + H13 ;
201126    +   H14  =      1.5565991209041 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.5565991209041 + H14 ;
201127    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
201128    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
201129    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
201130    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
201131    +END;
MPRINT(EM_DIAGRAM):   END;
201132    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
201133    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
201134    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
201135    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
201136    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
201137    +END;
MPRINT(EM_DIAGRAM):   END;
201138    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
201139    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
201140    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
201141    +
201142    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
201143    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
201144    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
201145    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
201146    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
201147    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
201148    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
201149    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
201150    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
201151    +end;
MPRINT(EM_DIAGRAM):   end;
201152    +else do;
MPRINT(EM_DIAGRAM):   else do;
201153    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
201154    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
201155    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
201156    +   end;
MPRINT(EM_DIAGRAM):   end;
201157    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
201158    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
201159    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
201160    +   end;
MPRINT(EM_DIAGRAM):   end;
201161    +   else do;
MPRINT(EM_DIAGRAM):   else do;
201162    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
201163    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
201164    +   end;
MPRINT(EM_DIAGRAM):   end;
201165    +end;
MPRINT(EM_DIAGRAM):   end;
201166    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
201167    +   P_DepVar1  =    -1.10683009838286 * H11  +    -1.85294488833715 * H12
201168    +          +    -2.73624761150933 * H13  +    -2.51103548718704 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.10683009838286 * H11 + -1.85294488833715 * H12 + 
-2.73624761150933 * H13 + -2.51103548718704 * H14 ;
201169    +   P_DepVar1  =    -0.86309949021709 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.86309949021709 + P_DepVar1 ;
201170    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
201171    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
201172    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
201173    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
201174    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
201175    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
201176    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
201177    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
201178    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
201179    +END;
MPRINT(EM_DIAGRAM):   END;
201180    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
201181    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
201182    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
201183    +END;
MPRINT(EM_DIAGRAM):   END;
201184    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
201185    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
201186    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
201187    +END;
MPRINT(EM_DIAGRAM):   END;
201188    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
201189    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
201190    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
201191    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
201192    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
201193    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
201194    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
201195    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
201196    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
201197    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
201198    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
201199    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
201200    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
201201    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
201202    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
201203    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
201204    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
201205    +END;
MPRINT(EM_DIAGRAM):   END;
201206    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
201207    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
201208    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
201209    +drop
201210    +H11
201211    +H12
201212    +H13
201213    +H14
201214    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
201215    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
201216     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL39_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
201217     quit;
201218     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
201219     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
201220     * Neural39: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural39: Computing metadata for TRAIN data;
201221     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL39_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural39_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural39_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural39_TRAIN out=WORK.M398VX14 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M398VX14;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M398VX14(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M398VX14;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M398VX14;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1DD9WO1 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1DD9WO1;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1DD9WO1;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2U5L3MT(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1DD9WO1;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1DD9WO1;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1DD9WO1;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1DD9WO1;
MPRINT(EMADVISECOLUMNS):   set WORK.M1DD9WO1;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural39";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural39";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural39: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
201533     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
201534     set EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_EMINFO;
201535     where DATA='Neural39' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural39' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
201536     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL39_EMINFO.
      WHERE (DATA='Neural39') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

201537     data EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural39_EMINFO;
201538     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
201539     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
201540     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL39_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
201544     run;
201545     data EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_EMINFO;
201546     set EMWS8.Neural39_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_EMINFO WORK.MODELTEMP_INFO;
201547     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL39_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL39_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

201548     proc sort data = EMWS8.Neural39_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural39_EMINFO NOTHREADS;
201549     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
201550     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL39_EMINFO.
NOTE: The data set EMWS8.NEURAL39_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

201551     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
201552     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
201553     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

201554     proc sort data = EMWS8.Neural39_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural39_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
201555     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
201556     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL39_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

201557     data EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_EMINFO;
201558     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
201559     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
201560     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL39_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

201561     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
201562     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
201563     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
201564     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL39_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL39_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
