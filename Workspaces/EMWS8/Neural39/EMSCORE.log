MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.29 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.29 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0WFJ7XL 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0WFJ7XL new;
MPRINT(EM_DIAGRAM):   run;
1202940    data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
1202941    set EMWS8.Neural39_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_OUTKEY;
1202942    if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
1202943    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set EMWS8.NEURAL39_OUTKEY.
NOTE: The data set WORK.OUTKEY has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1202944    filename emflow
1202944  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural39: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202945    *------------------------------------------------------------*;
1202946    * Neural39: Scoring DATA data;
1202947    *------------------------------------------------------------*;
1202948    data EMWS8.Neural39_TRAIN
1202949    / view=EMWS8.Neural39_TRAIN
1202950    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_TRAIN / view=EMWS8.Neural39_TRAIN ;
1202951    set EMWS8.Meta3_TRAIN
1202952    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
1202953    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas.
1202954   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1202955   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1202956   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1202957   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1202958   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1202959   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1202960   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1202961   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1202962   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1202963   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1202964   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1202965   +LENGTH _WARN_ $4
1202966   +      F_DepVar  $ 12
1202967   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1202968   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1202969   +
1202970   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1202971   +
1202972   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1202973   +
1202974   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1202975   +
1202976   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1202977   +
1202978   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1202979   +
1202980   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1202981   +
1202982   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1202983   +
1202984   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1202985   +
1202986   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1202987   +
1202988   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1202989   +
1202990   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1202991   +
1202992   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1202993   +
1202994   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1202995   +
1202996   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1202997   +
1202998   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1202999   +
1203000   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1203001   +
1203002   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1203003   +
1203004   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1203005   +
1203006   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1203007   +
1203008   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1203009   +
1203010   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1203011   +
1203012   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1203013   +
1203014   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1203015   +
1203016   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1203017   +
1203018   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1203019   +
1203020   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1203021   +
1203022   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1203023   +
1203024   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1203025   +
1203026   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1203027   +
1203028   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1203029   +
1203030   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1203031   +
1203032   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1203033   +
1203034   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1203035   +
1203036   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1203037   +
1203038   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1203039   +
1203040   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1203041   +
1203042   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1203043   +
1203044   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1203045   +
1203046   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1203047   +
1203048   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1203049   +
1203050   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1203051   +
1203052   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1203053   +
1203054   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1203055   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1203056   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1203057   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1203058   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203059   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203060   +end;
MPRINT(EM_DIAGRAM):   end;
1203061   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203062   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203063   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1203064   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203065   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1203066   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1203067   +   end;
MPRINT(EM_DIAGRAM):   end;
1203068   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1203069   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1203070   +   end;
MPRINT(EM_DIAGRAM):   end;
1203071   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203072   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1203073   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203074   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203075   +   end;
MPRINT(EM_DIAGRAM):   end;
1203076   +end;
MPRINT(EM_DIAGRAM):   end;
1203077   +
1203078   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1203079   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1203080   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1203081   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1203082   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203083   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203084   +end;
MPRINT(EM_DIAGRAM):   end;
1203085   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203086   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203087   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1203088   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203089   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1203090   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1203091   +   end;
MPRINT(EM_DIAGRAM):   end;
1203092   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1203093   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1203094   +   end;
MPRINT(EM_DIAGRAM):   end;
1203095   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203096   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1203097   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203098   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203099   +   end;
MPRINT(EM_DIAGRAM):   end;
1203100   +end;
MPRINT(EM_DIAGRAM):   end;
1203101   +
1203102   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1203103   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1203104   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1203105   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1203106   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203107   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203108   +end;
MPRINT(EM_DIAGRAM):   end;
1203109   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203110   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203111   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1203112   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203113   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1203114   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1203115   +   end;
MPRINT(EM_DIAGRAM):   end;
1203116   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1203117   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1203118   +   end;
MPRINT(EM_DIAGRAM):   end;
1203119   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203120   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1203121   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203122   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203123   +   end;
MPRINT(EM_DIAGRAM):   end;
1203124   +end;
MPRINT(EM_DIAGRAM):   end;
1203125   +
1203126   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1203127   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1203128   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1203129   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1203130   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203131   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203132   +end;
MPRINT(EM_DIAGRAM):   end;
1203133   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203134   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203135   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1203136   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203137   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1203138   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1203139   +   end;
MPRINT(EM_DIAGRAM):   end;
1203140   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1203141   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1203142   +   end;
MPRINT(EM_DIAGRAM):   end;
1203143   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203144   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1203145   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203146   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203147   +   end;
MPRINT(EM_DIAGRAM):   end;
1203148   +end;
MPRINT(EM_DIAGRAM):   end;
1203149   +
1203150   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1203151   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1203152   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1203153   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1203154   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203155   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203156   +end;
MPRINT(EM_DIAGRAM):   end;
1203157   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203158   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203159   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1203160   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203161   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1203162   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1203163   +   end;
MPRINT(EM_DIAGRAM):   end;
1203164   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1203165   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1203166   +   end;
MPRINT(EM_DIAGRAM):   end;
1203167   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203168   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1203169   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203170   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203171   +   end;
MPRINT(EM_DIAGRAM):   end;
1203172   +end;
MPRINT(EM_DIAGRAM):   end;
1203173   +
1203174   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1203175   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1203176   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1203177   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1203178   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203179   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203180   +end;
MPRINT(EM_DIAGRAM):   end;
1203181   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203182   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203183   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1203184   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203185   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1203186   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1203187   +   end;
MPRINT(EM_DIAGRAM):   end;
1203188   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1203189   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1203190   +   end;
MPRINT(EM_DIAGRAM):   end;
1203191   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203192   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1203193   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203194   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203195   +   end;
MPRINT(EM_DIAGRAM):   end;
1203196   +end;
MPRINT(EM_DIAGRAM):   end;
1203197   +
1203198   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1203199   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1203200   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1203201   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1203202   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203203   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203204   +end;
MPRINT(EM_DIAGRAM):   end;
1203205   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203206   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203207   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1203208   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203209   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1203210   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1203211   +   end;
MPRINT(EM_DIAGRAM):   end;
1203212   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1203213   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1203214   +   end;
MPRINT(EM_DIAGRAM):   end;
1203215   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203216   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1203217   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203218   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203219   +   end;
MPRINT(EM_DIAGRAM):   end;
1203220   +end;
MPRINT(EM_DIAGRAM):   end;
1203221   +
1203222   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1203223   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1203224   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1203225   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1203226   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1203227   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1203228   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1203229   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1203230   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1203231   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1203232   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1203233   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1203234   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203235   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203236   +end;
MPRINT(EM_DIAGRAM):   end;
1203237   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203238   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1203239   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1203240   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203241   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1203242   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1203243   +   end;
MPRINT(EM_DIAGRAM):   end;
1203244   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1203245   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1203246   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1203247   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1203248   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1203249   +   end;
MPRINT(EM_DIAGRAM):   end;
1203250   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1203251   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1203252   +   end;
MPRINT(EM_DIAGRAM):   end;
1203253   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1203254   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1203255   +   end;
MPRINT(EM_DIAGRAM):   end;
1203256   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1203257   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1203258   +   end;
MPRINT(EM_DIAGRAM):   end;
1203259   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203260   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1203261   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1203262   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1203263   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1203264   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203265   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203266   +   end;
MPRINT(EM_DIAGRAM):   end;
1203267   +end;
MPRINT(EM_DIAGRAM):   end;
1203268   +
1203269   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1203270   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1203271   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1203272   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1203273   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1203274   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1203275   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1203276   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1203277   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1203278   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1203279   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1203280   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1203281   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1203282   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203283   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203284   +end;
MPRINT(EM_DIAGRAM):   end;
1203285   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203286   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1203287   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1203288   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203289   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1203290   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1203291   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1203292   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1203293   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1203294   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1203295   +         end;
MPRINT(EM_DIAGRAM):   end;
1203296   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1203297   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1203298   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1203299   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1203300   +            end;
MPRINT(EM_DIAGRAM):   end;
1203301   +         end;
MPRINT(EM_DIAGRAM):   end;
1203302   +      end;
MPRINT(EM_DIAGRAM):   end;
1203303   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1203304   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1203305   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1203306   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1203307   +         end;
MPRINT(EM_DIAGRAM):   end;
1203308   +      end;
MPRINT(EM_DIAGRAM):   end;
1203309   +   end;
MPRINT(EM_DIAGRAM):   end;
1203310   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203311   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1203312   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1203313   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1203314   +      end;
MPRINT(EM_DIAGRAM):   end;
1203315   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1203316   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1203317   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1203318   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1203319   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1203320   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1203321   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1203322   +         end;
MPRINT(EM_DIAGRAM):   end;
1203323   +      end;
MPRINT(EM_DIAGRAM):   end;
1203324   +   end;
MPRINT(EM_DIAGRAM):   end;
1203325   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1203326   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1203327   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1203328   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1203329   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1203330   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203331   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203332   +   end;
MPRINT(EM_DIAGRAM):   end;
1203333   +end;
MPRINT(EM_DIAGRAM):   end;
1203334   +
1203335   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1203336   +*** Checking missing input Interval
1203337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1203338   +
1203339   +IF NMISS(
1203340   +   AcceptedCmpTotal ,
1203341   +   Age ,
1203342   +   Frq ,
1203343   +   Income ,
1203344   +   Kidhome ,
1203345   +   MntFishProducts ,
1203346   +   MntFruits ,
1203347   +   MntGoldProds ,
1203348   +   MntSweetProducts ,
1203349   +   MonthsAsCustomer ,
1203350   +   NumDealsPurchases ,
1203351   +   NumWebVisitsMonth ,
1203352   +   RFMstat ,
1203353   +   RMntFrq ,
1203354   +   Recency ,
1203355   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1203356   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1203357   +
1203358   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203359   +END;
MPRINT(EM_DIAGRAM):   END;
1203360   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1203361   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1203362   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1203363   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1203364   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1203365   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1203366   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1203367   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1203368   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1203369   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1203370   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1203371   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1203372   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1203373   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1203374   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1203375   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1203376   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1203377   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1203378   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1203379   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1203380   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1203381   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1203382   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1203383   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1203384   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1203385   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1203386   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1203387   +END;
MPRINT(EM_DIAGRAM):   END;
1203388   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1203389   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1203390   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1203391   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1203392   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1203393   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1203394   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1203395   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1203396   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1203397   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1203398   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1203399   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1203400   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1203401   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1203402   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1203403   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1203404   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1203405   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1203406   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1203407   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1203408   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1203409   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1203410   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1203411   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1203412   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1203413   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1203414   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1203415   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1203416   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1203417   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1203418   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1203419   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1203420   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1203421   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1203422   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1203423   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1203424   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1203425   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1203426   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1203427   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1203428   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1203429   +END;
MPRINT(EM_DIAGRAM):   END;
1203430   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1203431   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1203432   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1203433   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1203434   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1203435   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1203436   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1203437   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1203438   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1203439   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1203440   +   H11  =    -0.59455727552731 * S_AcceptedCmpTotal  +    -0.08167191943092 *
1203441   +        S_Age  +     0.34904063109008 * S_Frq  +     0.08433673871857 *
1203442   +        S_Income  +     0.23959806833358 * S_Kidhome
1203443   +          +    -0.01518037416881 * S_MntFishProducts
1203444   +          +     0.10484256743602 * S_MntFruits  +     0.18738600021461 *
1203445   +        S_MntGoldProds  +     0.12927048058846 * S_MntSweetProducts
1203446   +          +    -0.27670454990341 * S_MonthsAsCustomer
1203447   +          +    -0.57117018330921 * S_NumDealsPurchases
1203448   +          +    -0.36419456228524 * S_NumWebVisitsMonth
1203449   +          +    -0.07695281325888 * S_RFMstat  +     0.26913561397665 *
1203450   +        S_RMntFrq  +     0.69534731451792 * S_Recency
1203451   +          +     0.12556011393839 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59455727552731 * S_AcceptedCmpTotal + -0.08167191943092 * S_Age 
+ 0.34904063109008 * S_Frq + 0.08433673871857 * S_Income + 0.23959806833358 * S_Kidhome + 
-0.01518037416881 * S_MntFishProducts + 0.10484256743602 * S_MntFruits + 0.18738600021461 * 
S_MntGoldProds + 0.12927048058846 * S_MntSweetProducts + -0.27670454990341 * 
S_MonthsAsCustomer + -0.57117018330921 * S_NumDealsPurchases + -0.36419456228524 * 
S_NumWebVisitsMonth + -0.07695281325888 * S_RFMstat + 0.26913561397665 * S_RMntFrq + 
0.69534731451792 * S_Recency + 0.12556011393839 * S_Teenhome ;
1203452   +   H12  =    -0.18355037756752 * S_AcceptedCmpTotal  +     0.50880964309834 *
1203453   +        S_Age  +     0.98855915357544 * S_Frq  +     0.36315803091135 *
1203454   +        S_Income  +      0.0790487270089 * S_Kidhome
1203455   +          +    -0.20277009052533 * S_MntFishProducts
1203456   +          +     0.02639378411424 * S_MntFruits  +    -0.05188435065088 *
1203457   +        S_MntGoldProds  +    -0.37906951561993 * S_MntSweetProducts
1203458   +          +     0.29927988116433 * S_MonthsAsCustomer
1203459   +          +    -0.50520073910306 * S_NumDealsPurchases
1203460   +          +    -0.73222137406072 * S_NumWebVisitsMonth
1203461   +          +    -0.21742553055925 * S_RFMstat  +    -0.50891089702382 *
1203462   +        S_RMntFrq  +      1.0541732913714 * S_Recency
1203463   +          +    -0.19121741055236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18355037756752 * S_AcceptedCmpTotal + 0.50880964309834 * S_Age 
+ 0.98855915357544 * S_Frq + 0.36315803091135 * S_Income + 0.0790487270089 * S_Kidhome + 
-0.20277009052533 * S_MntFishProducts + 0.02639378411424 * S_MntFruits + -0.05188435065088 * 
S_MntGoldProds + -0.37906951561993 * S_MntSweetProducts + 0.29927988116433 * 
S_MonthsAsCustomer + -0.50520073910306 * S_NumDealsPurchases + -0.73222137406072 * 
S_NumWebVisitsMonth + -0.21742553055925 * S_RFMstat + -0.50891089702382 * S_RMntFrq + 
1.0541732913714 * S_Recency + -0.19121741055236 * S_Teenhome ;
1203464   +   H13  =    -0.47520371973992 * S_AcceptedCmpTotal  +    -0.17643530808934 *
1203465   +        S_Age  +    -0.02342355849303 * S_Frq  +    -0.76780370828396 *
1203466   +        S_Income  +    -0.64136231731673 * S_Kidhome
1203467   +          +     0.21288725603028 * S_MntFishProducts
1203468   +          +    -0.07945341031035 * S_MntFruits  +    -0.37983532218736 *
1203469   +        S_MntGoldProds  +      0.0246071335741 * S_MntSweetProducts
1203470   +          +     -0.0690174805795 * S_MonthsAsCustomer
1203471   +          +    -0.30254439479517 * S_NumDealsPurchases
1203472   +          +    -0.57976591777746 * S_NumWebVisitsMonth
1203473   +          +    -0.08986007311299 * S_RFMstat  +    -0.21859201021696 *
1203474   +        S_RMntFrq  +     0.80196185579181 * S_Recency
1203475   +          +     0.34243610231239 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.47520371973992 * S_AcceptedCmpTotal + -0.17643530808934 * S_Age 
+ -0.02342355849303 * S_Frq + -0.76780370828396 * S_Income + -0.64136231731673 * S_Kidhome + 
0.21288725603028 * S_MntFishProducts + -0.07945341031035 * S_MntFruits + -0.37983532218736 * 
S_MntGoldProds + 0.0246071335741 * S_MntSweetProducts + -0.0690174805795 * S_MonthsAsCustomer 
+ -0.30254439479517 * S_NumDealsPurchases + -0.57976591777746 * S_NumWebVisitsMonth + 
-0.08986007311299 * S_RFMstat + -0.21859201021696 * S_RMntFrq + 0.80196185579181 * S_Recency + 
0.34243610231239 * S_Teenhome ;
1203476   +   H14  =    -0.11942815753227 * S_AcceptedCmpTotal  +     0.09419423122981 *
1203477   +        S_Age  +    -0.58989090056574 * S_Frq  +    -0.97241848188885 *
1203478   +        S_Income  +     0.66642589823561 * S_Kidhome
1203479   +          +    -0.02898422978622 * S_MntFishProducts
1203480   +          +      0.2190266457824 * S_MntFruits  +     0.03869102340694 *
1203481   +        S_MntGoldProds  +     0.27016627270688 * S_MntSweetProducts
1203482   +          +     -0.1522807134985 * S_MonthsAsCustomer
1203483   +          +     0.23369239293049 * S_NumDealsPurchases
1203484   +          +     0.14730037601616 * S_NumWebVisitsMonth
1203485   +          +    -0.03493628078299 * S_RFMstat  +    -0.29981204072854 *
1203486   +        S_RMntFrq  +     0.72995078547996 * S_Recency
1203487   +          +     0.51545897916716 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11942815753227 * S_AcceptedCmpTotal + 0.09419423122981 * S_Age 
+ -0.58989090056574 * S_Frq + -0.97241848188885 * S_Income + 0.66642589823561 * S_Kidhome + 
-0.02898422978622 * S_MntFishProducts + 0.2190266457824 * S_MntFruits + 0.03869102340694 * 
S_MntGoldProds + 0.27016627270688 * S_MntSweetProducts + -0.1522807134985 * S_MonthsAsCustomer 
+ 0.23369239293049 * S_NumDealsPurchases + 0.14730037601616 * S_NumWebVisitsMonth + 
-0.03493628078299 * S_RFMstat + -0.29981204072854 * S_RMntFrq + 0.72995078547996 * S_Recency + 
0.51545897916716 * S_Teenhome ;
1203488   +   H11  = H11  +     0.21532563526921 * AcceptedCmp10
1203489   +          +     0.04617627623677 * AcceptedCmp20  +     0.18097818457801 *
1203490   +        AcceptedCmp30  +     0.02250864169523 * AcceptedCmp40
1203491   +          +     0.57128562538825 * AcceptedCmp50  +    -0.13476267382061 *
1203492   +        Complain0  +     0.04848312577533 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21532563526921 * AcceptedCmp10 + 0.04617627623677 * 
AcceptedCmp20 + 0.18097818457801 * AcceptedCmp30 + 0.02250864169523 * AcceptedCmp40 + 
0.57128562538825 * AcceptedCmp50 + -0.13476267382061 * Complain0 + 0.04848312577533 * 
HigherEducationBinary0 ;
1203493   +   H12  = H12  +     0.49790938305741 * AcceptedCmp10
1203494   +          +        0.28100162725 * AcceptedCmp20  +     0.53516835657705 *
1203495   +        AcceptedCmp30  +      0.2731055683853 * AcceptedCmp40
1203496   +          +     0.08872244973216 * AcceptedCmp50  +    -0.14524762871188 *
1203497   +        Complain0  +     0.13433570395362 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.49790938305741 * AcceptedCmp10 + 0.28100162725 * 
AcceptedCmp20 + 0.53516835657705 * AcceptedCmp30 + 0.2731055683853 * AcceptedCmp40 + 
0.08872244973216 * AcceptedCmp50 + -0.14524762871188 * Complain0 + 0.13433570395362 * 
HigherEducationBinary0 ;
1203498   +   H13  = H13  +     0.09295121106092 * AcceptedCmp10
1203499   +          +     0.03551087675679 * AcceptedCmp20  +     0.48068530009647 *
1203500   +        AcceptedCmp30  +     -0.7573607772958 * AcceptedCmp40
1203501   +          +     0.44431160694171 * AcceptedCmp50  +    -0.28053968379046 *
1203502   +        Complain0  +     0.08868233512421 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09295121106092 * AcceptedCmp10 + 0.03551087675679 * 
AcceptedCmp20 + 0.48068530009647 * AcceptedCmp30 + -0.7573607772958 * AcceptedCmp40 + 
0.44431160694171 * AcceptedCmp50 + -0.28053968379046 * Complain0 + 0.08868233512421 * 
HigherEducationBinary0 ;
1203503   +   H14  = H14  +     0.19910269634608 * AcceptedCmp10
1203504   +          +     0.11664271215883 * AcceptedCmp20  +     0.29519310368658 *
1203505   +        AcceptedCmp30  +     0.50294025882261 * AcceptedCmp40
1203506   +          +    -0.13765389029233 * AcceptedCmp50  +     0.25128367938074 *
1203507   +        Complain0  +    -0.46697322419144 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.19910269634608 * AcceptedCmp10 + 0.11664271215883 * 
AcceptedCmp20 + 0.29519310368658 * AcceptedCmp30 + 0.50294025882261 * AcceptedCmp40 + 
-0.13765389029233 * AcceptedCmp50 + 0.25128367938074 * Complain0 + -0.46697322419144 * 
HigherEducationBinary0 ;
1203508   +   H11  = H11  +     -0.1475625455323 * Education2n_Cycle
1203509   +          +     0.01119870242835 * EducationBasic  +    -0.05699503612035 *
1203510   +        EducationGraduation  +    -0.03551408731462 * EducationMaster
1203511   +          +     0.05796662179857 * Marital_StatusDivorced
1203512   +          +    -0.08181120425686 * Marital_StatusMarried
1203513   +          +      0.4284636120807 * Marital_StatusSingle
1203514   +          +     0.39673224936003 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.1475625455323 * Education2n_Cycle + 0.01119870242835 * 
EducationBasic + -0.05699503612035 * EducationGraduation + -0.03551408731462 * EducationMaster 
+ 0.05796662179857 * Marital_StatusDivorced + -0.08181120425686 * Marital_StatusMarried + 
0.4284636120807 * Marital_StatusSingle + 0.39673224936003 * Marital_StatusTogether ;
1203515   +   H12  = H12  +     0.29455368575629 * Education2n_Cycle
1203516   +          +    -0.01641080294584 * EducationBasic  +    -0.10263336811703 *
1203517   +        EducationGraduation  +    -0.14981964719806 * EducationMaster
1203518   +          +    -0.13203345238763 * Marital_StatusDivorced
1203519   +          +     0.10923067927942 * Marital_StatusMarried
1203520   +          +     0.02213145916128 * Marital_StatusSingle
1203521   +          +     0.13743874933445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.29455368575629 * Education2n_Cycle + -0.01641080294584 * 
EducationBasic + -0.10263336811703 * EducationGraduation + -0.14981964719806 * EducationMaster 
+ -0.13203345238763 * Marital_StatusDivorced + 0.10923067927942 * Marital_StatusMarried + 
0.02213145916128 * Marital_StatusSingle + 0.13743874933445 * Marital_StatusTogether ;
1203522   +   H13  = H13  +     0.01805834793656 * Education2n_Cycle
1203523   +          +     0.42785728964985 * EducationBasic  +    -0.32070493640323 *
1203524   +        EducationGraduation  +     0.06311193021026 * EducationMaster
1203525   +          +    -0.22903332135187 * Marital_StatusDivorced
1203526   +          +     0.12718454820375 * Marital_StatusMarried
1203527   +          +    -0.33610403764223 * Marital_StatusSingle
1203528   +          +     -0.1600429716422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01805834793656 * Education2n_Cycle + 0.42785728964985 * 
EducationBasic + -0.32070493640323 * EducationGraduation + 0.06311193021026 * EducationMaster 
+ -0.22903332135187 * Marital_StatusDivorced + 0.12718454820375 * Marital_StatusMarried + 
-0.33610403764223 * Marital_StatusSingle + -0.1600429716422 * Marital_StatusTogether ;
1203529   +   H14  = H14  +    -0.14389790536326 * Education2n_Cycle
1203530   +          +      0.1160422333785 * EducationBasic  +    -0.22913940929096 *
1203531   +        EducationGraduation  +     0.25383554942249 * EducationMaster
1203532   +          +    -0.20380298917683 * Marital_StatusDivorced
1203533   +          +     1.08032097869696 * Marital_StatusMarried
1203534   +          +    -0.79644537171645 * Marital_StatusSingle
1203535   +          +     0.87920058104376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.14389790536326 * Education2n_Cycle + 0.1160422333785 * 
EducationBasic + -0.22913940929096 * EducationGraduation + 0.25383554942249 * EducationMaster 
+ -0.20380298917683 * Marital_StatusDivorced + 1.08032097869696 * Marital_StatusMarried + 
-0.79644537171645 * Marital_StatusSingle + 0.87920058104376 * Marital_StatusTogether ;
1203536   +   H11  =     0.69018111185452 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.69018111185452 + H11 ;
1203537   +   H12  =     0.88319279467723 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88319279467723 + H12 ;
1203538   +   H13  =    -0.22379946661781 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.22379946661781 + H13 ;
1203539   +   H14  =      1.5443460617033 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.5443460617033 + H14 ;
1203540   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1203541   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1203542   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1203543   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1203544   +END;
MPRINT(EM_DIAGRAM):   END;
1203545   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1203546   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1203547   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1203548   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1203549   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1203550   +END;
MPRINT(EM_DIAGRAM):   END;
1203551   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1203552   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1203553   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1203554   +
1203555   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1203556   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1203557   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1203558   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1203559   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1203560   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203561   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1203562   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1203563   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1203564   +end;
MPRINT(EM_DIAGRAM):   end;
1203565   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203566   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1203567   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1203568   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1203569   +   end;
MPRINT(EM_DIAGRAM):   end;
1203570   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1203571   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1203572   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1203573   +   end;
MPRINT(EM_DIAGRAM):   end;
1203574   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203575   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1203576   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1203577   +   end;
MPRINT(EM_DIAGRAM):   end;
1203578   +end;
MPRINT(EM_DIAGRAM):   end;
1203579   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1203580   +   P_DepVar1  =      -1.051307515754 * H11  +    -1.81265117956856 * H12
1203581   +          +    -2.69912557985855 * H13  +    -2.43296856252593 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.051307515754 * H11 + -1.81265117956856 * H12 + 
-2.69912557985855 * H13 + -2.43296856252593 * H14 ;
1203582   +   P_DepVar1  =    -0.88296375077361 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.88296375077361 + P_DepVar1 ;
1203583   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1203584   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1203585   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1203586   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1203587   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1203588   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1203589   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1203590   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1203591   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1203592   +END;
MPRINT(EM_DIAGRAM):   END;
1203593   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1203594   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1203595   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1203596   +END;
MPRINT(EM_DIAGRAM):   END;
1203597   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1203598   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1203599   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1203600   +END;
MPRINT(EM_DIAGRAM):   END;
1203601   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1203602   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1203603   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1203604   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1203605   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1203606   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1203607   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1203608   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1203609   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1203610   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1203611   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1203612   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1203613   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1203614   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1203615   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1203616   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1203617   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1203618   +END;
MPRINT(EM_DIAGRAM):   END;
1203619   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1203620   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1203621   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1203622   +drop
1203623   +H11
1203624   +H12
1203625   +H13
1203626   +H14
1203627   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1203628   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1203629    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL39_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1203630    quit;
1203631    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1203632    filename emflow
1203632  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural39: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203633    *------------------------------------------------------------*;
1203634    * Neural39: Scoring VALIDATE data;
1203635    *------------------------------------------------------------*;
1203636    data EMWS8.Neural39_VALIDATE
1203637    / view=EMWS8.Neural39_VALIDATE
1203638    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_VALIDATE / view=EMWS8.Neural39_VALIDATE ;
1203639    set EMWS8.Meta3_VALIDATE
1203640    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
1203641    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas.
1203642   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1203643   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1203644   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1203645   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1203646   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1203647   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1203648   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1203649   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1203650   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1203651   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1203652   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1203653   +LENGTH _WARN_ $4
1203654   +      F_DepVar  $ 12
1203655   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1203656   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1203657   +
1203658   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1203659   +
1203660   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1203661   +
1203662   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1203663   +
1203664   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1203665   +
1203666   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1203667   +
1203668   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1203669   +
1203670   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1203671   +
1203672   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1203673   +
1203674   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1203675   +
1203676   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1203677   +
1203678   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1203679   +
1203680   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1203681   +
1203682   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1203683   +
1203684   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1203685   +
1203686   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1203687   +
1203688   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1203689   +
1203690   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1203691   +
1203692   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1203693   +
1203694   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1203695   +
1203696   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1203697   +
1203698   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1203699   +
1203700   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1203701   +
1203702   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1203703   +
1203704   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1203705   +
1203706   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1203707   +
1203708   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1203709   +
1203710   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1203711   +
1203712   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1203713   +
1203714   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1203715   +
1203716   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1203717   +
1203718   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1203719   +
1203720   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1203721   +
1203722   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1203723   +
1203724   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1203725   +
1203726   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1203727   +
1203728   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1203729   +
1203730   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1203731   +
1203732   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1203733   +
1203734   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1203735   +
1203736   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1203737   +
1203738   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1203739   +
1203740   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1203741   +
1203742   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1203743   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1203744   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1203745   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1203746   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203747   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203748   +end;
MPRINT(EM_DIAGRAM):   end;
1203749   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203750   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203751   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1203752   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203753   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1203754   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1203755   +   end;
MPRINT(EM_DIAGRAM):   end;
1203756   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1203757   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1203758   +   end;
MPRINT(EM_DIAGRAM):   end;
1203759   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203760   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1203761   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203762   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203763   +   end;
MPRINT(EM_DIAGRAM):   end;
1203764   +end;
MPRINT(EM_DIAGRAM):   end;
1203765   +
1203766   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1203767   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1203768   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1203769   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1203770   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203771   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203772   +end;
MPRINT(EM_DIAGRAM):   end;
1203773   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203774   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203775   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1203776   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203777   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1203778   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1203779   +   end;
MPRINT(EM_DIAGRAM):   end;
1203780   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1203781   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1203782   +   end;
MPRINT(EM_DIAGRAM):   end;
1203783   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203784   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1203785   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203786   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203787   +   end;
MPRINT(EM_DIAGRAM):   end;
1203788   +end;
MPRINT(EM_DIAGRAM):   end;
1203789   +
1203790   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1203791   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1203792   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1203793   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1203794   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203795   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203796   +end;
MPRINT(EM_DIAGRAM):   end;
1203797   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203798   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203799   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1203800   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203801   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1203802   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1203803   +   end;
MPRINT(EM_DIAGRAM):   end;
1203804   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1203805   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1203806   +   end;
MPRINT(EM_DIAGRAM):   end;
1203807   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203808   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1203809   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203810   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203811   +   end;
MPRINT(EM_DIAGRAM):   end;
1203812   +end;
MPRINT(EM_DIAGRAM):   end;
1203813   +
1203814   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1203815   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1203816   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1203817   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1203818   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203819   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203820   +end;
MPRINT(EM_DIAGRAM):   end;
1203821   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203822   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203823   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1203824   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203825   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1203826   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1203827   +   end;
MPRINT(EM_DIAGRAM):   end;
1203828   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1203829   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1203830   +   end;
MPRINT(EM_DIAGRAM):   end;
1203831   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203832   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1203833   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203834   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203835   +   end;
MPRINT(EM_DIAGRAM):   end;
1203836   +end;
MPRINT(EM_DIAGRAM):   end;
1203837   +
1203838   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1203839   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1203840   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1203841   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1203842   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203843   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203844   +end;
MPRINT(EM_DIAGRAM):   end;
1203845   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203846   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203847   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1203848   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203849   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1203850   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1203851   +   end;
MPRINT(EM_DIAGRAM):   end;
1203852   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1203853   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1203854   +   end;
MPRINT(EM_DIAGRAM):   end;
1203855   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203856   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1203857   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203858   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203859   +   end;
MPRINT(EM_DIAGRAM):   end;
1203860   +end;
MPRINT(EM_DIAGRAM):   end;
1203861   +
1203862   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1203863   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1203864   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1203865   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1203866   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203867   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203868   +end;
MPRINT(EM_DIAGRAM):   end;
1203869   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203870   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203871   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1203872   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203873   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1203874   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1203875   +   end;
MPRINT(EM_DIAGRAM):   end;
1203876   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1203877   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1203878   +   end;
MPRINT(EM_DIAGRAM):   end;
1203879   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203880   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1203881   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203882   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203883   +   end;
MPRINT(EM_DIAGRAM):   end;
1203884   +end;
MPRINT(EM_DIAGRAM):   end;
1203885   +
1203886   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1203887   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1203888   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1203889   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1203890   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203891   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203892   +end;
MPRINT(EM_DIAGRAM):   end;
1203893   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203894   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203895   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1203896   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203897   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1203898   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1203899   +   end;
MPRINT(EM_DIAGRAM):   end;
1203900   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1203901   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1203902   +   end;
MPRINT(EM_DIAGRAM):   end;
1203903   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203904   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1203905   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203906   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203907   +   end;
MPRINT(EM_DIAGRAM):   end;
1203908   +end;
MPRINT(EM_DIAGRAM):   end;
1203909   +
1203910   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1203911   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1203912   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1203913   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1203914   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1203915   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1203916   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1203917   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1203918   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1203919   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1203920   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1203921   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1203922   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203923   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203924   +end;
MPRINT(EM_DIAGRAM):   end;
1203925   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203926   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1203927   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1203928   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203929   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1203930   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1203931   +   end;
MPRINT(EM_DIAGRAM):   end;
1203932   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1203933   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1203934   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1203935   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1203936   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1203937   +   end;
MPRINT(EM_DIAGRAM):   end;
1203938   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1203939   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1203940   +   end;
MPRINT(EM_DIAGRAM):   end;
1203941   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1203942   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1203943   +   end;
MPRINT(EM_DIAGRAM):   end;
1203944   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1203945   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1203946   +   end;
MPRINT(EM_DIAGRAM):   end;
1203947   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203948   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1203949   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1203950   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1203951   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1203952   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203953   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203954   +   end;
MPRINT(EM_DIAGRAM):   end;
1203955   +end;
MPRINT(EM_DIAGRAM):   end;
1203956   +
1203957   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1203958   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1203959   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1203960   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1203961   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1203962   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1203963   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1203964   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1203965   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1203966   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1203967   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1203968   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1203969   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1203970   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203971   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203972   +end;
MPRINT(EM_DIAGRAM):   end;
1203973   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203974   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1203975   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1203976   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203977   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1203978   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1203979   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1203980   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1203981   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1203982   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1203983   +         end;
MPRINT(EM_DIAGRAM):   end;
1203984   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1203985   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1203986   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1203987   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1203988   +            end;
MPRINT(EM_DIAGRAM):   end;
1203989   +         end;
MPRINT(EM_DIAGRAM):   end;
1203990   +      end;
MPRINT(EM_DIAGRAM):   end;
1203991   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1203992   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1203993   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1203994   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1203995   +         end;
MPRINT(EM_DIAGRAM):   end;
1203996   +      end;
MPRINT(EM_DIAGRAM):   end;
1203997   +   end;
MPRINT(EM_DIAGRAM):   end;
1203998   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203999   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1204000   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1204001   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1204002   +      end;
MPRINT(EM_DIAGRAM):   end;
1204003   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1204004   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1204005   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1204006   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1204007   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1204008   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1204009   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1204010   +         end;
MPRINT(EM_DIAGRAM):   end;
1204011   +      end;
MPRINT(EM_DIAGRAM):   end;
1204012   +   end;
MPRINT(EM_DIAGRAM):   end;
1204013   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1204014   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1204015   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1204016   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1204017   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1204018   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204019   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204020   +   end;
MPRINT(EM_DIAGRAM):   end;
1204021   +end;
MPRINT(EM_DIAGRAM):   end;
1204022   +
1204023   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204024   +*** Checking missing input Interval
1204025   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1204026   +
1204027   +IF NMISS(
1204028   +   AcceptedCmpTotal ,
1204029   +   Age ,
1204030   +   Frq ,
1204031   +   Income ,
1204032   +   Kidhome ,
1204033   +   MntFishProducts ,
1204034   +   MntFruits ,
1204035   +   MntGoldProds ,
1204036   +   MntSweetProducts ,
1204037   +   MonthsAsCustomer ,
1204038   +   NumDealsPurchases ,
1204039   +   NumWebVisitsMonth ,
1204040   +   RFMstat ,
1204041   +   RMntFrq ,
1204042   +   Recency ,
1204043   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1204044   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1204045   +
1204046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204047   +END;
MPRINT(EM_DIAGRAM):   END;
1204048   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204049   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1204050   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204051   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1204052   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1204053   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1204054   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1204055   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1204056   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1204057   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1204058   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1204059   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1204060   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1204061   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1204062   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1204063   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1204064   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1204065   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1204066   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1204067   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1204068   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1204069   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1204070   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1204071   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1204072   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1204073   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1204074   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1204075   +END;
MPRINT(EM_DIAGRAM):   END;
1204076   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1204077   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1204078   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1204079   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1204080   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1204081   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1204082   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1204083   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1204084   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1204085   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1204086   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1204087   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1204088   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1204089   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1204090   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1204091   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1204092   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1204093   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1204094   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1204095   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1204096   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1204097   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1204098   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1204099   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1204100   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1204101   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1204102   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1204103   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1204104   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1204105   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1204106   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1204107   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1204108   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1204109   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1204110   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1204111   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1204112   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1204113   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1204114   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1204115   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1204116   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1204117   +END;
MPRINT(EM_DIAGRAM):   END;
1204118   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204119   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1204120   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204121   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204122   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1204123   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204124   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204125   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1204126   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204127   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1204128   +   H11  =    -0.59455727552731 * S_AcceptedCmpTotal  +    -0.08167191943092 *
1204129   +        S_Age  +     0.34904063109008 * S_Frq  +     0.08433673871857 *
1204130   +        S_Income  +     0.23959806833358 * S_Kidhome
1204131   +          +    -0.01518037416881 * S_MntFishProducts
1204132   +          +     0.10484256743602 * S_MntFruits  +     0.18738600021461 *
1204133   +        S_MntGoldProds  +     0.12927048058846 * S_MntSweetProducts
1204134   +          +    -0.27670454990341 * S_MonthsAsCustomer
1204135   +          +    -0.57117018330921 * S_NumDealsPurchases
1204136   +          +    -0.36419456228524 * S_NumWebVisitsMonth
1204137   +          +    -0.07695281325888 * S_RFMstat  +     0.26913561397665 *
1204138   +        S_RMntFrq  +     0.69534731451792 * S_Recency
1204139   +          +     0.12556011393839 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59455727552731 * S_AcceptedCmpTotal + -0.08167191943092 * S_Age 
+ 0.34904063109008 * S_Frq + 0.08433673871857 * S_Income + 0.23959806833358 * S_Kidhome + 
-0.01518037416881 * S_MntFishProducts + 0.10484256743602 * S_MntFruits + 0.18738600021461 * 
S_MntGoldProds + 0.12927048058846 * S_MntSweetProducts + -0.27670454990341 * 
S_MonthsAsCustomer + -0.57117018330921 * S_NumDealsPurchases + -0.36419456228524 * 
S_NumWebVisitsMonth + -0.07695281325888 * S_RFMstat + 0.26913561397665 * S_RMntFrq + 
0.69534731451792 * S_Recency + 0.12556011393839 * S_Teenhome ;
1204140   +   H12  =    -0.18355037756752 * S_AcceptedCmpTotal  +     0.50880964309834 *
1204141   +        S_Age  +     0.98855915357544 * S_Frq  +     0.36315803091135 *
1204142   +        S_Income  +      0.0790487270089 * S_Kidhome
1204143   +          +    -0.20277009052533 * S_MntFishProducts
1204144   +          +     0.02639378411424 * S_MntFruits  +    -0.05188435065088 *
1204145   +        S_MntGoldProds  +    -0.37906951561993 * S_MntSweetProducts
1204146   +          +     0.29927988116433 * S_MonthsAsCustomer
1204147   +          +    -0.50520073910306 * S_NumDealsPurchases
1204148   +          +    -0.73222137406072 * S_NumWebVisitsMonth
1204149   +          +    -0.21742553055925 * S_RFMstat  +    -0.50891089702382 *
1204150   +        S_RMntFrq  +      1.0541732913714 * S_Recency
1204151   +          +    -0.19121741055236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18355037756752 * S_AcceptedCmpTotal + 0.50880964309834 * S_Age 
+ 0.98855915357544 * S_Frq + 0.36315803091135 * S_Income + 0.0790487270089 * S_Kidhome + 
-0.20277009052533 * S_MntFishProducts + 0.02639378411424 * S_MntFruits + -0.05188435065088 * 
S_MntGoldProds + -0.37906951561993 * S_MntSweetProducts + 0.29927988116433 * 
S_MonthsAsCustomer + -0.50520073910306 * S_NumDealsPurchases + -0.73222137406072 * 
S_NumWebVisitsMonth + -0.21742553055925 * S_RFMstat + -0.50891089702382 * S_RMntFrq + 
1.0541732913714 * S_Recency + -0.19121741055236 * S_Teenhome ;
1204152   +   H13  =    -0.47520371973992 * S_AcceptedCmpTotal  +    -0.17643530808934 *
1204153   +        S_Age  +    -0.02342355849303 * S_Frq  +    -0.76780370828396 *
1204154   +        S_Income  +    -0.64136231731673 * S_Kidhome
1204155   +          +     0.21288725603028 * S_MntFishProducts
1204156   +          +    -0.07945341031035 * S_MntFruits  +    -0.37983532218736 *
1204157   +        S_MntGoldProds  +      0.0246071335741 * S_MntSweetProducts
1204158   +          +     -0.0690174805795 * S_MonthsAsCustomer
1204159   +          +    -0.30254439479517 * S_NumDealsPurchases
1204160   +          +    -0.57976591777746 * S_NumWebVisitsMonth
1204161   +          +    -0.08986007311299 * S_RFMstat  +    -0.21859201021696 *
1204162   +        S_RMntFrq  +     0.80196185579181 * S_Recency
1204163   +          +     0.34243610231239 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.47520371973992 * S_AcceptedCmpTotal + -0.17643530808934 * S_Age 
+ -0.02342355849303 * S_Frq + -0.76780370828396 * S_Income + -0.64136231731673 * S_Kidhome + 
0.21288725603028 * S_MntFishProducts + -0.07945341031035 * S_MntFruits + -0.37983532218736 * 
S_MntGoldProds + 0.0246071335741 * S_MntSweetProducts + -0.0690174805795 * S_MonthsAsCustomer 
+ -0.30254439479517 * S_NumDealsPurchases + -0.57976591777746 * S_NumWebVisitsMonth + 
-0.08986007311299 * S_RFMstat + -0.21859201021696 * S_RMntFrq + 0.80196185579181 * S_Recency + 
0.34243610231239 * S_Teenhome ;
1204164   +   H14  =    -0.11942815753227 * S_AcceptedCmpTotal  +     0.09419423122981 *
1204165   +        S_Age  +    -0.58989090056574 * S_Frq  +    -0.97241848188885 *
1204166   +        S_Income  +     0.66642589823561 * S_Kidhome
1204167   +          +    -0.02898422978622 * S_MntFishProducts
1204168   +          +      0.2190266457824 * S_MntFruits  +     0.03869102340694 *
1204169   +        S_MntGoldProds  +     0.27016627270688 * S_MntSweetProducts
1204170   +          +     -0.1522807134985 * S_MonthsAsCustomer
1204171   +          +     0.23369239293049 * S_NumDealsPurchases
1204172   +          +     0.14730037601616 * S_NumWebVisitsMonth
1204173   +          +    -0.03493628078299 * S_RFMstat  +    -0.29981204072854 *
1204174   +        S_RMntFrq  +     0.72995078547996 * S_Recency
1204175   +          +     0.51545897916716 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11942815753227 * S_AcceptedCmpTotal + 0.09419423122981 * S_Age 
+ -0.58989090056574 * S_Frq + -0.97241848188885 * S_Income + 0.66642589823561 * S_Kidhome + 
-0.02898422978622 * S_MntFishProducts + 0.2190266457824 * S_MntFruits + 0.03869102340694 * 
S_MntGoldProds + 0.27016627270688 * S_MntSweetProducts + -0.1522807134985 * S_MonthsAsCustomer 
+ 0.23369239293049 * S_NumDealsPurchases + 0.14730037601616 * S_NumWebVisitsMonth + 
-0.03493628078299 * S_RFMstat + -0.29981204072854 * S_RMntFrq + 0.72995078547996 * S_Recency + 
0.51545897916716 * S_Teenhome ;
1204176   +   H11  = H11  +     0.21532563526921 * AcceptedCmp10
1204177   +          +     0.04617627623677 * AcceptedCmp20  +     0.18097818457801 *
1204178   +        AcceptedCmp30  +     0.02250864169523 * AcceptedCmp40
1204179   +          +     0.57128562538825 * AcceptedCmp50  +    -0.13476267382061 *
1204180   +        Complain0  +     0.04848312577533 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21532563526921 * AcceptedCmp10 + 0.04617627623677 * 
AcceptedCmp20 + 0.18097818457801 * AcceptedCmp30 + 0.02250864169523 * AcceptedCmp40 + 
0.57128562538825 * AcceptedCmp50 + -0.13476267382061 * Complain0 + 0.04848312577533 * 
HigherEducationBinary0 ;
1204181   +   H12  = H12  +     0.49790938305741 * AcceptedCmp10
1204182   +          +        0.28100162725 * AcceptedCmp20  +     0.53516835657705 *
1204183   +        AcceptedCmp30  +      0.2731055683853 * AcceptedCmp40
1204184   +          +     0.08872244973216 * AcceptedCmp50  +    -0.14524762871188 *
1204185   +        Complain0  +     0.13433570395362 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.49790938305741 * AcceptedCmp10 + 0.28100162725 * 
AcceptedCmp20 + 0.53516835657705 * AcceptedCmp30 + 0.2731055683853 * AcceptedCmp40 + 
0.08872244973216 * AcceptedCmp50 + -0.14524762871188 * Complain0 + 0.13433570395362 * 
HigherEducationBinary0 ;
1204186   +   H13  = H13  +     0.09295121106092 * AcceptedCmp10
1204187   +          +     0.03551087675679 * AcceptedCmp20  +     0.48068530009647 *
1204188   +        AcceptedCmp30  +     -0.7573607772958 * AcceptedCmp40
1204189   +          +     0.44431160694171 * AcceptedCmp50  +    -0.28053968379046 *
1204190   +        Complain0  +     0.08868233512421 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09295121106092 * AcceptedCmp10 + 0.03551087675679 * 
AcceptedCmp20 + 0.48068530009647 * AcceptedCmp30 + -0.7573607772958 * AcceptedCmp40 + 
0.44431160694171 * AcceptedCmp50 + -0.28053968379046 * Complain0 + 0.08868233512421 * 
HigherEducationBinary0 ;
1204191   +   H14  = H14  +     0.19910269634608 * AcceptedCmp10
1204192   +          +     0.11664271215883 * AcceptedCmp20  +     0.29519310368658 *
1204193   +        AcceptedCmp30  +     0.50294025882261 * AcceptedCmp40
1204194   +          +    -0.13765389029233 * AcceptedCmp50  +     0.25128367938074 *
1204195   +        Complain0  +    -0.46697322419144 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.19910269634608 * AcceptedCmp10 + 0.11664271215883 * 
AcceptedCmp20 + 0.29519310368658 * AcceptedCmp30 + 0.50294025882261 * AcceptedCmp40 + 
-0.13765389029233 * AcceptedCmp50 + 0.25128367938074 * Complain0 + -0.46697322419144 * 
HigherEducationBinary0 ;
1204196   +   H11  = H11  +     -0.1475625455323 * Education2n_Cycle
1204197   +          +     0.01119870242835 * EducationBasic  +    -0.05699503612035 *
1204198   +        EducationGraduation  +    -0.03551408731462 * EducationMaster
1204199   +          +     0.05796662179857 * Marital_StatusDivorced
1204200   +          +    -0.08181120425686 * Marital_StatusMarried
1204201   +          +      0.4284636120807 * Marital_StatusSingle
1204202   +          +     0.39673224936003 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.1475625455323 * Education2n_Cycle + 0.01119870242835 * 
EducationBasic + -0.05699503612035 * EducationGraduation + -0.03551408731462 * EducationMaster 
+ 0.05796662179857 * Marital_StatusDivorced + -0.08181120425686 * Marital_StatusMarried + 
0.4284636120807 * Marital_StatusSingle + 0.39673224936003 * Marital_StatusTogether ;
1204203   +   H12  = H12  +     0.29455368575629 * Education2n_Cycle
1204204   +          +    -0.01641080294584 * EducationBasic  +    -0.10263336811703 *
1204205   +        EducationGraduation  +    -0.14981964719806 * EducationMaster
1204206   +          +    -0.13203345238763 * Marital_StatusDivorced
1204207   +          +     0.10923067927942 * Marital_StatusMarried
1204208   +          +     0.02213145916128 * Marital_StatusSingle
1204209   +          +     0.13743874933445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.29455368575629 * Education2n_Cycle + -0.01641080294584 * 
EducationBasic + -0.10263336811703 * EducationGraduation + -0.14981964719806 * EducationMaster 
+ -0.13203345238763 * Marital_StatusDivorced + 0.10923067927942 * Marital_StatusMarried + 
0.02213145916128 * Marital_StatusSingle + 0.13743874933445 * Marital_StatusTogether ;
1204210   +   H13  = H13  +     0.01805834793656 * Education2n_Cycle
1204211   +          +     0.42785728964985 * EducationBasic  +    -0.32070493640323 *
1204212   +        EducationGraduation  +     0.06311193021026 * EducationMaster
1204213   +          +    -0.22903332135187 * Marital_StatusDivorced
1204214   +          +     0.12718454820375 * Marital_StatusMarried
1204215   +          +    -0.33610403764223 * Marital_StatusSingle
1204216   +          +     -0.1600429716422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01805834793656 * Education2n_Cycle + 0.42785728964985 * 
EducationBasic + -0.32070493640323 * EducationGraduation + 0.06311193021026 * EducationMaster 
+ -0.22903332135187 * Marital_StatusDivorced + 0.12718454820375 * Marital_StatusMarried + 
-0.33610403764223 * Marital_StatusSingle + -0.1600429716422 * Marital_StatusTogether ;
1204217   +   H14  = H14  +    -0.14389790536326 * Education2n_Cycle
1204218   +          +      0.1160422333785 * EducationBasic  +    -0.22913940929096 *
1204219   +        EducationGraduation  +     0.25383554942249 * EducationMaster
1204220   +          +    -0.20380298917683 * Marital_StatusDivorced
1204221   +          +     1.08032097869696 * Marital_StatusMarried
1204222   +          +    -0.79644537171645 * Marital_StatusSingle
1204223   +          +     0.87920058104376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.14389790536326 * Education2n_Cycle + 0.1160422333785 * 
EducationBasic + -0.22913940929096 * EducationGraduation + 0.25383554942249 * EducationMaster 
+ -0.20380298917683 * Marital_StatusDivorced + 1.08032097869696 * Marital_StatusMarried + 
-0.79644537171645 * Marital_StatusSingle + 0.87920058104376 * Marital_StatusTogether ;
1204224   +   H11  =     0.69018111185452 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.69018111185452 + H11 ;
1204225   +   H12  =     0.88319279467723 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88319279467723 + H12 ;
1204226   +   H13  =    -0.22379946661781 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.22379946661781 + H13 ;
1204227   +   H14  =      1.5443460617033 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.5443460617033 + H14 ;
1204228   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1204229   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1204230   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1204231   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1204232   +END;
MPRINT(EM_DIAGRAM):   END;
1204233   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1204234   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1204235   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1204236   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1204237   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1204238   +END;
MPRINT(EM_DIAGRAM):   END;
1204239   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204240   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1204241   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204242   +
1204243   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1204244   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1204245   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1204246   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1204247   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1204248   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204249   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1204250   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1204251   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1204252   +end;
MPRINT(EM_DIAGRAM):   end;
1204253   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204254   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1204255   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1204256   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1204257   +   end;
MPRINT(EM_DIAGRAM):   end;
1204258   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1204259   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1204260   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1204261   +   end;
MPRINT(EM_DIAGRAM):   end;
1204262   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204263   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1204264   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1204265   +   end;
MPRINT(EM_DIAGRAM):   end;
1204266   +end;
MPRINT(EM_DIAGRAM):   end;
1204267   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1204268   +   P_DepVar1  =      -1.051307515754 * H11  +    -1.81265117956856 * H12
1204269   +          +    -2.69912557985855 * H13  +    -2.43296856252593 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.051307515754 * H11 + -1.81265117956856 * H12 + 
-2.69912557985855 * H13 + -2.43296856252593 * H14 ;
1204270   +   P_DepVar1  =    -0.88296375077361 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.88296375077361 + P_DepVar1 ;
1204271   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1204272   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1204273   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1204274   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1204275   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1204276   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1204277   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1204278   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1204279   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1204280   +END;
MPRINT(EM_DIAGRAM):   END;
1204281   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1204282   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1204283   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1204284   +END;
MPRINT(EM_DIAGRAM):   END;
1204285   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1204286   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1204287   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1204288   +END;
MPRINT(EM_DIAGRAM):   END;
1204289   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1204290   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1204291   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1204292   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1204293   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1204294   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1204295   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1204296   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204297   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1204298   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204299   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1204300   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1204301   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1204302   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1204303   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1204304   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1204305   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1204306   +END;
MPRINT(EM_DIAGRAM):   END;
1204307   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1204308   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1204309   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1204310   +drop
1204311   +H11
1204312   +H12
1204313   +H13
1204314   +H14
1204315   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1204316   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1204317    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL39_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1204318    quit;
1204319    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1204320    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1204321    * Neural39: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural39: Computing metadata for TRAIN data;
1204322    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL39_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural39_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural39_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural39_TRAIN out=WORK.M1KTXDAN noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1KTXDAN;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1KTXDAN(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1KTXDAN;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1KTXDAN;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3QY9RAX NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QY9RAX;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QY9RAX;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M27IQK8D(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QY9RAX;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QY9RAX;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QY9RAX;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QY9RAX;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QY9RAX;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural39";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural39";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural39: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1204634    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1204635    set EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_EMINFO;
1204636    where DATA='Neural39' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural39' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1204637    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL39_EMINFO.
      WHERE (DATA='Neural39') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1204638    data EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural39_EMINFO;
1204639    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1204640    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1204641    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL39_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1204645    run;
1204646    data EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_EMINFO;
1204647    set EMWS8.Neural39_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_EMINFO WORK.MODELTEMP_INFO;
1204648    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL39_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL39_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1204649    proc sort data = EMWS8.Neural39_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural39_EMINFO NOTHREADS;
1204650    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1204651    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL39_EMINFO.
NOTE: The data set EMWS8.NEURAL39_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1204652    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1204653    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1204654    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1204655    proc sort data = EMWS8.Neural39_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural39_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1204656    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1204657    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL39_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1204658    data EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_EMINFO;
1204659    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1204660    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1204661    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL39_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1204662    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1204663    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1204664    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1204665    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.NEURAL39_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL39_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
