MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.26 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                12.26 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2JF6H7Y 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2JF6H7Y new;
MPRINT(EM_DIAGRAM):   run;
136843     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
136844     set EMWS8.Neural39_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_OUTKEY;
136845     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
136846     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set EMWS8.NEURAL39_OUTKEY.
NOTE: The data set WORK.OUTKEY has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136847     filename emflow
136847   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural39: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
136848     *------------------------------------------------------------*;
136849     * Neural39: Scoring DATA data;
136850     *------------------------------------------------------------*;
136851     data EMWS8.Neural39_TRAIN
136852     / view=EMWS8.Neural39_TRAIN
136853     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_TRAIN / view=EMWS8.Neural39_TRAIN ;
136854     set EMWS8.Meta3_TRAIN
136855     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
136856     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas.
136857    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
136858    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
136859    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
136860    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
136861    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
136862    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
136863    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
136864    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
136865    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
136866    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
136867    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
136868    +LENGTH _WARN_ $4
136869    +      F_DepVar  $ 12
136870    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
136871    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
136872    +
136873    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
136874    +
136875    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
136876    +
136877    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
136878    +
136879    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
136880    +
136881    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
136882    +
136883    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
136884    +
136885    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
136886    +
136887    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
136888    +
136889    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
136890    +
136891    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
136892    +
136893    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
136894    +
136895    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
136896    +
136897    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
136898    +
136899    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
136900    +
136901    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
136902    +
136903    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
136904    +
136905    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
136906    +
136907    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
136908    +
136909    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
136910    +
136911    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
136912    +
136913    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
136914    +
136915    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
136916    +
136917    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
136918    +
136919    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
136920    +
136921    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
136922    +
136923    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
136924    +
136925    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
136926    +
136927    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
136928    +
136929    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
136930    +
136931    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
136932    +
136933    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
136934    +
136935    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
136936    +
136937    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
136938    +
136939    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
136940    +
136941    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
136942    +
136943    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
136944    +
136945    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
136946    +
136947    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
136948    +
136949    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
136950    +
136951    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
136952    +
136953    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
136954    +
136955    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
136956    +
136957    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
136958    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
136959    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
136960    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
136961    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
136962    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136963    +end;
MPRINT(EM_DIAGRAM):   end;
136964    +else do;
MPRINT(EM_DIAGRAM):   else do;
136965    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
136966    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
136967    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
136968    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
136969    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
136970    +   end;
MPRINT(EM_DIAGRAM):   end;
136971    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
136972    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
136973    +   end;
MPRINT(EM_DIAGRAM):   end;
136974    +   else do;
MPRINT(EM_DIAGRAM):   else do;
136975    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
136976    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
136977    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136978    +   end;
MPRINT(EM_DIAGRAM):   end;
136979    +end;
MPRINT(EM_DIAGRAM):   end;
136980    +
136981    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
136982    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
136983    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
136984    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
136985    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
136986    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136987    +end;
MPRINT(EM_DIAGRAM):   end;
136988    +else do;
MPRINT(EM_DIAGRAM):   else do;
136989    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
136990    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
136991    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
136992    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
136993    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
136994    +   end;
MPRINT(EM_DIAGRAM):   end;
136995    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
136996    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
136997    +   end;
MPRINT(EM_DIAGRAM):   end;
136998    +   else do;
MPRINT(EM_DIAGRAM):   else do;
136999    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
137000    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137001    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137002    +   end;
MPRINT(EM_DIAGRAM):   end;
137003    +end;
MPRINT(EM_DIAGRAM):   end;
137004    +
137005    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
137006    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
137007    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
137008    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
137009    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137010    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137011    +end;
MPRINT(EM_DIAGRAM):   end;
137012    +else do;
MPRINT(EM_DIAGRAM):   else do;
137013    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
137014    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
137015    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137016    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
137017    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
137018    +   end;
MPRINT(EM_DIAGRAM):   end;
137019    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
137020    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
137021    +   end;
MPRINT(EM_DIAGRAM):   end;
137022    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137023    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
137024    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137025    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137026    +   end;
MPRINT(EM_DIAGRAM):   end;
137027    +end;
MPRINT(EM_DIAGRAM):   end;
137028    +
137029    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
137030    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
137031    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
137032    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
137033    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137034    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137035    +end;
MPRINT(EM_DIAGRAM):   end;
137036    +else do;
MPRINT(EM_DIAGRAM):   else do;
137037    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
137038    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
137039    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137040    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
137041    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
137042    +   end;
MPRINT(EM_DIAGRAM):   end;
137043    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
137044    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
137045    +   end;
MPRINT(EM_DIAGRAM):   end;
137046    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137047    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
137048    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137049    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137050    +   end;
MPRINT(EM_DIAGRAM):   end;
137051    +end;
MPRINT(EM_DIAGRAM):   end;
137052    +
137053    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
137054    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
137055    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
137056    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
137057    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137058    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137059    +end;
MPRINT(EM_DIAGRAM):   end;
137060    +else do;
MPRINT(EM_DIAGRAM):   else do;
137061    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
137062    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
137063    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137064    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
137065    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
137066    +   end;
MPRINT(EM_DIAGRAM):   end;
137067    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
137068    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
137069    +   end;
MPRINT(EM_DIAGRAM):   end;
137070    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137071    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
137072    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137073    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137074    +   end;
MPRINT(EM_DIAGRAM):   end;
137075    +end;
MPRINT(EM_DIAGRAM):   end;
137076    +
137077    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
137078    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
137079    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
137080    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
137081    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137082    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137083    +end;
MPRINT(EM_DIAGRAM):   end;
137084    +else do;
MPRINT(EM_DIAGRAM):   else do;
137085    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
137086    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
137087    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137088    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
137089    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
137090    +   end;
MPRINT(EM_DIAGRAM):   end;
137091    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
137092    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
137093    +   end;
MPRINT(EM_DIAGRAM):   end;
137094    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137095    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
137096    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137097    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137098    +   end;
MPRINT(EM_DIAGRAM):   end;
137099    +end;
MPRINT(EM_DIAGRAM):   end;
137100    +
137101    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
137102    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
137103    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
137104    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
137105    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137106    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137107    +end;
MPRINT(EM_DIAGRAM):   end;
137108    +else do;
MPRINT(EM_DIAGRAM):   else do;
137109    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
137110    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
137111    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137112    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
137113    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
137114    +   end;
MPRINT(EM_DIAGRAM):   end;
137115    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
137116    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
137117    +   end;
MPRINT(EM_DIAGRAM):   end;
137118    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137119    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
137120    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137121    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137122    +   end;
MPRINT(EM_DIAGRAM):   end;
137123    +end;
MPRINT(EM_DIAGRAM):   end;
137124    +
137125    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
137126    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
137127    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
137128    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
137129    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
137130    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
137131    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
137132    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
137133    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
137134    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
137135    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
137136    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
137137    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137138    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137139    +end;
MPRINT(EM_DIAGRAM):   end;
137140    +else do;
MPRINT(EM_DIAGRAM):   else do;
137141    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
137142    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
137143    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137144    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
137145    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
137146    +   end;
MPRINT(EM_DIAGRAM):   end;
137147    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
137148    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
137149    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
137150    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
137151    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
137152    +   end;
MPRINT(EM_DIAGRAM):   end;
137153    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
137154    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
137155    +   end;
MPRINT(EM_DIAGRAM):   end;
137156    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
137157    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
137158    +   end;
MPRINT(EM_DIAGRAM):   end;
137159    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
137160    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
137161    +   end;
MPRINT(EM_DIAGRAM):   end;
137162    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137163    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
137164    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
137165    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
137166    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
137167    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137168    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137169    +   end;
MPRINT(EM_DIAGRAM):   end;
137170    +end;
MPRINT(EM_DIAGRAM):   end;
137171    +
137172    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
137173    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
137174    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
137175    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
137176    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
137177    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
137178    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
137179    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
137180    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
137181    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
137182    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
137183    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
137184    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
137185    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137186    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137187    +end;
MPRINT(EM_DIAGRAM):   end;
137188    +else do;
MPRINT(EM_DIAGRAM):   else do;
137189    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
137190    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
137191    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137192    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
137193    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
137194    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
137195    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
137196    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
137197    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
137198    +         end;
MPRINT(EM_DIAGRAM):   end;
137199    +         else do;
MPRINT(EM_DIAGRAM):   else do;
137200    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
137201    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
137202    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
137203    +            end;
MPRINT(EM_DIAGRAM):   end;
137204    +         end;
MPRINT(EM_DIAGRAM):   end;
137205    +      end;
MPRINT(EM_DIAGRAM):   end;
137206    +      else do;
MPRINT(EM_DIAGRAM):   else do;
137207    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
137208    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
137209    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
137210    +         end;
MPRINT(EM_DIAGRAM):   end;
137211    +      end;
MPRINT(EM_DIAGRAM):   end;
137212    +   end;
MPRINT(EM_DIAGRAM):   end;
137213    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137214    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
137215    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
137216    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
137217    +      end;
MPRINT(EM_DIAGRAM):   end;
137218    +      else do;
MPRINT(EM_DIAGRAM):   else do;
137219    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
137220    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
137221    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
137222    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
137223    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
137224    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
137225    +         end;
MPRINT(EM_DIAGRAM):   end;
137226    +      end;
MPRINT(EM_DIAGRAM):   end;
137227    +   end;
MPRINT(EM_DIAGRAM):   end;
137228    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
137229    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
137230    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
137231    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
137232    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
137233    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137234    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137235    +   end;
MPRINT(EM_DIAGRAM):   end;
137236    +end;
MPRINT(EM_DIAGRAM):   end;
137237    +
137238    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137239    +*** Checking missing input Interval
137240    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
137241    +
137242    +IF NMISS(
137243    +   AcceptedCmpTotal ,
137244    +   Age ,
137245    +   Frq ,
137246    +   Income ,
137247    +   Kidhome ,
137248    +   MntFishProducts ,
137249    +   MntFruits ,
137250    +   MntGoldProds ,
137251    +   MntSweetProducts ,
137252    +   MonthsAsCustomer ,
137253    +   NumDealsPurchases ,
137254    +   NumWebVisitsMonth ,
137255    +   RFMstat ,
137256    +   RMntFrq ,
137257    +   Recency ,
137258    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
137259    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
137260    +
137261    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137262    +END;
MPRINT(EM_DIAGRAM):   END;
137263    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137264    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
137265    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137266    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
137267    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
137268    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
137269    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
137270    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
137271    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
137272    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
137273    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
137274    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
137275    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
137276    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
137277    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
137278    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
137279    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
137280    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
137281    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
137282    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
137283    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
137284    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
137285    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
137286    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
137287    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
137288    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
137289    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
137290    +END;
MPRINT(EM_DIAGRAM):   END;
137291    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
137292    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
137293    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
137294    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
137295    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
137296    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
137297    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
137298    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
137299    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
137300    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
137301    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
137302    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
137303    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
137304    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
137305    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
137306    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
137307    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
137308    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
137309    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
137310    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
137311    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
137312    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
137313    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
137314    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
137315    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
137316    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
137317    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
137318    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
137319    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
137320    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
137321    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
137322    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
137323    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
137324    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
137325    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
137326    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
137327    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
137328    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
137329    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
137330    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
137331    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
137332    +END;
MPRINT(EM_DIAGRAM):   END;
137333    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137334    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
137335    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137336    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137337    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
137338    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137339    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137340    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
137341    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137342    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
137343    +   H11  =    -0.61879380889194 * S_AcceptedCmpTotal  +    -0.09795242603477 *
137344    +        S_Age  +     0.36103250822255 * S_Frq  +     0.08899052794394 *
137345    +        S_Income  +     0.25564250606874 * S_Kidhome
137346    +          +    -0.02786629817134 * S_MntFishProducts
137347    +          +     0.13529614728112 * S_MntFruits  +     0.19622442891821 *
137348    +        S_MntGoldProds  +     0.14107929478218 * S_MntSweetProducts
137349    +          +    -0.29199173107007 * S_MonthsAsCustomer
137350    +          +    -0.59759788962473 * S_NumDealsPurchases
137351    +          +     -0.3788422274482 * S_NumWebVisitsMonth
137352    +          +    -0.06743318112874 * S_RFMstat  +      0.2833264895355 *
137353    +        S_RMntFrq  +     0.70854972350771 * S_Recency
137354    +          +     0.11936327488967 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.61879380889194 * S_AcceptedCmpTotal + -0.09795242603477 * S_Age 
+ 0.36103250822255 * S_Frq + 0.08899052794394 * S_Income + 0.25564250606874 * S_Kidhome + 
-0.02786629817134 * S_MntFishProducts + 0.13529614728112 * S_MntFruits + 0.19622442891821 * 
S_MntGoldProds + 0.14107929478218 * S_MntSweetProducts + -0.29199173107007 * 
S_MonthsAsCustomer + -0.59759788962473 * S_NumDealsPurchases + -0.3788422274482 * 
S_NumWebVisitsMonth + -0.06743318112874 * S_RFMstat + 0.2833264895355 * S_RMntFrq + 
0.70854972350771 * S_Recency + 0.11936327488967 * S_Teenhome ;
137355    +   H12  =    -0.18766983828727 * S_AcceptedCmpTotal  +       0.517042669033 *
137356    +        S_Age  +     1.02262972068559 * S_Frq  +     0.38007459198406 *
137357    +        S_Income  +     0.07328887474153 * S_Kidhome
137358    +          +    -0.23284570213322 * S_MntFishProducts
137359    +          +     0.02838864374624 * S_MntFruits  +    -0.07574618602845 *
137360    +        S_MntGoldProds  +    -0.41131707239504 * S_MntSweetProducts
137361    +          +     0.29669594858185 * S_MonthsAsCustomer
137362    +          +    -0.51220833966596 * S_NumDealsPurchases
137363    +          +    -0.72293271444385 * S_NumWebVisitsMonth
137364    +          +    -0.20562458645044 * S_RFMstat  +    -0.52495075768839 *
137365    +        S_RMntFrq  +      1.0795232419354 * S_Recency
137366    +          +    -0.18997953891579 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18766983828727 * S_AcceptedCmpTotal + 0.517042669033 * S_Age + 
1.02262972068559 * S_Frq + 0.38007459198406 * S_Income + 0.07328887474153 * S_Kidhome + 
-0.23284570213322 * S_MntFishProducts + 0.02838864374624 * S_MntFruits + -0.07574618602845 * 
S_MntGoldProds + -0.41131707239504 * S_MntSweetProducts + 0.29669594858185 * 
S_MonthsAsCustomer + -0.51220833966596 * S_NumDealsPurchases + -0.72293271444385 * 
S_NumWebVisitsMonth + -0.20562458645044 * S_RFMstat + -0.52495075768839 * S_RMntFrq + 
1.0795232419354 * S_Recency + -0.18997953891579 * S_Teenhome ;
137367    +   H13  =    -0.49159501579895 * S_AcceptedCmpTotal  +    -0.16293971978781 *
137368    +        S_Age  +    -0.02977525702894 * S_Frq  +    -0.78728568889664 *
137369    +        S_Income  +    -0.68209910558389 * S_Kidhome
137370    +          +     0.23366174254474 * S_MntFishProducts
137371    +          +    -0.08764688950673 * S_MntFruits  +    -0.38895649975347 *
137372    +        S_MntGoldProds  +     0.02270546080284 * S_MntSweetProducts
137373    +          +    -0.05759532204753 * S_MonthsAsCustomer
137374    +          +    -0.30170163047261 * S_NumDealsPurchases
137375    +          +    -0.57711437834603 * S_NumWebVisitsMonth
137376    +          +    -0.09851659878757 * S_RFMstat  +    -0.20102310575519 *
137377    +        S_RMntFrq  +     0.80994896921796 * S_Recency
137378    +          +     0.32766576826101 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.49159501579895 * S_AcceptedCmpTotal + -0.16293971978781 * S_Age 
+ -0.02977525702894 * S_Frq + -0.78728568889664 * S_Income + -0.68209910558389 * S_Kidhome + 
0.23366174254474 * S_MntFishProducts + -0.08764688950673 * S_MntFruits + -0.38895649975347 * 
S_MntGoldProds + 0.02270546080284 * S_MntSweetProducts + -0.05759532204753 * 
S_MonthsAsCustomer + -0.30170163047261 * S_NumDealsPurchases + -0.57711437834603 * 
S_NumWebVisitsMonth + -0.09851659878757 * S_RFMstat + -0.20102310575519 * S_RMntFrq + 
0.80994896921796 * S_Recency + 0.32766576826101 * S_Teenhome ;
137379    +   H14  =    -0.11122937165995 * S_AcceptedCmpTotal  +     0.06859829254058 *
137380    +        S_Age  +    -0.60966071706708 * S_Frq  +    -1.00949681880427 *
137381    +        S_Income  +     0.67855138873039 * S_Kidhome
137382    +          +    -0.05297743313476 * S_MntFishProducts
137383    +          +     0.21613302257797 * S_MntFruits  +     0.03843790921347 *
137384    +        S_MntGoldProds  +     0.25543771093558 * S_MntSweetProducts
137385    +          +    -0.15817861274553 * S_MonthsAsCustomer
137386    +          +     0.25133066233725 * S_NumDealsPurchases
137387    +          +     0.08802636187267 * S_NumWebVisitsMonth
137388    +          +    -0.04637957487976 * S_RFMstat  +    -0.31656429052936 *
137389    +        S_RMntFrq  +      0.7228272496527 * S_Recency
137390    +          +     0.58629319995218 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11122937165995 * S_AcceptedCmpTotal + 0.06859829254058 * S_Age 
+ -0.60966071706708 * S_Frq + -1.00949681880427 * S_Income + 0.67855138873039 * S_Kidhome + 
-0.05297743313476 * S_MntFishProducts + 0.21613302257797 * S_MntFruits + 0.03843790921347 * 
S_MntGoldProds + 0.25543771093558 * S_MntSweetProducts + -0.15817861274553 * 
S_MonthsAsCustomer + 0.25133066233725 * S_NumDealsPurchases + 0.08802636187267 * 
S_NumWebVisitsMonth + -0.04637957487976 * S_RFMstat + -0.31656429052936 * S_RMntFrq + 
0.7228272496527 * S_Recency + 0.58629319995218 * S_Teenhome ;
137391    +   H11  = H11  +     0.23190135069025 * AcceptedCmp10
137392    +          +     0.04686213078143 * AcceptedCmp20  +     0.17662818955575 *
137393    +        AcceptedCmp30  +     0.03498741067378 * AcceptedCmp40
137394    +          +     0.61042747626768 * AcceptedCmp50  +    -0.12810871081838 *
137395    +        Complain0  +     0.03047400476944 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23190135069025 * AcceptedCmp10 + 0.04686213078143 * 
AcceptedCmp20 + 0.17662818955575 * AcceptedCmp30 + 0.03498741067378 * AcceptedCmp40 + 
0.61042747626768 * AcceptedCmp50 + -0.12810871081838 * Complain0 + 0.03047400476944 * 
HigherEducationBinary0 ;
137396    +   H12  = H12  +     0.53873807658752 * AcceptedCmp10
137397    +          +     0.29840055428915 * AcceptedCmp20  +     0.52740574468702 *
137398    +        AcceptedCmp30  +     0.27242279016627 * AcceptedCmp40
137399    +          +     0.07126269343217 * AcceptedCmp50  +    -0.14631570192286 *
137400    +        Complain0  +     0.16629352334811 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.53873807658752 * AcceptedCmp10 + 0.29840055428915 * 
AcceptedCmp20 + 0.52740574468702 * AcceptedCmp30 + 0.27242279016627 * AcceptedCmp40 + 
0.07126269343217 * AcceptedCmp50 + -0.14631570192286 * Complain0 + 0.16629352334811 * 
HigherEducationBinary0 ;
137401    +   H13  = H13  +     0.09118941740461 * AcceptedCmp10
137402    +          +     0.04178457860358 * AcceptedCmp20  +     0.48487479920901 *
137403    +        AcceptedCmp30  +    -0.80910928087974 * AcceptedCmp40
137404    +          +      0.4667831985075 * AcceptedCmp50  +    -0.29601289494349 *
137405    +        Complain0  +     0.10690006738431 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09118941740461 * AcceptedCmp10 + 0.04178457860358 * 
AcceptedCmp20 + 0.48487479920901 * AcceptedCmp30 + -0.80910928087974 * AcceptedCmp40 + 
0.4667831985075 * AcceptedCmp50 + -0.29601289494349 * Complain0 + 0.10690006738431 * 
HigherEducationBinary0 ;
137406    +   H14  = H14  +     0.21382858049752 * AcceptedCmp10
137407    +          +     0.12652392800261 * AcceptedCmp20  +     0.30403608200617 *
137408    +        AcceptedCmp30  +     0.51966382166521 * AcceptedCmp40
137409    +          +    -0.14518145187533 * AcceptedCmp50  +     0.27045295957801 *
137410    +        Complain0  +    -0.49307163723406 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.21382858049752 * AcceptedCmp10 + 0.12652392800261 * 
AcceptedCmp20 + 0.30403608200617 * AcceptedCmp30 + 0.51966382166521 * AcceptedCmp40 + 
-0.14518145187533 * AcceptedCmp50 + 0.27045295957801 * Complain0 + -0.49307163723406 * 
HigherEducationBinary0 ;
137411    +   H11  = H11  +    -0.15292649085097 * Education2n_Cycle
137412    +          +     0.00016605452926 * EducationBasic  +    -0.04208965271063 *
137413    +        EducationGraduation  +    -0.05433922630608 * EducationMaster
137414    +          +      0.0528075343138 * Marital_StatusDivorced
137415    +          +    -0.08269844855231 * Marital_StatusMarried
137416    +          +     0.43411839786169 * Marital_StatusSingle
137417    +          +     0.38324605489754 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15292649085097 * Education2n_Cycle + 0.00016605452926 * 
EducationBasic + -0.04208965271063 * EducationGraduation + -0.05433922630608 * EducationMaster 
+ 0.0528075343138 * Marital_StatusDivorced + -0.08269844855231 * Marital_StatusMarried + 
0.43411839786169 * Marital_StatusSingle + 0.38324605489754 * Marital_StatusTogether ;
137418    +   H12  = H12  +      0.3082578019648 * Education2n_Cycle
137419    +          +    -0.01380127751108 * EducationBasic  +    -0.11076736066311 *
137420    +        EducationGraduation  +     -0.1586948328241 * EducationMaster
137421    +          +    -0.12842912869907 * Marital_StatusDivorced
137422    +          +     0.11838814754642 * Marital_StatusMarried
137423    +          +     0.01184261900927 * Marital_StatusSingle
137424    +          +     0.14066273070318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.3082578019648 * Education2n_Cycle + -0.01380127751108 * 
EducationBasic + -0.11076736066311 * EducationGraduation + -0.1586948328241 * EducationMaster 
+ -0.12842912869907 * Marital_StatusDivorced + 0.11838814754642 * Marital_StatusMarried + 
0.01184261900927 * Marital_StatusSingle + 0.14066273070318 * Marital_StatusTogether ;
137425    +   H13  = H13  +     0.02861254390946 * Education2n_Cycle
137426    +          +      0.4349807830691 * EducationBasic  +    -0.31346964692246 *
137427    +        EducationGraduation  +      0.0620488761517 * EducationMaster
137428    +          +    -0.22110722201709 * Marital_StatusDivorced
137429    +          +      0.1355339029843 * Marital_StatusMarried
137430    +          +    -0.33157273596382 * Marital_StatusSingle
137431    +          +    -0.19725820483372 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02861254390946 * Education2n_Cycle + 0.4349807830691 * 
EducationBasic + -0.31346964692246 * EducationGraduation + 0.0620488761517 * EducationMaster + 
-0.22110722201709 * Marital_StatusDivorced + 0.1355339029843 * Marital_StatusMarried + 
-0.33157273596382 * Marital_StatusSingle + -0.19725820483372 * Marital_StatusTogether ;
137432    +   H14  = H14  +    -0.15196350137644 * Education2n_Cycle
137433    +          +     0.11143610044897 * EducationBasic  +    -0.23356442851658 *
137434    +        EducationGraduation  +     0.26881272673711 * EducationMaster
137435    +          +    -0.21663247467797 * Marital_StatusDivorced
137436    +          +     1.11468603898508 * Marital_StatusMarried
137437    +          +    -0.84252388146943 * Marital_StatusSingle
137438    +          +     0.91707021954171 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.15196350137644 * Education2n_Cycle + 0.11143610044897 * 
EducationBasic + -0.23356442851658 * EducationGraduation + 0.26881272673711 * EducationMaster 
+ -0.21663247467797 * Marital_StatusDivorced + 1.11468603898508 * Marital_StatusMarried + 
-0.84252388146943 * Marital_StatusSingle + 0.91707021954171 * Marital_StatusTogether ;
137439    +   H11  =     0.69752617990443 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.69752617990443 + H11 ;
137440    +   H12  =     0.88932226025287 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88932226025287 + H12 ;
137441    +   H13  =    -0.23351093325425 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.23351093325425 + H13 ;
137442    +   H14  =      1.5565991209041 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.5565991209041 + H14 ;
137443    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
137444    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
137445    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
137446    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
137447    +END;
MPRINT(EM_DIAGRAM):   END;
137448    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
137449    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
137450    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
137451    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
137452    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
137453    +END;
MPRINT(EM_DIAGRAM):   END;
137454    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137455    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
137456    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137457    +
137458    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
137459    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
137460    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
137461    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
137462    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
137463    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137464    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
137465    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
137466    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
137467    +end;
MPRINT(EM_DIAGRAM):   end;
137468    +else do;
MPRINT(EM_DIAGRAM):   else do;
137469    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
137470    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
137471    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
137472    +   end;
MPRINT(EM_DIAGRAM):   end;
137473    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
137474    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
137475    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
137476    +   end;
MPRINT(EM_DIAGRAM):   end;
137477    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137478    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
137479    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
137480    +   end;
MPRINT(EM_DIAGRAM):   end;
137481    +end;
MPRINT(EM_DIAGRAM):   end;
137482    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
137483    +   P_DepVar1  =    -1.10683009838286 * H11  +    -1.85294488833715 * H12
137484    +          +    -2.73624761150933 * H13  +    -2.51103548718704 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.10683009838286 * H11 + -1.85294488833715 * H12 + 
-2.73624761150933 * H13 + -2.51103548718704 * H14 ;
137485    +   P_DepVar1  =    -0.86309949021709 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.86309949021709 + P_DepVar1 ;
137486    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
137487    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
137488    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
137489    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
137490    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
137491    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
137492    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
137493    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
137494    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
137495    +END;
MPRINT(EM_DIAGRAM):   END;
137496    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
137497    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
137498    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
137499    +END;
MPRINT(EM_DIAGRAM):   END;
137500    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
137501    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
137502    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
137503    +END;
MPRINT(EM_DIAGRAM):   END;
137504    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
137505    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
137506    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
137507    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
137508    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
137509    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
137510    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
137511    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137512    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
137513    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137514    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
137515    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
137516    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
137517    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
137518    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
137519    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
137520    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
137521    +END;
MPRINT(EM_DIAGRAM):   END;
137522    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
137523    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
137524    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
137525    +drop
137526    +H11
137527    +H12
137528    +H13
137529    +H14
137530    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
137531    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
137532     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL39_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
137533     quit;
137534     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
137535     filename emflow
137535   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural39: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
137536     *------------------------------------------------------------*;
137537     * Neural39: Scoring VALIDATE data;
137538     *------------------------------------------------------------*;
137539     data EMWS8.Neural39_VALIDATE
137540     / view=EMWS8.Neural39_VALIDATE
137541     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_VALIDATE / view=EMWS8.Neural39_VALIDATE ;
137542     set EMWS8.Meta3_VALIDATE
137543     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
137544     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas.
137545    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
137546    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
137547    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
137548    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
137549    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
137550    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
137551    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
137552    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
137553    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
137554    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
137555    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
137556    +LENGTH _WARN_ $4
137557    +      F_DepVar  $ 12
137558    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
137559    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
137560    +
137561    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
137562    +
137563    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
137564    +
137565    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
137566    +
137567    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
137568    +
137569    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
137570    +
137571    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
137572    +
137573    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
137574    +
137575    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
137576    +
137577    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
137578    +
137579    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
137580    +
137581    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
137582    +
137583    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
137584    +
137585    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
137586    +
137587    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
137588    +
137589    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
137590    +
137591    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
137592    +
137593    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
137594    +
137595    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
137596    +
137597    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
137598    +
137599    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
137600    +
137601    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
137602    +
137603    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
137604    +
137605    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
137606    +
137607    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
137608    +
137609    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
137610    +
137611    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
137612    +
137613    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
137614    +
137615    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
137616    +
137617    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
137618    +
137619    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
137620    +
137621    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
137622    +
137623    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
137624    +
137625    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
137626    +
137627    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
137628    +
137629    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
137630    +
137631    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
137632    +
137633    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
137634    +
137635    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
137636    +
137637    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
137638    +
137639    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
137640    +
137641    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
137642    +
137643    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
137644    +
137645    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
137646    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
137647    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
137648    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
137649    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137650    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137651    +end;
MPRINT(EM_DIAGRAM):   end;
137652    +else do;
MPRINT(EM_DIAGRAM):   else do;
137653    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
137654    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
137655    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137656    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
137657    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
137658    +   end;
MPRINT(EM_DIAGRAM):   end;
137659    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
137660    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
137661    +   end;
MPRINT(EM_DIAGRAM):   end;
137662    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137663    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
137664    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137665    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137666    +   end;
MPRINT(EM_DIAGRAM):   end;
137667    +end;
MPRINT(EM_DIAGRAM):   end;
137668    +
137669    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
137670    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
137671    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
137672    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
137673    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137674    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137675    +end;
MPRINT(EM_DIAGRAM):   end;
137676    +else do;
MPRINT(EM_DIAGRAM):   else do;
137677    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
137678    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
137679    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137680    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
137681    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
137682    +   end;
MPRINT(EM_DIAGRAM):   end;
137683    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
137684    +      AcceptedCmp20 = -1;
The SAS System

MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
137685    +   end;
MPRINT(EM_DIAGRAM):   end;
137686    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137687    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
137688    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137689    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137690    +   end;
MPRINT(EM_DIAGRAM):   end;
137691    +end;
MPRINT(EM_DIAGRAM):   end;
137692    +
137693    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
137694    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
137695    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
137696    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
137697    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137698    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137699    +end;
MPRINT(EM_DIAGRAM):   end;
137700    +else do;
MPRINT(EM_DIAGRAM):   else do;
137701    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
137702    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
137703    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137704    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
137705    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
137706    +   end;
MPRINT(EM_DIAGRAM):   end;
137707    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
137708    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
137709    +   end;
MPRINT(EM_DIAGRAM):   end;
137710    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137711    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
137712    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137713    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137714    +   end;
MPRINT(EM_DIAGRAM):   end;
137715    +end;
MPRINT(EM_DIAGRAM):   end;
137716    +
137717    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
137718    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
137719    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
137720    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
137721    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137722    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137723    +end;
MPRINT(EM_DIAGRAM):   end;
137724    +else do;
MPRINT(EM_DIAGRAM):   else do;
137725    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
137726    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
137727    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137728    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
137729    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
137730    +   end;
MPRINT(EM_DIAGRAM):   end;
137731    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
137732    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
137733    +   end;
MPRINT(EM_DIAGRAM):   end;
137734    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137735    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
137736    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137737    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137738    +   end;
MPRINT(EM_DIAGRAM):   end;
137739    +end;
MPRINT(EM_DIAGRAM):   end;
137740    +
137741    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
137742    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
137743    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
137744    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
137745    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137746    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137747    +end;
MPRINT(EM_DIAGRAM):   end;
137748    +else do;
MPRINT(EM_DIAGRAM):   else do;
137749    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
137750    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
137751    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137752    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
137753    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
137754    +   end;
MPRINT(EM_DIAGRAM):   end;
137755    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
137756    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
137757    +   end;
MPRINT(EM_DIAGRAM):   end;
137758    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137759    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
137760    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137761    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137762    +   end;
MPRINT(EM_DIAGRAM):   end;
137763    +end;
MPRINT(EM_DIAGRAM):   end;
137764    +
137765    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
137766    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
137767    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
137768    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
137769    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137770    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137771    +end;
MPRINT(EM_DIAGRAM):   end;
137772    +else do;
MPRINT(EM_DIAGRAM):   else do;
137773    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
137774    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
137775    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137776    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
137777    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
137778    +   end;
MPRINT(EM_DIAGRAM):   end;
137779    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
137780    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
137781    +   end;
MPRINT(EM_DIAGRAM):   end;
137782    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137783    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
137784    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137785    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137786    +   end;
MPRINT(EM_DIAGRAM):   end;
137787    +end;
MPRINT(EM_DIAGRAM):   end;
137788    +
137789    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
137790    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
137791    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
137792    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
137793    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137794    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137795    +end;
MPRINT(EM_DIAGRAM):   end;
137796    +else do;
MPRINT(EM_DIAGRAM):   else do;
137797    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
137798    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
137799    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137800    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
137801    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
137802    +   end;
MPRINT(EM_DIAGRAM):   end;
137803    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
137804    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
137805    +   end;
MPRINT(EM_DIAGRAM):   end;
137806    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137807    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
137808    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137809    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137810    +   end;
MPRINT(EM_DIAGRAM):   end;
137811    +end;
MPRINT(EM_DIAGRAM):   end;
137812    +
137813    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
137814    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
137815    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
137816    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
137817    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
137818    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
137819    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
137820    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
137821    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
137822    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
137823    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
137824    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
137825    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137826    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137827    +end;
MPRINT(EM_DIAGRAM):   end;
137828    +else do;
MPRINT(EM_DIAGRAM):   else do;
137829    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
137830    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
137831    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137832    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
137833    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
137834    +   end;
MPRINT(EM_DIAGRAM):   end;
137835    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
137836    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
137837    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
137838    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
137839    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
137840    +   end;
MPRINT(EM_DIAGRAM):   end;
137841    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
137842    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
137843    +   end;
MPRINT(EM_DIAGRAM):   end;
137844    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
137845    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
137846    +   end;
MPRINT(EM_DIAGRAM):   end;
137847    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
137848    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
137849    +   end;
MPRINT(EM_DIAGRAM):   end;
137850    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137851    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
137852    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
137853    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
137854    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
137855    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137856    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137857    +   end;
MPRINT(EM_DIAGRAM):   end;
137858    +end;
MPRINT(EM_DIAGRAM):   end;
137859    +
137860    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
137861    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
137862    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
137863    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
137864    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
137865    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
137866    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
137867    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
137868    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
137869    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
137870    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
137871    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
137872    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
137873    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
137874    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137875    +end;
MPRINT(EM_DIAGRAM):   end;
137876    +else do;
MPRINT(EM_DIAGRAM):   else do;
137877    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
137878    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
137879    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
137880    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
137881    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
137882    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
137883    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
137884    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
137885    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
137886    +         end;
MPRINT(EM_DIAGRAM):   end;
137887    +         else do;
MPRINT(EM_DIAGRAM):   else do;
137888    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
137889    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
137890    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
137891    +            end;
MPRINT(EM_DIAGRAM):   end;
137892    +         end;
MPRINT(EM_DIAGRAM):   end;
137893    +      end;
MPRINT(EM_DIAGRAM):   end;
137894    +      else do;
MPRINT(EM_DIAGRAM):   else do;
137895    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
137896    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
137897    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
137898    +         end;
MPRINT(EM_DIAGRAM):   end;
137899    +      end;
MPRINT(EM_DIAGRAM):   end;
137900    +   end;
MPRINT(EM_DIAGRAM):   end;
137901    +   else do;
MPRINT(EM_DIAGRAM):   else do;
137902    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
137903    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
137904    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
137905    +      end;
MPRINT(EM_DIAGRAM):   end;
137906    +      else do;
MPRINT(EM_DIAGRAM):   else do;
137907    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
137908    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
137909    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
137910    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
137911    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
137912    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
137913    +         end;
MPRINT(EM_DIAGRAM):   end;
137914    +      end;
MPRINT(EM_DIAGRAM):   end;
137915    +   end;
MPRINT(EM_DIAGRAM):   end;
137916    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
137917    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
137918    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
137919    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
137920    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
137921    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
137922    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137923    +   end;
MPRINT(EM_DIAGRAM):   end;
137924    +end;
MPRINT(EM_DIAGRAM):   end;
137925    +
137926    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137927    +*** Checking missing input Interval
137928    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
137929    +
137930    +IF NMISS(
137931    +   AcceptedCmpTotal ,
137932    +   Age ,
137933    +   Frq ,
137934    +   Income ,
137935    +   Kidhome ,
137936    +   MntFishProducts ,
137937    +   MntFruits ,
137938    +   MntGoldProds ,
137939    +   MntSweetProducts ,
137940    +   MonthsAsCustomer ,
137941    +   NumDealsPurchases ,
137942    +   NumWebVisitsMonth ,
137943    +   RFMstat ,
137944    +   RMntFrq ,
137945    +   Recency ,
137946    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
137947    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
137948    +
137949    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
137950    +END;
MPRINT(EM_DIAGRAM):   END;
137951    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137952    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
137953    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
137954    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
137955    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
137956    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
137957    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
137958    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
137959    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
137960    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
137961    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
137962    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
137963    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
137964    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
137965    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
137966    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
137967    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
137968    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
137969    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
137970    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
137971    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
137972    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
137973    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
137974    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
137975    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
137976    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
137977    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
137978    +END;
MPRINT(EM_DIAGRAM):   END;
137979    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
137980    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
137981    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
137982    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
137983    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
137984    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
137985    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
137986    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
137987    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
137988    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
137989    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
137990    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
137991    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
137992    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
137993    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
137994    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
137995    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
137996    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
137997    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
137998    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
137999    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
138000    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
138001    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
138002    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
138003    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
138004    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
138005    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
138006    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
138007    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
138008    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
138009    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
138010    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
138011    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
138012    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
138013    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
138014    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
138015    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
138016    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
138017    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
138018    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
138019    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
138020    +END;
MPRINT(EM_DIAGRAM):   END;
138021    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
138022    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
138023    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
138024    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
138025    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
138026    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
138027    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
138028    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
138029    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
138030    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
138031    +   H11  =    -0.61879380889194 * S_AcceptedCmpTotal  +    -0.09795242603477 *
138032    +        S_Age  +     0.36103250822255 * S_Frq  +     0.08899052794394 *
138033    +        S_Income  +     0.25564250606874 * S_Kidhome
138034    +          +    -0.02786629817134 * S_MntFishProducts
138035    +          +     0.13529614728112 * S_MntFruits  +     0.19622442891821 *
138036    +        S_MntGoldProds  +     0.14107929478218 * S_MntSweetProducts
138037    +          +    -0.29199173107007 * S_MonthsAsCustomer
138038    +          +    -0.59759788962473 * S_NumDealsPurchases
138039    +          +     -0.3788422274482 * S_NumWebVisitsMonth
138040    +          +    -0.06743318112874 * S_RFMstat  +      0.2833264895355 *
138041    +        S_RMntFrq  +     0.70854972350771 * S_Recency
138042    +          +     0.11936327488967 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.61879380889194 * S_AcceptedCmpTotal + -0.09795242603477 * S_Age 
+ 0.36103250822255 * S_Frq + 0.08899052794394 * S_Income + 0.25564250606874 * S_Kidhome + 
-0.02786629817134 * S_MntFishProducts + 0.13529614728112 * S_MntFruits + 0.19622442891821 * 
S_MntGoldProds + 0.14107929478218 * S_MntSweetProducts + -0.29199173107007 * 
S_MonthsAsCustomer + -0.59759788962473 * S_NumDealsPurchases + -0.3788422274482 * 
S_NumWebVisitsMonth + -0.06743318112874 * S_RFMstat + 0.2833264895355 * S_RMntFrq + 
0.70854972350771 * S_Recency + 0.11936327488967 * S_Teenhome ;
138043    +   H12  =    -0.18766983828727 * S_AcceptedCmpTotal  +       0.517042669033 *
138044    +        S_Age  +     1.02262972068559 * S_Frq  +     0.38007459198406 *
138045    +        S_Income  +     0.07328887474153 * S_Kidhome
138046    +          +    -0.23284570213322 * S_MntFishProducts
138047    +          +     0.02838864374624 * S_MntFruits  +    -0.07574618602845 *
138048    +        S_MntGoldProds  +    -0.41131707239504 * S_MntSweetProducts
138049    +          +     0.29669594858185 * S_MonthsAsCustomer
138050    +          +    -0.51220833966596 * S_NumDealsPurchases
138051    +          +    -0.72293271444385 * S_NumWebVisitsMonth
138052    +          +    -0.20562458645044 * S_RFMstat  +    -0.52495075768839 *
138053    +        S_RMntFrq  +      1.0795232419354 * S_Recency
138054    +          +    -0.18997953891579 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18766983828727 * S_AcceptedCmpTotal + 0.517042669033 * S_Age + 
1.02262972068559 * S_Frq + 0.38007459198406 * S_Income + 0.07328887474153 * S_Kidhome + 
-0.23284570213322 * S_MntFishProducts + 0.02838864374624 * S_MntFruits + -0.07574618602845 * 
S_MntGoldProds + -0.41131707239504 * S_MntSweetProducts + 0.29669594858185 * 
S_MonthsAsCustomer + -0.51220833966596 * S_NumDealsPurchases + -0.72293271444385 * 
S_NumWebVisitsMonth + -0.20562458645044 * S_RFMstat + -0.52495075768839 * S_RMntFrq + 
1.0795232419354 * S_Recency + -0.18997953891579 * S_Teenhome ;
138055    +   H13  =    -0.49159501579895 * S_AcceptedCmpTotal  +    -0.16293971978781 *
138056    +        S_Age  +    -0.02977525702894 * S_Frq  +    -0.78728568889664 *
138057    +        S_Income  +    -0.68209910558389 * S_Kidhome
138058    +          +     0.23366174254474 * S_MntFishProducts
138059    +          +    -0.08764688950673 * S_MntFruits  +    -0.38895649975347 *
138060    +        S_MntGoldProds  +     0.02270546080284 * S_MntSweetProducts
138061    +          +    -0.05759532204753 * S_MonthsAsCustomer
138062    +          +    -0.30170163047261 * S_NumDealsPurchases
138063    +          +    -0.57711437834603 * S_NumWebVisitsMonth
138064    +          +    -0.09851659878757 * S_RFMstat  +    -0.20102310575519 *
138065    +        S_RMntFrq  +     0.80994896921796 * S_Recency
138066    +          +     0.32766576826101 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.49159501579895 * S_AcceptedCmpTotal + -0.16293971978781 * S_Age 
+ -0.02977525702894 * S_Frq + -0.78728568889664 * S_Income + -0.68209910558389 * S_Kidhome + 
0.23366174254474 * S_MntFishProducts + -0.08764688950673 * S_MntFruits + -0.38895649975347 * 
S_MntGoldProds + 0.02270546080284 * S_MntSweetProducts + -0.05759532204753 * 
S_MonthsAsCustomer + -0.30170163047261 * S_NumDealsPurchases + -0.57711437834603 * 
S_NumWebVisitsMonth + -0.09851659878757 * S_RFMstat + -0.20102310575519 * S_RMntFrq + 
0.80994896921796 * S_Recency + 0.32766576826101 * S_Teenhome ;
138067    +   H14  =    -0.11122937165995 * S_AcceptedCmpTotal  +     0.06859829254058 *
138068    +        S_Age  +    -0.60966071706708 * S_Frq  +    -1.00949681880427 *
138069    +        S_Income  +     0.67855138873039 * S_Kidhome
138070    +          +    -0.05297743313476 * S_MntFishProducts
138071    +          +     0.21613302257797 * S_MntFruits  +     0.03843790921347 *
138072    +        S_MntGoldProds  +     0.25543771093558 * S_MntSweetProducts
138073    +          +    -0.15817861274553 * S_MonthsAsCustomer
138074    +          +     0.25133066233725 * S_NumDealsPurchases
138075    +          +     0.08802636187267 * S_NumWebVisitsMonth
138076    +          +    -0.04637957487976 * S_RFMstat  +    -0.31656429052936 *
138077    +        S_RMntFrq  +      0.7228272496527 * S_Recency
138078    +          +     0.58629319995218 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11122937165995 * S_AcceptedCmpTotal + 0.06859829254058 * S_Age 
+ -0.60966071706708 * S_Frq + -1.00949681880427 * S_Income + 0.67855138873039 * S_Kidhome + 
-0.05297743313476 * S_MntFishProducts + 0.21613302257797 * S_MntFruits + 0.03843790921347 * 
S_MntGoldProds + 0.25543771093558 * S_MntSweetProducts + -0.15817861274553 * 
S_MonthsAsCustomer + 0.25133066233725 * S_NumDealsPurchases + 0.08802636187267 * 
S_NumWebVisitsMonth + -0.04637957487976 * S_RFMstat + -0.31656429052936 * S_RMntFrq + 
0.7228272496527 * S_Recency + 0.58629319995218 * S_Teenhome ;
138079    +   H11  = H11  +     0.23190135069025 * AcceptedCmp10
138080    +          +     0.04686213078143 * AcceptedCmp20  +     0.17662818955575 *
138081    +        AcceptedCmp30  +     0.03498741067378 * AcceptedCmp40
138082    +          +     0.61042747626768 * AcceptedCmp50  +    -0.12810871081838 *
138083    +        Complain0  +     0.03047400476944 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23190135069025 * AcceptedCmp10 + 0.04686213078143 * 
AcceptedCmp20 + 0.17662818955575 * AcceptedCmp30 + 0.03498741067378 * AcceptedCmp40 + 
0.61042747626768 * AcceptedCmp50 + -0.12810871081838 * Complain0 + 0.03047400476944 * 
HigherEducationBinary0 ;
138084    +   H12  = H12  +     0.53873807658752 * AcceptedCmp10
138085    +          +     0.29840055428915 * AcceptedCmp20  +     0.52740574468702 *
138086    +        AcceptedCmp30  +     0.27242279016627 * AcceptedCmp40
138087    +          +     0.07126269343217 * AcceptedCmp50  +    -0.14631570192286 *
138088    +        Complain0  +     0.16629352334811 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.53873807658752 * AcceptedCmp10 + 0.29840055428915 * 
AcceptedCmp20 + 0.52740574468702 * AcceptedCmp30 + 0.27242279016627 * AcceptedCmp40 + 
0.07126269343217 * AcceptedCmp50 + -0.14631570192286 * Complain0 + 0.16629352334811 * 
HigherEducationBinary0 ;
138089    +   H13  = H13  +     0.09118941740461 * AcceptedCmp10
138090    +          +     0.04178457860358 * AcceptedCmp20  +     0.48487479920901 *
138091    +        AcceptedCmp30  +    -0.80910928087974 * AcceptedCmp40
138092    +          +      0.4667831985075 * AcceptedCmp50  +    -0.29601289494349 *
138093    +        Complain0  +     0.10690006738431 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09118941740461 * AcceptedCmp10 + 0.04178457860358 * 
AcceptedCmp20 + 0.48487479920901 * AcceptedCmp30 + -0.80910928087974 * AcceptedCmp40 + 
0.4667831985075 * AcceptedCmp50 + -0.29601289494349 * Complain0 + 0.10690006738431 * 
HigherEducationBinary0 ;
138094    +   H14  = H14  +     0.21382858049752 * AcceptedCmp10
138095    +          +     0.12652392800261 * AcceptedCmp20  +     0.30403608200617 *
138096    +        AcceptedCmp30  +     0.51966382166521 * AcceptedCmp40
138097    +          +    -0.14518145187533 * AcceptedCmp50  +     0.27045295957801 *
138098    +        Complain0  +    -0.49307163723406 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.21382858049752 * AcceptedCmp10 + 0.12652392800261 * 
AcceptedCmp20 + 0.30403608200617 * AcceptedCmp30 + 0.51966382166521 * AcceptedCmp40 + 
-0.14518145187533 * AcceptedCmp50 + 0.27045295957801 * Complain0 + -0.49307163723406 * 
HigherEducationBinary0 ;
138099    +   H11  = H11  +    -0.15292649085097 * Education2n_Cycle
138100    +          +     0.00016605452926 * EducationBasic  +    -0.04208965271063 *
138101    +        EducationGraduation  +    -0.05433922630608 * EducationMaster
138102    +          +      0.0528075343138 * Marital_StatusDivorced
138103    +          +    -0.08269844855231 * Marital_StatusMarried
138104    +          +     0.43411839786169 * Marital_StatusSingle
138105    +          +     0.38324605489754 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15292649085097 * Education2n_Cycle + 0.00016605452926 * 
EducationBasic + -0.04208965271063 * EducationGraduation + -0.05433922630608 * EducationMaster 
+ 0.0528075343138 * Marital_StatusDivorced + -0.08269844855231 * Marital_StatusMarried + 
0.43411839786169 * Marital_StatusSingle + 0.38324605489754 * Marital_StatusTogether ;
138106    +   H12  = H12  +      0.3082578019648 * Education2n_Cycle
138107    +          +    -0.01380127751108 * EducationBasic  +    -0.11076736066311 *
138108    +        EducationGraduation  +     -0.1586948328241 * EducationMaster
138109    +          +    -0.12842912869907 * Marital_StatusDivorced
138110    +          +     0.11838814754642 * Marital_StatusMarried
138111    +          +     0.01184261900927 * Marital_StatusSingle
138112    +          +     0.14066273070318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.3082578019648 * Education2n_Cycle + -0.01380127751108 * 
EducationBasic + -0.11076736066311 * EducationGraduation + -0.1586948328241 * EducationMaster 
+ -0.12842912869907 * Marital_StatusDivorced + 0.11838814754642 * Marital_StatusMarried + 
0.01184261900927 * Marital_StatusSingle + 0.14066273070318 * Marital_StatusTogether ;
138113    +   H13  = H13  +     0.02861254390946 * Education2n_Cycle
138114    +          +      0.4349807830691 * EducationBasic  +    -0.31346964692246 *
138115    +        EducationGraduation  +      0.0620488761517 * EducationMaster
138116    +          +    -0.22110722201709 * Marital_StatusDivorced
138117    +          +      0.1355339029843 * Marital_StatusMarried
138118    +          +    -0.33157273596382 * Marital_StatusSingle
138119    +          +    -0.19725820483372 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02861254390946 * Education2n_Cycle + 0.4349807830691 * 
EducationBasic + -0.31346964692246 * EducationGraduation + 0.0620488761517 * EducationMaster + 
-0.22110722201709 * Marital_StatusDivorced + 0.1355339029843 * Marital_StatusMarried + 
-0.33157273596382 * Marital_StatusSingle + -0.19725820483372 * Marital_StatusTogether ;
138120    +   H14  = H14  +    -0.15196350137644 * Education2n_Cycle
138121    +          +     0.11143610044897 * EducationBasic  +    -0.23356442851658 *
138122    +        EducationGraduation  +     0.26881272673711 * EducationMaster
138123    +          +    -0.21663247467797 * Marital_StatusDivorced
138124    +          +     1.11468603898508 * Marital_StatusMarried
138125    +          +    -0.84252388146943 * Marital_StatusSingle
138126    +          +     0.91707021954171 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.15196350137644 * Education2n_Cycle + 0.11143610044897 * 
EducationBasic + -0.23356442851658 * EducationGraduation + 0.26881272673711 * EducationMaster 
+ -0.21663247467797 * Marital_StatusDivorced + 1.11468603898508 * Marital_StatusMarried + 
-0.84252388146943 * Marital_StatusSingle + 0.91707021954171 * Marital_StatusTogether ;
138127    +   H11  =     0.69752617990443 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.69752617990443 + H11 ;
138128    +   H12  =     0.88932226025287 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88932226025287 + H12 ;
138129    +   H13  =    -0.23351093325425 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.23351093325425 + H13 ;
138130    +   H14  =      1.5565991209041 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.5565991209041 + H14 ;
138131    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
138132    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
138133    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
138134    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
138135    +END;
MPRINT(EM_DIAGRAM):   END;
138136    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
138137    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
138138    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
138139    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
138140    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
138141    +END;
MPRINT(EM_DIAGRAM):   END;
138142    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
138143    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
138144    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
138145    +
138146    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
138147    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
138148    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
138149    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
138150    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
138151    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
138152    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
138153    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
138154    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
138155    +end;
MPRINT(EM_DIAGRAM):   end;
138156    +else do;
MPRINT(EM_DIAGRAM):   else do;
138157    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
138158    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
138159    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
138160    +   end;
MPRINT(EM_DIAGRAM):   end;
138161    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
138162    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
138163    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
138164    +   end;
MPRINT(EM_DIAGRAM):   end;
138165    +   else do;
MPRINT(EM_DIAGRAM):   else do;
138166    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
138167    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
138168    +   end;
MPRINT(EM_DIAGRAM):   end;
138169    +end;
MPRINT(EM_DIAGRAM):   end;
138170    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
138171    +   P_DepVar1  =    -1.10683009838286 * H11  +    -1.85294488833715 * H12
138172    +          +    -2.73624761150933 * H13  +    -2.51103548718704 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.10683009838286 * H11 + -1.85294488833715 * H12 + 
-2.73624761150933 * H13 + -2.51103548718704 * H14 ;
138173    +   P_DepVar1  =    -0.86309949021709 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.86309949021709 + P_DepVar1 ;
138174    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
138175    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
138176    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
138177    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
138178    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
138179    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
138180    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
138181    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
138182    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
138183    +END;
MPRINT(EM_DIAGRAM):   END;
138184    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
138185    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
138186    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
138187    +END;
MPRINT(EM_DIAGRAM):   END;
138188    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
138189    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
138190    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
138191    +END;
MPRINT(EM_DIAGRAM):   END;
138192    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
138193    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
138194    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
138195    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
138196    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
138197    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
138198    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
138199    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
138200    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
138201    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
138202    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
138203    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
138204    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
138205    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
138206    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
138207    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
138208    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
138209    +END;
MPRINT(EM_DIAGRAM):   END;
138210    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
138211    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
138212    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
138213    +drop
138214    +H11
138215    +H12
138216    +H13
138217    +H14
138218    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
138219    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
138220     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL39_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
138221     quit;
138222     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
138223     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
138224     * Neural39: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural39: Computing metadata for TRAIN data;
138225     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL39_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural39_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural39_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural39_TRAIN out=WORK.M2FJSEP1 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2FJSEP1;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2FJSEP1(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2FJSEP1;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2FJSEP1;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1JB0QZ6 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1JB0QZ6;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JB0QZ6;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1Y16BBZ(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JB0QZ6;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1JB0QZ6;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JB0QZ6;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1JB0QZ6;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JB0QZ6;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural39";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural39";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural39: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
138537     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
138538     set EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_EMINFO;
138539     where DATA='Neural39' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural39' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
138540     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL39_EMINFO.
      WHERE (DATA='Neural39') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138541     data EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural39_EMINFO;
138542     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
138543     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
138544     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL39_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
138548     run;
138549     data EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_EMINFO;
138550     set EMWS8.Neural39_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_EMINFO WORK.MODELTEMP_INFO;
138551     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL39_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL39_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138552     proc sort data = EMWS8.Neural39_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural39_EMINFO NOTHREADS;
138553     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
138554     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL39_EMINFO.
NOTE: The data set EMWS8.NEURAL39_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138555     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
138556     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
138557     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138558     proc sort data = EMWS8.Neural39_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural39_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
138559     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
138560     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL39_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138561     data EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_EMINFO;
138562     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
138563     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
138564     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL39_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

138565     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
138566     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
138567     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
138568     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL39_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL39_VALIDATE.VIEW used (Total process time):
      real time           0.45 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
