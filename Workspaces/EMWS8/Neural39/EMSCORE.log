MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.06 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                20.06 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O03EG66_ 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O03EG66_ new;
MPRINT(EM_DIAGRAM):   run;
859386     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
859387     set EMWS8.Neural39_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_OUTKEY;
859388     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
859389     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 28 observations read from the data set EMWS8.NEURAL39_OUTKEY.
NOTE: The data set WORK.OUTKEY has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

859390     filename emflow
859390   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural39: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
859391     *------------------------------------------------------------*;
859392     * Neural39: Scoring DATA data;
859393     *------------------------------------------------------------*;
859394     data EMWS8.Neural39_TRAIN
859395     / view=EMWS8.Neural39_TRAIN
859396     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_TRAIN / view=EMWS8.Neural39_TRAIN ;
859397     set EMWS8.Meta3_TRAIN
859398     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
859399     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas.
859400    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
859401    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
859402    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
859403    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
859404    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
859405    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
859406    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
859407    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
859408    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
859409    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
859410    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
859411    +LENGTH _WARN_ $4
859412    +      F_DepVar  $ 12
859413    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
859414    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
859415    +
859416    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
859417    +
859418    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
859419    +
859420    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
859421    +
859422    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
859423    +
859424    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
859425    +
859426    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
859427    +
859428    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
859429    +
859430    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
859431    +
859432    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
859433    +
859434    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
859435    +
859436    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
859437    +
859438    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
859439    +
859440    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
859441    +
859442    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
859443    +
859444    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
859445    +
859446    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
859447    +
859448    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
859449    +
859450    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
859451    +
859452    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
859453    +
859454    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
859455    +
859456    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
859457    +
859458    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
859459    +
859460    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
859461    +
859462    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
859463    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
859464    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
859465    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
859466    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
859467    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
859468    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
859469    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
859470    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
859471    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
859472    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
859473    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
859474    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
859475    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
859476    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
859477    +end;
MPRINT(EM_DIAGRAM):   end;
859478    +else do;
MPRINT(EM_DIAGRAM):   else do;
859479    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
859480    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
859481    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
859482    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
859483    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
859484    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
859485    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
859486    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
859487    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
859488    +         end;
MPRINT(EM_DIAGRAM):   end;
859489    +         else do;
MPRINT(EM_DIAGRAM):   else do;
859490    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
859491    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
859492    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
859493    +            end;
MPRINT(EM_DIAGRAM):   end;
859494    +         end;
MPRINT(EM_DIAGRAM):   end;
859495    +      end;
MPRINT(EM_DIAGRAM):   end;
859496    +      else do;
MPRINT(EM_DIAGRAM):   else do;
859497    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
859498    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
859499    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
859500    +         end;
MPRINT(EM_DIAGRAM):   end;
859501    +      end;
MPRINT(EM_DIAGRAM):   end;
859502    +   end;
MPRINT(EM_DIAGRAM):   end;
859503    +   else do;
MPRINT(EM_DIAGRAM):   else do;
859504    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
859505    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
859506    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
859507    +      end;
MPRINT(EM_DIAGRAM):   end;
859508    +      else do;
MPRINT(EM_DIAGRAM):   else do;
859509    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
859510    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
859511    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
859512    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
859513    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
859514    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
859515    +         end;
MPRINT(EM_DIAGRAM):   end;
859516    +      end;
MPRINT(EM_DIAGRAM):   end;
859517    +   end;
MPRINT(EM_DIAGRAM):   end;
859518    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
859519    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
859520    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
859521    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
859522    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
859523    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
859524    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
859525    +   end;
MPRINT(EM_DIAGRAM):   end;
859526    +end;
MPRINT(EM_DIAGRAM):   end;
859527    +
859528    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
859529    +*** Checking missing input Interval
859530    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
859531    +
859532    +IF NMISS(
859533    +   AcceptedCmpTotal ,
859534    +   Frq ,
859535    +   Mnt ,
859536    +   MntMeatProducts ,
859537    +   NumCatalogPurchases ,
859538    +   NumDealsPurchases ,
859539    +   NumWebVisitsMonth ,
859540    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
859541    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
859542    +
859543    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
859544    +END;
MPRINT(EM_DIAGRAM):   END;
859545    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
859546    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
859547    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
859548    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
859549    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
859550    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
859551    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
859552    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
859553    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
859554    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
859555    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
859556    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
859557    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
859558    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
859559    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
859560    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
859561    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
859562    +END;
MPRINT(EM_DIAGRAM):   END;
859563    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
859564    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
859565    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
859566    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
859567    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
859568    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
859569    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
859570    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
859571    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
859572    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
859573    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
859574    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
859575    +   ELSE S_NumCatalogPurchases
859576    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
859577    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
859578    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
859579    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
859580    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
859581    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
859582    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
859583    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
859584    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
859585    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
859586    +END;
MPRINT(EM_DIAGRAM):   END;
859587    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
859588    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
859589    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
859590    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
859591    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
859592    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
859593    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
859594    +   H11  =     0.32071869925611 * S_AcceptedCmpTotal  +    -1.18627222732428 *
859595    +        S_Frq  +     0.00967528650049 * S_Mnt  +     0.53945968152118 *
859596    +        S_MntMeatProducts  +     0.76096876406469 * S_NumCatalogPurchases
859597    +          +       0.868651674737 * S_NumDealsPurchases
859598    +          +     0.56519310644826 * S_NumWebVisitsMonth
859599    +          +    -0.85354176662475 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.32071869925611 * S_AcceptedCmpTotal + -1.18627222732428 * S_Frq 
+ 0.00967528650049 * S_Mnt + 0.53945968152118 * S_MntMeatProducts + 0.76096876406469 * 
S_NumCatalogPurchases + 0.868651674737 * S_NumDealsPurchases + 0.56519310644826 * 
S_NumWebVisitsMonth + -0.85354176662475 * S_Recency ;
859600    +   H12  =    -0.53760783840514 * S_AcceptedCmpTotal  +    -0.10887355535928 *
859601    +        S_Frq  +     0.25951462601453 * S_Mnt  +    -0.54343784484503 *
859602    +        S_MntMeatProducts  +    -0.74697447632011 * S_NumCatalogPurchases
859603    +          +     0.22588169231784 * S_NumDealsPurchases
859604    +          +    -0.50349429270665 * S_NumWebVisitsMonth
859605    +          +     0.94913855646928 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.53760783840514 * S_AcceptedCmpTotal + -0.10887355535928 * S_Frq 
+ 0.25951462601453 * S_Mnt + -0.54343784484503 * S_MntMeatProducts + -0.74697447632011 * 
S_NumCatalogPurchases + 0.22588169231784 * S_NumDealsPurchases + -0.50349429270665 * 
S_NumWebVisitsMonth + 0.94913855646928 * S_Recency ;
859606    +   H13  =    -0.49808738781134 * S_AcceptedCmpTotal  +     0.75871743128278 *
859607    +        S_Frq  +     0.92783231668315 * S_Mnt  +    -0.72994432129905 *
859608    +        S_MntMeatProducts  +    -0.41911874339248 * S_NumCatalogPurchases
859609    +          +     0.38270609344543 * S_NumDealsPurchases
859610    +          +    -0.67911374483005 * S_NumWebVisitsMonth
859611    +          +     0.62959851233589 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.49808738781134 * S_AcceptedCmpTotal + 0.75871743128278 * S_Frq 
+ 0.92783231668315 * S_Mnt + -0.72994432129905 * S_MntMeatProducts + -0.41911874339248 * 
S_NumCatalogPurchases + 0.38270609344543 * S_NumDealsPurchases + -0.67911374483005 * 
S_NumWebVisitsMonth + 0.62959851233589 * S_Recency ;
859612    +   H14  =    -0.36477606348735 * S_AcceptedCmpTotal  +     1.38796327523044 *
859613    +        S_Frq  +     0.07887052944027 * S_Mnt  +    -2.27327070721147 *
859614    +        S_MntMeatProducts  +    -1.42807558393601 * S_NumCatalogPurchases
859615    +          +    -0.27211575710638 * S_NumDealsPurchases
859616    +          +    -0.27365412530976 * S_NumWebVisitsMonth
859617    +          +     0.25676979915144 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.36477606348735 * S_AcceptedCmpTotal + 1.38796327523044 * S_Frq 
+ 0.07887052944027 * S_Mnt + -2.27327070721147 * S_MntMeatProducts + -1.42807558393601 * 
S_NumCatalogPurchases + -0.27211575710638 * S_NumDealsPurchases + -0.27365412530976 * 
S_NumWebVisitsMonth + 0.25676979915144 * S_Recency ;
859618    +   H11  = H11  +    -0.10986134340688 * Marital_StatusDivorced
859619    +          +     0.26671394907331 * Marital_StatusMarried
859620    +          +    -0.21412689047791 * Marital_StatusSingle
859621    +          +      0.0878866166131 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10986134340688 * Marital_StatusDivorced + 
0.26671394907331 * Marital_StatusMarried + -0.21412689047791 * Marital_StatusSingle + 
0.0878866166131 * Marital_StatusTogether ;
859622    +   H12  = H12  +     0.57822808683392 * Marital_StatusDivorced
859623    +          +      0.8828544386185 * Marital_StatusMarried
859624    +          +    -0.82952673399486 * Marital_StatusSingle
859625    +          +     0.54925647255359 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.57822808683392 * Marital_StatusDivorced + 0.8828544386185 
* Marital_StatusMarried + -0.82952673399486 * Marital_StatusSingle + 0.54925647255359 * 
Marital_StatusTogether ;
859626    +   H13  = H13  +    -0.79896029123713 * Marital_StatusDivorced
859627    +          +     0.43581055671108 * Marital_StatusMarried
859628    +          +    -0.37028703904727 * Marital_StatusSingle
859629    +          +     0.68190263239907 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.79896029123713 * Marital_StatusDivorced + 
0.43581055671108 * Marital_StatusMarried + -0.37028703904727 * Marital_StatusSingle + 
0.68190263239907 * Marital_StatusTogether ;
859630    +   H14  = H14  +     0.00414219307385 * Marital_StatusDivorced
859631    +          +     -0.1219875250835 * Marital_StatusMarried
859632    +          +    -0.01813173038471 * Marital_StatusSingle
859633    +          +    -0.20940808240309 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.00414219307385 * Marital_StatusDivorced + -0.1219875250835 
* Marital_StatusMarried + -0.01813173038471 * Marital_StatusSingle + -0.20940808240309 * 
Marital_StatusTogether ;
859634    +   H11  =    -2.24986706948705 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.24986706948705 + H11 ;
859635    +   H12  =     2.55250334233636 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 2.55250334233636 + H12 ;
859636    +   H13  =    -0.36139954012771 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.36139954012771 + H13 ;
859637    +   H14  =    -0.78789859340386 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.78789859340386 + H14 ;
859638    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
859639    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
859640    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
859641    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
859642    +END;
MPRINT(EM_DIAGRAM):   END;
859643    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
859644    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
859645    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
859646    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
859647    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
859648    +END;
MPRINT(EM_DIAGRAM):   END;
859649    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
859650    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
859651    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
859652    +
859653    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
859654    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
859655    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
859656    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
859657    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
859658    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
859659    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
859660    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
859661    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
859662    +end;
MPRINT(EM_DIAGRAM):   end;
859663    +else do;
MPRINT(EM_DIAGRAM):   else do;
859664    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
859665    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
859666    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
859667    +   end;
MPRINT(EM_DIAGRAM):   end;
859668    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
859669    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
859670    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
859671    +   end;
MPRINT(EM_DIAGRAM):   end;
859672    +   else do;
MPRINT(EM_DIAGRAM):   else do;
859673    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
859674    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
859675    +   end;
MPRINT(EM_DIAGRAM):   end;
859676    +end;
MPRINT(EM_DIAGRAM):   end;
859677    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
859678    +   P_DepVar1  =     3.47156859435653 * H11  +     -3.7137526781971 * H12
859679    +          +    -4.05222402892753 * H13  +    -4.15704481111915 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.47156859435653 * H11 + -3.7137526781971 * H12 + 
-4.05222402892753 * H13 + -4.15704481111915 * H14 ;
859680    +   P_DepVar1  =    -0.19096137615409 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.19096137615409 + P_DepVar1 ;
859681    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
859682    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
859683    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
859684    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
859685    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
859686    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
859687    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
859688    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
859689    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
859690    +END;
MPRINT(EM_DIAGRAM):   END;
859691    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
859692    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
859693    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
859694    +END;
MPRINT(EM_DIAGRAM):   END;
859695    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
859696    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
859697    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
859698    +END;
MPRINT(EM_DIAGRAM):   END;
859699    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
859700    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
859701    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
859702    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
859703    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
859704    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
859705    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
859706    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
859707    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
859708    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
859709    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
859710    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
859711    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
859712    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
859713    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
859714    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
859715    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
859716    +END;
MPRINT(EM_DIAGRAM):   END;
859717    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
859718    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
859719    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
859720    +drop
859721    +H11
859722    +H12
859723    +H13
859724    +H14
859725    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
859726    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
859727     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL39_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
859728     quit;
859729     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
859730     filename emflow
859730   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural39: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
859731     *------------------------------------------------------------*;
859732     * Neural39: Scoring VALIDATE data;
859733     *------------------------------------------------------------*;
859734     data EMWS8.Neural39_VALIDATE
859735     / view=EMWS8.Neural39_VALIDATE
859736     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_VALIDATE / view=EMWS8.Neural39_VALIDATE ;
859737     set EMWS8.Meta3_VALIDATE
859738     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
859739     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas.
859740    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
859741    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
859742    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
859743    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
859744    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
859745    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
859746    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
859747    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
859748    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
859749    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
859750    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
859751    +LENGTH _WARN_ $4
859752    +      F_DepVar  $ 12
859753    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
859754    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
859755    +
859756    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
859757    +
859758    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
859759    +
859760    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
859761    +
859762    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
859763    +
859764    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
859765    +
859766    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
859767    +
859768    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
859769    +
859770    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
859771    +
859772    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
859773    +
859774    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
859775    +
859776    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
859777    +
859778    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
859779    +
859780    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
859781    +
859782    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
859783    +
859784    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
859785    +
859786    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
859787    +
859788    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
859789    +
859790    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
859791    +
859792    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
859793    +
859794    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
859795    +
859796    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
859797    +
859798    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
859799    +
859800    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
859801    +
859802    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
859803    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
859804    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
859805    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
859806    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
859807    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
859808    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
859809    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
859810    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
859811    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
859812    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
859813    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
859814    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
859815    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
859816    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
859817    +end;
MPRINT(EM_DIAGRAM):   end;
859818    +else do;
MPRINT(EM_DIAGRAM):   else do;
859819    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
859820    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
859821    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
859822    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
859823    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
859824    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
859825    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
859826    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
859827    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
859828    +         end;
MPRINT(EM_DIAGRAM):   end;
859829    +         else do;
MPRINT(EM_DIAGRAM):   else do;
859830    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
859831    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
859832    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
859833    +            end;
MPRINT(EM_DIAGRAM):   end;
859834    +         end;
MPRINT(EM_DIAGRAM):   end;
859835    +      end;
MPRINT(EM_DIAGRAM):   end;
859836    +      else do;
MPRINT(EM_DIAGRAM):   else do;
859837    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
859838    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
859839    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
859840    +         end;
MPRINT(EM_DIAGRAM):   end;
859841    +      end;
MPRINT(EM_DIAGRAM):   end;
859842    +   end;
MPRINT(EM_DIAGRAM):   end;
859843    +   else do;
MPRINT(EM_DIAGRAM):   else do;
859844    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
859845    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
859846    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
859847    +      end;
MPRINT(EM_DIAGRAM):   end;
859848    +      else do;
MPRINT(EM_DIAGRAM):   else do;
859849    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
859850    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
859851    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
859852    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
859853    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
859854    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
859855    +         end;
MPRINT(EM_DIAGRAM):   end;
859856    +      end;
MPRINT(EM_DIAGRAM):   end;
859857    +   end;
MPRINT(EM_DIAGRAM):   end;
859858    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
859859    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
859860    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
859861    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
859862    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
859863    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
859864    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
859865    +   end;
MPRINT(EM_DIAGRAM):   end;
859866    +end;
MPRINT(EM_DIAGRAM):   end;
859867    +
859868    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
859869    +*** Checking missing input Interval
859870    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
859871    +
859872    +IF NMISS(
859873    +   AcceptedCmpTotal ,
859874    +   Frq ,
859875    +   Mnt ,
859876    +   MntMeatProducts ,
859877    +   NumCatalogPurchases ,
859878    +   NumDealsPurchases ,
859879    +   NumWebVisitsMonth ,
859880    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
859881    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
859882    +
859883    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
859884    +END;
MPRINT(EM_DIAGRAM):   END;
859885    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
859886    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
859887    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
859888    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
859889    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
859890    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
859891    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
859892    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
859893    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
859894    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
859895    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
859896    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
859897    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
859898    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
859899    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
859900    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
859901    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
859902    +END;
MPRINT(EM_DIAGRAM):   END;
859903    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
859904    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
859905    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
859906    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
859907    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
859908    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
859909    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
859910    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
859911    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
859912    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
859913    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
859914    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
859915    +   ELSE S_NumCatalogPurchases
859916    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
859917    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
859918    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
859919    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
859920    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
859921    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
859922    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
859923    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
859924    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
859925    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
859926    +END;
MPRINT(EM_DIAGRAM):   END;
859927    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
859928    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
859929    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
859930    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
859931    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
859932    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
859933    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
859934    +   H11  =     0.32071869925611 * S_AcceptedCmpTotal  +    -1.18627222732428 *
859935    +        S_Frq  +     0.00967528650049 * S_Mnt  +     0.53945968152118 *
859936    +        S_MntMeatProducts  +     0.76096876406469 * S_NumCatalogPurchases
859937    +          +       0.868651674737 * S_NumDealsPurchases
859938    +          +     0.56519310644826 * S_NumWebVisitsMonth
859939    +          +    -0.85354176662475 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.32071869925611 * S_AcceptedCmpTotal + -1.18627222732428 * S_Frq 
+ 0.00967528650049 * S_Mnt + 0.53945968152118 * S_MntMeatProducts + 0.76096876406469 * 
S_NumCatalogPurchases + 0.868651674737 * S_NumDealsPurchases + 0.56519310644826 * 
S_NumWebVisitsMonth + -0.85354176662475 * S_Recency ;
859940    +   H12  =    -0.53760783840514 * S_AcceptedCmpTotal  +    -0.10887355535928 *
859941    +        S_Frq  +     0.25951462601453 * S_Mnt  +    -0.54343784484503 *
859942    +        S_MntMeatProducts  +    -0.74697447632011 * S_NumCatalogPurchases
859943    +          +     0.22588169231784 * S_NumDealsPurchases
859944    +          +    -0.50349429270665 * S_NumWebVisitsMonth
859945    +          +     0.94913855646928 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.53760783840514 * S_AcceptedCmpTotal + -0.10887355535928 * S_Frq 
+ 0.25951462601453 * S_Mnt + -0.54343784484503 * S_MntMeatProducts + -0.74697447632011 * 
S_NumCatalogPurchases + 0.22588169231784 * S_NumDealsPurchases + -0.50349429270665 * 
S_NumWebVisitsMonth + 0.94913855646928 * S_Recency ;
859946    +   H13  =    -0.49808738781134 * S_AcceptedCmpTotal  +     0.75871743128278 *
859947    +        S_Frq  +     0.92783231668315 * S_Mnt  +    -0.72994432129905 *
859948    +        S_MntMeatProducts  +    -0.41911874339248 * S_NumCatalogPurchases
859949    +          +     0.38270609344543 * S_NumDealsPurchases
859950    +          +    -0.67911374483005 * S_NumWebVisitsMonth
859951    +          +     0.62959851233589 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.49808738781134 * S_AcceptedCmpTotal + 0.75871743128278 * S_Frq 
+ 0.92783231668315 * S_Mnt + -0.72994432129905 * S_MntMeatProducts + -0.41911874339248 * 
S_NumCatalogPurchases + 0.38270609344543 * S_NumDealsPurchases + -0.67911374483005 * 
S_NumWebVisitsMonth + 0.62959851233589 * S_Recency ;
859952    +   H14  =    -0.36477606348735 * S_AcceptedCmpTotal  +     1.38796327523044 *
859953    +        S_Frq  +     0.07887052944027 * S_Mnt  +    -2.27327070721147 *
859954    +        S_MntMeatProducts  +    -1.42807558393601 * S_NumCatalogPurchases
859955    +          +    -0.27211575710638 * S_NumDealsPurchases
859956    +          +    -0.27365412530976 * S_NumWebVisitsMonth
859957    +          +     0.25676979915144 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.36477606348735 * S_AcceptedCmpTotal + 1.38796327523044 * S_Frq 
+ 0.07887052944027 * S_Mnt + -2.27327070721147 * S_MntMeatProducts + -1.42807558393601 * 
S_NumCatalogPurchases + -0.27211575710638 * S_NumDealsPurchases + -0.27365412530976 * 
S_NumWebVisitsMonth + 0.25676979915144 * S_Recency ;
859958    +   H11  = H11  +    -0.10986134340688 * Marital_StatusDivorced
859959    +          +     0.26671394907331 * Marital_StatusMarried
859960    +          +    -0.21412689047791 * Marital_StatusSingle
859961    +          +      0.0878866166131 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10986134340688 * Marital_StatusDivorced + 
0.26671394907331 * Marital_StatusMarried + -0.21412689047791 * Marital_StatusSingle + 
0.0878866166131 * Marital_StatusTogether ;
859962    +   H12  = H12  +     0.57822808683392 * Marital_StatusDivorced
859963    +          +      0.8828544386185 * Marital_StatusMarried
859964    +          +    -0.82952673399486 * Marital_StatusSingle
859965    +          +     0.54925647255359 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.57822808683392 * Marital_StatusDivorced + 0.8828544386185 
* Marital_StatusMarried + -0.82952673399486 * Marital_StatusSingle + 0.54925647255359 * 
Marital_StatusTogether ;
859966    +   H13  = H13  +    -0.79896029123713 * Marital_StatusDivorced
859967    +          +     0.43581055671108 * Marital_StatusMarried
859968    +          +    -0.37028703904727 * Marital_StatusSingle
859969    +          +     0.68190263239907 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.79896029123713 * Marital_StatusDivorced + 
0.43581055671108 * Marital_StatusMarried + -0.37028703904727 * Marital_StatusSingle + 
0.68190263239907 * Marital_StatusTogether ;
859970    +   H14  = H14  +     0.00414219307385 * Marital_StatusDivorced
859971    +          +     -0.1219875250835 * Marital_StatusMarried
859972    +          +    -0.01813173038471 * Marital_StatusSingle
859973    +          +    -0.20940808240309 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.00414219307385 * Marital_StatusDivorced + -0.1219875250835 
* Marital_StatusMarried + -0.01813173038471 * Marital_StatusSingle + -0.20940808240309 * 
Marital_StatusTogether ;
859974    +   H11  =    -2.24986706948705 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.24986706948705 + H11 ;
859975    +   H12  =     2.55250334233636 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 2.55250334233636 + H12 ;
859976    +   H13  =    -0.36139954012771 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.36139954012771 + H13 ;
859977    +   H14  =    -0.78789859340386 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.78789859340386 + H14 ;
859978    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
859979    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
859980    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
859981    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
859982    +END;
MPRINT(EM_DIAGRAM):   END;
859983    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
859984    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
859985    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
859986    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
859987    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
859988    +END;
MPRINT(EM_DIAGRAM):   END;
859989    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
859990    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
859991    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
859992    +
859993    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
859994    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
859995    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
859996    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
859997    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
859998    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
859999    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
860000    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
860001    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
860002    +end;
MPRINT(EM_DIAGRAM):   end;
860003    +else do;
MPRINT(EM_DIAGRAM):   else do;
860004    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
860005    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
860006    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
860007    +   end;
MPRINT(EM_DIAGRAM):   end;
860008    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
860009    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
860010    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
860011    +   end;
MPRINT(EM_DIAGRAM):   end;
860012    +   else do;
MPRINT(EM_DIAGRAM):   else do;
860013    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
860014    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
860015    +   end;
MPRINT(EM_DIAGRAM):   end;
860016    +end;
MPRINT(EM_DIAGRAM):   end;
860017    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
860018    +   P_DepVar1  =     3.47156859435653 * H11  +     -3.7137526781971 * H12
860019    +          +    -4.05222402892753 * H13  +    -4.15704481111915 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.47156859435653 * H11 + -3.7137526781971 * H12 + 
-4.05222402892753 * H13 + -4.15704481111915 * H14 ;
860020    +   P_DepVar1  =    -0.19096137615409 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.19096137615409 + P_DepVar1 ;
860021    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
860022    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
860023    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
860024    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
860025    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
860026    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
860027    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
860028    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
860029    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
860030    +END;
MPRINT(EM_DIAGRAM):   END;
860031    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
860032    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
860033    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
860034    +END;
MPRINT(EM_DIAGRAM):   END;
860035    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
860036    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
860037    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
860038    +END;
MPRINT(EM_DIAGRAM):   END;
860039    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
860040    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
860041    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
860042    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
860043    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
860044    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
860045    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
860046    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
860047    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
860048    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
860049    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
860050    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
860051    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
860052    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
860053    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
860054    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
860055    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
860056    +END;
MPRINT(EM_DIAGRAM):   END;
860057    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
860058    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
860059    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
860060    +drop
860061    +H11
860062    +H12
860063    +H13
860064    +H14
860065    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
860066    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
860067     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL39_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
860068     quit;
860069     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
860070     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
860071     * Neural39: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural39: Computing metadata for TRAIN data;
860072     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL39_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural39_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural39_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural39_TRAIN out=WORK.M36FK549 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M36FK549;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M36FK549(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M36FK549;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M36FK549;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0J8HJC8 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0J8HJC8;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0J8HJC8;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0YN_18Y(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0J8HJC8;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0J8HJC8;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0J8HJC8;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0J8HJC8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0J8HJC8;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural39";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural39";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural39: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
860384     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
860385     set EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_EMINFO;
860386     where DATA='Neural39' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural39' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
860387     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL39_EMINFO.
      WHERE (DATA='Neural39') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

860388     data EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural39_EMINFO;
860389     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
860390     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
860391     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL39_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
860395     run;
860396     data EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_EMINFO;
860397     set EMWS8.Neural39_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_EMINFO WORK.MODELTEMP_INFO;
860398     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL39_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL39_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

860399     proc sort data = EMWS8.Neural39_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural39_EMINFO NOTHREADS;
860400     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
860401     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL39_EMINFO.
NOTE: The data set EMWS8.NEURAL39_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

860402     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
860403     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
860404     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

860405     proc sort data = EMWS8.Neural39_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural39_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
860406     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
860407     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL39_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

860408     data EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_EMINFO;
860409     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
860410     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
860411     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL39_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

860412     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
860413     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
860414     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
860415     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL39_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL39_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
