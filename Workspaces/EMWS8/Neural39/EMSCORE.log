MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.56 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.56 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0KQ8I0T 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0KQ8I0T new;
MPRINT(EM_DIAGRAM):   run;
1187436    data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
1187437    set EMWS8.Neural39_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_OUTKEY;
1187438    if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
1187439    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set EMWS8.NEURAL39_OUTKEY.
NOTE: The data set WORK.OUTKEY has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1187440    filename emflow
1187440  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural39: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187441    *------------------------------------------------------------*;
1187442    * Neural39: Scoring DATA data;
1187443    *------------------------------------------------------------*;
1187444    data EMWS8.Neural39_TRAIN
1187445    / view=EMWS8.Neural39_TRAIN
1187446    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_TRAIN / view=EMWS8.Neural39_TRAIN ;
1187447    set EMWS8.Meta3_TRAIN
1187448    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
1187449    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas.
1187450   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1187451   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1187452   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1187453   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1187454   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1187455   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1187456   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1187457   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1187458   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1187459   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1187460   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1187461   +LENGTH _WARN_ $4
1187462   +      F_DepVar  $ 12
1187463   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1187464   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1187465   +
1187466   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1187467   +
1187468   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1187469   +
1187470   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1187471   +
1187472   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1187473   +
1187474   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1187475   +
1187476   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1187477   +
1187478   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1187479   +
1187480   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1187481   +
1187482   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1187483   +
1187484   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1187485   +
1187486   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1187487   +
1187488   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1187489   +
1187490   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1187491   +
1187492   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1187493   +
1187494   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1187495   +
1187496   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1187497   +
1187498   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1187499   +
1187500   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1187501   +
1187502   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1187503   +
1187504   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1187505   +
1187506   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1187507   +
1187508   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1187509   +
1187510   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1187511   +
1187512   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1187513   +
1187514   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1187515   +
1187516   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1187517   +
1187518   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1187519   +
1187520   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1187521   +
1187522   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1187523   +
1187524   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1187525   +
1187526   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1187527   +
1187528   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1187529   +
1187530   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1187531   +
1187532   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1187533   +
1187534   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1187535   +
1187536   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1187537   +
1187538   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1187539   +
1187540   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1187541   +
1187542   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1187543   +
1187544   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1187545   +
1187546   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1187547   +
1187548   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1187549   +
1187550   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1187551   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1187552   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1187553   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1187554   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187555   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187556   +end;
MPRINT(EM_DIAGRAM):   end;
1187557   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187558   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187559   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1187560   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187561   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187562   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1187563   +   end;
MPRINT(EM_DIAGRAM):   end;
1187564   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187565   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1187566   +   end;
MPRINT(EM_DIAGRAM):   end;
1187567   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187568   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1187569   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187570   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187571   +   end;
MPRINT(EM_DIAGRAM):   end;
1187572   +end;
MPRINT(EM_DIAGRAM):   end;
1187573   +
1187574   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1187575   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1187576   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1187577   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1187578   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187579   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187580   +end;
MPRINT(EM_DIAGRAM):   end;
1187581   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187582   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187583   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1187584   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187585   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187586   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1187587   +   end;
MPRINT(EM_DIAGRAM):   end;
1187588   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187589   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1187590   +   end;
MPRINT(EM_DIAGRAM):   end;
1187591   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187592   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1187593   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187594   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187595   +   end;
MPRINT(EM_DIAGRAM):   end;
1187596   +end;
MPRINT(EM_DIAGRAM):   end;
1187597   +
1187598   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1187599   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1187600   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1187601   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1187602   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187603   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187604   +end;
MPRINT(EM_DIAGRAM):   end;
1187605   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187606   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187607   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1187608   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187609   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187610   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1187611   +   end;
MPRINT(EM_DIAGRAM):   end;
1187612   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187613   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1187614   +   end;
MPRINT(EM_DIAGRAM):   end;
1187615   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187616   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1187617   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187618   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187619   +   end;
MPRINT(EM_DIAGRAM):   end;
1187620   +end;
MPRINT(EM_DIAGRAM):   end;
1187621   +
1187622   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1187623   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1187624   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1187625   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1187626   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187627   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187628   +end;
MPRINT(EM_DIAGRAM):   end;
1187629   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187630   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187631   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1187632   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187633   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187634   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1187635   +   end;
MPRINT(EM_DIAGRAM):   end;
1187636   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187637   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1187638   +   end;
MPRINT(EM_DIAGRAM):   end;
1187639   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187640   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1187641   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187642   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187643   +   end;
MPRINT(EM_DIAGRAM):   end;
1187644   +end;
MPRINT(EM_DIAGRAM):   end;
1187645   +
1187646   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1187647   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1187648   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1187649   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1187650   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187651   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187652   +end;
MPRINT(EM_DIAGRAM):   end;
1187653   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187654   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187655   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1187656   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187657   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187658   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1187659   +   end;
MPRINT(EM_DIAGRAM):   end;
1187660   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187661   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1187662   +   end;
MPRINT(EM_DIAGRAM):   end;
1187663   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187664   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1187665   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187666   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187667   +   end;
MPRINT(EM_DIAGRAM):   end;
1187668   +end;
MPRINT(EM_DIAGRAM):   end;
1187669   +
1187670   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1187671   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1187672   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1187673   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1187674   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187675   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187676   +end;
MPRINT(EM_DIAGRAM):   end;
1187677   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187678   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187679   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1187680   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187681   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187682   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1187683   +   end;
MPRINT(EM_DIAGRAM):   end;
1187684   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187685   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1187686   +   end;
MPRINT(EM_DIAGRAM):   end;
1187687   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187688   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1187689   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187690   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187691   +   end;
MPRINT(EM_DIAGRAM):   end;
1187692   +end;
MPRINT(EM_DIAGRAM):   end;
1187693   +
1187694   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1187695   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1187696   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1187697   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1187698   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187699   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187700   +end;
MPRINT(EM_DIAGRAM):   end;
1187701   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187702   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187703   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1187704   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187705   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1187706   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1187707   +   end;
MPRINT(EM_DIAGRAM):   end;
1187708   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1187709   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1187710   +   end;
MPRINT(EM_DIAGRAM):   end;
1187711   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187712   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1187713   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187714   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187715   +   end;
MPRINT(EM_DIAGRAM):   end;
1187716   +end;
MPRINT(EM_DIAGRAM):   end;
1187717   +
1187718   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1187719   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1187720   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1187721   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1187722   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1187723   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1187724   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1187725   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1187726   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1187727   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1187728   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1187729   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1187730   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187731   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187732   +end;
MPRINT(EM_DIAGRAM):   end;
1187733   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187734   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1187735   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1187736   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187737   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1187738   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1187739   +   end;
MPRINT(EM_DIAGRAM):   end;
1187740   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1187741   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1187742   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1187743   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1187744   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1187745   +   end;
MPRINT(EM_DIAGRAM):   end;
1187746   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1187747   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1187748   +   end;
MPRINT(EM_DIAGRAM):   end;
1187749   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1187750   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1187751   +   end;
MPRINT(EM_DIAGRAM):   end;
1187752   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1187753   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1187754   +   end;
MPRINT(EM_DIAGRAM):   end;
1187755   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187756   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1187757   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1187758   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1187759   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1187760   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187761   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187762   +   end;
MPRINT(EM_DIAGRAM):   end;
1187763   +end;
MPRINT(EM_DIAGRAM):   end;
1187764   +
1187765   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1187766   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1187767   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1187768   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1187769   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1187770   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1187771   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1187772   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1187773   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1187774   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1187775   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1187776   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1187777   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1187778   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187779   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187780   +end;
MPRINT(EM_DIAGRAM):   end;
1187781   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187782   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1187783   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1187784   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187785   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1187786   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1187787   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1187788   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1187789   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1187790   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1187791   +         end;
MPRINT(EM_DIAGRAM):   end;
1187792   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1187793   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1187794   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1187795   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1187796   +            end;
MPRINT(EM_DIAGRAM):   end;
1187797   +         end;
MPRINT(EM_DIAGRAM):   end;
1187798   +      end;
MPRINT(EM_DIAGRAM):   end;
1187799   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1187800   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1187801   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1187802   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1187803   +         end;
MPRINT(EM_DIAGRAM):   end;
1187804   +      end;
MPRINT(EM_DIAGRAM):   end;
1187805   +   end;
MPRINT(EM_DIAGRAM):   end;
1187806   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187807   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1187808   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1187809   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1187810   +      end;
MPRINT(EM_DIAGRAM):   end;
1187811   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1187812   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1187813   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1187814   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1187815   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1187816   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1187817   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1187818   +         end;
MPRINT(EM_DIAGRAM):   end;
1187819   +      end;
MPRINT(EM_DIAGRAM):   end;
1187820   +   end;
MPRINT(EM_DIAGRAM):   end;
1187821   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1187822   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1187823   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1187824   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1187825   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1187826   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187827   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187828   +   end;
MPRINT(EM_DIAGRAM):   end;
1187829   +end;
MPRINT(EM_DIAGRAM):   end;
1187830   +
1187831   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187832   +*** Checking missing input Interval
1187833   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1187834   +
1187835   +IF NMISS(
1187836   +   AcceptedCmpTotal ,
1187837   +   Age ,
1187838   +   Frq ,
1187839   +   Income ,
1187840   +   Kidhome ,
1187841   +   MntFishProducts ,
1187842   +   MntFruits ,
1187843   +   MntGoldProds ,
1187844   +   MntSweetProducts ,
1187845   +   MonthsAsCustomer ,
1187846   +   NumDealsPurchases ,
1187847   +   NumWebVisitsMonth ,
1187848   +   RFMstat ,
1187849   +   RMntFrq ,
1187850   +   Recency ,
1187851   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1187852   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1187853   +
1187854   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187855   +END;
MPRINT(EM_DIAGRAM):   END;
1187856   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187857   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1187858   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187859   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1187860   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1187861   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1187862   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1187863   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1187864   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1187865   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1187866   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1187867   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1187868   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1187869   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1187870   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1187871   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1187872   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1187873   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1187874   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1187875   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1187876   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1187877   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1187878   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1187879   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1187880   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1187881   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1187882   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1187883   +END;
MPRINT(EM_DIAGRAM):   END;
1187884   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1187885   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1187886   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1187887   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1187888   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1187889   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1187890   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1187891   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1187892   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1187893   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1187894   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1187895   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1187896   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1187897   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1187898   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1187899   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1187900   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1187901   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1187902   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1187903   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1187904   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1187905   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1187906   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1187907   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1187908   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1187909   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1187910   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1187911   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1187912   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1187913   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1187914   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1187915   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1187916   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1187917   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1187918   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1187919   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1187920   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1187921   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1187922   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1187923   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1187924   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1187925   +END;
MPRINT(EM_DIAGRAM):   END;
1187926   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187927   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1187928   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187929   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187930   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1187931   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187932   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187933   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1187934   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187935   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1187936   +   H11  =    -0.59512924851551 * S_AcceptedCmpTotal  +     -0.0822975295273 *
1187937   +        S_Age  +     0.34777744436504 * S_Frq  +     0.07942025641822 *
1187938   +        S_Income  +     0.23721647978534 * S_Kidhome
1187939   +          +    -0.02271798884661 * S_MntFishProducts
1187940   +          +     0.08807309980934 * S_MntFruits  +     0.19069006902766 *
1187941   +        S_MntGoldProds  +     0.10910458513653 * S_MntSweetProducts
1187942   +          +     -0.2712400716804 * S_MonthsAsCustomer
1187943   +          +    -0.53936896531209 * S_NumDealsPurchases
1187944   +          +    -0.35925915934577 * S_NumWebVisitsMonth
1187945   +          +    -0.08622629924361 * S_RFMstat  +     0.25394591780904 *
1187946   +        S_RMntFrq  +     0.69890372536214 * S_Recency
1187947   +          +     0.13643980298627 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59512924851551 * S_AcceptedCmpTotal + -0.0822975295273 * S_Age 
+ 0.34777744436504 * S_Frq + 0.07942025641822 * S_Income + 0.23721647978534 * S_Kidhome + 
-0.02271798884661 * S_MntFishProducts + 0.08807309980934 * S_MntFruits + 0.19069006902766 * 
S_MntGoldProds + 0.10910458513653 * S_MntSweetProducts + -0.2712400716804 * S_MonthsAsCustomer 
+ -0.53936896531209 * S_NumDealsPurchases + -0.35925915934577 * S_NumWebVisitsMonth + 
-0.08622629924361 * S_RFMstat + 0.25394591780904 * S_RMntFrq + 0.69890372536214 * S_Recency + 
0.13643980298627 * S_Teenhome ;
1187948   +   H12  =     -0.1829764834163 * S_AcceptedCmpTotal  +      0.5150125387492 *
1187949   +        S_Age  +     0.98578880139347 * S_Frq  +     0.35785305967975 *
1187950   +        S_Income  +     0.08668934262602 * S_Kidhome
1187951   +          +     -0.1992601670046 * S_MntFishProducts
1187952   +          +     0.01629264862515 * S_MntFruits  +    -0.03025350824332 *
1187953   +        S_MntGoldProds  +    -0.38227262001553 * S_MntSweetProducts
1187954   +          +     0.30116770365349 * S_MonthsAsCustomer
1187955   +          +    -0.46000379214601 * S_NumDealsPurchases
1187956   +          +    -0.73085067864835 * S_NumWebVisitsMonth
1187957   +          +    -0.22923275570367 * S_RFMstat  +     -0.5046307291648 *
1187958   +        S_RMntFrq  +     1.05223220143096 * S_Recency
1187959   +          +    -0.17002078495363 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.1829764834163 * S_AcceptedCmpTotal + 0.5150125387492 * S_Age + 
0.98578880139347 * S_Frq + 0.35785305967975 * S_Income + 0.08668934262602 * S_Kidhome + 
-0.1992601670046 * S_MntFishProducts + 0.01629264862515 * S_MntFruits + -0.03025350824332 * 
S_MntGoldProds + -0.38227262001553 * S_MntSweetProducts + 0.30116770365349 * 
S_MonthsAsCustomer + -0.46000379214601 * S_NumDealsPurchases + -0.73085067864835 * 
S_NumWebVisitsMonth + -0.22923275570367 * S_RFMstat + -0.5046307291648 * S_RMntFrq + 
1.05223220143096 * S_Recency + -0.17002078495363 * S_Teenhome ;
1187960   +   H13  =    -0.46803354047925 * S_AcceptedCmpTotal  +    -0.20058439872619 *
1187961   +        S_Age  +    -0.01284299386993 * S_Frq  +    -0.75016251494757 *
1187962   +        S_Income  +    -0.63339804662862 * S_Kidhome
1187963   +          +     0.20120882029834 * S_MntFishProducts
1187964   +          +    -0.06230023881104 * S_MntFruits  +    -0.36454417225574 *
1187965   +        S_MntGoldProds  +     0.02047534293821 * S_MntSweetProducts
1187966   +          +    -0.08519313101441 * S_MonthsAsCustomer
1187967   +          +    -0.30576030134683 * S_NumDealsPurchases
1187968   +          +    -0.59860723545409 * S_NumWebVisitsMonth
1187969   +          +    -0.08355373822909 * S_RFMstat  +    -0.22326942617185 *
1187970   +        S_RMntFrq  +     0.80270168032456 * S_Recency
1187971   +          +     0.33480569534819 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.46803354047925 * S_AcceptedCmpTotal + -0.20058439872619 * S_Age 
+ -0.01284299386993 * S_Frq + -0.75016251494757 * S_Income + -0.63339804662862 * S_Kidhome + 
0.20120882029834 * S_MntFishProducts + -0.06230023881104 * S_MntFruits + -0.36454417225574 * 
S_MntGoldProds + 0.02047534293821 * S_MntSweetProducts + -0.08519313101441 * 
S_MonthsAsCustomer + -0.30576030134683 * S_NumDealsPurchases + -0.59860723545409 * 
S_NumWebVisitsMonth + -0.08355373822909 * S_RFMstat + -0.22326942617185 * S_RMntFrq + 
0.80270168032456 * S_Recency + 0.33480569534819 * S_Teenhome ;
1187972   +   H14  =    -0.11750811478204 * S_AcceptedCmpTotal  +     0.08897841506547 *
1187973   +        S_Age  +    -0.58608559771512 * S_Frq  +    -0.97381716235373 *
1187974   +        S_Income  +     0.66694972561255 * S_Kidhome
1187975   +          +     -0.0398036726055 * S_MntFishProducts
1187976   +          +     0.22002314897938 * S_MntFruits  +     0.04732712109048 *
1187977   +        S_MntGoldProds  +     0.26526839421345 * S_MntSweetProducts
1187978   +          +    -0.15403174187172 * S_MonthsAsCustomer
1187979   +          +     0.22820115917371 * S_NumDealsPurchases
1187980   +          +     0.18267832891328 * S_NumWebVisitsMonth
1187981   +          +     -0.0174907884104 * S_RFMstat  +    -0.31876274555503 *
1187982   +        S_RMntFrq  +     0.74433020674409 * S_Recency
1187983   +          +     0.47600648051538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11750811478204 * S_AcceptedCmpTotal + 0.08897841506547 * S_Age 
+ -0.58608559771512 * S_Frq + -0.97381716235373 * S_Income + 0.66694972561255 * S_Kidhome + 
-0.0398036726055 * S_MntFishProducts + 0.22002314897938 * S_MntFruits + 0.04732712109048 * 
S_MntGoldProds + 0.26526839421345 * S_MntSweetProducts + -0.15403174187172 * 
S_MonthsAsCustomer + 0.22820115917371 * S_NumDealsPurchases + 0.18267832891328 * 
S_NumWebVisitsMonth + -0.0174907884104 * S_RFMstat + -0.31876274555503 * S_RMntFrq + 
0.74433020674409 * S_Recency + 0.47600648051538 * S_Teenhome ;
1187984   +   H11  = H11  +     0.21237941475599 * AcceptedCmp10
1187985   +          +     0.04472438427365 * AcceptedCmp20  +     0.17747949289397 *
1187986   +        AcceptedCmp30  +      0.0160283827284 * AcceptedCmp40
1187987   +          +     0.55925432320426 * AcceptedCmp50  +    -0.14142896526953 *
1187988   +        Complain0  +      0.0575110231505 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21237941475599 * AcceptedCmp10 + 0.04472438427365 * 
AcceptedCmp20 + 0.17747949289397 * AcceptedCmp30 + 0.0160283827284 * AcceptedCmp40 + 
0.55925432320426 * AcceptedCmp50 + -0.14142896526953 * Complain0 + 0.0575110231505 * 
HigherEducationBinary0 ;
1187989   +   H12  = H12  +     0.47907390571224 * AcceptedCmp10
1187990   +          +     0.27664153700074 * AcceptedCmp20  +     0.53987959298978 *
1187991   +        AcceptedCmp30  +     0.28087504743344 * AcceptedCmp40
1187992   +          +     0.10391254888041 * AcceptedCmp50  +      -0.141083453381 *
1187993   +        Complain0  +     0.11031418992388 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.47907390571224 * AcceptedCmp10 + 0.27664153700074 * 
AcceptedCmp20 + 0.53987959298978 * AcceptedCmp30 + 0.28087504743344 * AcceptedCmp40 + 
0.10391254888041 * AcceptedCmp50 + -0.141083453381 * Complain0 + 0.11031418992388 * 
HigherEducationBinary0 ;
1187994   +   H13  = H13  +     0.09520651716106 * AcceptedCmp10
1187995   +          +      0.0343715287888 * AcceptedCmp20  +     0.48264670470765 *
1187996   +        AcceptedCmp30  +    -0.73356967665862 * AcceptedCmp40
1187997   +          +     0.43560801503541 * AcceptedCmp50  +     -0.2718667817564 *
1187998   +        Complain0  +     0.07653375459455 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09520651716106 * AcceptedCmp10 + 0.0343715287888 * 
AcceptedCmp20 + 0.48264670470765 * AcceptedCmp30 + -0.73356967665862 * AcceptedCmp40 + 
0.43560801503541 * AcceptedCmp50 + -0.2718667817564 * Complain0 + 0.07653375459455 * 
HigherEducationBinary0 ;
1187999   +   H14  = H14  +     0.18606771308408 * AcceptedCmp10
1188000   +          +     0.10545968088972 * AcceptedCmp20  +     0.28680843470023 *
1188001   +        AcceptedCmp30  +     0.48936354303031 * AcceptedCmp40
1188002   +          +    -0.14408643246427 * AcceptedCmp50  +     0.23450133527378 *
1188003   +        Complain0  +    -0.44927010710705 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18606771308408 * AcceptedCmp10 + 0.10545968088972 * 
AcceptedCmp20 + 0.28680843470023 * AcceptedCmp30 + 0.48936354303031 * AcceptedCmp40 + 
-0.14408643246427 * AcceptedCmp50 + 0.23450133527378 * Complain0 + -0.44927010710705 * 
HigherEducationBinary0 ;
1188004   +   H11  = H11  +    -0.14528524296804 * Education2n_Cycle
1188005   +          +     0.01673408592951 * EducationBasic  +    -0.06429601063979 *
1188006   +        EducationGraduation  +    -0.02622617788078 * EducationMaster
1188007   +          +     0.06024519291122 * Marital_StatusDivorced
1188008   +          +     -0.0819071841309 * Marital_StatusMarried
1188009   +          +     0.42870578507073 * Marital_StatusSingle
1188010   +          +      0.4051129562668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14528524296804 * Education2n_Cycle + 0.01673408592951 * 
EducationBasic + -0.06429601063979 * EducationGraduation + -0.02622617788078 * EducationMaster 
+ 0.06024519291122 * Marital_StatusDivorced + -0.0819071841309 * Marital_StatusMarried + 
0.42870578507073 * Marital_StatusSingle + 0.4051129562668 * Marital_StatusTogether ;
1188011   +   H12  = H12  +     0.28210673900541 * Education2n_Cycle
1188012   +          +    -0.02393077028847 * EducationBasic  +    -0.10389902860327 *
1188013   +        EducationGraduation  +    -0.14877703838953 * EducationMaster
1188014   +          +    -0.13856018901636 * Marital_StatusDivorced
1188015   +          +     0.10012984585302 * Marital_StatusMarried
1188016   +          +     0.02921741368356 * Marital_StatusSingle
1188017   +          +     0.13848478656523 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.28210673900541 * Education2n_Cycle + -0.02393077028847 * 
EducationBasic + -0.10389902860327 * EducationGraduation + -0.14877703838953 * EducationMaster 
+ -0.13856018901636 * Marital_StatusDivorced + 0.10012984585302 * Marital_StatusMarried + 
0.02921741368356 * Marital_StatusSingle + 0.13848478656523 * Marital_StatusTogether ;
1188018   +   H13  = H13  +      0.0183013852099 * Education2n_Cycle
1188019   +          +     0.43125570378811 * EducationBasic  +    -0.31392526432015 *
1188020   +        EducationGraduation  +      0.0753944289648 * EducationMaster
1188021   +          +    -0.23239586980133 * Marital_StatusDivorced
1188022   +          +      0.1253994554645 * Marital_StatusMarried
1188023   +          +    -0.33648409660062 * Marital_StatusSingle
1188024   +          +    -0.14353309021619 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0183013852099 * Education2n_Cycle + 0.43125570378811 * 
EducationBasic + -0.31392526432015 * EducationGraduation + 0.0753944289648 * EducationMaster + 
-0.23239586980133 * Marital_StatusDivorced + 0.1253994554645 * Marital_StatusMarried + 
-0.33648409660062 * Marital_StatusSingle + -0.14353309021619 * Marital_StatusTogether ;
1188025   +   H14  = H14  +    -0.13261661281439 * Education2n_Cycle
1188026   +          +     0.12513764082187 * EducationBasic  +    -0.21826807057488 *
1188027   +        EducationGraduation  +     0.25426016549852 * EducationMaster
1188028   +          +    -0.20018638821233 * Marital_StatusDivorced
1188029   +          +     1.07213214578803 * Marital_StatusMarried
1188030   +          +    -0.78089608097635 * Marital_StatusSingle
1188031   +          +      0.8652598562973 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13261661281439 * Education2n_Cycle + 0.12513764082187 * 
EducationBasic + -0.21826807057488 * EducationGraduation + 0.25426016549852 * EducationMaster 
+ -0.20018638821233 * Marital_StatusDivorced + 1.07213214578803 * Marital_StatusMarried + 
-0.78089608097635 * Marital_StatusSingle + 0.8652598562973 * Marital_StatusTogether ;
1188032   +   H11  =      0.6839700017137 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.6839700017137 + H11 ;
1188033   +   H12  =     0.88439108697567 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88439108697567 + H12 ;
1188034   +   H13  =    -0.21745653885035 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.21745653885035 + H13 ;
1188035   +   H14  =     1.53290685706631 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.53290685706631 + H14 ;
1188036   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1188037   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1188038   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1188039   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1188040   +END;
MPRINT(EM_DIAGRAM):   END;
1188041   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1188042   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1188043   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1188044   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1188045   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1188046   +END;
MPRINT(EM_DIAGRAM):   END;
1188047   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188048   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1188049   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188050   +
1188051   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1188052   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1188053   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1188054   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1188055   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1188056   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188057   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1188058   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1188059   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1188060   +end;
MPRINT(EM_DIAGRAM):   end;
1188061   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188062   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1188063   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1188064   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1188065   +   end;
MPRINT(EM_DIAGRAM):   end;
1188066   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1188067   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1188068   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1188069   +   end;
MPRINT(EM_DIAGRAM):   end;
1188070   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188071   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1188072   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1188073   +   end;
MPRINT(EM_DIAGRAM):   end;
1188074   +end;
MPRINT(EM_DIAGRAM):   end;
1188075   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1188076   +   P_DepVar1  =    -1.02007256907977 * H11  +    -1.79638089167371 * H12
1188077   +          +    -2.67778063761069 * H13  +    -2.40349387174856 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.02007256907977 * H11 + -1.79638089167371 * H12 + 
-2.67778063761069 * H13 + -2.40349387174856 * H14 ;
1188078   +   P_DepVar1  =    -0.89818574956639 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.89818574956639 + P_DepVar1 ;
1188079   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1188080   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1188081   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1188082   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1188083   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1188084   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1188085   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1188086   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1188087   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1188088   +END;
MPRINT(EM_DIAGRAM):   END;
1188089   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1188090   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1188091   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1188092   +END;
MPRINT(EM_DIAGRAM):   END;
1188093   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1188094   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1188095   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1188096   +END;
MPRINT(EM_DIAGRAM):   END;
1188097   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1188098   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1188099   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1188100   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1188101   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1188102   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1188103   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1188104   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188105   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1188106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188107   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1188108   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1188109   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1188110   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1188111   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1188112   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1188113   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1188114   +END;
MPRINT(EM_DIAGRAM):   END;
1188115   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1188116   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1188117   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1188118   +drop
1188119   +H11
1188120   +H12
1188121   +H13
1188122   +H14
1188123   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1188124   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1188125    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL39_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1188126    quit;
1188127    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1188128    filename emflow
1188128  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural39: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1188129    *------------------------------------------------------------*;
1188130    * Neural39: Scoring VALIDATE data;
1188131    *------------------------------------------------------------*;
1188132    data EMWS8.Neural39_VALIDATE
1188133    / view=EMWS8.Neural39_VALIDATE
1188134    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_VALIDATE / view=EMWS8.Neural39_VALIDATE ;
1188135    set EMWS8.Meta3_VALIDATE
1188136    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
1188137    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMFLOWSCORE.sas.
1188138   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1188139   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1188140   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1188141   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1188142   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1188143   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1188144   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1188145   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1188146   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1188147   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1188148   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1188149   +LENGTH _WARN_ $4
1188150   +      F_DepVar  $ 12
1188151   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1188152   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1188153   +
1188154   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1188155   +
1188156   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1188157   +
1188158   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1188159   +
1188160   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1188161   +
1188162   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1188163   +
1188164   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1188165   +
1188166   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1188167   +
1188168   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1188169   +
1188170   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1188171   +
1188172   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1188173   +
1188174   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1188175   +
1188176   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1188177   +
1188178   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1188179   +
1188180   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1188181   +
1188182   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1188183   +
1188184   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1188185   +
1188186   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1188187   +
1188188   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1188189   +
1188190   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1188191   +
1188192   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1188193   +
1188194   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1188195   +
1188196   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1188197   +
1188198   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1188199   +
1188200   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1188201   +
1188202   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1188203   +
1188204   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1188205   +
1188206   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1188207   +
1188208   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1188209   +
1188210   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1188211   +
1188212   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1188213   +
1188214   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1188215   +
1188216   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1188217   +
1188218   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1188219   +
1188220   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1188221   +
1188222   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1188223   +
1188224   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1188225   +
1188226   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1188227   +
1188228   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1188229   +
1188230   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1188231   +
1188232   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1188233   +
1188234   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1188235   +
1188236   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1188237   +
1188238   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1188239   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1188240   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1188241   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1188242   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188243   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188244   +end;
MPRINT(EM_DIAGRAM):   end;
1188245   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188246   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188247   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1188248   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188249   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1188250   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1188251   +   end;
MPRINT(EM_DIAGRAM):   end;
1188252   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1188253   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1188254   +   end;
MPRINT(EM_DIAGRAM):   end;
1188255   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188256   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1188257   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188258   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188259   +   end;
MPRINT(EM_DIAGRAM):   end;
1188260   +end;
MPRINT(EM_DIAGRAM):   end;
1188261   +
1188262   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1188263   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1188264   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1188265   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1188266   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188267   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188268   +end;
MPRINT(EM_DIAGRAM):   end;
1188269   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188270   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188271   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1188272   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188273   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1188274   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1188275   +   end;
MPRINT(EM_DIAGRAM):   end;
1188276   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1188277   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1188278   +   end;
MPRINT(EM_DIAGRAM):   end;
1188279   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188280   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1188281   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188282   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188283   +   end;
MPRINT(EM_DIAGRAM):   end;
1188284   +end;
MPRINT(EM_DIAGRAM):   end;
1188285   +
1188286   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1188287   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1188288   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1188289   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1188290   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188291   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188292   +end;
MPRINT(EM_DIAGRAM):   end;
1188293   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188294   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188295   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1188296   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188297   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1188298   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1188299   +   end;
MPRINT(EM_DIAGRAM):   end;
1188300   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1188301   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1188302   +   end;
MPRINT(EM_DIAGRAM):   end;
1188303   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188304   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1188305   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188306   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188307   +   end;
MPRINT(EM_DIAGRAM):   end;
1188308   +end;
MPRINT(EM_DIAGRAM):   end;
1188309   +
1188310   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1188311   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1188312   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1188313   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1188314   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188315   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188316   +end;
MPRINT(EM_DIAGRAM):   end;
1188317   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188318   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188319   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1188320   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188321   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1188322   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1188323   +   end;
MPRINT(EM_DIAGRAM):   end;
1188324   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1188325   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1188326   +   end;
MPRINT(EM_DIAGRAM):   end;
1188327   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188328   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1188329   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188330   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188331   +   end;
MPRINT(EM_DIAGRAM):   end;
1188332   +end;
MPRINT(EM_DIAGRAM):   end;
1188333   +
1188334   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1188335   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1188336   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1188337   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1188338   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188339   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188340   +end;
MPRINT(EM_DIAGRAM):   end;
1188341   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188342   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188343   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1188344   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188345   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1188346   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1188347   +   end;
MPRINT(EM_DIAGRAM):   end;
1188348   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1188349   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1188350   +   end;
MPRINT(EM_DIAGRAM):   end;
1188351   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188352   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1188353   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188354   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188355   +   end;
MPRINT(EM_DIAGRAM):   end;
1188356   +end;
MPRINT(EM_DIAGRAM):   end;
1188357   +
1188358   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1188359   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1188360   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1188361   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1188362   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188363   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188364   +end;
MPRINT(EM_DIAGRAM):   end;
1188365   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188366   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188367   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1188368   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188369   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1188370   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1188371   +   end;
MPRINT(EM_DIAGRAM):   end;
1188372   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1188373   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1188374   +   end;
MPRINT(EM_DIAGRAM):   end;
1188375   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188376   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1188377   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188378   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188379   +   end;
MPRINT(EM_DIAGRAM):   end;
1188380   +end;
MPRINT(EM_DIAGRAM):   end;
1188381   +
1188382   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1188383   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1188384   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1188385   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1188386   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188387   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188388   +end;
MPRINT(EM_DIAGRAM):   end;
1188389   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188390   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188391   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1188392   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188393   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1188394   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1188395   +   end;
MPRINT(EM_DIAGRAM):   end;
1188396   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1188397   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1188398   +   end;
MPRINT(EM_DIAGRAM):   end;
1188399   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188400   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1188401   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188402   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188403   +   end;
MPRINT(EM_DIAGRAM):   end;
1188404   +end;
MPRINT(EM_DIAGRAM):   end;
1188405   +
1188406   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1188407   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1188408   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1188409   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1188410   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1188411   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1188412   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1188413   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1188414   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1188415   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1188416   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1188417   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1188418   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188419   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188420   +end;
MPRINT(EM_DIAGRAM):   end;
1188421   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188422   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1188423   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1188424   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188425   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1188426   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1188427   +   end;
MPRINT(EM_DIAGRAM):   end;
1188428   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1188429   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1188430   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1188431   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1188432   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1188433   +   end;
MPRINT(EM_DIAGRAM):   end;
1188434   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1188435   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1188436   +   end;
MPRINT(EM_DIAGRAM):   end;
1188437   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1188438   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1188439   +   end;
MPRINT(EM_DIAGRAM):   end;
1188440   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1188441   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1188442   +   end;
MPRINT(EM_DIAGRAM):   end;
1188443   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188444   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1188445   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1188446   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1188447   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1188448   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188449   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188450   +   end;
MPRINT(EM_DIAGRAM):   end;
1188451   +end;
MPRINT(EM_DIAGRAM):   end;
1188452   +
1188453   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1188454   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1188455   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1188456   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1188457   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1188458   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1188459   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1188460   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1188461   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1188462   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1188463   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1188464   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1188465   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1188466   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188467   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188468   +end;
MPRINT(EM_DIAGRAM):   end;
1188469   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188470   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1188471   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1188472   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188473   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1188474   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1188475   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1188476   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1188477   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1188478   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1188479   +         end;
MPRINT(EM_DIAGRAM):   end;
1188480   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1188481   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1188482   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1188483   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1188484   +            end;
MPRINT(EM_DIAGRAM):   end;
1188485   +         end;
MPRINT(EM_DIAGRAM):   end;
1188486   +      end;
MPRINT(EM_DIAGRAM):   end;
1188487   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1188488   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1188489   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1188490   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1188491   +         end;
MPRINT(EM_DIAGRAM):   end;
1188492   +      end;
MPRINT(EM_DIAGRAM):   end;
1188493   +   end;
MPRINT(EM_DIAGRAM):   end;
1188494   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188495   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1188496   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1188497   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1188498   +      end;
MPRINT(EM_DIAGRAM):   end;
1188499   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1188500   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1188501   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1188502   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1188503   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1188504   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1188505   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1188506   +         end;
MPRINT(EM_DIAGRAM):   end;
1188507   +      end;
MPRINT(EM_DIAGRAM):   end;
1188508   +   end;
MPRINT(EM_DIAGRAM):   end;
1188509   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1188510   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1188511   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1188512   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1188513   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1188514   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188515   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188516   +   end;
MPRINT(EM_DIAGRAM):   end;
1188517   +end;
MPRINT(EM_DIAGRAM):   end;
1188518   +
1188519   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188520   +*** Checking missing input Interval
1188521   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1188522   +
1188523   +IF NMISS(
1188524   +   AcceptedCmpTotal ,
1188525   +   Age ,
1188526   +   Frq ,
1188527   +   Income ,
1188528   +   Kidhome ,
1188529   +   MntFishProducts ,
1188530   +   MntFruits ,
1188531   +   MntGoldProds ,
1188532   +   MntSweetProducts ,
1188533   +   MonthsAsCustomer ,
1188534   +   NumDealsPurchases ,
1188535   +   NumWebVisitsMonth ,
1188536   +   RFMstat ,
1188537   +   RMntFrq ,
1188538   +   Recency ,
1188539   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1188540   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1188541   +
1188542   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188543   +END;
MPRINT(EM_DIAGRAM):   END;
1188544   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188545   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1188546   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188547   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1188548   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1188549   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1188550   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1188551   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1188552   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1188553   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1188554   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1188555   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1188556   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1188557   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1188558   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1188559   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1188560   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1188561   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1188562   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1188563   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1188564   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1188565   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1188566   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1188567   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1188568   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1188569   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1188570   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1188571   +END;
MPRINT(EM_DIAGRAM):   END;
1188572   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1188573   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1188574   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1188575   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1188576   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1188577   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1188578   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1188579   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1188580   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1188581   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1188582   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1188583   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1188584   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1188585   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1188586   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1188587   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1188588   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1188589   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1188590   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1188591   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1188592   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1188593   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1188594   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1188595   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1188596   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1188597   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1188598   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1188599   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1188600   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1188601   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1188602   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1188603   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1188604   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1188605   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1188606   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1188607   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1188608   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1188609   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1188610   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1188611   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1188612   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1188613   +END;
MPRINT(EM_DIAGRAM):   END;
1188614   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188615   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1188616   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188617   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188618   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1188619   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188621   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1188622   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188623   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1188624   +   H11  =    -0.59512924851551 * S_AcceptedCmpTotal  +     -0.0822975295273 *
1188625   +        S_Age  +     0.34777744436504 * S_Frq  +     0.07942025641822 *
1188626   +        S_Income  +     0.23721647978534 * S_Kidhome
1188627   +          +    -0.02271798884661 * S_MntFishProducts
1188628   +          +     0.08807309980934 * S_MntFruits  +     0.19069006902766 *
1188629   +        S_MntGoldProds  +     0.10910458513653 * S_MntSweetProducts
1188630   +          +     -0.2712400716804 * S_MonthsAsCustomer
1188631   +          +    -0.53936896531209 * S_NumDealsPurchases
1188632   +          +    -0.35925915934577 * S_NumWebVisitsMonth
1188633   +          +    -0.08622629924361 * S_RFMstat  +     0.25394591780904 *
1188634   +        S_RMntFrq  +     0.69890372536214 * S_Recency
1188635   +          +     0.13643980298627 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59512924851551 * S_AcceptedCmpTotal + -0.0822975295273 * S_Age 
+ 0.34777744436504 * S_Frq + 0.07942025641822 * S_Income + 0.23721647978534 * S_Kidhome + 
-0.02271798884661 * S_MntFishProducts + 0.08807309980934 * S_MntFruits + 0.19069006902766 * 
S_MntGoldProds + 0.10910458513653 * S_MntSweetProducts + -0.2712400716804 * S_MonthsAsCustomer 
+ -0.53936896531209 * S_NumDealsPurchases + -0.35925915934577 * S_NumWebVisitsMonth + 
-0.08622629924361 * S_RFMstat + 0.25394591780904 * S_RMntFrq + 0.69890372536214 * S_Recency + 
0.13643980298627 * S_Teenhome ;
1188636   +   H12  =     -0.1829764834163 * S_AcceptedCmpTotal  +      0.5150125387492 *
1188637   +        S_Age  +     0.98578880139347 * S_Frq  +     0.35785305967975 *
1188638   +        S_Income  +     0.08668934262602 * S_Kidhome
1188639   +          +     -0.1992601670046 * S_MntFishProducts
1188640   +          +     0.01629264862515 * S_MntFruits  +    -0.03025350824332 *
1188641   +        S_MntGoldProds  +    -0.38227262001553 * S_MntSweetProducts
1188642   +          +     0.30116770365349 * S_MonthsAsCustomer
1188643   +          +    -0.46000379214601 * S_NumDealsPurchases
1188644   +          +    -0.73085067864835 * S_NumWebVisitsMonth
1188645   +          +    -0.22923275570367 * S_RFMstat  +     -0.5046307291648 *
1188646   +        S_RMntFrq  +     1.05223220143096 * S_Recency
1188647   +          +    -0.17002078495363 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.1829764834163 * S_AcceptedCmpTotal + 0.5150125387492 * S_Age + 
0.98578880139347 * S_Frq + 0.35785305967975 * S_Income + 0.08668934262602 * S_Kidhome + 
-0.1992601670046 * S_MntFishProducts + 0.01629264862515 * S_MntFruits + -0.03025350824332 * 
S_MntGoldProds + -0.38227262001553 * S_MntSweetProducts + 0.30116770365349 * 
S_MonthsAsCustomer + -0.46000379214601 * S_NumDealsPurchases + -0.73085067864835 * 
S_NumWebVisitsMonth + -0.22923275570367 * S_RFMstat + -0.5046307291648 * S_RMntFrq + 
1.05223220143096 * S_Recency + -0.17002078495363 * S_Teenhome ;
1188648   +   H13  =    -0.46803354047925 * S_AcceptedCmpTotal  +    -0.20058439872619 *
1188649   +        S_Age  +    -0.01284299386993 * S_Frq  +    -0.75016251494757 *
1188650   +        S_Income  +    -0.63339804662862 * S_Kidhome
1188651   +          +     0.20120882029834 * S_MntFishProducts
1188652   +          +    -0.06230023881104 * S_MntFruits  +    -0.36454417225574 *
1188653   +        S_MntGoldProds  +     0.02047534293821 * S_MntSweetProducts
1188654   +          +    -0.08519313101441 * S_MonthsAsCustomer
1188655   +          +    -0.30576030134683 * S_NumDealsPurchases
1188656   +          +    -0.59860723545409 * S_NumWebVisitsMonth
1188657   +          +    -0.08355373822909 * S_RFMstat  +    -0.22326942617185 *
1188658   +        S_RMntFrq  +     0.80270168032456 * S_Recency
1188659   +          +     0.33480569534819 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.46803354047925 * S_AcceptedCmpTotal + -0.20058439872619 * S_Age 
+ -0.01284299386993 * S_Frq + -0.75016251494757 * S_Income + -0.63339804662862 * S_Kidhome + 
0.20120882029834 * S_MntFishProducts + -0.06230023881104 * S_MntFruits + -0.36454417225574 * 
S_MntGoldProds + 0.02047534293821 * S_MntSweetProducts + -0.08519313101441 * 
S_MonthsAsCustomer + -0.30576030134683 * S_NumDealsPurchases + -0.59860723545409 * 
S_NumWebVisitsMonth + -0.08355373822909 * S_RFMstat + -0.22326942617185 * S_RMntFrq + 
0.80270168032456 * S_Recency + 0.33480569534819 * S_Teenhome ;
1188660   +   H14  =    -0.11750811478204 * S_AcceptedCmpTotal  +     0.08897841506547 *
1188661   +        S_Age  +    -0.58608559771512 * S_Frq  +    -0.97381716235373 *
1188662   +        S_Income  +     0.66694972561255 * S_Kidhome
1188663   +          +     -0.0398036726055 * S_MntFishProducts
1188664   +          +     0.22002314897938 * S_MntFruits  +     0.04732712109048 *
1188665   +        S_MntGoldProds  +     0.26526839421345 * S_MntSweetProducts
1188666   +          +    -0.15403174187172 * S_MonthsAsCustomer
1188667   +          +     0.22820115917371 * S_NumDealsPurchases
1188668   +          +     0.18267832891328 * S_NumWebVisitsMonth
1188669   +          +     -0.0174907884104 * S_RFMstat  +    -0.31876274555503 *
1188670   +        S_RMntFrq  +     0.74433020674409 * S_Recency
1188671   +          +     0.47600648051538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11750811478204 * S_AcceptedCmpTotal + 0.08897841506547 * S_Age 
+ -0.58608559771512 * S_Frq + -0.97381716235373 * S_Income + 0.66694972561255 * S_Kidhome + 
-0.0398036726055 * S_MntFishProducts + 0.22002314897938 * S_MntFruits + 0.04732712109048 * 
S_MntGoldProds + 0.26526839421345 * S_MntSweetProducts + -0.15403174187172 * 
S_MonthsAsCustomer + 0.22820115917371 * S_NumDealsPurchases + 0.18267832891328 * 
S_NumWebVisitsMonth + -0.0174907884104 * S_RFMstat + -0.31876274555503 * S_RMntFrq + 
0.74433020674409 * S_Recency + 0.47600648051538 * S_Teenhome ;
1188672   +   H11  = H11  +     0.21237941475599 * AcceptedCmp10
1188673   +          +     0.04472438427365 * AcceptedCmp20  +     0.17747949289397 *
1188674   +        AcceptedCmp30  +      0.0160283827284 * AcceptedCmp40
1188675   +          +     0.55925432320426 * AcceptedCmp50  +    -0.14142896526953 *
1188676   +        Complain0  +      0.0575110231505 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21237941475599 * AcceptedCmp10 + 0.04472438427365 * 
AcceptedCmp20 + 0.17747949289397 * AcceptedCmp30 + 0.0160283827284 * AcceptedCmp40 + 
0.55925432320426 * AcceptedCmp50 + -0.14142896526953 * Complain0 + 0.0575110231505 * 
HigherEducationBinary0 ;
1188677   +   H12  = H12  +     0.47907390571224 * AcceptedCmp10
1188678   +          +     0.27664153700074 * AcceptedCmp20  +     0.53987959298978 *
1188679   +        AcceptedCmp30  +     0.28087504743344 * AcceptedCmp40
1188680   +          +     0.10391254888041 * AcceptedCmp50  +      -0.141083453381 *
1188681   +        Complain0  +     0.11031418992388 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.47907390571224 * AcceptedCmp10 + 0.27664153700074 * 
AcceptedCmp20 + 0.53987959298978 * AcceptedCmp30 + 0.28087504743344 * AcceptedCmp40 + 
0.10391254888041 * AcceptedCmp50 + -0.141083453381 * Complain0 + 0.11031418992388 * 
HigherEducationBinary0 ;
1188682   +   H13  = H13  +     0.09520651716106 * AcceptedCmp10
1188683   +          +      0.0343715287888 * AcceptedCmp20  +     0.48264670470765 *
1188684   +        AcceptedCmp30  +    -0.73356967665862 * AcceptedCmp40
1188685   +          +     0.43560801503541 * AcceptedCmp50  +     -0.2718667817564 *
1188686   +        Complain0  +     0.07653375459455 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09520651716106 * AcceptedCmp10 + 0.0343715287888 * 
AcceptedCmp20 + 0.48264670470765 * AcceptedCmp30 + -0.73356967665862 * AcceptedCmp40 + 
0.43560801503541 * AcceptedCmp50 + -0.2718667817564 * Complain0 + 0.07653375459455 * 
HigherEducationBinary0 ;
1188687   +   H14  = H14  +     0.18606771308408 * AcceptedCmp10
1188688   +          +     0.10545968088972 * AcceptedCmp20  +     0.28680843470023 *
1188689   +        AcceptedCmp30  +     0.48936354303031 * AcceptedCmp40
1188690   +          +    -0.14408643246427 * AcceptedCmp50  +     0.23450133527378 *
1188691   +        Complain0  +    -0.44927010710705 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18606771308408 * AcceptedCmp10 + 0.10545968088972 * 
AcceptedCmp20 + 0.28680843470023 * AcceptedCmp30 + 0.48936354303031 * AcceptedCmp40 + 
-0.14408643246427 * AcceptedCmp50 + 0.23450133527378 * Complain0 + -0.44927010710705 * 
HigherEducationBinary0 ;
1188692   +   H11  = H11  +    -0.14528524296804 * Education2n_Cycle
1188693   +          +     0.01673408592951 * EducationBasic  +    -0.06429601063979 *
1188694   +        EducationGraduation  +    -0.02622617788078 * EducationMaster
1188695   +          +     0.06024519291122 * Marital_StatusDivorced
1188696   +          +     -0.0819071841309 * Marital_StatusMarried
1188697   +          +     0.42870578507073 * Marital_StatusSingle
1188698   +          +      0.4051129562668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14528524296804 * Education2n_Cycle + 0.01673408592951 * 
EducationBasic + -0.06429601063979 * EducationGraduation + -0.02622617788078 * EducationMaster 
+ 0.06024519291122 * Marital_StatusDivorced + -0.0819071841309 * Marital_StatusMarried + 
0.42870578507073 * Marital_StatusSingle + 0.4051129562668 * Marital_StatusTogether ;
1188699   +   H12  = H12  +     0.28210673900541 * Education2n_Cycle
1188700   +          +    -0.02393077028847 * EducationBasic  +    -0.10389902860327 *
1188701   +        EducationGraduation  +    -0.14877703838953 * EducationMaster
1188702   +          +    -0.13856018901636 * Marital_StatusDivorced
1188703   +          +     0.10012984585302 * Marital_StatusMarried
1188704   +          +     0.02921741368356 * Marital_StatusSingle
1188705   +          +     0.13848478656523 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.28210673900541 * Education2n_Cycle + -0.02393077028847 * 
EducationBasic + -0.10389902860327 * EducationGraduation + -0.14877703838953 * EducationMaster 
+ -0.13856018901636 * Marital_StatusDivorced + 0.10012984585302 * Marital_StatusMarried + 
0.02921741368356 * Marital_StatusSingle + 0.13848478656523 * Marital_StatusTogether ;
1188706   +   H13  = H13  +      0.0183013852099 * Education2n_Cycle
1188707   +          +     0.43125570378811 * EducationBasic  +    -0.31392526432015 *
1188708   +        EducationGraduation  +      0.0753944289648 * EducationMaster
1188709   +          +    -0.23239586980133 * Marital_StatusDivorced
1188710   +          +      0.1253994554645 * Marital_StatusMarried
1188711   +          +    -0.33648409660062 * Marital_StatusSingle
1188712   +          +    -0.14353309021619 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0183013852099 * Education2n_Cycle + 0.43125570378811 * 
EducationBasic + -0.31392526432015 * EducationGraduation + 0.0753944289648 * EducationMaster + 
-0.23239586980133 * Marital_StatusDivorced + 0.1253994554645 * Marital_StatusMarried + 
-0.33648409660062 * Marital_StatusSingle + -0.14353309021619 * Marital_StatusTogether ;
1188713   +   H14  = H14  +    -0.13261661281439 * Education2n_Cycle
1188714   +          +     0.12513764082187 * EducationBasic  +    -0.21826807057488 *
1188715   +        EducationGraduation  +     0.25426016549852 * EducationMaster
1188716   +          +    -0.20018638821233 * Marital_StatusDivorced
1188717   +          +     1.07213214578803 * Marital_StatusMarried
1188718   +          +    -0.78089608097635 * Marital_StatusSingle
1188719   +          +      0.8652598562973 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13261661281439 * Education2n_Cycle + 0.12513764082187 * 
EducationBasic + -0.21826807057488 * EducationGraduation + 0.25426016549852 * EducationMaster 
+ -0.20018638821233 * Marital_StatusDivorced + 1.07213214578803 * Marital_StatusMarried + 
-0.78089608097635 * Marital_StatusSingle + 0.8652598562973 * Marital_StatusTogether ;
1188720   +   H11  =      0.6839700017137 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.6839700017137 + H11 ;
1188721   +   H12  =     0.88439108697567 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88439108697567 + H12 ;
1188722   +   H13  =    -0.21745653885035 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.21745653885035 + H13 ;
1188723   +   H14  =     1.53290685706631 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.53290685706631 + H14 ;
1188724   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1188725   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1188726   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1188727   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1188728   +END;
MPRINT(EM_DIAGRAM):   END;
1188729   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1188730   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1188731   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1188732   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1188733   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1188734   +END;
MPRINT(EM_DIAGRAM):   END;
1188735   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188736   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1188737   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188738   +
1188739   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1188740   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1188741   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1188742   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1188743   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1188744   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188745   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1188746   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1188747   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1188748   +end;
MPRINT(EM_DIAGRAM):   end;
1188749   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188750   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1188751   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1188752   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1188753   +   end;
MPRINT(EM_DIAGRAM):   end;
1188754   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1188755   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1188756   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1188757   +   end;
MPRINT(EM_DIAGRAM):   end;
1188758   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188759   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1188760   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1188761   +   end;
MPRINT(EM_DIAGRAM):   end;
1188762   +end;
MPRINT(EM_DIAGRAM):   end;
1188763   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1188764   +   P_DepVar1  =    -1.02007256907977 * H11  +    -1.79638089167371 * H12
1188765   +          +    -2.67778063761069 * H13  +    -2.40349387174856 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.02007256907977 * H11 + -1.79638089167371 * H12 + 
-2.67778063761069 * H13 + -2.40349387174856 * H14 ;
1188766   +   P_DepVar1  =    -0.89818574956639 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.89818574956639 + P_DepVar1 ;
1188767   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1188768   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1188769   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1188770   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1188771   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1188772   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1188773   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1188774   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1188775   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1188776   +END;
MPRINT(EM_DIAGRAM):   END;
1188777   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1188778   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1188779   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1188780   +END;
MPRINT(EM_DIAGRAM):   END;
1188781   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1188782   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1188783   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1188784   +END;
MPRINT(EM_DIAGRAM):   END;
1188785   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1188786   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1188787   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1188788   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1188789   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1188790   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1188791   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1188792   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188793   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1188794   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188795   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1188796   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1188797   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1188798   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1188799   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1188800   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1188801   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1188802   +END;
MPRINT(EM_DIAGRAM):   END;
1188803   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1188804   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1188805   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1188806   +drop
1188807   +H11
1188808   +H12
1188809   +H13
1188810   +H14
1188811   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1188812   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1188813    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL39_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1188814    quit;
1188815    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1188816    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1188817    * Neural39: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural39: Computing metadata for TRAIN data;
1188818    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL39_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural39_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural39_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural39_TRAIN out=WORK.M14X588V noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M14X588V;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M14X588V(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M14X588V;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M14X588V;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1TZGE5P NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TZGE5P;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TZGE5P;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0ZNZ3IE(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TZGE5P;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TZGE5P;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TZGE5P;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TZGE5P;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TZGE5P;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural39";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural39";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural39";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural39: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1189130    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1189131    set EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_EMINFO;
1189132    where DATA='Neural39' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural39' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1189133    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL39_EMINFO.
      WHERE (DATA='Neural39') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1189134    data EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural39_EMINFO;
1189135    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1189136    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1189137    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL39_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1189141    run;
1189142    data EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_EMINFO;
1189143    set EMWS8.Neural39_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_EMINFO WORK.MODELTEMP_INFO;
1189144    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL39_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL39_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1189145    proc sort data = EMWS8.Neural39_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural39_EMINFO NOTHREADS;
1189146    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1189147    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL39_EMINFO.
NOTE: The data set EMWS8.NEURAL39_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1189148    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1189149    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1189150    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1189151    proc sort data = EMWS8.Neural39_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural39_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1189152    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1189153    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL39_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1189154    data EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural39_EMINFO;
1189155    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1189156    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1189157    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL39_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1189158    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1189159    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1189160    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1189161    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.NEURAL39_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL39_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
