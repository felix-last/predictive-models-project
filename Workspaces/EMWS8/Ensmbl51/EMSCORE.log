MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.22 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
The SAS System

* Score Log
Date:                28. April 2016
Time:                12.22 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O33F7OI2 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl51\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O33F7OI2 new;
MPRINT(EM_DIAGRAM):   run;
1130589    filename emflow
1130589  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl51\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl51\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Scoring AUTONEURAL29_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130590    *------------------------------------------------------------*;
1130591    * Ensmbl51: Scoring AUTONEURAL29_TRAIN data;
1130592    *------------------------------------------------------------*;
1130593    data EMWS8.Ensmbl51_TRAIN
1130594    / view=EMWS8.Ensmbl51_TRAIN
1130595    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl51_TRAIN / view=EMWS8.Ensmbl51_TRAIN ;
1130596    set EMWS8.AutoNeural29_TRAIN
1130597    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural29_TRAIN ;
1130598    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl51\EMFLOWSCORE.sas.
1130599   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130600   +* Ensmbl51: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Combine model for DepVar;
1130601   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130602   +* Ensmbl51: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Scoring Code of model 1 of 7;
1130603   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130604   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130605   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1130606   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1130607   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1130608   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130609   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130610   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1130611   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1130612   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1130613   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130614   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130615   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1130616   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1130617   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1130618   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130619   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130620   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1130621   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1130622   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1130623   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130624   +
1130625   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1130626   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1130626  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1130627   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1130628   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1130629   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1130630   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1130631   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1130632   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130633   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1130634   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1130635   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1130636   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130637   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130638   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1130639   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130640   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1130641   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1130642   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1130643   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130644   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1130645   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1130646   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1130647   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130648   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130649   +* TOOL: Variable selection Class;
MPRINT(EM_DIAGRAM):   * TOOL: Variable selection Class;
1130650   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1130651   +* NODE: Varsel;
MPRINT(EM_DIAGRAM):   * NODE: Varsel;
1130652   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130653   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1130654   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1130655   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1130656   +
1130657   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1130658   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1130659   +
1130660   +
1130661   +/*----G_Marital_Status begin----*/
1130662   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   length _NORM8 $ 8;
1130663   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1130664   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1130665   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1130666   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1130667   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1130668   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1130669   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1130670   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1130671   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1130672   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1130673   +end;
MPRINT(EM_DIAGRAM):   end;
1130674   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status= "Grouped Levels for Marital_Status";
1130675   +/*----G_Marital_Status end----*/
1130676   +
1130677   +
1130678   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1130679   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1130680   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1130681   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130682   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1130683   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1130684   +* NODE: AutoNeural29;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural29;
1130685   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130686   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1130687   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1130688   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1130689   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1130690   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1130691   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1130692   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1130693   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1130694   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1130695   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1130696   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1130697   +LENGTH _WARN_ $4
1130698   +      F_DepVar  $ 12
1130699   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1130700   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1130701   +
1130702   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1130703   +
1130704   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1130705   +
1130706   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1130707   +
1130708   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1130709   +
1130710   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1130711   +
1130712   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1130713   +
1130714   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1130715   +
1130716   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1130717   +
1130718   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1130719   +
1130720   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1130721   +
1130722   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1130723   +
1130724   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1130725   +
1130726   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1130727   +
1130728   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1130729   +
1130730   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1130731   +
1130732   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1130733   +
1130734   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1130735   +
1130736   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1130737   +
1130738   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1130739   +
1130740   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1130741   +
1130742   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1130743   +
1130744   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1130745   +
1130746   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1130747   +
1130748   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1130749   +
1130750   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1130751   +
1130752   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1130753   +
1130754   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1130755   +
1130756   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1130757   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1130758   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1130759   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1130760   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1130761   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1130762   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130763   +end;
MPRINT(EM_DIAGRAM):   end;
1130764   +else do;
MPRINT(EM_DIAGRAM):   else do;
1130765   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1130766   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1130767   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1130768   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1130769   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1130770   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1130771   +   end;
MPRINT(EM_DIAGRAM):   end;
1130772   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1130773   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1130774   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1130775   +   end;
MPRINT(EM_DIAGRAM):   end;
1130776   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1130777   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1130778   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1130779   +   end;
MPRINT(EM_DIAGRAM):   end;
1130780   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1130781   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1130782   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1130783   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1130784   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130785   +   end;
MPRINT(EM_DIAGRAM):   end;
1130786   +end;
MPRINT(EM_DIAGRAM):   end;
1130787   +
1130788   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130789   +*** Checking missing input Interval
1130790   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1130791   +
1130792   +IF NMISS(
1130793   +   AcceptedCmpTotal ,
1130794   +   Frq ,
1130795   +   Income ,
1130796   +   Mnt ,
1130797   +   MntGoldProds ,
1130798   +   MntMeatProducts ,
1130799   +   MntWines ,
1130800   +   NumDistPurchases ,
1130801   +   RFMstat ,
1130802   +   RMntFrq ,
1130803   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1130804   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1130805   +
1130806   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130807   +END;
MPRINT(EM_DIAGRAM):   END;
1130808   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130809   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1130810   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130811   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1130812   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1130813   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1130814   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1130815   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1130816   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1130817   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1130818   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1130819   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1130820   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1130821   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1130822   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1130823   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1130824   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1130825   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1130826   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1130827   +END;
MPRINT(EM_DIAGRAM):   END;
1130828   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1130829   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1130830   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1130831   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1130832   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1130833   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1130834   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1130835   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1130836   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1130837   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1130838   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1130839   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1130840   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1130841   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1130842   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1130843   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1130844   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1130845   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1130846   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1130847   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1130848   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1130849   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1130850   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1130851   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1130852   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1130853   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1130854   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1130855   +END;
MPRINT(EM_DIAGRAM):   END;
1130856   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130857   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1130858   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130859   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130860   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1130861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130862   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1130863   +   H1x1_1  =    -1.99300782242957 * S_AcceptedCmpTotal
1130864   +          +     2.12004224248217 * S_Frq  +     3.86828667262904 * S_Income
1130865   +          +     2.77648198770608 * S_Mnt  +    -2.27326773671069 *
1130866   +        S_MntGoldProds  +    -0.27399687657599 * S_MntMeatProducts
1130867   +          +     2.26137957922507 * S_MntWines  +     0.14135280902221 *
1130868   +        S_NumDistPurchases  +     1.12048709605553 * S_RFMstat
1130869   +          +     0.99315934409036 * S_RMntFrq  +     1.21818826467727 *
1130870   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.99300782242957 * S_AcceptedCmpTotal + 2.12004224248217 * 
S_Frq + 3.86828667262904 * S_Income + 2.77648198770608 * S_Mnt + -2.27326773671069 * 
S_MntGoldProds + -0.27399687657599 * S_MntMeatProducts + 2.26137957922507 * S_MntWines + 
0.14135280902221 * S_NumDistPurchases + 1.12048709605553 * S_RFMstat + 0.99315934409036 * 
S_RMntFrq + 1.21818826467727 * S_Recency ;
1130871   +   H1x1_2  =    -0.46080527925139 * S_AcceptedCmpTotal
1130872   +          +     1.22986184660358 * S_Frq  +     1.25416218398238 * S_Income
1130873   +          +      0.7698101051046 * S_Mnt  +    -0.24851515302824 *
1130874   +        S_MntGoldProds  +    -1.02206883329868 * S_MntMeatProducts
1130875   +          +    -2.60436726665032 * S_MntWines  +     1.42856046102253 *
1130876   +        S_NumDistPurchases  +     0.23036228891547 * S_RFMstat
1130877   +          +    -0.44196680894425 * S_RMntFrq  +     1.47726327092789 *
1130878   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.46080527925139 * S_AcceptedCmpTotal + 1.22986184660358 * 
S_Frq + 1.25416218398238 * S_Income + 0.7698101051046 * S_Mnt + -0.24851515302824 * 
S_MntGoldProds + -1.02206883329868 * S_MntMeatProducts + -2.60436726665032 * S_MntWines + 
1.42856046102253 * S_NumDistPurchases + 0.23036228891547 * S_RFMstat + -0.44196680894425 * 
S_RMntFrq + 1.47726327092789 * S_Recency ;
1130879   +   H1x1_3  =    -2.72041257472943 * S_AcceptedCmpTotal
1130880   +          +     2.18007007875237 * S_Frq  +    -3.41389425682735 * S_Income
1130881   +          +     1.22111404132155 * S_Mnt  +     0.13965132551243 *
1130882   +        S_MntGoldProds  +    -1.44679609979492 * S_MntMeatProducts
1130883   +          +     1.32449625366546 * S_MntWines  +     0.71474658567846 *
1130884   +        S_NumDistPurchases  +    -1.11377169665392 * S_RFMstat
1130885   +          +    -0.23272811318878 * S_RMntFrq  +     3.38352057173892 *
1130886   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.72041257472943 * S_AcceptedCmpTotal + 2.18007007875237 * 
S_Frq + -3.41389425682735 * S_Income + 1.22111404132155 * S_Mnt + 0.13965132551243 * 
S_MntGoldProds + -1.44679609979492 * S_MntMeatProducts + 1.32449625366546 * S_MntWines + 
0.71474658567846 * S_NumDistPurchases + -1.11377169665392 * S_RFMstat + -0.23272811318878 * 
S_RMntFrq + 3.38352057173892 * S_Recency ;
1130887   +   H1x1_4  =    -0.53914082027029 * S_AcceptedCmpTotal
1130888   +          +     3.52541527909413 * S_Frq  +     0.47386294116539 * S_Income
1130889   +          +     1.74856835081997 * S_Mnt  +    -0.31608698854628 *
1130890   +        S_MntGoldProds  +    -4.08585161438784 * S_MntMeatProducts
1130891   +          +     1.11934057687184 * S_MntWines  +    -4.23069217087257 *
1130892   +        S_NumDistPurchases  +    -0.45058242594518 * S_RFMstat
1130893   +          +     2.24526854282726 * S_RMntFrq  +     0.46541621801996 *
1130894   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.53914082027029 * S_AcceptedCmpTotal + 3.52541527909413 * 
S_Frq + 0.47386294116539 * S_Income + 1.74856835081997 * S_Mnt + -0.31608698854628 * 
S_MntGoldProds + -4.08585161438784 * S_MntMeatProducts + 1.11934057687184 * S_MntWines + 
-4.23069217087257 * S_NumDistPurchases + -0.45058242594518 * S_RFMstat + 2.24526854282726 * 
S_RMntFrq + 0.46541621801996 * S_Recency ;
1130895   +   H1x1_5  =     0.16652182962256 * S_AcceptedCmpTotal
1130896   +          +    -2.34082830868767 * S_Frq  +     0.06017749299853 * S_Income
1130897   +          +    -3.61434433922311 * S_Mnt  +    -0.15794212009402 *
1130898   +        S_MntGoldProds  +     5.32833368617196 * S_MntMeatProducts
1130899   +          +     1.70496933504273 * S_MntWines  +     2.85445845094536 *
1130900   +        S_NumDistPurchases  +     1.88219523605925 * S_RFMstat
1130901   +          +     0.75869801637089 * S_RMntFrq  +     0.08064297106734 *
1130902   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.16652182962256 * S_AcceptedCmpTotal + -2.34082830868767 * 
S_Frq + 0.06017749299853 * S_Income + -3.61434433922311 * S_Mnt + -0.15794212009402 * 
S_MntGoldProds + 5.32833368617196 * S_MntMeatProducts + 1.70496933504273 * S_MntWines + 
2.85445845094536 * S_NumDistPurchases + 1.88219523605925 * S_RFMstat + 0.75869801637089 * 
S_RMntFrq + 0.08064297106734 * S_Recency ;
1130903   +   H1x1_6  =     1.97422379745385 * S_AcceptedCmpTotal
1130904   +          +    -0.18806921540808 * S_Frq  +    -1.45393613178942 * S_Income
1130905   +          +    -1.71382589206496 * S_Mnt  +    -0.86398659373382 *
1130906   +        S_MntGoldProds  +    -0.55933907393534 * S_MntMeatProducts
1130907   +          +    -2.04088833388184 * S_MntWines  +     1.33825297425801 *
1130908   +        S_NumDistPurchases  +    -1.84916943620006 * S_RFMstat
1130909   +          +     1.10268410707441 * S_RMntFrq  +    -3.24538880603902 *
1130910   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.97422379745385 * S_AcceptedCmpTotal + -0.18806921540808 * 
S_Frq + -1.45393613178942 * S_Income + -1.71382589206496 * S_Mnt + -0.86398659373382 * 
S_MntGoldProds + -0.55933907393534 * S_MntMeatProducts + -2.04088833388184 * S_MntWines + 
1.33825297425801 * S_NumDistPurchases + -1.84916943620006 * S_RFMstat + 1.10268410707441 * 
S_RMntFrq + -3.24538880603902 * S_Recency ;
1130911   +   H1x1_7  =    -0.04334303258083 * S_AcceptedCmpTotal
1130912   +          +      1.2911623736286 * S_Frq  +    -2.28992194197276 * S_Income
1130913   +          +    -0.46322849796029 * S_Mnt  +    -0.61987255353555 *
1130914   +        S_MntGoldProds  +    -0.70448430141235 * S_MntMeatProducts
1130915   +          +    -2.07867791807129 * S_MntWines  +    -1.36577325340948 *
1130916   +        S_NumDistPurchases  +    -1.20867908080733 * S_RFMstat
1130917   +          +     1.13377434281641 * S_RMntFrq  +     0.49995615625441 *
1130918   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.04334303258083 * S_AcceptedCmpTotal + 1.2911623736286 * 
S_Frq + -2.28992194197276 * S_Income + -0.46322849796029 * S_Mnt + -0.61987255353555 * 
S_MntGoldProds + -0.70448430141235 * S_MntMeatProducts + -2.07867791807129 * S_MntWines + 
-1.36577325340948 * S_NumDistPurchases + -1.20867908080733 * S_RFMstat + 1.13377434281641 * 
S_RMntFrq + 0.49995615625441 * S_Recency ;
1130919   +   H1x1_1  = H1x1_1  +     -1.7035629341514 * G_Marital_Status0
1130920   +          +    -0.88839271772433 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.7035629341514 * G_Marital_Status0 + 
-0.88839271772433 * G_Marital_Status1 ;
1130921   +   H1x1_2  = H1x1_2  +     0.47234648810132 * G_Marital_Status0
1130922   +          +     0.49781009278812 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.47234648810132 * G_Marital_Status0 + 
0.49781009278812 * G_Marital_Status1 ;
1130923   +   H1x1_3  = H1x1_3  +     0.04803102756566 * G_Marital_Status0
1130924   +          +     3.45859276392218 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04803102756566 * G_Marital_Status0 + 
3.45859276392218 * G_Marital_Status1 ;
1130925   +   H1x1_4  = H1x1_4  +    -0.00794915276466 * G_Marital_Status0
1130926   +          +    -0.88877093101914 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.00794915276466 * G_Marital_Status0 + 
-0.88877093101914 * G_Marital_Status1 ;
1130927   +   H1x1_5  = H1x1_5  +     0.17344052282277 * G_Marital_Status0
1130928   +          +     0.07512544812374 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17344052282277 * G_Marital_Status0 + 
0.07512544812374 * G_Marital_Status1 ;
1130929   +   H1x1_6  = H1x1_6  +     0.69797087079749 * G_Marital_Status0
1130930   +          +     1.99160337429042 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.69797087079749 * G_Marital_Status0 + 
1.99160337429042 * G_Marital_Status1 ;
1130931   +   H1x1_7  = H1x1_7  +    -1.90814013352903 * G_Marital_Status0
1130932   +          +    -0.58260071621307 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -1.90814013352903 * G_Marital_Status0 + 
-0.58260071621307 * G_Marital_Status1 ;
1130933   +   H1x1_1  =      0.4509613443627 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.4509613443627 + H1x1_1 ;
1130934   +   H1x1_2  =     3.28102437302443 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 3.28102437302443 + H1x1_2 ;
1130935   +   H1x1_3  =    -0.59732076258377 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.59732076258377 + H1x1_3 ;
1130936   +   H1x1_4  =     3.04302174126598 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.04302174126598 + H1x1_4 ;
1130937   +   H1x1_5  =     4.11173403634453 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 4.11173403634453 + H1x1_5 ;
1130938   +   H1x1_6  =     4.51964221881808 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 4.51964221881808 + H1x1_6 ;
1130939   +   H1x1_7  =     7.27061205819069 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 7.27061205819069 + H1x1_7 ;
1130940   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1130941   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1130942   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1130943   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1130944   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1130945   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1130946   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1130947   +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
1130948   +   H1x1_7  = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
1130949   +END;
MPRINT(EM_DIAGRAM):   END;
1130950   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1130951   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1130952   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1130953   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1130954   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1130955   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1130956   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1130957   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1130958   +END;
MPRINT(EM_DIAGRAM):   END;
1130959   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130960   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1130961   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130962   +
1130963   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1130964   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1130965   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1130966   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1130967   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1130968   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1130969   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1130970   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1130971   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1130972   +end;
MPRINT(EM_DIAGRAM):   end;
1130973   +else do;
MPRINT(EM_DIAGRAM):   else do;
1130974   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1130975   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1130976   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1130977   +   end;
MPRINT(EM_DIAGRAM):   end;
1130978   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1130979   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1130980   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1130981   +   end;
MPRINT(EM_DIAGRAM):   end;
1130982   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1130983   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1130984   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1130985   +   end;
MPRINT(EM_DIAGRAM):   end;
1130986   +end;
MPRINT(EM_DIAGRAM):   end;
1130987   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1130988   +   P_DepVar1  =    -3.49358340904307 * H1x1_1  +    -5.28251662728987 * H1x1_2
1130989   +          +    -4.11876057817011 * H1x1_3  +    -7.73777326204979 * H1x1_4
1130990   +          +     12.8932497890238 * H1x1_5  +     6.88694832857203 * H1x1_6
1130991   +          +    -8.47048075234366 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.49358340904307 * H1x1_1 + -5.28251662728987 * H1x1_2 + 
-4.11876057817011 * H1x1_3 + -7.73777326204979 * H1x1_4 + 12.8932497890238 * H1x1_5 + 
6.88694832857203 * H1x1_6 + -8.47048075234366 * H1x1_7 ;
1130992   +   P_DepVar1  =     1.65092540834245 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.65092540834245 + P_DepVar1 ;
1130993   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1130994   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1130995   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1130996   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1130997   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1130998   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1130999   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1131000   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1131001   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1131002   +END;
MPRINT(EM_DIAGRAM):   END;
1131003   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1131004   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1131005   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1131006   +END;
MPRINT(EM_DIAGRAM):   END;
1131007   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1131008   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1131009   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1131010   +END;
MPRINT(EM_DIAGRAM):   END;
1131011   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1131012   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1131013   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1131014   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1131015   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1131016   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1131017   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1131018   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131019   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1131020   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131021   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1131022   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1131023   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1131024   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1131025   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1131026   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1131027   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1131028   +END;
MPRINT(EM_DIAGRAM):   END;
1131029   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1131030   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1131031   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1131032   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1131033   +* Renaming variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural29;
1131034   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1131035   +* Renaming Posterior variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural29;
1131036   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1131037   +drop AutoNeural29_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_P_DepVar1;
1131038   +AutoNeural29_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural29_P_DepVar1 = P_DepVar1;
1131039   +drop AutoNeural29_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_P_DepVar0;
1131040   +AutoNeural29_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural29_P_DepVar0 = P_DepVar0;
1131041   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1131042   +* Renaming _WARN_ variable for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural29;
1131043   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1131044   +length AutoNeural29_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural29_WARN_ $4;
1131045   +drop AutoNeural29_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_WARN_;
1131046   +AutoNeural29_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural29_WARN_ = _WARN_;
1131047   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1131048   +* Ensmbl51: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Scoring Code of model 2 of 7;
1131049   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1131050   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1131051   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1131052   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1131053   +* NODE: AutoNeural28;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural28;
1131054   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1131055   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1131056   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1131057   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1131058   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1131059   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1131060   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1131061   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1131062   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1131063   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1131064   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1131065   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1131066   +LENGTH _WARN_ $4
1131067   +      F_DepVar  $ 12
1131068   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1131069   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1131070   +
1131071   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1131072   +
1131073   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1131074   +
1131075   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1131076   +
1131077   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1131078   +
1131079   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1131080   +
1131081   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1131082   +
1131083   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1131084   +
1131085   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1131086   +
1131087   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1131088   +
1131089   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1131090   +
1131091   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1131092   +
1131093   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1131094   +
1131095   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1131096   +
1131097   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1131098   +
1131099   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1131100   +
1131101   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1131102   +
1131103   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1131104   +
1131105   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1131106   +
1131107   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1131108   +
1131109   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1131110   +
1131111   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1131112   +
1131113   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1131114   +
1131115   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1131116   +
1131117   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1131118   +
1131119   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1131120   +
1131121   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1131122   +
1131123   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1131124   +
1131125   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
1131126   +
1131127   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
1131128   +
1131129   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
1131130   +
1131131   +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
1131132   +
1131133   +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
1131134   +
1131135   +      label H1x4_3 = 'Hidden: H1x4_=3' ;
MPRINT(EM_DIAGRAM):   label H1x4_3 = 'Hidden: H1x4_=3' ;
1131136   +
1131137   +      label H1x4_4 = 'Hidden: H1x4_=4' ;
MPRINT(EM_DIAGRAM):   label H1x4_4 = 'Hidden: H1x4_=4' ;
1131138   +
1131139   +      label H1x4_5 = 'Hidden: H1x4_=5' ;
MPRINT(EM_DIAGRAM):   label H1x4_5 = 'Hidden: H1x4_=5' ;
1131140   +
1131141   +      label H1x4_6 = 'Hidden: H1x4_=6' ;
MPRINT(EM_DIAGRAM):   label H1x4_6 = 'Hidden: H1x4_=6' ;
1131142   +
1131143   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1131144   +
1131145   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1131146   +
1131147   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1131148   +
1131149   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1131150   +
1131151   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1131152   +
1131153   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1131154   +
1131155   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1131156   +
1131157   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1131158   +
1131159   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1131160   +
1131161   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
1131162   +
1131163   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
1131164   +
1131165   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
1131166   +
1131167   +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
1131168   +
1131169   +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
1131170   +
1131171   +      label H2x3_3 = 'Hidden: H2x3_=3' ;
MPRINT(EM_DIAGRAM):   label H2x3_3 = 'Hidden: H2x3_=3' ;
1131172   +
1131173   +      label H2x3_4 = 'Hidden: H2x3_=4' ;
MPRINT(EM_DIAGRAM):   label H2x3_4 = 'Hidden: H2x3_=4' ;
1131174   +
1131175   +      label H2x3_5 = 'Hidden: H2x3_=5' ;
MPRINT(EM_DIAGRAM):   label H2x3_5 = 'Hidden: H2x3_=5' ;
1131176   +
1131177   +      label H2x3_6 = 'Hidden: H2x3_=6' ;
MPRINT(EM_DIAGRAM):   label H2x3_6 = 'Hidden: H2x3_=6' ;
1131178   +
1131179   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1131180   +
1131181   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1131182   +
1131183   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1131184   +
1131185   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
1131186   +
1131187   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
1131188   +
1131189   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
1131190   +
1131191   +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
1131192   +
1131193   +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
1131194   +
1131195   +      label H3x2_3 = 'Hidden: H3x2_=3' ;
MPRINT(EM_DIAGRAM):   label H3x2_3 = 'Hidden: H3x2_=3' ;
1131196   +
1131197   +      label H3x2_4 = 'Hidden: H3x2_=4' ;
MPRINT(EM_DIAGRAM):   label H3x2_4 = 'Hidden: H3x2_=4' ;
1131198   +
1131199   +      label H3x2_5 = 'Hidden: H3x2_=5' ;
MPRINT(EM_DIAGRAM):   label H3x2_5 = 'Hidden: H3x2_=5' ;
1131200   +
1131201   +      label H3x2_6 = 'Hidden: H3x2_=6' ;
MPRINT(EM_DIAGRAM):   label H3x2_6 = 'Hidden: H3x2_=6' ;
1131202   +
1131203   +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
1131204   +
1131205   +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
1131206   +
1131207   +      label H4x1_3 = 'Hidden: H4x1_=3' ;
MPRINT(EM_DIAGRAM):   label H4x1_3 = 'Hidden: H4x1_=3' ;
1131208   +
1131209   +      label H4x1_4 = 'Hidden: H4x1_=4' ;
MPRINT(EM_DIAGRAM):   label H4x1_4 = 'Hidden: H4x1_=4' ;
1131210   +
1131211   +      label H4x1_5 = 'Hidden: H4x1_=5' ;
MPRINT(EM_DIAGRAM):   label H4x1_5 = 'Hidden: H4x1_=5' ;
1131212   +
1131213   +      label H4x1_6 = 'Hidden: H4x1_=6' ;
MPRINT(EM_DIAGRAM):   label H4x1_6 = 'Hidden: H4x1_=6' ;
1131214   +
1131215   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1131216   +
1131217   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1131218   +
1131219   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1131220   +
1131221   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1131222   +
1131223   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1131224   +
1131225   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1131226   +
1131227   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1131228   +
1131229   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1131230   +
1131231   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1131232   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1131233   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1131234   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1131235   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1131236   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1131237   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131238   +end;
MPRINT(EM_DIAGRAM):   end;
1131239   +else do;
MPRINT(EM_DIAGRAM):   else do;
1131240   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1131241   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1131242   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1131243   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1131244   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1131245   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1131246   +   end;
MPRINT(EM_DIAGRAM):   end;
1131247   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1131248   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1131249   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1131250   +   end;
MPRINT(EM_DIAGRAM):   end;
1131251   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1131252   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1131253   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1131254   +   end;
MPRINT(EM_DIAGRAM):   end;
1131255   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1131256   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1131257   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1131258   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1131259   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131260   +   end;
MPRINT(EM_DIAGRAM):   end;
1131261   +end;
MPRINT(EM_DIAGRAM):   end;
1131262   +
1131263   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131264   +*** Checking missing input Interval
1131265   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1131266   +
1131267   +IF NMISS(
1131268   +   AcceptedCmpTotal ,
1131269   +   Frq ,
1131270   +   Income ,
1131271   +   Mnt ,
1131272   +   MntGoldProds ,
1131273   +   MntMeatProducts ,
1131274   +   MntWines ,
1131275   +   NumDistPurchases ,
1131276   +   RFMstat ,
1131277   +   RMntFrq ,
1131278   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1131279   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1131280   +
1131281   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131282   +END;
MPRINT(EM_DIAGRAM):   END;
1131283   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131284   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1131285   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131286   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1131287   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1131288   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1131289   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1131290   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1131291   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1131292   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1131293   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1131294   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1131295   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1131296   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1131297   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1131298   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1131299   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1131300   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1131301   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1131302   +END;
MPRINT(EM_DIAGRAM):   END;
1131303   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1131304   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1131305   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1131306   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1131307   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1131308   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1131309   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1131310   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1131311   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1131312   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1131313   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1131314   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1131315   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1131316   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1131317   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1131318   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1131319   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1131320   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1131321   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1131322   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1131323   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1131324   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1131325   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1131326   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1131327   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1131328   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1131329   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1131330   +END;
MPRINT(EM_DIAGRAM):   END;
1131331   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131332   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1131333   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131334   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131335   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1131336   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131337   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1131338   +   H1x1_1  =     3.15417213555791 * S_AcceptedCmpTotal
1131339   +          +    -2.48200966202064 * S_Frq  +     1.79801309624052 * S_Income
1131340   +          +    -1.96453924225923 * S_Mnt  +    -0.73447750078211 *
1131341   +        S_MntGoldProds  +    -1.52540613833145 * S_MntMeatProducts
1131342   +          +    -2.34651136428537 * S_MntWines  +     1.78713249203795 *
1131343   +        S_NumDistPurchases  +    -1.89877446252459 * S_RFMstat
1131344   +          +     0.40523847190984 * S_RMntFrq  +    -5.00157954960261 *
1131345   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.15417213555791 * S_AcceptedCmpTotal + -2.48200966202064 * 
S_Frq + 1.79801309624052 * S_Income + -1.96453924225923 * S_Mnt + -0.73447750078211 * 
S_MntGoldProds + -1.52540613833145 * S_MntMeatProducts + -2.34651136428537 * S_MntWines + 
1.78713249203795 * S_NumDistPurchases + -1.89877446252459 * S_RFMstat + 0.40523847190984 * 
S_RMntFrq + -5.00157954960261 * S_Recency ;
1131346   +   H1x1_2  =     -0.4296332791258 * S_AcceptedCmpTotal
1131347   +          +     1.69454720747031 * S_Frq  +     0.65291994437462 * S_Income
1131348   +          +     4.94289741649285 * S_Mnt  +    -0.74724168333375 *
1131349   +        S_MntGoldProds  +    -4.37885511745275 * S_MntMeatProducts
1131350   +          +    -0.79918604028406 * S_MntWines  +    -2.55554908870931 *
1131351   +        S_NumDistPurchases  +      -0.357509020401 * S_RFMstat
1131352   +          +     2.81206015252461 * S_RMntFrq  +       0.376849190211 *
1131353   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.4296332791258 * S_AcceptedCmpTotal + 1.69454720747031 * 
S_Frq + 0.65291994437462 * S_Income + 4.94289741649285 * S_Mnt + -0.74724168333375 * 
S_MntGoldProds + -4.37885511745275 * S_MntMeatProducts + -0.79918604028406 * S_MntWines + 
-2.55554908870931 * S_NumDistPurchases + -0.357509020401 * S_RFMstat + 2.81206015252461 * 
S_RMntFrq + 0.376849190211 * S_Recency ;
1131354   +   H1x1_3  =     0.22275326994217 * S_AcceptedCmpTotal
1131355   +          +     1.30327962429821 * S_Frq  +     8.11675617892245 * S_Income
1131356   +          +     1.26763916951276 * S_Mnt  +     -0.2686825897259 *
1131357   +        S_MntGoldProds  +    -1.42114074651211 * S_MntMeatProducts
1131358   +          +    -1.76821642666458 * S_MntWines  +    -1.91323522505912 *
1131359   +        S_NumDistPurchases  +    -0.12369288380556 * S_RFMstat
1131360   +          +     -0.5961110037328 * S_RMntFrq  +     1.45489277444882 *
1131361   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.22275326994217 * S_AcceptedCmpTotal + 1.30327962429821 * 
S_Frq + 8.11675617892245 * S_Income + 1.26763916951276 * S_Mnt + -0.2686825897259 * 
S_MntGoldProds + -1.42114074651211 * S_MntMeatProducts + -1.76821642666458 * S_MntWines + 
-1.91323522505912 * S_NumDistPurchases + -0.12369288380556 * S_RFMstat + -0.5961110037328 * 
S_RMntFrq + 1.45489277444882 * S_Recency ;
1131362   +   H1x1_4  =     0.65694888778783 * S_AcceptedCmpTotal
1131363   +          +    -2.46645772884275 * S_Frq  +     2.56090496460471 * S_Income
1131364   +          +     1.47469720902355 * S_Mnt  +    -0.23044042020952 *
1131365   +        S_MntGoldProds  +     1.09436190473143 * S_MntMeatProducts
1131366   +          +    -0.07872477007968 * S_MntWines  +     2.35913880285028 *
1131367   +        S_NumDistPurchases  +     0.36553596420262 * S_RFMstat
1131368   +          +    -1.52014700293876 * S_RMntFrq  +    -1.62001903467763 *
1131369   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.65694888778783 * S_AcceptedCmpTotal + -2.46645772884275 * 
S_Frq + 2.56090496460471 * S_Income + 1.47469720902355 * S_Mnt + -0.23044042020952 * 
S_MntGoldProds + 1.09436190473143 * S_MntMeatProducts + -0.07872477007968 * S_MntWines + 
2.35913880285028 * S_NumDistPurchases + 0.36553596420262 * S_RFMstat + -1.52014700293876 * 
S_RMntFrq + -1.62001903467763 * S_Recency ;
1131370   +   H1x1_5  =    -0.06045586654134 * S_AcceptedCmpTotal
1131371   +          +    -1.51896554067022 * S_Frq  +    -0.77690899609172 * S_Income
1131372   +          +    -3.83443076797312 * S_Mnt  +    -0.49066287190692 *
1131373   +        S_MntGoldProds  +     7.74304126889741 * S_MntMeatProducts
1131374   +          +     0.97717560040665 * S_MntWines  +     2.55833904797689 *
1131375   +        S_NumDistPurchases  +     3.33552253786577 * S_RFMstat
1131376   +          +     2.15128325510301 * S_RMntFrq  +     0.51475149451235 *
1131377   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.06045586654134 * S_AcceptedCmpTotal + -1.51896554067022 * 
S_Frq + -0.77690899609172 * S_Income + -3.83443076797312 * S_Mnt + -0.49066287190692 * 
S_MntGoldProds + 7.74304126889741 * S_MntMeatProducts + 0.97717560040665 * S_MntWines + 
2.55833904797689 * S_NumDistPurchases + 3.33552253786577 * S_RFMstat + 2.15128325510301 * 
S_RMntFrq + 0.51475149451235 * S_Recency ;
1131378   +   H1x1_6  =    -2.00102225492393 * S_AcceptedCmpTotal
1131379   +          +    -0.55313430858805 * S_Frq  +    -2.80039880440251 * S_Income
1131380   +          +    -0.52613628819852 * S_Mnt  +    -1.25580169134654 *
1131381   +        S_MntGoldProds  +    -1.44511464402737 * S_MntMeatProducts
1131382   +          +    -0.66744558284147 * S_MntWines  +     3.15612301024597 *
1131383   +        S_NumDistPurchases  +    -0.57805918326136 * S_RFMstat
1131384   +          +     0.13349014037678 * S_RMntFrq  +    -1.97053621157132 *
1131385   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.00102225492393 * S_AcceptedCmpTotal + -0.55313430858805 * 
S_Frq + -2.80039880440251 * S_Income + -0.52613628819852 * S_Mnt + -1.25580169134654 * 
S_MntGoldProds + -1.44511464402737 * S_MntMeatProducts + -0.66744558284147 * S_MntWines + 
3.15612301024597 * S_NumDistPurchases + -0.57805918326136 * S_RFMstat + 0.13349014037678 * 
S_RMntFrq + -1.97053621157132 * S_Recency ;
1131386   +   H1x1_1  = H1x1_1  +     1.38825657874217 * G_Marital_Status0
1131387   +          +     0.90195662603521 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.38825657874217 * G_Marital_Status0 + 
0.90195662603521 * G_Marital_Status1 ;
1131388   +   H1x1_2  = H1x1_2  +     0.88138395159348 * G_Marital_Status0
1131389   +          +    -0.49019446056296 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.88138395159348 * G_Marital_Status0 + 
-0.49019446056296 * G_Marital_Status1 ;
1131390   +   H1x1_3  = H1x1_3  +     0.30990330359421 * G_Marital_Status0
1131391   +          +     1.10544938214372 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.30990330359421 * G_Marital_Status0 + 
1.10544938214372 * G_Marital_Status1 ;
1131392   +   H1x1_4  = H1x1_4  +     1.70251598227875 * G_Marital_Status0
1131393   +          +     0.87683669160259 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 1.70251598227875 * G_Marital_Status0 + 
0.87683669160259 * G_Marital_Status1 ;
1131394   +   H1x1_5  = H1x1_5  +    -0.14678805736317 * G_Marital_Status0
1131395   +          +    -0.13246180955576 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14678805736317 * G_Marital_Status0 + 
-0.13246180955576 * G_Marital_Status1 ;
1131396   +   H1x1_6  = H1x1_6  +     -0.6511155024316 * G_Marital_Status0
1131397   +          +     0.24707257141342 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.6511155024316 * G_Marital_Status0 + 
0.24707257141342 * G_Marital_Status1 ;
1131398   +   H1x1_1  =     4.82277728923766 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.82277728923766 + H1x1_1 ;
1131399   +   H1x1_2  =     2.49777705822347 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.49777705822347 + H1x1_2 ;
1131400   +   H1x1_3  =    -0.93289135595041 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.93289135595041 + H1x1_3 ;
1131401   +   H1x1_4  =    -7.80421802944398 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.80421802944398 + H1x1_4 ;
1131402   +   H1x1_5  =     6.46115064589724 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 6.46115064589724 + H1x1_5 ;
1131403   +   H1x1_6  =     3.21096596966888 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 3.21096596966888 + H1x1_6 ;
1131404   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1131405   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1131406   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1131407   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1131408   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1131409   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1131410   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1131411   +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
1131412   +END;
MPRINT(EM_DIAGRAM):   END;
1131413   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1131414   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1131415   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1131416   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1131417   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1131418   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1131419   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1131420   +END;
MPRINT(EM_DIAGRAM):   END;
1131421   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131422   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1131423   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131424   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1131425   +   H1x2_1  =    -0.30711239275958 * S_AcceptedCmpTotal
1131426   +          +    -1.45395291114633 * S_Frq  +     0.87594950917085 * S_Income
1131427   +          +    -0.72639274085105 * S_Mnt  +    -2.47797355837112 *
1131428   +        S_MntGoldProds  +     0.68384082088335 * S_MntMeatProducts
1131429   +          +     0.65600644755641 * S_MntWines  +      0.8163360453447 *
1131430   +        S_NumDistPurchases  +    -1.09587924440912 * S_RFMstat
1131431   +          +     1.48347762248449 * S_RMntFrq  +      0.2335216261547 *
1131432   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.30711239275958 * S_AcceptedCmpTotal + -1.45395291114633 * 
S_Frq + 0.87594950917085 * S_Income + -0.72639274085105 * S_Mnt + -2.47797355837112 * 
S_MntGoldProds + 0.68384082088335 * S_MntMeatProducts + 0.65600644755641 * S_MntWines + 
0.8163360453447 * S_NumDistPurchases + -1.09587924440912 * S_RFMstat + 1.48347762248449 * 
S_RMntFrq + 0.2335216261547 * S_Recency ;
1131433   +   H1x2_2  =     2.57777770372275 * S_AcceptedCmpTotal
1131434   +          +    -0.08699050003337 * S_Frq  +      0.9048262025585 * S_Income
1131435   +          +     0.80716409242733 * S_Mnt  +     0.92862088643502 *
1131436   +        S_MntGoldProds  +     1.28722996014956 * S_MntMeatProducts
1131437   +          +    -0.78107065942411 * S_MntWines  +     2.29787925805392 *
1131438   +        S_NumDistPurchases  +     -0.7095984076797 * S_RFMstat
1131439   +          +    -0.75276407747323 * S_RMntFrq  +    -2.14859674388241 *
1131440   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 2.57777770372275 * S_AcceptedCmpTotal + -0.08699050003337 * 
S_Frq + 0.9048262025585 * S_Income + 0.80716409242733 * S_Mnt + 0.92862088643502 * 
S_MntGoldProds + 1.28722996014956 * S_MntMeatProducts + -0.78107065942411 * S_MntWines + 
2.29787925805392 * S_NumDistPurchases + -0.7095984076797 * S_RFMstat + -0.75276407747323 * 
S_RMntFrq + -2.14859674388241 * S_Recency ;
1131441   +   H1x2_3  =    -0.19225474668372 * S_AcceptedCmpTotal
1131442   +          +     -0.5399776824486 * S_Frq  +    -0.33342356858106 * S_Income
1131443   +          +      0.4662552460972 * S_Mnt  +    -0.83897697999245 *
1131444   +        S_MntGoldProds  +    -1.02069791829975 * S_MntMeatProducts
1131445   +          +    -0.77568646594215 * S_MntWines  +    -2.64172584610703 *
1131446   +        S_NumDistPurchases  +     1.22587043380457 * S_RFMstat
1131447   +          +    -1.22124295004478 * S_RMntFrq  +     0.72727673065668 *
1131448   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.19225474668372 * S_AcceptedCmpTotal + -0.5399776824486 * 
S_Frq + -0.33342356858106 * S_Income + 0.4662552460972 * S_Mnt + -0.83897697999245 * 
S_MntGoldProds + -1.02069791829975 * S_MntMeatProducts + -0.77568646594215 * S_MntWines + 
-2.64172584610703 * S_NumDistPurchases + 1.22587043380457 * S_RFMstat + -1.22124295004478 * 
S_RMntFrq + 0.72727673065668 * S_Recency ;
1131449   +   H1x2_4  =     1.07963833884217 * S_AcceptedCmpTotal
1131450   +          +    -1.30033554705908 * S_Frq  +     0.80740030463615 * S_Income
1131451   +          +    -1.73808129607223 * S_Mnt  +     1.21346647777818 *
1131452   +        S_MntGoldProds  +     0.69007605858806 * S_MntMeatProducts
1131453   +          +     0.31548401471349 * S_MntWines  +    -0.45355998387313 *
1131454   +        S_NumDistPurchases  +     1.13504256910361 * S_RFMstat
1131455   +          +    -0.45561637629388 * S_RMntFrq  +    -1.42094697023704 *
1131456   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.07963833884217 * S_AcceptedCmpTotal + -1.30033554705908 * 
S_Frq + 0.80740030463615 * S_Income + -1.73808129607223 * S_Mnt + 1.21346647777818 * 
S_MntGoldProds + 0.69007605858806 * S_MntMeatProducts + 0.31548401471349 * S_MntWines + 
-0.45355998387313 * S_NumDistPurchases + 1.13504256910361 * S_RFMstat + -0.45561637629388 * 
S_RMntFrq + -1.42094697023704 * S_Recency ;
1131457   +   H1x2_5  =     0.30163018627699 * S_AcceptedCmpTotal
1131458   +          +    -0.73947459722676 * S_Frq  +      0.3117229426353 * S_Income
1131459   +          +     1.78189396082002 * S_Mnt  +    -1.51478593904163 *
1131460   +        S_MntGoldProds  +    -1.30328540691967 * S_MntMeatProducts
1131461   +          +     0.48947220852953 * S_MntWines  +     0.25380878841531 *
1131462   +        S_NumDistPurchases  +    -0.09429027402746 * S_RFMstat
1131463   +          +     2.79720421337828 * S_RMntFrq  +    -0.08024855242737 *
1131464   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30163018627699 * S_AcceptedCmpTotal + -0.73947459722676 * 
S_Frq + 0.3117229426353 * S_Income + 1.78189396082002 * S_Mnt + -1.51478593904163 * 
S_MntGoldProds + -1.30328540691967 * S_MntMeatProducts + 0.48947220852953 * S_MntWines + 
0.25380878841531 * S_NumDistPurchases + -0.09429027402746 * S_RFMstat + 2.79720421337828 * 
S_RMntFrq + -0.08024855242737 * S_Recency ;
1131465   +   H1x2_6  =    -0.05006047355159 * S_AcceptedCmpTotal
1131466   +          +     0.01838632143297 * S_Frq  +    -1.04892137940395 * S_Income
1131467   +          +    -0.33949418476309 * S_Mnt  +     1.27820886482898 *
1131468   +        S_MntGoldProds  +      0.1541042926193 * S_MntMeatProducts
1131469   +          +    -0.30996391960135 * S_MntWines  +     0.69532310497927 *
1131470   +        S_NumDistPurchases  +    -0.51247610421467 * S_RFMstat
1131471   +          +    -0.87640728095011 * S_RMntFrq  +     1.79661996586627 *
1131472   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.05006047355159 * S_AcceptedCmpTotal + 0.01838632143297 * 
S_Frq + -1.04892137940395 * S_Income + -0.33949418476309 * S_Mnt + 1.27820886482898 * 
S_MntGoldProds + 0.1541042926193 * S_MntMeatProducts + -0.30996391960135 * S_MntWines + 
0.69532310497927 * S_NumDistPurchases + -0.51247610421467 * S_RFMstat + -0.87640728095011 * 
S_RMntFrq + 1.79661996586627 * S_Recency ;
1131473   +   H1x2_1  = H1x2_1  +    -1.52372947412233 * G_Marital_Status0
1131474   +          +     0.61190614442174 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.52372947412233 * G_Marital_Status0 + 
0.61190614442174 * G_Marital_Status1 ;
1131475   +   H1x2_2  = H1x2_2  +     -0.2899112326334 * G_Marital_Status0
1131476   +          +    -0.43943770039245 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.2899112326334 * G_Marital_Status0 + 
-0.43943770039245 * G_Marital_Status1 ;
1131477   +   H1x2_3  = H1x2_3  +    -1.30447843367338 * G_Marital_Status0
1131478   +          +     0.36969296112687 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.30447843367338 * G_Marital_Status0 + 
0.36969296112687 * G_Marital_Status1 ;
1131479   +   H1x2_4  = H1x2_4  +     1.06192432928756 * G_Marital_Status0
1131480   +          +    -0.48897798100871 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.06192432928756 * G_Marital_Status0 + 
-0.48897798100871 * G_Marital_Status1 ;
1131481   +   H1x2_5  = H1x2_5  +     1.24023950705702 * G_Marital_Status0
1131482   +          +     -0.0768652239427 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.24023950705702 * G_Marital_Status0 + 
-0.0768652239427 * G_Marital_Status1 ;
1131483   +   H1x2_6  = H1x2_6  +    -0.79854804689099 * G_Marital_Status0
1131484   +          +    -0.58590001312977 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.79854804689099 * G_Marital_Status0 + 
-0.58590001312977 * G_Marital_Status1 ;
1131485   +   H1x2_1  =    -1.24057312487712 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.24057312487712 + H1x2_1 ;
1131486   +   H1x2_2  =    -0.68291139361923 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.68291139361923 + H1x2_2 ;
1131487   +   H1x2_3  =     1.06420344729961 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.06420344729961 + H1x2_3 ;
1131488   +   H1x2_4  =    -2.69713708678823 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -2.69713708678823 + H1x2_4 ;
1131489   +   H1x2_5  =    -0.12447063994137 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.12447063994137 + H1x2_5 ;
1131490   +   H1x2_6  =     -1.0719988986801 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -1.0719988986801 + H1x2_6 ;
1131491   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1131492   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1131493   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1131494   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
1131495   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
1131496   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
1131497   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
1131498   +   H1x2_6  = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
1131499   +END;
MPRINT(EM_DIAGRAM):   END;
1131500   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1131501   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1131502   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1131503   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1131504   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1131505   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1131506   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1131507   +END;
MPRINT(EM_DIAGRAM):   END;
1131508   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131509   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1131510   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131511   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1131512   +   H1x3_1  =     0.58141896766328 * S_AcceptedCmpTotal
1131513   +          +     0.88835106317195 * S_Frq  +     1.03397412242189 * S_Income
1131514   +          +    -0.19511498332885 * S_Mnt  +     0.79222351582255 *
1131515   +        S_MntGoldProds  +     1.84666352042484 * S_MntMeatProducts
1131516   +          +     0.26439819900146 * S_MntWines  +    -0.49316136014272 *
1131517   +        S_NumDistPurchases  +    -1.53931690693652 * S_RFMstat
1131518   +          +     0.66163259224518 * S_RMntFrq  +    -0.05038100966606 *
1131519   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.58141896766328 * S_AcceptedCmpTotal + 0.88835106317195 * 
S_Frq + 1.03397412242189 * S_Income + -0.19511498332885 * S_Mnt + 0.79222351582255 * 
S_MntGoldProds + 1.84666352042484 * S_MntMeatProducts + 0.26439819900146 * S_MntWines + 
-0.49316136014272 * S_NumDistPurchases + -1.53931690693652 * S_RFMstat + 0.66163259224518 * 
S_RMntFrq + -0.05038100966606 * S_Recency ;
1131520   +   H1x3_2  =    -0.66965742898236 * S_AcceptedCmpTotal
1131521   +          +     0.11439761295336 * S_Frq  +      0.4311111590428 * S_Income
1131522   +          +     0.56419594384106 * S_Mnt  +    -2.58586026844722 *
1131523   +        S_MntGoldProds  +     0.84843617907069 * S_MntMeatProducts
1131524   +          +    -0.40949465894409 * S_MntWines  +    -1.12254199224924 *
1131525   +        S_NumDistPurchases  +    -1.73672932018459 * S_RFMstat
1131526   +          +     0.60800652848154 * S_RMntFrq  +     0.90023461529092 *
1131527   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.66965742898236 * S_AcceptedCmpTotal + 0.11439761295336 * 
S_Frq + 0.4311111590428 * S_Income + 0.56419594384106 * S_Mnt + -2.58586026844722 * 
S_MntGoldProds + 0.84843617907069 * S_MntMeatProducts + -0.40949465894409 * S_MntWines + 
-1.12254199224924 * S_NumDistPurchases + -1.73672932018459 * S_RFMstat + 0.60800652848154 * 
S_RMntFrq + 0.90023461529092 * S_Recency ;
1131528   +   H1x3_3  =     0.64116254904887 * S_AcceptedCmpTotal
1131529   +          +     0.36521168161033 * S_Frq  +    -1.65592742965949 * S_Income
1131530   +          +    -1.13010637801203 * S_Mnt  +     1.18435160743823 *
1131531   +        S_MntGoldProds  +     0.61014939723339 * S_MntMeatProducts
1131532   +          +     0.57967362971329 * S_MntWines  +    -0.00705774722842 *
1131533   +        S_NumDistPurchases  +    -0.09732595050305 * S_RFMstat
1131534   +          +    -1.58268748567816 * S_RMntFrq  +    -1.00117301133743 *
1131535   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.64116254904887 * S_AcceptedCmpTotal + 0.36521168161033 * 
S_Frq + -1.65592742965949 * S_Income + -1.13010637801203 * S_Mnt + 1.18435160743823 * 
S_MntGoldProds + 0.61014939723339 * S_MntMeatProducts + 0.57967362971329 * S_MntWines + 
-0.00705774722842 * S_NumDistPurchases + -0.09732595050305 * S_RFMstat + -1.58268748567816 * 
S_RMntFrq + -1.00117301133743 * S_Recency ;
1131536   +   H1x3_4  =    -2.38943135123073 * S_AcceptedCmpTotal
1131537   +          +     0.50616478854457 * S_Frq  +     1.68985840818789 * S_Income
1131538   +          +    -0.51011802824515 * S_Mnt  +     1.25167622017055 *
1131539   +        S_MntGoldProds  +    -0.78430871718616 * S_MntMeatProducts
1131540   +          +     0.97685472578698 * S_MntWines  +    -0.66992601103029 *
1131541   +        S_NumDistPurchases  +    -0.28545877583545 * S_RFMstat
1131542   +          +     0.52712575990538 * S_RMntFrq  +     1.51096273676103 *
1131543   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -2.38943135123073 * S_AcceptedCmpTotal + 0.50616478854457 * 
S_Frq + 1.68985840818789 * S_Income + -0.51011802824515 * S_Mnt + 1.25167622017055 * 
S_MntGoldProds + -0.78430871718616 * S_MntMeatProducts + 0.97685472578698 * S_MntWines + 
-0.66992601103029 * S_NumDistPurchases + -0.28545877583545 * S_RFMstat + 0.52712575990538 * 
S_RMntFrq + 1.51096273676103 * S_Recency ;
1131544   +   H1x3_5  =     0.27293739636898 * S_AcceptedCmpTotal
1131545   +          +     0.44515009768765 * S_Frq  +     -0.4521347788574 * S_Income
1131546   +          +     0.43943223859703 * S_Mnt  +     1.17781847894182 *
1131547   +        S_MntGoldProds  +    -0.67700757595581 * S_MntMeatProducts
1131548   +          +    -1.46437355846341 * S_MntWines  +    -0.09365592083561 *
1131549   +        S_NumDistPurchases  +     0.94926901433762 * S_RFMstat
1131550   +          +     2.40216905424957 * S_RMntFrq  +     0.65859109347516 *
1131551   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.27293739636898 * S_AcceptedCmpTotal + 0.44515009768765 * 
S_Frq + -0.4521347788574 * S_Income + 0.43943223859703 * S_Mnt + 1.17781847894182 * 
S_MntGoldProds + -0.67700757595581 * S_MntMeatProducts + -1.46437355846341 * S_MntWines + 
-0.09365592083561 * S_NumDistPurchases + 0.94926901433762 * S_RFMstat + 2.40216905424957 * 
S_RMntFrq + 0.65859109347516 * S_Recency ;
1131552   +   H1x3_6  =     0.79944121174459 * S_AcceptedCmpTotal
1131553   +          +     0.19594924011495 * S_Frq  +     1.07233338144708 * S_Income
1131554   +          +    -0.39577530492174 * S_Mnt  +    -0.18122578134776 *
1131555   +        S_MntGoldProds  +    -0.26451891721245 * S_MntMeatProducts
1131556   +          +    -0.86856724355925 * S_MntWines  +    -1.81909916765471 *
1131557   +        S_NumDistPurchases  +     1.03983663011092 * S_RFMstat
1131558   +          +    -0.86768378180894 * S_RMntFrq  +     0.40747604583851 *
1131559   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.79944121174459 * S_AcceptedCmpTotal + 0.19594924011495 * 
S_Frq + 1.07233338144708 * S_Income + -0.39577530492174 * S_Mnt + -0.18122578134776 * 
S_MntGoldProds + -0.26451891721245 * S_MntMeatProducts + -0.86856724355925 * S_MntWines + 
-1.81909916765471 * S_NumDistPurchases + 1.03983663011092 * S_RFMstat + -0.86768378180894 * 
S_RMntFrq + 0.40747604583851 * S_Recency ;
1131560   +   H1x3_1  = H1x3_1  +    -1.44819834546359 * G_Marital_Status0
1131561   +          +     2.03049158937708 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.44819834546359 * G_Marital_Status0 + 
2.03049158937708 * G_Marital_Status1 ;
1131562   +   H1x3_2  = H1x3_2  +     0.32142977922032 * G_Marital_Status0
1131563   +          +     0.95456795317325 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.32142977922032 * G_Marital_Status0 + 
0.95456795317325 * G_Marital_Status1 ;
1131564   +   H1x3_3  = H1x3_3  +    -0.05546140673943 * G_Marital_Status0
1131565   +          +    -0.64267205173982 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.05546140673943 * G_Marital_Status0 + 
-0.64267205173982 * G_Marital_Status1 ;
1131566   +   H1x3_4  = H1x3_4  +     0.67758459902812 * G_Marital_Status0
1131567   +          +    -0.13878277097624 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 0.67758459902812 * G_Marital_Status0 + 
-0.13878277097624 * G_Marital_Status1 ;
1131568   +   H1x3_5  = H1x3_5  +      0.2080585980069 * G_Marital_Status0
1131569   +          +     0.39530416624983 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.2080585980069 * G_Marital_Status0 + 0.39530416624983 
* G_Marital_Status1 ;
1131570   +   H1x3_6  = H1x3_6  +    -0.56268194068278 * G_Marital_Status0
1131571   +          +    -1.38939757582535 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -0.56268194068278 * G_Marital_Status0 + 
-1.38939757582535 * G_Marital_Status1 ;
1131572   +   H1x3_1  =    -0.02110450300917 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02110450300917 + H1x3_1 ;
1131573   +   H1x3_2  =     0.68400964836412 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.68400964836412 + H1x3_2 ;
1131574   +   H1x3_3  =     1.27295692924548 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.27295692924548 + H1x3_3 ;
1131575   +   H1x3_4  =     0.57759340173339 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.57759340173339 + H1x3_4 ;
1131576   +   H1x3_5  =     0.68658947855937 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.68658947855937 + H1x3_5 ;
1131577   +   H1x3_6  =     0.96960260915788 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.96960260915788 + H1x3_6 ;
1131578   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1131579   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1131580   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1131581   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
1131582   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
1131583   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
1131584   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
1131585   +   H1x3_6  = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
1131586   +END;
MPRINT(EM_DIAGRAM):   END;
1131587   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1131588   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1131589   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1131590   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1131591   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
1131592   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
1131593   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
1131594   +END;
MPRINT(EM_DIAGRAM):   END;
1131595   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131596   +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
1131597   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131598   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1131599   +   H1x4_1  =     1.13261766886471 * S_AcceptedCmpTotal
1131600   +          +     0.78824304763496 * S_Frq  +    -1.86817100110189 * S_Income
1131601   +          +    -1.58760227599089 * S_Mnt  +     -1.1330886213304 *
1131602   +        S_MntGoldProds  +     0.82082069255126 * S_MntMeatProducts
1131603   +          +    -0.34149449572975 * S_MntWines  +     0.45944109671738 *
1131604   +        S_NumDistPurchases  +     2.00910621486809 * S_RFMstat
1131605   +          +     -1.8305685414059 * S_RMntFrq  +     1.46038466341548 *
1131606   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.13261766886471 * S_AcceptedCmpTotal + 0.78824304763496 * 
S_Frq + -1.86817100110189 * S_Income + -1.58760227599089 * S_Mnt + -1.1330886213304 * 
S_MntGoldProds + 0.82082069255126 * S_MntMeatProducts + -0.34149449572975 * S_MntWines + 
0.45944109671738 * S_NumDistPurchases + 2.00910621486809 * S_RFMstat + -1.8305685414059 * 
S_RMntFrq + 1.46038466341548 * S_Recency ;
1131607   +   H1x4_2  =    -0.63266188932348 * S_AcceptedCmpTotal
1131608   +          +    -0.01183486383209 * S_Frq  +    -1.07560568030024 * S_Income
1131609   +          +    -1.30988288899902 * S_Mnt  +     2.15841401397408 *
1131610   +        S_MntGoldProds  +    -1.27808965763357 * S_MntMeatProducts
1131611   +          +     2.04886920467378 * S_MntWines  +     0.09322121012781 *
1131612   +        S_NumDistPurchases  +    -0.37050311259862 * S_RFMstat
1131613   +          +     0.68085578996214 * S_RMntFrq  +     1.48508197039719 *
1131614   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -0.63266188932348 * S_AcceptedCmpTotal + -0.01183486383209 * 
S_Frq + -1.07560568030024 * S_Income + -1.30988288899902 * S_Mnt + 2.15841401397408 * 
S_MntGoldProds + -1.27808965763357 * S_MntMeatProducts + 2.04886920467378 * S_MntWines + 
0.09322121012781 * S_NumDistPurchases + -0.37050311259862 * S_RFMstat + 0.68085578996214 * 
S_RMntFrq + 1.48508197039719 * S_Recency ;
1131615   +   H1x4_3  =    -0.53647455024397 * S_AcceptedCmpTotal
1131616   +          +     0.24459727005497 * S_Frq  +     0.30319155437277 * S_Income
1131617   +          +     0.25206471395865 * S_Mnt  +     0.43917953957135 *
1131618   +        S_MntGoldProds  +    -0.10933570154764 * S_MntMeatProducts
1131619   +          +    -0.04059236687792 * S_MntWines  +     0.35677739352706 *
1131620   +        S_NumDistPurchases  +     1.38086899403811 * S_RFMstat
1131621   +          +    -0.32751457592661 * S_RMntFrq  +    -0.15926282047245 *
1131622   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_3 = -0.53647455024397 * S_AcceptedCmpTotal + 0.24459727005497 * 
S_Frq + 0.30319155437277 * S_Income + 0.25206471395865 * S_Mnt + 0.43917953957135 * 
S_MntGoldProds + -0.10933570154764 * S_MntMeatProducts + -0.04059236687792 * S_MntWines + 
0.35677739352706 * S_NumDistPurchases + 1.38086899403811 * S_RFMstat + -0.32751457592661 * 
S_RMntFrq + -0.15926282047245 * S_Recency ;
1131623   +   H1x4_4  =     0.24225159923716 * S_AcceptedCmpTotal
1131624   +          +    -0.83397540163538 * S_Frq  +     0.65454415304883 * S_Income
1131625   +          +     -2.1008417113285 * S_Mnt  +     1.46444392612369 *
1131626   +        S_MntGoldProds  +     1.98843066844745 * S_MntMeatProducts
1131627   +          +    -0.31310064337061 * S_MntWines  +     0.56236194506314 *
1131628   +        S_NumDistPurchases  +    -0.20512833160409 * S_RFMstat
1131629   +          +    -0.20631901696385 * S_RMntFrq  +    -0.01945293751142 *
1131630   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 0.24225159923716 * S_AcceptedCmpTotal + -0.83397540163538 * 
S_Frq + 0.65454415304883 * S_Income + -2.1008417113285 * S_Mnt + 1.46444392612369 * 
S_MntGoldProds + 1.98843066844745 * S_MntMeatProducts + -0.31310064337061 * S_MntWines + 
0.56236194506314 * S_NumDistPurchases + -0.20512833160409 * S_RFMstat + -0.20631901696385 * 
S_RMntFrq + -0.01945293751142 * S_Recency ;
1131631   +   H1x4_5  =     -0.2800504242999 * S_AcceptedCmpTotal
1131632   +          +     0.11767474732461 * S_Frq  +    -1.78109558633383 * S_Income
1131633   +          +    -0.83275451396797 * S_Mnt  +     0.13772739876237 *
1131634   +        S_MntGoldProds  +    -0.00084509726748 * S_MntMeatProducts
1131635   +          +     0.92081955236291 * S_MntWines  +    -0.84663906140096 *
1131636   +        S_NumDistPurchases  +     1.07425261538134 * S_RFMstat
1131637   +          +    -0.27830850445101 * S_RMntFrq  +     0.74380794599056 *
1131638   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_5 = -0.2800504242999 * S_AcceptedCmpTotal + 0.11767474732461 * 
S_Frq + -1.78109558633383 * S_Income + -0.83275451396797 * S_Mnt + 0.13772739876237 * 
S_MntGoldProds + -0.00084509726748 * S_MntMeatProducts + 0.92081955236291 * S_MntWines + 
-0.84663906140096 * S_NumDistPurchases + 1.07425261538134 * S_RFMstat + -0.27830850445101 * 
S_RMntFrq + 0.74380794599056 * S_Recency ;
1131639   +   H1x4_6  =     -1.1119291723593 * S_AcceptedCmpTotal
1131640   +          +     0.56304851350844 * S_Frq  +     0.73567113537541 * S_Income
1131641   +          +    -3.12306246450604 * S_Mnt  +    -0.91316403938439 *
1131642   +        S_MntGoldProds  +    -2.69628755197256 * S_MntMeatProducts
1131643   +          +     0.85746867824621 * S_MntWines  +    -0.36724035406906 *
1131644   +        S_NumDistPurchases  +     0.28568968295985 * S_RFMstat
1131645   +          +    -0.93954323577146 * S_RMntFrq  +     0.85268992665591 *
1131646   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_6 = -1.1119291723593 * S_AcceptedCmpTotal + 0.56304851350844 * 
S_Frq + 0.73567113537541 * S_Income + -3.12306246450604 * S_Mnt + -0.91316403938439 * 
S_MntGoldProds + -2.69628755197256 * S_MntMeatProducts + 0.85746867824621 * S_MntWines + 
-0.36724035406906 * S_NumDistPurchases + 0.28568968295985 * S_RFMstat + -0.93954323577146 * 
S_RMntFrq + 0.85268992665591 * S_Recency ;
1131647   +   H1x4_1  = H1x4_1  +    -0.41637670428316 * G_Marital_Status0
1131648   +          +     1.82577173192743 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + -0.41637670428316 * G_Marital_Status0 + 
1.82577173192743 * G_Marital_Status1 ;
1131649   +   H1x4_2  = H1x4_2  +     1.30084682846119 * G_Marital_Status0
1131650   +          +     1.86494194086223 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + 1.30084682846119 * G_Marital_Status0 + 
1.86494194086223 * G_Marital_Status1 ;
1131651   +   H1x4_3  = H1x4_3  +    -2.51039247492524 * G_Marital_Status0
1131652   +          +    -0.78535196846115 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = H1x4_3 + -2.51039247492524 * G_Marital_Status0 + 
-0.78535196846115 * G_Marital_Status1 ;
1131653   +   H1x4_4  = H1x4_4  +    -1.66536345681649 * G_Marital_Status0
1131654   +          +    -1.13643623224979 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = H1x4_4 + -1.66536345681649 * G_Marital_Status0 + 
-1.13643623224979 * G_Marital_Status1 ;
1131655   +   H1x4_5  = H1x4_5  +     0.34381083459151 * G_Marital_Status0
1131656   +          +    -0.50611098994468 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = H1x4_5 + 0.34381083459151 * G_Marital_Status0 + 
-0.50611098994468 * G_Marital_Status1 ;
1131657   +   H1x4_6  = H1x4_6  +    -0.50144547845039 * G_Marital_Status0
1131658   +          +     1.05855030017376 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = H1x4_6 + -0.50144547845039 * G_Marital_Status0 + 
1.05855030017376 * G_Marital_Status1 ;
1131659   +   H1x4_1  =     0.23907181959326 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 0.23907181959326 + H1x4_1 ;
1131660   +   H1x4_2  =    -1.57201194785995 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -1.57201194785995 + H1x4_2 ;
1131661   +   H1x4_3  =     2.06322674265618 + H1x4_3 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = 2.06322674265618 + H1x4_3 ;
1131662   +   H1x4_4  =     1.01469021578807 + H1x4_4 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.01469021578807 + H1x4_4 ;
1131663   +   H1x4_5  =     1.07767489348013 + H1x4_5 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.07767489348013 + H1x4_5 ;
1131664   +   H1x4_6  =     0.04477742816865 + H1x4_6 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = 0.04477742816865 + H1x4_6 ;
1131665   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1131666   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1131667   +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
1131668   +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
1131669   +   H1x4_3  = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_3 = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
1131670   +   H1x4_4  = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
1131671   +   H1x4_5  = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
1131672   +   H1x4_6  = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_6 = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
1131673   +END;
MPRINT(EM_DIAGRAM):   END;
1131674   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1131675   +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
1131676   +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
1131677   +   H1x4_3  = .;
MPRINT(EM_DIAGRAM):   H1x4_3 = .;
1131678   +   H1x4_4  = .;
MPRINT(EM_DIAGRAM):   H1x4_4 = .;
1131679   +   H1x4_5  = .;
MPRINT(EM_DIAGRAM):   H1x4_5 = .;
1131680   +   H1x4_6  = .;
MPRINT(EM_DIAGRAM):   H1x4_6 = .;
1131681   +END;
MPRINT(EM_DIAGRAM):   END;
1131682   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131683   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1131684   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131685   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1131686   +   H2x1_1  =     1.57657363240028 * H1x1_1  +    -0.37699618626432 * H1x1_2
1131687   +          +    -0.60919993629457 * H1x1_3  +     2.97257779188857 * H1x1_4
1131688   +          +     4.47740938165819 * H1x1_5  +    -0.85059681057218 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.57657363240028 * H1x1_1 + -0.37699618626432 * H1x1_2 + 
-0.60919993629457 * H1x1_3 + 2.97257779188857 * H1x1_4 + 4.47740938165819 * H1x1_5 + 
-0.85059681057218 * H1x1_6 ;
1131689   +   H2x1_2  =     0.58245150995434 * H1x1_1  +     1.31825599717827 * H1x1_2
1131690   +          +    -0.46604129874265 * H1x1_3  +    -1.57880778011961 * H1x1_4
1131691   +          +      0.1296024356855 * H1x1_5  +    -0.32310175742174 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.58245150995434 * H1x1_1 + 1.31825599717827 * H1x1_2 + 
-0.46604129874265 * H1x1_3 + -1.57880778011961 * H1x1_4 + 0.1296024356855 * H1x1_5 + 
-0.32310175742174 * H1x1_6 ;
1131692   +   H2x1_3  =     0.08762368266386 * H1x1_1  +     -2.1587359786783 * H1x1_2
1131693   +          +     0.53603825884818 * H1x1_3  +    -0.24087329015868 * H1x1_4
1131694   +          +     0.03296173080719 * H1x1_5  +     0.01697480121243 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.08762368266386 * H1x1_1 + -2.1587359786783 * H1x1_2 + 
0.53603825884818 * H1x1_3 + -0.24087329015868 * H1x1_4 + 0.03296173080719 * H1x1_5 + 
0.01697480121243 * H1x1_6 ;
1131695   +   H2x1_4  =    -0.11182680657167 * H1x1_1  +     0.78238566788271 * H1x1_2
1131696   +          +    -0.32984662645651 * H1x1_3  +    -0.48952564803009 * H1x1_4
1131697   +          +    -1.99607614008712 * H1x1_5  +     0.10016209874446 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.11182680657167 * H1x1_1 + 0.78238566788271 * H1x1_2 + 
-0.32984662645651 * H1x1_3 + -0.48952564803009 * H1x1_4 + -1.99607614008712 * H1x1_5 + 
0.10016209874446 * H1x1_6 ;
1131698   +   H2x1_5  =     -1.2498866108229 * H1x1_1  +      3.2369796406078 * H1x1_2
1131699   +          +      2.8181066223344 * H1x1_3  +    -3.11752751718664 * H1x1_4
1131700   +          +    -0.69294382105442 * H1x1_5  +     1.50580112761945 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.2498866108229 * H1x1_1 + 3.2369796406078 * H1x1_2 + 
2.8181066223344 * H1x1_3 + -3.11752751718664 * H1x1_4 + -0.69294382105442 * H1x1_5 + 
1.50580112761945 * H1x1_6 ;
1131701   +   H2x1_1  = H2x1_1  +     1.23510627062479 * H1x2_1
1131702   +          +     0.24021661687189 * H1x2_2  +    -1.56696654026909 * H1x2_3
1131703   +          +     1.87814576627429 * H1x2_4  +     0.77581978719058 * H1x2_5
1131704   +          +    -0.36964326956968 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.23510627062479 * H1x2_1 + 0.24021661687189 * H1x2_2 
+ -1.56696654026909 * H1x2_3 + 1.87814576627429 * H1x2_4 + 0.77581978719058 * H1x2_5 + 
-0.36964326956968 * H1x2_6 ;
1131705   +   H2x1_2  = H2x1_2  +     0.92347023180909 * H1x2_1
1131706   +          +    -0.58884204034707 * H1x2_2  +     0.32527960762166 * H1x2_3
1131707   +          +    -2.67192710315835 * H1x2_4  +     1.11142627890507 * H1x2_5
1131708   +          +     -0.0675747785188 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.92347023180909 * H1x2_1 + -0.58884204034707 * H1x2_2 
+ 0.32527960762166 * H1x2_3 + -2.67192710315835 * H1x2_4 + 1.11142627890507 * H1x2_5 + 
-0.0675747785188 * H1x2_6 ;
1131709   +   H2x1_3  = H2x1_3  +    -0.92500735470206 * H1x2_1
1131710   +          +     0.02449601034461 * H1x2_2  +    -0.75716713196308 * H1x2_3
1131711   +          +     0.16672538074212 * H1x2_4  +    -1.03440004099384 * H1x2_5
1131712   +          +     0.20622228187831 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.92500735470206 * H1x2_1 + 0.02449601034461 * H1x2_2 
+ -0.75716713196308 * H1x2_3 + 0.16672538074212 * H1x2_4 + -1.03440004099384 * H1x2_5 + 
0.20622228187831 * H1x2_6 ;
1131713   +   H2x1_4  = H2x1_4  +     1.25485096748114 * H1x2_1
1131714   +          +     -0.2345670529973 * H1x2_2  +     1.00007865183196 * H1x2_3
1131715   +          +    -0.19520365006597 * H1x2_4  +     0.15141232788955 * H1x2_5
1131716   +          +     0.99704195296742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25485096748114 * H1x2_1 + -0.2345670529973 * H1x2_2 
+ 1.00007865183196 * H1x2_3 + -0.19520365006597 * H1x2_4 + 0.15141232788955 * H1x2_5 + 
0.99704195296742 * H1x2_6 ;
1131717   +   H2x1_5  = H2x1_5  +    -0.65666404502833 * H1x2_1
1131718   +          +     2.28944563427288 * H1x2_2  +    -0.53344610521696 * H1x2_3
1131719   +          +      -0.793597979143 * H1x2_4  +     -0.5657184003534 * H1x2_5
1131720   +          +     0.52117926766363 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.65666404502833 * H1x2_1 + 2.28944563427288 * H1x2_2 
+ -0.53344610521696 * H1x2_3 + -0.793597979143 * H1x2_4 + -0.5657184003534 * H1x2_5 + 
0.52117926766363 * H1x2_6 ;
1131721   +   H2x1_1  = H2x1_1  +    -0.22872297219456 * H1x3_1
1131722   +          +     0.44130997341488 * H1x3_2  +     0.85543947016407 * H1x3_3
1131723   +          +      0.9172319436964 * H1x3_4  +    -0.63323674278101 * H1x3_5
1131724   +          +       0.010792162082 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.22872297219456 * H1x3_1 + 0.44130997341488 * H1x3_2 
+ 0.85543947016407 * H1x3_3 + 0.9172319436964 * H1x3_4 + -0.63323674278101 * H1x3_5 + 
0.010792162082 * H1x3_6 ;
1131725   +   H2x1_2  = H2x1_2  +    -0.47961853683007 * H1x3_1
1131726   +          +     0.67283234118014 * H1x3_2  +    -0.12148381681871 * H1x3_3
1131727   +          +     0.11539127068604 * H1x3_4  +     0.71547134269459 * H1x3_5
1131728   +          +     0.31051080747621 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.47961853683007 * H1x3_1 + 0.67283234118014 * H1x3_2 
+ -0.12148381681871 * H1x3_3 + 0.11539127068604 * H1x3_4 + 0.71547134269459 * H1x3_5 + 
0.31051080747621 * H1x3_6 ;
1131729   +   H2x1_3  = H2x1_3  +     0.84914297140244 * H1x3_1
1131730   +          +     0.52803158023536 * H1x3_2  +    -1.39949725219783 * H1x3_3
1131731   +          +     0.69603350257472 * H1x3_4  +    -0.99298091528215 * H1x3_5
1131732   +          +      0.4901677948096 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.84914297140244 * H1x3_1 + 0.52803158023536 * H1x3_2 
+ -1.39949725219783 * H1x3_3 + 0.69603350257472 * H1x3_4 + -0.99298091528215 * H1x3_5 + 
0.4901677948096 * H1x3_6 ;
1131733   +   H2x1_4  = H2x1_4  +     1.25437670540229 * H1x3_1
1131734   +          +     0.10767112672867 * H1x3_2  +     -2.4886577317349 * H1x3_3
1131735   +          +    -1.19999974192227 * H1x3_4  +     2.65195856746166 * H1x3_5
1131736   +          +    -0.35850032269696 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25437670540229 * H1x3_1 + 0.10767112672867 * H1x3_2 
+ -2.4886577317349 * H1x3_3 + -1.19999974192227 * H1x3_4 + 2.65195856746166 * H1x3_5 + 
-0.35850032269696 * H1x3_6 ;
1131737   +   H2x1_5  = H2x1_5  +    -0.18873569038601 * H1x3_1
1131738   +          +    -0.05695497456875 * H1x3_2  +    -1.09169714101723 * H1x3_3
1131739   +          +     0.66962829232535 * H1x3_4  +     0.68262583745167 * H1x3_5
1131740   +          +     0.91538472149247 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.18873569038601 * H1x3_1 + -0.05695497456875 * 
H1x3_2 + -1.09169714101723 * H1x3_3 + 0.66962829232535 * H1x3_4 + 0.68262583745167 * H1x3_5 + 
0.91538472149247 * H1x3_6 ;
1131741   +   H2x1_1  = H2x1_1  +    -0.77701371575001 * H1x4_1
1131742   +          +    -1.54239140939922 * H1x4_2  +    -0.26570372401877 * H1x4_3
1131743   +          +     0.00097824237229 * H1x4_4  +     0.57921309289721 * H1x4_5
1131744   +          +     1.46692133055956 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.77701371575001 * H1x4_1 + -1.54239140939922 * 
H1x4_2 + -0.26570372401877 * H1x4_3 + 0.00097824237229 * H1x4_4 + 0.57921309289721 * H1x4_5 + 
1.46692133055956 * H1x4_6 ;
1131745   +   H2x1_2  = H2x1_2  +     0.96564519202767 * H1x4_1
1131746   +          +    -0.06466152110331 * H1x4_2  +    -0.66659637249467 * H1x4_3
1131747   +          +     0.59673973270306 * H1x4_4  +     2.45492273841581 * H1x4_5
1131748   +          +     -0.4804481967354 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.96564519202767 * H1x4_1 + -0.06466152110331 * H1x4_2 
+ -0.66659637249467 * H1x4_3 + 0.59673973270306 * H1x4_4 + 2.45492273841581 * H1x4_5 + 
-0.4804481967354 * H1x4_6 ;
1131749   +   H2x1_3  = H2x1_3  +     0.75339074826799 * H1x4_1
1131750   +          +     1.26373188682879 * H1x4_2  +     0.49419374749947 * H1x4_3
1131751   +          +     1.26541916145956 * H1x4_4  +     0.10039190806961 * H1x4_5
1131752   +          +    -0.79556185531974 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.75339074826799 * H1x4_1 + 1.26373188682879 * H1x4_2 
+ 0.49419374749947 * H1x4_3 + 1.26541916145956 * H1x4_4 + 0.10039190806961 * H1x4_5 + 
-0.79556185531974 * H1x4_6 ;
1131753   +   H2x1_4  = H2x1_4  +    -0.28271287281925 * H1x4_1
1131754   +          +      2.1208193298333 * H1x4_2  +    -0.65223420232343 * H1x4_3
1131755   +          +     0.02666229497558 * H1x4_4  +     0.72865787458027 * H1x4_5
1131756   +          +    -0.22377472142722 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.28271287281925 * H1x4_1 + 2.1208193298333 * H1x4_2 
+ -0.65223420232343 * H1x4_3 + 0.02666229497558 * H1x4_4 + 0.72865787458027 * H1x4_5 + 
-0.22377472142722 * H1x4_6 ;
1131757   +   H2x1_5  = H2x1_5  +    -0.84067714042271 * H1x4_1
1131758   +          +    -1.59141777016956 * H1x4_2  +     0.46077797807782 * H1x4_3
1131759   +          +    -0.07031579794448 * H1x4_4  +     0.83754013895307 * H1x4_5
1131760   +          +     0.49805259687865 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.84067714042271 * H1x4_1 + -1.59141777016956 * 
H1x4_2 + 0.46077797807782 * H1x4_3 + -0.07031579794448 * H1x4_4 + 0.83754013895307 * H1x4_5 + 
0.49805259687865 * H1x4_6 ;
1131761   +   H2x1_1  =     1.86496757154162 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.86496757154162 + H2x1_1 ;
1131762   +   H2x1_2  =     0.46453634696909 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.46453634696909 + H2x1_2 ;
1131763   +   H2x1_3  =     0.36165501609225 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.36165501609225 + H2x1_3 ;
1131764   +   H2x1_4  =    -0.91790753889181 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.91790753889181 + H2x1_4 ;
1131765   +   H2x1_5  =     2.82445131106489 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.82445131106489 + H2x1_5 ;
1131766   +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
1131767   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
1131768   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1131769   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1131770   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1131771   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1131772   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1131773   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1131774   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1131775   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1131776   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1131777   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1131778   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1131779   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1131780   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1131781   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1131782   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1131783   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1131784   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1131785   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1131786   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1131787   +END;
MPRINT(EM_DIAGRAM):   END;
1131788   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1131789   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1131790   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1131791   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1131792   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1131793   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1131794   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1131795   +END;
MPRINT(EM_DIAGRAM):   END;
1131796   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131797   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1131798   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131799   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1131800   +   H2x2_1  =     0.06037434087051 * H1x1_1  +     2.10312669809986 * H1x1_2
1131801   +          +     0.25966374544266 * H1x1_3  +     -0.4604625015482 * H1x1_4
1131802   +          +    -0.04852853005798 * H1x1_5  +     1.73108900683337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.06037434087051 * H1x1_1 + 2.10312669809986 * H1x1_2 + 
0.25966374544266 * H1x1_3 + -0.4604625015482 * H1x1_4 + -0.04852853005798 * H1x1_5 + 
1.73108900683337 * H1x1_6 ;
1131803   +   H2x2_2  =    -1.98874787809729 * H1x1_1  +    -0.90575568783349 * H1x1_2
1131804   +          +     2.19451885005981 * H1x1_3  +     0.86127175797091 * H1x1_4
1131805   +          +     0.88302785384691 * H1x1_5  +     1.44831802939799 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.98874787809729 * H1x1_1 + -0.90575568783349 * H1x1_2 + 
2.19451885005981 * H1x1_3 + 0.86127175797091 * H1x1_4 + 0.88302785384691 * H1x1_5 + 
1.44831802939799 * H1x1_6 ;
1131806   +   H2x2_3  =     0.99020573159855 * H1x1_1  +    -0.25509107111568 * H1x1_2
1131807   +          +    -0.88380027397433 * H1x1_3  +     2.61444810707966 * H1x1_4
1131808   +          +     1.12768553693881 * H1x1_5  +    -1.33423515707253 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.99020573159855 * H1x1_1 + -0.25509107111568 * H1x1_2 + 
-0.88380027397433 * H1x1_3 + 2.61444810707966 * H1x1_4 + 1.12768553693881 * H1x1_5 + 
-1.33423515707253 * H1x1_6 ;
1131809   +   H2x2_4  =    -0.48971657670431 * H1x1_1  +    -2.03924441101145 * H1x1_2
1131810   +          +    -0.44598954940675 * H1x1_3  +    -0.38296699607675 * H1x1_4
1131811   +          +    -0.46829791763961 * H1x1_5  +     0.57571476480191 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.48971657670431 * H1x1_1 + -2.03924441101145 * H1x1_2 + 
-0.44598954940675 * H1x1_3 + -0.38296699607675 * H1x1_4 + -0.46829791763961 * H1x1_5 + 
0.57571476480191 * H1x1_6 ;
1131812   +   H2x2_5  =     1.15324249951205 * H1x1_1  +    -0.30656607959814 * H1x1_2
1131813   +          +    -0.26327906953925 * H1x1_3  +    -0.30055126052518 * H1x1_4
1131814   +          +     1.20108560127357 * H1x1_5  +    -2.01222927536337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.15324249951205 * H1x1_1 + -0.30656607959814 * H1x1_2 + 
-0.26327906953925 * H1x1_3 + -0.30055126052518 * H1x1_4 + 1.20108560127357 * H1x1_5 + 
-2.01222927536337 * H1x1_6 ;
1131815   +   H2x2_1  = H2x2_1  +     0.67714997403987 * H1x2_1
1131816   +          +     0.58512699375084 * H1x2_2  +     0.82352577521669 * H1x2_3
1131817   +          +    -0.10235751124142 * H1x2_4  +     0.33612939980192 * H1x2_5
1131818   +          +    -0.86707973977777 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.67714997403987 * H1x2_1 + 0.58512699375084 * H1x2_2 
+ 0.82352577521669 * H1x2_3 + -0.10235751124142 * H1x2_4 + 0.33612939980192 * H1x2_5 + 
-0.86707973977777 * H1x2_6 ;
1131819   +   H2x2_2  = H2x2_2  +     0.54358612690033 * H1x2_1
1131820   +          +     0.85147893022911 * H1x2_2  +     0.19383313272548 * H1x2_3
1131821   +          +     0.54163359333706 * H1x2_4  +    -0.12377705517298 * H1x2_5
1131822   +          +     0.34775419906833 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.54358612690033 * H1x2_1 + 0.85147893022911 * H1x2_2 
+ 0.19383313272548 * H1x2_3 + 0.54163359333706 * H1x2_4 + -0.12377705517298 * H1x2_5 + 
0.34775419906833 * H1x2_6 ;
1131823   +   H2x2_3  = H2x2_3  +    -0.93107945276808 * H1x2_1
1131824   +          +     0.68475936175775 * H1x2_2  +    -0.23180217492353 * H1x2_3
1131825   +          +     0.62637113173904 * H1x2_4  +      -0.494489282403 * H1x2_5
1131826   +          +    -0.92757761378206 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.93107945276808 * H1x2_1 + 0.68475936175775 * H1x2_2 
+ -0.23180217492353 * H1x2_3 + 0.62637113173904 * H1x2_4 + -0.494489282403 * H1x2_5 + 
-0.92757761378206 * H1x2_6 ;
1131827   +   H2x2_4  = H2x2_4  +    -0.04592275767761 * H1x2_1
1131828   +          +    -0.46728046145973 * H1x2_2  +    -0.84120395772864 * H1x2_3
1131829   +          +     0.15719249141893 * H1x2_4  +    -0.46514309972577 * H1x2_5
1131830   +          +     1.22882033880531 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.04592275767761 * H1x2_1 + -0.46728046145973 * 
H1x2_2 + -0.84120395772864 * H1x2_3 + 0.15719249141893 * H1x2_4 + -0.46514309972577 * H1x2_5 + 
1.22882033880531 * H1x2_6 ;
1131831   +   H2x2_5  = H2x2_5  +     1.84159049843244 * H1x2_1
1131832   +          +     0.10275783758743 * H1x2_2  +    -1.43072878385761 * H1x2_3
1131833   +          +     0.55082995966416 * H1x2_4  +      0.6610129464186 * H1x2_5
1131834   +          +     1.13665339513142 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.84159049843244 * H1x2_1 + 0.10275783758743 * H1x2_2 
+ -1.43072878385761 * H1x2_3 + 0.55082995966416 * H1x2_4 + 0.6610129464186 * H1x2_5 + 
1.13665339513142 * H1x2_6 ;
1131835   +   H2x2_1  = H2x2_1  +    -1.51032464504011 * H1x3_1
1131836   +          +    -0.09256867451899 * H1x3_2  +     0.32445533867689 * H1x3_3
1131837   +          +     0.05761597623645 * H1x3_4  +    -0.76755137543453 * H1x3_5
1131838   +          +    -0.84355541605354 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.51032464504011 * H1x3_1 + -0.09256867451899 * 
H1x3_2 + 0.32445533867689 * H1x3_3 + 0.05761597623645 * H1x3_4 + -0.76755137543453 * H1x3_5 + 
-0.84355541605354 * H1x3_6 ;
1131839   +   H2x2_2  = H2x2_2  +     0.10183122181912 * H1x3_1
1131840   +          +    -0.30112412370797 * H1x3_2  +     0.67666605377075 * H1x3_3
1131841   +          +    -0.05362728717558 * H1x3_4  +    -0.02087908172702 * H1x3_5
1131842   +          +    -0.14832407235293 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.10183122181912 * H1x3_1 + -0.30112412370797 * H1x3_2 
+ 0.67666605377075 * H1x3_3 + -0.05362728717558 * H1x3_4 + -0.02087908172702 * H1x3_5 + 
-0.14832407235293 * H1x3_6 ;
1131843   +   H2x2_3  = H2x2_3  +     1.70579601255161 * H1x3_1
1131844   +          +     -0.4658368752668 * H1x3_2  +    -0.54573113497487 * H1x3_3
1131845   +          +     1.13279034034213 * H1x3_4  +     1.23714589942258 * H1x3_5
1131846   +          +     0.41209753590668 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 1.70579601255161 * H1x3_1 + -0.4658368752668 * H1x3_2 
+ -0.54573113497487 * H1x3_3 + 1.13279034034213 * H1x3_4 + 1.23714589942258 * H1x3_5 + 
0.41209753590668 * H1x3_6 ;
1131847   +   H2x2_4  = H2x2_4  +     0.21012073552633 * H1x3_1
1131848   +          +      -1.607803967771 * H1x3_2  +     0.02641742148684 * H1x3_3
1131849   +          +      -0.919177834124 * H1x3_4  +    -0.46658991803838 * H1x3_5
1131850   +          +     0.05356295771962 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.21012073552633 * H1x3_1 + -1.607803967771 * H1x3_2 + 
0.02641742148684 * H1x3_3 + -0.919177834124 * H1x3_4 + -0.46658991803838 * H1x3_5 + 
0.05356295771962 * H1x3_6 ;
1131851   +   H2x2_5  = H2x2_5  +     -1.1424376096243 * H1x3_1
1131852   +          +    -0.47941730936597 * H1x3_2  +    -1.44857674506057 * H1x3_3
1131853   +          +     -2.0300913051093 * H1x3_4  +    -0.12476620160938 * H1x3_5
1131854   +          +      1.3865980084186 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.1424376096243 * H1x3_1 + -0.47941730936597 * H1x3_2 
+ -1.44857674506057 * H1x3_3 + -2.0300913051093 * H1x3_4 + -0.12476620160938 * H1x3_5 + 
1.3865980084186 * H1x3_6 ;
1131855   +   H2x2_1  = H2x2_1  +    -0.80277778579719 * H1x4_1
1131856   +          +     0.89356845434924 * H1x4_2  +     1.34679856015636 * H1x4_3
1131857   +          +    -0.75666255425893 * H1x4_4  +    -0.76982332990737 * H1x4_5
1131858   +          +     0.16602366912489 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.80277778579719 * H1x4_1 + 0.89356845434924 * H1x4_2 
+ 1.34679856015636 * H1x4_3 + -0.75666255425893 * H1x4_4 + -0.76982332990737 * H1x4_5 + 
0.16602366912489 * H1x4_6 ;
1131859   +   H2x2_2  = H2x2_2  +    -1.23815292104545 * H1x4_1
1131860   +          +     0.15726093177842 * H1x4_2  +     0.11603212859646 * H1x4_3
1131861   +          +     0.38287343591011 * H1x4_4  +    -0.51333663927664 * H1x4_5
1131862   +          +     -0.9577144624714 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.23815292104545 * H1x4_1 + 0.15726093177842 * H1x4_2 
+ 0.11603212859646 * H1x4_3 + 0.38287343591011 * H1x4_4 + -0.51333663927664 * H1x4_5 + 
-0.9577144624714 * H1x4_6 ;
1131863   +   H2x2_3  = H2x2_3  +    -0.68480171858681 * H1x4_1
1131864   +          +    -0.64475211431817 * H1x4_2  +     0.54382770716837 * H1x4_3
1131865   +          +     0.07586519798399 * H1x4_4  +      -0.158352646931 * H1x4_5
1131866   +          +    -0.86962851115528 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.68480171858681 * H1x4_1 + -0.64475211431817 * 
H1x4_2 + 0.54382770716837 * H1x4_3 + 0.07586519798399 * H1x4_4 + -0.158352646931 * H1x4_5 + 
-0.86962851115528 * H1x4_6 ;
1131867   +   H2x2_4  = H2x2_4  +     1.08721247219364 * H1x4_1
1131868   +          +    -0.00199447585891 * H1x4_2  +    -0.84066724442019 * H1x4_3
1131869   +          +     0.28532638217608 * H1x4_4  +    -1.14779513957631 * H1x4_5
1131870   +          +     2.01216139921959 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.08721247219364 * H1x4_1 + -0.00199447585891 * H1x4_2 
+ -0.84066724442019 * H1x4_3 + 0.28532638217608 * H1x4_4 + -1.14779513957631 * H1x4_5 + 
2.01216139921959 * H1x4_6 ;
1131871   +   H2x2_5  = H2x2_5  +    -0.82582817846967 * H1x4_1
1131872   +          +    -1.09057773595959 * H1x4_2  +     -0.2490905553905 * H1x4_3
1131873   +          +     0.93092377717594 * H1x4_4  +     0.02946641402494 * H1x4_5
1131874   +          +    -0.19026348436175 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.82582817846967 * H1x4_1 + -1.09057773595959 * 
H1x4_2 + -0.2490905553905 * H1x4_3 + 0.93092377717594 * H1x4_4 + 0.02946641402494 * H1x4_5 + 
-0.19026348436175 * H1x4_6 ;
1131875   +   H2x2_1  =      0.4280804812723 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.4280804812723 + H2x2_1 ;
1131876   +   H2x2_2  =    -1.09169904475569 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.09169904475569 + H2x2_2 ;
1131877   +   H2x2_3  =      1.1980619484542 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.1980619484542 + H2x2_3 ;
1131878   +   H2x2_4  =    -0.69756677248934 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.69756677248934 + H2x2_4 ;
1131879   +   H2x2_5  =    -1.87910212660657 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -1.87910212660657 + H2x2_5 ;
1131880   +   H2x2_6  = 0;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0;
1131881   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
1131882   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1131883   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
1131884   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
1131885   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
1131886   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
1131887   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
1131888   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
1131889   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
1131890   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
1131891   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
1131892   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
1131893   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
1131894   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
1131895   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
1131896   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
1131897   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
1131898   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
1131899   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
1131900   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
1131901   +END;
MPRINT(EM_DIAGRAM):   END;
1131902   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1131903   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1131904   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1131905   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1131906   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
1131907   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
1131908   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
1131909   +END;
MPRINT(EM_DIAGRAM):   END;
1131910   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131911   +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
1131912   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131913   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1131914   +   H2x3_1  =     0.51206365204428 * H1x1_1  +    -1.75446248490807 * H1x1_2
1131915   +          +     0.22956544269482 * H1x1_3  +     0.91651437630074 * H1x1_4
1131916   +          +    -0.88731743590726 * H1x1_5  +     0.75959028005652 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.51206365204428 * H1x1_1 + -1.75446248490807 * H1x1_2 + 
0.22956544269482 * H1x1_3 + 0.91651437630074 * H1x1_4 + -0.88731743590726 * H1x1_5 + 
0.75959028005652 * H1x1_6 ;
1131917   +   H2x3_2  =    -0.45196055100748 * H1x1_1  +    -0.30516535345407 * H1x1_2
1131918   +          +    -0.95535662641329 * H1x1_3  +     0.98793241812876 * H1x1_4
1131919   +          +    -2.26205386368521 * H1x1_5  +    -0.79989554227284 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -0.45196055100748 * H1x1_1 + -0.30516535345407 * H1x1_2 + 
-0.95535662641329 * H1x1_3 + 0.98793241812876 * H1x1_4 + -2.26205386368521 * H1x1_5 + 
-0.79989554227284 * H1x1_6 ;
1131920   +   H2x3_3  =     1.75400558713364 * H1x1_1  +     0.36065784285286 * H1x1_2
1131921   +          +    -0.26047606287884 * H1x1_3  +    -0.92639558885443 * H1x1_4
1131922   +          +     1.89978202395282 * H1x1_5  +     1.46105111567983 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = 1.75400558713364 * H1x1_1 + 0.36065784285286 * H1x1_2 + 
-0.26047606287884 * H1x1_3 + -0.92639558885443 * H1x1_4 + 1.89978202395282 * H1x1_5 + 
1.46105111567983 * H1x1_6 ;
1131923   +   H2x3_4  =     -1.0609986914691 * H1x1_1  +     1.03588259392678 * H1x1_2
1131924   +          +     0.18751061078347 * H1x1_3  +     1.45467172411852 * H1x1_4
1131925   +          +     0.80970691110797 * H1x1_5  +    -0.03142746343877 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = -1.0609986914691 * H1x1_1 + 1.03588259392678 * H1x1_2 + 
0.18751061078347 * H1x1_3 + 1.45467172411852 * H1x1_4 + 0.80970691110797 * H1x1_5 + 
-0.03142746343877 * H1x1_6 ;
1131926   +   H2x3_5  =     0.68514959739435 * H1x1_1  +    -0.85703618516825 * H1x1_2
1131927   +          +    -1.42641478008517 * H1x1_3  +     0.69128253039497 * H1x1_4
1131928   +          +    -0.41103428804251 * H1x1_5  +     2.29818718782262 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = 0.68514959739435 * H1x1_1 + -0.85703618516825 * H1x1_2 + 
-1.42641478008517 * H1x1_3 + 0.69128253039497 * H1x1_4 + -0.41103428804251 * H1x1_5 + 
2.29818718782262 * H1x1_6 ;
1131929   +   H2x3_1  = H2x3_1  +    -1.02124610786304 * H1x2_1
1131930   +          +    -0.70086367508924 * H1x2_2  +     1.44543746222048 * H1x2_3
1131931   +          +      0.0077115223216 * H1x2_4  +    -1.13603676440953 * H1x2_5
1131932   +          +    -0.39006326539815 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.02124610786304 * H1x2_1 + -0.70086367508924 * 
H1x2_2 + 1.44543746222048 * H1x2_3 + 0.0077115223216 * H1x2_4 + -1.13603676440953 * H1x2_5 + 
-0.39006326539815 * H1x2_6 ;
1131933   +   H2x3_2  = H2x3_2  +     0.58504868182178 * H1x2_1
1131934   +          +    -2.53394647771808 * H1x2_2  +    -0.46920351111552 * H1x2_3
1131935   +          +    -0.13298739365164 * H1x2_4  +    -0.72916785042807 * H1x2_5
1131936   +          +     0.87575796008942 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.58504868182178 * H1x2_1 + -2.53394647771808 * H1x2_2 
+ -0.46920351111552 * H1x2_3 + -0.13298739365164 * H1x2_4 + -0.72916785042807 * H1x2_5 + 
0.87575796008942 * H1x2_6 ;
1131937   +   H2x3_3  = H2x3_3  +      -0.403068394175 * H1x2_1
1131938   +          +     2.20341156440175 * H1x2_2  +     0.18637166393472 * H1x2_3
1131939   +          +    -0.49818124689746 * H1x2_4  +    -0.57482220863202 * H1x2_5
1131940   +          +    -0.99288712489296 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -0.403068394175 * H1x2_1 + 2.20341156440175 * H1x2_2 + 
0.18637166393472 * H1x2_3 + -0.49818124689746 * H1x2_4 + -0.57482220863202 * H1x2_5 + 
-0.99288712489296 * H1x2_6 ;
1131941   +   H2x3_4  = H2x3_4  +    -0.08255075671356 * H1x2_1
1131942   +          +     0.12417859340249 * H1x2_2  +     0.38623860203678 * H1x2_3
1131943   +          +     1.30375188803419 * H1x2_4  +     0.06113655765155 * H1x2_5
1131944   +          +     2.18684373678918 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.08255075671356 * H1x2_1 + 0.12417859340249 * H1x2_2 
+ 0.38623860203678 * H1x2_3 + 1.30375188803419 * H1x2_4 + 0.06113655765155 * H1x2_5 + 
2.18684373678918 * H1x2_6 ;
1131945   +   H2x3_5  = H2x3_5  +     0.02445507420447 * H1x2_1
1131946   +          +     -1.1429834255353 * H1x2_2  +     1.15057813366971 * H1x2_3
1131947   +          +     -0.7929157351984 * H1x2_4  +      0.4343084860458 * H1x2_5
1131948   +          +      0.0384736341173 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + 0.02445507420447 * H1x2_1 + -1.1429834255353 * H1x2_2 
+ 1.15057813366971 * H1x2_3 + -0.7929157351984 * H1x2_4 + 0.4343084860458 * H1x2_5 + 
0.0384736341173 * H1x2_6 ;
1131949   +   H2x3_1  = H2x3_1  +     0.37764572590016 * H1x3_1
1131950   +          +     1.48191356825225 * H1x3_2  +    -0.26603273466393 * H1x3_3
1131951   +          +    -1.29507822568105 * H1x3_4  +     1.84557717124725 * H1x3_5
1131952   +          +    -0.65863037608331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.37764572590016 * H1x3_1 + 1.48191356825225 * H1x3_2 
+ -0.26603273466393 * H1x3_3 + -1.29507822568105 * H1x3_4 + 1.84557717124725 * H1x3_5 + 
-0.65863037608331 * H1x3_6 ;
1131953   +   H2x3_2  = H2x3_2  +    -3.49060338051306 * H1x3_1
1131954   +          +      1.3541565382925 * H1x3_2  +    -0.38315198954693 * H1x3_3
1131955   +          +    -2.08846010475603 * H1x3_4  +    -0.03268324043605 * H1x3_5
1131956   +          +     -0.2732767866426 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -3.49060338051306 * H1x3_1 + 1.3541565382925 * H1x3_2 
+ -0.38315198954693 * H1x3_3 + -2.08846010475603 * H1x3_4 + -0.03268324043605 * H1x3_5 + 
-0.2732767866426 * H1x3_6 ;
1131957   +   H2x3_3  = H2x3_3  +    -1.02108681113274 * H1x3_1
1131958   +          +     1.11670732797487 * H1x3_2  +    -2.83817066251645 * H1x3_3
1131959   +          +     2.91943649605743 * H1x3_4  +    -1.58666117886546 * H1x3_5
1131960   +          +     0.95358246629929 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -1.02108681113274 * H1x3_1 + 1.11670732797487 * H1x3_2 
+ -2.83817066251645 * H1x3_3 + 2.91943649605743 * H1x3_4 + -1.58666117886546 * H1x3_5 + 
0.95358246629929 * H1x3_6 ;
1131961   +   H2x3_4  = H2x3_4  +    -0.28934138457604 * H1x3_1
1131962   +          +     -0.1627562650927 * H1x3_2  +     1.76496399430623 * H1x3_3
1131963   +          +     2.05776756058594 * H1x3_4  +    -0.96994650178001 * H1x3_5
1131964   +          +    -1.50364154763084 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.28934138457604 * H1x3_1 + -0.1627562650927 * H1x3_2 
+ 1.76496399430623 * H1x3_3 + 2.05776756058594 * H1x3_4 + -0.96994650178001 * H1x3_5 + 
-1.50364154763084 * H1x3_6 ;
1131965   +   H2x3_5  = H2x3_5  +    -0.73016276992619 * H1x3_1
1131966   +          +    -1.48258849718818 * H1x3_2  +    -0.47908044807419 * H1x3_3
1131967   +          +      0.5957671579209 * H1x3_4  +     0.06707833713085 * H1x3_5
1131968   +          +      0.3673818114501 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.73016276992619 * H1x3_1 + -1.48258849718818 * 
H1x3_2 + -0.47908044807419 * H1x3_3 + 0.5957671579209 * H1x3_4 + 0.06707833713085 * H1x3_5 + 
0.3673818114501 * H1x3_6 ;
1131969   +   H2x3_1  = H2x3_1  +     1.64939881299916 * H1x4_1
1131970   +          +     0.29057047745206 * H1x4_2  +     -1.2430356696985 * H1x4_3
1131971   +          +     1.38895822896909 * H1x4_4  +     0.32263395713709 * H1x4_5
1131972   +          +      -0.876005602164 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 1.64939881299916 * H1x4_1 + 0.29057047745206 * H1x4_2 
+ -1.2430356696985 * H1x4_3 + 1.38895822896909 * H1x4_4 + 0.32263395713709 * H1x4_5 + 
-0.876005602164 * H1x4_6 ;
1131973   +   H2x3_2  = H2x3_2  +    -0.59279077758901 * H1x4_1
1131974   +          +     0.47534983861589 * H1x4_2  +     1.50522851379751 * H1x4_3
1131975   +          +    -0.52074826438565 * H1x4_4  +    -0.13959571645898 * H1x4_5
1131976   +          +     0.51236653129509 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.59279077758901 * H1x4_1 + 0.47534983861589 * H1x4_2 
+ 1.50522851379751 * H1x4_3 + -0.52074826438565 * H1x4_4 + -0.13959571645898 * H1x4_5 + 
0.51236653129509 * H1x4_6 ;
1131977   +   H2x3_3  = H2x3_3  +       0.170929264521 * H1x4_1
1131978   +          +    -1.09768862147461 * H1x4_2  +    -1.22166369035864 * H1x4_3
1131979   +          +    -0.43496041372082 * H1x4_4  +     0.86983484014566 * H1x4_5
1131980   +          +     0.14855508666868 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + 0.170929264521 * H1x4_1 + -1.09768862147461 * H1x4_2 + 
-1.22166369035864 * H1x4_3 + -0.43496041372082 * H1x4_4 + 0.86983484014566 * H1x4_5 + 
0.14855508666868 * H1x4_6 ;
1131981   +   H2x3_4  = H2x3_4  +    -0.26703118340308 * H1x4_1
1131982   +          +     0.58353167926887 * H1x4_2  +     1.39169479141155 * H1x4_3
1131983   +          +     -0.7893707969296 * H1x4_4  +     0.89521873365477 * H1x4_5
1131984   +          +     1.60853840268286 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.26703118340308 * H1x4_1 + 0.58353167926887 * H1x4_2 
+ 1.39169479141155 * H1x4_3 + -0.7893707969296 * H1x4_4 + 0.89521873365477 * H1x4_5 + 
1.60853840268286 * H1x4_6 ;
1131985   +   H2x3_5  = H2x3_5  +    -0.29353449181426 * H1x4_1
1131986   +          +     0.02697197445995 * H1x4_2  +     0.04454970336296 * H1x4_3
1131987   +          +    -0.17322488506489 * H1x4_4  +    -1.52564540234935 * H1x4_5
1131988   +          +      0.6650692994568 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.29353449181426 * H1x4_1 + 0.02697197445995 * H1x4_2 
+ 0.04454970336296 * H1x4_3 + -0.17322488506489 * H1x4_4 + -1.52564540234935 * H1x4_5 + 
0.6650692994568 * H1x4_6 ;
1131989   +   H2x3_1  =    -0.44046998911725 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.44046998911725 + H2x3_1 ;
1131990   +   H2x3_2  =     1.44590821330163 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 1.44590821330163 + H2x3_2 ;
1131991   +   H2x3_3  =    -0.02671947857742 + H2x3_3 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = -0.02671947857742 + H2x3_3 ;
1131992   +   H2x3_4  =     2.16876314488082 + H2x3_4 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = 2.16876314488082 + H2x3_4 ;
1131993   +   H2x3_5  =    -1.06855161267989 + H2x3_5 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = -1.06855161267989 + H2x3_5 ;
1131994   +   H2x3_6  = 0;
MPRINT(EM_DIAGRAM):   H2x3_6 = 0;
1131995   +   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
1131996   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1131997   +   H2x3_1  = EXP(H2x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_1 = EXP(H2x3_1 - _MAX_);
1131998   +   _SUM_ = _SUM_ + H2x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_1 ;
1131999   +   H2x3_2  = EXP(H2x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_2 = EXP(H2x3_2 - _MAX_);
1132000   +   _SUM_ = _SUM_ + H2x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_2 ;
1132001   +   H2x3_3  = EXP(H2x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_3 = EXP(H2x3_3 - _MAX_);
1132002   +   _SUM_ = _SUM_ + H2x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_3 ;
1132003   +   H2x3_4  = EXP(H2x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_4 = EXP(H2x3_4 - _MAX_);
1132004   +   _SUM_ = _SUM_ + H2x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_4 ;
1132005   +   H2x3_5  = EXP(H2x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_5 = EXP(H2x3_5 - _MAX_);
1132006   +   _SUM_ = _SUM_ + H2x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_5 ;
1132007   +   H2x3_6  = EXP(H2x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_6 = EXP(H2x3_6 - _MAX_);
1132008   +   _SUM_ = _SUM_ + H2x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_6 ;
1132009   +   H2x3_1  = H2x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 / _SUM_;
1132010   +   H2x3_2  = H2x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 / _SUM_;
1132011   +   H2x3_3  = H2x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 / _SUM_;
1132012   +   H2x3_4  = H2x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 / _SUM_;
1132013   +   H2x3_5  = H2x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 / _SUM_;
1132014   +   H2x3_6  = H2x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_6 = H2x3_6 / _SUM_;
1132015   +END;
MPRINT(EM_DIAGRAM):   END;
1132016   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1132017   +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
1132018   +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
1132019   +   H2x3_3  = .;
MPRINT(EM_DIAGRAM):   H2x3_3 = .;
1132020   +   H2x3_4  = .;
MPRINT(EM_DIAGRAM):   H2x3_4 = .;
1132021   +   H2x3_5  = .;
MPRINT(EM_DIAGRAM):   H2x3_5 = .;
1132022   +   H2x3_6  = .;
MPRINT(EM_DIAGRAM):   H2x3_6 = .;
1132023   +END;
MPRINT(EM_DIAGRAM):   END;
1132024   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132025   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1132026   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132027   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1132028   +   H3x1_1  =     0.14821897068309 * H2x1_1  +     0.10105634438409 * H2x1_2
1132029   +          +     0.69826499371673 * H2x1_3  +     1.65127139539807 * H2x1_4
1132030   +          +     1.34699293376382 * H2x1_5  +     0.62066324264653 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.14821897068309 * H2x1_1 + 0.10105634438409 * H2x1_2 + 
0.69826499371673 * H2x1_3 + 1.65127139539807 * H2x1_4 + 1.34699293376382 * H2x1_5 + 
0.62066324264653 * H2x1_6 ;
1132031   +   H3x1_2  =     -0.6760189094281 * H2x1_1  +     0.85348791240011 * H2x1_2
1132032   +          +    -0.07663386217946 * H2x1_3  +     2.15467384269703 * H2x1_4
1132033   +          +    -0.50699529916446 * H2x1_5  +     1.70699964755049 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.6760189094281 * H2x1_1 + 0.85348791240011 * H2x1_2 + 
-0.07663386217946 * H2x1_3 + 2.15467384269703 * H2x1_4 + -0.50699529916446 * H2x1_5 + 
1.70699964755049 * H2x1_6 ;
1132034   +   H3x1_3  =    -0.94311365048828 * H2x1_1  +    -0.69829528108975 * H2x1_2
1132035   +          +    -0.34747616168009 * H2x1_3  +     2.32941170908743 * H2x1_4
1132036   +          +     3.71768144878584 * H2x1_5  +    -0.60932405988373 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -0.94311365048828 * H2x1_1 + -0.69829528108975 * H2x1_2 + 
-0.34747616168009 * H2x1_3 + 2.32941170908743 * H2x1_4 + 3.71768144878584 * H2x1_5 + 
-0.60932405988373 * H2x1_6 ;
1132037   +   H3x1_4  =     1.69107510526388 * H2x1_1  +    -1.40350955348413 * H2x1_2
1132038   +          +    -0.47901844016365 * H2x1_3  +      0.3540542650553 * H2x1_4
1132039   +          +    -1.56597514252687 * H2x1_5  +    -0.04997148078498 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 1.69107510526388 * H2x1_1 + -1.40350955348413 * H2x1_2 + 
-0.47901844016365 * H2x1_3 + 0.3540542650553 * H2x1_4 + -1.56597514252687 * H2x1_5 + 
-0.04997148078498 * H2x1_6 ;
1132040   +   H3x1_5  =    -0.23167181678539 * H2x1_1  +    -0.65942738658946 * H2x1_2
1132041   +          +    -0.83280103611578 * H2x1_3  +    -1.03301865685228 * H2x1_4
1132042   +          +      1.3401316289209 * H2x1_5  +    -1.98639459325872 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.23167181678539 * H2x1_1 + -0.65942738658946 * H2x1_2 + 
-0.83280103611578 * H2x1_3 + -1.03301865685228 * H2x1_4 + 1.3401316289209 * H2x1_5 + 
-1.98639459325872 * H2x1_6 ;
1132043   +   H3x1_1  = H3x1_1  +    -1.96226306174896 * H2x2_1
1132044   +          +     1.03065434267907 * H2x2_2  +    -0.02977552697407 * H2x2_3
1132045   +          +    -2.15633683205343 * H2x2_4  +    -0.16172049876123 * H2x2_5
1132046   +          +     2.04617275364668 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.96226306174896 * H2x2_1 + 1.03065434267907 * H2x2_2 
+ -0.02977552697407 * H2x2_3 + -2.15633683205343 * H2x2_4 + -0.16172049876123 * H2x2_5 + 
2.04617275364668 * H2x2_6 ;
1132047   +   H3x1_2  = H3x1_2  +     0.98825486325651 * H2x2_1
1132048   +          +    -0.45791784632486 * H2x2_2  +     -0.1004093258308 * H2x2_3
1132049   +          +     -0.9411693729369 * H2x2_4  +     -0.2302105458948 * H2x2_5
1132050   +          +    -0.37660795680674 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.98825486325651 * H2x2_1 + -0.45791784632486 * H2x2_2 
+ -0.1004093258308 * H2x2_3 + -0.9411693729369 * H2x2_4 + -0.2302105458948 * H2x2_5 + 
-0.37660795680674 * H2x2_6 ;
1132051   +   H3x1_3  = H3x1_3  +    -0.01929245635771 * H2x2_1
1132052   +          +     0.59176660505983 * H2x2_2  +     0.85345798669405 * H2x2_3
1132053   +          +    -0.29251716908915 * H2x2_4  +     0.62774918208489 * H2x2_5
1132054   +          +    -0.43453791992382 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.01929245635771 * H2x2_1 + 0.59176660505983 * H2x2_2 
+ 0.85345798669405 * H2x2_3 + -0.29251716908915 * H2x2_4 + 0.62774918208489 * H2x2_5 + 
-0.43453791992382 * H2x2_6 ;
1132055   +   H3x1_4  = H3x1_4  +    -0.93313067901041 * H2x2_1
1132056   +          +     0.79407052404273 * H2x2_2  +     1.63518575530242 * H2x2_3
1132057   +          +     1.19368615452563 * H2x2_4  +     0.43365061793519 * H2x2_5
1132058   +          +    -3.30381142208727 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.93313067901041 * H2x2_1 + 0.79407052404273 * H2x2_2 
+ 1.63518575530242 * H2x2_3 + 1.19368615452563 * H2x2_4 + 0.43365061793519 * H2x2_5 + 
-3.30381142208727 * H2x2_6 ;
1132059   +   H3x1_5  = H3x1_5  +      0.2721747886066 * H2x2_1
1132060   +          +     0.29405186941774 * H2x2_2  +    -0.96425253045194 * H2x2_3
1132061   +          +    -0.34879018216113 * H2x2_4  +    -1.15330072605073 * H2x2_5
1132062   +          +    -0.34019675397366 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + 0.2721747886066 * H2x2_1 + 0.29405186941774 * H2x2_2 + 
-0.96425253045194 * H2x2_3 + -0.34879018216113 * H2x2_4 + -1.15330072605073 * H2x2_5 + 
-0.34019675397366 * H2x2_6 ;
1132063   +   H3x1_1  = H3x1_1  +     0.99938924001809 * H2x3_1
1132064   +          +    -0.28559857879809 * H2x3_2  +    -0.44648183712004 * H2x3_3
1132065   +          +    -0.23199698060307 * H2x3_4  +    -0.64346521755351 * H2x3_5
1132066   +          +     0.59340663088806 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 0.99938924001809 * H2x3_1 + -0.28559857879809 * H2x3_2 
+ -0.44648183712004 * H2x3_3 + -0.23199698060307 * H2x3_4 + -0.64346521755351 * H2x3_5 + 
0.59340663088806 * H2x3_6 ;
1132067   +   H3x1_2  = H3x1_2  +     1.61767718200144 * H2x3_1
1132068   +          +     0.59417860044733 * H2x3_2  +      1.9323992067722 * H2x3_3
1132069   +          +    -1.38224816012152 * H2x3_4  +    -2.04529937075447 * H2x3_5
1132070   +          +     0.67050797164115 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 1.61767718200144 * H2x3_1 + 0.59417860044733 * H2x3_2 
+ 1.9323992067722 * H2x3_3 + -1.38224816012152 * H2x3_4 + -2.04529937075447 * H2x3_5 + 
0.67050797164115 * H2x3_6 ;
1132071   +   H3x1_3  = H3x1_3  +    -0.69807909205706 * H2x3_1
1132072   +          +    -0.57895843216341 * H2x3_2  +    -0.16766418785512 * H2x3_3
1132073   +          +     0.40654327615846 * H2x3_4  +    -1.86698682195337 * H2x3_5
1132074   +          +    -0.51274988768251 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.69807909205706 * H2x3_1 + -0.57895843216341 * 
H2x3_2 + -0.16766418785512 * H2x3_3 + 0.40654327615846 * H2x3_4 + -1.86698682195337 * H2x3_5 + 
-0.51274988768251 * H2x3_6 ;
1132075   +   H3x1_4  = H3x1_4  +     0.48560830435522 * H2x3_1
1132076   +          +     -2.8037598804912 * H2x3_2  +    -0.30231415756008 * H2x3_3
1132077   +          +     2.41159952574381 * H2x3_4  +     0.62877424154604 * H2x3_5
1132078   +          +    -0.73773727947747 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.48560830435522 * H2x3_1 + -2.8037598804912 * H2x3_2 
+ -0.30231415756008 * H2x3_3 + 2.41159952574381 * H2x3_4 + 0.62877424154604 * H2x3_5 + 
-0.73773727947747 * H2x3_6 ;
1132079   +   H3x1_5  = H3x1_5  +    -0.87089276878422 * H2x3_1
1132080   +          +    -0.78003140915024 * H2x3_2  +    -1.46975503560585 * H2x3_3
1132081   +          +     1.87460778751879 * H2x3_4  +    -0.09219359612439 * H2x3_5
1132082   +          +    -1.07137645697526 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.87089276878422 * H2x3_1 + -0.78003140915024 * 
H2x3_2 + -1.46975503560585 * H2x3_3 + 1.87460778751879 * H2x3_4 + -0.09219359612439 * H2x3_5 + 
-1.07137645697526 * H2x3_6 ;
1132083   +   H3x1_1  =    -0.24118737469276 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.24118737469276 + H3x1_1 ;
1132084   +   H3x1_2  =     0.26844205496356 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.26844205496356 + H3x1_2 ;
1132085   +   H3x1_3  =      1.6092325807607 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.6092325807607 + H3x1_3 ;
1132086   +   H3x1_4  =     0.55904829903808 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.55904829903808 + H3x1_4 ;
1132087   +   H3x1_5  =     1.39880629138148 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.39880629138148 + H3x1_5 ;
1132088   +   H3x1_6  = 0;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0;
1132089   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
1132090   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1132091   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
1132092   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
1132093   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
1132094   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
1132095   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
1132096   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
1132097   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
1132098   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
1132099   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
1132100   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
1132101   +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
1132102   +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
1132103   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
1132104   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
1132105   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
1132106   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
1132107   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
1132108   +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
1132109   +END;
MPRINT(EM_DIAGRAM):   END;
1132110   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1132111   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1132112   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1132113   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1132114   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
1132115   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
1132116   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
1132117   +END;
MPRINT(EM_DIAGRAM):   END;
1132118   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132119   +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
1132120   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132121   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1132122   +   H3x2_1  =     0.13469056275633 * H2x1_1  +    -1.31570873196603 * H2x1_2
1132123   +          +    -0.83004507775706 * H2x1_3  +     1.14954585467995 * H2x1_4
1132124   +          +     0.01234753333089 * H2x1_5  +     0.50683843245151 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.13469056275633 * H2x1_1 + -1.31570873196603 * H2x1_2 + 
-0.83004507775706 * H2x1_3 + 1.14954585467995 * H2x1_4 + 0.01234753333089 * H2x1_5 + 
0.50683843245151 * H2x1_6 ;
1132125   +   H3x2_2  =     2.58620633866114 * H2x1_1  +     0.37629863890202 * H2x1_2
1132126   +          +     0.34169762900278 * H2x1_3  +     1.24247313002596 * H2x1_4
1132127   +          +     -0.1965463932822 * H2x1_5  +    -0.00458488228083 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 2.58620633866114 * H2x1_1 + 0.37629863890202 * H2x1_2 + 
0.34169762900278 * H2x1_3 + 1.24247313002596 * H2x1_4 + -0.1965463932822 * H2x1_5 + 
-0.00458488228083 * H2x1_6 ;
1132128   +   H3x2_3  =    -2.01883694738218 * H2x1_1  +     0.83782353926562 * H2x1_2
1132129   +          +    -1.95119268200972 * H2x1_3  +    -1.04826190833003 * H2x1_4
1132130   +          +     1.66733023346498 * H2x1_5  +     0.23483419363088 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = -2.01883694738218 * H2x1_1 + 0.83782353926562 * H2x1_2 + 
-1.95119268200972 * H2x1_3 + -1.04826190833003 * H2x1_4 + 1.66733023346498 * H2x1_5 + 
0.23483419363088 * H2x1_6 ;
1132131   +   H3x2_4  =     0.40678642111393 * H2x1_1  +    -0.10557612663286 * H2x1_2
1132132   +          +    -0.34694532874387 * H2x1_3  +     -1.6967916788772 * H2x1_4
1132133   +          +     0.24026556349373 * H2x1_5  +    -0.69393637888423 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = 0.40678642111393 * H2x1_1 + -0.10557612663286 * H2x1_2 + 
-0.34694532874387 * H2x1_3 + -1.6967916788772 * H2x1_4 + 0.24026556349373 * H2x1_5 + 
-0.69393637888423 * H2x1_6 ;
1132134   +   H3x2_5  =    -1.48304630985783 * H2x1_1  +     0.87426655970556 * H2x1_2
1132135   +          +    -0.49899516599841 * H2x1_3  +    -1.94880978312007 * H2x1_4
1132136   +          +    -2.45275015055877 * H2x1_5  +    -0.03264500335093 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -1.48304630985783 * H2x1_1 + 0.87426655970556 * H2x1_2 + 
-0.49899516599841 * H2x1_3 + -1.94880978312007 * H2x1_4 + -2.45275015055877 * H2x1_5 + 
-0.03264500335093 * H2x1_6 ;
1132137   +   H3x2_1  = H3x2_1  +    -0.40915299509566 * H2x2_1
1132138   +          +     1.45952180668254 * H2x2_2  +     0.42420517277224 * H2x2_3
1132139   +          +    -0.79379446044158 * H2x2_4  +     0.73614212418439 * H2x2_5
1132140   +          +     -0.6527392657117 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -0.40915299509566 * H2x2_1 + 1.45952180668254 * H2x2_2 
+ 0.42420517277224 * H2x2_3 + -0.79379446044158 * H2x2_4 + 0.73614212418439 * H2x2_5 + 
-0.6527392657117 * H2x2_6 ;
1132141   +   H3x2_2  = H3x2_2  +    -1.62752321860626 * H2x2_1
1132142   +          +    -0.04689831325067 * H2x2_2  +    -2.87951125721119 * H2x2_3
1132143   +          +    -0.36181303609331 * H2x2_4  +     0.55999175715209 * H2x2_5
1132144   +          +    -0.40911363767301 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + -1.62752321860626 * H2x2_1 + -0.04689831325067 * 
H2x2_2 + -2.87951125721119 * H2x2_3 + -0.36181303609331 * H2x2_4 + 0.55999175715209 * H2x2_5 + 
-0.40911363767301 * H2x2_6 ;
1132145   +   H3x2_3  = H3x2_3  +     0.50766404641726 * H2x2_1
1132146   +          +     0.02747397544049 * H2x2_2  +    -1.35626517144826 * H2x2_3
1132147   +          +     0.23390260329386 * H2x2_4  +     -0.5025118845527 * H2x2_5
1132148   +          +    -1.14035867434772 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + 0.50766404641726 * H2x2_1 + 0.02747397544049 * H2x2_2 
+ -1.35626517144826 * H2x2_3 + 0.23390260329386 * H2x2_4 + -0.5025118845527 * H2x2_5 + 
-1.14035867434772 * H2x2_6 ;
1132149   +   H3x2_4  = H3x2_4  +     0.64958154360038 * H2x2_1
1132150   +          +     1.68671947742627 * H2x2_2  +    -0.42417215632785 * H2x2_3
1132151   +          +    -0.39675884102374 * H2x2_4  +     1.98354732887496 * H2x2_5
1132152   +          +    -1.32783167695801 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + 0.64958154360038 * H2x2_1 + 1.68671947742627 * H2x2_2 
+ -0.42417215632785 * H2x2_3 + -0.39675884102374 * H2x2_4 + 1.98354732887496 * H2x2_5 + 
-1.32783167695801 * H2x2_6 ;
1132153   +   H3x2_5  = H3x2_5  +     1.92075053147101 * H2x2_1
1132154   +          +     1.22293096034837 * H2x2_2  +    -0.74039853818796 * H2x2_3
1132155   +          +    -0.25033258903105 * H2x2_4  +     0.63358340091733 * H2x2_5
1132156   +          +     0.17488501957475 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 1.92075053147101 * H2x2_1 + 1.22293096034837 * H2x2_2 
+ -0.74039853818796 * H2x2_3 + -0.25033258903105 * H2x2_4 + 0.63358340091733 * H2x2_5 + 
0.17488501957475 * H2x2_6 ;
1132157   +   H3x2_1  = H3x2_1  +     0.88292932547634 * H2x3_1
1132158   +          +    -0.27631908402136 * H2x3_2  +     0.93133699792762 * H2x3_3
1132159   +          +     1.18769264917434 * H2x3_4  +    -0.88901652244884 * H2x3_5
1132160   +          +    -0.17544617255869 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.88292932547634 * H2x3_1 + -0.27631908402136 * H2x3_2 
+ 0.93133699792762 * H2x3_3 + 1.18769264917434 * H2x3_4 + -0.88901652244884 * H2x3_5 + 
-0.17544617255869 * H2x3_6 ;
1132161   +   H3x2_2  = H3x2_2  +     0.71538502917742 * H2x3_1
1132162   +          +    -0.76848695288598 * H2x3_2  +     1.24503864708272 * H2x3_3
1132163   +          +    -0.93962158881999 * H2x3_4  +    -0.43383001812557 * H2x3_5
1132164   +          +     1.14672043219259 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + 0.71538502917742 * H2x3_1 + -0.76848695288598 * H2x3_2 
+ 1.24503864708272 * H2x3_3 + -0.93962158881999 * H2x3_4 + -0.43383001812557 * H2x3_5 + 
1.14672043219259 * H2x3_6 ;
1132165   +   H3x2_3  = H3x2_3  +    -0.39933331346344 * H2x3_1
1132166   +          +      0.0019862182661 * H2x3_2  +    -0.60479718136768 * H2x3_3
1132167   +          +      1.3818804125218 * H2x3_4  +     0.13498986352108 * H2x3_5
1132168   +          +     1.02889511152823 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + -0.39933331346344 * H2x3_1 + 0.0019862182661 * H2x3_2 
+ -0.60479718136768 * H2x3_3 + 1.3818804125218 * H2x3_4 + 0.13498986352108 * H2x3_5 + 
1.02889511152823 * H2x3_6 ;
1132169   +   H3x2_4  = H3x2_4  +    -1.24198502624302 * H2x3_1
1132170   +          +    -0.09061963757116 * H2x3_2  +    -0.70229381972412 * H2x3_3
1132171   +          +    -1.43988785716026 * H2x3_4  +     0.45188902401215 * H2x3_5
1132172   +          +     0.10073869982371 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + -1.24198502624302 * H2x3_1 + -0.09061963757116 * 
H2x3_2 + -0.70229381972412 * H2x3_3 + -1.43988785716026 * H2x3_4 + 0.45188902401215 * H2x3_5 + 
0.10073869982371 * H2x3_6 ;
1132173   +   H3x2_5  = H3x2_5  +     0.13815223958312 * H2x3_1
1132174   +          +     0.38392032129472 * H2x3_2  +    -0.08374178846724 * H2x3_3
1132175   +          +     0.39613433726611 * H2x3_4  +     1.64049322745471 * H2x3_5
1132176   +          +     0.97496084656174 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 0.13815223958312 * H2x3_1 + 0.38392032129472 * H2x3_2 
+ -0.08374178846724 * H2x3_3 + 0.39613433726611 * H2x3_4 + 1.64049322745471 * H2x3_5 + 
0.97496084656174 * H2x3_6 ;
1132177   +   H3x2_1  =    -0.72845954974251 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -0.72845954974251 + H3x2_1 ;
1132178   +   H3x2_2  =     0.59148824718722 + H3x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0.59148824718722 + H3x2_2 ;
1132179   +   H3x2_3  =     1.28031731320103 + H3x2_3 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = 1.28031731320103 + H3x2_3 ;
1132180   +   H3x2_4  =    -0.11427038364635 + H3x2_4 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = -0.11427038364635 + H3x2_4 ;
1132181   +   H3x2_5  =    -0.28699725292326 + H3x2_5 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -0.28699725292326 + H3x2_5 ;
1132182   +   H3x2_6  = 0;
MPRINT(EM_DIAGRAM):   H3x2_6 = 0;
1132183   +   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
1132184   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1132185   +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
1132186   +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
1132187   +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
1132188   +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
1132189   +   H3x2_3  = EXP(H3x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_3 = EXP(H3x2_3 - _MAX_);
1132190   +   _SUM_ = _SUM_ + H3x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_3 ;
1132191   +   H3x2_4  = EXP(H3x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_4 = EXP(H3x2_4 - _MAX_);
1132192   +   _SUM_ = _SUM_ + H3x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_4 ;
1132193   +   H3x2_5  = EXP(H3x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_5 = EXP(H3x2_5 - _MAX_);
1132194   +   _SUM_ = _SUM_ + H3x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_5 ;
1132195   +   H3x2_6  = EXP(H3x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_6 = EXP(H3x2_6 - _MAX_);
1132196   +   _SUM_ = _SUM_ + H3x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_6 ;
1132197   +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
1132198   +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
1132199   +   H3x2_3  = H3x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 / _SUM_;
1132200   +   H3x2_4  = H3x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 / _SUM_;
1132201   +   H3x2_5  = H3x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 / _SUM_;
1132202   +   H3x2_6  = H3x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_6 = H3x2_6 / _SUM_;
1132203   +END;
MPRINT(EM_DIAGRAM):   END;
1132204   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1132205   +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
1132206   +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
1132207   +   H3x2_3  = .;
MPRINT(EM_DIAGRAM):   H3x2_3 = .;
1132208   +   H3x2_4  = .;
MPRINT(EM_DIAGRAM):   H3x2_4 = .;
1132209   +   H3x2_5  = .;
MPRINT(EM_DIAGRAM):   H3x2_5 = .;
1132210   +   H3x2_6  = .;
MPRINT(EM_DIAGRAM):   H3x2_6 = .;
1132211   +END;
MPRINT(EM_DIAGRAM):   END;
1132212   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132213   +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
1132214   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132215   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1132216   +   H4x1_1  =     0.10986960182278 * H3x1_1  +    -0.10835805909937 * H3x1_2
1132217   +          +     1.78643376838566 * H3x1_3  +    -0.00067995179919 * H3x1_4
1132218   +          +     2.04711620528782 * H3x1_5  +    -0.66853997603718 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.10986960182278 * H3x1_1 + -0.10835805909937 * H3x1_2 + 
1.78643376838566 * H3x1_3 + -0.00067995179919 * H3x1_4 + 2.04711620528782 * H3x1_5 + 
-0.66853997603718 * H3x1_6 ;
1132219   +   H4x1_2  =    -0.17187141657369 * H3x1_1  +    -1.56897037747293 * H3x1_2
1132220   +          +    -1.38330818097338 * H3x1_3  +     3.94629669251083 * H3x1_4
1132221   +          +    -0.57201557221624 * H3x1_5  +     0.99276034828548 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = -0.17187141657369 * H3x1_1 + -1.56897037747293 * H3x1_2 + 
-1.38330818097338 * H3x1_3 + 3.94629669251083 * H3x1_4 + -0.57201557221624 * H3x1_5 + 
0.99276034828548 * H3x1_6 ;
1132222   +   H4x1_3  =      1.5223304212488 * H3x1_1  +    -0.33490912702371 * H3x1_2
1132223   +          +    -0.30324493540575 * H3x1_3  +    -1.23990036921669 * H3x1_4
1132224   +          +     0.77489370055267 * H3x1_5  +    -0.38609823936674 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.5223304212488 * H3x1_1 + -0.33490912702371 * H3x1_2 + 
-0.30324493540575 * H3x1_3 + -1.23990036921669 * H3x1_4 + 0.77489370055267 * H3x1_5 + 
-0.38609823936674 * H3x1_6 ;
1132225   +   H4x1_4  =    -0.75234452297837 * H3x1_1  +      1.1117782900703 * H3x1_2
1132226   +          +      1.0171911341496 * H3x1_3  +     2.31462824862723 * H3x1_4
1132227   +          +     1.05562639649812 * H3x1_5  +    -0.80603399686936 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -0.75234452297837 * H3x1_1 + 1.1117782900703 * H3x1_2 + 
1.0171911341496 * H3x1_3 + 2.31462824862723 * H3x1_4 + 1.05562639649812 * H3x1_5 + 
-0.80603399686936 * H3x1_6 ;
1132228   +   H4x1_5  =    -0.35441774309359 * H3x1_1  +     0.37408435161205 * H3x1_2
1132229   +          +    -0.79287886005891 * H3x1_3  +    -0.89695291885453 * H3x1_4
1132230   +          +     0.46220429367054 * H3x1_5  +    -1.56166867584216 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = -0.35441774309359 * H3x1_1 + 0.37408435161205 * H3x1_2 + 
-0.79287886005891 * H3x1_3 + -0.89695291885453 * H3x1_4 + 0.46220429367054 * H3x1_5 + 
-1.56166867584216 * H3x1_6 ;
1132231   +   H4x1_1  = H4x1_1  +    -1.12622282402713 * H3x2_1
1132232   +          +     2.43865739917959 * H3x2_2  +     1.62534005409988 * H3x2_3
1132233   +          +     0.83506165677151 * H3x2_4  +    -0.15894659563972 * H3x2_5
1132234   +          +     0.77216806897502 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -1.12622282402713 * H3x2_1 + 2.43865739917959 * H3x2_2 
+ 1.62534005409988 * H3x2_3 + 0.83506165677151 * H3x2_4 + -0.15894659563972 * H3x2_5 + 
0.77216806897502 * H3x2_6 ;
1132235   +   H4x1_2  = H4x1_2  +     0.96736353410956 * H3x2_1
1132236   +          +      1.6250281874285 * H3x2_2  +    -0.81418318229631 * H3x2_3
1132237   +          +     0.35282111325987 * H3x2_4  +     0.11187473980261 * H3x2_5
1132238   +          +     0.73971378600397 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 + 0.96736353410956 * H3x2_1 + 1.6250281874285 * H3x2_2 + 
-0.81418318229631 * H3x2_3 + 0.35282111325987 * H3x2_4 + 0.11187473980261 * H3x2_5 + 
0.73971378600397 * H3x2_6 ;
1132239   +   H4x1_3  = H4x1_3  +    -0.30588247178582 * H3x2_1
1132240   +          +     0.22302184288326 * H3x2_2  +    -0.15797620108073 * H3x2_3
1132241   +          +     1.18515955770896 * H3x2_4  +     0.43359240886537 * H3x2_5
1132242   +          +     0.90907054011344 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 + -0.30588247178582 * H3x2_1 + 0.22302184288326 * H3x2_2 
+ -0.15797620108073 * H3x2_3 + 1.18515955770896 * H3x2_4 + 0.43359240886537 * H3x2_5 + 
0.90907054011344 * H3x2_6 ;
1132243   +   H4x1_4  = H4x1_4  +    -0.26678025657796 * H3x2_1
1132244   +          +    -0.23171152283695 * H3x2_2  +    -0.72882061581264 * H3x2_3
1132245   +          +     0.68597418643333 * H3x2_4  +      0.6559090638639 * H3x2_5
1132246   +          +     0.95412028439169 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 + -0.26678025657796 * H3x2_1 + -0.23171152283695 * 
H3x2_2 + -0.72882061581264 * H3x2_3 + 0.68597418643333 * H3x2_4 + 0.6559090638639 * H3x2_5 + 
0.95412028439169 * H3x2_6 ;
1132247   +   H4x1_5  = H4x1_5  +    -0.77875602324955 * H3x2_1
1132248   +          +     -1.5646810153964 * H3x2_2  +    -0.53157591270506 * H3x2_3
1132249   +          +    -0.27917864191674 * H3x2_4  +    -1.10966192483404 * H3x2_5
1132250   +          +     -0.0058627670025 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 + -0.77875602324955 * H3x2_1 + -1.5646810153964 * H3x2_2 
+ -0.53157591270506 * H3x2_3 + -0.27917864191674 * H3x2_4 + -1.10966192483404 * H3x2_5 + 
-0.0058627670025 * H3x2_6 ;
1132251   +   H4x1_1  =     0.87937070574208 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.87937070574208 + H4x1_1 ;
1132252   +   H4x1_2  =     0.75203729660648 + H4x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0.75203729660648 + H4x1_2 ;
1132253   +   H4x1_3  =     1.14889100908291 + H4x1_3 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.14889100908291 + H4x1_3 ;
1132254   +   H4x1_4  =    -1.71383624276913 + H4x1_4 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -1.71383624276913 + H4x1_4 ;
1132255   +   H4x1_5  =     0.22194774900585 + H4x1_5 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = 0.22194774900585 + H4x1_5 ;
1132256   +   H4x1_6  = 0;
MPRINT(EM_DIAGRAM):   H4x1_6 = 0;
1132257   +   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
1132258   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1132259   +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
1132260   +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
1132261   +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
1132262   +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
1132263   +   H4x1_3  = EXP(H4x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_3 = EXP(H4x1_3 - _MAX_);
1132264   +   _SUM_ = _SUM_ + H4x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_3 ;
1132265   +   H4x1_4  = EXP(H4x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_4 = EXP(H4x1_4 - _MAX_);
1132266   +   _SUM_ = _SUM_ + H4x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_4 ;
1132267   +   H4x1_5  = EXP(H4x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_5 = EXP(H4x1_5 - _MAX_);
1132268   +   _SUM_ = _SUM_ + H4x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_5 ;
1132269   +   H4x1_6  = EXP(H4x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_6 = EXP(H4x1_6 - _MAX_);
1132270   +   _SUM_ = _SUM_ + H4x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_6 ;
1132271   +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
1132272   +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
1132273   +   H4x1_3  = H4x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 / _SUM_;
1132274   +   H4x1_4  = H4x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 / _SUM_;
1132275   +   H4x1_5  = H4x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 / _SUM_;
1132276   +   H4x1_6  = H4x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_6 = H4x1_6 / _SUM_;
1132277   +END;
MPRINT(EM_DIAGRAM):   END;
1132278   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1132279   +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
1132280   +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
1132281   +   H4x1_3  = .;
MPRINT(EM_DIAGRAM):   H4x1_3 = .;
1132282   +   H4x1_4  = .;
MPRINT(EM_DIAGRAM):   H4x1_4 = .;
1132283   +   H4x1_5  = .;
MPRINT(EM_DIAGRAM):   H4x1_5 = .;
1132284   +   H4x1_6  = .;
MPRINT(EM_DIAGRAM):   H4x1_6 = .;
1132285   +END;
MPRINT(EM_DIAGRAM):   END;
1132286   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132287   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1132288   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132289   +
1132290   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1132291   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1132292   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1132293   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1132294   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1132295   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1132296   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1132297   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1132298   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1132299   +end;
MPRINT(EM_DIAGRAM):   end;
1132300   +else do;
MPRINT(EM_DIAGRAM):   else do;
1132301   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1132302   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1132303   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1132304   +   end;
MPRINT(EM_DIAGRAM):   end;
1132305   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1132306   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1132307   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1132308   +   end;
MPRINT(EM_DIAGRAM):   end;
1132309   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132310   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1132311   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1132312   +   end;
MPRINT(EM_DIAGRAM):   end;
1132313   +end;
MPRINT(EM_DIAGRAM):   end;
1132314   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1132315   +   P_DepVar1  =    -5.30721919155126 * H4x1_1  +     10.4301477552223 * H4x1_2
1132316   +          +    -3.40676330075486 * H4x1_3  +     0.07452634039202 * H4x1_4
1132317   +          +    -2.90585821687293 * H4x1_5  +    -2.63321710569292 * H4x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.30721919155126 * H4x1_1 + 10.4301477552223 * H4x1_2 + 
-3.40676330075486 * H4x1_3 + 0.07452634039202 * H4x1_4 + -2.90585821687293 * H4x1_5 + 
-2.63321710569292 * H4x1_6 ;
1132318   +   P_DepVar1  =    -2.93956196427421 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.93956196427421 + P_DepVar1 ;
1132319   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1132320   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1132321   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1132322   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1132323   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1132324   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1132325   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1132326   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1132327   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1132328   +END;
MPRINT(EM_DIAGRAM):   END;
1132329   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1132330   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1132331   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1132332   +END;
MPRINT(EM_DIAGRAM):   END;
1132333   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1132334   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1132335   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1132336   +END;
MPRINT(EM_DIAGRAM):   END;
1132337   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1132338   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1132339   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1132340   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1132341   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1132342   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1132343   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1132344   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132345   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1132346   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132347   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1132348   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1132349   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1132350   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1132351   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1132352   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1132353   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1132354   +END;
MPRINT(EM_DIAGRAM):   END;
1132355   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1132356   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1132357   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1132358   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1132359   +* Renaming variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural28;
1132360   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1132361   +* Renaming Posterior variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural28;
1132362   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1132363   +drop AutoNeural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_P_DepVar1;
1132364   +AutoNeural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural28_P_DepVar1 = P_DepVar1;
1132365   +drop AutoNeural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_P_DepVar0;
1132366   +AutoNeural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural28_P_DepVar0 = P_DepVar0;
1132367   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1132368   +* Renaming _WARN_ variable for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural28;
1132369   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1132370   +length AutoNeural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural28_WARN_ $4;
1132371   +drop AutoNeural28_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_WARN_;
1132372   +AutoNeural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural28_WARN_ = _WARN_;
1132373   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1132374   +* Ensmbl51: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Scoring Code of model 3 of 7;
1132375   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1132376   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1132377   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1132378   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1132379   +* NODE: AutoNeural27;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural27;
1132380   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1132381   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1132382   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1132383   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1132384   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1132385   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1132386   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1132387   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1132388   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1132389   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1132390   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1132391   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1132392   +LENGTH _WARN_ $4
1132393   +      F_DepVar  $ 12
1132394   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1132395   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1132396   +
1132397   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1132398   +
1132399   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1132400   +
1132401   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1132402   +
1132403   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1132404   +
1132405   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1132406   +
1132407   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1132408   +
1132409   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1132410   +
1132411   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1132412   +
1132413   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1132414   +
1132415   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1132416   +
1132417   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1132418   +
1132419   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1132420   +
1132421   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1132422   +
1132423   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1132424   +
1132425   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1132426   +
1132427   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1132428   +
1132429   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1132430   +
1132431   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1132432   +
1132433   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1132434   +
1132435   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1132436   +
1132437   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1132438   +
1132439   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1132440   +
1132441   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1132442   +
1132443   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1132444   +
1132445   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1132446   +
1132447   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1132448   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1132449   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1132450   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1132451   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1132452   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1132453   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132454   +end;
MPRINT(EM_DIAGRAM):   end;
1132455   +else do;
MPRINT(EM_DIAGRAM):   else do;
1132456   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1132457   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1132458   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1132459   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1132460   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1132461   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1132462   +   end;
MPRINT(EM_DIAGRAM):   end;
1132463   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1132464   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1132465   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1132466   +   end;
MPRINT(EM_DIAGRAM):   end;
1132467   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1132468   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1132469   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1132470   +   end;
MPRINT(EM_DIAGRAM):   end;
1132471   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132472   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1132473   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1132474   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1132475   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132476   +   end;
MPRINT(EM_DIAGRAM):   end;
1132477   +end;
MPRINT(EM_DIAGRAM):   end;
1132478   +
1132479   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132480   +*** Checking missing input Interval
1132481   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1132482   +
1132483   +IF NMISS(
1132484   +   AcceptedCmpTotal ,
1132485   +   Frq ,
1132486   +   Income ,
1132487   +   Mnt ,
1132488   +   MntGoldProds ,
1132489   +   MntMeatProducts ,
1132490   +   MntWines ,
1132491   +   NumDistPurchases ,
1132492   +   RFMstat ,
1132493   +   RMntFrq ,
1132494   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1132495   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1132496   +
1132497   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132498   +END;
MPRINT(EM_DIAGRAM):   END;
1132499   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132500   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1132501   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132502   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1132503   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1132504   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1132505   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1132506   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1132507   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1132508   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1132509   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1132510   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1132511   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1132512   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1132513   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1132514   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1132515   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1132516   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1132517   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1132518   +END;
MPRINT(EM_DIAGRAM):   END;
1132519   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1132520   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1132521   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1132522   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1132523   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1132524   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1132525   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1132526   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1132527   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1132528   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1132529   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1132530   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1132531   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1132532   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1132533   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1132534   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1132535   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1132536   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1132537   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1132538   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1132539   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1132540   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1132541   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1132542   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1132543   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1132544   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1132545   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1132546   +END;
MPRINT(EM_DIAGRAM):   END;
1132547   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132548   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1132549   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132550   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132551   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1132552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132553   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1132554   +   H1x1_1  =    -0.18981728384316 * S_AcceptedCmpTotal
1132555   +          +     2.44575265018132 * S_Frq  +    -0.33258639871365 * S_Income
1132556   +          +    -1.51282513201415 * S_Mnt  +     0.06017420606179 *
1132557   +        S_MntGoldProds  +    -0.55274425550395 * S_MntMeatProducts
1132558   +          +     0.91858869924573 * S_MntWines  +    -1.95905223495165 *
1132559   +        S_NumDistPurchases  +     -0.2637023845598 * S_RFMstat
1132560   +          +     1.23283591446263 * S_RMntFrq  +    -0.07916044614039 *
1132561   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.18981728384316 * S_AcceptedCmpTotal + 2.44575265018132 * 
S_Frq + -0.33258639871365 * S_Income + -1.51282513201415 * S_Mnt + 0.06017420606179 * 
S_MntGoldProds + -0.55274425550395 * S_MntMeatProducts + 0.91858869924573 * S_MntWines + 
-1.95905223495165 * S_NumDistPurchases + -0.2637023845598 * S_RFMstat + 1.23283591446263 * 
S_RMntFrq + -0.07916044614039 * S_Recency ;
1132562   +   H1x1_2  =    -0.68309764555121 * S_AcceptedCmpTotal
1132563   +          +     0.14669436656758 * S_Frq  +     0.02315218376279 * S_Income
1132564   +          +    -4.21583355142014 * S_Mnt  +     0.19199314585125 *
1132565   +        S_MntGoldProds  +     2.55483645032568 * S_MntMeatProducts
1132566   +          +     0.82054382378306 * S_MntWines  +     0.29968014910707 *
1132567   +        S_NumDistPurchases  +     0.60687719454304 * S_RFMstat
1132568   +          +     0.83498030971653 * S_RMntFrq  +     0.50801279856495 *
1132569   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.68309764555121 * S_AcceptedCmpTotal + 0.14669436656758 * 
S_Frq + 0.02315218376279 * S_Income + -4.21583355142014 * S_Mnt + 0.19199314585125 * 
S_MntGoldProds + 2.55483645032568 * S_MntMeatProducts + 0.82054382378306 * S_MntWines + 
0.29968014910707 * S_NumDistPurchases + 0.60687719454304 * S_RFMstat + 0.83498030971653 * 
S_RMntFrq + 0.50801279856495 * S_Recency ;
1132570   +   H1x1_3  =     0.08829866742968 * S_AcceptedCmpTotal
1132571   +          +    -0.02323769496851 * S_Frq  +    -0.99617629114101 * S_Income
1132572   +          +    -4.64282306384023 * S_Mnt  +     0.04308696038528 *
1132573   +        S_MntGoldProds  +     2.31863620360623 * S_MntMeatProducts
1132574   +          +     0.16587338267425 * S_MntWines  +     1.02973533097984 *
1132575   +        S_NumDistPurchases  +     0.20343196580651 * S_RFMstat
1132576   +          +     0.94726928092138 * S_RMntFrq  +     0.03712585159749 *
1132577   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.08829866742968 * S_AcceptedCmpTotal + -0.02323769496851 * 
S_Frq + -0.99617629114101 * S_Income + -4.64282306384023 * S_Mnt + 0.04308696038528 * 
S_MntGoldProds + 2.31863620360623 * S_MntMeatProducts + 0.16587338267425 * S_MntWines + 
1.02973533097984 * S_NumDistPurchases + 0.20343196580651 * S_RFMstat + 0.94726928092138 * 
S_RMntFrq + 0.03712585159749 * S_Recency ;
1132578   +   H1x1_4  =     0.10061099283455 * S_AcceptedCmpTotal
1132579   +          +     1.72752905329456 * S_Frq  +    -0.50472344084228 * S_Income
1132580   +          +     1.07329017540495 * S_Mnt  +    -0.44517902573644 *
1132581   +        S_MntGoldProds  +    -1.57417593135497 * S_MntMeatProducts
1132582   +          +    -0.75359748699668 * S_MntWines  +    -1.09387259425684 *
1132583   +        S_NumDistPurchases  +    -0.81518874000435 * S_RFMstat
1132584   +          +     0.23368643717628 * S_RMntFrq  +    -0.30240544347672 *
1132585   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.10061099283455 * S_AcceptedCmpTotal + 1.72752905329456 * 
S_Frq + -0.50472344084228 * S_Income + 1.07329017540495 * S_Mnt + -0.44517902573644 * 
S_MntGoldProds + -1.57417593135497 * S_MntMeatProducts + -0.75359748699668 * S_MntWines + 
-1.09387259425684 * S_NumDistPurchases + -0.81518874000435 * S_RFMstat + 0.23368643717628 * 
S_RMntFrq + -0.30240544347672 * S_Recency ;
1132586   +   H1x1_5  =    -0.22817314877708 * S_AcceptedCmpTotal
1132587   +          +     0.28118539965414 * S_Frq  +     0.04846488460495 * S_Income
1132588   +          +     0.60106863054811 * S_Mnt  +    -0.06162179557217 *
1132589   +        S_MntGoldProds  +    -0.39180490439507 * S_MntMeatProducts
1132590   +          +    -0.21017068084579 * S_MntWines  +    -0.32161828113396 *
1132591   +        S_NumDistPurchases  +    -0.03465088483344 * S_RFMstat
1132592   +          +    -0.03147262277696 * S_RMntFrq  +     0.34128240879899 *
1132593   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.22817314877708 * S_AcceptedCmpTotal + 0.28118539965414 * 
S_Frq + 0.04846488460495 * S_Income + 0.60106863054811 * S_Mnt + -0.06162179557217 * 
S_MntGoldProds + -0.39180490439507 * S_MntMeatProducts + -0.21017068084579 * S_MntWines + 
-0.32161828113396 * S_NumDistPurchases + -0.03465088483344 * S_RFMstat + -0.03147262277696 * 
S_RMntFrq + 0.34128240879899 * S_Recency ;
1132594   +   H1x1_1  = H1x1_1  +     0.15249883445815 * G_Marital_Status0
1132595   +          +    -0.18818735950093 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15249883445815 * G_Marital_Status0 + 
-0.18818735950093 * G_Marital_Status1 ;
1132596   +   H1x1_2  = H1x1_2  +     1.59824663671134 * G_Marital_Status0
1132597   +          +     1.96669325047054 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.59824663671134 * G_Marital_Status0 + 
1.96669325047054 * G_Marital_Status1 ;
1132598   +   H1x1_3  = H1x1_3  +    -0.31220761109652 * G_Marital_Status0
1132599   +          +     0.52212878383819 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.31220761109652 * G_Marital_Status0 + 
0.52212878383819 * G_Marital_Status1 ;
1132600   +   H1x1_4  = H1x1_4  +    -1.92906338619158 * G_Marital_Status0
1132601   +          +    -1.25145208260948 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.92906338619158 * G_Marital_Status0 + 
-1.25145208260948 * G_Marital_Status1 ;
1132602   +   H1x1_5  = H1x1_5  +    -0.18067263072436 * G_Marital_Status0
1132603   +          +    -0.07780771416761 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.18067263072436 * G_Marital_Status0 + 
-0.07780771416761 * G_Marital_Status1 ;
1132604   +   H1x1_1  =     1.46324697396327 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.46324697396327 + H1x1_1 ;
1132605   +   H1x1_2  =     1.36794472927517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.36794472927517 + H1x1_2 ;
1132606   +   H1x1_3  =    -0.57612320445046 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.57612320445046 + H1x1_3 ;
1132607   +   H1x1_4  =    -1.53805674056235 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53805674056235 + H1x1_4 ;
1132608   +   H1x1_5  =     0.35787040000513 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.35787040000513 + H1x1_5 ;
1132609   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1132610   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1132611   +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
1132612   +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
1132613   +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
1132614   +END;
MPRINT(EM_DIAGRAM):   END;
1132615   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1132616   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1132617   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1132618   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1132619   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1132620   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1132621   +END;
MPRINT(EM_DIAGRAM):   END;
1132622   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132623   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1132624   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132625   +
1132626   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1132627   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1132628   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1132629   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1132630   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1132631   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1132632   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1132633   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1132634   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1132635   +end;
MPRINT(EM_DIAGRAM):   end;
1132636   +else do;
MPRINT(EM_DIAGRAM):   else do;
1132637   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1132638   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1132639   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1132640   +   end;
MPRINT(EM_DIAGRAM):   end;
1132641   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1132642   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1132643   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1132644   +   end;
MPRINT(EM_DIAGRAM):   end;
1132645   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132646   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1132647   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1132648   +   end;
MPRINT(EM_DIAGRAM):   end;
1132649   +end;
MPRINT(EM_DIAGRAM):   end;
1132650   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1132651   +   P_DepVar1  =    -2.75625949468408 * H1x1_1  +    -2.04123594690263 * H1x1_2
1132652   +          +     2.55595542456674 * H1x1_3  +     2.41628841604103 * H1x1_4
1132653   +          +      -11.39673341305 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.75625949468408 * H1x1_1 + -2.04123594690263 * H1x1_2 + 
2.55595542456674 * H1x1_3 + 2.41628841604103 * H1x1_4 + -11.39673341305 * H1x1_5 ;
1132654   +   P_DepVar1  =     0.62420945009508 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.62420945009508 + P_DepVar1 ;
1132655   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1132656   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1132657   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1132658   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1132659   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1132660   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1132661   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1132662   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1132663   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1132664   +END;
MPRINT(EM_DIAGRAM):   END;
1132665   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1132666   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1132667   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1132668   +END;
MPRINT(EM_DIAGRAM):   END;
1132669   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1132670   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1132671   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1132672   +END;
MPRINT(EM_DIAGRAM):   END;
1132673   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1132674   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1132675   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1132676   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1132677   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1132678   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1132679   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1132680   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132681   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1132682   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132683   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1132684   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1132685   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1132686   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1132687   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1132688   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1132689   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1132690   +END;
MPRINT(EM_DIAGRAM):   END;
1132691   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1132692   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1132693   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1132694   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1132695   +* Renaming variables for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural27;
1132696   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1132697   +* Renaming Posterior variables for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural27;
1132698   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1132699   +drop AutoNeural27_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_P_DepVar1;
1132700   +AutoNeural27_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural27_P_DepVar1 = P_DepVar1;
1132701   +drop AutoNeural27_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_P_DepVar0;
1132702   +AutoNeural27_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural27_P_DepVar0 = P_DepVar0;
1132703   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1132704   +* Renaming _WARN_ variable for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural27;
1132705   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1132706   +length AutoNeural27_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural27_WARN_ $4;
1132707   +drop AutoNeural27_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_WARN_;
1132708   +AutoNeural27_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural27_WARN_ = _WARN_;
1132709   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1132710   +* Ensmbl51: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Scoring Code of model 4 of 7;
1132711   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1132712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1132713   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1132714   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1132715   +* NODE: AutoNeural33;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural33;
1132716   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1132717   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1132718   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1132719   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1132720   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1132721   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1132722   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1132723   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1132724   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1132725   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1132726   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1132727   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1132728   +LENGTH _WARN_ $4
1132729   +      F_DepVar  $ 12
1132730   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1132731   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1132732   +
1132733   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1132734   +
1132735   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1132736   +
1132737   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1132738   +
1132739   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1132740   +
1132741   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1132742   +
1132743   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1132744   +
1132745   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1132746   +
1132747   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1132748   +
1132749   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1132750   +
1132751   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1132752   +
1132753   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1132754   +
1132755   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1132756   +
1132757   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1132758   +
1132759   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1132760   +
1132761   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1132762   +
1132763   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1132764   +
1132765   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1132766   +
1132767   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1132768   +
1132769   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1132770   +
1132771   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1132772   +
1132773   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1132774   +
1132775   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1132776   +
1132777   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1132778   +
1132779   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1132780   +
1132781   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1132782   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1132783   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1132784   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1132785   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1132786   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1132787   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132788   +end;
MPRINT(EM_DIAGRAM):   end;
1132789   +else do;
MPRINT(EM_DIAGRAM):   else do;
1132790   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1132791   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1132792   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1132793   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1132794   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1132795   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1132796   +   end;
MPRINT(EM_DIAGRAM):   end;
1132797   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1132798   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1132799   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1132800   +   end;
MPRINT(EM_DIAGRAM):   end;
1132801   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1132802   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1132803   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1132804   +   end;
MPRINT(EM_DIAGRAM):   end;
1132805   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132806   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1132807   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1132808   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1132809   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132810   +   end;
MPRINT(EM_DIAGRAM):   end;
1132811   +end;
MPRINT(EM_DIAGRAM):   end;
1132812   +
1132813   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132814   +*** Checking missing input Interval
1132815   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1132816   +
1132817   +IF NMISS(
1132818   +   AcceptedCmpTotal ,
1132819   +   Frq ,
1132820   +   Income ,
1132821   +   Mnt ,
1132822   +   MntGoldProds ,
1132823   +   MntMeatProducts ,
1132824   +   MntWines ,
1132825   +   NumDistPurchases ,
1132826   +   RFMstat ,
1132827   +   RMntFrq ,
1132828   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1132829   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1132830   +
1132831   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132832   +END;
MPRINT(EM_DIAGRAM):   END;
1132833   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132834   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1132835   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132836   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1132837   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1132838   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1132839   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1132840   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1132841   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1132842   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1132843   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1132844   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1132845   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1132846   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1132847   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1132848   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1132849   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1132850   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1132851   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1132852   +END;
MPRINT(EM_DIAGRAM):   END;
1132853   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1132854   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1132855   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1132856   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1132857   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1132858   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1132859   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1132860   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1132861   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1132862   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1132863   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1132864   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1132865   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1132866   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1132867   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1132868   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1132869   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1132870   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1132871   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1132872   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1132873   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1132874   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1132875   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1132876   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1132877   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1132878   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1132879   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1132880   +END;
MPRINT(EM_DIAGRAM):   END;
1132881   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132882   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1132883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132884   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132885   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1132886   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132887   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1132888   +   H1x1_1  =     0.33555011401553 * S_AcceptedCmpTotal
1132889   +          +    -3.02490159760157 * S_Frq  +    -0.12761482391665 * S_Income
1132890   +          +     -9.1169668394273 * S_Mnt  +     0.88214411094174 *
1132891   +        S_MntGoldProds  +     16.4212241447522 * S_MntMeatProducts
1132892   +          +     4.65784744010387 * S_MntWines  +     2.75620847659032 *
1132893   +        S_NumDistPurchases  +     5.10796074430888 * S_RFMstat
1132894   +          +    -0.15069444442326 * S_RMntFrq  +    -0.36037041233055 *
1132895   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.33555011401553 * S_AcceptedCmpTotal + -3.02490159760157 * 
S_Frq + -0.12761482391665 * S_Income + -9.1169668394273 * S_Mnt + 0.88214411094174 * 
S_MntGoldProds + 16.4212241447522 * S_MntMeatProducts + 4.65784744010387 * S_MntWines + 
2.75620847659032 * S_NumDistPurchases + 5.10796074430888 * S_RFMstat + -0.15069444442326 * 
S_RMntFrq + -0.36037041233055 * S_Recency ;
1132896   +   H1x1_2  =     -6.2107002884316 * S_AcceptedCmpTotal
1132897   +          +      5.5991079844098 * S_Frq  +    -1.06506164052399 * S_Income
1132898   +          +     7.16823320768258 * S_Mnt  +     1.97115223638004 *
1132899   +        S_MntGoldProds  +     0.02973121977962 * S_MntMeatProducts
1132900   +          +     3.28931008157038 * S_MntWines  +    -3.02545356699096 *
1132901   +        S_NumDistPurchases  +    -0.45519831720714 * S_RFMstat
1132902   +          +     2.14788986039061 * S_RMntFrq  +     7.13033786501062 *
1132903   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -6.2107002884316 * S_AcceptedCmpTotal + 5.5991079844098 * S_Frq 
+ -1.06506164052399 * S_Income + 7.16823320768258 * S_Mnt + 1.97115223638004 * S_MntGoldProds 
+ 0.02973121977962 * S_MntMeatProducts + 3.28931008157038 * S_MntWines + -3.02545356699096 * 
S_NumDistPurchases + -0.45519831720714 * S_RFMstat + 2.14788986039061 * S_RMntFrq + 
7.13033786501062 * S_Recency ;
1132904   +   H1x1_3  =    -0.31707769589072 * S_AcceptedCmpTotal
1132905   +          +     -0.8436342869652 * S_Frq  +     0.04938014828703 * S_Income
1132906   +          +     0.41074885451072 * S_Mnt  +    -0.22835264468248 *
1132907   +        S_MntGoldProds  +     0.04154328332772 * S_MntMeatProducts
1132908   +          +    -0.63526276335269 * S_MntWines  +     0.16430041832418 *
1132909   +        S_NumDistPurchases  +    -0.01070081959406 * S_RFMstat
1132910   +          +    -1.56851833223581 * S_RMntFrq  +     0.62478865123427 *
1132911   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31707769589072 * S_AcceptedCmpTotal + -0.8436342869652 * 
S_Frq + 0.04938014828703 * S_Income + 0.41074885451072 * S_Mnt + -0.22835264468248 * 
S_MntGoldProds + 0.04154328332772 * S_MntMeatProducts + -0.63526276335269 * S_MntWines + 
0.16430041832418 * S_NumDistPurchases + -0.01070081959406 * S_RFMstat + -1.56851833223581 * 
S_RMntFrq + 0.62478865123427 * S_Recency ;
1132912   +   H1x1_4  =     0.54144616315359 * S_AcceptedCmpTotal
1132913   +          +    -2.69605116285758 * S_Frq  +    -0.42453662943397 * S_Income
1132914   +          +    -0.95657675439363 * S_Mnt  +     0.24420189860131 *
1132915   +        S_MntGoldProds  +     2.44632795316553 * S_MntMeatProducts
1132916   +          +     -0.1454644222769 * S_MntWines  +     2.34899307919173 *
1132917   +        S_NumDistPurchases  +    -0.02462201574723 * S_RFMstat
1132918   +          +    -2.08470857931815 * S_RMntFrq  +    -0.76249328143214 *
1132919   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54144616315359 * S_AcceptedCmpTotal + -2.69605116285758 * 
S_Frq + -0.42453662943397 * S_Income + -0.95657675439363 * S_Mnt + 0.24420189860131 * 
S_MntGoldProds + 2.44632795316553 * S_MntMeatProducts + -0.1454644222769 * S_MntWines + 
2.34899307919173 * S_NumDistPurchases + -0.02462201574723 * S_RFMstat + -2.08470857931815 * 
S_RMntFrq + -0.76249328143214 * S_Recency ;
1132920   +   H1x1_1  = H1x1_1  +     0.00660823494191 * G_Marital_Status0
1132921   +          +    -0.18825548425502 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.00660823494191 * G_Marital_Status0 + 
-0.18825548425502 * G_Marital_Status1 ;
1132922   +   H1x1_2  = H1x1_2  +    -2.06051657300217 * G_Marital_Status0
1132923   +          +    -6.25782340834073 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.06051657300217 * G_Marital_Status0 + 
-6.25782340834073 * G_Marital_Status1 ;
1132924   +   H1x1_3  = H1x1_3  +    -0.79419358160841 * G_Marital_Status0
1132925   +          +     0.34890327415646 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.79419358160841 * G_Marital_Status0 + 
0.34890327415646 * G_Marital_Status1 ;
1132926   +   H1x1_4  = H1x1_4  +    -0.04651762606699 * G_Marital_Status0
1132927   +          +     0.31552155976549 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.04651762606699 * G_Marital_Status0 + 
0.31552155976549 * G_Marital_Status1 ;
1132928   +   H1x1_1  =      9.5912267385355 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 9.5912267385355 + H1x1_1 ;
1132929   +   H1x1_2  =     -17.513407093022 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -17.513407093022 + H1x1_2 ;
1132930   +   H1x1_3  =     3.77110114695743 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 3.77110114695743 + H1x1_3 ;
1132931   +   H1x1_4  =    -1.34405555452152 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.34405555452152 + H1x1_4 ;
1132932   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1132933   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1132934   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1132935   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1132936   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1132937   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1132938   +END;
MPRINT(EM_DIAGRAM):   END;
1132939   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1132940   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1132941   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1132942   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1132943   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1132944   +END;
MPRINT(EM_DIAGRAM):   END;
1132945   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132946   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1132947   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132948   +
1132949   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1132950   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1132951   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1132952   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1132953   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1132954   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1132955   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1132956   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1132957   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1132958   +end;
MPRINT(EM_DIAGRAM):   end;
1132959   +else do;
MPRINT(EM_DIAGRAM):   else do;
1132960   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1132961   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1132962   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1132963   +   end;
MPRINT(EM_DIAGRAM):   end;
1132964   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1132965   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1132966   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1132967   +   end;
MPRINT(EM_DIAGRAM):   end;
1132968   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132969   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1132970   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1132971   +   end;
MPRINT(EM_DIAGRAM):   end;
1132972   +end;
MPRINT(EM_DIAGRAM):   end;
1132973   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1132974   +   P_DepVar1  =     17.1648278730429 * H1x1_1  +    -5.41550544466459 * H1x1_2
1132975   +          +     -11.071053129929 * H1x1_3  +      10.744209891392 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1648278730429 * H1x1_1 + -5.41550544466459 * H1x1_2 + 
-11.071053129929 * H1x1_3 + 10.744209891392 * H1x1_4 ;
1132976   +   P_DepVar1  =    -12.0079203309727 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.0079203309727 + P_DepVar1 ;
1132977   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1132978   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1132979   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1132980   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1132981   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1132982   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1132983   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1132984   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1132985   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1132986   +END;
MPRINT(EM_DIAGRAM):   END;
1132987   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1132988   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1132989   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1132990   +END;
MPRINT(EM_DIAGRAM):   END;
1132991   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1132992   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1132993   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1132994   +END;
MPRINT(EM_DIAGRAM):   END;
1132995   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1132996   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1132997   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1132998   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1132999   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1133000   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1133001   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1133002   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133003   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1133004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133005   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1133006   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1133007   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1133008   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1133009   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1133010   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1133011   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1133012   +END;
MPRINT(EM_DIAGRAM):   END;
1133013   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1133014   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1133015   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1133016   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1133017   +* Renaming variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural33;
1133018   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133019   +* Renaming Posterior variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural33;
1133020   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133021   +drop AutoNeural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_P_DepVar1;
1133022   +AutoNeural33_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural33_P_DepVar1 = P_DepVar1;
1133023   +drop AutoNeural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_P_DepVar0;
1133024   +AutoNeural33_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural33_P_DepVar0 = P_DepVar0;
1133025   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133026   +* Renaming _WARN_ variable for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural33;
1133027   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133028   +length AutoNeural33_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural33_WARN_ $4;
1133029   +drop AutoNeural33_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_WARN_;
1133030   +AutoNeural33_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural33_WARN_ = _WARN_;
1133031   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133032   +* Ensmbl51: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Scoring Code of model 5 of 7;
1133033   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133034   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133035   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1133036   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1133037   +* NODE: AutoNeural32;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural32;
1133038   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133039   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1133040   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1133041   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1133042   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1133043   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1133044   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1133045   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1133046   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1133047   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1133048   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1133049   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1133050   +LENGTH _WARN_ $4
1133051   +      F_DepVar  $ 12
1133052   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1133053   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1133054   +
1133055   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1133056   +
1133057   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1133058   +
1133059   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1133060   +
1133061   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1133062   +
1133063   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1133064   +
1133065   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1133066   +
1133067   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1133068   +
1133069   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1133070   +
1133071   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1133072   +
1133073   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1133074   +
1133075   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1133076   +
1133077   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1133078   +
1133079   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1133080   +
1133081   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1133082   +
1133083   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1133084   +
1133085   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1133086   +
1133087   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1133088   +
1133089   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1133090   +
1133091   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1133092   +
1133093   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1133094   +
1133095   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1133096   +
1133097   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1133098   +
1133099   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1133100   +
1133101   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1133102   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1133103   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1133104   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1133105   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1133106   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1133107   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133108   +end;
MPRINT(EM_DIAGRAM):   end;
1133109   +else do;
MPRINT(EM_DIAGRAM):   else do;
1133110   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1133111   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1133112   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1133113   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1133114   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1133115   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1133116   +   end;
MPRINT(EM_DIAGRAM):   end;
1133117   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1133118   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1133119   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1133120   +   end;
MPRINT(EM_DIAGRAM):   end;
1133121   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1133122   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1133123   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1133124   +   end;
MPRINT(EM_DIAGRAM):   end;
1133125   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1133126   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1133127   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1133128   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1133129   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133130   +   end;
MPRINT(EM_DIAGRAM):   end;
1133131   +end;
MPRINT(EM_DIAGRAM):   end;
1133132   +
1133133   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133134   +*** Checking missing input Interval
1133135   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1133136   +
1133137   +IF NMISS(
1133138   +   AcceptedCmpTotal ,
1133139   +   Frq ,
1133140   +   Income ,
1133141   +   Mnt ,
1133142   +   MntGoldProds ,
1133143   +   MntMeatProducts ,
1133144   +   MntWines ,
1133145   +   NumDistPurchases ,
1133146   +   RFMstat ,
1133147   +   RMntFrq ,
1133148   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1133149   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1133150   +
1133151   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133152   +END;
MPRINT(EM_DIAGRAM):   END;
1133153   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133154   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1133155   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133156   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1133157   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1133158   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1133159   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1133160   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1133161   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1133162   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1133163   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1133164   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1133165   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1133166   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1133167   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1133168   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1133169   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1133170   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1133171   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1133172   +END;
MPRINT(EM_DIAGRAM):   END;
1133173   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1133174   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1133175   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1133176   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1133177   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1133178   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1133179   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1133180   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1133181   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1133182   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1133183   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1133184   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1133185   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1133186   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1133187   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1133188   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1133189   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1133190   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1133191   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1133192   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1133193   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1133194   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1133195   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1133196   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1133197   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1133198   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1133199   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1133200   +END;
MPRINT(EM_DIAGRAM):   END;
1133201   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133202   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1133203   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133204   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133205   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1133206   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133207   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1133208   +   H1x1_1  =    -0.38956319781905 * S_AcceptedCmpTotal
1133209   +          +    -0.08624585416733 * S_Frq  +     0.14990044515556 * S_Income
1133210   +          +     1.26905422062144 * S_Mnt  +    -0.05830961868093 *
1133211   +        S_MntGoldProds  +    -0.45655804707903 * S_MntMeatProducts
1133212   +          +    -0.29008121030195 * S_MntWines  +    -0.52580257849932 *
1133213   +        S_NumDistPurchases  +     -0.1481404693781 * S_RFMstat
1133214   +          +    -0.49319351834455 * S_RMntFrq  +     0.54249594661515 *
1133215   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.38956319781905 * S_AcceptedCmpTotal + -0.08624585416733 * 
S_Frq + 0.14990044515556 * S_Income + 1.26905422062144 * S_Mnt + -0.05830961868093 * 
S_MntGoldProds + -0.45655804707903 * S_MntMeatProducts + -0.29008121030195 * S_MntWines + 
-0.52580257849932 * S_NumDistPurchases + -0.1481404693781 * S_RFMstat + -0.49319351834455 * 
S_RMntFrq + 0.54249594661515 * S_Recency ;
1133216   +   H1x1_2  =     0.38779821527892 * S_AcceptedCmpTotal
1133217   +          +    -1.22315175769362 * S_Frq  +      1.1802985172513 * S_Income
1133218   +          +     2.08508390361851 * S_Mnt  +     0.42839460332296 *
1133219   +        S_MntGoldProds  +      0.9001009517595 * S_MntMeatProducts
1133220   +          +     0.43882453107711 * S_MntWines  +    -0.77730415774439 *
1133221   +        S_NumDistPurchases  +    -0.48791819347803 * S_RFMstat
1133222   +          +    -0.74366268198551 * S_RMntFrq  +    -0.17482075484114 *
1133223   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.38779821527892 * S_AcceptedCmpTotal + -1.22315175769362 * 
S_Frq + 1.1802985172513 * S_Income + 2.08508390361851 * S_Mnt + 0.42839460332296 * 
S_MntGoldProds + 0.9001009517595 * S_MntMeatProducts + 0.43882453107711 * S_MntWines + 
-0.77730415774439 * S_NumDistPurchases + -0.48791819347803 * S_RFMstat + -0.74366268198551 * 
S_RMntFrq + -0.17482075484114 * S_Recency ;
1133224   +   H1x1_3  =    -0.22134549179782 * S_AcceptedCmpTotal
1133225   +          +    -0.06178114920397 * S_Frq  +     -1.4524474173679 * S_Income
1133226   +          +    -7.85805111281271 * S_Mnt  +    -0.25260256377303 *
1133227   +        S_MntGoldProds  +     2.24650170262612 * S_MntMeatProducts
1133228   +          +    -0.28495082016886 * S_MntWines  +     2.83659961242127 *
1133229   +        S_NumDistPurchases  +     0.42067169774523 * S_RFMstat
1133230   +          +     1.71392925516862 * S_RMntFrq  +    -0.09478915012781 *
1133231   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.22134549179782 * S_AcceptedCmpTotal + -0.06178114920397 * 
S_Frq + -1.4524474173679 * S_Income + -7.85805111281271 * S_Mnt + -0.25260256377303 * 
S_MntGoldProds + 2.24650170262612 * S_MntMeatProducts + -0.28495082016886 * S_MntWines + 
2.83659961242127 * S_NumDistPurchases + 0.42067169774523 * S_RFMstat + 1.71392925516862 * 
S_RMntFrq + -0.09478915012781 * S_Recency ;
1133232   +   H1x1_1  = H1x1_1  +    -0.22060541309937 * G_Marital_Status0
1133233   +          +    -0.46692703876881 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.22060541309937 * G_Marital_Status0 + 
-0.46692703876881 * G_Marital_Status1 ;
1133234   +   H1x1_2  = H1x1_2  +     0.47416822018188 * G_Marital_Status0
1133235   +          +     -2.1058284684647 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.47416822018188 * G_Marital_Status0 + 
-2.1058284684647 * G_Marital_Status1 ;
1133236   +   H1x1_3  = H1x1_3  +    -0.44803855270897 * G_Marital_Status0
1133237   +          +     1.41026185304551 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.44803855270897 * G_Marital_Status0 + 
1.41026185304551 * G_Marital_Status1 ;
1133238   +   H1x1_1  =     1.63085271667721 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.63085271667721 + H1x1_1 ;
1133239   +   H1x1_2  =     0.28277859846654 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.28277859846654 + H1x1_2 ;
1133240   +   H1x1_3  =     -1.8890871578635 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.8890871578635 + H1x1_3 ;
1133241   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1133242   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1133243   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1133244   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1133245   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1133246   +END;
MPRINT(EM_DIAGRAM):   END;
1133247   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1133248   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1133249   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1133250   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1133251   +END;
MPRINT(EM_DIAGRAM):   END;
1133252   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133253   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1133254   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133255   +
1133256   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1133257   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1133258   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1133259   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1133260   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1133261   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1133262   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1133263   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1133264   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1133265   +end;
MPRINT(EM_DIAGRAM):   end;
1133266   +else do;
MPRINT(EM_DIAGRAM):   else do;
1133267   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1133268   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1133269   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1133270   +   end;
MPRINT(EM_DIAGRAM):   end;
1133271   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1133272   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1133273   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1133274   +   end;
MPRINT(EM_DIAGRAM):   end;
1133275   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1133276   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1133277   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1133278   +   end;
MPRINT(EM_DIAGRAM):   end;
1133279   +end;
MPRINT(EM_DIAGRAM):   end;
1133280   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1133281   +   P_DepVar1  =    -23.6822744769009 * H1x1_1  +     16.0380566008578 * H1x1_2
1133282   +          +     15.3446320724554 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -23.6822744769009 * H1x1_1 + 16.0380566008578 * H1x1_2 + 
15.3446320724554 * H1x1_3 ;
1133283   +   P_DepVar1  =     0.67225691696469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.67225691696469 + P_DepVar1 ;
1133284   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1133285   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1133286   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1133287   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1133288   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1133289   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1133290   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1133291   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1133292   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1133293   +END;
MPRINT(EM_DIAGRAM):   END;
1133294   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1133295   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1133296   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1133297   +END;
MPRINT(EM_DIAGRAM):   END;
1133298   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1133299   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1133300   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1133301   +END;
MPRINT(EM_DIAGRAM):   END;
1133302   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1133303   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1133304   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1133305   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1133306   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1133307   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1133308   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1133309   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133310   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1133311   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133312   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1133313   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1133314   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1133315   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1133316   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1133317   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1133318   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1133319   +END;
MPRINT(EM_DIAGRAM):   END;
1133320   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1133321   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1133322   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1133323   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1133324   +* Renaming variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural32;
1133325   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133326   +* Renaming Posterior variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural32;
1133327   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133328   +drop AutoNeural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_P_DepVar1;
1133329   +AutoNeural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural32_P_DepVar1 = P_DepVar1;
1133330   +drop AutoNeural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_P_DepVar0;
1133331   +AutoNeural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural32_P_DepVar0 = P_DepVar0;
1133332   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133333   +* Renaming _WARN_ variable for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural32;
1133334   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133335   +length AutoNeural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural32_WARN_ $4;
1133336   +drop AutoNeural32_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_WARN_;
1133337   +AutoNeural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural32_WARN_ = _WARN_;
1133338   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133339   +* Ensmbl51: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Scoring Code of model 6 of 7;
1133340   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133341   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133342   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1133343   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1133344   +* NODE: AutoNeural31;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural31;
1133345   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133346   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1133347   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1133348   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1133349   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1133350   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1133351   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1133352   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1133353   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1133354   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1133355   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1133356   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1133357   +LENGTH _WARN_ $4
1133358   +      F_DepVar  $ 12
1133359   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1133360   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1133361   +
1133362   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1133363   +
1133364   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1133365   +
1133366   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1133367   +
1133368   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1133369   +
1133370   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1133371   +
1133372   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1133373   +
1133374   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1133375   +
1133376   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1133377   +
1133378   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1133379   +
1133380   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1133381   +
1133382   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1133383   +
1133384   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1133385   +
1133386   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1133387   +
1133388   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1133389   +
1133390   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1133391   +
1133392   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1133393   +
1133394   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1133395   +
1133396   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1133397   +
1133398   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1133399   +
1133400   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1133401   +
1133402   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1133403   +
1133404   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1133405   +
1133406   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1133407   +
1133408   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1133409   +
1133410   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1133411   +
1133412   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1133413   +
1133414   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1133415   +
1133416   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1133417   +
1133418   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1133419   +
1133420   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1133421   +
1133422   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1133423   +
1133424   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1133425   +
1133426   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1133427   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1133428   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1133429   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1133430   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1133431   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1133432   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133433   +end;
MPRINT(EM_DIAGRAM):   end;
1133434   +else do;
MPRINT(EM_DIAGRAM):   else do;
1133435   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1133436   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1133437   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1133438   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1133439   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1133440   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1133441   +   end;
MPRINT(EM_DIAGRAM):   end;
1133442   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1133443   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1133444   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1133445   +   end;
MPRINT(EM_DIAGRAM):   end;
1133446   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1133447   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1133448   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1133449   +   end;
MPRINT(EM_DIAGRAM):   end;
1133450   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1133451   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1133452   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1133453   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1133454   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133455   +   end;
MPRINT(EM_DIAGRAM):   end;
1133456   +end;
MPRINT(EM_DIAGRAM):   end;
1133457   +
1133458   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133459   +*** Checking missing input Interval
1133460   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1133461   +
1133462   +IF NMISS(
1133463   +   AcceptedCmpTotal ,
1133464   +   Frq ,
1133465   +   Income ,
1133466   +   Mnt ,
1133467   +   MntGoldProds ,
1133468   +   MntMeatProducts ,
1133469   +   MntWines ,
1133470   +   NumDistPurchases ,
1133471   +   RFMstat ,
1133472   +   RMntFrq ,
1133473   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1133474   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1133475   +
1133476   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133477   +END;
MPRINT(EM_DIAGRAM):   END;
1133478   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133479   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1133480   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133481   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1133482   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1133483   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1133484   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1133485   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1133486   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1133487   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1133488   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1133489   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1133490   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1133491   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1133492   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1133493   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1133494   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1133495   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1133496   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1133497   +END;
MPRINT(EM_DIAGRAM):   END;
1133498   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1133499   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1133500   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1133501   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1133502   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1133503   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1133504   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1133505   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1133506   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1133507   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1133508   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1133509   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1133510   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1133511   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1133512   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1133513   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1133514   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1133515   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1133516   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1133517   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1133518   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1133519   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1133520   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1133521   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1133522   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1133523   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1133524   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1133525   +END;
MPRINT(EM_DIAGRAM):   END;
1133526   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133527   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1133528   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133529   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133530   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1133531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133532   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1133533   +   H1x1_1  =     0.03659823017812 * S_AcceptedCmpTotal
1133534   +          +    -1.19763341876145 * S_Frq  +     0.81238202822952 * S_Income
1133535   +          +     1.88011676145119 * S_Mnt  +     0.17620967209108 *
1133536   +        S_MntGoldProds  +    -0.01645582313184 * S_MntMeatProducts
1133537   +          +     0.51002049519212 * S_MntWines  +     0.25222197723244 *
1133538   +        S_NumDistPurchases  +     0.28056722928561 * S_RFMstat
1133539   +          +    -1.12243193103334 * S_RMntFrq  +    -0.37511560424314 *
1133540   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.03659823017812 * S_AcceptedCmpTotal + -1.19763341876145 * 
S_Frq + 0.81238202822952 * S_Income + 1.88011676145119 * S_Mnt + 0.17620967209108 * 
S_MntGoldProds + -0.01645582313184 * S_MntMeatProducts + 0.51002049519212 * S_MntWines + 
0.25222197723244 * S_NumDistPurchases + 0.28056722928561 * S_RFMstat + -1.12243193103334 * 
S_RMntFrq + -0.37511560424314 * S_Recency ;
1133541   +   H1x1_2  =     0.18983412995843 * S_AcceptedCmpTotal
1133542   +          +    -0.36018162246349 * S_Frq  +     0.01068760327542 * S_Income
1133543   +          +    -0.89719147415619 * S_Mnt  +     0.11241727599926 *
1133544   +        S_MntGoldProds  +     0.64236815353055 * S_MntMeatProducts
1133545   +          +     0.36278145113777 * S_MntWines  +     0.34466813565445 *
1133546   +        S_NumDistPurchases  +     0.05359534034679 * S_RFMstat
1133547   +          +     0.02704700607418 * S_RMntFrq  +     -0.3718472688023 *
1133548   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.18983412995843 * S_AcceptedCmpTotal + -0.36018162246349 * 
S_Frq + 0.01068760327542 * S_Income + -0.89719147415619 * S_Mnt + 0.11241727599926 * 
S_MntGoldProds + 0.64236815353055 * S_MntMeatProducts + 0.36278145113777 * S_MntWines + 
0.34466813565445 * S_NumDistPurchases + 0.05359534034679 * S_RFMstat + 0.02704700607418 * 
S_RMntFrq + -0.3718472688023 * S_Recency ;
1133549   +   H1x1_1  = H1x1_1  +     0.40642305557546 * G_Marital_Status0
1133550   +          +     -0.0248646279252 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.40642305557546 * G_Marital_Status0 + 
-0.0248646279252 * G_Marital_Status1 ;
1133551   +   H1x1_2  = H1x1_2  +     0.16115803721995 * G_Marital_Status0
1133552   +          +     0.05904755469144 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.16115803721995 * G_Marital_Status0 + 
0.05904755469144 * G_Marital_Status1 ;
1133553   +   H1x1_1  =     0.33463349044957 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.33463349044957 + H1x1_1 ;
1133554   +   H1x1_2  =    -3.62976809107266 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.62976809107266 + H1x1_2 ;
1133555   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1133556   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1133557   +END;
MPRINT(EM_DIAGRAM):   END;
1133558   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1133559   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1133560   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1133561   +END;
MPRINT(EM_DIAGRAM):   END;
1133562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133563   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1133564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133565   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1133566   +   H1x2_1  =    -0.36010169192455 * S_AcceptedCmpTotal
1133567   +          +    -0.59887603386433 * S_Frq  +     0.50990837522658 * S_Income
1133568   +          +    -1.11866059151852 * S_Mnt  +     0.36285188228582 *
1133569   +        S_MntGoldProds  +     1.22856170475832 * S_MntMeatProducts
1133570   +          +     1.46123404932164 * S_MntWines  +    -0.01510122045686 *
1133571   +        S_NumDistPurchases  +     0.53310564732407 * S_RFMstat
1133572   +          +    -0.40691094193511 * S_RMntFrq  +     0.45756644061361 *
1133573   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.36010169192455 * S_AcceptedCmpTotal + -0.59887603386433 * 
S_Frq + 0.50990837522658 * S_Income + -1.11866059151852 * S_Mnt + 0.36285188228582 * 
S_MntGoldProds + 1.22856170475832 * S_MntMeatProducts + 1.46123404932164 * S_MntWines + 
-0.01510122045686 * S_NumDistPurchases + 0.53310564732407 * S_RFMstat + -0.40691094193511 * 
S_RMntFrq + 0.45756644061361 * S_Recency ;
1133574   +   H1x2_2  =    -0.17932261343465 * S_AcceptedCmpTotal
1133575   +          +     1.20080978426162 * S_Frq  +     0.18118647708641 * S_Income
1133576   +          +     0.31901116297924 * S_Mnt  +     0.02135897416621 *
1133577   +        S_MntGoldProds  +    -1.12534829348468 * S_MntMeatProducts
1133578   +          +     0.57649851666461 * S_MntWines  +    -1.46542585484816 *
1133579   +        S_NumDistPurchases  +    -0.20960777623629 * S_RFMstat
1133580   +          +      0.6962031545587 * S_RMntFrq  +     0.00840421006739 *
1133581   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.17932261343465 * S_AcceptedCmpTotal + 1.20080978426162 * 
S_Frq + 0.18118647708641 * S_Income + 0.31901116297924 * S_Mnt + 0.02135897416621 * 
S_MntGoldProds + -1.12534829348468 * S_MntMeatProducts + 0.57649851666461 * S_MntWines + 
-1.46542585484816 * S_NumDistPurchases + -0.20960777623629 * S_RFMstat + 0.6962031545587 * 
S_RMntFrq + 0.00840421006739 * S_Recency ;
1133582   +   H1x2_1  = H1x2_1  +    -0.05195034052296 * G_Marital_Status0
1133583   +          +     -0.2774675863976 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.05195034052296 * G_Marital_Status0 + 
-0.2774675863976 * G_Marital_Status1 ;
1133584   +   H1x2_2  = H1x2_2  +     0.01901604294952 * G_Marital_Status0
1133585   +          +      -0.277144006775 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.01901604294952 * G_Marital_Status0 + -0.277144006775 
* G_Marital_Status1 ;
1133586   +   H1x2_1  =     1.53233871423223 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.53233871423223 + H1x2_1 ;
1133587   +   H1x2_2  =     1.35238678006556 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.35238678006556 + H1x2_2 ;
1133588   +   H1x2_1  = SIN(H1x2_1 );
MPRINT(EM_DIAGRAM):   H1x2_1 = SIN(H1x2_1 );
1133589   +   H1x2_2  = SIN(H1x2_2 );
MPRINT(EM_DIAGRAM):   H1x2_2 = SIN(H1x2_2 );
1133590   +END;
MPRINT(EM_DIAGRAM):   END;
1133591   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1133592   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1133593   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1133594   +END;
MPRINT(EM_DIAGRAM):   END;
1133595   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133596   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1133597   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133598   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1133599   +   H1x3_1  =     1.63523210720409 * S_AcceptedCmpTotal
1133600   +          +     0.41751349520438 * S_Frq  +    -0.87449723255309 * S_Income
1133601   +          +    -0.47825070320724 * S_Mnt  +     0.76630810205636 *
1133602   +        S_MntGoldProds  +    -0.35835365889925 * S_MntMeatProducts
1133603   +          +    -1.27333688175297 * S_MntWines  +    -1.52770581313638 *
1133604   +        S_NumDistPurchases  +     0.86851574498866 * S_RFMstat
1133605   +          +     0.84614746872207 * S_RMntFrq  +    -1.64268632744477 *
1133606   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.63523210720409 * S_AcceptedCmpTotal + 0.41751349520438 * 
S_Frq + -0.87449723255309 * S_Income + -0.47825070320724 * S_Mnt + 0.76630810205636 * 
S_MntGoldProds + -0.35835365889925 * S_MntMeatProducts + -1.27333688175297 * S_MntWines + 
-1.52770581313638 * S_NumDistPurchases + 0.86851574498866 * S_RFMstat + 0.84614746872207 * 
S_RMntFrq + -1.64268632744477 * S_Recency ;
1133607   +   H1x3_2  =    -0.18638529120439 * S_AcceptedCmpTotal
1133608   +          +     0.76011175462816 * S_Frq  +     0.58495336465132 * S_Income
1133609   +          +     0.65856698208574 * S_Mnt  +     0.68781212622472 *
1133610   +        S_MntGoldProds  +    -1.09375532907934 * S_MntMeatProducts
1133611   +          +     1.39481639500189 * S_MntWines  +     0.26914802103737 *
1133612   +        S_NumDistPurchases  +    -2.20511156805519 * S_RFMstat
1133613   +          +     1.66705142994155 * S_RMntFrq  +    -0.36249885315985 *
1133614   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.18638529120439 * S_AcceptedCmpTotal + 0.76011175462816 * 
S_Frq + 0.58495336465132 * S_Income + 0.65856698208574 * S_Mnt + 0.68781212622472 * 
S_MntGoldProds + -1.09375532907934 * S_MntMeatProducts + 1.39481639500189 * S_MntWines + 
0.26914802103737 * S_NumDistPurchases + -2.20511156805519 * S_RFMstat + 1.66705142994155 * 
S_RMntFrq + -0.36249885315985 * S_Recency ;
1133615   +   H1x3_1  = H1x3_1  +     -0.2579393569494 * G_Marital_Status0
1133616   +          +    -1.04614665932456 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.2579393569494 * G_Marital_Status0 + 
-1.04614665932456 * G_Marital_Status1 ;
1133617   +   H1x3_2  = H1x3_2  +    -1.03096078089306 * G_Marital_Status0
1133618   +          +    -0.71974289565489 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.03096078089306 * G_Marital_Status0 + 
-0.71974289565489 * G_Marital_Status1 ;
1133619   +   H1x3_1  =    -0.91456189694636 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.91456189694636 + H1x3_1 ;
1133620   +   H1x3_2  =    -0.51701043559885 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.51701043559885 + H1x3_2 ;
1133621   +   H1x3_1  = SIN(H1x3_1 );
MPRINT(EM_DIAGRAM):   H1x3_1 = SIN(H1x3_1 );
1133622   +   H1x3_2  = SIN(H1x3_2 );
MPRINT(EM_DIAGRAM):   H1x3_2 = SIN(H1x3_2 );
1133623   +END;
MPRINT(EM_DIAGRAM):   END;
1133624   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1133625   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1133626   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1133627   +END;
MPRINT(EM_DIAGRAM):   END;
1133628   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133629   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1133630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133631   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1133632   +   H2x1_1  =     1.47132066677712 * H1x1_1  +      1.2723487532385 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.47132066677712 * H1x1_1 + 1.2723487532385 * H1x1_2 ;
1133633   +   H2x1_2  =     1.58711243971308 * H1x1_1  +      6.5189759089623 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.58711243971308 * H1x1_1 + 6.5189759089623 * H1x1_2 ;
1133634   +   H2x1_1  = H2x1_1  +     1.30878911727231 * H1x2_1
1133635   +          +     2.19496661698373 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.30878911727231 * H1x2_1 + 2.19496661698373 * H1x2_2 ;
1133636   +   H2x1_2  = H2x1_2  +    -3.82744270061369 * H1x2_1
1133637   +          +      1.3090956402929 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -3.82744270061369 * H1x2_1 + 1.3090956402929 * H1x2_2 ;
1133638   +   H2x1_1  = H2x1_1  +    -0.97307968271784 * H1x3_1
1133639   +          +     0.17025511053322 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.97307968271784 * H1x3_1 + 0.17025511053322 * H1x3_2 
;
1133640   +   H2x1_2  = H2x1_2  +    -0.00685159977192 * H1x3_1
1133641   +          +     0.53377830648041 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.00685159977192 * H1x3_1 + 0.53377830648041 * H1x3_2 
;
1133642   +   H2x1_1  =    -2.88828567261654 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -2.88828567261654 + H2x1_1 ;
1133643   +   H2x1_2  =    -0.63666932052712 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.63666932052712 + H2x1_2 ;
1133644   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1133645   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1133646   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1133647   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1133648   +END;
MPRINT(EM_DIAGRAM):   END;
1133649   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1133650   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1133651   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1133652   +END;
MPRINT(EM_DIAGRAM):   END;
1133653   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133654   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1133655   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133656   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1133657   +   H2x2_1  =     -0.1591646734645 * H1x1_1  +     2.50898584287812 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.1591646734645 * H1x1_1 + 2.50898584287812 * H1x1_2 ;
1133658   +   H2x2_2  =    -1.04022138862095 * H1x1_1  +     -3.2120641538371 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.04022138862095 * H1x1_1 + -3.2120641538371 * H1x1_2 ;
1133659   +   H2x2_1  = H2x2_1  +     0.95364577994168 * H1x2_1
1133660   +          +     0.39917449615996 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.95364577994168 * H1x2_1 + 0.39917449615996 * H1x2_2 ;
1133661   +   H2x2_2  = H2x2_2  +     0.34367752685876 * H1x2_1
1133662   +          +    -0.43345610313251 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.34367752685876 * H1x2_1 + -0.43345610313251 * H1x2_2 
;
1133663   +   H2x2_1  = H2x2_1  +    -0.21053791455319 * H1x3_1
1133664   +          +     1.30320774323126 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.21053791455319 * H1x3_1 + 1.30320774323126 * H1x3_2 
;
1133665   +   H2x2_2  = H2x2_2  +    -0.56776778702573 * H1x3_1
1133666   +          +     0.23307461428861 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.56776778702573 * H1x3_1 + 0.23307461428861 * H1x3_2 
;
1133667   +   H2x2_1  =    -0.57800274966727 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.57800274966727 + H2x2_1 ;
1133668   +   H2x2_2  =     -0.3490585254981 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.3490585254981 + H2x2_2 ;
1133669   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1133670   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1133671   +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
1133672   +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
1133673   +END;
MPRINT(EM_DIAGRAM):   END;
1133674   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1133675   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1133676   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1133677   +END;
MPRINT(EM_DIAGRAM):   END;
1133678   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133679   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1133680   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133681   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1133682   +   H3x1_1  =     2.93892662286754 * H2x1_1  +     4.69530667636314 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 2.93892662286754 * H2x1_1 + 4.69530667636314 * H2x1_2 ;
1133683   +   H3x1_1  = H3x1_1  +     0.63147427004529 * H2x2_1
1133684   +          +    -3.38971951524722 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 0.63147427004529 * H2x2_1 + -3.38971951524722 * H2x2_2 
;
1133685   +   H3x1_1  =    -2.10378320265168 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -2.10378320265168 + H3x1_1 ;
1133686   +   H3x1_2  = 0;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0;
1133687   +   _MAX_ = MAX (H3x1_1 , H3x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 );
1133688   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1133689   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
1133690   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
1133691   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
1133692   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
1133693   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
1133694   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
1133695   +END;
MPRINT(EM_DIAGRAM):   END;
1133696   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1133697   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1133698   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1133699   +END;
MPRINT(EM_DIAGRAM):   END;
1133700   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133701   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1133702   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133703   +
1133704   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1133705   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1133706   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1133707   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1133708   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1133709   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1133710   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1133711   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1133712   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1133713   +end;
MPRINT(EM_DIAGRAM):   end;
1133714   +else do;
MPRINT(EM_DIAGRAM):   else do;
1133715   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1133716   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1133717   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1133718   +   end;
MPRINT(EM_DIAGRAM):   end;
1133719   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1133720   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1133721   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1133722   +   end;
MPRINT(EM_DIAGRAM):   end;
1133723   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1133724   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1133725   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1133726   +   end;
MPRINT(EM_DIAGRAM):   end;
1133727   +end;
MPRINT(EM_DIAGRAM):   end;
1133728   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1133729   +   P_DepVar1  =    -8.80200545202031 * H3x1_1  +    -0.19646708431763 * H3x1_2
1133730   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -8.80200545202031 * H3x1_1 + -0.19646708431763 * H3x1_2 ;
1133731   +   P_DepVar1  =     3.75158164611687 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.75158164611687 + P_DepVar1 ;
1133732   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1133733   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1133734   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1133735   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1133736   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1133737   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1133738   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1133739   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1133740   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1133741   +END;
MPRINT(EM_DIAGRAM):   END;
1133742   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1133743   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1133744   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1133745   +END;
MPRINT(EM_DIAGRAM):   END;
1133746   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1133747   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1133748   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1133749   +END;
MPRINT(EM_DIAGRAM):   END;
1133750   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1133751   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1133752   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1133753   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1133754   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1133755   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1133756   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1133757   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133758   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1133759   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133760   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1133761   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1133762   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1133763   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1133764   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1133765   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1133766   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1133767   +END;
MPRINT(EM_DIAGRAM):   END;
1133768   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1133769   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1133770   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1133771   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1133772   +* Renaming variables for AutoNeural31;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural31;
1133773   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133774   +* Renaming Posterior variables for AutoNeural31;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural31;
1133775   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133776   +drop AutoNeural31_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural31_P_DepVar1;
1133777   +AutoNeural31_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural31_P_DepVar1 = P_DepVar1;
1133778   +drop AutoNeural31_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural31_P_DepVar0;
1133779   +AutoNeural31_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural31_P_DepVar0 = P_DepVar0;
1133780   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133781   +* Renaming _WARN_ variable for AutoNeural31;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural31;
1133782   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133783   +length AutoNeural31_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural31_WARN_ $4;
1133784   +drop AutoNeural31_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural31_WARN_;
1133785   +AutoNeural31_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural31_WARN_ = _WARN_;
1133786   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133787   +* Ensmbl51: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Scoring Code of model 7 of 7;
1133788   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133789   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133790   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1133791   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1133792   +* NODE: AutoNeural30;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural30;
1133793   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133794   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1133795   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1133796   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1133797   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1133798   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1133799   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1133800   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1133801   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1133802   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1133803   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1133804   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1133805   +LENGTH _WARN_ $4
1133806   +      F_DepVar  $ 12
1133807   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1133808   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1133809   +
1133810   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1133811   +
1133812   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1133813   +
1133814   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1133815   +
1133816   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1133817   +
1133818   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1133819   +
1133820   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1133821   +
1133822   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1133823   +
1133824   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1133825   +
1133826   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1133827   +
1133828   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1133829   +
1133830   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1133831   +
1133832   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1133833   +
1133834   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1133835   +
1133836   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1133837   +
1133838   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1133839   +
1133840   +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
1133841   +
1133842   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1133843   +
1133844   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1133845   +
1133846   +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
1133847   +
1133848   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1133849   +
1133850   +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
1133851   +
1133852   +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
1133853   +
1133854   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1133855   +
1133856   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1133857   +
1133858   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1133859   +
1133860   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1133861   +
1133862   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1133863   +
1133864   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1133865   +
1133866   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1133867   +
1133868   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1133869   +
1133870   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1133871   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1133872   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1133873   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1133874   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1133875   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1133876   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133877   +end;
MPRINT(EM_DIAGRAM):   end;
1133878   +else do;
MPRINT(EM_DIAGRAM):   else do;
1133879   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1133880   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1133881   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1133882   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1133883   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1133884   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1133885   +   end;
MPRINT(EM_DIAGRAM):   end;
1133886   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1133887   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1133888   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1133889   +   end;
MPRINT(EM_DIAGRAM):   end;
1133890   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1133891   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1133892   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1133893   +   end;
MPRINT(EM_DIAGRAM):   end;
1133894   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1133895   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1133896   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1133897   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1133898   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133899   +   end;
MPRINT(EM_DIAGRAM):   end;
1133900   +end;
MPRINT(EM_DIAGRAM):   end;
1133901   +
1133902   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133903   +*** Checking missing input Interval
1133904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1133905   +
1133906   +IF NMISS(
1133907   +   AcceptedCmpTotal ,
1133908   +   Frq ,
1133909   +   Income ,
1133910   +   Mnt ,
1133911   +   MntGoldProds ,
1133912   +   MntMeatProducts ,
1133913   +   MntWines ,
1133914   +   NumDistPurchases ,
1133915   +   RFMstat ,
1133916   +   RMntFrq ,
1133917   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1133918   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1133919   +
1133920   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133921   +END;
MPRINT(EM_DIAGRAM):   END;
1133922   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133923   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1133924   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133925   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1133926   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1133927   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1133928   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1133929   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1133930   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1133931   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1133932   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1133933   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1133934   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1133935   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1133936   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1133937   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1133938   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1133939   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1133940   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1133941   +END;
MPRINT(EM_DIAGRAM):   END;
1133942   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1133943   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1133944   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1133945   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1133946   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1133947   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1133948   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1133949   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1133950   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1133951   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1133952   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1133953   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1133954   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1133955   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1133956   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1133957   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1133958   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1133959   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1133960   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1133961   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1133962   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1133963   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1133964   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1133965   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1133966   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1133967   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1133968   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1133969   +END;
MPRINT(EM_DIAGRAM):   END;
1133970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133971   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1133972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133974   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1133975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133976   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1133977   +   H1x1_1  =     0.04025840082513 * S_AcceptedCmpTotal
1133978   +          +     0.06318752729093 * S_Frq  +    -1.29545791179409 * S_Income
1133979   +          +    -7.11030940481191 * S_Mnt  +     0.43390451556969 *
1133980   +        S_MntGoldProds  +     1.69733563869673 * S_MntMeatProducts
1133981   +          +     0.48225589030087 * S_MntWines  +     2.50429846731068 *
1133982   +        S_NumDistPurchases  +     0.19831933540707 * S_RFMstat
1133983   +          +     0.96752741277283 * S_RMntFrq  +    -0.27394913723816 *
1133984   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.04025840082513 * S_AcceptedCmpTotal + 0.06318752729093 * 
S_Frq + -1.29545791179409 * S_Income + -7.11030940481191 * S_Mnt + 0.43390451556969 * 
S_MntGoldProds + 1.69733563869673 * S_MntMeatProducts + 0.48225589030087 * S_MntWines + 
2.50429846731068 * S_NumDistPurchases + 0.19831933540707 * S_RFMstat + 0.96752741277283 * 
S_RMntFrq + -0.27394913723816 * S_Recency ;
1133985   +   H1x1_1  = H1x1_1  +    -0.13186660711464 * G_Marital_Status0
1133986   +          +     0.76507926337086 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.13186660711464 * G_Marital_Status0 + 
0.76507926337086 * G_Marital_Status1 ;
1133987   +   H1x1_1  =    -2.07751077372903 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.07751077372903 + H1x1_1 ;
1133988   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1133989   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1133990   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1133991   +END;
MPRINT(EM_DIAGRAM):   END;
1133992   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1133993   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1133994   +END;
MPRINT(EM_DIAGRAM):   END;
1133995   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133996   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1133997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133998   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1133999   +   H1x2_1  =     0.04623108287373 * S_AcceptedCmpTotal
1134000   +          +     0.51673349328259 * S_Frq  +    -0.55409697473564 * S_Income
1134001   +          +    -1.80152141029664 * S_Mnt  +    -0.01192709316085 *
1134002   +        S_MntGoldProds  +    -1.08887322486716 * S_MntMeatProducts
1134003   +          +    -0.54592829528894 * S_MntWines  +     0.87903819952137 *
1134004   +        S_NumDistPurchases  +     0.15549845875066 * S_RFMstat
1134005   +          +     0.64330086736687 * S_RMntFrq  +    -0.34615492895156 *
1134006   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.04623108287373 * S_AcceptedCmpTotal + 0.51673349328259 * 
S_Frq + -0.55409697473564 * S_Income + -1.80152141029664 * S_Mnt + -0.01192709316085 * 
S_MntGoldProds + -1.08887322486716 * S_MntMeatProducts + -0.54592829528894 * S_MntWines + 
0.87903819952137 * S_NumDistPurchases + 0.15549845875066 * S_RFMstat + 0.64330086736687 * 
S_RMntFrq + -0.34615492895156 * S_Recency ;
1134007   +   H1x2_1  = H1x2_1  +     0.04272112278258 * G_Marital_Status0
1134008   +          +     0.52128005949051 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.04272112278258 * G_Marital_Status0 + 
0.52128005949051 * G_Marital_Status1 ;
1134009   +   H1x2_1  =    -1.26211132425318 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.26211132425318 + H1x2_1 ;
1134010   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1134011   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1134012   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1134013   +END;
MPRINT(EM_DIAGRAM):   END;
1134014   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1134015   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1134016   +END;
MPRINT(EM_DIAGRAM):   END;
1134017   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134018   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1134019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134020   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1134021   +   H1x3_1  =    -0.31931196892076 * S_AcceptedCmpTotal
1134022   +          +     0.88013014607652 * S_Frq  +       2.380671405121 * S_Income
1134023   +          +    -1.76438631408259 * S_Mnt  +    -0.88002382547081 *
1134024   +        S_MntGoldProds  +     3.22143288077158 * S_MntMeatProducts
1134025   +          +    -1.46872497431142 * S_MntWines  +     4.48983574481035 *
1134026   +        S_NumDistPurchases  +     1.49229101598701 * S_RFMstat
1134027   +          +     0.86000773065844 * S_RMntFrq  +     0.41345680894813 *
1134028   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.31931196892076 * S_AcceptedCmpTotal + 0.88013014607652 * 
S_Frq + 2.380671405121 * S_Income + -1.76438631408259 * S_Mnt + -0.88002382547081 * 
S_MntGoldProds + 3.22143288077158 * S_MntMeatProducts + -1.46872497431142 * S_MntWines + 
4.48983574481035 * S_NumDistPurchases + 1.49229101598701 * S_RFMstat + 0.86000773065844 * 
S_RMntFrq + 0.41345680894813 * S_Recency ;
1134029   +   H1x3_1  = H1x3_1  +     0.24244728138592 * G_Marital_Status0
1134030   +          +     0.68199092237732 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.24244728138592 * G_Marital_Status0 + 
0.68199092237732 * G_Marital_Status1 ;
1134031   +   H1x3_1  =      0.8344057531016 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.8344057531016 + H1x3_1 ;
1134032   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1134033   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1134034   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1134035   +END;
MPRINT(EM_DIAGRAM):   END;
1134036   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1134037   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1134038   +END;
MPRINT(EM_DIAGRAM):   END;
1134039   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134040   +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
1134041   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134042   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1134043   +   H1x4_1  =    -0.13659878639954 * S_AcceptedCmpTotal
1134044   +          +     0.45428559765776 * S_Frq  +    -0.42693519984843 * S_Income
1134045   +          +      1.1792020785091 * S_Mnt  +     0.71939074066077 *
1134046   +        S_MntGoldProds  +    -0.72620231508443 * S_MntMeatProducts
1134047   +          +    -0.32426637270285 * S_MntWines  +    -0.38988807626314 *
1134048   +        S_NumDistPurchases  +    -3.02140616024044 * S_RFMstat
1134049   +          +     -0.8223455835322 * S_RMntFrq  +     0.94450643717764 *
1134050   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.13659878639954 * S_AcceptedCmpTotal + 0.45428559765776 * 
S_Frq + -0.42693519984843 * S_Income + 1.1792020785091 * S_Mnt + 0.71939074066077 * 
S_MntGoldProds + -0.72620231508443 * S_MntMeatProducts + -0.32426637270285 * S_MntWines + 
-0.38988807626314 * S_NumDistPurchases + -3.02140616024044 * S_RFMstat + -0.8223455835322 * 
S_RMntFrq + 0.94450643717764 * S_Recency ;
1134051   +   H1x4_1  = H1x4_1  +    -0.12208204500004 * G_Marital_Status0
1134052   +          +    -0.36246978080124 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + -0.12208204500004 * G_Marital_Status0 + 
-0.36246978080124 * G_Marital_Status1 ;
1134053   +   H1x4_1  =    -0.95371898342722 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.95371898342722 + H1x4_1 ;
1134054   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1134055   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1134056   +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
1134057   +END;
MPRINT(EM_DIAGRAM):   END;
1134058   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1134059   +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
1134060   +END;
MPRINT(EM_DIAGRAM):   END;
1134061   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134062   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1134063   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134064   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1134065   +   H2x1_1  =    -5.17307699680657 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -5.17307699680657 * H1x1_1 ;
1134066   +   H2x1_1  = H2x1_1  +     5.68206219040914 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 5.68206219040914 * H1x2_1 ;
1134067   +   H2x1_1  = H2x1_1  +      0.0671760867147 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.0671760867147 * H1x3_1 ;
1134068   +   H2x1_1  = H2x1_1  +     1.77797879568099 * H1x4_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.77797879568099 * H1x4_1 ;
1134069   +   H2x1_1  =    -1.18533244144823 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.18533244144823 + H2x1_1 ;
1134070   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
1134071   +END;
MPRINT(EM_DIAGRAM):   END;
1134072   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1134073   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1134074   +END;
MPRINT(EM_DIAGRAM):   END;
1134075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134076   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1134077   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134078   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1134079   +   H2x2_1  =    -0.10427732572046 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.10427732572046 * H1x1_1 ;
1134080   +   H2x2_1  = H2x2_1  +    -2.43600502591825 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -2.43600502591825 * H1x2_1 ;
1134081   +   H2x2_1  = H2x2_1  +    -2.36291758854448 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -2.36291758854448 * H1x3_1 ;
1134082   +   H2x2_1  = H2x2_1  +    -0.21725276506237 * H1x4_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.21725276506237 * H1x4_1 ;
1134083   +   H2x2_1  =     -1.6479184469931 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -1.6479184469931 + H2x2_1 ;
1134084   +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
1134085   +END;
MPRINT(EM_DIAGRAM):   END;
1134086   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1134087   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1134088   +END;
MPRINT(EM_DIAGRAM):   END;
1134089   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134090   +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
1134091   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134092   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1134093   +   H2x3_1  =    -2.55881911263862 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -2.55881911263862 * H1x1_1 ;
1134094   +   H2x3_1  = H2x3_1  +    -1.36800479963026 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.36800479963026 * H1x2_1 ;
1134095   +   H2x3_1  = H2x3_1  +     2.49318998831913 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 2.49318998831913 * H1x3_1 ;
1134096   +   H2x3_1  = H2x3_1  +     -0.2723650813761 * H1x4_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -0.2723650813761 * H1x4_1 ;
1134097   +   H2x3_1  =    -2.02002422056859 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -2.02002422056859 + H2x3_1 ;
1134098   +   H2x3_1  = SIN(H2x3_1 );
MPRINT(EM_DIAGRAM):   H2x3_1 = SIN(H2x3_1 );
1134099   +END;
MPRINT(EM_DIAGRAM):   END;
1134100   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1134101   +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
1134102   +END;
MPRINT(EM_DIAGRAM):   END;
1134103   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134104   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1134105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134106   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1134107   +   H3x1_1  =    -5.17928987039105 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -5.17928987039105 * H2x1_1 ;
1134108   +   H3x1_1  = H3x1_1  +    -4.99188815628878 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -4.99188815628878 * H2x2_1 ;
1134109   +   H3x1_1  = H3x1_1  +    -1.59478766396441 * H2x3_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.59478766396441 * H2x3_1 ;
1134110   +   H3x1_1  =    -1.17125580012514 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -1.17125580012514 + H3x1_1 ;
1134111   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1134112   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1134113   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
1134114   +END;
MPRINT(EM_DIAGRAM):   END;
1134115   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1134116   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1134117   +END;
MPRINT(EM_DIAGRAM):   END;
1134118   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134119   +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
1134120   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134121   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1134122   +   H3x2_1  =       2.158894329803 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 2.158894329803 * H2x1_1 ;
1134123   +   H3x2_1  = H3x2_1  +    -2.32757193457059 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -2.32757193457059 * H2x2_1 ;
1134124   +   H3x2_1  = H3x2_1  +    -6.00752921212942 * H2x3_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -6.00752921212942 * H2x3_1 ;
1134125   +   H3x2_1  =    -0.08802993131411 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -0.08802993131411 + H3x2_1 ;
1134126   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1134127   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1134128   +   H3x2_1  = 1.0 / (1.0 + EXP(MIN( - H3x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x2_1 = 1.0 / (1.0 + EXP(MIN( - H3x2_1 , _EXP_BAR)));
1134129   +END;
MPRINT(EM_DIAGRAM):   END;
1134130   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1134131   +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
1134132   +END;
MPRINT(EM_DIAGRAM):   END;
1134133   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134134   +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
1134135   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134136   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1134137   +   H4x1_1  =      7.3411593355967 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 7.3411593355967 * H3x1_1 ;
1134138   +   H4x1_1  = H4x1_1  +    -3.06647078805944 * H3x2_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -3.06647078805944 * H3x2_1 ;
1134139   +   H4x1_1  =    -1.39824841795123 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = -1.39824841795123 + H4x1_1 ;
1134140   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1134141   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1134142   +   H4x1_1  = 1.0 / (1.0 + EXP(MIN( - H4x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H4x1_1 = 1.0 / (1.0 + EXP(MIN( - H4x1_1 , _EXP_BAR)));
1134143   +END;
MPRINT(EM_DIAGRAM):   END;
1134144   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1134145   +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
1134146   +END;
MPRINT(EM_DIAGRAM):   END;
1134147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134148   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1134149   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134150   +
1134151   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1134152   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1134153   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1134154   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1134155   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1134156   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1134157   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1134158   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1134159   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1134160   +end;
MPRINT(EM_DIAGRAM):   end;
1134161   +else do;
MPRINT(EM_DIAGRAM):   else do;
1134162   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1134163   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1134164   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1134165   +   end;
MPRINT(EM_DIAGRAM):   end;
1134166   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1134167   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1134168   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1134169   +   end;
MPRINT(EM_DIAGRAM):   end;
1134170   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1134171   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1134172   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1134173   +   end;
MPRINT(EM_DIAGRAM):   end;
1134174   +end;
MPRINT(EM_DIAGRAM):   end;
1134175   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1134176   +   P_DepVar1  =     9.74622448352833 * H4x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 9.74622448352833 * H4x1_1 ;
1134177   +   P_DepVar1  =    -7.88591846838259 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.88591846838259 + P_DepVar1 ;
1134178   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1134179   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1134180   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1134181   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1134182   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1134183   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1134184   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1134185   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1134186   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1134187   +END;
MPRINT(EM_DIAGRAM):   END;
1134188   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1134189   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1134190   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1134191   +END;
MPRINT(EM_DIAGRAM):   END;
1134192   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1134193   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1134194   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1134195   +END;
MPRINT(EM_DIAGRAM):   END;
1134196   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1134197   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1134198   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1134199   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1134200   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1134201   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1134202   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1134203   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134204   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1134205   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134206   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1134207   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1134208   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1134209   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1134210   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1134211   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1134212   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1134213   +END;
MPRINT(EM_DIAGRAM):   END;
1134214   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1134215   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1134216   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1134217   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1134218   +* Renaming variables for AutoNeural30;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural30;
1134219   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134220   +* Renaming Posterior variables for AutoNeural30;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural30;
1134221   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134222   +drop AutoNeural30_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural30_P_DepVar1;
1134223   +AutoNeural30_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural30_P_DepVar1 = P_DepVar1;
1134224   +drop AutoNeural30_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural30_P_DepVar0;
1134225   +AutoNeural30_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural30_P_DepVar0 = P_DepVar0;
1134226   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134227   +* Renaming _WARN_ variable for AutoNeural30;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural30;
1134228   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134229   +length AutoNeural30_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural30_WARN_ $4;
1134230   +drop AutoNeural30_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural30_WARN_;
1134231   +AutoNeural30_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural30_WARN_ = _WARN_;
1134232   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134233   +* Ensmbl51: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Average Posteriors of 7 models;
1134234   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134235   +P_DepVar1 = (
1134236   +AutoNeural29_P_DepVar1 +
1134237   +AutoNeural28_P_DepVar1 +
1134238   +AutoNeural27_P_DepVar1 +
1134239   +AutoNeural33_P_DepVar1 +
1134240   +AutoNeural32_P_DepVar1 +
1134241   +AutoNeural31_P_DepVar1 +
1134242   +AutoNeural30_P_DepVar1
1134243   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural29_P_DepVar1 + AutoNeural28_P_DepVar1 + 
AutoNeural27_P_DepVar1 + AutoNeural33_P_DepVar1 + AutoNeural32_P_DepVar1 + 
AutoNeural31_P_DepVar1 + AutoNeural30_P_DepVar1 )/7;
1134244   +P_DepVar0 = (
1134245   +AutoNeural29_P_DepVar0 +
1134246   +AutoNeural28_P_DepVar0 +
1134247   +AutoNeural27_P_DepVar0 +
1134248   +AutoNeural33_P_DepVar0 +
1134249   +AutoNeural32_P_DepVar0 +
1134250   +AutoNeural31_P_DepVar0 +
1134251   +AutoNeural30_P_DepVar0
1134252   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural29_P_DepVar0 + AutoNeural28_P_DepVar0 + 
AutoNeural27_P_DepVar0 + AutoNeural33_P_DepVar0 + AutoNeural32_P_DepVar0 + 
AutoNeural31_P_DepVar0 + AutoNeural30_P_DepVar0 )/7;
1134253   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134254   +* Ensmbl51: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Computing Classification Vars;
1134255   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134256   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1134257   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1134258   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1134259   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1134260   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1134261   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1134262   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1134263   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1134264   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1134265   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1134266   +end;
MPRINT(EM_DIAGRAM):   end;
1134267   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1134268   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1134269   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1134270   +end;
MPRINT(EM_DIAGRAM):   end;
1134271   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1134272   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134273   +* Ensmbl51: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Producing Unformatted variable;
1134274   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134275   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1134276   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1134277   +else
1134278   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1134279   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134280   +* Ensmbl51: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Computing _WARN_ Variable;
1134281   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134282   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1134283   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1134284   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1134285   +if index(AUTONEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1134285  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1134286   +if index(AUTONEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1134286  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1134287   +if index(AUTONEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1134287  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1134288   +if index(AUTONEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1134288  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1134289   +if index(AUTONEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1134289  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1134290   +if index(AUTONEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1134290  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1134291   +if index(AUTONEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1134291  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1134292   +if index(AUTONEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1134292  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1134293   +if index(AUTONEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1134293  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1134294   +if index(AUTONEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1134294  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1134295   +if index(AUTONEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1134295  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1134296   +if index(AUTONEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1134296  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1134297   +if index(AUTONEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1134297  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1134298   +if index(AUTONEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1134298  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1134299   +if index(AUTONEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1134299  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1134300   +if index(AUTONEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1134300  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1134301   +if index(AUTONEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1134301  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1134302   +if index(AUTONEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1134302  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1134303   +if index(AUTONEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1134303  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1134304   +if index(AUTONEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1134304  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1134305   +if index(AUTONEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1134305  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1134306   +if index(AUTONEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1134306  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1134307   +if index(AUTONEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1134307  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1134308   +if index(AUTONEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1134308  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1134309   +if index(AUTONEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1134309  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1134310   +if index(AUTONEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1134310  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1134311   +if index(AUTONEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1134311  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1134312   +if index(AUTONEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1134312  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1134313   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134314   +* Ensmbl51: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Computing Residual Vars;
1134315   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134316   +if
1134317   +F_DepVar NE '1'
1134318   +AND F_DepVar NE '0'
1134319   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1134320   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1134321   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1134322   +end;
MPRINT(EM_DIAGRAM):   end;
1134323   +else do;
MPRINT(EM_DIAGRAM):   else do;
1134324   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1134325   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1134326   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1134327   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1134328   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1134329   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1134330   +END;
MPRINT(EM_DIAGRAM):   END;
1134331   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1134332    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL51_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL29_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1134333    quit;
1134334    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1134335    filename emflow
1134335  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl51\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl51\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Scoring AUTONEURAL29_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134336    *------------------------------------------------------------*;
1134337    * Ensmbl51: Scoring AUTONEURAL29_VALIDATE data;
1134338    *------------------------------------------------------------*;
1134339    data EMWS8.Ensmbl51_VALIDATE
1134340    / view=EMWS8.Ensmbl51_VALIDATE
1134341    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl51_VALIDATE / view=EMWS8.Ensmbl51_VALIDATE ;
1134342    set EMWS8.AutoNeural29_VALIDATE
1134343    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural29_VALIDATE ;
1134344    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl51\EMFLOWSCORE.sas.
1134345   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134346   +* Ensmbl51: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Combine model for DepVar;
1134347   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134348   +* Ensmbl51: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Scoring Code of model 1 of 7;
1134349   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134350   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134351   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1134352   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1134353   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1134354   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134355   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134356   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1134357   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1134358   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1134359   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134360   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134361   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1134362   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1134363   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1134364   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134365   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134366   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1134367   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1134368   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1134369   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134370   +
1134371   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1134372   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1134372  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1134373   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1134374   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1134375   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1134376   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1134377   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1134378   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134379   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1134380   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1134381   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1134382   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134383   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134384   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1134385   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134386   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1134387   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1134388   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1134389   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134390   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1134391   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1134392   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1134393   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134394   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134395   +* TOOL: Variable selection Class;
MPRINT(EM_DIAGRAM):   * TOOL: Variable selection Class;
1134396   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1134397   +* NODE: Varsel;
MPRINT(EM_DIAGRAM):   * NODE: Varsel;
1134398   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134399   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1134400   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1134401   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1134402   +
1134403   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1134404   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1134405   +
1134406   +
1134407   +/*----G_Marital_Status begin----*/
1134408   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   length _NORM8 $ 8;
1134409   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1134410   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1134411   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1134412   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1134413   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1134414   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1134415   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1134416   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1134417   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1134418   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1134419   +end;
MPRINT(EM_DIAGRAM):   end;
1134420   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status= "Grouped Levels for Marital_Status";
1134421   +/*----G_Marital_Status end----*/
1134422   +
1134423   +
1134424   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1134425   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1134426   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1134427   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134428   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1134429   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1134430   +* NODE: AutoNeural29;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural29;
1134431   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134432   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1134433   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1134434   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1134435   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1134436   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1134437   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1134438   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1134439   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1134440   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1134441   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1134442   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1134443   +LENGTH _WARN_ $4
1134444   +      F_DepVar  $ 12
1134445   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1134446   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1134447   +
1134448   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1134449   +
1134450   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1134451   +
1134452   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1134453   +
1134454   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1134455   +
1134456   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1134457   +
1134458   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1134459   +
1134460   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1134461   +
1134462   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1134463   +
1134464   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1134465   +
1134466   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1134467   +
1134468   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1134469   +
1134470   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1134471   +
1134472   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1134473   +
1134474   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1134475   +
1134476   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1134477   +
1134478   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1134479   +
1134480   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1134481   +
1134482   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1134483   +
1134484   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1134485   +
1134486   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1134487   +
1134488   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1134489   +
1134490   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1134491   +
1134492   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1134493   +
1134494   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1134495   +
1134496   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1134497   +
1134498   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1134499   +
1134500   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1134501   +
1134502   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1134503   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1134504   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1134505   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1134506   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1134507   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1134508   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1134509   +end;
MPRINT(EM_DIAGRAM):   end;
1134510   +else do;
MPRINT(EM_DIAGRAM):   else do;
1134511   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1134512   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1134513   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1134514   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1134515   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1134516   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1134517   +   end;
MPRINT(EM_DIAGRAM):   end;
1134518   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1134519   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1134520   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1134521   +   end;
MPRINT(EM_DIAGRAM):   end;
1134522   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1134523   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1134524   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1134525   +   end;
MPRINT(EM_DIAGRAM):   end;
1134526   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1134527   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1134528   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1134529   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1134530   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1134531   +   end;
MPRINT(EM_DIAGRAM):   end;
1134532   +end;
MPRINT(EM_DIAGRAM):   end;
1134533   +
1134534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134535   +*** Checking missing input Interval
1134536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1134537   +
1134538   +IF NMISS(
1134539   +   AcceptedCmpTotal ,
1134540   +   Frq ,
1134541   +   Income ,
1134542   +   Mnt ,
1134543   +   MntGoldProds ,
1134544   +   MntMeatProducts ,
1134545   +   MntWines ,
1134546   +   NumDistPurchases ,
1134547   +   RFMstat ,
1134548   +   RMntFrq ,
1134549   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1134550   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1134551   +
1134552   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1134553   +END;
MPRINT(EM_DIAGRAM):   END;
1134554   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134555   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1134556   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134557   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1134558   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1134559   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1134560   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1134561   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1134562   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1134563   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1134564   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1134565   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1134566   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1134567   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1134568   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1134569   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1134570   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1134571   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1134572   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1134573   +END;
MPRINT(EM_DIAGRAM):   END;
1134574   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1134575   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1134576   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1134577   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1134578   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1134579   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1134580   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1134581   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1134582   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1134583   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1134584   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1134585   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1134586   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1134587   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1134588   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1134589   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1134590   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1134591   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1134592   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1134593   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1134594   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1134595   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1134596   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1134597   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1134598   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1134599   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1134600   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1134601   +END;
MPRINT(EM_DIAGRAM):   END;
1134602   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134603   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1134604   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134605   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134606   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1134607   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134608   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1134609   +   H1x1_1  =    -1.99300782242957 * S_AcceptedCmpTotal
1134610   +          +     2.12004224248217 * S_Frq  +     3.86828667262904 * S_Income
1134611   +          +     2.77648198770608 * S_Mnt  +    -2.27326773671069 *
1134612   +        S_MntGoldProds  +    -0.27399687657599 * S_MntMeatProducts
1134613   +          +     2.26137957922507 * S_MntWines  +     0.14135280902221 *
1134614   +        S_NumDistPurchases  +     1.12048709605553 * S_RFMstat
1134615   +          +     0.99315934409036 * S_RMntFrq  +     1.21818826467727 *
1134616   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.99300782242957 * S_AcceptedCmpTotal + 2.12004224248217 * 
S_Frq + 3.86828667262904 * S_Income + 2.77648198770608 * S_Mnt + -2.27326773671069 * 
S_MntGoldProds + -0.27399687657599 * S_MntMeatProducts + 2.26137957922507 * S_MntWines + 
0.14135280902221 * S_NumDistPurchases + 1.12048709605553 * S_RFMstat + 0.99315934409036 * 
S_RMntFrq + 1.21818826467727 * S_Recency ;
1134617   +   H1x1_2  =    -0.46080527925139 * S_AcceptedCmpTotal
1134618   +          +     1.22986184660358 * S_Frq  +     1.25416218398238 * S_Income
1134619   +          +      0.7698101051046 * S_Mnt  +    -0.24851515302824 *
1134620   +        S_MntGoldProds  +    -1.02206883329868 * S_MntMeatProducts
1134621   +          +    -2.60436726665032 * S_MntWines  +     1.42856046102253 *
1134622   +        S_NumDistPurchases  +     0.23036228891547 * S_RFMstat
1134623   +          +    -0.44196680894425 * S_RMntFrq  +     1.47726327092789 *
1134624   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.46080527925139 * S_AcceptedCmpTotal + 1.22986184660358 * 
S_Frq + 1.25416218398238 * S_Income + 0.7698101051046 * S_Mnt + -0.24851515302824 * 
S_MntGoldProds + -1.02206883329868 * S_MntMeatProducts + -2.60436726665032 * S_MntWines + 
1.42856046102253 * S_NumDistPurchases + 0.23036228891547 * S_RFMstat + -0.44196680894425 * 
S_RMntFrq + 1.47726327092789 * S_Recency ;
1134625   +   H1x1_3  =    -2.72041257472943 * S_AcceptedCmpTotal
1134626   +          +     2.18007007875237 * S_Frq  +    -3.41389425682735 * S_Income
1134627   +          +     1.22111404132155 * S_Mnt  +     0.13965132551243 *
1134628   +        S_MntGoldProds  +    -1.44679609979492 * S_MntMeatProducts
1134629   +          +     1.32449625366546 * S_MntWines  +     0.71474658567846 *
1134630   +        S_NumDistPurchases  +    -1.11377169665392 * S_RFMstat
1134631   +          +    -0.23272811318878 * S_RMntFrq  +     3.38352057173892 *
1134632   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.72041257472943 * S_AcceptedCmpTotal + 2.18007007875237 * 
S_Frq + -3.41389425682735 * S_Income + 1.22111404132155 * S_Mnt + 0.13965132551243 * 
S_MntGoldProds + -1.44679609979492 * S_MntMeatProducts + 1.32449625366546 * S_MntWines + 
0.71474658567846 * S_NumDistPurchases + -1.11377169665392 * S_RFMstat + -0.23272811318878 * 
S_RMntFrq + 3.38352057173892 * S_Recency ;
1134633   +   H1x1_4  =    -0.53914082027029 * S_AcceptedCmpTotal
1134634   +          +     3.52541527909413 * S_Frq  +     0.47386294116539 * S_Income
1134635   +          +     1.74856835081997 * S_Mnt  +    -0.31608698854628 *
1134636   +        S_MntGoldProds  +    -4.08585161438784 * S_MntMeatProducts
1134637   +          +     1.11934057687184 * S_MntWines  +    -4.23069217087257 *
1134638   +        S_NumDistPurchases  +    -0.45058242594518 * S_RFMstat
1134639   +          +     2.24526854282726 * S_RMntFrq  +     0.46541621801996 *
1134640   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.53914082027029 * S_AcceptedCmpTotal + 3.52541527909413 * 
S_Frq + 0.47386294116539 * S_Income + 1.74856835081997 * S_Mnt + -0.31608698854628 * 
S_MntGoldProds + -4.08585161438784 * S_MntMeatProducts + 1.11934057687184 * S_MntWines + 
-4.23069217087257 * S_NumDistPurchases + -0.45058242594518 * S_RFMstat + 2.24526854282726 * 
S_RMntFrq + 0.46541621801996 * S_Recency ;
1134641   +   H1x1_5  =     0.16652182962256 * S_AcceptedCmpTotal
1134642   +          +    -2.34082830868767 * S_Frq  +     0.06017749299853 * S_Income
1134643   +          +    -3.61434433922311 * S_Mnt  +    -0.15794212009402 *
1134644   +        S_MntGoldProds  +     5.32833368617196 * S_MntMeatProducts
1134645   +          +     1.70496933504273 * S_MntWines  +     2.85445845094536 *
1134646   +        S_NumDistPurchases  +     1.88219523605925 * S_RFMstat
1134647   +          +     0.75869801637089 * S_RMntFrq  +     0.08064297106734 *
1134648   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.16652182962256 * S_AcceptedCmpTotal + -2.34082830868767 * 
S_Frq + 0.06017749299853 * S_Income + -3.61434433922311 * S_Mnt + -0.15794212009402 * 
S_MntGoldProds + 5.32833368617196 * S_MntMeatProducts + 1.70496933504273 * S_MntWines + 
2.85445845094536 * S_NumDistPurchases + 1.88219523605925 * S_RFMstat + 0.75869801637089 * 
S_RMntFrq + 0.08064297106734 * S_Recency ;
1134649   +   H1x1_6  =     1.97422379745385 * S_AcceptedCmpTotal
1134650   +          +    -0.18806921540808 * S_Frq  +    -1.45393613178942 * S_Income
1134651   +          +    -1.71382589206496 * S_Mnt  +    -0.86398659373382 *
1134652   +        S_MntGoldProds  +    -0.55933907393534 * S_MntMeatProducts
1134653   +          +    -2.04088833388184 * S_MntWines  +     1.33825297425801 *
1134654   +        S_NumDistPurchases  +    -1.84916943620006 * S_RFMstat
1134655   +          +     1.10268410707441 * S_RMntFrq  +    -3.24538880603902 *
1134656   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.97422379745385 * S_AcceptedCmpTotal + -0.18806921540808 * 
S_Frq + -1.45393613178942 * S_Income + -1.71382589206496 * S_Mnt + -0.86398659373382 * 
S_MntGoldProds + -0.55933907393534 * S_MntMeatProducts + -2.04088833388184 * S_MntWines + 
1.33825297425801 * S_NumDistPurchases + -1.84916943620006 * S_RFMstat + 1.10268410707441 * 
S_RMntFrq + -3.24538880603902 * S_Recency ;
1134657   +   H1x1_7  =    -0.04334303258083 * S_AcceptedCmpTotal
1134658   +          +      1.2911623736286 * S_Frq  +    -2.28992194197276 * S_Income
1134659   +          +    -0.46322849796029 * S_Mnt  +    -0.61987255353555 *
1134660   +        S_MntGoldProds  +    -0.70448430141235 * S_MntMeatProducts
1134661   +          +    -2.07867791807129 * S_MntWines  +    -1.36577325340948 *
1134662   +        S_NumDistPurchases  +    -1.20867908080733 * S_RFMstat
1134663   +          +     1.13377434281641 * S_RMntFrq  +     0.49995615625441 *
1134664   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.04334303258083 * S_AcceptedCmpTotal + 1.2911623736286 * 
S_Frq + -2.28992194197276 * S_Income + -0.46322849796029 * S_Mnt + -0.61987255353555 * 
S_MntGoldProds + -0.70448430141235 * S_MntMeatProducts + -2.07867791807129 * S_MntWines + 
-1.36577325340948 * S_NumDistPurchases + -1.20867908080733 * S_RFMstat + 1.13377434281641 * 
S_RMntFrq + 0.49995615625441 * S_Recency ;
1134665   +   H1x1_1  = H1x1_1  +     -1.7035629341514 * G_Marital_Status0
1134666   +          +    -0.88839271772433 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.7035629341514 * G_Marital_Status0 + 
-0.88839271772433 * G_Marital_Status1 ;
1134667   +   H1x1_2  = H1x1_2  +     0.47234648810132 * G_Marital_Status0
1134668   +          +     0.49781009278812 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.47234648810132 * G_Marital_Status0 + 
0.49781009278812 * G_Marital_Status1 ;
1134669   +   H1x1_3  = H1x1_3  +     0.04803102756566 * G_Marital_Status0
1134670   +          +     3.45859276392218 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04803102756566 * G_Marital_Status0 + 
3.45859276392218 * G_Marital_Status1 ;
1134671   +   H1x1_4  = H1x1_4  +    -0.00794915276466 * G_Marital_Status0
1134672   +          +    -0.88877093101914 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.00794915276466 * G_Marital_Status0 + 
-0.88877093101914 * G_Marital_Status1 ;
1134673   +   H1x1_5  = H1x1_5  +     0.17344052282277 * G_Marital_Status0
1134674   +          +     0.07512544812374 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17344052282277 * G_Marital_Status0 + 
0.07512544812374 * G_Marital_Status1 ;
1134675   +   H1x1_6  = H1x1_6  +     0.69797087079749 * G_Marital_Status0
1134676   +          +     1.99160337429042 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.69797087079749 * G_Marital_Status0 + 
1.99160337429042 * G_Marital_Status1 ;
1134677   +   H1x1_7  = H1x1_7  +    -1.90814013352903 * G_Marital_Status0
1134678   +          +    -0.58260071621307 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -1.90814013352903 * G_Marital_Status0 + 
-0.58260071621307 * G_Marital_Status1 ;
1134679   +   H1x1_1  =      0.4509613443627 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.4509613443627 + H1x1_1 ;
1134680   +   H1x1_2  =     3.28102437302443 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 3.28102437302443 + H1x1_2 ;
1134681   +   H1x1_3  =    -0.59732076258377 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.59732076258377 + H1x1_3 ;
1134682   +   H1x1_4  =     3.04302174126598 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.04302174126598 + H1x1_4 ;
1134683   +   H1x1_5  =     4.11173403634453 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 4.11173403634453 + H1x1_5 ;
1134684   +   H1x1_6  =     4.51964221881808 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 4.51964221881808 + H1x1_6 ;
1134685   +   H1x1_7  =     7.27061205819069 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 7.27061205819069 + H1x1_7 ;
1134686   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1134687   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1134688   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1134689   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1134690   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1134691   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1134692   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1134693   +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
1134694   +   H1x1_7  = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
1134695   +END;
MPRINT(EM_DIAGRAM):   END;
1134696   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1134697   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1134698   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1134699   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1134700   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1134701   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1134702   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1134703   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1134704   +END;
MPRINT(EM_DIAGRAM):   END;
1134705   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134706   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1134707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134708   +
1134709   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1134710   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1134711   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1134712   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1134713   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1134714   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1134715   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1134716   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1134717   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1134718   +end;
MPRINT(EM_DIAGRAM):   end;
1134719   +else do;
MPRINT(EM_DIAGRAM):   else do;
1134720   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1134721   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1134722   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1134723   +   end;
MPRINT(EM_DIAGRAM):   end;
1134724   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1134725   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1134726   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1134727   +   end;
MPRINT(EM_DIAGRAM):   end;
1134728   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1134729   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1134730   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1134731   +   end;
MPRINT(EM_DIAGRAM):   end;
1134732   +end;
MPRINT(EM_DIAGRAM):   end;
1134733   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1134734   +   P_DepVar1  =    -3.49358340904307 * H1x1_1  +    -5.28251662728987 * H1x1_2
1134735   +          +    -4.11876057817011 * H1x1_3  +    -7.73777326204979 * H1x1_4
1134736   +          +     12.8932497890238 * H1x1_5  +     6.88694832857203 * H1x1_6
1134737   +          +    -8.47048075234366 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.49358340904307 * H1x1_1 + -5.28251662728987 * H1x1_2 + 
-4.11876057817011 * H1x1_3 + -7.73777326204979 * H1x1_4 + 12.8932497890238 * H1x1_5 + 
6.88694832857203 * H1x1_6 + -8.47048075234366 * H1x1_7 ;
1134738   +   P_DepVar1  =     1.65092540834245 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.65092540834245 + P_DepVar1 ;
1134739   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1134740   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1134741   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1134742   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1134743   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1134744   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1134745   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1134746   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1134747   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1134748   +END;
MPRINT(EM_DIAGRAM):   END;
1134749   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1134750   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1134751   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1134752   +END;
MPRINT(EM_DIAGRAM):   END;
1134753   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1134754   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1134755   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1134756   +END;
MPRINT(EM_DIAGRAM):   END;
1134757   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1134758   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1134759   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1134760   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1134761   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1134762   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1134763   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1134764   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134765   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1134766   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134767   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1134768   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1134769   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1134770   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1134771   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1134772   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1134773   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1134774   +END;
MPRINT(EM_DIAGRAM):   END;
1134775   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1134776   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1134777   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1134778   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1134779   +* Renaming variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural29;
1134780   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134781   +* Renaming Posterior variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural29;
1134782   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134783   +drop AutoNeural29_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_P_DepVar1;
1134784   +AutoNeural29_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural29_P_DepVar1 = P_DepVar1;
1134785   +drop AutoNeural29_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_P_DepVar0;
1134786   +AutoNeural29_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural29_P_DepVar0 = P_DepVar0;
1134787   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134788   +* Renaming _WARN_ variable for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural29;
1134789   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134790   +length AutoNeural29_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural29_WARN_ $4;
1134791   +drop AutoNeural29_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_WARN_;
1134792   +AutoNeural29_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural29_WARN_ = _WARN_;
1134793   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134794   +* Ensmbl51: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Scoring Code of model 2 of 7;
1134795   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134796   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134797   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1134798   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1134799   +* NODE: AutoNeural28;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural28;
1134800   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1134801   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1134802   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1134803   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1134804   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1134805   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1134806   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1134807   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1134808   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1134809   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1134810   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1134811   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1134812   +LENGTH _WARN_ $4
1134813   +      F_DepVar  $ 12
1134814   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1134815   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1134816   +
1134817   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1134818   +
1134819   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1134820   +
1134821   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1134822   +
1134823   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1134824   +
1134825   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1134826   +
1134827   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1134828   +
1134829   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1134830   +
1134831   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1134832   +
1134833   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1134834   +
1134835   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1134836   +
1134837   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1134838   +
1134839   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1134840   +
1134841   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1134842   +
1134843   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1134844   +
1134845   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1134846   +
1134847   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1134848   +
1134849   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1134850   +
1134851   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1134852   +
1134853   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1134854   +
1134855   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1134856   +
1134857   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1134858   +
1134859   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1134860   +
1134861   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1134862   +
1134863   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1134864   +
1134865   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1134866   +
1134867   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1134868   +
1134869   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1134870   +
1134871   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
1134872   +
1134873   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
1134874   +
1134875   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
1134876   +
1134877   +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
1134878   +
1134879   +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
1134880   +
1134881   +      label H1x4_3 = 'Hidden: H1x4_=3' ;
MPRINT(EM_DIAGRAM):   label H1x4_3 = 'Hidden: H1x4_=3' ;
1134882   +
1134883   +      label H1x4_4 = 'Hidden: H1x4_=4' ;
MPRINT(EM_DIAGRAM):   label H1x4_4 = 'Hidden: H1x4_=4' ;
1134884   +
1134885   +      label H1x4_5 = 'Hidden: H1x4_=5' ;
MPRINT(EM_DIAGRAM):   label H1x4_5 = 'Hidden: H1x4_=5' ;
1134886   +
1134887   +      label H1x4_6 = 'Hidden: H1x4_=6' ;
MPRINT(EM_DIAGRAM):   label H1x4_6 = 'Hidden: H1x4_=6' ;
1134888   +
1134889   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1134890   +
1134891   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1134892   +
1134893   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1134894   +
1134895   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1134896   +
1134897   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1134898   +
1134899   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1134900   +
1134901   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1134902   +
1134903   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1134904   +
1134905   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1134906   +
1134907   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
1134908   +
1134909   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
1134910   +
1134911   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
1134912   +
1134913   +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
1134914   +
1134915   +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
1134916   +
1134917   +      label H2x3_3 = 'Hidden: H2x3_=3' ;
MPRINT(EM_DIAGRAM):   label H2x3_3 = 'Hidden: H2x3_=3' ;
1134918   +
1134919   +      label H2x3_4 = 'Hidden: H2x3_=4' ;
MPRINT(EM_DIAGRAM):   label H2x3_4 = 'Hidden: H2x3_=4' ;
1134920   +
1134921   +      label H2x3_5 = 'Hidden: H2x3_=5' ;
MPRINT(EM_DIAGRAM):   label H2x3_5 = 'Hidden: H2x3_=5' ;
1134922   +
1134923   +      label H2x3_6 = 'Hidden: H2x3_=6' ;
MPRINT(EM_DIAGRAM):   label H2x3_6 = 'Hidden: H2x3_=6' ;
1134924   +
1134925   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1134926   +
1134927   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1134928   +
1134929   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1134930   +
1134931   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
1134932   +
1134933   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
1134934   +
1134935   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
1134936   +
1134937   +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
1134938   +
1134939   +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
1134940   +
1134941   +      label H3x2_3 = 'Hidden: H3x2_=3' ;
MPRINT(EM_DIAGRAM):   label H3x2_3 = 'Hidden: H3x2_=3' ;
1134942   +
1134943   +      label H3x2_4 = 'Hidden: H3x2_=4' ;
MPRINT(EM_DIAGRAM):   label H3x2_4 = 'Hidden: H3x2_=4' ;
1134944   +
1134945   +      label H3x2_5 = 'Hidden: H3x2_=5' ;
MPRINT(EM_DIAGRAM):   label H3x2_5 = 'Hidden: H3x2_=5' ;
1134946   +
1134947   +      label H3x2_6 = 'Hidden: H3x2_=6' ;
MPRINT(EM_DIAGRAM):   label H3x2_6 = 'Hidden: H3x2_=6' ;
1134948   +
1134949   +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
1134950   +
1134951   +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
1134952   +
1134953   +      label H4x1_3 = 'Hidden: H4x1_=3' ;
MPRINT(EM_DIAGRAM):   label H4x1_3 = 'Hidden: H4x1_=3' ;
1134954   +
1134955   +      label H4x1_4 = 'Hidden: H4x1_=4' ;
MPRINT(EM_DIAGRAM):   label H4x1_4 = 'Hidden: H4x1_=4' ;
1134956   +
1134957   +      label H4x1_5 = 'Hidden: H4x1_=5' ;
MPRINT(EM_DIAGRAM):   label H4x1_5 = 'Hidden: H4x1_=5' ;
1134958   +
1134959   +      label H4x1_6 = 'Hidden: H4x1_=6' ;
MPRINT(EM_DIAGRAM):   label H4x1_6 = 'Hidden: H4x1_=6' ;
1134960   +
1134961   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1134962   +
1134963   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1134964   +
1134965   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1134966   +
1134967   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1134968   +
1134969   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1134970   +
1134971   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1134972   +
1134973   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1134974   +
1134975   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1134976   +
1134977   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1134978   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1134979   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1134980   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1134981   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1134982   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1134983   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1134984   +end;
MPRINT(EM_DIAGRAM):   end;
1134985   +else do;
MPRINT(EM_DIAGRAM):   else do;
1134986   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1134987   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1134988   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1134989   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1134990   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1134991   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1134992   +   end;
MPRINT(EM_DIAGRAM):   end;
1134993   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1134994   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1134995   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1134996   +   end;
MPRINT(EM_DIAGRAM):   end;
1134997   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1134998   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1134999   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1135000   +   end;
MPRINT(EM_DIAGRAM):   end;
1135001   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1135002   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1135003   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1135004   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1135005   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1135006   +   end;
MPRINT(EM_DIAGRAM):   end;
1135007   +end;
MPRINT(EM_DIAGRAM):   end;
1135008   +
1135009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135010   +*** Checking missing input Interval
1135011   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1135012   +
1135013   +IF NMISS(
1135014   +   AcceptedCmpTotal ,
1135015   +   Frq ,
1135016   +   Income ,
1135017   +   Mnt ,
1135018   +   MntGoldProds ,
1135019   +   MntMeatProducts ,
1135020   +   MntWines ,
1135021   +   NumDistPurchases ,
1135022   +   RFMstat ,
1135023   +   RMntFrq ,
1135024   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1135025   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1135026   +
1135027   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1135028   +END;
MPRINT(EM_DIAGRAM):   END;
1135029   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135030   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1135031   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135032   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1135033   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1135034   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1135035   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1135036   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1135037   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1135038   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1135039   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1135040   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1135041   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1135042   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1135043   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1135044   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1135045   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1135046   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1135047   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1135048   +END;
MPRINT(EM_DIAGRAM):   END;
1135049   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1135050   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1135051   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1135052   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1135053   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1135054   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1135055   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1135056   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1135057   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1135058   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1135059   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1135060   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1135061   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1135062   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1135063   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1135064   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1135065   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1135066   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1135067   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1135068   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1135069   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1135070   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1135071   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1135072   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1135073   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1135074   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1135075   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1135076   +END;
MPRINT(EM_DIAGRAM):   END;
1135077   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135078   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1135079   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135081   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1135082   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135083   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1135084   +   H1x1_1  =     3.15417213555791 * S_AcceptedCmpTotal
1135085   +          +    -2.48200966202064 * S_Frq  +     1.79801309624052 * S_Income
1135086   +          +    -1.96453924225923 * S_Mnt  +    -0.73447750078211 *
1135087   +        S_MntGoldProds  +    -1.52540613833145 * S_MntMeatProducts
1135088   +          +    -2.34651136428537 * S_MntWines  +     1.78713249203795 *
1135089   +        S_NumDistPurchases  +    -1.89877446252459 * S_RFMstat
1135090   +          +     0.40523847190984 * S_RMntFrq  +    -5.00157954960261 *
1135091   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.15417213555791 * S_AcceptedCmpTotal + -2.48200966202064 * 
S_Frq + 1.79801309624052 * S_Income + -1.96453924225923 * S_Mnt + -0.73447750078211 * 
S_MntGoldProds + -1.52540613833145 * S_MntMeatProducts + -2.34651136428537 * S_MntWines + 
1.78713249203795 * S_NumDistPurchases + -1.89877446252459 * S_RFMstat + 0.40523847190984 * 
S_RMntFrq + -5.00157954960261 * S_Recency ;
1135092   +   H1x1_2  =     -0.4296332791258 * S_AcceptedCmpTotal
1135093   +          +     1.69454720747031 * S_Frq  +     0.65291994437462 * S_Income
1135094   +          +     4.94289741649285 * S_Mnt  +    -0.74724168333375 *
1135095   +        S_MntGoldProds  +    -4.37885511745275 * S_MntMeatProducts
1135096   +          +    -0.79918604028406 * S_MntWines  +    -2.55554908870931 *
1135097   +        S_NumDistPurchases  +      -0.357509020401 * S_RFMstat
1135098   +          +     2.81206015252461 * S_RMntFrq  +       0.376849190211 *
1135099   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.4296332791258 * S_AcceptedCmpTotal + 1.69454720747031 * 
S_Frq + 0.65291994437462 * S_Income + 4.94289741649285 * S_Mnt + -0.74724168333375 * 
S_MntGoldProds + -4.37885511745275 * S_MntMeatProducts + -0.79918604028406 * S_MntWines + 
-2.55554908870931 * S_NumDistPurchases + -0.357509020401 * S_RFMstat + 2.81206015252461 * 
S_RMntFrq + 0.376849190211 * S_Recency ;
1135100   +   H1x1_3  =     0.22275326994217 * S_AcceptedCmpTotal
1135101   +          +     1.30327962429821 * S_Frq  +     8.11675617892245 * S_Income
1135102   +          +     1.26763916951276 * S_Mnt  +     -0.2686825897259 *
1135103   +        S_MntGoldProds  +    -1.42114074651211 * S_MntMeatProducts
1135104   +          +    -1.76821642666458 * S_MntWines  +    -1.91323522505912 *
1135105   +        S_NumDistPurchases  +    -0.12369288380556 * S_RFMstat
1135106   +          +     -0.5961110037328 * S_RMntFrq  +     1.45489277444882 *
1135107   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.22275326994217 * S_AcceptedCmpTotal + 1.30327962429821 * 
S_Frq + 8.11675617892245 * S_Income + 1.26763916951276 * S_Mnt + -0.2686825897259 * 
S_MntGoldProds + -1.42114074651211 * S_MntMeatProducts + -1.76821642666458 * S_MntWines + 
-1.91323522505912 * S_NumDistPurchases + -0.12369288380556 * S_RFMstat + -0.5961110037328 * 
S_RMntFrq + 1.45489277444882 * S_Recency ;
1135108   +   H1x1_4  =     0.65694888778783 * S_AcceptedCmpTotal
1135109   +          +    -2.46645772884275 * S_Frq  +     2.56090496460471 * S_Income
1135110   +          +     1.47469720902355 * S_Mnt  +    -0.23044042020952 *
1135111   +        S_MntGoldProds  +     1.09436190473143 * S_MntMeatProducts
1135112   +          +    -0.07872477007968 * S_MntWines  +     2.35913880285028 *
1135113   +        S_NumDistPurchases  +     0.36553596420262 * S_RFMstat
1135114   +          +    -1.52014700293876 * S_RMntFrq  +    -1.62001903467763 *
1135115   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.65694888778783 * S_AcceptedCmpTotal + -2.46645772884275 * 
S_Frq + 2.56090496460471 * S_Income + 1.47469720902355 * S_Mnt + -0.23044042020952 * 
S_MntGoldProds + 1.09436190473143 * S_MntMeatProducts + -0.07872477007968 * S_MntWines + 
2.35913880285028 * S_NumDistPurchases + 0.36553596420262 * S_RFMstat + -1.52014700293876 * 
S_RMntFrq + -1.62001903467763 * S_Recency ;
1135116   +   H1x1_5  =    -0.06045586654134 * S_AcceptedCmpTotal
1135117   +          +    -1.51896554067022 * S_Frq  +    -0.77690899609172 * S_Income
1135118   +          +    -3.83443076797312 * S_Mnt  +    -0.49066287190692 *
1135119   +        S_MntGoldProds  +     7.74304126889741 * S_MntMeatProducts
1135120   +          +     0.97717560040665 * S_MntWines  +     2.55833904797689 *
1135121   +        S_NumDistPurchases  +     3.33552253786577 * S_RFMstat
1135122   +          +     2.15128325510301 * S_RMntFrq  +     0.51475149451235 *
1135123   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.06045586654134 * S_AcceptedCmpTotal + -1.51896554067022 * 
S_Frq + -0.77690899609172 * S_Income + -3.83443076797312 * S_Mnt + -0.49066287190692 * 
S_MntGoldProds + 7.74304126889741 * S_MntMeatProducts + 0.97717560040665 * S_MntWines + 
2.55833904797689 * S_NumDistPurchases + 3.33552253786577 * S_RFMstat + 2.15128325510301 * 
S_RMntFrq + 0.51475149451235 * S_Recency ;
1135124   +   H1x1_6  =    -2.00102225492393 * S_AcceptedCmpTotal
1135125   +          +    -0.55313430858805 * S_Frq  +    -2.80039880440251 * S_Income
1135126   +          +    -0.52613628819852 * S_Mnt  +    -1.25580169134654 *
1135127   +        S_MntGoldProds  +    -1.44511464402737 * S_MntMeatProducts
1135128   +          +    -0.66744558284147 * S_MntWines  +     3.15612301024597 *
1135129   +        S_NumDistPurchases  +    -0.57805918326136 * S_RFMstat
1135130   +          +     0.13349014037678 * S_RMntFrq  +    -1.97053621157132 *
1135131   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.00102225492393 * S_AcceptedCmpTotal + -0.55313430858805 * 
S_Frq + -2.80039880440251 * S_Income + -0.52613628819852 * S_Mnt + -1.25580169134654 * 
S_MntGoldProds + -1.44511464402737 * S_MntMeatProducts + -0.66744558284147 * S_MntWines + 
3.15612301024597 * S_NumDistPurchases + -0.57805918326136 * S_RFMstat + 0.13349014037678 * 
S_RMntFrq + -1.97053621157132 * S_Recency ;
1135132   +   H1x1_1  = H1x1_1  +     1.38825657874217 * G_Marital_Status0
1135133   +          +     0.90195662603521 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.38825657874217 * G_Marital_Status0 + 
0.90195662603521 * G_Marital_Status1 ;
1135134   +   H1x1_2  = H1x1_2  +     0.88138395159348 * G_Marital_Status0
1135135   +          +    -0.49019446056296 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.88138395159348 * G_Marital_Status0 + 
-0.49019446056296 * G_Marital_Status1 ;
1135136   +   H1x1_3  = H1x1_3  +     0.30990330359421 * G_Marital_Status0
1135137   +          +     1.10544938214372 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.30990330359421 * G_Marital_Status0 + 
1.10544938214372 * G_Marital_Status1 ;
1135138   +   H1x1_4  = H1x1_4  +     1.70251598227875 * G_Marital_Status0
1135139   +          +     0.87683669160259 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 1.70251598227875 * G_Marital_Status0 + 
0.87683669160259 * G_Marital_Status1 ;
1135140   +   H1x1_5  = H1x1_5  +    -0.14678805736317 * G_Marital_Status0
1135141   +          +    -0.13246180955576 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14678805736317 * G_Marital_Status0 + 
-0.13246180955576 * G_Marital_Status1 ;
1135142   +   H1x1_6  = H1x1_6  +     -0.6511155024316 * G_Marital_Status0
1135143   +          +     0.24707257141342 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.6511155024316 * G_Marital_Status0 + 
0.24707257141342 * G_Marital_Status1 ;
1135144   +   H1x1_1  =     4.82277728923766 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.82277728923766 + H1x1_1 ;
1135145   +   H1x1_2  =     2.49777705822347 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.49777705822347 + H1x1_2 ;
1135146   +   H1x1_3  =    -0.93289135595041 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.93289135595041 + H1x1_3 ;
1135147   +   H1x1_4  =    -7.80421802944398 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.80421802944398 + H1x1_4 ;
1135148   +   H1x1_5  =     6.46115064589724 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 6.46115064589724 + H1x1_5 ;
1135149   +   H1x1_6  =     3.21096596966888 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 3.21096596966888 + H1x1_6 ;
1135150   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1135151   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1135152   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1135153   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1135154   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1135155   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1135156   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1135157   +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
1135158   +END;
MPRINT(EM_DIAGRAM):   END;
1135159   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1135160   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1135161   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1135162   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1135163   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1135164   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1135165   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1135166   +END;
MPRINT(EM_DIAGRAM):   END;
1135167   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135168   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1135169   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135170   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1135171   +   H1x2_1  =    -0.30711239275958 * S_AcceptedCmpTotal
1135172   +          +    -1.45395291114633 * S_Frq  +     0.87594950917085 * S_Income
1135173   +          +    -0.72639274085105 * S_Mnt  +    -2.47797355837112 *
1135174   +        S_MntGoldProds  +     0.68384082088335 * S_MntMeatProducts
1135175   +          +     0.65600644755641 * S_MntWines  +      0.8163360453447 *
1135176   +        S_NumDistPurchases  +    -1.09587924440912 * S_RFMstat
1135177   +          +     1.48347762248449 * S_RMntFrq  +      0.2335216261547 *
1135178   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.30711239275958 * S_AcceptedCmpTotal + -1.45395291114633 * 
S_Frq + 0.87594950917085 * S_Income + -0.72639274085105 * S_Mnt + -2.47797355837112 * 
S_MntGoldProds + 0.68384082088335 * S_MntMeatProducts + 0.65600644755641 * S_MntWines + 
0.8163360453447 * S_NumDistPurchases + -1.09587924440912 * S_RFMstat + 1.48347762248449 * 
S_RMntFrq + 0.2335216261547 * S_Recency ;
1135179   +   H1x2_2  =     2.57777770372275 * S_AcceptedCmpTotal
1135180   +          +    -0.08699050003337 * S_Frq  +      0.9048262025585 * S_Income
1135181   +          +     0.80716409242733 * S_Mnt  +     0.92862088643502 *
1135182   +        S_MntGoldProds  +     1.28722996014956 * S_MntMeatProducts
1135183   +          +    -0.78107065942411 * S_MntWines  +     2.29787925805392 *
1135184   +        S_NumDistPurchases  +     -0.7095984076797 * S_RFMstat
1135185   +          +    -0.75276407747323 * S_RMntFrq  +    -2.14859674388241 *
1135186   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 2.57777770372275 * S_AcceptedCmpTotal + -0.08699050003337 * 
S_Frq + 0.9048262025585 * S_Income + 0.80716409242733 * S_Mnt + 0.92862088643502 * 
S_MntGoldProds + 1.28722996014956 * S_MntMeatProducts + -0.78107065942411 * S_MntWines + 
2.29787925805392 * S_NumDistPurchases + -0.7095984076797 * S_RFMstat + -0.75276407747323 * 
S_RMntFrq + -2.14859674388241 * S_Recency ;
1135187   +   H1x2_3  =    -0.19225474668372 * S_AcceptedCmpTotal
1135188   +          +     -0.5399776824486 * S_Frq  +    -0.33342356858106 * S_Income
1135189   +          +      0.4662552460972 * S_Mnt  +    -0.83897697999245 *
1135190   +        S_MntGoldProds  +    -1.02069791829975 * S_MntMeatProducts
1135191   +          +    -0.77568646594215 * S_MntWines  +    -2.64172584610703 *
1135192   +        S_NumDistPurchases  +     1.22587043380457 * S_RFMstat
1135193   +          +    -1.22124295004478 * S_RMntFrq  +     0.72727673065668 *
1135194   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.19225474668372 * S_AcceptedCmpTotal + -0.5399776824486 * 
S_Frq + -0.33342356858106 * S_Income + 0.4662552460972 * S_Mnt + -0.83897697999245 * 
S_MntGoldProds + -1.02069791829975 * S_MntMeatProducts + -0.77568646594215 * S_MntWines + 
-2.64172584610703 * S_NumDistPurchases + 1.22587043380457 * S_RFMstat + -1.22124295004478 * 
S_RMntFrq + 0.72727673065668 * S_Recency ;
1135195   +   H1x2_4  =     1.07963833884217 * S_AcceptedCmpTotal
1135196   +          +    -1.30033554705908 * S_Frq  +     0.80740030463615 * S_Income
1135197   +          +    -1.73808129607223 * S_Mnt  +     1.21346647777818 *
1135198   +        S_MntGoldProds  +     0.69007605858806 * S_MntMeatProducts
1135199   +          +     0.31548401471349 * S_MntWines  +    -0.45355998387313 *
1135200   +        S_NumDistPurchases  +     1.13504256910361 * S_RFMstat
1135201   +          +    -0.45561637629388 * S_RMntFrq  +    -1.42094697023704 *
1135202   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.07963833884217 * S_AcceptedCmpTotal + -1.30033554705908 * 
S_Frq + 0.80740030463615 * S_Income + -1.73808129607223 * S_Mnt + 1.21346647777818 * 
S_MntGoldProds + 0.69007605858806 * S_MntMeatProducts + 0.31548401471349 * S_MntWines + 
-0.45355998387313 * S_NumDistPurchases + 1.13504256910361 * S_RFMstat + -0.45561637629388 * 
S_RMntFrq + -1.42094697023704 * S_Recency ;
1135203   +   H1x2_5  =     0.30163018627699 * S_AcceptedCmpTotal
1135204   +          +    -0.73947459722676 * S_Frq  +      0.3117229426353 * S_Income
1135205   +          +     1.78189396082002 * S_Mnt  +    -1.51478593904163 *
1135206   +        S_MntGoldProds  +    -1.30328540691967 * S_MntMeatProducts
1135207   +          +     0.48947220852953 * S_MntWines  +     0.25380878841531 *
1135208   +        S_NumDistPurchases  +    -0.09429027402746 * S_RFMstat
1135209   +          +     2.79720421337828 * S_RMntFrq  +    -0.08024855242737 *
1135210   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30163018627699 * S_AcceptedCmpTotal + -0.73947459722676 * 
S_Frq + 0.3117229426353 * S_Income + 1.78189396082002 * S_Mnt + -1.51478593904163 * 
S_MntGoldProds + -1.30328540691967 * S_MntMeatProducts + 0.48947220852953 * S_MntWines + 
0.25380878841531 * S_NumDistPurchases + -0.09429027402746 * S_RFMstat + 2.79720421337828 * 
S_RMntFrq + -0.08024855242737 * S_Recency ;
1135211   +   H1x2_6  =    -0.05006047355159 * S_AcceptedCmpTotal
1135212   +          +     0.01838632143297 * S_Frq  +    -1.04892137940395 * S_Income
1135213   +          +    -0.33949418476309 * S_Mnt  +     1.27820886482898 *
1135214   +        S_MntGoldProds  +      0.1541042926193 * S_MntMeatProducts
1135215   +          +    -0.30996391960135 * S_MntWines  +     0.69532310497927 *
1135216   +        S_NumDistPurchases  +    -0.51247610421467 * S_RFMstat
1135217   +          +    -0.87640728095011 * S_RMntFrq  +     1.79661996586627 *
1135218   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.05006047355159 * S_AcceptedCmpTotal + 0.01838632143297 * 
S_Frq + -1.04892137940395 * S_Income + -0.33949418476309 * S_Mnt + 1.27820886482898 * 
S_MntGoldProds + 0.1541042926193 * S_MntMeatProducts + -0.30996391960135 * S_MntWines + 
0.69532310497927 * S_NumDistPurchases + -0.51247610421467 * S_RFMstat + -0.87640728095011 * 
S_RMntFrq + 1.79661996586627 * S_Recency ;
1135219   +   H1x2_1  = H1x2_1  +    -1.52372947412233 * G_Marital_Status0
1135220   +          +     0.61190614442174 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.52372947412233 * G_Marital_Status0 + 
0.61190614442174 * G_Marital_Status1 ;
1135221   +   H1x2_2  = H1x2_2  +     -0.2899112326334 * G_Marital_Status0
1135222   +          +    -0.43943770039245 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.2899112326334 * G_Marital_Status0 + 
-0.43943770039245 * G_Marital_Status1 ;
1135223   +   H1x2_3  = H1x2_3  +    -1.30447843367338 * G_Marital_Status0
1135224   +          +     0.36969296112687 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.30447843367338 * G_Marital_Status0 + 
0.36969296112687 * G_Marital_Status1 ;
1135225   +   H1x2_4  = H1x2_4  +     1.06192432928756 * G_Marital_Status0
1135226   +          +    -0.48897798100871 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.06192432928756 * G_Marital_Status0 + 
-0.48897798100871 * G_Marital_Status1 ;
1135227   +   H1x2_5  = H1x2_5  +     1.24023950705702 * G_Marital_Status0
1135228   +          +     -0.0768652239427 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.24023950705702 * G_Marital_Status0 + 
-0.0768652239427 * G_Marital_Status1 ;
1135229   +   H1x2_6  = H1x2_6  +    -0.79854804689099 * G_Marital_Status0
1135230   +          +    -0.58590001312977 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.79854804689099 * G_Marital_Status0 + 
-0.58590001312977 * G_Marital_Status1 ;
1135231   +   H1x2_1  =    -1.24057312487712 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.24057312487712 + H1x2_1 ;
1135232   +   H1x2_2  =    -0.68291139361923 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.68291139361923 + H1x2_2 ;
1135233   +   H1x2_3  =     1.06420344729961 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.06420344729961 + H1x2_3 ;
1135234   +   H1x2_4  =    -2.69713708678823 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -2.69713708678823 + H1x2_4 ;
1135235   +   H1x2_5  =    -0.12447063994137 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.12447063994137 + H1x2_5 ;
1135236   +   H1x2_6  =     -1.0719988986801 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -1.0719988986801 + H1x2_6 ;
1135237   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1135238   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1135239   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1135240   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
1135241   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
1135242   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
1135243   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
1135244   +   H1x2_6  = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
1135245   +END;
MPRINT(EM_DIAGRAM):   END;
1135246   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1135247   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1135248   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1135249   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1135250   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1135251   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1135252   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1135253   +END;
MPRINT(EM_DIAGRAM):   END;
1135254   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135255   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1135256   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135257   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1135258   +   H1x3_1  =     0.58141896766328 * S_AcceptedCmpTotal
1135259   +          +     0.88835106317195 * S_Frq  +     1.03397412242189 * S_Income
1135260   +          +    -0.19511498332885 * S_Mnt  +     0.79222351582255 *
1135261   +        S_MntGoldProds  +     1.84666352042484 * S_MntMeatProducts
1135262   +          +     0.26439819900146 * S_MntWines  +    -0.49316136014272 *
1135263   +        S_NumDistPurchases  +    -1.53931690693652 * S_RFMstat
1135264   +          +     0.66163259224518 * S_RMntFrq  +    -0.05038100966606 *
1135265   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.58141896766328 * S_AcceptedCmpTotal + 0.88835106317195 * 
S_Frq + 1.03397412242189 * S_Income + -0.19511498332885 * S_Mnt + 0.79222351582255 * 
S_MntGoldProds + 1.84666352042484 * S_MntMeatProducts + 0.26439819900146 * S_MntWines + 
-0.49316136014272 * S_NumDistPurchases + -1.53931690693652 * S_RFMstat + 0.66163259224518 * 
S_RMntFrq + -0.05038100966606 * S_Recency ;
1135266   +   H1x3_2  =    -0.66965742898236 * S_AcceptedCmpTotal
1135267   +          +     0.11439761295336 * S_Frq  +      0.4311111590428 * S_Income
1135268   +          +     0.56419594384106 * S_Mnt  +    -2.58586026844722 *
1135269   +        S_MntGoldProds  +     0.84843617907069 * S_MntMeatProducts
1135270   +          +    -0.40949465894409 * S_MntWines  +    -1.12254199224924 *
1135271   +        S_NumDistPurchases  +    -1.73672932018459 * S_RFMstat
1135272   +          +     0.60800652848154 * S_RMntFrq  +     0.90023461529092 *
1135273   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.66965742898236 * S_AcceptedCmpTotal + 0.11439761295336 * 
S_Frq + 0.4311111590428 * S_Income + 0.56419594384106 * S_Mnt + -2.58586026844722 * 
S_MntGoldProds + 0.84843617907069 * S_MntMeatProducts + -0.40949465894409 * S_MntWines + 
-1.12254199224924 * S_NumDistPurchases + -1.73672932018459 * S_RFMstat + 0.60800652848154 * 
S_RMntFrq + 0.90023461529092 * S_Recency ;
1135274   +   H1x3_3  =     0.64116254904887 * S_AcceptedCmpTotal
1135275   +          +     0.36521168161033 * S_Frq  +    -1.65592742965949 * S_Income
1135276   +          +    -1.13010637801203 * S_Mnt  +     1.18435160743823 *
1135277   +        S_MntGoldProds  +     0.61014939723339 * S_MntMeatProducts
1135278   +          +     0.57967362971329 * S_MntWines  +    -0.00705774722842 *
1135279   +        S_NumDistPurchases  +    -0.09732595050305 * S_RFMstat
1135280   +          +    -1.58268748567816 * S_RMntFrq  +    -1.00117301133743 *
1135281   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.64116254904887 * S_AcceptedCmpTotal + 0.36521168161033 * 
S_Frq + -1.65592742965949 * S_Income + -1.13010637801203 * S_Mnt + 1.18435160743823 * 
S_MntGoldProds + 0.61014939723339 * S_MntMeatProducts + 0.57967362971329 * S_MntWines + 
-0.00705774722842 * S_NumDistPurchases + -0.09732595050305 * S_RFMstat + -1.58268748567816 * 
S_RMntFrq + -1.00117301133743 * S_Recency ;
1135282   +   H1x3_4  =    -2.38943135123073 * S_AcceptedCmpTotal
1135283   +          +     0.50616478854457 * S_Frq  +     1.68985840818789 * S_Income
1135284   +          +    -0.51011802824515 * S_Mnt  +     1.25167622017055 *
1135285   +        S_MntGoldProds  +    -0.78430871718616 * S_MntMeatProducts
1135286   +          +     0.97685472578698 * S_MntWines  +    -0.66992601103029 *
1135287   +        S_NumDistPurchases  +    -0.28545877583545 * S_RFMstat
1135288   +          +     0.52712575990538 * S_RMntFrq  +     1.51096273676103 *
1135289   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -2.38943135123073 * S_AcceptedCmpTotal + 0.50616478854457 * 
S_Frq + 1.68985840818789 * S_Income + -0.51011802824515 * S_Mnt + 1.25167622017055 * 
S_MntGoldProds + -0.78430871718616 * S_MntMeatProducts + 0.97685472578698 * S_MntWines + 
-0.66992601103029 * S_NumDistPurchases + -0.28545877583545 * S_RFMstat + 0.52712575990538 * 
S_RMntFrq + 1.51096273676103 * S_Recency ;
1135290   +   H1x3_5  =     0.27293739636898 * S_AcceptedCmpTotal
1135291   +          +     0.44515009768765 * S_Frq  +     -0.4521347788574 * S_Income
1135292   +          +     0.43943223859703 * S_Mnt  +     1.17781847894182 *
1135293   +        S_MntGoldProds  +    -0.67700757595581 * S_MntMeatProducts
1135294   +          +    -1.46437355846341 * S_MntWines  +    -0.09365592083561 *
1135295   +        S_NumDistPurchases  +     0.94926901433762 * S_RFMstat
1135296   +          +     2.40216905424957 * S_RMntFrq  +     0.65859109347516 *
1135297   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.27293739636898 * S_AcceptedCmpTotal + 0.44515009768765 * 
S_Frq + -0.4521347788574 * S_Income + 0.43943223859703 * S_Mnt + 1.17781847894182 * 
S_MntGoldProds + -0.67700757595581 * S_MntMeatProducts + -1.46437355846341 * S_MntWines + 
-0.09365592083561 * S_NumDistPurchases + 0.94926901433762 * S_RFMstat + 2.40216905424957 * 
S_RMntFrq + 0.65859109347516 * S_Recency ;
1135298   +   H1x3_6  =     0.79944121174459 * S_AcceptedCmpTotal
1135299   +          +     0.19594924011495 * S_Frq  +     1.07233338144708 * S_Income
1135300   +          +    -0.39577530492174 * S_Mnt  +    -0.18122578134776 *
1135301   +        S_MntGoldProds  +    -0.26451891721245 * S_MntMeatProducts
1135302   +          +    -0.86856724355925 * S_MntWines  +    -1.81909916765471 *
1135303   +        S_NumDistPurchases  +     1.03983663011092 * S_RFMstat
1135304   +          +    -0.86768378180894 * S_RMntFrq  +     0.40747604583851 *
1135305   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.79944121174459 * S_AcceptedCmpTotal + 0.19594924011495 * 
S_Frq + 1.07233338144708 * S_Income + -0.39577530492174 * S_Mnt + -0.18122578134776 * 
S_MntGoldProds + -0.26451891721245 * S_MntMeatProducts + -0.86856724355925 * S_MntWines + 
-1.81909916765471 * S_NumDistPurchases + 1.03983663011092 * S_RFMstat + -0.86768378180894 * 
S_RMntFrq + 0.40747604583851 * S_Recency ;
1135306   +   H1x3_1  = H1x3_1  +    -1.44819834546359 * G_Marital_Status0
1135307   +          +     2.03049158937708 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.44819834546359 * G_Marital_Status0 + 
2.03049158937708 * G_Marital_Status1 ;
1135308   +   H1x3_2  = H1x3_2  +     0.32142977922032 * G_Marital_Status0
1135309   +          +     0.95456795317325 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.32142977922032 * G_Marital_Status0 + 
0.95456795317325 * G_Marital_Status1 ;
1135310   +   H1x3_3  = H1x3_3  +    -0.05546140673943 * G_Marital_Status0
1135311   +          +    -0.64267205173982 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.05546140673943 * G_Marital_Status0 + 
-0.64267205173982 * G_Marital_Status1 ;
1135312   +   H1x3_4  = H1x3_4  +     0.67758459902812 * G_Marital_Status0
1135313   +          +    -0.13878277097624 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 0.67758459902812 * G_Marital_Status0 + 
-0.13878277097624 * G_Marital_Status1 ;
1135314   +   H1x3_5  = H1x3_5  +      0.2080585980069 * G_Marital_Status0
1135315   +          +     0.39530416624983 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.2080585980069 * G_Marital_Status0 + 0.39530416624983 
* G_Marital_Status1 ;
1135316   +   H1x3_6  = H1x3_6  +    -0.56268194068278 * G_Marital_Status0
1135317   +          +    -1.38939757582535 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -0.56268194068278 * G_Marital_Status0 + 
-1.38939757582535 * G_Marital_Status1 ;
1135318   +   H1x3_1  =    -0.02110450300917 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02110450300917 + H1x3_1 ;
1135319   +   H1x3_2  =     0.68400964836412 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.68400964836412 + H1x3_2 ;
1135320   +   H1x3_3  =     1.27295692924548 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.27295692924548 + H1x3_3 ;
1135321   +   H1x3_4  =     0.57759340173339 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.57759340173339 + H1x3_4 ;
1135322   +   H1x3_5  =     0.68658947855937 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.68658947855937 + H1x3_5 ;
1135323   +   H1x3_6  =     0.96960260915788 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.96960260915788 + H1x3_6 ;
1135324   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1135325   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1135326   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1135327   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
1135328   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
1135329   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
1135330   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
1135331   +   H1x3_6  = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
1135332   +END;
MPRINT(EM_DIAGRAM):   END;
1135333   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1135334   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1135335   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1135336   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1135337   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
1135338   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
1135339   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
1135340   +END;
MPRINT(EM_DIAGRAM):   END;
1135341   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135342   +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
1135343   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135344   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1135345   +   H1x4_1  =     1.13261766886471 * S_AcceptedCmpTotal
1135346   +          +     0.78824304763496 * S_Frq  +    -1.86817100110189 * S_Income
1135347   +          +    -1.58760227599089 * S_Mnt  +     -1.1330886213304 *
1135348   +        S_MntGoldProds  +     0.82082069255126 * S_MntMeatProducts
1135349   +          +    -0.34149449572975 * S_MntWines  +     0.45944109671738 *
1135350   +        S_NumDistPurchases  +     2.00910621486809 * S_RFMstat
1135351   +          +     -1.8305685414059 * S_RMntFrq  +     1.46038466341548 *
1135352   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.13261766886471 * S_AcceptedCmpTotal + 0.78824304763496 * 
S_Frq + -1.86817100110189 * S_Income + -1.58760227599089 * S_Mnt + -1.1330886213304 * 
S_MntGoldProds + 0.82082069255126 * S_MntMeatProducts + -0.34149449572975 * S_MntWines + 
0.45944109671738 * S_NumDistPurchases + 2.00910621486809 * S_RFMstat + -1.8305685414059 * 
S_RMntFrq + 1.46038466341548 * S_Recency ;
1135353   +   H1x4_2  =    -0.63266188932348 * S_AcceptedCmpTotal
1135354   +          +    -0.01183486383209 * S_Frq  +    -1.07560568030024 * S_Income
1135355   +          +    -1.30988288899902 * S_Mnt  +     2.15841401397408 *
1135356   +        S_MntGoldProds  +    -1.27808965763357 * S_MntMeatProducts
1135357   +          +     2.04886920467378 * S_MntWines  +     0.09322121012781 *
1135358   +        S_NumDistPurchases  +    -0.37050311259862 * S_RFMstat
1135359   +          +     0.68085578996214 * S_RMntFrq  +     1.48508197039719 *
1135360   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -0.63266188932348 * S_AcceptedCmpTotal + -0.01183486383209 * 
S_Frq + -1.07560568030024 * S_Income + -1.30988288899902 * S_Mnt + 2.15841401397408 * 
S_MntGoldProds + -1.27808965763357 * S_MntMeatProducts + 2.04886920467378 * S_MntWines + 
0.09322121012781 * S_NumDistPurchases + -0.37050311259862 * S_RFMstat + 0.68085578996214 * 
S_RMntFrq + 1.48508197039719 * S_Recency ;
1135361   +   H1x4_3  =    -0.53647455024397 * S_AcceptedCmpTotal
1135362   +          +     0.24459727005497 * S_Frq  +     0.30319155437277 * S_Income
1135363   +          +     0.25206471395865 * S_Mnt  +     0.43917953957135 *
1135364   +        S_MntGoldProds  +    -0.10933570154764 * S_MntMeatProducts
1135365   +          +    -0.04059236687792 * S_MntWines  +     0.35677739352706 *
1135366   +        S_NumDistPurchases  +     1.38086899403811 * S_RFMstat
1135367   +          +    -0.32751457592661 * S_RMntFrq  +    -0.15926282047245 *
1135368   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_3 = -0.53647455024397 * S_AcceptedCmpTotal + 0.24459727005497 * 
S_Frq + 0.30319155437277 * S_Income + 0.25206471395865 * S_Mnt + 0.43917953957135 * 
S_MntGoldProds + -0.10933570154764 * S_MntMeatProducts + -0.04059236687792 * S_MntWines + 
0.35677739352706 * S_NumDistPurchases + 1.38086899403811 * S_RFMstat + -0.32751457592661 * 
S_RMntFrq + -0.15926282047245 * S_Recency ;
1135369   +   H1x4_4  =     0.24225159923716 * S_AcceptedCmpTotal
1135370   +          +    -0.83397540163538 * S_Frq  +     0.65454415304883 * S_Income
1135371   +          +     -2.1008417113285 * S_Mnt  +     1.46444392612369 *
1135372   +        S_MntGoldProds  +     1.98843066844745 * S_MntMeatProducts
1135373   +          +    -0.31310064337061 * S_MntWines  +     0.56236194506314 *
1135374   +        S_NumDistPurchases  +    -0.20512833160409 * S_RFMstat
1135375   +          +    -0.20631901696385 * S_RMntFrq  +    -0.01945293751142 *
1135376   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 0.24225159923716 * S_AcceptedCmpTotal + -0.83397540163538 * 
S_Frq + 0.65454415304883 * S_Income + -2.1008417113285 * S_Mnt + 1.46444392612369 * 
S_MntGoldProds + 1.98843066844745 * S_MntMeatProducts + -0.31310064337061 * S_MntWines + 
0.56236194506314 * S_NumDistPurchases + -0.20512833160409 * S_RFMstat + -0.20631901696385 * 
S_RMntFrq + -0.01945293751142 * S_Recency ;
1135377   +   H1x4_5  =     -0.2800504242999 * S_AcceptedCmpTotal
1135378   +          +     0.11767474732461 * S_Frq  +    -1.78109558633383 * S_Income
1135379   +          +    -0.83275451396797 * S_Mnt  +     0.13772739876237 *
1135380   +        S_MntGoldProds  +    -0.00084509726748 * S_MntMeatProducts
1135381   +          +     0.92081955236291 * S_MntWines  +    -0.84663906140096 *
1135382   +        S_NumDistPurchases  +     1.07425261538134 * S_RFMstat
1135383   +          +    -0.27830850445101 * S_RMntFrq  +     0.74380794599056 *
1135384   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_5 = -0.2800504242999 * S_AcceptedCmpTotal + 0.11767474732461 * 
S_Frq + -1.78109558633383 * S_Income + -0.83275451396797 * S_Mnt + 0.13772739876237 * 
S_MntGoldProds + -0.00084509726748 * S_MntMeatProducts + 0.92081955236291 * S_MntWines + 
-0.84663906140096 * S_NumDistPurchases + 1.07425261538134 * S_RFMstat + -0.27830850445101 * 
S_RMntFrq + 0.74380794599056 * S_Recency ;
1135385   +   H1x4_6  =     -1.1119291723593 * S_AcceptedCmpTotal
1135386   +          +     0.56304851350844 * S_Frq  +     0.73567113537541 * S_Income
1135387   +          +    -3.12306246450604 * S_Mnt  +    -0.91316403938439 *
1135388   +        S_MntGoldProds  +    -2.69628755197256 * S_MntMeatProducts
1135389   +          +     0.85746867824621 * S_MntWines  +    -0.36724035406906 *
1135390   +        S_NumDistPurchases  +     0.28568968295985 * S_RFMstat
1135391   +          +    -0.93954323577146 * S_RMntFrq  +     0.85268992665591 *
1135392   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_6 = -1.1119291723593 * S_AcceptedCmpTotal + 0.56304851350844 * 
S_Frq + 0.73567113537541 * S_Income + -3.12306246450604 * S_Mnt + -0.91316403938439 * 
S_MntGoldProds + -2.69628755197256 * S_MntMeatProducts + 0.85746867824621 * S_MntWines + 
-0.36724035406906 * S_NumDistPurchases + 0.28568968295985 * S_RFMstat + -0.93954323577146 * 
S_RMntFrq + 0.85268992665591 * S_Recency ;
1135393   +   H1x4_1  = H1x4_1  +    -0.41637670428316 * G_Marital_Status0
1135394   +          +     1.82577173192743 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + -0.41637670428316 * G_Marital_Status0 + 
1.82577173192743 * G_Marital_Status1 ;
1135395   +   H1x4_2  = H1x4_2  +     1.30084682846119 * G_Marital_Status0
1135396   +          +     1.86494194086223 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + 1.30084682846119 * G_Marital_Status0 + 
1.86494194086223 * G_Marital_Status1 ;
1135397   +   H1x4_3  = H1x4_3  +    -2.51039247492524 * G_Marital_Status0
1135398   +          +    -0.78535196846115 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = H1x4_3 + -2.51039247492524 * G_Marital_Status0 + 
-0.78535196846115 * G_Marital_Status1 ;
1135399   +   H1x4_4  = H1x4_4  +    -1.66536345681649 * G_Marital_Status0
1135400   +          +    -1.13643623224979 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = H1x4_4 + -1.66536345681649 * G_Marital_Status0 + 
-1.13643623224979 * G_Marital_Status1 ;
1135401   +   H1x4_5  = H1x4_5  +     0.34381083459151 * G_Marital_Status0
1135402   +          +    -0.50611098994468 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = H1x4_5 + 0.34381083459151 * G_Marital_Status0 + 
-0.50611098994468 * G_Marital_Status1 ;
1135403   +   H1x4_6  = H1x4_6  +    -0.50144547845039 * G_Marital_Status0
1135404   +          +     1.05855030017376 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = H1x4_6 + -0.50144547845039 * G_Marital_Status0 + 
1.05855030017376 * G_Marital_Status1 ;
1135405   +   H1x4_1  =     0.23907181959326 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 0.23907181959326 + H1x4_1 ;
1135406   +   H1x4_2  =    -1.57201194785995 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -1.57201194785995 + H1x4_2 ;
1135407   +   H1x4_3  =     2.06322674265618 + H1x4_3 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = 2.06322674265618 + H1x4_3 ;
1135408   +   H1x4_4  =     1.01469021578807 + H1x4_4 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.01469021578807 + H1x4_4 ;
1135409   +   H1x4_5  =     1.07767489348013 + H1x4_5 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.07767489348013 + H1x4_5 ;
1135410   +   H1x4_6  =     0.04477742816865 + H1x4_6 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = 0.04477742816865 + H1x4_6 ;
1135411   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1135412   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1135413   +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
1135414   +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
1135415   +   H1x4_3  = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_3 = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
1135416   +   H1x4_4  = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
1135417   +   H1x4_5  = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
1135418   +   H1x4_6  = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_6 = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
1135419   +END;
MPRINT(EM_DIAGRAM):   END;
1135420   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1135421   +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
1135422   +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
1135423   +   H1x4_3  = .;
MPRINT(EM_DIAGRAM):   H1x4_3 = .;
1135424   +   H1x4_4  = .;
MPRINT(EM_DIAGRAM):   H1x4_4 = .;
1135425   +   H1x4_5  = .;
MPRINT(EM_DIAGRAM):   H1x4_5 = .;
1135426   +   H1x4_6  = .;
MPRINT(EM_DIAGRAM):   H1x4_6 = .;
1135427   +END;
MPRINT(EM_DIAGRAM):   END;
1135428   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135429   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1135430   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135431   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1135432   +   H2x1_1  =     1.57657363240028 * H1x1_1  +    -0.37699618626432 * H1x1_2
1135433   +          +    -0.60919993629457 * H1x1_3  +     2.97257779188857 * H1x1_4
1135434   +          +     4.47740938165819 * H1x1_5  +    -0.85059681057218 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.57657363240028 * H1x1_1 + -0.37699618626432 * H1x1_2 + 
-0.60919993629457 * H1x1_3 + 2.97257779188857 * H1x1_4 + 4.47740938165819 * H1x1_5 + 
-0.85059681057218 * H1x1_6 ;
1135435   +   H2x1_2  =     0.58245150995434 * H1x1_1  +     1.31825599717827 * H1x1_2
1135436   +          +    -0.46604129874265 * H1x1_3  +    -1.57880778011961 * H1x1_4
1135437   +          +      0.1296024356855 * H1x1_5  +    -0.32310175742174 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.58245150995434 * H1x1_1 + 1.31825599717827 * H1x1_2 + 
-0.46604129874265 * H1x1_3 + -1.57880778011961 * H1x1_4 + 0.1296024356855 * H1x1_5 + 
-0.32310175742174 * H1x1_6 ;
1135438   +   H2x1_3  =     0.08762368266386 * H1x1_1  +     -2.1587359786783 * H1x1_2
1135439   +          +     0.53603825884818 * H1x1_3  +    -0.24087329015868 * H1x1_4
1135440   +          +     0.03296173080719 * H1x1_5  +     0.01697480121243 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.08762368266386 * H1x1_1 + -2.1587359786783 * H1x1_2 + 
0.53603825884818 * H1x1_3 + -0.24087329015868 * H1x1_4 + 0.03296173080719 * H1x1_5 + 
0.01697480121243 * H1x1_6 ;
1135441   +   H2x1_4  =    -0.11182680657167 * H1x1_1  +     0.78238566788271 * H1x1_2
1135442   +          +    -0.32984662645651 * H1x1_3  +    -0.48952564803009 * H1x1_4
1135443   +          +    -1.99607614008712 * H1x1_5  +     0.10016209874446 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.11182680657167 * H1x1_1 + 0.78238566788271 * H1x1_2 + 
-0.32984662645651 * H1x1_3 + -0.48952564803009 * H1x1_4 + -1.99607614008712 * H1x1_5 + 
0.10016209874446 * H1x1_6 ;
1135444   +   H2x1_5  =     -1.2498866108229 * H1x1_1  +      3.2369796406078 * H1x1_2
1135445   +          +      2.8181066223344 * H1x1_3  +    -3.11752751718664 * H1x1_4
1135446   +          +    -0.69294382105442 * H1x1_5  +     1.50580112761945 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.2498866108229 * H1x1_1 + 3.2369796406078 * H1x1_2 + 
2.8181066223344 * H1x1_3 + -3.11752751718664 * H1x1_4 + -0.69294382105442 * H1x1_5 + 
1.50580112761945 * H1x1_6 ;
1135447   +   H2x1_1  = H2x1_1  +     1.23510627062479 * H1x2_1
1135448   +          +     0.24021661687189 * H1x2_2  +    -1.56696654026909 * H1x2_3
1135449   +          +     1.87814576627429 * H1x2_4  +     0.77581978719058 * H1x2_5
1135450   +          +    -0.36964326956968 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.23510627062479 * H1x2_1 + 0.24021661687189 * H1x2_2 
+ -1.56696654026909 * H1x2_3 + 1.87814576627429 * H1x2_4 + 0.77581978719058 * H1x2_5 + 
-0.36964326956968 * H1x2_6 ;
1135451   +   H2x1_2  = H2x1_2  +     0.92347023180909 * H1x2_1
1135452   +          +    -0.58884204034707 * H1x2_2  +     0.32527960762166 * H1x2_3
1135453   +          +    -2.67192710315835 * H1x2_4  +     1.11142627890507 * H1x2_5
1135454   +          +     -0.0675747785188 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.92347023180909 * H1x2_1 + -0.58884204034707 * H1x2_2 
+ 0.32527960762166 * H1x2_3 + -2.67192710315835 * H1x2_4 + 1.11142627890507 * H1x2_5 + 
-0.0675747785188 * H1x2_6 ;
1135455   +   H2x1_3  = H2x1_3  +    -0.92500735470206 * H1x2_1
1135456   +          +     0.02449601034461 * H1x2_2  +    -0.75716713196308 * H1x2_3
1135457   +          +     0.16672538074212 * H1x2_4  +    -1.03440004099384 * H1x2_5
1135458   +          +     0.20622228187831 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.92500735470206 * H1x2_1 + 0.02449601034461 * H1x2_2 
+ -0.75716713196308 * H1x2_3 + 0.16672538074212 * H1x2_4 + -1.03440004099384 * H1x2_5 + 
0.20622228187831 * H1x2_6 ;
1135459   +   H2x1_4  = H2x1_4  +     1.25485096748114 * H1x2_1
1135460   +          +     -0.2345670529973 * H1x2_2  +     1.00007865183196 * H1x2_3
1135461   +          +    -0.19520365006597 * H1x2_4  +     0.15141232788955 * H1x2_5
1135462   +          +     0.99704195296742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25485096748114 * H1x2_1 + -0.2345670529973 * H1x2_2 
+ 1.00007865183196 * H1x2_3 + -0.19520365006597 * H1x2_4 + 0.15141232788955 * H1x2_5 + 
0.99704195296742 * H1x2_6 ;
1135463   +   H2x1_5  = H2x1_5  +    -0.65666404502833 * H1x2_1
1135464   +          +     2.28944563427288 * H1x2_2  +    -0.53344610521696 * H1x2_3
1135465   +          +      -0.793597979143 * H1x2_4  +     -0.5657184003534 * H1x2_5
1135466   +          +     0.52117926766363 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.65666404502833 * H1x2_1 + 2.28944563427288 * H1x2_2 
+ -0.53344610521696 * H1x2_3 + -0.793597979143 * H1x2_4 + -0.5657184003534 * H1x2_5 + 
0.52117926766363 * H1x2_6 ;
1135467   +   H2x1_1  = H2x1_1  +    -0.22872297219456 * H1x3_1
1135468   +          +     0.44130997341488 * H1x3_2  +     0.85543947016407 * H1x3_3
1135469   +          +      0.9172319436964 * H1x3_4  +    -0.63323674278101 * H1x3_5
1135470   +          +       0.010792162082 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.22872297219456 * H1x3_1 + 0.44130997341488 * H1x3_2 
+ 0.85543947016407 * H1x3_3 + 0.9172319436964 * H1x3_4 + -0.63323674278101 * H1x3_5 + 
0.010792162082 * H1x3_6 ;
1135471   +   H2x1_2  = H2x1_2  +    -0.47961853683007 * H1x3_1
1135472   +          +     0.67283234118014 * H1x3_2  +    -0.12148381681871 * H1x3_3
1135473   +          +     0.11539127068604 * H1x3_4  +     0.71547134269459 * H1x3_5
1135474   +          +     0.31051080747621 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.47961853683007 * H1x3_1 + 0.67283234118014 * H1x3_2 
+ -0.12148381681871 * H1x3_3 + 0.11539127068604 * H1x3_4 + 0.71547134269459 * H1x3_5 + 
0.31051080747621 * H1x3_6 ;
1135475   +   H2x1_3  = H2x1_3  +     0.84914297140244 * H1x3_1
1135476   +          +     0.52803158023536 * H1x3_2  +    -1.39949725219783 * H1x3_3
1135477   +          +     0.69603350257472 * H1x3_4  +    -0.99298091528215 * H1x3_5
1135478   +          +      0.4901677948096 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.84914297140244 * H1x3_1 + 0.52803158023536 * H1x3_2 
+ -1.39949725219783 * H1x3_3 + 0.69603350257472 * H1x3_4 + -0.99298091528215 * H1x3_5 + 
0.4901677948096 * H1x3_6 ;
1135479   +   H2x1_4  = H2x1_4  +     1.25437670540229 * H1x3_1
1135480   +          +     0.10767112672867 * H1x3_2  +     -2.4886577317349 * H1x3_3
1135481   +          +    -1.19999974192227 * H1x3_4  +     2.65195856746166 * H1x3_5
1135482   +          +    -0.35850032269696 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25437670540229 * H1x3_1 + 0.10767112672867 * H1x3_2 
+ -2.4886577317349 * H1x3_3 + -1.19999974192227 * H1x3_4 + 2.65195856746166 * H1x3_5 + 
-0.35850032269696 * H1x3_6 ;
1135483   +   H2x1_5  = H2x1_5  +    -0.18873569038601 * H1x3_1
1135484   +          +    -0.05695497456875 * H1x3_2  +    -1.09169714101723 * H1x3_3
1135485   +          +     0.66962829232535 * H1x3_4  +     0.68262583745167 * H1x3_5
1135486   +          +     0.91538472149247 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.18873569038601 * H1x3_1 + -0.05695497456875 * 
H1x3_2 + -1.09169714101723 * H1x3_3 + 0.66962829232535 * H1x3_4 + 0.68262583745167 * H1x3_5 + 
0.91538472149247 * H1x3_6 ;
1135487   +   H2x1_1  = H2x1_1  +    -0.77701371575001 * H1x4_1
1135488   +          +    -1.54239140939922 * H1x4_2  +    -0.26570372401877 * H1x4_3
1135489   +          +     0.00097824237229 * H1x4_4  +     0.57921309289721 * H1x4_5
1135490   +          +     1.46692133055956 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.77701371575001 * H1x4_1 + -1.54239140939922 * 
H1x4_2 + -0.26570372401877 * H1x4_3 + 0.00097824237229 * H1x4_4 + 0.57921309289721 * H1x4_5 + 
1.46692133055956 * H1x4_6 ;
1135491   +   H2x1_2  = H2x1_2  +     0.96564519202767 * H1x4_1
1135492   +          +    -0.06466152110331 * H1x4_2  +    -0.66659637249467 * H1x4_3
1135493   +          +     0.59673973270306 * H1x4_4  +     2.45492273841581 * H1x4_5
1135494   +          +     -0.4804481967354 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.96564519202767 * H1x4_1 + -0.06466152110331 * H1x4_2 
+ -0.66659637249467 * H1x4_3 + 0.59673973270306 * H1x4_4 + 2.45492273841581 * H1x4_5 + 
-0.4804481967354 * H1x4_6 ;
1135495   +   H2x1_3  = H2x1_3  +     0.75339074826799 * H1x4_1
1135496   +          +     1.26373188682879 * H1x4_2  +     0.49419374749947 * H1x4_3
1135497   +          +     1.26541916145956 * H1x4_4  +     0.10039190806961 * H1x4_5
1135498   +          +    -0.79556185531974 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.75339074826799 * H1x4_1 + 1.26373188682879 * H1x4_2 
+ 0.49419374749947 * H1x4_3 + 1.26541916145956 * H1x4_4 + 0.10039190806961 * H1x4_5 + 
-0.79556185531974 * H1x4_6 ;
1135499   +   H2x1_4  = H2x1_4  +    -0.28271287281925 * H1x4_1
1135500   +          +      2.1208193298333 * H1x4_2  +    -0.65223420232343 * H1x4_3
1135501   +          +     0.02666229497558 * H1x4_4  +     0.72865787458027 * H1x4_5
1135502   +          +    -0.22377472142722 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.28271287281925 * H1x4_1 + 2.1208193298333 * H1x4_2 
+ -0.65223420232343 * H1x4_3 + 0.02666229497558 * H1x4_4 + 0.72865787458027 * H1x4_5 + 
-0.22377472142722 * H1x4_6 ;
1135503   +   H2x1_5  = H2x1_5  +    -0.84067714042271 * H1x4_1
1135504   +          +    -1.59141777016956 * H1x4_2  +     0.46077797807782 * H1x4_3
1135505   +          +    -0.07031579794448 * H1x4_4  +     0.83754013895307 * H1x4_5
1135506   +          +     0.49805259687865 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.84067714042271 * H1x4_1 + -1.59141777016956 * 
H1x4_2 + 0.46077797807782 * H1x4_3 + -0.07031579794448 * H1x4_4 + 0.83754013895307 * H1x4_5 + 
0.49805259687865 * H1x4_6 ;
1135507   +   H2x1_1  =     1.86496757154162 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.86496757154162 + H2x1_1 ;
1135508   +   H2x1_2  =     0.46453634696909 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.46453634696909 + H2x1_2 ;
1135509   +   H2x1_3  =     0.36165501609225 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.36165501609225 + H2x1_3 ;
1135510   +   H2x1_4  =    -0.91790753889181 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.91790753889181 + H2x1_4 ;
1135511   +   H2x1_5  =     2.82445131106489 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.82445131106489 + H2x1_5 ;
1135512   +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
1135513   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
1135514   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1135515   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1135516   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1135517   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1135518   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1135519   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1135520   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1135521   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1135522   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1135523   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1135524   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1135525   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1135526   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1135527   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1135528   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1135529   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1135530   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1135531   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1135532   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1135533   +END;
MPRINT(EM_DIAGRAM):   END;
1135534   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1135535   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1135536   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1135537   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1135538   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1135539   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1135540   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1135541   +END;
MPRINT(EM_DIAGRAM):   END;
1135542   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135543   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1135544   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135545   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1135546   +   H2x2_1  =     0.06037434087051 * H1x1_1  +     2.10312669809986 * H1x1_2
1135547   +          +     0.25966374544266 * H1x1_3  +     -0.4604625015482 * H1x1_4
1135548   +          +    -0.04852853005798 * H1x1_5  +     1.73108900683337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.06037434087051 * H1x1_1 + 2.10312669809986 * H1x1_2 + 
0.25966374544266 * H1x1_3 + -0.4604625015482 * H1x1_4 + -0.04852853005798 * H1x1_5 + 
1.73108900683337 * H1x1_6 ;
1135549   +   H2x2_2  =    -1.98874787809729 * H1x1_1  +    -0.90575568783349 * H1x1_2
1135550   +          +     2.19451885005981 * H1x1_3  +     0.86127175797091 * H1x1_4
1135551   +          +     0.88302785384691 * H1x1_5  +     1.44831802939799 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.98874787809729 * H1x1_1 + -0.90575568783349 * H1x1_2 + 
2.19451885005981 * H1x1_3 + 0.86127175797091 * H1x1_4 + 0.88302785384691 * H1x1_5 + 
1.44831802939799 * H1x1_6 ;
1135552   +   H2x2_3  =     0.99020573159855 * H1x1_1  +    -0.25509107111568 * H1x1_2
1135553   +          +    -0.88380027397433 * H1x1_3  +     2.61444810707966 * H1x1_4
1135554   +          +     1.12768553693881 * H1x1_5  +    -1.33423515707253 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.99020573159855 * H1x1_1 + -0.25509107111568 * H1x1_2 + 
-0.88380027397433 * H1x1_3 + 2.61444810707966 * H1x1_4 + 1.12768553693881 * H1x1_5 + 
-1.33423515707253 * H1x1_6 ;
1135555   +   H2x2_4  =    -0.48971657670431 * H1x1_1  +    -2.03924441101145 * H1x1_2
1135556   +          +    -0.44598954940675 * H1x1_3  +    -0.38296699607675 * H1x1_4
1135557   +          +    -0.46829791763961 * H1x1_5  +     0.57571476480191 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.48971657670431 * H1x1_1 + -2.03924441101145 * H1x1_2 + 
-0.44598954940675 * H1x1_3 + -0.38296699607675 * H1x1_4 + -0.46829791763961 * H1x1_5 + 
0.57571476480191 * H1x1_6 ;
1135558   +   H2x2_5  =     1.15324249951205 * H1x1_1  +    -0.30656607959814 * H1x1_2
1135559   +          +    -0.26327906953925 * H1x1_3  +    -0.30055126052518 * H1x1_4
1135560   +          +     1.20108560127357 * H1x1_5  +    -2.01222927536337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.15324249951205 * H1x1_1 + -0.30656607959814 * H1x1_2 + 
-0.26327906953925 * H1x1_3 + -0.30055126052518 * H1x1_4 + 1.20108560127357 * H1x1_5 + 
-2.01222927536337 * H1x1_6 ;
1135561   +   H2x2_1  = H2x2_1  +     0.67714997403987 * H1x2_1
1135562   +          +     0.58512699375084 * H1x2_2  +     0.82352577521669 * H1x2_3
1135563   +          +    -0.10235751124142 * H1x2_4  +     0.33612939980192 * H1x2_5
1135564   +          +    -0.86707973977777 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.67714997403987 * H1x2_1 + 0.58512699375084 * H1x2_2 
+ 0.82352577521669 * H1x2_3 + -0.10235751124142 * H1x2_4 + 0.33612939980192 * H1x2_5 + 
-0.86707973977777 * H1x2_6 ;
1135565   +   H2x2_2  = H2x2_2  +     0.54358612690033 * H1x2_1
1135566   +          +     0.85147893022911 * H1x2_2  +     0.19383313272548 * H1x2_3
1135567   +          +     0.54163359333706 * H1x2_4  +    -0.12377705517298 * H1x2_5
1135568   +          +     0.34775419906833 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.54358612690033 * H1x2_1 + 0.85147893022911 * H1x2_2 
+ 0.19383313272548 * H1x2_3 + 0.54163359333706 * H1x2_4 + -0.12377705517298 * H1x2_5 + 
0.34775419906833 * H1x2_6 ;
1135569   +   H2x2_3  = H2x2_3  +    -0.93107945276808 * H1x2_1
1135570   +          +     0.68475936175775 * H1x2_2  +    -0.23180217492353 * H1x2_3
1135571   +          +     0.62637113173904 * H1x2_4  +      -0.494489282403 * H1x2_5
1135572   +          +    -0.92757761378206 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.93107945276808 * H1x2_1 + 0.68475936175775 * H1x2_2 
+ -0.23180217492353 * H1x2_3 + 0.62637113173904 * H1x2_4 + -0.494489282403 * H1x2_5 + 
-0.92757761378206 * H1x2_6 ;
1135573   +   H2x2_4  = H2x2_4  +    -0.04592275767761 * H1x2_1
1135574   +          +    -0.46728046145973 * H1x2_2  +    -0.84120395772864 * H1x2_3
1135575   +          +     0.15719249141893 * H1x2_4  +    -0.46514309972577 * H1x2_5
1135576   +          +     1.22882033880531 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.04592275767761 * H1x2_1 + -0.46728046145973 * 
H1x2_2 + -0.84120395772864 * H1x2_3 + 0.15719249141893 * H1x2_4 + -0.46514309972577 * H1x2_5 + 
1.22882033880531 * H1x2_6 ;
1135577   +   H2x2_5  = H2x2_5  +     1.84159049843244 * H1x2_1
1135578   +          +     0.10275783758743 * H1x2_2  +    -1.43072878385761 * H1x2_3
1135579   +          +     0.55082995966416 * H1x2_4  +      0.6610129464186 * H1x2_5
1135580   +          +     1.13665339513142 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.84159049843244 * H1x2_1 + 0.10275783758743 * H1x2_2 
+ -1.43072878385761 * H1x2_3 + 0.55082995966416 * H1x2_4 + 0.6610129464186 * H1x2_5 + 
1.13665339513142 * H1x2_6 ;
1135581   +   H2x2_1  = H2x2_1  +    -1.51032464504011 * H1x3_1
1135582   +          +    -0.09256867451899 * H1x3_2  +     0.32445533867689 * H1x3_3
1135583   +          +     0.05761597623645 * H1x3_4  +    -0.76755137543453 * H1x3_5
1135584   +          +    -0.84355541605354 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.51032464504011 * H1x3_1 + -0.09256867451899 * 
H1x3_2 + 0.32445533867689 * H1x3_3 + 0.05761597623645 * H1x3_4 + -0.76755137543453 * H1x3_5 + 
-0.84355541605354 * H1x3_6 ;
1135585   +   H2x2_2  = H2x2_2  +     0.10183122181912 * H1x3_1
1135586   +          +    -0.30112412370797 * H1x3_2  +     0.67666605377075 * H1x3_3
1135587   +          +    -0.05362728717558 * H1x3_4  +    -0.02087908172702 * H1x3_5
1135588   +          +    -0.14832407235293 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.10183122181912 * H1x3_1 + -0.30112412370797 * H1x3_2 
+ 0.67666605377075 * H1x3_3 + -0.05362728717558 * H1x3_4 + -0.02087908172702 * H1x3_5 + 
-0.14832407235293 * H1x3_6 ;
1135589   +   H2x2_3  = H2x2_3  +     1.70579601255161 * H1x3_1
1135590   +          +     -0.4658368752668 * H1x3_2  +    -0.54573113497487 * H1x3_3
1135591   +          +     1.13279034034213 * H1x3_4  +     1.23714589942258 * H1x3_5
1135592   +          +     0.41209753590668 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 1.70579601255161 * H1x3_1 + -0.4658368752668 * H1x3_2 
+ -0.54573113497487 * H1x3_3 + 1.13279034034213 * H1x3_4 + 1.23714589942258 * H1x3_5 + 
0.41209753590668 * H1x3_6 ;
1135593   +   H2x2_4  = H2x2_4  +     0.21012073552633 * H1x3_1
1135594   +          +      -1.607803967771 * H1x3_2  +     0.02641742148684 * H1x3_3
1135595   +          +      -0.919177834124 * H1x3_4  +    -0.46658991803838 * H1x3_5
1135596   +          +     0.05356295771962 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.21012073552633 * H1x3_1 + -1.607803967771 * H1x3_2 + 
0.02641742148684 * H1x3_3 + -0.919177834124 * H1x3_4 + -0.46658991803838 * H1x3_5 + 
0.05356295771962 * H1x3_6 ;
1135597   +   H2x2_5  = H2x2_5  +     -1.1424376096243 * H1x3_1
1135598   +          +    -0.47941730936597 * H1x3_2  +    -1.44857674506057 * H1x3_3
1135599   +          +     -2.0300913051093 * H1x3_4  +    -0.12476620160938 * H1x3_5
1135600   +          +      1.3865980084186 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.1424376096243 * H1x3_1 + -0.47941730936597 * H1x3_2 
+ -1.44857674506057 * H1x3_3 + -2.0300913051093 * H1x3_4 + -0.12476620160938 * H1x3_5 + 
1.3865980084186 * H1x3_6 ;
1135601   +   H2x2_1  = H2x2_1  +    -0.80277778579719 * H1x4_1
1135602   +          +     0.89356845434924 * H1x4_2  +     1.34679856015636 * H1x4_3
1135603   +          +    -0.75666255425893 * H1x4_4  +    -0.76982332990737 * H1x4_5
1135604   +          +     0.16602366912489 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.80277778579719 * H1x4_1 + 0.89356845434924 * H1x4_2 
+ 1.34679856015636 * H1x4_3 + -0.75666255425893 * H1x4_4 + -0.76982332990737 * H1x4_5 + 
0.16602366912489 * H1x4_6 ;
1135605   +   H2x2_2  = H2x2_2  +    -1.23815292104545 * H1x4_1
1135606   +          +     0.15726093177842 * H1x4_2  +     0.11603212859646 * H1x4_3
1135607   +          +     0.38287343591011 * H1x4_4  +    -0.51333663927664 * H1x4_5
1135608   +          +     -0.9577144624714 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.23815292104545 * H1x4_1 + 0.15726093177842 * H1x4_2 
+ 0.11603212859646 * H1x4_3 + 0.38287343591011 * H1x4_4 + -0.51333663927664 * H1x4_5 + 
-0.9577144624714 * H1x4_6 ;
1135609   +   H2x2_3  = H2x2_3  +    -0.68480171858681 * H1x4_1
1135610   +          +    -0.64475211431817 * H1x4_2  +     0.54382770716837 * H1x4_3
1135611   +          +     0.07586519798399 * H1x4_4  +      -0.158352646931 * H1x4_5
1135612   +          +    -0.86962851115528 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.68480171858681 * H1x4_1 + -0.64475211431817 * 
H1x4_2 + 0.54382770716837 * H1x4_3 + 0.07586519798399 * H1x4_4 + -0.158352646931 * H1x4_5 + 
-0.86962851115528 * H1x4_6 ;
1135613   +   H2x2_4  = H2x2_4  +     1.08721247219364 * H1x4_1
1135614   +          +    -0.00199447585891 * H1x4_2  +    -0.84066724442019 * H1x4_3
1135615   +          +     0.28532638217608 * H1x4_4  +    -1.14779513957631 * H1x4_5
1135616   +          +     2.01216139921959 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.08721247219364 * H1x4_1 + -0.00199447585891 * H1x4_2 
+ -0.84066724442019 * H1x4_3 + 0.28532638217608 * H1x4_4 + -1.14779513957631 * H1x4_5 + 
2.01216139921959 * H1x4_6 ;
1135617   +   H2x2_5  = H2x2_5  +    -0.82582817846967 * H1x4_1
1135618   +          +    -1.09057773595959 * H1x4_2  +     -0.2490905553905 * H1x4_3
1135619   +          +     0.93092377717594 * H1x4_4  +     0.02946641402494 * H1x4_5
1135620   +          +    -0.19026348436175 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.82582817846967 * H1x4_1 + -1.09057773595959 * 
H1x4_2 + -0.2490905553905 * H1x4_3 + 0.93092377717594 * H1x4_4 + 0.02946641402494 * H1x4_5 + 
-0.19026348436175 * H1x4_6 ;
1135621   +   H2x2_1  =      0.4280804812723 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.4280804812723 + H2x2_1 ;
1135622   +   H2x2_2  =    -1.09169904475569 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.09169904475569 + H2x2_2 ;
1135623   +   H2x2_3  =      1.1980619484542 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.1980619484542 + H2x2_3 ;
1135624   +   H2x2_4  =    -0.69756677248934 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.69756677248934 + H2x2_4 ;
1135625   +   H2x2_5  =    -1.87910212660657 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -1.87910212660657 + H2x2_5 ;
1135626   +   H2x2_6  = 0;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0;
1135627   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
1135628   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1135629   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
1135630   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
1135631   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
1135632   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
1135633   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
1135634   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
1135635   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
1135636   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
1135637   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
1135638   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
1135639   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
1135640   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
1135641   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
1135642   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
1135643   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
1135644   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
1135645   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
1135646   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
1135647   +END;
MPRINT(EM_DIAGRAM):   END;
1135648   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1135649   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1135650   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1135651   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1135652   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
1135653   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
1135654   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
1135655   +END;
MPRINT(EM_DIAGRAM):   END;
1135656   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135657   +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
1135658   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135659   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1135660   +   H2x3_1  =     0.51206365204428 * H1x1_1  +    -1.75446248490807 * H1x1_2
1135661   +          +     0.22956544269482 * H1x1_3  +     0.91651437630074 * H1x1_4
1135662   +          +    -0.88731743590726 * H1x1_5  +     0.75959028005652 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.51206365204428 * H1x1_1 + -1.75446248490807 * H1x1_2 + 
0.22956544269482 * H1x1_3 + 0.91651437630074 * H1x1_4 + -0.88731743590726 * H1x1_5 + 
0.75959028005652 * H1x1_6 ;
1135663   +   H2x3_2  =    -0.45196055100748 * H1x1_1  +    -0.30516535345407 * H1x1_2
1135664   +          +    -0.95535662641329 * H1x1_3  +     0.98793241812876 * H1x1_4
1135665   +          +    -2.26205386368521 * H1x1_5  +    -0.79989554227284 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -0.45196055100748 * H1x1_1 + -0.30516535345407 * H1x1_2 + 
-0.95535662641329 * H1x1_3 + 0.98793241812876 * H1x1_4 + -2.26205386368521 * H1x1_5 + 
-0.79989554227284 * H1x1_6 ;
1135666   +   H2x3_3  =     1.75400558713364 * H1x1_1  +     0.36065784285286 * H1x1_2
1135667   +          +    -0.26047606287884 * H1x1_3  +    -0.92639558885443 * H1x1_4
1135668   +          +     1.89978202395282 * H1x1_5  +     1.46105111567983 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = 1.75400558713364 * H1x1_1 + 0.36065784285286 * H1x1_2 + 
-0.26047606287884 * H1x1_3 + -0.92639558885443 * H1x1_4 + 1.89978202395282 * H1x1_5 + 
1.46105111567983 * H1x1_6 ;
1135669   +   H2x3_4  =     -1.0609986914691 * H1x1_1  +     1.03588259392678 * H1x1_2
1135670   +          +     0.18751061078347 * H1x1_3  +     1.45467172411852 * H1x1_4
1135671   +          +     0.80970691110797 * H1x1_5  +    -0.03142746343877 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = -1.0609986914691 * H1x1_1 + 1.03588259392678 * H1x1_2 + 
0.18751061078347 * H1x1_3 + 1.45467172411852 * H1x1_4 + 0.80970691110797 * H1x1_5 + 
-0.03142746343877 * H1x1_6 ;
1135672   +   H2x3_5  =     0.68514959739435 * H1x1_1  +    -0.85703618516825 * H1x1_2
1135673   +          +    -1.42641478008517 * H1x1_3  +     0.69128253039497 * H1x1_4
1135674   +          +    -0.41103428804251 * H1x1_5  +     2.29818718782262 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = 0.68514959739435 * H1x1_1 + -0.85703618516825 * H1x1_2 + 
-1.42641478008517 * H1x1_3 + 0.69128253039497 * H1x1_4 + -0.41103428804251 * H1x1_5 + 
2.29818718782262 * H1x1_6 ;
1135675   +   H2x3_1  = H2x3_1  +    -1.02124610786304 * H1x2_1
1135676   +          +    -0.70086367508924 * H1x2_2  +     1.44543746222048 * H1x2_3
1135677   +          +      0.0077115223216 * H1x2_4  +    -1.13603676440953 * H1x2_5
1135678   +          +    -0.39006326539815 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.02124610786304 * H1x2_1 + -0.70086367508924 * 
H1x2_2 + 1.44543746222048 * H1x2_3 + 0.0077115223216 * H1x2_4 + -1.13603676440953 * H1x2_5 + 
-0.39006326539815 * H1x2_6 ;
1135679   +   H2x3_2  = H2x3_2  +     0.58504868182178 * H1x2_1
1135680   +          +    -2.53394647771808 * H1x2_2  +    -0.46920351111552 * H1x2_3
1135681   +          +    -0.13298739365164 * H1x2_4  +    -0.72916785042807 * H1x2_5
1135682   +          +     0.87575796008942 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.58504868182178 * H1x2_1 + -2.53394647771808 * H1x2_2 
+ -0.46920351111552 * H1x2_3 + -0.13298739365164 * H1x2_4 + -0.72916785042807 * H1x2_5 + 
0.87575796008942 * H1x2_6 ;
1135683   +   H2x3_3  = H2x3_3  +      -0.403068394175 * H1x2_1
1135684   +          +     2.20341156440175 * H1x2_2  +     0.18637166393472 * H1x2_3
1135685   +          +    -0.49818124689746 * H1x2_4  +    -0.57482220863202 * H1x2_5
1135686   +          +    -0.99288712489296 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -0.403068394175 * H1x2_1 + 2.20341156440175 * H1x2_2 + 
0.18637166393472 * H1x2_3 + -0.49818124689746 * H1x2_4 + -0.57482220863202 * H1x2_5 + 
-0.99288712489296 * H1x2_6 ;
1135687   +   H2x3_4  = H2x3_4  +    -0.08255075671356 * H1x2_1
1135688   +          +     0.12417859340249 * H1x2_2  +     0.38623860203678 * H1x2_3
1135689   +          +     1.30375188803419 * H1x2_4  +     0.06113655765155 * H1x2_5
1135690   +          +     2.18684373678918 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.08255075671356 * H1x2_1 + 0.12417859340249 * H1x2_2 
+ 0.38623860203678 * H1x2_3 + 1.30375188803419 * H1x2_4 + 0.06113655765155 * H1x2_5 + 
2.18684373678918 * H1x2_6 ;
1135691   +   H2x3_5  = H2x3_5  +     0.02445507420447 * H1x2_1
1135692   +          +     -1.1429834255353 * H1x2_2  +     1.15057813366971 * H1x2_3
1135693   +          +     -0.7929157351984 * H1x2_4  +      0.4343084860458 * H1x2_5
1135694   +          +      0.0384736341173 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + 0.02445507420447 * H1x2_1 + -1.1429834255353 * H1x2_2 
+ 1.15057813366971 * H1x2_3 + -0.7929157351984 * H1x2_4 + 0.4343084860458 * H1x2_5 + 
0.0384736341173 * H1x2_6 ;
1135695   +   H2x3_1  = H2x3_1  +     0.37764572590016 * H1x3_1
1135696   +          +     1.48191356825225 * H1x3_2  +    -0.26603273466393 * H1x3_3
1135697   +          +    -1.29507822568105 * H1x3_4  +     1.84557717124725 * H1x3_5
1135698   +          +    -0.65863037608331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.37764572590016 * H1x3_1 + 1.48191356825225 * H1x3_2 
+ -0.26603273466393 * H1x3_3 + -1.29507822568105 * H1x3_4 + 1.84557717124725 * H1x3_5 + 
-0.65863037608331 * H1x3_6 ;
1135699   +   H2x3_2  = H2x3_2  +    -3.49060338051306 * H1x3_1
1135700   +          +      1.3541565382925 * H1x3_2  +    -0.38315198954693 * H1x3_3
1135701   +          +    -2.08846010475603 * H1x3_4  +    -0.03268324043605 * H1x3_5
1135702   +          +     -0.2732767866426 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -3.49060338051306 * H1x3_1 + 1.3541565382925 * H1x3_2 
+ -0.38315198954693 * H1x3_3 + -2.08846010475603 * H1x3_4 + -0.03268324043605 * H1x3_5 + 
-0.2732767866426 * H1x3_6 ;
1135703   +   H2x3_3  = H2x3_3  +    -1.02108681113274 * H1x3_1
1135704   +          +     1.11670732797487 * H1x3_2  +    -2.83817066251645 * H1x3_3
1135705   +          +     2.91943649605743 * H1x3_4  +    -1.58666117886546 * H1x3_5
1135706   +          +     0.95358246629929 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -1.02108681113274 * H1x3_1 + 1.11670732797487 * H1x3_2 
+ -2.83817066251645 * H1x3_3 + 2.91943649605743 * H1x3_4 + -1.58666117886546 * H1x3_5 + 
0.95358246629929 * H1x3_6 ;
1135707   +   H2x3_4  = H2x3_4  +    -0.28934138457604 * H1x3_1
1135708   +          +     -0.1627562650927 * H1x3_2  +     1.76496399430623 * H1x3_3
1135709   +          +     2.05776756058594 * H1x3_4  +    -0.96994650178001 * H1x3_5
1135710   +          +    -1.50364154763084 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.28934138457604 * H1x3_1 + -0.1627562650927 * H1x3_2 
+ 1.76496399430623 * H1x3_3 + 2.05776756058594 * H1x3_4 + -0.96994650178001 * H1x3_5 + 
-1.50364154763084 * H1x3_6 ;
1135711   +   H2x3_5  = H2x3_5  +    -0.73016276992619 * H1x3_1
1135712   +          +    -1.48258849718818 * H1x3_2  +    -0.47908044807419 * H1x3_3
1135713   +          +      0.5957671579209 * H1x3_4  +     0.06707833713085 * H1x3_5
1135714   +          +      0.3673818114501 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.73016276992619 * H1x3_1 + -1.48258849718818 * 
H1x3_2 + -0.47908044807419 * H1x3_3 + 0.5957671579209 * H1x3_4 + 0.06707833713085 * H1x3_5 + 
0.3673818114501 * H1x3_6 ;
1135715   +   H2x3_1  = H2x3_1  +     1.64939881299916 * H1x4_1
1135716   +          +     0.29057047745206 * H1x4_2  +     -1.2430356696985 * H1x4_3
1135717   +          +     1.38895822896909 * H1x4_4  +     0.32263395713709 * H1x4_5
1135718   +          +      -0.876005602164 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 1.64939881299916 * H1x4_1 + 0.29057047745206 * H1x4_2 
+ -1.2430356696985 * H1x4_3 + 1.38895822896909 * H1x4_4 + 0.32263395713709 * H1x4_5 + 
-0.876005602164 * H1x4_6 ;
1135719   +   H2x3_2  = H2x3_2  +    -0.59279077758901 * H1x4_1
1135720   +          +     0.47534983861589 * H1x4_2  +     1.50522851379751 * H1x4_3
1135721   +          +    -0.52074826438565 * H1x4_4  +    -0.13959571645898 * H1x4_5
1135722   +          +     0.51236653129509 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.59279077758901 * H1x4_1 + 0.47534983861589 * H1x4_2 
+ 1.50522851379751 * H1x4_3 + -0.52074826438565 * H1x4_4 + -0.13959571645898 * H1x4_5 + 
0.51236653129509 * H1x4_6 ;
1135723   +   H2x3_3  = H2x3_3  +       0.170929264521 * H1x4_1
1135724   +          +    -1.09768862147461 * H1x4_2  +    -1.22166369035864 * H1x4_3
1135725   +          +    -0.43496041372082 * H1x4_4  +     0.86983484014566 * H1x4_5
1135726   +          +     0.14855508666868 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + 0.170929264521 * H1x4_1 + -1.09768862147461 * H1x4_2 + 
-1.22166369035864 * H1x4_3 + -0.43496041372082 * H1x4_4 + 0.86983484014566 * H1x4_5 + 
0.14855508666868 * H1x4_6 ;
1135727   +   H2x3_4  = H2x3_4  +    -0.26703118340308 * H1x4_1
1135728   +          +     0.58353167926887 * H1x4_2  +     1.39169479141155 * H1x4_3
1135729   +          +     -0.7893707969296 * H1x4_4  +     0.89521873365477 * H1x4_5
1135730   +          +     1.60853840268286 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.26703118340308 * H1x4_1 + 0.58353167926887 * H1x4_2 
+ 1.39169479141155 * H1x4_3 + -0.7893707969296 * H1x4_4 + 0.89521873365477 * H1x4_5 + 
1.60853840268286 * H1x4_6 ;
1135731   +   H2x3_5  = H2x3_5  +    -0.29353449181426 * H1x4_1
1135732   +          +     0.02697197445995 * H1x4_2  +     0.04454970336296 * H1x4_3
1135733   +          +    -0.17322488506489 * H1x4_4  +    -1.52564540234935 * H1x4_5
1135734   +          +      0.6650692994568 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.29353449181426 * H1x4_1 + 0.02697197445995 * H1x4_2 
+ 0.04454970336296 * H1x4_3 + -0.17322488506489 * H1x4_4 + -1.52564540234935 * H1x4_5 + 
0.6650692994568 * H1x4_6 ;
1135735   +   H2x3_1  =    -0.44046998911725 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.44046998911725 + H2x3_1 ;
1135736   +   H2x3_2  =     1.44590821330163 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 1.44590821330163 + H2x3_2 ;
1135737   +   H2x3_3  =    -0.02671947857742 + H2x3_3 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = -0.02671947857742 + H2x3_3 ;
1135738   +   H2x3_4  =     2.16876314488082 + H2x3_4 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = 2.16876314488082 + H2x3_4 ;
1135739   +   H2x3_5  =    -1.06855161267989 + H2x3_5 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = -1.06855161267989 + H2x3_5 ;
1135740   +   H2x3_6  = 0;
MPRINT(EM_DIAGRAM):   H2x3_6 = 0;
1135741   +   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
1135742   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1135743   +   H2x3_1  = EXP(H2x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_1 = EXP(H2x3_1 - _MAX_);
1135744   +   _SUM_ = _SUM_ + H2x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_1 ;
1135745   +   H2x3_2  = EXP(H2x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_2 = EXP(H2x3_2 - _MAX_);
1135746   +   _SUM_ = _SUM_ + H2x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_2 ;
1135747   +   H2x3_3  = EXP(H2x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_3 = EXP(H2x3_3 - _MAX_);
1135748   +   _SUM_ = _SUM_ + H2x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_3 ;
1135749   +   H2x3_4  = EXP(H2x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_4 = EXP(H2x3_4 - _MAX_);
1135750   +   _SUM_ = _SUM_ + H2x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_4 ;
1135751   +   H2x3_5  = EXP(H2x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_5 = EXP(H2x3_5 - _MAX_);
1135752   +   _SUM_ = _SUM_ + H2x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_5 ;
1135753   +   H2x3_6  = EXP(H2x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_6 = EXP(H2x3_6 - _MAX_);
1135754   +   _SUM_ = _SUM_ + H2x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_6 ;
1135755   +   H2x3_1  = H2x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 / _SUM_;
1135756   +   H2x3_2  = H2x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 / _SUM_;
1135757   +   H2x3_3  = H2x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 / _SUM_;
1135758   +   H2x3_4  = H2x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 / _SUM_;
1135759   +   H2x3_5  = H2x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 / _SUM_;
1135760   +   H2x3_6  = H2x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_6 = H2x3_6 / _SUM_;
1135761   +END;
MPRINT(EM_DIAGRAM):   END;
1135762   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1135763   +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
1135764   +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
1135765   +   H2x3_3  = .;
MPRINT(EM_DIAGRAM):   H2x3_3 = .;
1135766   +   H2x3_4  = .;
MPRINT(EM_DIAGRAM):   H2x3_4 = .;
1135767   +   H2x3_5  = .;
MPRINT(EM_DIAGRAM):   H2x3_5 = .;
1135768   +   H2x3_6  = .;
MPRINT(EM_DIAGRAM):   H2x3_6 = .;
1135769   +END;
MPRINT(EM_DIAGRAM):   END;
1135770   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135771   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1135772   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135773   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1135774   +   H3x1_1  =     0.14821897068309 * H2x1_1  +     0.10105634438409 * H2x1_2
1135775   +          +     0.69826499371673 * H2x1_3  +     1.65127139539807 * H2x1_4
1135776   +          +     1.34699293376382 * H2x1_5  +     0.62066324264653 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.14821897068309 * H2x1_1 + 0.10105634438409 * H2x1_2 + 
0.69826499371673 * H2x1_3 + 1.65127139539807 * H2x1_4 + 1.34699293376382 * H2x1_5 + 
0.62066324264653 * H2x1_6 ;
1135777   +   H3x1_2  =     -0.6760189094281 * H2x1_1  +     0.85348791240011 * H2x1_2
1135778   +          +    -0.07663386217946 * H2x1_3  +     2.15467384269703 * H2x1_4
1135779   +          +    -0.50699529916446 * H2x1_5  +     1.70699964755049 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.6760189094281 * H2x1_1 + 0.85348791240011 * H2x1_2 + 
-0.07663386217946 * H2x1_3 + 2.15467384269703 * H2x1_4 + -0.50699529916446 * H2x1_5 + 
1.70699964755049 * H2x1_6 ;
1135780   +   H3x1_3  =    -0.94311365048828 * H2x1_1  +    -0.69829528108975 * H2x1_2
1135781   +          +    -0.34747616168009 * H2x1_3  +     2.32941170908743 * H2x1_4
1135782   +          +     3.71768144878584 * H2x1_5  +    -0.60932405988373 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -0.94311365048828 * H2x1_1 + -0.69829528108975 * H2x1_2 + 
-0.34747616168009 * H2x1_3 + 2.32941170908743 * H2x1_4 + 3.71768144878584 * H2x1_5 + 
-0.60932405988373 * H2x1_6 ;
1135783   +   H3x1_4  =     1.69107510526388 * H2x1_1  +    -1.40350955348413 * H2x1_2
1135784   +          +    -0.47901844016365 * H2x1_3  +      0.3540542650553 * H2x1_4
1135785   +          +    -1.56597514252687 * H2x1_5  +    -0.04997148078498 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 1.69107510526388 * H2x1_1 + -1.40350955348413 * H2x1_2 + 
-0.47901844016365 * H2x1_3 + 0.3540542650553 * H2x1_4 + -1.56597514252687 * H2x1_5 + 
-0.04997148078498 * H2x1_6 ;
1135786   +   H3x1_5  =    -0.23167181678539 * H2x1_1  +    -0.65942738658946 * H2x1_2
1135787   +          +    -0.83280103611578 * H2x1_3  +    -1.03301865685228 * H2x1_4
1135788   +          +      1.3401316289209 * H2x1_5  +    -1.98639459325872 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.23167181678539 * H2x1_1 + -0.65942738658946 * H2x1_2 + 
-0.83280103611578 * H2x1_3 + -1.03301865685228 * H2x1_4 + 1.3401316289209 * H2x1_5 + 
-1.98639459325872 * H2x1_6 ;
1135789   +   H3x1_1  = H3x1_1  +    -1.96226306174896 * H2x2_1
1135790   +          +     1.03065434267907 * H2x2_2  +    -0.02977552697407 * H2x2_3
1135791   +          +    -2.15633683205343 * H2x2_4  +    -0.16172049876123 * H2x2_5
1135792   +          +     2.04617275364668 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.96226306174896 * H2x2_1 + 1.03065434267907 * H2x2_2 
+ -0.02977552697407 * H2x2_3 + -2.15633683205343 * H2x2_4 + -0.16172049876123 * H2x2_5 + 
2.04617275364668 * H2x2_6 ;
1135793   +   H3x1_2  = H3x1_2  +     0.98825486325651 * H2x2_1
1135794   +          +    -0.45791784632486 * H2x2_2  +     -0.1004093258308 * H2x2_3
1135795   +          +     -0.9411693729369 * H2x2_4  +     -0.2302105458948 * H2x2_5
1135796   +          +    -0.37660795680674 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.98825486325651 * H2x2_1 + -0.45791784632486 * H2x2_2 
+ -0.1004093258308 * H2x2_3 + -0.9411693729369 * H2x2_4 + -0.2302105458948 * H2x2_5 + 
-0.37660795680674 * H2x2_6 ;
1135797   +   H3x1_3  = H3x1_3  +    -0.01929245635771 * H2x2_1
1135798   +          +     0.59176660505983 * H2x2_2  +     0.85345798669405 * H2x2_3
1135799   +          +    -0.29251716908915 * H2x2_4  +     0.62774918208489 * H2x2_5
1135800   +          +    -0.43453791992382 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.01929245635771 * H2x2_1 + 0.59176660505983 * H2x2_2 
+ 0.85345798669405 * H2x2_3 + -0.29251716908915 * H2x2_4 + 0.62774918208489 * H2x2_5 + 
-0.43453791992382 * H2x2_6 ;
1135801   +   H3x1_4  = H3x1_4  +    -0.93313067901041 * H2x2_1
1135802   +          +     0.79407052404273 * H2x2_2  +     1.63518575530242 * H2x2_3
1135803   +          +     1.19368615452563 * H2x2_4  +     0.43365061793519 * H2x2_5
1135804   +          +    -3.30381142208727 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.93313067901041 * H2x2_1 + 0.79407052404273 * H2x2_2 
+ 1.63518575530242 * H2x2_3 + 1.19368615452563 * H2x2_4 + 0.43365061793519 * H2x2_5 + 
-3.30381142208727 * H2x2_6 ;
1135805   +   H3x1_5  = H3x1_5  +      0.2721747886066 * H2x2_1
1135806   +          +     0.29405186941774 * H2x2_2  +    -0.96425253045194 * H2x2_3
1135807   +          +    -0.34879018216113 * H2x2_4  +    -1.15330072605073 * H2x2_5
1135808   +          +    -0.34019675397366 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + 0.2721747886066 * H2x2_1 + 0.29405186941774 * H2x2_2 + 
-0.96425253045194 * H2x2_3 + -0.34879018216113 * H2x2_4 + -1.15330072605073 * H2x2_5 + 
-0.34019675397366 * H2x2_6 ;
1135809   +   H3x1_1  = H3x1_1  +     0.99938924001809 * H2x3_1
1135810   +          +    -0.28559857879809 * H2x3_2  +    -0.44648183712004 * H2x3_3
1135811   +          +    -0.23199698060307 * H2x3_4  +    -0.64346521755351 * H2x3_5
1135812   +          +     0.59340663088806 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 0.99938924001809 * H2x3_1 + -0.28559857879809 * H2x3_2 
+ -0.44648183712004 * H2x3_3 + -0.23199698060307 * H2x3_4 + -0.64346521755351 * H2x3_5 + 
0.59340663088806 * H2x3_6 ;
1135813   +   H3x1_2  = H3x1_2  +     1.61767718200144 * H2x3_1
1135814   +          +     0.59417860044733 * H2x3_2  +      1.9323992067722 * H2x3_3
1135815   +          +    -1.38224816012152 * H2x3_4  +    -2.04529937075447 * H2x3_5
1135816   +          +     0.67050797164115 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 1.61767718200144 * H2x3_1 + 0.59417860044733 * H2x3_2 
+ 1.9323992067722 * H2x3_3 + -1.38224816012152 * H2x3_4 + -2.04529937075447 * H2x3_5 + 
0.67050797164115 * H2x3_6 ;
1135817   +   H3x1_3  = H3x1_3  +    -0.69807909205706 * H2x3_1
1135818   +          +    -0.57895843216341 * H2x3_2  +    -0.16766418785512 * H2x3_3
1135819   +          +     0.40654327615846 * H2x3_4  +    -1.86698682195337 * H2x3_5
1135820   +          +    -0.51274988768251 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.69807909205706 * H2x3_1 + -0.57895843216341 * 
H2x3_2 + -0.16766418785512 * H2x3_3 + 0.40654327615846 * H2x3_4 + -1.86698682195337 * H2x3_5 + 
-0.51274988768251 * H2x3_6 ;
1135821   +   H3x1_4  = H3x1_4  +     0.48560830435522 * H2x3_1
1135822   +          +     -2.8037598804912 * H2x3_2  +    -0.30231415756008 * H2x3_3
1135823   +          +     2.41159952574381 * H2x3_4  +     0.62877424154604 * H2x3_5
1135824   +          +    -0.73773727947747 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.48560830435522 * H2x3_1 + -2.8037598804912 * H2x3_2 
+ -0.30231415756008 * H2x3_3 + 2.41159952574381 * H2x3_4 + 0.62877424154604 * H2x3_5 + 
-0.73773727947747 * H2x3_6 ;
1135825   +   H3x1_5  = H3x1_5  +    -0.87089276878422 * H2x3_1
1135826   +          +    -0.78003140915024 * H2x3_2  +    -1.46975503560585 * H2x3_3
1135827   +          +     1.87460778751879 * H2x3_4  +    -0.09219359612439 * H2x3_5
1135828   +          +    -1.07137645697526 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.87089276878422 * H2x3_1 + -0.78003140915024 * 
H2x3_2 + -1.46975503560585 * H2x3_3 + 1.87460778751879 * H2x3_4 + -0.09219359612439 * H2x3_5 + 
-1.07137645697526 * H2x3_6 ;
1135829   +   H3x1_1  =    -0.24118737469276 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.24118737469276 + H3x1_1 ;
1135830   +   H3x1_2  =     0.26844205496356 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.26844205496356 + H3x1_2 ;
1135831   +   H3x1_3  =      1.6092325807607 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.6092325807607 + H3x1_3 ;
1135832   +   H3x1_4  =     0.55904829903808 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.55904829903808 + H3x1_4 ;
1135833   +   H3x1_5  =     1.39880629138148 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.39880629138148 + H3x1_5 ;
1135834   +   H3x1_6  = 0;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0;
1135835   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
1135836   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1135837   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
1135838   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
1135839   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
1135840   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
1135841   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
1135842   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
1135843   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
1135844   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
1135845   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
1135846   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
1135847   +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
1135848   +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
1135849   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
1135850   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
1135851   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
1135852   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
1135853   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
1135854   +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
1135855   +END;
MPRINT(EM_DIAGRAM):   END;
1135856   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1135857   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1135858   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1135859   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1135860   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
1135861   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
1135862   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
1135863   +END;
MPRINT(EM_DIAGRAM):   END;
1135864   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135865   +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
1135866   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135867   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1135868   +   H3x2_1  =     0.13469056275633 * H2x1_1  +    -1.31570873196603 * H2x1_2
1135869   +          +    -0.83004507775706 * H2x1_3  +     1.14954585467995 * H2x1_4
1135870   +          +     0.01234753333089 * H2x1_5  +     0.50683843245151 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.13469056275633 * H2x1_1 + -1.31570873196603 * H2x1_2 + 
-0.83004507775706 * H2x1_3 + 1.14954585467995 * H2x1_4 + 0.01234753333089 * H2x1_5 + 
0.50683843245151 * H2x1_6 ;
1135871   +   H3x2_2  =     2.58620633866114 * H2x1_1  +     0.37629863890202 * H2x1_2
1135872   +          +     0.34169762900278 * H2x1_3  +     1.24247313002596 * H2x1_4
1135873   +          +     -0.1965463932822 * H2x1_5  +    -0.00458488228083 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 2.58620633866114 * H2x1_1 + 0.37629863890202 * H2x1_2 + 
0.34169762900278 * H2x1_3 + 1.24247313002596 * H2x1_4 + -0.1965463932822 * H2x1_5 + 
-0.00458488228083 * H2x1_6 ;
1135874   +   H3x2_3  =    -2.01883694738218 * H2x1_1  +     0.83782353926562 * H2x1_2
1135875   +          +    -1.95119268200972 * H2x1_3  +    -1.04826190833003 * H2x1_4
1135876   +          +     1.66733023346498 * H2x1_5  +     0.23483419363088 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = -2.01883694738218 * H2x1_1 + 0.83782353926562 * H2x1_2 + 
-1.95119268200972 * H2x1_3 + -1.04826190833003 * H2x1_4 + 1.66733023346498 * H2x1_5 + 
0.23483419363088 * H2x1_6 ;
1135877   +   H3x2_4  =     0.40678642111393 * H2x1_1  +    -0.10557612663286 * H2x1_2
1135878   +          +    -0.34694532874387 * H2x1_3  +     -1.6967916788772 * H2x1_4
1135879   +          +     0.24026556349373 * H2x1_5  +    -0.69393637888423 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = 0.40678642111393 * H2x1_1 + -0.10557612663286 * H2x1_2 + 
-0.34694532874387 * H2x1_3 + -1.6967916788772 * H2x1_4 + 0.24026556349373 * H2x1_5 + 
-0.69393637888423 * H2x1_6 ;
1135880   +   H3x2_5  =    -1.48304630985783 * H2x1_1  +     0.87426655970556 * H2x1_2
1135881   +          +    -0.49899516599841 * H2x1_3  +    -1.94880978312007 * H2x1_4
1135882   +          +    -2.45275015055877 * H2x1_5  +    -0.03264500335093 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -1.48304630985783 * H2x1_1 + 0.87426655970556 * H2x1_2 + 
-0.49899516599841 * H2x1_3 + -1.94880978312007 * H2x1_4 + -2.45275015055877 * H2x1_5 + 
-0.03264500335093 * H2x1_6 ;
1135883   +   H3x2_1  = H3x2_1  +    -0.40915299509566 * H2x2_1
1135884   +          +     1.45952180668254 * H2x2_2  +     0.42420517277224 * H2x2_3
1135885   +          +    -0.79379446044158 * H2x2_4  +     0.73614212418439 * H2x2_5
1135886   +          +     -0.6527392657117 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -0.40915299509566 * H2x2_1 + 1.45952180668254 * H2x2_2 
+ 0.42420517277224 * H2x2_3 + -0.79379446044158 * H2x2_4 + 0.73614212418439 * H2x2_5 + 
-0.6527392657117 * H2x2_6 ;
1135887   +   H3x2_2  = H3x2_2  +    -1.62752321860626 * H2x2_1
1135888   +          +    -0.04689831325067 * H2x2_2  +    -2.87951125721119 * H2x2_3
1135889   +          +    -0.36181303609331 * H2x2_4  +     0.55999175715209 * H2x2_5
1135890   +          +    -0.40911363767301 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + -1.62752321860626 * H2x2_1 + -0.04689831325067 * 
H2x2_2 + -2.87951125721119 * H2x2_3 + -0.36181303609331 * H2x2_4 + 0.55999175715209 * H2x2_5 + 
-0.40911363767301 * H2x2_6 ;
1135891   +   H3x2_3  = H3x2_3  +     0.50766404641726 * H2x2_1
1135892   +          +     0.02747397544049 * H2x2_2  +    -1.35626517144826 * H2x2_3
1135893   +          +     0.23390260329386 * H2x2_4  +     -0.5025118845527 * H2x2_5
1135894   +          +    -1.14035867434772 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + 0.50766404641726 * H2x2_1 + 0.02747397544049 * H2x2_2 
+ -1.35626517144826 * H2x2_3 + 0.23390260329386 * H2x2_4 + -0.5025118845527 * H2x2_5 + 
-1.14035867434772 * H2x2_6 ;
1135895   +   H3x2_4  = H3x2_4  +     0.64958154360038 * H2x2_1
1135896   +          +     1.68671947742627 * H2x2_2  +    -0.42417215632785 * H2x2_3
1135897   +          +    -0.39675884102374 * H2x2_4  +     1.98354732887496 * H2x2_5
1135898   +          +    -1.32783167695801 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + 0.64958154360038 * H2x2_1 + 1.68671947742627 * H2x2_2 
+ -0.42417215632785 * H2x2_3 + -0.39675884102374 * H2x2_4 + 1.98354732887496 * H2x2_5 + 
-1.32783167695801 * H2x2_6 ;
1135899   +   H3x2_5  = H3x2_5  +     1.92075053147101 * H2x2_1
1135900   +          +     1.22293096034837 * H2x2_2  +    -0.74039853818796 * H2x2_3
1135901   +          +    -0.25033258903105 * H2x2_4  +     0.63358340091733 * H2x2_5
1135902   +          +     0.17488501957475 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 1.92075053147101 * H2x2_1 + 1.22293096034837 * H2x2_2 
+ -0.74039853818796 * H2x2_3 + -0.25033258903105 * H2x2_4 + 0.63358340091733 * H2x2_5 + 
0.17488501957475 * H2x2_6 ;
1135903   +   H3x2_1  = H3x2_1  +     0.88292932547634 * H2x3_1
1135904   +          +    -0.27631908402136 * H2x3_2  +     0.93133699792762 * H2x3_3
1135905   +          +     1.18769264917434 * H2x3_4  +    -0.88901652244884 * H2x3_5
1135906   +          +    -0.17544617255869 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.88292932547634 * H2x3_1 + -0.27631908402136 * H2x3_2 
+ 0.93133699792762 * H2x3_3 + 1.18769264917434 * H2x3_4 + -0.88901652244884 * H2x3_5 + 
-0.17544617255869 * H2x3_6 ;
1135907   +   H3x2_2  = H3x2_2  +     0.71538502917742 * H2x3_1
1135908   +          +    -0.76848695288598 * H2x3_2  +     1.24503864708272 * H2x3_3
1135909   +          +    -0.93962158881999 * H2x3_4  +    -0.43383001812557 * H2x3_5
1135910   +          +     1.14672043219259 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + 0.71538502917742 * H2x3_1 + -0.76848695288598 * H2x3_2 
+ 1.24503864708272 * H2x3_3 + -0.93962158881999 * H2x3_4 + -0.43383001812557 * H2x3_5 + 
1.14672043219259 * H2x3_6 ;
1135911   +   H3x2_3  = H3x2_3  +    -0.39933331346344 * H2x3_1
1135912   +          +      0.0019862182661 * H2x3_2  +    -0.60479718136768 * H2x3_3
1135913   +          +      1.3818804125218 * H2x3_4  +     0.13498986352108 * H2x3_5
1135914   +          +     1.02889511152823 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + -0.39933331346344 * H2x3_1 + 0.0019862182661 * H2x3_2 
+ -0.60479718136768 * H2x3_3 + 1.3818804125218 * H2x3_4 + 0.13498986352108 * H2x3_5 + 
1.02889511152823 * H2x3_6 ;
1135915   +   H3x2_4  = H3x2_4  +    -1.24198502624302 * H2x3_1
1135916   +          +    -0.09061963757116 * H2x3_2  +    -0.70229381972412 * H2x3_3
1135917   +          +    -1.43988785716026 * H2x3_4  +     0.45188902401215 * H2x3_5
1135918   +          +     0.10073869982371 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + -1.24198502624302 * H2x3_1 + -0.09061963757116 * 
H2x3_2 + -0.70229381972412 * H2x3_3 + -1.43988785716026 * H2x3_4 + 0.45188902401215 * H2x3_5 + 
0.10073869982371 * H2x3_6 ;
1135919   +   H3x2_5  = H3x2_5  +     0.13815223958312 * H2x3_1
1135920   +          +     0.38392032129472 * H2x3_2  +    -0.08374178846724 * H2x3_3
1135921   +          +     0.39613433726611 * H2x3_4  +     1.64049322745471 * H2x3_5
1135922   +          +     0.97496084656174 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 0.13815223958312 * H2x3_1 + 0.38392032129472 * H2x3_2 
+ -0.08374178846724 * H2x3_3 + 0.39613433726611 * H2x3_4 + 1.64049322745471 * H2x3_5 + 
0.97496084656174 * H2x3_6 ;
1135923   +   H3x2_1  =    -0.72845954974251 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -0.72845954974251 + H3x2_1 ;
1135924   +   H3x2_2  =     0.59148824718722 + H3x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0.59148824718722 + H3x2_2 ;
1135925   +   H3x2_3  =     1.28031731320103 + H3x2_3 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = 1.28031731320103 + H3x2_3 ;
1135926   +   H3x2_4  =    -0.11427038364635 + H3x2_4 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = -0.11427038364635 + H3x2_4 ;
1135927   +   H3x2_5  =    -0.28699725292326 + H3x2_5 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -0.28699725292326 + H3x2_5 ;
1135928   +   H3x2_6  = 0;
MPRINT(EM_DIAGRAM):   H3x2_6 = 0;
1135929   +   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
1135930   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1135931   +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
1135932   +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
1135933   +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
1135934   +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
1135935   +   H3x2_3  = EXP(H3x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_3 = EXP(H3x2_3 - _MAX_);
1135936   +   _SUM_ = _SUM_ + H3x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_3 ;
1135937   +   H3x2_4  = EXP(H3x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_4 = EXP(H3x2_4 - _MAX_);
1135938   +   _SUM_ = _SUM_ + H3x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_4 ;
1135939   +   H3x2_5  = EXP(H3x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_5 = EXP(H3x2_5 - _MAX_);
1135940   +   _SUM_ = _SUM_ + H3x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_5 ;
1135941   +   H3x2_6  = EXP(H3x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_6 = EXP(H3x2_6 - _MAX_);
1135942   +   _SUM_ = _SUM_ + H3x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_6 ;
1135943   +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
1135944   +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
1135945   +   H3x2_3  = H3x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 / _SUM_;
1135946   +   H3x2_4  = H3x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 / _SUM_;
1135947   +   H3x2_5  = H3x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 / _SUM_;
1135948   +   H3x2_6  = H3x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_6 = H3x2_6 / _SUM_;
1135949   +END;
MPRINT(EM_DIAGRAM):   END;
1135950   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1135951   +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
1135952   +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
1135953   +   H3x2_3  = .;
MPRINT(EM_DIAGRAM):   H3x2_3 = .;
1135954   +   H3x2_4  = .;
MPRINT(EM_DIAGRAM):   H3x2_4 = .;
1135955   +   H3x2_5  = .;
MPRINT(EM_DIAGRAM):   H3x2_5 = .;
1135956   +   H3x2_6  = .;
MPRINT(EM_DIAGRAM):   H3x2_6 = .;
1135957   +END;
MPRINT(EM_DIAGRAM):   END;
1135958   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135959   +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
1135960   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1135961   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1135962   +   H4x1_1  =     0.10986960182278 * H3x1_1  +    -0.10835805909937 * H3x1_2
1135963   +          +     1.78643376838566 * H3x1_3  +    -0.00067995179919 * H3x1_4
1135964   +          +     2.04711620528782 * H3x1_5  +    -0.66853997603718 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.10986960182278 * H3x1_1 + -0.10835805909937 * H3x1_2 + 
1.78643376838566 * H3x1_3 + -0.00067995179919 * H3x1_4 + 2.04711620528782 * H3x1_5 + 
-0.66853997603718 * H3x1_6 ;
1135965   +   H4x1_2  =    -0.17187141657369 * H3x1_1  +    -1.56897037747293 * H3x1_2
1135966   +          +    -1.38330818097338 * H3x1_3  +     3.94629669251083 * H3x1_4
1135967   +          +    -0.57201557221624 * H3x1_5  +     0.99276034828548 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = -0.17187141657369 * H3x1_1 + -1.56897037747293 * H3x1_2 + 
-1.38330818097338 * H3x1_3 + 3.94629669251083 * H3x1_4 + -0.57201557221624 * H3x1_5 + 
0.99276034828548 * H3x1_6 ;
1135968   +   H4x1_3  =      1.5223304212488 * H3x1_1  +    -0.33490912702371 * H3x1_2
1135969   +          +    -0.30324493540575 * H3x1_3  +    -1.23990036921669 * H3x1_4
1135970   +          +     0.77489370055267 * H3x1_5  +    -0.38609823936674 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.5223304212488 * H3x1_1 + -0.33490912702371 * H3x1_2 + 
-0.30324493540575 * H3x1_3 + -1.23990036921669 * H3x1_4 + 0.77489370055267 * H3x1_5 + 
-0.38609823936674 * H3x1_6 ;
1135971   +   H4x1_4  =    -0.75234452297837 * H3x1_1  +      1.1117782900703 * H3x1_2
1135972   +          +      1.0171911341496 * H3x1_3  +     2.31462824862723 * H3x1_4
1135973   +          +     1.05562639649812 * H3x1_5  +    -0.80603399686936 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -0.75234452297837 * H3x1_1 + 1.1117782900703 * H3x1_2 + 
1.0171911341496 * H3x1_3 + 2.31462824862723 * H3x1_4 + 1.05562639649812 * H3x1_5 + 
-0.80603399686936 * H3x1_6 ;
1135974   +   H4x1_5  =    -0.35441774309359 * H3x1_1  +     0.37408435161205 * H3x1_2
1135975   +          +    -0.79287886005891 * H3x1_3  +    -0.89695291885453 * H3x1_4
1135976   +          +     0.46220429367054 * H3x1_5  +    -1.56166867584216 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = -0.35441774309359 * H3x1_1 + 0.37408435161205 * H3x1_2 + 
-0.79287886005891 * H3x1_3 + -0.89695291885453 * H3x1_4 + 0.46220429367054 * H3x1_5 + 
-1.56166867584216 * H3x1_6 ;
1135977   +   H4x1_1  = H4x1_1  +    -1.12622282402713 * H3x2_1
1135978   +          +     2.43865739917959 * H3x2_2  +     1.62534005409988 * H3x2_3
1135979   +          +     0.83506165677151 * H3x2_4  +    -0.15894659563972 * H3x2_5
1135980   +          +     0.77216806897502 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -1.12622282402713 * H3x2_1 + 2.43865739917959 * H3x2_2 
+ 1.62534005409988 * H3x2_3 + 0.83506165677151 * H3x2_4 + -0.15894659563972 * H3x2_5 + 
0.77216806897502 * H3x2_6 ;
1135981   +   H4x1_2  = H4x1_2  +     0.96736353410956 * H3x2_1
1135982   +          +      1.6250281874285 * H3x2_2  +    -0.81418318229631 * H3x2_3
1135983   +          +     0.35282111325987 * H3x2_4  +     0.11187473980261 * H3x2_5
1135984   +          +     0.73971378600397 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 + 0.96736353410956 * H3x2_1 + 1.6250281874285 * H3x2_2 + 
-0.81418318229631 * H3x2_3 + 0.35282111325987 * H3x2_4 + 0.11187473980261 * H3x2_5 + 
0.73971378600397 * H3x2_6 ;
1135985   +   H4x1_3  = H4x1_3  +    -0.30588247178582 * H3x2_1
1135986   +          +     0.22302184288326 * H3x2_2  +    -0.15797620108073 * H3x2_3
1135987   +          +     1.18515955770896 * H3x2_4  +     0.43359240886537 * H3x2_5
1135988   +          +     0.90907054011344 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 + -0.30588247178582 * H3x2_1 + 0.22302184288326 * H3x2_2 
+ -0.15797620108073 * H3x2_3 + 1.18515955770896 * H3x2_4 + 0.43359240886537 * H3x2_5 + 
0.90907054011344 * H3x2_6 ;
1135989   +   H4x1_4  = H4x1_4  +    -0.26678025657796 * H3x2_1
1135990   +          +    -0.23171152283695 * H3x2_2  +    -0.72882061581264 * H3x2_3
1135991   +          +     0.68597418643333 * H3x2_4  +      0.6559090638639 * H3x2_5
1135992   +          +     0.95412028439169 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 + -0.26678025657796 * H3x2_1 + -0.23171152283695 * 
H3x2_2 + -0.72882061581264 * H3x2_3 + 0.68597418643333 * H3x2_4 + 0.6559090638639 * H3x2_5 + 
0.95412028439169 * H3x2_6 ;
1135993   +   H4x1_5  = H4x1_5  +    -0.77875602324955 * H3x2_1
The SAS System

1135994   +          +     -1.5646810153964 * H3x2_2  +    -0.53157591270506 * H3x2_3
1135995   +          +    -0.27917864191674 * H3x2_4  +    -1.10966192483404 * H3x2_5
1135996   +          +     -0.0058627670025 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 + -0.77875602324955 * H3x2_1 + -1.5646810153964 * H3x2_2 
+ -0.53157591270506 * H3x2_3 + -0.27917864191674 * H3x2_4 + -1.10966192483404 * H3x2_5 + 
-0.0058627670025 * H3x2_6 ;
1135997   +   H4x1_1  =     0.87937070574208 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.87937070574208 + H4x1_1 ;
1135998   +   H4x1_2  =     0.75203729660648 + H4x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0.75203729660648 + H4x1_2 ;
1135999   +   H4x1_3  =     1.14889100908291 + H4x1_3 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.14889100908291 + H4x1_3 ;
1136000   +   H4x1_4  =    -1.71383624276913 + H4x1_4 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -1.71383624276913 + H4x1_4 ;
1136001   +   H4x1_5  =     0.22194774900585 + H4x1_5 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = 0.22194774900585 + H4x1_5 ;
1136002   +   H4x1_6  = 0;
MPRINT(EM_DIAGRAM):   H4x1_6 = 0;
1136003   +   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
1136004   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1136005   +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
1136006   +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
1136007   +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
1136008   +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
1136009   +   H4x1_3  = EXP(H4x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_3 = EXP(H4x1_3 - _MAX_);
1136010   +   _SUM_ = _SUM_ + H4x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_3 ;
1136011   +   H4x1_4  = EXP(H4x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_4 = EXP(H4x1_4 - _MAX_);
1136012   +   _SUM_ = _SUM_ + H4x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_4 ;
1136013   +   H4x1_5  = EXP(H4x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_5 = EXP(H4x1_5 - _MAX_);
1136014   +   _SUM_ = _SUM_ + H4x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_5 ;
1136015   +   H4x1_6  = EXP(H4x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_6 = EXP(H4x1_6 - _MAX_);
1136016   +   _SUM_ = _SUM_ + H4x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_6 ;
1136017   +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
1136018   +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
1136019   +   H4x1_3  = H4x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 / _SUM_;
1136020   +   H4x1_4  = H4x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 / _SUM_;
1136021   +   H4x1_5  = H4x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 / _SUM_;
1136022   +   H4x1_6  = H4x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_6 = H4x1_6 / _SUM_;
1136023   +END;
MPRINT(EM_DIAGRAM):   END;
1136024   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1136025   +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
1136026   +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
1136027   +   H4x1_3  = .;
MPRINT(EM_DIAGRAM):   H4x1_3 = .;
1136028   +   H4x1_4  = .;
MPRINT(EM_DIAGRAM):   H4x1_4 = .;
1136029   +   H4x1_5  = .;
MPRINT(EM_DIAGRAM):   H4x1_5 = .;
1136030   +   H4x1_6  = .;
MPRINT(EM_DIAGRAM):   H4x1_6 = .;
1136031   +END;
MPRINT(EM_DIAGRAM):   END;
1136032   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136033   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1136034   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136035   +
1136036   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1136037   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1136038   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1136039   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1136040   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1136041   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1136042   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1136043   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1136044   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1136045   +end;
MPRINT(EM_DIAGRAM):   end;
1136046   +else do;
MPRINT(EM_DIAGRAM):   else do;
1136047   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1136048   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1136049   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1136050   +   end;
MPRINT(EM_DIAGRAM):   end;
1136051   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1136052   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1136053   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1136054   +   end;
MPRINT(EM_DIAGRAM):   end;
1136055   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1136056   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1136057   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1136058   +   end;
MPRINT(EM_DIAGRAM):   end;
1136059   +end;
MPRINT(EM_DIAGRAM):   end;
1136060   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1136061   +   P_DepVar1  =    -5.30721919155126 * H4x1_1  +     10.4301477552223 * H4x1_2
1136062   +          +    -3.40676330075486 * H4x1_3  +     0.07452634039202 * H4x1_4
1136063   +          +    -2.90585821687293 * H4x1_5  +    -2.63321710569292 * H4x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.30721919155126 * H4x1_1 + 10.4301477552223 * H4x1_2 + 
-3.40676330075486 * H4x1_3 + 0.07452634039202 * H4x1_4 + -2.90585821687293 * H4x1_5 + 
-2.63321710569292 * H4x1_6 ;
1136064   +   P_DepVar1  =    -2.93956196427421 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.93956196427421 + P_DepVar1 ;
1136065   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1136066   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1136067   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1136068   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1136069   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1136070   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1136071   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1136072   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1136073   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1136074   +END;
MPRINT(EM_DIAGRAM):   END;
1136075   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1136076   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1136077   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1136078   +END;
MPRINT(EM_DIAGRAM):   END;
1136079   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1136080   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1136081   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1136082   +END;
MPRINT(EM_DIAGRAM):   END;
1136083   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1136084   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1136085   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1136086   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1136087   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1136088   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1136089   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1136090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136091   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1136092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136093   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1136094   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1136095   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1136096   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1136097   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1136098   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1136099   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1136100   +END;
MPRINT(EM_DIAGRAM):   END;
1136101   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1136102   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1136103   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1136104   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1136105   +* Renaming variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural28;
1136106   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136107   +* Renaming Posterior variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural28;
1136108   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136109   +drop AutoNeural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_P_DepVar1;
1136110   +AutoNeural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural28_P_DepVar1 = P_DepVar1;
1136111   +drop AutoNeural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_P_DepVar0;
1136112   +AutoNeural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural28_P_DepVar0 = P_DepVar0;
1136113   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136114   +* Renaming _WARN_ variable for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural28;
1136115   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136116   +length AutoNeural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural28_WARN_ $4;
1136117   +drop AutoNeural28_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_WARN_;
1136118   +AutoNeural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural28_WARN_ = _WARN_;
1136119   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136120   +* Ensmbl51: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Scoring Code of model 3 of 7;
1136121   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136122   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136123   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1136124   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1136125   +* NODE: AutoNeural27;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural27;
1136126   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136127   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1136128   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1136129   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1136130   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1136131   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1136132   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1136133   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1136134   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1136135   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1136136   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1136137   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1136138   +LENGTH _WARN_ $4
1136139   +      F_DepVar  $ 12
1136140   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1136141   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1136142   +
1136143   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1136144   +
1136145   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1136146   +
1136147   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1136148   +
1136149   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1136150   +
1136151   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1136152   +
1136153   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1136154   +
1136155   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1136156   +
1136157   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1136158   +
1136159   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1136160   +
1136161   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1136162   +
1136163   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1136164   +
1136165   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1136166   +
1136167   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1136168   +
1136169   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1136170   +
1136171   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1136172   +
1136173   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1136174   +
1136175   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1136176   +
1136177   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1136178   +
1136179   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1136180   +
1136181   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1136182   +
1136183   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1136184   +
1136185   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1136186   +
1136187   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1136188   +
1136189   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1136190   +
1136191   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1136192   +
1136193   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1136194   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1136195   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1136196   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1136197   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1136198   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1136199   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1136200   +end;
MPRINT(EM_DIAGRAM):   end;
1136201   +else do;
MPRINT(EM_DIAGRAM):   else do;
1136202   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1136203   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1136204   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1136205   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1136206   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1136207   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1136208   +   end;
MPRINT(EM_DIAGRAM):   end;
1136209   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1136210   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1136211   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1136212   +   end;
MPRINT(EM_DIAGRAM):   end;
1136213   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1136214   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1136215   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1136216   +   end;
MPRINT(EM_DIAGRAM):   end;
1136217   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1136218   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1136219   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1136220   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1136221   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1136222   +   end;
MPRINT(EM_DIAGRAM):   end;
1136223   +end;
MPRINT(EM_DIAGRAM):   end;
1136224   +
1136225   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136226   +*** Checking missing input Interval
1136227   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1136228   +
1136229   +IF NMISS(
1136230   +   AcceptedCmpTotal ,
1136231   +   Frq ,
1136232   +   Income ,
1136233   +   Mnt ,
1136234   +   MntGoldProds ,
1136235   +   MntMeatProducts ,
1136236   +   MntWines ,
1136237   +   NumDistPurchases ,
1136238   +   RFMstat ,
1136239   +   RMntFrq ,
1136240   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1136241   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1136242   +
1136243   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1136244   +END;
MPRINT(EM_DIAGRAM):   END;
1136245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136246   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1136247   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136248   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1136249   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1136250   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1136251   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1136252   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1136253   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1136254   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1136255   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1136256   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1136257   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1136258   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1136259   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1136260   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1136261   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1136262   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1136263   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1136264   +END;
MPRINT(EM_DIAGRAM):   END;
1136265   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1136266   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1136267   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1136268   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1136269   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1136270   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1136271   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1136272   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1136273   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1136274   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1136275   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1136276   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1136277   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1136278   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1136279   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1136280   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1136281   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1136282   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1136283   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1136284   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1136285   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1136286   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1136287   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1136288   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1136289   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1136290   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1136291   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1136292   +END;
MPRINT(EM_DIAGRAM):   END;
1136293   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136294   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1136295   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136296   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136297   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1136298   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136299   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1136300   +   H1x1_1  =    -0.18981728384316 * S_AcceptedCmpTotal
1136301   +          +     2.44575265018132 * S_Frq  +    -0.33258639871365 * S_Income
1136302   +          +    -1.51282513201415 * S_Mnt  +     0.06017420606179 *
1136303   +        S_MntGoldProds  +    -0.55274425550395 * S_MntMeatProducts
1136304   +          +     0.91858869924573 * S_MntWines  +    -1.95905223495165 *
1136305   +        S_NumDistPurchases  +     -0.2637023845598 * S_RFMstat
1136306   +          +     1.23283591446263 * S_RMntFrq  +    -0.07916044614039 *
1136307   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.18981728384316 * S_AcceptedCmpTotal + 2.44575265018132 * 
S_Frq + -0.33258639871365 * S_Income + -1.51282513201415 * S_Mnt + 0.06017420606179 * 
S_MntGoldProds + -0.55274425550395 * S_MntMeatProducts + 0.91858869924573 * S_MntWines + 
-1.95905223495165 * S_NumDistPurchases + -0.2637023845598 * S_RFMstat + 1.23283591446263 * 
S_RMntFrq + -0.07916044614039 * S_Recency ;
1136308   +   H1x1_2  =    -0.68309764555121 * S_AcceptedCmpTotal
1136309   +          +     0.14669436656758 * S_Frq  +     0.02315218376279 * S_Income
1136310   +          +    -4.21583355142014 * S_Mnt  +     0.19199314585125 *
1136311   +        S_MntGoldProds  +     2.55483645032568 * S_MntMeatProducts
1136312   +          +     0.82054382378306 * S_MntWines  +     0.29968014910707 *
1136313   +        S_NumDistPurchases  +     0.60687719454304 * S_RFMstat
1136314   +          +     0.83498030971653 * S_RMntFrq  +     0.50801279856495 *
1136315   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.68309764555121 * S_AcceptedCmpTotal + 0.14669436656758 * 
S_Frq + 0.02315218376279 * S_Income + -4.21583355142014 * S_Mnt + 0.19199314585125 * 
S_MntGoldProds + 2.55483645032568 * S_MntMeatProducts + 0.82054382378306 * S_MntWines + 
0.29968014910707 * S_NumDistPurchases + 0.60687719454304 * S_RFMstat + 0.83498030971653 * 
S_RMntFrq + 0.50801279856495 * S_Recency ;
1136316   +   H1x1_3  =     0.08829866742968 * S_AcceptedCmpTotal
1136317   +          +    -0.02323769496851 * S_Frq  +    -0.99617629114101 * S_Income
1136318   +          +    -4.64282306384023 * S_Mnt  +     0.04308696038528 *
1136319   +        S_MntGoldProds  +     2.31863620360623 * S_MntMeatProducts
1136320   +          +     0.16587338267425 * S_MntWines  +     1.02973533097984 *
1136321   +        S_NumDistPurchases  +     0.20343196580651 * S_RFMstat
1136322   +          +     0.94726928092138 * S_RMntFrq  +     0.03712585159749 *
1136323   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.08829866742968 * S_AcceptedCmpTotal + -0.02323769496851 * 
S_Frq + -0.99617629114101 * S_Income + -4.64282306384023 * S_Mnt + 0.04308696038528 * 
S_MntGoldProds + 2.31863620360623 * S_MntMeatProducts + 0.16587338267425 * S_MntWines + 
1.02973533097984 * S_NumDistPurchases + 0.20343196580651 * S_RFMstat + 0.94726928092138 * 
S_RMntFrq + 0.03712585159749 * S_Recency ;
1136324   +   H1x1_4  =     0.10061099283455 * S_AcceptedCmpTotal
1136325   +          +     1.72752905329456 * S_Frq  +    -0.50472344084228 * S_Income
1136326   +          +     1.07329017540495 * S_Mnt  +    -0.44517902573644 *
1136327   +        S_MntGoldProds  +    -1.57417593135497 * S_MntMeatProducts
1136328   +          +    -0.75359748699668 * S_MntWines  +    -1.09387259425684 *
1136329   +        S_NumDistPurchases  +    -0.81518874000435 * S_RFMstat
1136330   +          +     0.23368643717628 * S_RMntFrq  +    -0.30240544347672 *
1136331   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.10061099283455 * S_AcceptedCmpTotal + 1.72752905329456 * 
S_Frq + -0.50472344084228 * S_Income + 1.07329017540495 * S_Mnt + -0.44517902573644 * 
S_MntGoldProds + -1.57417593135497 * S_MntMeatProducts + -0.75359748699668 * S_MntWines + 
-1.09387259425684 * S_NumDistPurchases + -0.81518874000435 * S_RFMstat + 0.23368643717628 * 
S_RMntFrq + -0.30240544347672 * S_Recency ;
1136332   +   H1x1_5  =    -0.22817314877708 * S_AcceptedCmpTotal
1136333   +          +     0.28118539965414 * S_Frq  +     0.04846488460495 * S_Income
1136334   +          +     0.60106863054811 * S_Mnt  +    -0.06162179557217 *
1136335   +        S_MntGoldProds  +    -0.39180490439507 * S_MntMeatProducts
1136336   +          +    -0.21017068084579 * S_MntWines  +    -0.32161828113396 *
1136337   +        S_NumDistPurchases  +    -0.03465088483344 * S_RFMstat
1136338   +          +    -0.03147262277696 * S_RMntFrq  +     0.34128240879899 *
1136339   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.22817314877708 * S_AcceptedCmpTotal + 0.28118539965414 * 
S_Frq + 0.04846488460495 * S_Income + 0.60106863054811 * S_Mnt + -0.06162179557217 * 
S_MntGoldProds + -0.39180490439507 * S_MntMeatProducts + -0.21017068084579 * S_MntWines + 
-0.32161828113396 * S_NumDistPurchases + -0.03465088483344 * S_RFMstat + -0.03147262277696 * 
S_RMntFrq + 0.34128240879899 * S_Recency ;
1136340   +   H1x1_1  = H1x1_1  +     0.15249883445815 * G_Marital_Status0
1136341   +          +    -0.18818735950093 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15249883445815 * G_Marital_Status0 + 
-0.18818735950093 * G_Marital_Status1 ;
1136342   +   H1x1_2  = H1x1_2  +     1.59824663671134 * G_Marital_Status0
1136343   +          +     1.96669325047054 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.59824663671134 * G_Marital_Status0 + 
1.96669325047054 * G_Marital_Status1 ;
1136344   +   H1x1_3  = H1x1_3  +    -0.31220761109652 * G_Marital_Status0
1136345   +          +     0.52212878383819 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.31220761109652 * G_Marital_Status0 + 
0.52212878383819 * G_Marital_Status1 ;
1136346   +   H1x1_4  = H1x1_4  +    -1.92906338619158 * G_Marital_Status0
1136347   +          +    -1.25145208260948 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.92906338619158 * G_Marital_Status0 + 
-1.25145208260948 * G_Marital_Status1 ;
1136348   +   H1x1_5  = H1x1_5  +    -0.18067263072436 * G_Marital_Status0
1136349   +          +    -0.07780771416761 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.18067263072436 * G_Marital_Status0 + 
-0.07780771416761 * G_Marital_Status1 ;
1136350   +   H1x1_1  =     1.46324697396327 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.46324697396327 + H1x1_1 ;
1136351   +   H1x1_2  =     1.36794472927517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.36794472927517 + H1x1_2 ;
1136352   +   H1x1_3  =    -0.57612320445046 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.57612320445046 + H1x1_3 ;
1136353   +   H1x1_4  =    -1.53805674056235 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53805674056235 + H1x1_4 ;
1136354   +   H1x1_5  =     0.35787040000513 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.35787040000513 + H1x1_5 ;
1136355   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1136356   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1136357   +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
1136358   +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
1136359   +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
1136360   +END;
MPRINT(EM_DIAGRAM):   END;
1136361   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1136362   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1136363   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1136364   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1136365   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1136366   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1136367   +END;
MPRINT(EM_DIAGRAM):   END;
1136368   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136369   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1136370   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136371   +
1136372   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1136373   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1136374   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1136375   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1136376   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1136377   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1136378   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1136379   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1136380   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1136381   +end;
MPRINT(EM_DIAGRAM):   end;
1136382   +else do;
MPRINT(EM_DIAGRAM):   else do;
1136383   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1136384   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1136385   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1136386   +   end;
MPRINT(EM_DIAGRAM):   end;
1136387   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1136388   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1136389   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1136390   +   end;
MPRINT(EM_DIAGRAM):   end;
1136391   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1136392   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1136393   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1136394   +   end;
MPRINT(EM_DIAGRAM):   end;
1136395   +end;
MPRINT(EM_DIAGRAM):   end;
1136396   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1136397   +   P_DepVar1  =    -2.75625949468408 * H1x1_1  +    -2.04123594690263 * H1x1_2
1136398   +          +     2.55595542456674 * H1x1_3  +     2.41628841604103 * H1x1_4
1136399   +          +      -11.39673341305 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.75625949468408 * H1x1_1 + -2.04123594690263 * H1x1_2 + 
2.55595542456674 * H1x1_3 + 2.41628841604103 * H1x1_4 + -11.39673341305 * H1x1_5 ;
1136400   +   P_DepVar1  =     0.62420945009508 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.62420945009508 + P_DepVar1 ;
1136401   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1136402   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1136403   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1136404   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1136405   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1136406   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1136407   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1136408   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1136409   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1136410   +END;
MPRINT(EM_DIAGRAM):   END;
1136411   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1136412   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1136413   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1136414   +END;
MPRINT(EM_DIAGRAM):   END;
1136415   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1136416   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1136417   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1136418   +END;
MPRINT(EM_DIAGRAM):   END;
1136419   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1136420   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1136421   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1136422   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1136423   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1136424   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1136425   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1136426   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136427   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1136428   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136429   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1136430   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1136431   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1136432   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1136433   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1136434   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1136435   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1136436   +END;
MPRINT(EM_DIAGRAM):   END;
1136437   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1136438   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1136439   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1136440   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1136441   +* Renaming variables for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural27;
1136442   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136443   +* Renaming Posterior variables for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural27;
1136444   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136445   +drop AutoNeural27_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_P_DepVar1;
1136446   +AutoNeural27_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural27_P_DepVar1 = P_DepVar1;
1136447   +drop AutoNeural27_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_P_DepVar0;
1136448   +AutoNeural27_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural27_P_DepVar0 = P_DepVar0;
1136449   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136450   +* Renaming _WARN_ variable for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural27;
1136451   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136452   +length AutoNeural27_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural27_WARN_ $4;
1136453   +drop AutoNeural27_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_WARN_;
1136454   +AutoNeural27_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural27_WARN_ = _WARN_;
1136455   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136456   +* Ensmbl51: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Scoring Code of model 4 of 7;
1136457   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136458   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136459   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1136460   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1136461   +* NODE: AutoNeural33;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural33;
1136462   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136463   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1136464   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1136465   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1136466   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1136467   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1136468   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1136469   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1136470   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1136471   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1136472   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1136473   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1136474   +LENGTH _WARN_ $4
1136475   +      F_DepVar  $ 12
1136476   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1136477   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1136478   +
1136479   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1136480   +
1136481   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1136482   +
1136483   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1136484   +
1136485   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1136486   +
1136487   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1136488   +
1136489   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1136490   +
1136491   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1136492   +
1136493   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1136494   +
1136495   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1136496   +
1136497   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1136498   +
1136499   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1136500   +
1136501   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1136502   +
1136503   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1136504   +
1136505   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1136506   +
1136507   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1136508   +
1136509   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1136510   +
1136511   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1136512   +
1136513   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1136514   +
1136515   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1136516   +
1136517   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1136518   +
1136519   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1136520   +
1136521   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1136522   +
1136523   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1136524   +
1136525   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1136526   +
1136527   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1136528   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1136529   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1136530   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1136531   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1136532   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1136533   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1136534   +end;
MPRINT(EM_DIAGRAM):   end;
1136535   +else do;
MPRINT(EM_DIAGRAM):   else do;
1136536   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1136537   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1136538   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1136539   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1136540   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1136541   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1136542   +   end;
MPRINT(EM_DIAGRAM):   end;
1136543   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1136544   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1136545   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1136546   +   end;
MPRINT(EM_DIAGRAM):   end;
1136547   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1136548   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1136549   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1136550   +   end;
MPRINT(EM_DIAGRAM):   end;
1136551   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1136552   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1136553   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1136554   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1136555   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1136556   +   end;
MPRINT(EM_DIAGRAM):   end;
1136557   +end;
MPRINT(EM_DIAGRAM):   end;
1136558   +
1136559   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136560   +*** Checking missing input Interval
1136561   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1136562   +
1136563   +IF NMISS(
1136564   +   AcceptedCmpTotal ,
1136565   +   Frq ,
1136566   +   Income ,
1136567   +   Mnt ,
1136568   +   MntGoldProds ,
1136569   +   MntMeatProducts ,
1136570   +   MntWines ,
1136571   +   NumDistPurchases ,
1136572   +   RFMstat ,
1136573   +   RMntFrq ,
1136574   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1136575   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1136576   +
1136577   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1136578   +END;
MPRINT(EM_DIAGRAM):   END;
1136579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136580   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1136581   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136582   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1136583   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1136584   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1136585   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1136586   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1136587   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1136588   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1136589   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1136590   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1136591   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1136592   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1136593   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1136594   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1136595   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1136596   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1136597   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1136598   +END;
MPRINT(EM_DIAGRAM):   END;
1136599   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1136600   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1136601   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1136602   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1136603   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1136604   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1136605   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1136606   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1136607   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1136608   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1136609   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1136610   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1136611   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1136612   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1136613   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1136614   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1136615   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1136616   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1136617   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1136618   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1136619   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1136620   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1136621   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1136622   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1136623   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1136624   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1136625   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1136626   +END;
MPRINT(EM_DIAGRAM):   END;
1136627   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136628   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1136629   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136631   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1136632   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136633   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1136634   +   H1x1_1  =     0.33555011401553 * S_AcceptedCmpTotal
1136635   +          +    -3.02490159760157 * S_Frq  +    -0.12761482391665 * S_Income
1136636   +          +     -9.1169668394273 * S_Mnt  +     0.88214411094174 *
1136637   +        S_MntGoldProds  +     16.4212241447522 * S_MntMeatProducts
1136638   +          +     4.65784744010387 * S_MntWines  +     2.75620847659032 *
1136639   +        S_NumDistPurchases  +     5.10796074430888 * S_RFMstat
1136640   +          +    -0.15069444442326 * S_RMntFrq  +    -0.36037041233055 *
1136641   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.33555011401553 * S_AcceptedCmpTotal + -3.02490159760157 * 
S_Frq + -0.12761482391665 * S_Income + -9.1169668394273 * S_Mnt + 0.88214411094174 * 
S_MntGoldProds + 16.4212241447522 * S_MntMeatProducts + 4.65784744010387 * S_MntWines + 
2.75620847659032 * S_NumDistPurchases + 5.10796074430888 * S_RFMstat + -0.15069444442326 * 
S_RMntFrq + -0.36037041233055 * S_Recency ;
1136642   +   H1x1_2  =     -6.2107002884316 * S_AcceptedCmpTotal
1136643   +          +      5.5991079844098 * S_Frq  +    -1.06506164052399 * S_Income
1136644   +          +     7.16823320768258 * S_Mnt  +     1.97115223638004 *
1136645   +        S_MntGoldProds  +     0.02973121977962 * S_MntMeatProducts
1136646   +          +     3.28931008157038 * S_MntWines  +    -3.02545356699096 *
1136647   +        S_NumDistPurchases  +    -0.45519831720714 * S_RFMstat
1136648   +          +     2.14788986039061 * S_RMntFrq  +     7.13033786501062 *
1136649   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -6.2107002884316 * S_AcceptedCmpTotal + 5.5991079844098 * S_Frq 
+ -1.06506164052399 * S_Income + 7.16823320768258 * S_Mnt + 1.97115223638004 * S_MntGoldProds 
+ 0.02973121977962 * S_MntMeatProducts + 3.28931008157038 * S_MntWines + -3.02545356699096 * 
S_NumDistPurchases + -0.45519831720714 * S_RFMstat + 2.14788986039061 * S_RMntFrq + 
7.13033786501062 * S_Recency ;
1136650   +   H1x1_3  =    -0.31707769589072 * S_AcceptedCmpTotal
1136651   +          +     -0.8436342869652 * S_Frq  +     0.04938014828703 * S_Income
1136652   +          +     0.41074885451072 * S_Mnt  +    -0.22835264468248 *
1136653   +        S_MntGoldProds  +     0.04154328332772 * S_MntMeatProducts
1136654   +          +    -0.63526276335269 * S_MntWines  +     0.16430041832418 *
1136655   +        S_NumDistPurchases  +    -0.01070081959406 * S_RFMstat
1136656   +          +    -1.56851833223581 * S_RMntFrq  +     0.62478865123427 *
1136657   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31707769589072 * S_AcceptedCmpTotal + -0.8436342869652 * 
S_Frq + 0.04938014828703 * S_Income + 0.41074885451072 * S_Mnt + -0.22835264468248 * 
S_MntGoldProds + 0.04154328332772 * S_MntMeatProducts + -0.63526276335269 * S_MntWines + 
0.16430041832418 * S_NumDistPurchases + -0.01070081959406 * S_RFMstat + -1.56851833223581 * 
S_RMntFrq + 0.62478865123427 * S_Recency ;
1136658   +   H1x1_4  =     0.54144616315359 * S_AcceptedCmpTotal
1136659   +          +    -2.69605116285758 * S_Frq  +    -0.42453662943397 * S_Income
1136660   +          +    -0.95657675439363 * S_Mnt  +     0.24420189860131 *
1136661   +        S_MntGoldProds  +     2.44632795316553 * S_MntMeatProducts
1136662   +          +     -0.1454644222769 * S_MntWines  +     2.34899307919173 *
1136663   +        S_NumDistPurchases  +    -0.02462201574723 * S_RFMstat
1136664   +          +    -2.08470857931815 * S_RMntFrq  +    -0.76249328143214 *
1136665   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54144616315359 * S_AcceptedCmpTotal + -2.69605116285758 * 
S_Frq + -0.42453662943397 * S_Income + -0.95657675439363 * S_Mnt + 0.24420189860131 * 
S_MntGoldProds + 2.44632795316553 * S_MntMeatProducts + -0.1454644222769 * S_MntWines + 
2.34899307919173 * S_NumDistPurchases + -0.02462201574723 * S_RFMstat + -2.08470857931815 * 
S_RMntFrq + -0.76249328143214 * S_Recency ;
1136666   +   H1x1_1  = H1x1_1  +     0.00660823494191 * G_Marital_Status0
1136667   +          +    -0.18825548425502 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.00660823494191 * G_Marital_Status0 + 
-0.18825548425502 * G_Marital_Status1 ;
1136668   +   H1x1_2  = H1x1_2  +    -2.06051657300217 * G_Marital_Status0
1136669   +          +    -6.25782340834073 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.06051657300217 * G_Marital_Status0 + 
-6.25782340834073 * G_Marital_Status1 ;
1136670   +   H1x1_3  = H1x1_3  +    -0.79419358160841 * G_Marital_Status0
1136671   +          +     0.34890327415646 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.79419358160841 * G_Marital_Status0 + 
0.34890327415646 * G_Marital_Status1 ;
1136672   +   H1x1_4  = H1x1_4  +    -0.04651762606699 * G_Marital_Status0
1136673   +          +     0.31552155976549 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.04651762606699 * G_Marital_Status0 + 
0.31552155976549 * G_Marital_Status1 ;
1136674   +   H1x1_1  =      9.5912267385355 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 9.5912267385355 + H1x1_1 ;
1136675   +   H1x1_2  =     -17.513407093022 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -17.513407093022 + H1x1_2 ;
1136676   +   H1x1_3  =     3.77110114695743 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 3.77110114695743 + H1x1_3 ;
1136677   +   H1x1_4  =    -1.34405555452152 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.34405555452152 + H1x1_4 ;
1136678   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1136679   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1136680   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1136681   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1136682   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1136683   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1136684   +END;
MPRINT(EM_DIAGRAM):   END;
1136685   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1136686   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1136687   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1136688   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1136689   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1136690   +END;
MPRINT(EM_DIAGRAM):   END;
1136691   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136692   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1136693   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136694   +
1136695   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1136696   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1136697   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1136698   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1136699   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1136700   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1136701   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1136702   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1136703   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1136704   +end;
MPRINT(EM_DIAGRAM):   end;
1136705   +else do;
MPRINT(EM_DIAGRAM):   else do;
1136706   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1136707   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1136708   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1136709   +   end;
MPRINT(EM_DIAGRAM):   end;
1136710   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1136711   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1136712   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1136713   +   end;
MPRINT(EM_DIAGRAM):   end;
1136714   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1136715   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1136716   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1136717   +   end;
MPRINT(EM_DIAGRAM):   end;
1136718   +end;
MPRINT(EM_DIAGRAM):   end;
1136719   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1136720   +   P_DepVar1  =     17.1648278730429 * H1x1_1  +    -5.41550544466459 * H1x1_2
1136721   +          +     -11.071053129929 * H1x1_3  +      10.744209891392 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1648278730429 * H1x1_1 + -5.41550544466459 * H1x1_2 + 
-11.071053129929 * H1x1_3 + 10.744209891392 * H1x1_4 ;
1136722   +   P_DepVar1  =    -12.0079203309727 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.0079203309727 + P_DepVar1 ;
1136723   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1136724   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1136725   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1136726   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1136727   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1136728   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1136729   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1136730   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1136731   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1136732   +END;
MPRINT(EM_DIAGRAM):   END;
1136733   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1136734   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1136735   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1136736   +END;
MPRINT(EM_DIAGRAM):   END;
1136737   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1136738   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1136739   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1136740   +END;
MPRINT(EM_DIAGRAM):   END;
1136741   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1136742   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1136743   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1136744   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1136745   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1136746   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1136747   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1136748   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136749   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1136750   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136751   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1136752   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1136753   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1136754   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1136755   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1136756   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1136757   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1136758   +END;
MPRINT(EM_DIAGRAM):   END;
1136759   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1136760   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1136761   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1136762   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1136763   +* Renaming variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural33;
1136764   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136765   +* Renaming Posterior variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural33;
1136766   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136767   +drop AutoNeural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_P_DepVar1;
1136768   +AutoNeural33_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural33_P_DepVar1 = P_DepVar1;
1136769   +drop AutoNeural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_P_DepVar0;
1136770   +AutoNeural33_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural33_P_DepVar0 = P_DepVar0;
1136771   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136772   +* Renaming _WARN_ variable for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural33;
1136773   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136774   +length AutoNeural33_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural33_WARN_ $4;
1136775   +drop AutoNeural33_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_WARN_;
1136776   +AutoNeural33_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural33_WARN_ = _WARN_;
1136777   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136778   +* Ensmbl51: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Scoring Code of model 5 of 7;
1136779   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136780   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136781   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1136782   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1136783   +* NODE: AutoNeural32;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural32;
1136784   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1136785   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1136786   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1136787   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1136788   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1136789   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1136790   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1136791   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1136792   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1136793   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1136794   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1136795   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1136796   +LENGTH _WARN_ $4
1136797   +      F_DepVar  $ 12
1136798   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1136799   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1136800   +
1136801   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1136802   +
1136803   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1136804   +
1136805   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1136806   +
1136807   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1136808   +
1136809   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1136810   +
1136811   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1136812   +
1136813   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1136814   +
1136815   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1136816   +
1136817   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1136818   +
1136819   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1136820   +
1136821   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1136822   +
1136823   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1136824   +
1136825   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1136826   +
1136827   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1136828   +
1136829   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1136830   +
1136831   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1136832   +
1136833   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1136834   +
1136835   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1136836   +
1136837   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1136838   +
1136839   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1136840   +
1136841   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1136842   +
1136843   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1136844   +
1136845   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1136846   +
1136847   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1136848   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1136849   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1136850   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1136851   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1136852   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1136853   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1136854   +end;
MPRINT(EM_DIAGRAM):   end;
1136855   +else do;
MPRINT(EM_DIAGRAM):   else do;
1136856   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1136857   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1136858   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1136859   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1136860   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1136861   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1136862   +   end;
MPRINT(EM_DIAGRAM):   end;
1136863   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1136864   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1136865   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1136866   +   end;
MPRINT(EM_DIAGRAM):   end;
1136867   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1136868   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1136869   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1136870   +   end;
MPRINT(EM_DIAGRAM):   end;
1136871   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1136872   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1136873   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1136874   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1136875   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1136876   +   end;
MPRINT(EM_DIAGRAM):   end;
1136877   +end;
MPRINT(EM_DIAGRAM):   end;
1136878   +
1136879   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136880   +*** Checking missing input Interval
1136881   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1136882   +
1136883   +IF NMISS(
1136884   +   AcceptedCmpTotal ,
1136885   +   Frq ,
1136886   +   Income ,
1136887   +   Mnt ,
1136888   +   MntGoldProds ,
1136889   +   MntMeatProducts ,
1136890   +   MntWines ,
1136891   +   NumDistPurchases ,
1136892   +   RFMstat ,
1136893   +   RMntFrq ,
1136894   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1136895   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1136896   +
1136897   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1136898   +END;
MPRINT(EM_DIAGRAM):   END;
1136899   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136900   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1136901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136902   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1136903   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1136904   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1136905   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1136906   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1136907   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1136908   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1136909   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1136910   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1136911   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1136912   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1136913   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1136914   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1136915   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1136916   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1136917   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1136918   +END;
MPRINT(EM_DIAGRAM):   END;
1136919   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1136920   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1136921   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1136922   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1136923   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1136924   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1136925   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1136926   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1136927   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1136928   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1136929   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1136930   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1136931   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1136932   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1136933   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1136934   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1136935   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1136936   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1136937   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1136938   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1136939   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1136940   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1136941   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1136942   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1136943   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1136944   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1136945   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1136946   +END;
MPRINT(EM_DIAGRAM):   END;
1136947   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136948   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1136949   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136950   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136951   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1136952   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136953   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1136954   +   H1x1_1  =    -0.38956319781905 * S_AcceptedCmpTotal
1136955   +          +    -0.08624585416733 * S_Frq  +     0.14990044515556 * S_Income
1136956   +          +     1.26905422062144 * S_Mnt  +    -0.05830961868093 *
1136957   +        S_MntGoldProds  +    -0.45655804707903 * S_MntMeatProducts
1136958   +          +    -0.29008121030195 * S_MntWines  +    -0.52580257849932 *
1136959   +        S_NumDistPurchases  +     -0.1481404693781 * S_RFMstat
1136960   +          +    -0.49319351834455 * S_RMntFrq  +     0.54249594661515 *
1136961   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.38956319781905 * S_AcceptedCmpTotal + -0.08624585416733 * 
S_Frq + 0.14990044515556 * S_Income + 1.26905422062144 * S_Mnt + -0.05830961868093 * 
S_MntGoldProds + -0.45655804707903 * S_MntMeatProducts + -0.29008121030195 * S_MntWines + 
-0.52580257849932 * S_NumDistPurchases + -0.1481404693781 * S_RFMstat + -0.49319351834455 * 
S_RMntFrq + 0.54249594661515 * S_Recency ;
1136962   +   H1x1_2  =     0.38779821527892 * S_AcceptedCmpTotal
1136963   +          +    -1.22315175769362 * S_Frq  +      1.1802985172513 * S_Income
1136964   +          +     2.08508390361851 * S_Mnt  +     0.42839460332296 *
1136965   +        S_MntGoldProds  +      0.9001009517595 * S_MntMeatProducts
1136966   +          +     0.43882453107711 * S_MntWines  +    -0.77730415774439 *
1136967   +        S_NumDistPurchases  +    -0.48791819347803 * S_RFMstat
1136968   +          +    -0.74366268198551 * S_RMntFrq  +    -0.17482075484114 *
1136969   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.38779821527892 * S_AcceptedCmpTotal + -1.22315175769362 * 
S_Frq + 1.1802985172513 * S_Income + 2.08508390361851 * S_Mnt + 0.42839460332296 * 
S_MntGoldProds + 0.9001009517595 * S_MntMeatProducts + 0.43882453107711 * S_MntWines + 
-0.77730415774439 * S_NumDistPurchases + -0.48791819347803 * S_RFMstat + -0.74366268198551 * 
S_RMntFrq + -0.17482075484114 * S_Recency ;
1136970   +   H1x1_3  =    -0.22134549179782 * S_AcceptedCmpTotal
1136971   +          +    -0.06178114920397 * S_Frq  +     -1.4524474173679 * S_Income
1136972   +          +    -7.85805111281271 * S_Mnt  +    -0.25260256377303 *
1136973   +        S_MntGoldProds  +     2.24650170262612 * S_MntMeatProducts
1136974   +          +    -0.28495082016886 * S_MntWines  +     2.83659961242127 *
1136975   +        S_NumDistPurchases  +     0.42067169774523 * S_RFMstat
1136976   +          +     1.71392925516862 * S_RMntFrq  +    -0.09478915012781 *
1136977   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.22134549179782 * S_AcceptedCmpTotal + -0.06178114920397 * 
S_Frq + -1.4524474173679 * S_Income + -7.85805111281271 * S_Mnt + -0.25260256377303 * 
S_MntGoldProds + 2.24650170262612 * S_MntMeatProducts + -0.28495082016886 * S_MntWines + 
2.83659961242127 * S_NumDistPurchases + 0.42067169774523 * S_RFMstat + 1.71392925516862 * 
S_RMntFrq + -0.09478915012781 * S_Recency ;
1136978   +   H1x1_1  = H1x1_1  +    -0.22060541309937 * G_Marital_Status0
1136979   +          +    -0.46692703876881 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.22060541309937 * G_Marital_Status0 + 
-0.46692703876881 * G_Marital_Status1 ;
1136980   +   H1x1_2  = H1x1_2  +     0.47416822018188 * G_Marital_Status0
1136981   +          +     -2.1058284684647 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.47416822018188 * G_Marital_Status0 + 
-2.1058284684647 * G_Marital_Status1 ;
1136982   +   H1x1_3  = H1x1_3  +    -0.44803855270897 * G_Marital_Status0
1136983   +          +     1.41026185304551 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.44803855270897 * G_Marital_Status0 + 
1.41026185304551 * G_Marital_Status1 ;
1136984   +   H1x1_1  =     1.63085271667721 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.63085271667721 + H1x1_1 ;
1136985   +   H1x1_2  =     0.28277859846654 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.28277859846654 + H1x1_2 ;
1136986   +   H1x1_3  =     -1.8890871578635 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.8890871578635 + H1x1_3 ;
1136987   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1136988   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1136989   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1136990   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1136991   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1136992   +END;
MPRINT(EM_DIAGRAM):   END;
1136993   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1136994   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1136995   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1136996   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1136997   +END;
MPRINT(EM_DIAGRAM):   END;
1136998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1136999   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1137000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137001   +
1137002   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1137003   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1137004   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1137005   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1137006   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1137007   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1137008   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1137009   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1137010   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1137011   +end;
MPRINT(EM_DIAGRAM):   end;
1137012   +else do;
MPRINT(EM_DIAGRAM):   else do;
1137013   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1137014   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1137015   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1137016   +   end;
MPRINT(EM_DIAGRAM):   end;
1137017   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1137018   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1137019   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1137020   +   end;
MPRINT(EM_DIAGRAM):   end;
1137021   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1137022   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1137023   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1137024   +   end;
MPRINT(EM_DIAGRAM):   end;
1137025   +end;
MPRINT(EM_DIAGRAM):   end;
1137026   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1137027   +   P_DepVar1  =    -23.6822744769009 * H1x1_1  +     16.0380566008578 * H1x1_2
1137028   +          +     15.3446320724554 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -23.6822744769009 * H1x1_1 + 16.0380566008578 * H1x1_2 + 
15.3446320724554 * H1x1_3 ;
1137029   +   P_DepVar1  =     0.67225691696469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.67225691696469 + P_DepVar1 ;
1137030   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1137031   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1137032   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1137033   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1137034   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1137035   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1137036   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1137037   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1137038   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1137039   +END;
MPRINT(EM_DIAGRAM):   END;
1137040   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1137041   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1137042   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1137043   +END;
MPRINT(EM_DIAGRAM):   END;
1137044   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1137045   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1137046   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1137047   +END;
MPRINT(EM_DIAGRAM):   END;
1137048   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1137049   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1137050   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1137051   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1137052   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1137053   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1137054   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1137055   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137056   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1137057   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137058   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1137059   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1137060   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1137061   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1137062   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1137063   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1137064   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1137065   +END;
MPRINT(EM_DIAGRAM):   END;
1137066   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1137067   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1137068   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1137069   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1137070   +* Renaming variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural32;
1137071   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137072   +* Renaming Posterior variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural32;
1137073   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137074   +drop AutoNeural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_P_DepVar1;
1137075   +AutoNeural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural32_P_DepVar1 = P_DepVar1;
1137076   +drop AutoNeural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_P_DepVar0;
1137077   +AutoNeural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural32_P_DepVar0 = P_DepVar0;
1137078   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137079   +* Renaming _WARN_ variable for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural32;
1137080   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137081   +length AutoNeural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural32_WARN_ $4;
1137082   +drop AutoNeural32_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_WARN_;
1137083   +AutoNeural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural32_WARN_ = _WARN_;
1137084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137085   +* Ensmbl51: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Scoring Code of model 6 of 7;
1137086   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137087   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137088   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1137089   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1137090   +* NODE: AutoNeural31;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural31;
1137091   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137092   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1137093   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1137094   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1137095   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1137096   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1137097   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1137098   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1137099   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1137100   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1137101   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1137102   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1137103   +LENGTH _WARN_ $4
1137104   +      F_DepVar  $ 12
1137105   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1137106   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1137107   +
1137108   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1137109   +
1137110   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1137111   +
1137112   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1137113   +
1137114   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1137115   +
1137116   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1137117   +
1137118   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1137119   +
1137120   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1137121   +
1137122   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1137123   +
1137124   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1137125   +
1137126   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1137127   +
1137128   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1137129   +
1137130   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1137131   +
1137132   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1137133   +
1137134   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1137135   +
1137136   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1137137   +
1137138   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1137139   +
1137140   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1137141   +
1137142   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1137143   +
1137144   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1137145   +
1137146   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1137147   +
1137148   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1137149   +
1137150   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1137151   +
1137152   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1137153   +
1137154   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1137155   +
1137156   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1137157   +
1137158   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1137159   +
1137160   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1137161   +
1137162   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1137163   +
1137164   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1137165   +
1137166   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1137167   +
1137168   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1137169   +
1137170   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1137171   +
1137172   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1137173   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1137174   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1137175   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1137176   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1137177   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1137178   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1137179   +end;
MPRINT(EM_DIAGRAM):   end;
1137180   +else do;
MPRINT(EM_DIAGRAM):   else do;
1137181   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1137182   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1137183   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1137184   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1137185   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1137186   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1137187   +   end;
MPRINT(EM_DIAGRAM):   end;
1137188   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1137189   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1137190   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1137191   +   end;
MPRINT(EM_DIAGRAM):   end;
1137192   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1137193   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1137194   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1137195   +   end;
MPRINT(EM_DIAGRAM):   end;
1137196   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1137197   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1137198   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1137199   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1137200   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1137201   +   end;
MPRINT(EM_DIAGRAM):   end;
1137202   +end;
MPRINT(EM_DIAGRAM):   end;
1137203   +
1137204   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137205   +*** Checking missing input Interval
1137206   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1137207   +
1137208   +IF NMISS(
1137209   +   AcceptedCmpTotal ,
1137210   +   Frq ,
1137211   +   Income ,
1137212   +   Mnt ,
1137213   +   MntGoldProds ,
1137214   +   MntMeatProducts ,
1137215   +   MntWines ,
1137216   +   NumDistPurchases ,
1137217   +   RFMstat ,
1137218   +   RMntFrq ,
1137219   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1137220   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1137221   +
1137222   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1137223   +END;
MPRINT(EM_DIAGRAM):   END;
1137224   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137225   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1137226   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137227   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1137228   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1137229   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1137230   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1137231   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1137232   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1137233   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1137234   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1137235   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1137236   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1137237   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1137238   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1137239   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1137240   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1137241   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1137242   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1137243   +END;
MPRINT(EM_DIAGRAM):   END;
1137244   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1137245   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1137246   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1137247   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1137248   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1137249   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1137250   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1137251   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1137252   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1137253   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1137254   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1137255   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1137256   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1137257   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1137258   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1137259   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1137260   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1137261   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1137262   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1137263   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1137264   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1137265   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1137266   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1137267   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1137268   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1137269   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1137270   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1137271   +END;
MPRINT(EM_DIAGRAM):   END;
1137272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137273   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1137274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137276   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1137277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137278   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1137279   +   H1x1_1  =     0.03659823017812 * S_AcceptedCmpTotal
1137280   +          +    -1.19763341876145 * S_Frq  +     0.81238202822952 * S_Income
1137281   +          +     1.88011676145119 * S_Mnt  +     0.17620967209108 *
1137282   +        S_MntGoldProds  +    -0.01645582313184 * S_MntMeatProducts
1137283   +          +     0.51002049519212 * S_MntWines  +     0.25222197723244 *
1137284   +        S_NumDistPurchases  +     0.28056722928561 * S_RFMstat
1137285   +          +    -1.12243193103334 * S_RMntFrq  +    -0.37511560424314 *
1137286   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.03659823017812 * S_AcceptedCmpTotal + -1.19763341876145 * 
S_Frq + 0.81238202822952 * S_Income + 1.88011676145119 * S_Mnt + 0.17620967209108 * 
S_MntGoldProds + -0.01645582313184 * S_MntMeatProducts + 0.51002049519212 * S_MntWines + 
0.25222197723244 * S_NumDistPurchases + 0.28056722928561 * S_RFMstat + -1.12243193103334 * 
S_RMntFrq + -0.37511560424314 * S_Recency ;
1137287   +   H1x1_2  =     0.18983412995843 * S_AcceptedCmpTotal
1137288   +          +    -0.36018162246349 * S_Frq  +     0.01068760327542 * S_Income
1137289   +          +    -0.89719147415619 * S_Mnt  +     0.11241727599926 *
1137290   +        S_MntGoldProds  +     0.64236815353055 * S_MntMeatProducts
1137291   +          +     0.36278145113777 * S_MntWines  +     0.34466813565445 *
1137292   +        S_NumDistPurchases  +     0.05359534034679 * S_RFMstat
1137293   +          +     0.02704700607418 * S_RMntFrq  +     -0.3718472688023 *
1137294   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.18983412995843 * S_AcceptedCmpTotal + -0.36018162246349 * 
S_Frq + 0.01068760327542 * S_Income + -0.89719147415619 * S_Mnt + 0.11241727599926 * 
S_MntGoldProds + 0.64236815353055 * S_MntMeatProducts + 0.36278145113777 * S_MntWines + 
0.34466813565445 * S_NumDistPurchases + 0.05359534034679 * S_RFMstat + 0.02704700607418 * 
S_RMntFrq + -0.3718472688023 * S_Recency ;
1137295   +   H1x1_1  = H1x1_1  +     0.40642305557546 * G_Marital_Status0
1137296   +          +     -0.0248646279252 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.40642305557546 * G_Marital_Status0 + 
-0.0248646279252 * G_Marital_Status1 ;
1137297   +   H1x1_2  = H1x1_2  +     0.16115803721995 * G_Marital_Status0
1137298   +          +     0.05904755469144 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.16115803721995 * G_Marital_Status0 + 
0.05904755469144 * G_Marital_Status1 ;
1137299   +   H1x1_1  =     0.33463349044957 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.33463349044957 + H1x1_1 ;
1137300   +   H1x1_2  =    -3.62976809107266 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.62976809107266 + H1x1_2 ;
1137301   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1137302   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1137303   +END;
MPRINT(EM_DIAGRAM):   END;
1137304   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1137305   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1137306   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1137307   +END;
MPRINT(EM_DIAGRAM):   END;
1137308   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137309   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1137310   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137311   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1137312   +   H1x2_1  =    -0.36010169192455 * S_AcceptedCmpTotal
1137313   +          +    -0.59887603386433 * S_Frq  +     0.50990837522658 * S_Income
1137314   +          +    -1.11866059151852 * S_Mnt  +     0.36285188228582 *
1137315   +        S_MntGoldProds  +     1.22856170475832 * S_MntMeatProducts
1137316   +          +     1.46123404932164 * S_MntWines  +    -0.01510122045686 *
1137317   +        S_NumDistPurchases  +     0.53310564732407 * S_RFMstat
1137318   +          +    -0.40691094193511 * S_RMntFrq  +     0.45756644061361 *
1137319   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.36010169192455 * S_AcceptedCmpTotal + -0.59887603386433 * 
S_Frq + 0.50990837522658 * S_Income + -1.11866059151852 * S_Mnt + 0.36285188228582 * 
S_MntGoldProds + 1.22856170475832 * S_MntMeatProducts + 1.46123404932164 * S_MntWines + 
-0.01510122045686 * S_NumDistPurchases + 0.53310564732407 * S_RFMstat + -0.40691094193511 * 
S_RMntFrq + 0.45756644061361 * S_Recency ;
1137320   +   H1x2_2  =    -0.17932261343465 * S_AcceptedCmpTotal
1137321   +          +     1.20080978426162 * S_Frq  +     0.18118647708641 * S_Income
1137322   +          +     0.31901116297924 * S_Mnt  +     0.02135897416621 *
1137323   +        S_MntGoldProds  +    -1.12534829348468 * S_MntMeatProducts
1137324   +          +     0.57649851666461 * S_MntWines  +    -1.46542585484816 *
1137325   +        S_NumDistPurchases  +    -0.20960777623629 * S_RFMstat
1137326   +          +      0.6962031545587 * S_RMntFrq  +     0.00840421006739 *
1137327   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.17932261343465 * S_AcceptedCmpTotal + 1.20080978426162 * 
S_Frq + 0.18118647708641 * S_Income + 0.31901116297924 * S_Mnt + 0.02135897416621 * 
S_MntGoldProds + -1.12534829348468 * S_MntMeatProducts + 0.57649851666461 * S_MntWines + 
-1.46542585484816 * S_NumDistPurchases + -0.20960777623629 * S_RFMstat + 0.6962031545587 * 
S_RMntFrq + 0.00840421006739 * S_Recency ;
1137328   +   H1x2_1  = H1x2_1  +    -0.05195034052296 * G_Marital_Status0
1137329   +          +     -0.2774675863976 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.05195034052296 * G_Marital_Status0 + 
-0.2774675863976 * G_Marital_Status1 ;
1137330   +   H1x2_2  = H1x2_2  +     0.01901604294952 * G_Marital_Status0
1137331   +          +      -0.277144006775 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.01901604294952 * G_Marital_Status0 + -0.277144006775 
* G_Marital_Status1 ;
1137332   +   H1x2_1  =     1.53233871423223 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.53233871423223 + H1x2_1 ;
1137333   +   H1x2_2  =     1.35238678006556 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.35238678006556 + H1x2_2 ;
1137334   +   H1x2_1  = SIN(H1x2_1 );
MPRINT(EM_DIAGRAM):   H1x2_1 = SIN(H1x2_1 );
1137335   +   H1x2_2  = SIN(H1x2_2 );
MPRINT(EM_DIAGRAM):   H1x2_2 = SIN(H1x2_2 );
1137336   +END;
MPRINT(EM_DIAGRAM):   END;
1137337   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1137338   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1137339   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1137340   +END;
MPRINT(EM_DIAGRAM):   END;
1137341   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137342   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1137343   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137344   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1137345   +   H1x3_1  =     1.63523210720409 * S_AcceptedCmpTotal
1137346   +          +     0.41751349520438 * S_Frq  +    -0.87449723255309 * S_Income
1137347   +          +    -0.47825070320724 * S_Mnt  +     0.76630810205636 *
1137348   +        S_MntGoldProds  +    -0.35835365889925 * S_MntMeatProducts
1137349   +          +    -1.27333688175297 * S_MntWines  +    -1.52770581313638 *
1137350   +        S_NumDistPurchases  +     0.86851574498866 * S_RFMstat
1137351   +          +     0.84614746872207 * S_RMntFrq  +    -1.64268632744477 *
1137352   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.63523210720409 * S_AcceptedCmpTotal + 0.41751349520438 * 
S_Frq + -0.87449723255309 * S_Income + -0.47825070320724 * S_Mnt + 0.76630810205636 * 
S_MntGoldProds + -0.35835365889925 * S_MntMeatProducts + -1.27333688175297 * S_MntWines + 
-1.52770581313638 * S_NumDistPurchases + 0.86851574498866 * S_RFMstat + 0.84614746872207 * 
S_RMntFrq + -1.64268632744477 * S_Recency ;
1137353   +   H1x3_2  =    -0.18638529120439 * S_AcceptedCmpTotal
1137354   +          +     0.76011175462816 * S_Frq  +     0.58495336465132 * S_Income
1137355   +          +     0.65856698208574 * S_Mnt  +     0.68781212622472 *
1137356   +        S_MntGoldProds  +    -1.09375532907934 * S_MntMeatProducts
1137357   +          +     1.39481639500189 * S_MntWines  +     0.26914802103737 *
1137358   +        S_NumDistPurchases  +    -2.20511156805519 * S_RFMstat
1137359   +          +     1.66705142994155 * S_RMntFrq  +    -0.36249885315985 *
1137360   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.18638529120439 * S_AcceptedCmpTotal + 0.76011175462816 * 
S_Frq + 0.58495336465132 * S_Income + 0.65856698208574 * S_Mnt + 0.68781212622472 * 
S_MntGoldProds + -1.09375532907934 * S_MntMeatProducts + 1.39481639500189 * S_MntWines + 
0.26914802103737 * S_NumDistPurchases + -2.20511156805519 * S_RFMstat + 1.66705142994155 * 
S_RMntFrq + -0.36249885315985 * S_Recency ;
1137361   +   H1x3_1  = H1x3_1  +     -0.2579393569494 * G_Marital_Status0
1137362   +          +    -1.04614665932456 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.2579393569494 * G_Marital_Status0 + 
-1.04614665932456 * G_Marital_Status1 ;
1137363   +   H1x3_2  = H1x3_2  +    -1.03096078089306 * G_Marital_Status0
1137364   +          +    -0.71974289565489 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.03096078089306 * G_Marital_Status0 + 
-0.71974289565489 * G_Marital_Status1 ;
1137365   +   H1x3_1  =    -0.91456189694636 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.91456189694636 + H1x3_1 ;
1137366   +   H1x3_2  =    -0.51701043559885 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.51701043559885 + H1x3_2 ;
1137367   +   H1x3_1  = SIN(H1x3_1 );
MPRINT(EM_DIAGRAM):   H1x3_1 = SIN(H1x3_1 );
1137368   +   H1x3_2  = SIN(H1x3_2 );
MPRINT(EM_DIAGRAM):   H1x3_2 = SIN(H1x3_2 );
1137369   +END;
MPRINT(EM_DIAGRAM):   END;
1137370   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1137371   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1137372   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1137373   +END;
MPRINT(EM_DIAGRAM):   END;
1137374   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137375   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1137376   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137377   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1137378   +   H2x1_1  =     1.47132066677712 * H1x1_1  +      1.2723487532385 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.47132066677712 * H1x1_1 + 1.2723487532385 * H1x1_2 ;
1137379   +   H2x1_2  =     1.58711243971308 * H1x1_1  +      6.5189759089623 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.58711243971308 * H1x1_1 + 6.5189759089623 * H1x1_2 ;
1137380   +   H2x1_1  = H2x1_1  +     1.30878911727231 * H1x2_1
1137381   +          +     2.19496661698373 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.30878911727231 * H1x2_1 + 2.19496661698373 * H1x2_2 ;
1137382   +   H2x1_2  = H2x1_2  +    -3.82744270061369 * H1x2_1
1137383   +          +      1.3090956402929 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -3.82744270061369 * H1x2_1 + 1.3090956402929 * H1x2_2 ;
1137384   +   H2x1_1  = H2x1_1  +    -0.97307968271784 * H1x3_1
1137385   +          +     0.17025511053322 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.97307968271784 * H1x3_1 + 0.17025511053322 * H1x3_2 
;
1137386   +   H2x1_2  = H2x1_2  +    -0.00685159977192 * H1x3_1
1137387   +          +     0.53377830648041 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.00685159977192 * H1x3_1 + 0.53377830648041 * H1x3_2 
;
1137388   +   H2x1_1  =    -2.88828567261654 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -2.88828567261654 + H2x1_1 ;
1137389   +   H2x1_2  =    -0.63666932052712 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.63666932052712 + H2x1_2 ;
1137390   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1137391   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1137392   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1137393   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1137394   +END;
MPRINT(EM_DIAGRAM):   END;
1137395   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1137396   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1137397   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1137398   +END;
MPRINT(EM_DIAGRAM):   END;
1137399   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137400   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1137401   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137402   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1137403   +   H2x2_1  =     -0.1591646734645 * H1x1_1  +     2.50898584287812 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.1591646734645 * H1x1_1 + 2.50898584287812 * H1x1_2 ;
1137404   +   H2x2_2  =    -1.04022138862095 * H1x1_1  +     -3.2120641538371 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.04022138862095 * H1x1_1 + -3.2120641538371 * H1x1_2 ;
1137405   +   H2x2_1  = H2x2_1  +     0.95364577994168 * H1x2_1
1137406   +          +     0.39917449615996 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.95364577994168 * H1x2_1 + 0.39917449615996 * H1x2_2 ;
1137407   +   H2x2_2  = H2x2_2  +     0.34367752685876 * H1x2_1
1137408   +          +    -0.43345610313251 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.34367752685876 * H1x2_1 + -0.43345610313251 * H1x2_2 
;
1137409   +   H2x2_1  = H2x2_1  +    -0.21053791455319 * H1x3_1
1137410   +          +     1.30320774323126 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.21053791455319 * H1x3_1 + 1.30320774323126 * H1x3_2 
;
1137411   +   H2x2_2  = H2x2_2  +    -0.56776778702573 * H1x3_1
1137412   +          +     0.23307461428861 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.56776778702573 * H1x3_1 + 0.23307461428861 * H1x3_2 
;
1137413   +   H2x2_1  =    -0.57800274966727 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.57800274966727 + H2x2_1 ;
1137414   +   H2x2_2  =     -0.3490585254981 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.3490585254981 + H2x2_2 ;
1137415   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1137416   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1137417   +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
1137418   +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
1137419   +END;
MPRINT(EM_DIAGRAM):   END;
1137420   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1137421   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1137422   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1137423   +END;
MPRINT(EM_DIAGRAM):   END;
1137424   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137425   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1137426   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137427   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1137428   +   H3x1_1  =     2.93892662286754 * H2x1_1  +     4.69530667636314 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 2.93892662286754 * H2x1_1 + 4.69530667636314 * H2x1_2 ;
1137429   +   H3x1_1  = H3x1_1  +     0.63147427004529 * H2x2_1
1137430   +          +    -3.38971951524722 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 0.63147427004529 * H2x2_1 + -3.38971951524722 * H2x2_2 
;
1137431   +   H3x1_1  =    -2.10378320265168 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -2.10378320265168 + H3x1_1 ;
1137432   +   H3x1_2  = 0;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0;
1137433   +   _MAX_ = MAX (H3x1_1 , H3x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 );
1137434   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1137435   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
1137436   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
1137437   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
1137438   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
1137439   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
1137440   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
1137441   +END;
MPRINT(EM_DIAGRAM):   END;
1137442   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1137443   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1137444   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1137445   +END;
MPRINT(EM_DIAGRAM):   END;
1137446   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137447   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1137448   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137449   +
1137450   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1137451   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1137452   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1137453   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1137454   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1137455   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1137456   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1137457   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1137458   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1137459   +end;
MPRINT(EM_DIAGRAM):   end;
1137460   +else do;
MPRINT(EM_DIAGRAM):   else do;
1137461   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1137462   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1137463   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1137464   +   end;
MPRINT(EM_DIAGRAM):   end;
1137465   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1137466   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1137467   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1137468   +   end;
MPRINT(EM_DIAGRAM):   end;
1137469   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1137470   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1137471   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1137472   +   end;
MPRINT(EM_DIAGRAM):   end;
1137473   +end;
MPRINT(EM_DIAGRAM):   end;
1137474   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1137475   +   P_DepVar1  =    -8.80200545202031 * H3x1_1  +    -0.19646708431763 * H3x1_2
1137476   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -8.80200545202031 * H3x1_1 + -0.19646708431763 * H3x1_2 ;
1137477   +   P_DepVar1  =     3.75158164611687 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.75158164611687 + P_DepVar1 ;
1137478   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1137479   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1137480   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1137481   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1137482   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1137483   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1137484   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1137485   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1137486   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1137487   +END;
MPRINT(EM_DIAGRAM):   END;
1137488   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1137489   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1137490   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1137491   +END;
MPRINT(EM_DIAGRAM):   END;
1137492   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1137493   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1137494   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1137495   +END;
MPRINT(EM_DIAGRAM):   END;
1137496   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1137497   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1137498   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1137499   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1137500   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1137501   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1137502   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1137503   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137504   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1137505   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137506   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1137507   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1137508   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1137509   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1137510   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1137511   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1137512   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1137513   +END;
MPRINT(EM_DIAGRAM):   END;
1137514   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1137515   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1137516   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1137517   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1137518   +* Renaming variables for AutoNeural31;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural31;
1137519   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137520   +* Renaming Posterior variables for AutoNeural31;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural31;
1137521   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137522   +drop AutoNeural31_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural31_P_DepVar1;
1137523   +AutoNeural31_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural31_P_DepVar1 = P_DepVar1;
1137524   +drop AutoNeural31_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural31_P_DepVar0;
1137525   +AutoNeural31_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural31_P_DepVar0 = P_DepVar0;
1137526   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137527   +* Renaming _WARN_ variable for AutoNeural31;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural31;
1137528   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137529   +length AutoNeural31_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural31_WARN_ $4;
1137530   +drop AutoNeural31_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural31_WARN_;
1137531   +AutoNeural31_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural31_WARN_ = _WARN_;
1137532   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137533   +* Ensmbl51: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Scoring Code of model 7 of 7;
1137534   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137535   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137536   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1137537   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1137538   +* NODE: AutoNeural30;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural30;
1137539   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137540   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1137541   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1137542   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1137543   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1137544   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1137545   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1137546   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1137547   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1137548   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1137549   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1137550   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1137551   +LENGTH _WARN_ $4
1137552   +      F_DepVar  $ 12
1137553   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1137554   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1137555   +
1137556   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1137557   +
1137558   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1137559   +
1137560   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1137561   +
1137562   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1137563   +
1137564   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1137565   +
1137566   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1137567   +
1137568   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1137569   +
1137570   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1137571   +
1137572   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1137573   +
1137574   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1137575   +
1137576   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1137577   +
1137578   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1137579   +
1137580   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1137581   +
1137582   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1137583   +
1137584   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1137585   +
1137586   +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
1137587   +
1137588   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1137589   +
1137590   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1137591   +
1137592   +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
1137593   +
1137594   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1137595   +
1137596   +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
1137597   +
1137598   +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
1137599   +
1137600   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1137601   +
1137602   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1137603   +
1137604   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1137605   +
1137606   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1137607   +
1137608   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1137609   +
1137610   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1137611   +
1137612   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1137613   +
1137614   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1137615   +
1137616   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1137617   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1137618   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1137619   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1137620   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1137621   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1137622   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1137623   +end;
MPRINT(EM_DIAGRAM):   end;
1137624   +else do;
MPRINT(EM_DIAGRAM):   else do;
1137625   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1137626   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1137627   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1137628   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1137629   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1137630   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1137631   +   end;
MPRINT(EM_DIAGRAM):   end;
1137632   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1137633   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1137634   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1137635   +   end;
MPRINT(EM_DIAGRAM):   end;
1137636   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1137637   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1137638   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1137639   +   end;
MPRINT(EM_DIAGRAM):   end;
1137640   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1137641   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1137642   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1137643   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1137644   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1137645   +   end;
MPRINT(EM_DIAGRAM):   end;
1137646   +end;
MPRINT(EM_DIAGRAM):   end;
1137647   +
1137648   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137649   +*** Checking missing input Interval
1137650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1137651   +
1137652   +IF NMISS(
1137653   +   AcceptedCmpTotal ,
1137654   +   Frq ,
1137655   +   Income ,
1137656   +   Mnt ,
1137657   +   MntGoldProds ,
1137658   +   MntMeatProducts ,
1137659   +   MntWines ,
1137660   +   NumDistPurchases ,
1137661   +   RFMstat ,
1137662   +   RMntFrq ,
1137663   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1137664   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1137665   +
1137666   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1137667   +END;
MPRINT(EM_DIAGRAM):   END;
1137668   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137669   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1137670   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137671   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1137672   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1137673   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1137674   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1137675   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1137676   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1137677   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1137678   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1137679   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1137680   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1137681   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1137682   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1137683   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1137684   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1137685   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1137686   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1137687   +END;
MPRINT(EM_DIAGRAM):   END;
1137688   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1137689   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1137690   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1137691   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1137692   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1137693   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1137694   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1137695   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1137696   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1137697   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1137698   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1137699   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1137700   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1137701   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1137702   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1137703   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1137704   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1137705   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1137706   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1137707   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1137708   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1137709   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1137710   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1137711   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1137712   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1137713   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1137714   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1137715   +END;
MPRINT(EM_DIAGRAM):   END;
1137716   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137717   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1137718   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137719   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137720   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1137721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137722   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1137723   +   H1x1_1  =     0.04025840082513 * S_AcceptedCmpTotal
1137724   +          +     0.06318752729093 * S_Frq  +    -1.29545791179409 * S_Income
1137725   +          +    -7.11030940481191 * S_Mnt  +     0.43390451556969 *
1137726   +        S_MntGoldProds  +     1.69733563869673 * S_MntMeatProducts
1137727   +          +     0.48225589030087 * S_MntWines  +     2.50429846731068 *
1137728   +        S_NumDistPurchases  +     0.19831933540707 * S_RFMstat
1137729   +          +     0.96752741277283 * S_RMntFrq  +    -0.27394913723816 *
1137730   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.04025840082513 * S_AcceptedCmpTotal + 0.06318752729093 * 
S_Frq + -1.29545791179409 * S_Income + -7.11030940481191 * S_Mnt + 0.43390451556969 * 
S_MntGoldProds + 1.69733563869673 * S_MntMeatProducts + 0.48225589030087 * S_MntWines + 
2.50429846731068 * S_NumDistPurchases + 0.19831933540707 * S_RFMstat + 0.96752741277283 * 
S_RMntFrq + -0.27394913723816 * S_Recency ;
1137731   +   H1x1_1  = H1x1_1  +    -0.13186660711464 * G_Marital_Status0
1137732   +          +     0.76507926337086 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.13186660711464 * G_Marital_Status0 + 
0.76507926337086 * G_Marital_Status1 ;
1137733   +   H1x1_1  =    -2.07751077372903 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.07751077372903 + H1x1_1 ;
1137734   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1137735   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1137736   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1137737   +END;
MPRINT(EM_DIAGRAM):   END;
1137738   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1137739   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1137740   +END;
MPRINT(EM_DIAGRAM):   END;
1137741   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137742   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1137743   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137744   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1137745   +   H1x2_1  =     0.04623108287373 * S_AcceptedCmpTotal
1137746   +          +     0.51673349328259 * S_Frq  +    -0.55409697473564 * S_Income
1137747   +          +    -1.80152141029664 * S_Mnt  +    -0.01192709316085 *
1137748   +        S_MntGoldProds  +    -1.08887322486716 * S_MntMeatProducts
1137749   +          +    -0.54592829528894 * S_MntWines  +     0.87903819952137 *
1137750   +        S_NumDistPurchases  +     0.15549845875066 * S_RFMstat
1137751   +          +     0.64330086736687 * S_RMntFrq  +    -0.34615492895156 *
1137752   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.04623108287373 * S_AcceptedCmpTotal + 0.51673349328259 * 
S_Frq + -0.55409697473564 * S_Income + -1.80152141029664 * S_Mnt + -0.01192709316085 * 
S_MntGoldProds + -1.08887322486716 * S_MntMeatProducts + -0.54592829528894 * S_MntWines + 
0.87903819952137 * S_NumDistPurchases + 0.15549845875066 * S_RFMstat + 0.64330086736687 * 
S_RMntFrq + -0.34615492895156 * S_Recency ;
1137753   +   H1x2_1  = H1x2_1  +     0.04272112278258 * G_Marital_Status0
1137754   +          +     0.52128005949051 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.04272112278258 * G_Marital_Status0 + 
0.52128005949051 * G_Marital_Status1 ;
1137755   +   H1x2_1  =    -1.26211132425318 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.26211132425318 + H1x2_1 ;
1137756   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1137757   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1137758   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1137759   +END;
MPRINT(EM_DIAGRAM):   END;
1137760   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1137761   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1137762   +END;
MPRINT(EM_DIAGRAM):   END;
1137763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137764   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1137765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137766   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1137767   +   H1x3_1  =    -0.31931196892076 * S_AcceptedCmpTotal
1137768   +          +     0.88013014607652 * S_Frq  +       2.380671405121 * S_Income
1137769   +          +    -1.76438631408259 * S_Mnt  +    -0.88002382547081 *
1137770   +        S_MntGoldProds  +     3.22143288077158 * S_MntMeatProducts
1137771   +          +    -1.46872497431142 * S_MntWines  +     4.48983574481035 *
1137772   +        S_NumDistPurchases  +     1.49229101598701 * S_RFMstat
1137773   +          +     0.86000773065844 * S_RMntFrq  +     0.41345680894813 *
1137774   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.31931196892076 * S_AcceptedCmpTotal + 0.88013014607652 * 
S_Frq + 2.380671405121 * S_Income + -1.76438631408259 * S_Mnt + -0.88002382547081 * 
S_MntGoldProds + 3.22143288077158 * S_MntMeatProducts + -1.46872497431142 * S_MntWines + 
4.48983574481035 * S_NumDistPurchases + 1.49229101598701 * S_RFMstat + 0.86000773065844 * 
S_RMntFrq + 0.41345680894813 * S_Recency ;
1137775   +   H1x3_1  = H1x3_1  +     0.24244728138592 * G_Marital_Status0
1137776   +          +     0.68199092237732 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.24244728138592 * G_Marital_Status0 + 
0.68199092237732 * G_Marital_Status1 ;
1137777   +   H1x3_1  =      0.8344057531016 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.8344057531016 + H1x3_1 ;
1137778   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1137779   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1137780   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1137781   +END;
MPRINT(EM_DIAGRAM):   END;
1137782   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1137783   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1137784   +END;
MPRINT(EM_DIAGRAM):   END;
1137785   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137786   +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
1137787   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137788   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1137789   +   H1x4_1  =    -0.13659878639954 * S_AcceptedCmpTotal
1137790   +          +     0.45428559765776 * S_Frq  +    -0.42693519984843 * S_Income
1137791   +          +      1.1792020785091 * S_Mnt  +     0.71939074066077 *
1137792   +        S_MntGoldProds  +    -0.72620231508443 * S_MntMeatProducts
1137793   +          +    -0.32426637270285 * S_MntWines  +    -0.38988807626314 *
1137794   +        S_NumDistPurchases  +    -3.02140616024044 * S_RFMstat
1137795   +          +     -0.8223455835322 * S_RMntFrq  +     0.94450643717764 *
1137796   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.13659878639954 * S_AcceptedCmpTotal + 0.45428559765776 * 
S_Frq + -0.42693519984843 * S_Income + 1.1792020785091 * S_Mnt + 0.71939074066077 * 
S_MntGoldProds + -0.72620231508443 * S_MntMeatProducts + -0.32426637270285 * S_MntWines + 
-0.38988807626314 * S_NumDistPurchases + -3.02140616024044 * S_RFMstat + -0.8223455835322 * 
S_RMntFrq + 0.94450643717764 * S_Recency ;
1137797   +   H1x4_1  = H1x4_1  +    -0.12208204500004 * G_Marital_Status0
1137798   +          +    -0.36246978080124 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + -0.12208204500004 * G_Marital_Status0 + 
-0.36246978080124 * G_Marital_Status1 ;
1137799   +   H1x4_1  =    -0.95371898342722 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.95371898342722 + H1x4_1 ;
1137800   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1137801   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1137802   +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
1137803   +END;
MPRINT(EM_DIAGRAM):   END;
1137804   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1137805   +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
1137806   +END;
MPRINT(EM_DIAGRAM):   END;
1137807   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137808   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1137809   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137810   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1137811   +   H2x1_1  =    -5.17307699680657 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -5.17307699680657 * H1x1_1 ;
1137812   +   H2x1_1  = H2x1_1  +     5.68206219040914 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 5.68206219040914 * H1x2_1 ;
1137813   +   H2x1_1  = H2x1_1  +      0.0671760867147 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.0671760867147 * H1x3_1 ;
1137814   +   H2x1_1  = H2x1_1  +     1.77797879568099 * H1x4_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.77797879568099 * H1x4_1 ;
1137815   +   H2x1_1  =    -1.18533244144823 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.18533244144823 + H2x1_1 ;
1137816   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
1137817   +END;
MPRINT(EM_DIAGRAM):   END;
1137818   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1137819   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1137820   +END;
MPRINT(EM_DIAGRAM):   END;
1137821   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137822   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1137823   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137824   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1137825   +   H2x2_1  =    -0.10427732572046 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.10427732572046 * H1x1_1 ;
1137826   +   H2x2_1  = H2x2_1  +    -2.43600502591825 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -2.43600502591825 * H1x2_1 ;
1137827   +   H2x2_1  = H2x2_1  +    -2.36291758854448 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -2.36291758854448 * H1x3_1 ;
1137828   +   H2x2_1  = H2x2_1  +    -0.21725276506237 * H1x4_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.21725276506237 * H1x4_1 ;
1137829   +   H2x2_1  =     -1.6479184469931 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -1.6479184469931 + H2x2_1 ;
1137830   +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
1137831   +END;
MPRINT(EM_DIAGRAM):   END;
1137832   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1137833   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1137834   +END;
MPRINT(EM_DIAGRAM):   END;
1137835   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137836   +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
1137837   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137838   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1137839   +   H2x3_1  =    -2.55881911263862 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -2.55881911263862 * H1x1_1 ;
1137840   +   H2x3_1  = H2x3_1  +    -1.36800479963026 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.36800479963026 * H1x2_1 ;
1137841   +   H2x3_1  = H2x3_1  +     2.49318998831913 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 2.49318998831913 * H1x3_1 ;
1137842   +   H2x3_1  = H2x3_1  +     -0.2723650813761 * H1x4_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -0.2723650813761 * H1x4_1 ;
1137843   +   H2x3_1  =    -2.02002422056859 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -2.02002422056859 + H2x3_1 ;
1137844   +   H2x3_1  = SIN(H2x3_1 );
MPRINT(EM_DIAGRAM):   H2x3_1 = SIN(H2x3_1 );
1137845   +END;
MPRINT(EM_DIAGRAM):   END;
1137846   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1137847   +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
1137848   +END;
MPRINT(EM_DIAGRAM):   END;
1137849   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137850   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1137851   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137852   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1137853   +   H3x1_1  =    -5.17928987039105 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -5.17928987039105 * H2x1_1 ;
1137854   +   H3x1_1  = H3x1_1  +    -4.99188815628878 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -4.99188815628878 * H2x2_1 ;
1137855   +   H3x1_1  = H3x1_1  +    -1.59478766396441 * H2x3_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.59478766396441 * H2x3_1 ;
1137856   +   H3x1_1  =    -1.17125580012514 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -1.17125580012514 + H3x1_1 ;
1137857   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1137858   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1137859   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
1137860   +END;
MPRINT(EM_DIAGRAM):   END;
1137861   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1137862   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1137863   +END;
MPRINT(EM_DIAGRAM):   END;
1137864   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137865   +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
1137866   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137867   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1137868   +   H3x2_1  =       2.158894329803 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 2.158894329803 * H2x1_1 ;
1137869   +   H3x2_1  = H3x2_1  +    -2.32757193457059 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -2.32757193457059 * H2x2_1 ;
1137870   +   H3x2_1  = H3x2_1  +    -6.00752921212942 * H2x3_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -6.00752921212942 * H2x3_1 ;
1137871   +   H3x2_1  =    -0.08802993131411 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -0.08802993131411 + H3x2_1 ;
1137872   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1137873   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1137874   +   H3x2_1  = 1.0 / (1.0 + EXP(MIN( - H3x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x2_1 = 1.0 / (1.0 + EXP(MIN( - H3x2_1 , _EXP_BAR)));
1137875   +END;
MPRINT(EM_DIAGRAM):   END;
1137876   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1137877   +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
1137878   +END;
MPRINT(EM_DIAGRAM):   END;
1137879   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137880   +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
1137881   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137882   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1137883   +   H4x1_1  =      7.3411593355967 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 7.3411593355967 * H3x1_1 ;
1137884   +   H4x1_1  = H4x1_1  +    -3.06647078805944 * H3x2_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -3.06647078805944 * H3x2_1 ;
1137885   +   H4x1_1  =    -1.39824841795123 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = -1.39824841795123 + H4x1_1 ;
1137886   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1137887   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1137888   +   H4x1_1  = 1.0 / (1.0 + EXP(MIN( - H4x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H4x1_1 = 1.0 / (1.0 + EXP(MIN( - H4x1_1 , _EXP_BAR)));
1137889   +END;
MPRINT(EM_DIAGRAM):   END;
1137890   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1137891   +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
1137892   +END;
MPRINT(EM_DIAGRAM):   END;
1137893   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137894   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1137895   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137896   +
1137897   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1137898   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1137899   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1137900   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1137901   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1137902   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1137903   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1137904   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1137905   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1137906   +end;
MPRINT(EM_DIAGRAM):   end;
1137907   +else do;
MPRINT(EM_DIAGRAM):   else do;
1137908   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1137909   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1137910   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1137911   +   end;
MPRINT(EM_DIAGRAM):   end;
1137912   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1137913   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1137914   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1137915   +   end;
MPRINT(EM_DIAGRAM):   end;
1137916   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1137917   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1137918   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1137919   +   end;
MPRINT(EM_DIAGRAM):   end;
1137920   +end;
MPRINT(EM_DIAGRAM):   end;
1137921   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1137922   +   P_DepVar1  =     9.74622448352833 * H4x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 9.74622448352833 * H4x1_1 ;
1137923   +   P_DepVar1  =    -7.88591846838259 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.88591846838259 + P_DepVar1 ;
1137924   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1137925   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1137926   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1137927   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1137928   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1137929   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1137930   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1137931   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1137932   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1137933   +END;
MPRINT(EM_DIAGRAM):   END;
1137934   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1137935   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1137936   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1137937   +END;
MPRINT(EM_DIAGRAM):   END;
1137938   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1137939   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1137940   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1137941   +END;
MPRINT(EM_DIAGRAM):   END;
1137942   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1137943   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1137944   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1137945   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1137946   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1137947   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1137948   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1137949   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137950   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1137951   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1137952   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1137953   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1137954   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1137955   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1137956   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1137957   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1137958   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1137959   +END;
MPRINT(EM_DIAGRAM):   END;
1137960   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1137961   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1137962   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1137963   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1137964   +* Renaming variables for AutoNeural30;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural30;
1137965   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137966   +* Renaming Posterior variables for AutoNeural30;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural30;
1137967   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137968   +drop AutoNeural30_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural30_P_DepVar1;
1137969   +AutoNeural30_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural30_P_DepVar1 = P_DepVar1;
1137970   +drop AutoNeural30_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural30_P_DepVar0;
1137971   +AutoNeural30_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural30_P_DepVar0 = P_DepVar0;
1137972   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137973   +* Renaming _WARN_ variable for AutoNeural30;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural30;
1137974   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137975   +length AutoNeural30_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural30_WARN_ $4;
1137976   +drop AutoNeural30_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural30_WARN_;
1137977   +AutoNeural30_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural30_WARN_ = _WARN_;
1137978   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137979   +* Ensmbl51: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Average Posteriors of 7 models;
1137980   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137981   +P_DepVar1 = (
1137982   +AutoNeural29_P_DepVar1 +
1137983   +AutoNeural28_P_DepVar1 +
1137984   +AutoNeural27_P_DepVar1 +
1137985   +AutoNeural33_P_DepVar1 +
1137986   +AutoNeural32_P_DepVar1 +
1137987   +AutoNeural31_P_DepVar1 +
1137988   +AutoNeural30_P_DepVar1
1137989   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural29_P_DepVar1 + AutoNeural28_P_DepVar1 + 
AutoNeural27_P_DepVar1 + AutoNeural33_P_DepVar1 + AutoNeural32_P_DepVar1 + 
AutoNeural31_P_DepVar1 + AutoNeural30_P_DepVar1 )/7;
1137990   +P_DepVar0 = (
1137991   +AutoNeural29_P_DepVar0 +
1137992   +AutoNeural28_P_DepVar0 +
1137993   +AutoNeural27_P_DepVar0 +
1137994   +AutoNeural33_P_DepVar0 +
1137995   +AutoNeural32_P_DepVar0 +
1137996   +AutoNeural31_P_DepVar0 +
1137997   +AutoNeural30_P_DepVar0
1137998   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural29_P_DepVar0 + AutoNeural28_P_DepVar0 + 
AutoNeural27_P_DepVar0 + AutoNeural33_P_DepVar0 + AutoNeural32_P_DepVar0 + 
AutoNeural31_P_DepVar0 + AutoNeural30_P_DepVar0 )/7;
1137999   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1138000   +* Ensmbl51: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Computing Classification Vars;
1138001   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1138002   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1138003   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1138004   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1138005   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1138006   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1138007   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1138008   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1138009   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1138010   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1138011   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1138012   +end;
MPRINT(EM_DIAGRAM):   end;
1138013   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1138014   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1138015   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1138016   +end;
MPRINT(EM_DIAGRAM):   end;
1138017   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1138018   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1138019   +* Ensmbl51: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Producing Unformatted variable;
1138020   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1138021   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1138022   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1138023   +else
1138024   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1138025   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1138026   +* Ensmbl51: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Computing _WARN_ Variable;
1138027   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1138028   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1138029   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1138030   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1138031   +if index(AUTONEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1138031  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1138032   +if index(AUTONEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1138032  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1138033   +if index(AUTONEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1138033  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1138034   +if index(AUTONEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1138034  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1138035   +if index(AUTONEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1138035  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1138036   +if index(AUTONEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1138036  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1138037   +if index(AUTONEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1138037  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1138038   +if index(AUTONEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1138038  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1138039   +if index(AUTONEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1138039  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1138040   +if index(AUTONEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1138040  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1138041   +if index(AUTONEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1138041  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1138042   +if index(AUTONEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1138042  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1138043   +if index(AUTONEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1138043  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1138044   +if index(AUTONEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1138044  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1138045   +if index(AUTONEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1138045  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1138046   +if index(AUTONEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1138046  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1138047   +if index(AUTONEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1138047  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1138048   +if index(AUTONEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1138048  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1138049   +if index(AUTONEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1138049  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1138050   +if index(AUTONEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1138050  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1138051   +if index(AUTONEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1138051  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1138052   +if index(AUTONEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1138052  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1138053   +if index(AUTONEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1138053  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1138054   +if index(AUTONEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1138054  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1138055   +if index(AUTONEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1138055  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1138056   +if index(AUTONEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1138056  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1138057   +if index(AUTONEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1138057  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1138058   +if index(AUTONEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1138058  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1138059   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1138060   +* Ensmbl51: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Computing Residual Vars;
1138061   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1138062   +if
1138063   +F_DepVar NE '1'
1138064   +AND F_DepVar NE '0'
1138065   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1138066   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1138067   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1138068   +end;
MPRINT(EM_DIAGRAM):   end;
1138069   +else do;
MPRINT(EM_DIAGRAM):   else do;
1138070   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1138071   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1138072   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1138073   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1138074   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1138075   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1138076   +END;
MPRINT(EM_DIAGRAM):   END;
1138077   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1138078    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL51_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL29_VALIDATE.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1138079    quit;
1138080    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl51_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl51_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl51_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl51_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl51_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1138140    filename _pref
1138140  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural29\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural29\EMPUBLISHSCORE.sas";
1138141    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1138142    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural29\EMPUBLISHSCORE.sas.
1138143   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1138144   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1138145   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1138146   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1138147   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1138148   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1138149   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1138150   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1138151   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1138152   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1138153   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1138154   +LENGTH _WARN_ $4
1138155   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1138156   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1138157   +
1138158   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1138159   +
1138160   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1138161   +
1138162   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1138163   +
1138164   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1138165   +
1138166   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1138167   +
1138168   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1138169   +
1138170   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1138171   +
1138172   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1138173   +
1138174   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1138175   +
1138176   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1138177   +
1138178   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1138179   +
1138180   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1138181   +
1138182   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1138183   +
1138184   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1138185   +
1138186   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1138187   +
1138188   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1138189   +
1138190   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1138191   +
1138192   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1138193   +
1138194   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1138195   +
1138196   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1138197   +
1138198   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1138199   +
1138200   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1138201   +
1138202   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1138203   +
1138204   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1138205   +
1138206   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1138207   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1138208   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1138209   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1138210   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1138211   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1138212   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138213   +end;
MPRINT(EM_DIAGRAM):   end;
1138214   +else do;
MPRINT(EM_DIAGRAM):   else do;
1138215   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1138216   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1138217   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1138218   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1138219   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1138220   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1138221   +   end;
MPRINT(EM_DIAGRAM):   end;
1138222   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1138223   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1138224   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1138225   +   end;
MPRINT(EM_DIAGRAM):   end;
1138226   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1138227   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1138228   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1138229   +   end;
MPRINT(EM_DIAGRAM):   end;
1138230   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1138231   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1138232   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1138233   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1138234   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138235   +   end;
MPRINT(EM_DIAGRAM):   end;
1138236   +end;
MPRINT(EM_DIAGRAM):   end;
1138237   +
1138238   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138239   +*** Checking missing input Interval
1138240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1138241   +
1138242   +IF NMISS(
1138243   +   AcceptedCmpTotal ,
1138244   +   Frq ,
1138245   +   Income ,
1138246   +   Mnt ,
1138247   +   MntGoldProds ,
1138248   +   MntMeatProducts ,
1138249   +   MntWines ,
1138250   +   NumDistPurchases ,
1138251   +   RFMstat ,
1138252   +   RMntFrq ,
1138253   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1138254   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1138255   +
1138256   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138257   +END;
MPRINT(EM_DIAGRAM):   END;
1138258   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138259   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1138260   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138261   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1138262   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1138263   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1138264   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1138265   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1138266   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1138267   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1138268   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1138269   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1138270   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1138271   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1138272   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1138273   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1138274   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1138275   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1138276   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1138277   +END;
MPRINT(EM_DIAGRAM):   END;
1138278   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1138279   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1138280   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1138281   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1138282   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1138283   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1138284   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1138285   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1138286   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1138287   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1138288   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1138289   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1138290   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1138291   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1138292   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1138293   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1138294   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1138295   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1138296   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1138297   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1138298   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1138299   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1138300   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1138301   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1138302   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1138303   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1138304   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1138305   +END;
MPRINT(EM_DIAGRAM):   END;
1138306   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138307   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1138308   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138309   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138310   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1138311   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138312   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1138313   +   H1x1_1  =    -1.99300782242957 * S_AcceptedCmpTotal
1138314   +          +     2.12004224248217 * S_Frq  +     3.86828667262904 * S_Income
1138315   +          +     2.77648198770608 * S_Mnt  +    -2.27326773671069 *
1138316   +        S_MntGoldProds  +    -0.27399687657599 * S_MntMeatProducts
1138317   +          +     2.26137957922507 * S_MntWines  +     0.14135280902221 *
1138318   +        S_NumDistPurchases  +     1.12048709605553 * S_RFMstat
1138319   +          +     0.99315934409036 * S_RMntFrq  +     1.21818826467727 *
1138320   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.99300782242957 * S_AcceptedCmpTotal + 2.12004224248217 * 
S_Frq + 3.86828667262904 * S_Income + 2.77648198770608 * S_Mnt + -2.27326773671069 * 
S_MntGoldProds + -0.27399687657599 * S_MntMeatProducts + 2.26137957922507 * S_MntWines + 
0.14135280902221 * S_NumDistPurchases + 1.12048709605553 * S_RFMstat + 0.99315934409036 * 
S_RMntFrq + 1.21818826467727 * S_Recency ;
1138321   +   H1x1_2  =    -0.46080527925139 * S_AcceptedCmpTotal
1138322   +          +     1.22986184660358 * S_Frq  +     1.25416218398238 * S_Income
1138323   +          +      0.7698101051046 * S_Mnt  +    -0.24851515302824 *
1138324   +        S_MntGoldProds  +    -1.02206883329868 * S_MntMeatProducts
1138325   +          +    -2.60436726665032 * S_MntWines  +     1.42856046102253 *
1138326   +        S_NumDistPurchases  +     0.23036228891547 * S_RFMstat
1138327   +          +    -0.44196680894425 * S_RMntFrq  +     1.47726327092789 *
1138328   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.46080527925139 * S_AcceptedCmpTotal + 1.22986184660358 * 
S_Frq + 1.25416218398238 * S_Income + 0.7698101051046 * S_Mnt + -0.24851515302824 * 
S_MntGoldProds + -1.02206883329868 * S_MntMeatProducts + -2.60436726665032 * S_MntWines + 
1.42856046102253 * S_NumDistPurchases + 0.23036228891547 * S_RFMstat + -0.44196680894425 * 
S_RMntFrq + 1.47726327092789 * S_Recency ;
1138329   +   H1x1_3  =    -2.72041257472943 * S_AcceptedCmpTotal
1138330   +          +     2.18007007875237 * S_Frq  +    -3.41389425682735 * S_Income
1138331   +          +     1.22111404132155 * S_Mnt  +     0.13965132551243 *
1138332   +        S_MntGoldProds  +    -1.44679609979492 * S_MntMeatProducts
1138333   +          +     1.32449625366546 * S_MntWines  +     0.71474658567846 *
1138334   +        S_NumDistPurchases  +    -1.11377169665392 * S_RFMstat
1138335   +          +    -0.23272811318878 * S_RMntFrq  +     3.38352057173892 *
1138336   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.72041257472943 * S_AcceptedCmpTotal + 2.18007007875237 * 
S_Frq + -3.41389425682735 * S_Income + 1.22111404132155 * S_Mnt + 0.13965132551243 * 
S_MntGoldProds + -1.44679609979492 * S_MntMeatProducts + 1.32449625366546 * S_MntWines + 
0.71474658567846 * S_NumDistPurchases + -1.11377169665392 * S_RFMstat + -0.23272811318878 * 
S_RMntFrq + 3.38352057173892 * S_Recency ;
1138337   +   H1x1_4  =    -0.53914082027029 * S_AcceptedCmpTotal
1138338   +          +     3.52541527909413 * S_Frq  +     0.47386294116539 * S_Income
1138339   +          +     1.74856835081997 * S_Mnt  +    -0.31608698854628 *
1138340   +        S_MntGoldProds  +    -4.08585161438784 * S_MntMeatProducts
1138341   +          +     1.11934057687184 * S_MntWines  +    -4.23069217087257 *
1138342   +        S_NumDistPurchases  +    -0.45058242594518 * S_RFMstat
1138343   +          +     2.24526854282726 * S_RMntFrq  +     0.46541621801996 *
1138344   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.53914082027029 * S_AcceptedCmpTotal + 3.52541527909413 * 
S_Frq + 0.47386294116539 * S_Income + 1.74856835081997 * S_Mnt + -0.31608698854628 * 
S_MntGoldProds + -4.08585161438784 * S_MntMeatProducts + 1.11934057687184 * S_MntWines + 
-4.23069217087257 * S_NumDistPurchases + -0.45058242594518 * S_RFMstat + 2.24526854282726 * 
S_RMntFrq + 0.46541621801996 * S_Recency ;
1138345   +   H1x1_5  =     0.16652182962256 * S_AcceptedCmpTotal
1138346   +          +    -2.34082830868767 * S_Frq  +     0.06017749299853 * S_Income
1138347   +          +    -3.61434433922311 * S_Mnt  +    -0.15794212009402 *
1138348   +        S_MntGoldProds  +     5.32833368617196 * S_MntMeatProducts
1138349   +          +     1.70496933504273 * S_MntWines  +     2.85445845094536 *
1138350   +        S_NumDistPurchases  +     1.88219523605925 * S_RFMstat
1138351   +          +     0.75869801637089 * S_RMntFrq  +     0.08064297106734 *
1138352   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.16652182962256 * S_AcceptedCmpTotal + -2.34082830868767 * 
S_Frq + 0.06017749299853 * S_Income + -3.61434433922311 * S_Mnt + -0.15794212009402 * 
S_MntGoldProds + 5.32833368617196 * S_MntMeatProducts + 1.70496933504273 * S_MntWines + 
2.85445845094536 * S_NumDistPurchases + 1.88219523605925 * S_RFMstat + 0.75869801637089 * 
S_RMntFrq + 0.08064297106734 * S_Recency ;
1138353   +   H1x1_6  =     1.97422379745385 * S_AcceptedCmpTotal
1138354   +          +    -0.18806921540808 * S_Frq  +    -1.45393613178942 * S_Income
1138355   +          +    -1.71382589206496 * S_Mnt  +    -0.86398659373382 *
1138356   +        S_MntGoldProds  +    -0.55933907393534 * S_MntMeatProducts
1138357   +          +    -2.04088833388184 * S_MntWines  +     1.33825297425801 *
1138358   +        S_NumDistPurchases  +    -1.84916943620006 * S_RFMstat
1138359   +          +     1.10268410707441 * S_RMntFrq  +    -3.24538880603902 *
1138360   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.97422379745385 * S_AcceptedCmpTotal + -0.18806921540808 * 
S_Frq + -1.45393613178942 * S_Income + -1.71382589206496 * S_Mnt + -0.86398659373382 * 
S_MntGoldProds + -0.55933907393534 * S_MntMeatProducts + -2.04088833388184 * S_MntWines + 
1.33825297425801 * S_NumDistPurchases + -1.84916943620006 * S_RFMstat + 1.10268410707441 * 
S_RMntFrq + -3.24538880603902 * S_Recency ;
1138361   +   H1x1_7  =    -0.04334303258083 * S_AcceptedCmpTotal
1138362   +          +      1.2911623736286 * S_Frq  +    -2.28992194197276 * S_Income
1138363   +          +    -0.46322849796029 * S_Mnt  +    -0.61987255353555 *
1138364   +        S_MntGoldProds  +    -0.70448430141235 * S_MntMeatProducts
1138365   +          +    -2.07867791807129 * S_MntWines  +    -1.36577325340948 *
1138366   +        S_NumDistPurchases  +    -1.20867908080733 * S_RFMstat
1138367   +          +     1.13377434281641 * S_RMntFrq  +     0.49995615625441 *
1138368   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.04334303258083 * S_AcceptedCmpTotal + 1.2911623736286 * 
S_Frq + -2.28992194197276 * S_Income + -0.46322849796029 * S_Mnt + -0.61987255353555 * 
S_MntGoldProds + -0.70448430141235 * S_MntMeatProducts + -2.07867791807129 * S_MntWines + 
-1.36577325340948 * S_NumDistPurchases + -1.20867908080733 * S_RFMstat + 1.13377434281641 * 
S_RMntFrq + 0.49995615625441 * S_Recency ;
1138369   +   H1x1_1  = H1x1_1  +     -1.7035629341514 * G_Marital_Status0
1138370   +          +    -0.88839271772433 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.7035629341514 * G_Marital_Status0 + 
-0.88839271772433 * G_Marital_Status1 ;
1138371   +   H1x1_2  = H1x1_2  +     0.47234648810132 * G_Marital_Status0
1138372   +          +     0.49781009278812 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.47234648810132 * G_Marital_Status0 + 
0.49781009278812 * G_Marital_Status1 ;
1138373   +   H1x1_3  = H1x1_3  +     0.04803102756566 * G_Marital_Status0
1138374   +          +     3.45859276392218 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04803102756566 * G_Marital_Status0 + 
3.45859276392218 * G_Marital_Status1 ;
1138375   +   H1x1_4  = H1x1_4  +    -0.00794915276466 * G_Marital_Status0
1138376   +          +    -0.88877093101914 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.00794915276466 * G_Marital_Status0 + 
-0.88877093101914 * G_Marital_Status1 ;
1138377   +   H1x1_5  = H1x1_5  +     0.17344052282277 * G_Marital_Status0
1138378   +          +     0.07512544812374 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17344052282277 * G_Marital_Status0 + 
0.07512544812374 * G_Marital_Status1 ;
1138379   +   H1x1_6  = H1x1_6  +     0.69797087079749 * G_Marital_Status0
1138380   +          +     1.99160337429042 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.69797087079749 * G_Marital_Status0 + 
1.99160337429042 * G_Marital_Status1 ;
1138381   +   H1x1_7  = H1x1_7  +    -1.90814013352903 * G_Marital_Status0
1138382   +          +    -0.58260071621307 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -1.90814013352903 * G_Marital_Status0 + 
-0.58260071621307 * G_Marital_Status1 ;
1138383   +   H1x1_1  =      0.4509613443627 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.4509613443627 + H1x1_1 ;
1138384   +   H1x1_2  =     3.28102437302443 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 3.28102437302443 + H1x1_2 ;
1138385   +   H1x1_3  =    -0.59732076258377 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.59732076258377 + H1x1_3 ;
1138386   +   H1x1_4  =     3.04302174126598 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.04302174126598 + H1x1_4 ;
1138387   +   H1x1_5  =     4.11173403634453 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 4.11173403634453 + H1x1_5 ;
1138388   +   H1x1_6  =     4.51964221881808 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 4.51964221881808 + H1x1_6 ;
1138389   +   H1x1_7  =     7.27061205819069 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 7.27061205819069 + H1x1_7 ;
1138390   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1138391   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1138392   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1138393   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1138394   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1138395   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1138396   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1138397   +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
1138398   +   H1x1_7  = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
1138399   +END;
MPRINT(EM_DIAGRAM):   END;
1138400   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1138401   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1138402   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1138403   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1138404   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1138405   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1138406   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1138407   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1138408   +END;
MPRINT(EM_DIAGRAM):   END;
1138409   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138410   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1138411   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138412   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1138413   +   P_DepVar1  =    -3.49358340904307 * H1x1_1  +    -5.28251662728987 * H1x1_2
1138414   +          +    -4.11876057817011 * H1x1_3  +    -7.73777326204979 * H1x1_4
1138415   +          +     12.8932497890238 * H1x1_5  +     6.88694832857203 * H1x1_6
1138416   +          +    -8.47048075234366 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.49358340904307 * H1x1_1 + -5.28251662728987 * H1x1_2 + 
-4.11876057817011 * H1x1_3 + -7.73777326204979 * H1x1_4 + 12.8932497890238 * H1x1_5 + 
6.88694832857203 * H1x1_6 + -8.47048075234366 * H1x1_7 ;
1138417   +   P_DepVar1  =     1.65092540834245 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.65092540834245 + P_DepVar1 ;
1138418   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1138419   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1138420   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1138421   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1138422   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1138423   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1138424   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1138425   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1138426   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1138427   +END;
MPRINT(EM_DIAGRAM):   END;
1138428   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1138429   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1138430   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1138431   +END;
MPRINT(EM_DIAGRAM):   END;
1138432   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1138433   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1138434   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1138435   +END;
MPRINT(EM_DIAGRAM):   END;
1138436   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138437   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1138438   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138439   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1138440   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1138441   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1138442   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1138443   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1138444   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1138445   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1138446   +END;
MPRINT(EM_DIAGRAM):   END;
1138447   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1138448   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1138449   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1138450   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1138451    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1138452    quit;
1138453    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1138454    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1138455    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1138456    retain ID 2 Node "AutoNeural29";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural29";
1138457    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1138458    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1111 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1111 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138459    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1138460    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1138461    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1111 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1111 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138462    proc sort data=EMWS8.AutoNeural29_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural29_variableset out=_temp2(keep=NAME 
CREATOR);
1138463    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1138464    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS8.AUTONEURAL29_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1138465    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1138466    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1138467    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1138468    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138469    proc contents data=EMWS8.AutoNeural29_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural29_train out=_meta(keep=NAME) noprint;
1138470    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 61 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1138471    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1138472    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1138473    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 61 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 61 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138474    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1138475    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1138476    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1138477    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 61 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 61 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138478    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1138479    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1138479  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 563 rows and 5 columns.

1138480    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1138481    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1138482    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 563 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 563 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138483    filename _pref
1138483  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1138484    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1138485    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1138486   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1138487   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1138488   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1138489   +
1138490   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1138491   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1138492   +
1138493   +
1138494   +/*----G_Marital_Status begin----*/
1138495   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1138496   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1138497   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1138498   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1138499   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1138500   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1138501   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1138502   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1138503   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1138504   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1138505   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1138506   +end;
MPRINT(EM_DIAGRAM):   end;
1138507   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1138508   +/*----G_Marital_Status end----*/
1138509   +
1138510   +
1138511   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
1138512   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1138513   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1138514    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1138515    quit;
1138516    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1138517    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1138518    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1138519    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1138520    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1138521    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138522    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1138523    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1138524    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138525    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1138526    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1138527    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138528    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1138529    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1138530    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1138531    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138532    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1138533    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

1138534    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1138535    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1138536    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138537    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1138538    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1138539    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1138540    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138541    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1138542    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1138542  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

1138543    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1138544    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1138545    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 566 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138546    filename _pref
1138546  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1138547    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1138548    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1138549   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1138550   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1138551   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1138552   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1138553   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1138554   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1138555    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1138556    quit;
1138557    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1138558    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1138559    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1138560    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1138561    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1138562    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138563    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1138564    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1138565    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138566    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1138567    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1138568    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138569    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1138570    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1138571    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1138572    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1138573    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1138574    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1138575    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1138576    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1138577    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1138578    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1138579    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1138580    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1138581    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138582    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1138583    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1138583  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1138584    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138585    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1138586    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 570 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138587    filename _pref
1138587  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1138588    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1138589    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1138590   +
1138591   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1138592   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1138592  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1138593   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1138594   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1138595   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1138596   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1138597   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1138598    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1138599    quit;
1138600    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1138601    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1138602    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1138603    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1138604    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1138605    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138606    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1138607    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1138608    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138609    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1138610    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1138611    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138612    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1138613    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1138614    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1138615    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138616    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1138617    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

1138618    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1138619    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1138620    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138621    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1138622    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1138623    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1138624    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138625    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1138626    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1138626  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1138627    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138628    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1138629    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 609 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138630    filename _pref
1138630  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1138631    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1138632    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1138633   +
1138634   +
1138635   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1138636   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1138637   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1138638   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1138639   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1138640   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1138641   +
1138642   +
1138643   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1138644   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1138645   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1138646   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1138647   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1138648   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1138649   +
1138650   +
1138651   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1138652   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1138653   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1138654   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1138655   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1138656   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1138657   +
1138658   +
1138659   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1138660   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1138661   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1138662   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1138663   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1138664   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1138665   +
1138666   +
1138667   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1138668   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1138669   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1138670   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1138671   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1138672   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1138673   +
1138674   +
1138675   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1138676   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1138677   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1138678   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1138679   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1138680   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1138681   +
1138682   +
1138683   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1138684   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1138685   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1138686   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1138687   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1138688   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1138689   +
1138690   +
1138691   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1138692   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1138693   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1138694   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1138695   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1138696   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1138697   +if
1138698   +_FILTERNORM1 not in ( '.')
1138699   + and
1138700   +_FILTERNORM2 not in ( '.')
1138701   + and
1138702   +_FILTERNORM3 not in ( '.')
1138703   + and
1138704   +_FILTERNORM4 not in ( '.')
1138705   + and
1138706   +_FILTERNORM5 not in ( '.')
1138707   + and
1138708   +_FILTERNORM6 not in ( '.')
1138709   + and
1138710   +_FILTERNORM7 not in ( ' ')
1138711   + and
1138712   +_FILTERNORM8 not in ( ' ')
1138713   +and
1138714   +( Dt_Customer ne .)
1138715   +and ( Income ne . and (Income<=107000))
1138716   +and ( Kidhome ne .)
1138717   +and ( MntFishProducts ne .)
1138718   +and ( MntFruits ne .)
1138719   +and ( MntGoldProds ne .)
1138720   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1138721   +and ( MntSweetProducts ne .)
1138722   +and ( MntWines ne .)
1138723   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1138724   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1138725   +and ( NumStorePurchases ne .)
1138726   +and ( NumWebPurchases ne .)
1138727   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1138728   +and ( Recency ne .)
1138729   +and ( Teenhome ne .)
1138730   +and ( Year_Birth ne .)
1138731   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1138732   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1138733   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1138734   +end;
MPRINT(EM_DIAGRAM):   end;
1138735   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1138736   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1138737    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1138738    quit;
1138739    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1138740    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1138741    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1138742    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1138743    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1138744    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138745    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1138746    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1138747    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138748    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1138749    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1138750    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138751    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1138752    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1138753    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1138754    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1138755    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1138756    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1138757    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1138758    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1138759    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138760    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1138761    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1138762    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1138763    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138764    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1138765    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1138765  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1138766    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138767    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1138768    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 675 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138769    %macro varDept(fcmpdata=,id=);
1138770    %global nobs&id scoreFlag&id;
1138771    %let scoreFlag&id = 0;
1138772    %if &id=1 or ^&fcmpStart %then %do;
1138773    proc sort data=&fcmpdata out=_temp&id nodupkey;
1138774    by NAME;
1138775    where id=&id and LHS in( %let j=1;
1138776    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1138777    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1138778    "&var" %let j = %eval(&j+1);
1138779    %end;
1138780    );
1138781    run;
1138782    %let dsid = %sysfunc(open(_temp&id));
1138783    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1138784    %let dsid = %sysfunc(close(&dsid));
1138785    %if &&nobs&id %then %do;
1138786    %let scoreFlag&id = 1;
1138787    %let fcmpStart = 1;
1138788    %end;
1138789    %else %let fcmpStart = 0;
1138790    %end;
1138791    %else %do;
1138792    proc sort data=&fcmpdata out=_tempid;
1138793    where id=&id;
1138794    by LHS;
1138795    run;
1138796    %let dsid = %sysfunc(open(_tempid));
1138797    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1138798    %let dsid = %sysfunc(close(&dsid));
1138799    %if ^&&nobs&id %then %do;
1138800    proc datasets lib=work nolist;
1138801    delete _tempid;
1138802    run;
1138803    quit;
1138804    %end;
1138805    %else %do;
1138806    data _tempAll;
1138807    set %let j=%eval(&id-1);
1138808    %do x=1 %to &j;
1138809    %if &&nobs&x %then %do;
1138810    _temp&x %end;
1138811    %end;
1138812    ;
1138813    run;
1138814    proc sql;
1138815    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1138815  ! work._tempid p2 where p.name=p2.lhs;
1138816    quit;
1138817    data _temp&id;
1138818    set _temp&id;
1138819    where LHS ne '' and NAME ne '' and Node ne '';
1138820    run;
1138821    proc datasets lib=work nolist;
1138822    delete _tempAll;
1138823    run;
1138824    %let dsid = %sysfunc(open(_temp&id));
1138825    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1138826    %let dsid = %sysfunc(close(&dsid));
1138827    %if ^&&nobs&id %then %do;
1138828    proc datasets lib=work nolist;
1138829    delete _temp&id;
1138830    run;
1138831    quit;
1138832    %end;
1138833    %else %do;
1138834    %let scoreFlag&id = 1;
1138835    data _temp&id;
1138836    set _temp&id;
1138837    where LHS ne NAME and node ne '';
1138838    run;
1138839    %let dsid = %sysfunc(open(_temp&id));
1138840    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1138841    %let dsid = %sysfunc(close(&dsid));
1138842    %if ^&&nobs&id %then %do;
1138843    proc datasets lib=work nolist;
1138844    delete _temp&id;
1138845    run;
1138846    quit;
1138847    %end;
1138848    %else %do;
1138849    proc sort data=_temp&id nodupkey;
1138850    by LHS NAME;
1138851    run;
1138852    %end;
1138853    %end;
1138854    %end;
1138855    %end;
1138856    %mend varDept;
1138857    %macro optCode(outdata=fcmpdata);
1138858    %global fcmpStart;
1138859    %let fcmpStart = 0;
1138860    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1138861    %let NumNodes=9;
1138862    %do k=1 %to &NumNodes;
1138863    %vardept(fcmpdata=&outdata, id=&k);
1138864    %end;
1138865    %mend optCode;
1138866    %optcode(outData=EMWS8.Ensmbl51_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 75 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 54 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 21 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 21 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 21 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 22 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 21 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 24 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 21 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 61 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1138867    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1138868    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1138869    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1138870    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138871    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1138872    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1138873    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1138874    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1138875    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1138876    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1138876  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1138877    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138878    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1138879    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1138880    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1138881    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1138882    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1138883    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1138884    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138885    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1138886    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1138887    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1138888    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138889    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1138890    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1138890  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

1138891    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1138892    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1138893    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1138894    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1138895    filename _pref
1138895  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMPUBLISHSCORE.sas";
1138896    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1138897    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMPUBLISHSCORE.sas.
1138898   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1138899   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1138900   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1138901   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1138902   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1138903   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1138904   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1138905   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1138906   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1138907   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1138908   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1138909   +LENGTH _WARN_ $4
1138910   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1138911   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1138912   +
1138913   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1138914   +
1138915   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1138916   +
1138917   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1138918   +
1138919   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1138920   +
1138921   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1138922   +
1138923   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1138924   +
1138925   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1138926   +
1138927   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1138928   +
1138929   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1138930   +
1138931   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1138932   +
1138933   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1138934   +
1138935   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1138936   +
1138937   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1138938   +
1138939   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1138940   +
1138941   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1138942   +
1138943   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1138944   +
1138945   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1138946   +
1138947   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1138948   +
1138949   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1138950   +
1138951   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1138952   +
1138953   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1138954   +
1138955   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1138956   +
1138957   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1138958   +
1138959   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1138960   +
1138961   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1138962   +
1138963   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1138964   +
1138965   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1138966   +
1138967   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
1138968   +
1138969   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
1138970   +
1138971   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
1138972   +
1138973   +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
1138974   +
1138975   +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
1138976   +
1138977   +      label H1x4_3 = 'Hidden: H1x4_=3' ;
MPRINT(EM_DIAGRAM):   label H1x4_3 = 'Hidden: H1x4_=3' ;
1138978   +
1138979   +      label H1x4_4 = 'Hidden: H1x4_=4' ;
MPRINT(EM_DIAGRAM):   label H1x4_4 = 'Hidden: H1x4_=4' ;
1138980   +
1138981   +      label H1x4_5 = 'Hidden: H1x4_=5' ;
MPRINT(EM_DIAGRAM):   label H1x4_5 = 'Hidden: H1x4_=5' ;
1138982   +
1138983   +      label H1x4_6 = 'Hidden: H1x4_=6' ;
MPRINT(EM_DIAGRAM):   label H1x4_6 = 'Hidden: H1x4_=6' ;
1138984   +
1138985   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1138986   +
1138987   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1138988   +
1138989   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1138990   +
1138991   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1138992   +
1138993   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1138994   +
1138995   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1138996   +
1138997   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1138998   +
1138999   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1139000   +
1139001   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1139002   +
1139003   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
1139004   +
1139005   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
1139006   +
1139007   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
1139008   +
1139009   +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
1139010   +
1139011   +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
1139012   +
1139013   +      label H2x3_3 = 'Hidden: H2x3_=3' ;
MPRINT(EM_DIAGRAM):   label H2x3_3 = 'Hidden: H2x3_=3' ;
1139014   +
1139015   +      label H2x3_4 = 'Hidden: H2x3_=4' ;
MPRINT(EM_DIAGRAM):   label H2x3_4 = 'Hidden: H2x3_=4' ;
1139016   +
1139017   +      label H2x3_5 = 'Hidden: H2x3_=5' ;
MPRINT(EM_DIAGRAM):   label H2x3_5 = 'Hidden: H2x3_=5' ;
1139018   +
1139019   +      label H2x3_6 = 'Hidden: H2x3_=6' ;
MPRINT(EM_DIAGRAM):   label H2x3_6 = 'Hidden: H2x3_=6' ;
1139020   +
1139021   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1139022   +
1139023   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1139024   +
1139025   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1139026   +
1139027   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
1139028   +
1139029   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
1139030   +
1139031   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
1139032   +
1139033   +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
1139034   +
1139035   +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
1139036   +
1139037   +      label H3x2_3 = 'Hidden: H3x2_=3' ;
MPRINT(EM_DIAGRAM):   label H3x2_3 = 'Hidden: H3x2_=3' ;
1139038   +
1139039   +      label H3x2_4 = 'Hidden: H3x2_=4' ;
MPRINT(EM_DIAGRAM):   label H3x2_4 = 'Hidden: H3x2_=4' ;
1139040   +
1139041   +      label H3x2_5 = 'Hidden: H3x2_=5' ;
MPRINT(EM_DIAGRAM):   label H3x2_5 = 'Hidden: H3x2_=5' ;
1139042   +
1139043   +      label H3x2_6 = 'Hidden: H3x2_=6' ;
MPRINT(EM_DIAGRAM):   label H3x2_6 = 'Hidden: H3x2_=6' ;
1139044   +
1139045   +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
1139046   +
1139047   +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
1139048   +
1139049   +      label H4x1_3 = 'Hidden: H4x1_=3' ;
MPRINT(EM_DIAGRAM):   label H4x1_3 = 'Hidden: H4x1_=3' ;
1139050   +
1139051   +      label H4x1_4 = 'Hidden: H4x1_=4' ;
MPRINT(EM_DIAGRAM):   label H4x1_4 = 'Hidden: H4x1_=4' ;
1139052   +
1139053   +      label H4x1_5 = 'Hidden: H4x1_=5' ;
MPRINT(EM_DIAGRAM):   label H4x1_5 = 'Hidden: H4x1_=5' ;
1139054   +
1139055   +      label H4x1_6 = 'Hidden: H4x1_=6' ;
MPRINT(EM_DIAGRAM):   label H4x1_6 = 'Hidden: H4x1_=6' ;
1139056   +
1139057   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1139058   +
1139059   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1139060   +
1139061   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1139062   +
1139063   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1139064   +
1139065   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1139066   +
1139067   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1139068   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1139069   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1139070   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1139071   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1139072   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1139073   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1139074   +end;
MPRINT(EM_DIAGRAM):   end;
1139075   +else do;
MPRINT(EM_DIAGRAM):   else do;
1139076   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1139077   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1139078   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1139079   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1139080   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1139081   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1139082   +   end;
MPRINT(EM_DIAGRAM):   end;
1139083   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1139084   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1139085   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1139086   +   end;
MPRINT(EM_DIAGRAM):   end;
1139087   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1139088   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1139089   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1139090   +   end;
MPRINT(EM_DIAGRAM):   end;
1139091   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1139092   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1139093   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1139094   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1139095   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1139096   +   end;
MPRINT(EM_DIAGRAM):   end;
1139097   +end;
MPRINT(EM_DIAGRAM):   end;
1139098   +
1139099   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139100   +*** Checking missing input Interval
1139101   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1139102   +
1139103   +IF NMISS(
1139104   +   AcceptedCmpTotal ,
1139105   +   Frq ,
1139106   +   Income ,
1139107   +   Mnt ,
1139108   +   MntGoldProds ,
1139109   +   MntMeatProducts ,
1139110   +   MntWines ,
1139111   +   NumDistPurchases ,
1139112   +   RFMstat ,
1139113   +   RMntFrq ,
1139114   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1139115   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1139116   +
1139117   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1139118   +END;
MPRINT(EM_DIAGRAM):   END;
1139119   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139120   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1139121   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139122   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1139123   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1139124   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1139125   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1139126   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1139127   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1139128   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1139129   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1139130   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1139131   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1139132   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1139133   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1139134   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1139135   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1139136   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1139137   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1139138   +END;
MPRINT(EM_DIAGRAM):   END;
1139139   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1139140   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1139141   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1139142   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1139143   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1139144   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1139145   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1139146   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1139147   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1139148   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1139149   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1139150   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1139151   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1139152   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1139153   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1139154   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1139155   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1139156   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1139157   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1139158   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1139159   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1139160   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1139161   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1139162   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1139163   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1139164   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1139165   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1139166   +END;
MPRINT(EM_DIAGRAM):   END;
1139167   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139168   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1139169   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139170   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139171   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1139172   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139173   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1139174   +   H1x1_1  =     3.15417213555791 * S_AcceptedCmpTotal
1139175   +          +    -2.48200966202064 * S_Frq  +     1.79801309624052 * S_Income
1139176   +          +    -1.96453924225923 * S_Mnt  +    -0.73447750078211 *
1139177   +        S_MntGoldProds  +    -1.52540613833145 * S_MntMeatProducts
1139178   +          +    -2.34651136428537 * S_MntWines  +     1.78713249203795 *
1139179   +        S_NumDistPurchases  +    -1.89877446252459 * S_RFMstat
1139180   +          +     0.40523847190984 * S_RMntFrq  +    -5.00157954960261 *
1139181   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.15417213555791 * S_AcceptedCmpTotal + -2.48200966202064 * 
S_Frq + 1.79801309624052 * S_Income + -1.96453924225923 * S_Mnt + -0.73447750078211 * 
S_MntGoldProds + -1.52540613833145 * S_MntMeatProducts + -2.34651136428537 * S_MntWines + 
1.78713249203795 * S_NumDistPurchases + -1.89877446252459 * S_RFMstat + 0.40523847190984 * 
S_RMntFrq + -5.00157954960261 * S_Recency ;
1139182   +   H1x1_2  =     -0.4296332791258 * S_AcceptedCmpTotal
1139183   +          +     1.69454720747031 * S_Frq  +     0.65291994437462 * S_Income
1139184   +          +     4.94289741649285 * S_Mnt  +    -0.74724168333375 *
1139185   +        S_MntGoldProds  +    -4.37885511745275 * S_MntMeatProducts
1139186   +          +    -0.79918604028406 * S_MntWines  +    -2.55554908870931 *
1139187   +        S_NumDistPurchases  +      -0.357509020401 * S_RFMstat
1139188   +          +     2.81206015252461 * S_RMntFrq  +       0.376849190211 *
1139189   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.4296332791258 * S_AcceptedCmpTotal + 1.69454720747031 * 
S_Frq + 0.65291994437462 * S_Income + 4.94289741649285 * S_Mnt + -0.74724168333375 * 
S_MntGoldProds + -4.37885511745275 * S_MntMeatProducts + -0.79918604028406 * S_MntWines + 
-2.55554908870931 * S_NumDistPurchases + -0.357509020401 * S_RFMstat + 2.81206015252461 * 
S_RMntFrq + 0.376849190211 * S_Recency ;
1139190   +   H1x1_3  =     0.22275326994217 * S_AcceptedCmpTotal
1139191   +          +     1.30327962429821 * S_Frq  +     8.11675617892245 * S_Income
1139192   +          +     1.26763916951276 * S_Mnt  +     -0.2686825897259 *
1139193   +        S_MntGoldProds  +    -1.42114074651211 * S_MntMeatProducts
1139194   +          +    -1.76821642666458 * S_MntWines  +    -1.91323522505912 *
1139195   +        S_NumDistPurchases  +    -0.12369288380556 * S_RFMstat
1139196   +          +     -0.5961110037328 * S_RMntFrq  +     1.45489277444882 *
1139197   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.22275326994217 * S_AcceptedCmpTotal + 1.30327962429821 * 
S_Frq + 8.11675617892245 * S_Income + 1.26763916951276 * S_Mnt + -0.2686825897259 * 
S_MntGoldProds + -1.42114074651211 * S_MntMeatProducts + -1.76821642666458 * S_MntWines + 
-1.91323522505912 * S_NumDistPurchases + -0.12369288380556 * S_RFMstat + -0.5961110037328 * 
S_RMntFrq + 1.45489277444882 * S_Recency ;
1139198   +   H1x1_4  =     0.65694888778783 * S_AcceptedCmpTotal
1139199   +          +    -2.46645772884275 * S_Frq  +     2.56090496460471 * S_Income
1139200   +          +     1.47469720902355 * S_Mnt  +    -0.23044042020952 *
1139201   +        S_MntGoldProds  +     1.09436190473143 * S_MntMeatProducts
1139202   +          +    -0.07872477007968 * S_MntWines  +     2.35913880285028 *
1139203   +        S_NumDistPurchases  +     0.36553596420262 * S_RFMstat
1139204   +          +    -1.52014700293876 * S_RMntFrq  +    -1.62001903467763 *
1139205   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.65694888778783 * S_AcceptedCmpTotal + -2.46645772884275 * 
S_Frq + 2.56090496460471 * S_Income + 1.47469720902355 * S_Mnt + -0.23044042020952 * 
S_MntGoldProds + 1.09436190473143 * S_MntMeatProducts + -0.07872477007968 * S_MntWines + 
2.35913880285028 * S_NumDistPurchases + 0.36553596420262 * S_RFMstat + -1.52014700293876 * 
S_RMntFrq + -1.62001903467763 * S_Recency ;
1139206   +   H1x1_5  =    -0.06045586654134 * S_AcceptedCmpTotal
1139207   +          +    -1.51896554067022 * S_Frq  +    -0.77690899609172 * S_Income
1139208   +          +    -3.83443076797312 * S_Mnt  +    -0.49066287190692 *
1139209   +        S_MntGoldProds  +     7.74304126889741 * S_MntMeatProducts
1139210   +          +     0.97717560040665 * S_MntWines  +     2.55833904797689 *
1139211   +        S_NumDistPurchases  +     3.33552253786577 * S_RFMstat
1139212   +          +     2.15128325510301 * S_RMntFrq  +     0.51475149451235 *
1139213   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.06045586654134 * S_AcceptedCmpTotal + -1.51896554067022 * 
S_Frq + -0.77690899609172 * S_Income + -3.83443076797312 * S_Mnt + -0.49066287190692 * 
S_MntGoldProds + 7.74304126889741 * S_MntMeatProducts + 0.97717560040665 * S_MntWines + 
2.55833904797689 * S_NumDistPurchases + 3.33552253786577 * S_RFMstat + 2.15128325510301 * 
S_RMntFrq + 0.51475149451235 * S_Recency ;
1139214   +   H1x1_6  =    -2.00102225492393 * S_AcceptedCmpTotal
1139215   +          +    -0.55313430858805 * S_Frq  +    -2.80039880440251 * S_Income
1139216   +          +    -0.52613628819852 * S_Mnt  +    -1.25580169134654 *
1139217   +        S_MntGoldProds  +    -1.44511464402737 * S_MntMeatProducts
1139218   +          +    -0.66744558284147 * S_MntWines  +     3.15612301024597 *
1139219   +        S_NumDistPurchases  +    -0.57805918326136 * S_RFMstat
1139220   +          +     0.13349014037678 * S_RMntFrq  +    -1.97053621157132 *
1139221   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.00102225492393 * S_AcceptedCmpTotal + -0.55313430858805 * 
S_Frq + -2.80039880440251 * S_Income + -0.52613628819852 * S_Mnt + -1.25580169134654 * 
S_MntGoldProds + -1.44511464402737 * S_MntMeatProducts + -0.66744558284147 * S_MntWines + 
3.15612301024597 * S_NumDistPurchases + -0.57805918326136 * S_RFMstat + 0.13349014037678 * 
S_RMntFrq + -1.97053621157132 * S_Recency ;
1139222   +   H1x1_1  = H1x1_1  +     1.38825657874217 * G_Marital_Status0
1139223   +          +     0.90195662603521 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.38825657874217 * G_Marital_Status0 + 
0.90195662603521 * G_Marital_Status1 ;
1139224   +   H1x1_2  = H1x1_2  +     0.88138395159348 * G_Marital_Status0
1139225   +          +    -0.49019446056296 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.88138395159348 * G_Marital_Status0 + 
-0.49019446056296 * G_Marital_Status1 ;
1139226   +   H1x1_3  = H1x1_3  +     0.30990330359421 * G_Marital_Status0
1139227   +          +     1.10544938214372 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.30990330359421 * G_Marital_Status0 + 
1.10544938214372 * G_Marital_Status1 ;
1139228   +   H1x1_4  = H1x1_4  +     1.70251598227875 * G_Marital_Status0
1139229   +          +     0.87683669160259 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 1.70251598227875 * G_Marital_Status0 + 
0.87683669160259 * G_Marital_Status1 ;
1139230   +   H1x1_5  = H1x1_5  +    -0.14678805736317 * G_Marital_Status0
1139231   +          +    -0.13246180955576 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14678805736317 * G_Marital_Status0 + 
-0.13246180955576 * G_Marital_Status1 ;
1139232   +   H1x1_6  = H1x1_6  +     -0.6511155024316 * G_Marital_Status0
1139233   +          +     0.24707257141342 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.6511155024316 * G_Marital_Status0 + 
0.24707257141342 * G_Marital_Status1 ;
1139234   +   H1x1_1  =     4.82277728923766 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.82277728923766 + H1x1_1 ;
1139235   +   H1x1_2  =     2.49777705822347 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.49777705822347 + H1x1_2 ;
1139236   +   H1x1_3  =    -0.93289135595041 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.93289135595041 + H1x1_3 ;
1139237   +   H1x1_4  =    -7.80421802944398 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.80421802944398 + H1x1_4 ;
1139238   +   H1x1_5  =     6.46115064589724 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 6.46115064589724 + H1x1_5 ;
1139239   +   H1x1_6  =     3.21096596966888 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 3.21096596966888 + H1x1_6 ;
1139240   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1139241   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1139242   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1139243   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1139244   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1139245   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1139246   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1139247   +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
1139248   +END;
MPRINT(EM_DIAGRAM):   END;
1139249   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1139250   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1139251   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1139252   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1139253   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1139254   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1139255   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1139256   +END;
MPRINT(EM_DIAGRAM):   END;
1139257   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139258   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1139259   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139260   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1139261   +   H1x2_1  =    -0.30711239275958 * S_AcceptedCmpTotal
1139262   +          +    -1.45395291114633 * S_Frq  +     0.87594950917085 * S_Income
1139263   +          +    -0.72639274085105 * S_Mnt  +    -2.47797355837112 *
1139264   +        S_MntGoldProds  +     0.68384082088335 * S_MntMeatProducts
1139265   +          +     0.65600644755641 * S_MntWines  +      0.8163360453447 *
1139266   +        S_NumDistPurchases  +    -1.09587924440912 * S_RFMstat
1139267   +          +     1.48347762248449 * S_RMntFrq  +      0.2335216261547 *
1139268   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.30711239275958 * S_AcceptedCmpTotal + -1.45395291114633 * 
S_Frq + 0.87594950917085 * S_Income + -0.72639274085105 * S_Mnt + -2.47797355837112 * 
S_MntGoldProds + 0.68384082088335 * S_MntMeatProducts + 0.65600644755641 * S_MntWines + 
0.8163360453447 * S_NumDistPurchases + -1.09587924440912 * S_RFMstat + 1.48347762248449 * 
S_RMntFrq + 0.2335216261547 * S_Recency ;
1139269   +   H1x2_2  =     2.57777770372275 * S_AcceptedCmpTotal
1139270   +          +    -0.08699050003337 * S_Frq  +      0.9048262025585 * S_Income
1139271   +          +     0.80716409242733 * S_Mnt  +     0.92862088643502 *
1139272   +        S_MntGoldProds  +     1.28722996014956 * S_MntMeatProducts
1139273   +          +    -0.78107065942411 * S_MntWines  +     2.29787925805392 *
1139274   +        S_NumDistPurchases  +     -0.7095984076797 * S_RFMstat
1139275   +          +    -0.75276407747323 * S_RMntFrq  +    -2.14859674388241 *
1139276   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 2.57777770372275 * S_AcceptedCmpTotal + -0.08699050003337 * 
S_Frq + 0.9048262025585 * S_Income + 0.80716409242733 * S_Mnt + 0.92862088643502 * 
S_MntGoldProds + 1.28722996014956 * S_MntMeatProducts + -0.78107065942411 * S_MntWines + 
2.29787925805392 * S_NumDistPurchases + -0.7095984076797 * S_RFMstat + -0.75276407747323 * 
S_RMntFrq + -2.14859674388241 * S_Recency ;
1139277   +   H1x2_3  =    -0.19225474668372 * S_AcceptedCmpTotal
1139278   +          +     -0.5399776824486 * S_Frq  +    -0.33342356858106 * S_Income
1139279   +          +      0.4662552460972 * S_Mnt  +    -0.83897697999245 *
1139280   +        S_MntGoldProds  +    -1.02069791829975 * S_MntMeatProducts
1139281   +          +    -0.77568646594215 * S_MntWines  +    -2.64172584610703 *
1139282   +        S_NumDistPurchases  +     1.22587043380457 * S_RFMstat
1139283   +          +    -1.22124295004478 * S_RMntFrq  +     0.72727673065668 *
1139284   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.19225474668372 * S_AcceptedCmpTotal + -0.5399776824486 * 
S_Frq + -0.33342356858106 * S_Income + 0.4662552460972 * S_Mnt + -0.83897697999245 * 
S_MntGoldProds + -1.02069791829975 * S_MntMeatProducts + -0.77568646594215 * S_MntWines + 
-2.64172584610703 * S_NumDistPurchases + 1.22587043380457 * S_RFMstat + -1.22124295004478 * 
S_RMntFrq + 0.72727673065668 * S_Recency ;
1139285   +   H1x2_4  =     1.07963833884217 * S_AcceptedCmpTotal
1139286   +          +    -1.30033554705908 * S_Frq  +     0.80740030463615 * S_Income
1139287   +          +    -1.73808129607223 * S_Mnt  +     1.21346647777818 *
1139288   +        S_MntGoldProds  +     0.69007605858806 * S_MntMeatProducts
1139289   +          +     0.31548401471349 * S_MntWines  +    -0.45355998387313 *
1139290   +        S_NumDistPurchases  +     1.13504256910361 * S_RFMstat
1139291   +          +    -0.45561637629388 * S_RMntFrq  +    -1.42094697023704 *
1139292   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.07963833884217 * S_AcceptedCmpTotal + -1.30033554705908 * 
S_Frq + 0.80740030463615 * S_Income + -1.73808129607223 * S_Mnt + 1.21346647777818 * 
S_MntGoldProds + 0.69007605858806 * S_MntMeatProducts + 0.31548401471349 * S_MntWines + 
-0.45355998387313 * S_NumDistPurchases + 1.13504256910361 * S_RFMstat + -0.45561637629388 * 
S_RMntFrq + -1.42094697023704 * S_Recency ;
1139293   +   H1x2_5  =     0.30163018627699 * S_AcceptedCmpTotal
1139294   +          +    -0.73947459722676 * S_Frq  +      0.3117229426353 * S_Income
1139295   +          +     1.78189396082002 * S_Mnt  +    -1.51478593904163 *
1139296   +        S_MntGoldProds  +    -1.30328540691967 * S_MntMeatProducts
1139297   +          +     0.48947220852953 * S_MntWines  +     0.25380878841531 *
1139298   +        S_NumDistPurchases  +    -0.09429027402746 * S_RFMstat
1139299   +          +     2.79720421337828 * S_RMntFrq  +    -0.08024855242737 *
1139300   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30163018627699 * S_AcceptedCmpTotal + -0.73947459722676 * 
S_Frq + 0.3117229426353 * S_Income + 1.78189396082002 * S_Mnt + -1.51478593904163 * 
S_MntGoldProds + -1.30328540691967 * S_MntMeatProducts + 0.48947220852953 * S_MntWines + 
0.25380878841531 * S_NumDistPurchases + -0.09429027402746 * S_RFMstat + 2.79720421337828 * 
S_RMntFrq + -0.08024855242737 * S_Recency ;
1139301   +   H1x2_6  =    -0.05006047355159 * S_AcceptedCmpTotal
1139302   +          +     0.01838632143297 * S_Frq  +    -1.04892137940395 * S_Income
1139303   +          +    -0.33949418476309 * S_Mnt  +     1.27820886482898 *
1139304   +        S_MntGoldProds  +      0.1541042926193 * S_MntMeatProducts
1139305   +          +    -0.30996391960135 * S_MntWines  +     0.69532310497927 *
1139306   +        S_NumDistPurchases  +    -0.51247610421467 * S_RFMstat
1139307   +          +    -0.87640728095011 * S_RMntFrq  +     1.79661996586627 *
1139308   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.05006047355159 * S_AcceptedCmpTotal + 0.01838632143297 * 
S_Frq + -1.04892137940395 * S_Income + -0.33949418476309 * S_Mnt + 1.27820886482898 * 
S_MntGoldProds + 0.1541042926193 * S_MntMeatProducts + -0.30996391960135 * S_MntWines + 
0.69532310497927 * S_NumDistPurchases + -0.51247610421467 * S_RFMstat + -0.87640728095011 * 
S_RMntFrq + 1.79661996586627 * S_Recency ;
1139309   +   H1x2_1  = H1x2_1  +    -1.52372947412233 * G_Marital_Status0
1139310   +          +     0.61190614442174 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.52372947412233 * G_Marital_Status0 + 
0.61190614442174 * G_Marital_Status1 ;
1139311   +   H1x2_2  = H1x2_2  +     -0.2899112326334 * G_Marital_Status0
1139312   +          +    -0.43943770039245 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.2899112326334 * G_Marital_Status0 + 
-0.43943770039245 * G_Marital_Status1 ;
1139313   +   H1x2_3  = H1x2_3  +    -1.30447843367338 * G_Marital_Status0
1139314   +          +     0.36969296112687 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.30447843367338 * G_Marital_Status0 + 
0.36969296112687 * G_Marital_Status1 ;
1139315   +   H1x2_4  = H1x2_4  +     1.06192432928756 * G_Marital_Status0
1139316   +          +    -0.48897798100871 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.06192432928756 * G_Marital_Status0 + 
-0.48897798100871 * G_Marital_Status1 ;
1139317   +   H1x2_5  = H1x2_5  +     1.24023950705702 * G_Marital_Status0
1139318   +          +     -0.0768652239427 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.24023950705702 * G_Marital_Status0 + 
-0.0768652239427 * G_Marital_Status1 ;
1139319   +   H1x2_6  = H1x2_6  +    -0.79854804689099 * G_Marital_Status0
1139320   +          +    -0.58590001312977 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.79854804689099 * G_Marital_Status0 + 
-0.58590001312977 * G_Marital_Status1 ;
1139321   +   H1x2_1  =    -1.24057312487712 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.24057312487712 + H1x2_1 ;
1139322   +   H1x2_2  =    -0.68291139361923 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.68291139361923 + H1x2_2 ;
1139323   +   H1x2_3  =     1.06420344729961 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.06420344729961 + H1x2_3 ;
1139324   +   H1x2_4  =    -2.69713708678823 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -2.69713708678823 + H1x2_4 ;
1139325   +   H1x2_5  =    -0.12447063994137 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.12447063994137 + H1x2_5 ;
1139326   +   H1x2_6  =     -1.0719988986801 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -1.0719988986801 + H1x2_6 ;
1139327   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1139328   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1139329   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1139330   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
1139331   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
1139332   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
1139333   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
1139334   +   H1x2_6  = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
1139335   +END;
MPRINT(EM_DIAGRAM):   END;
1139336   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1139337   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1139338   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1139339   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1139340   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1139341   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1139342   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1139343   +END;
MPRINT(EM_DIAGRAM):   END;
1139344   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139345   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1139346   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139347   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1139348   +   H1x3_1  =     0.58141896766328 * S_AcceptedCmpTotal
1139349   +          +     0.88835106317195 * S_Frq  +     1.03397412242189 * S_Income
1139350   +          +    -0.19511498332885 * S_Mnt  +     0.79222351582255 *
1139351   +        S_MntGoldProds  +     1.84666352042484 * S_MntMeatProducts
1139352   +          +     0.26439819900146 * S_MntWines  +    -0.49316136014272 *
1139353   +        S_NumDistPurchases  +    -1.53931690693652 * S_RFMstat
1139354   +          +     0.66163259224518 * S_RMntFrq  +    -0.05038100966606 *
1139355   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.58141896766328 * S_AcceptedCmpTotal + 0.88835106317195 * 
S_Frq + 1.03397412242189 * S_Income + -0.19511498332885 * S_Mnt + 0.79222351582255 * 
S_MntGoldProds + 1.84666352042484 * S_MntMeatProducts + 0.26439819900146 * S_MntWines + 
-0.49316136014272 * S_NumDistPurchases + -1.53931690693652 * S_RFMstat + 0.66163259224518 * 
S_RMntFrq + -0.05038100966606 * S_Recency ;
1139356   +   H1x3_2  =    -0.66965742898236 * S_AcceptedCmpTotal
1139357   +          +     0.11439761295336 * S_Frq  +      0.4311111590428 * S_Income
1139358   +          +     0.56419594384106 * S_Mnt  +    -2.58586026844722 *
1139359   +        S_MntGoldProds  +     0.84843617907069 * S_MntMeatProducts
1139360   +          +    -0.40949465894409 * S_MntWines  +    -1.12254199224924 *
1139361   +        S_NumDistPurchases  +    -1.73672932018459 * S_RFMstat
1139362   +          +     0.60800652848154 * S_RMntFrq  +     0.90023461529092 *
1139363   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.66965742898236 * S_AcceptedCmpTotal + 0.11439761295336 * 
S_Frq + 0.4311111590428 * S_Income + 0.56419594384106 * S_Mnt + -2.58586026844722 * 
S_MntGoldProds + 0.84843617907069 * S_MntMeatProducts + -0.40949465894409 * S_MntWines + 
-1.12254199224924 * S_NumDistPurchases + -1.73672932018459 * S_RFMstat + 0.60800652848154 * 
S_RMntFrq + 0.90023461529092 * S_Recency ;
1139364   +   H1x3_3  =     0.64116254904887 * S_AcceptedCmpTotal
1139365   +          +     0.36521168161033 * S_Frq  +    -1.65592742965949 * S_Income
1139366   +          +    -1.13010637801203 * S_Mnt  +     1.18435160743823 *
1139367   +        S_MntGoldProds  +     0.61014939723339 * S_MntMeatProducts
1139368   +          +     0.57967362971329 * S_MntWines  +    -0.00705774722842 *
1139369   +        S_NumDistPurchases  +    -0.09732595050305 * S_RFMstat
1139370   +          +    -1.58268748567816 * S_RMntFrq  +    -1.00117301133743 *
1139371   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.64116254904887 * S_AcceptedCmpTotal + 0.36521168161033 * 
S_Frq + -1.65592742965949 * S_Income + -1.13010637801203 * S_Mnt + 1.18435160743823 * 
S_MntGoldProds + 0.61014939723339 * S_MntMeatProducts + 0.57967362971329 * S_MntWines + 
-0.00705774722842 * S_NumDistPurchases + -0.09732595050305 * S_RFMstat + -1.58268748567816 * 
S_RMntFrq + -1.00117301133743 * S_Recency ;
1139372   +   H1x3_4  =    -2.38943135123073 * S_AcceptedCmpTotal
1139373   +          +     0.50616478854457 * S_Frq  +     1.68985840818789 * S_Income
1139374   +          +    -0.51011802824515 * S_Mnt  +     1.25167622017055 *
1139375   +        S_MntGoldProds  +    -0.78430871718616 * S_MntMeatProducts
1139376   +          +     0.97685472578698 * S_MntWines  +    -0.66992601103029 *
1139377   +        S_NumDistPurchases  +    -0.28545877583545 * S_RFMstat
1139378   +          +     0.52712575990538 * S_RMntFrq  +     1.51096273676103 *
1139379   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -2.38943135123073 * S_AcceptedCmpTotal + 0.50616478854457 * 
S_Frq + 1.68985840818789 * S_Income + -0.51011802824515 * S_Mnt + 1.25167622017055 * 
S_MntGoldProds + -0.78430871718616 * S_MntMeatProducts + 0.97685472578698 * S_MntWines + 
-0.66992601103029 * S_NumDistPurchases + -0.28545877583545 * S_RFMstat + 0.52712575990538 * 
S_RMntFrq + 1.51096273676103 * S_Recency ;
1139380   +   H1x3_5  =     0.27293739636898 * S_AcceptedCmpTotal
1139381   +          +     0.44515009768765 * S_Frq  +     -0.4521347788574 * S_Income
1139382   +          +     0.43943223859703 * S_Mnt  +     1.17781847894182 *
1139383   +        S_MntGoldProds  +    -0.67700757595581 * S_MntMeatProducts
1139384   +          +    -1.46437355846341 * S_MntWines  +    -0.09365592083561 *
1139385   +        S_NumDistPurchases  +     0.94926901433762 * S_RFMstat
1139386   +          +     2.40216905424957 * S_RMntFrq  +     0.65859109347516 *
1139387   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.27293739636898 * S_AcceptedCmpTotal + 0.44515009768765 * 
S_Frq + -0.4521347788574 * S_Income + 0.43943223859703 * S_Mnt + 1.17781847894182 * 
S_MntGoldProds + -0.67700757595581 * S_MntMeatProducts + -1.46437355846341 * S_MntWines + 
-0.09365592083561 * S_NumDistPurchases + 0.94926901433762 * S_RFMstat + 2.40216905424957 * 
S_RMntFrq + 0.65859109347516 * S_Recency ;
1139388   +   H1x3_6  =     0.79944121174459 * S_AcceptedCmpTotal
1139389   +          +     0.19594924011495 * S_Frq  +     1.07233338144708 * S_Income
1139390   +          +    -0.39577530492174 * S_Mnt  +    -0.18122578134776 *
1139391   +        S_MntGoldProds  +    -0.26451891721245 * S_MntMeatProducts
1139392   +          +    -0.86856724355925 * S_MntWines  +    -1.81909916765471 *
1139393   +        S_NumDistPurchases  +     1.03983663011092 * S_RFMstat
1139394   +          +    -0.86768378180894 * S_RMntFrq  +     0.40747604583851 *
1139395   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.79944121174459 * S_AcceptedCmpTotal + 0.19594924011495 * 
S_Frq + 1.07233338144708 * S_Income + -0.39577530492174 * S_Mnt + -0.18122578134776 * 
S_MntGoldProds + -0.26451891721245 * S_MntMeatProducts + -0.86856724355925 * S_MntWines + 
-1.81909916765471 * S_NumDistPurchases + 1.03983663011092 * S_RFMstat + -0.86768378180894 * 
S_RMntFrq + 0.40747604583851 * S_Recency ;
1139396   +   H1x3_1  = H1x3_1  +    -1.44819834546359 * G_Marital_Status0
1139397   +          +     2.03049158937708 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.44819834546359 * G_Marital_Status0 + 
2.03049158937708 * G_Marital_Status1 ;
1139398   +   H1x3_2  = H1x3_2  +     0.32142977922032 * G_Marital_Status0
1139399   +          +     0.95456795317325 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.32142977922032 * G_Marital_Status0 + 
0.95456795317325 * G_Marital_Status1 ;
1139400   +   H1x3_3  = H1x3_3  +    -0.05546140673943 * G_Marital_Status0
1139401   +          +    -0.64267205173982 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.05546140673943 * G_Marital_Status0 + 
-0.64267205173982 * G_Marital_Status1 ;
1139402   +   H1x3_4  = H1x3_4  +     0.67758459902812 * G_Marital_Status0
1139403   +          +    -0.13878277097624 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 0.67758459902812 * G_Marital_Status0 + 
-0.13878277097624 * G_Marital_Status1 ;
1139404   +   H1x3_5  = H1x3_5  +      0.2080585980069 * G_Marital_Status0
1139405   +          +     0.39530416624983 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.2080585980069 * G_Marital_Status0 + 0.39530416624983 
* G_Marital_Status1 ;
1139406   +   H1x3_6  = H1x3_6  +    -0.56268194068278 * G_Marital_Status0
1139407   +          +    -1.38939757582535 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -0.56268194068278 * G_Marital_Status0 + 
-1.38939757582535 * G_Marital_Status1 ;
1139408   +   H1x3_1  =    -0.02110450300917 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02110450300917 + H1x3_1 ;
1139409   +   H1x3_2  =     0.68400964836412 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.68400964836412 + H1x3_2 ;
1139410   +   H1x3_3  =     1.27295692924548 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.27295692924548 + H1x3_3 ;
1139411   +   H1x3_4  =     0.57759340173339 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.57759340173339 + H1x3_4 ;
1139412   +   H1x3_5  =     0.68658947855937 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.68658947855937 + H1x3_5 ;
1139413   +   H1x3_6  =     0.96960260915788 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.96960260915788 + H1x3_6 ;
1139414   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1139415   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1139416   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1139417   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
1139418   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
1139419   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
1139420   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
1139421   +   H1x3_6  = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
1139422   +END;
MPRINT(EM_DIAGRAM):   END;
1139423   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1139424   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1139425   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1139426   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1139427   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
1139428   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
1139429   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
1139430   +END;
MPRINT(EM_DIAGRAM):   END;
1139431   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139432   +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
1139433   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139434   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1139435   +   H1x4_1  =     1.13261766886471 * S_AcceptedCmpTotal
1139436   +          +     0.78824304763496 * S_Frq  +    -1.86817100110189 * S_Income
1139437   +          +    -1.58760227599089 * S_Mnt  +     -1.1330886213304 *
1139438   +        S_MntGoldProds  +     0.82082069255126 * S_MntMeatProducts
1139439   +          +    -0.34149449572975 * S_MntWines  +     0.45944109671738 *
1139440   +        S_NumDistPurchases  +     2.00910621486809 * S_RFMstat
1139441   +          +     -1.8305685414059 * S_RMntFrq  +     1.46038466341548 *
1139442   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.13261766886471 * S_AcceptedCmpTotal + 0.78824304763496 * 
S_Frq + -1.86817100110189 * S_Income + -1.58760227599089 * S_Mnt + -1.1330886213304 * 
S_MntGoldProds + 0.82082069255126 * S_MntMeatProducts + -0.34149449572975 * S_MntWines + 
0.45944109671738 * S_NumDistPurchases + 2.00910621486809 * S_RFMstat + -1.8305685414059 * 
S_RMntFrq + 1.46038466341548 * S_Recency ;
1139443   +   H1x4_2  =    -0.63266188932348 * S_AcceptedCmpTotal
1139444   +          +    -0.01183486383209 * S_Frq  +    -1.07560568030024 * S_Income
1139445   +          +    -1.30988288899902 * S_Mnt  +     2.15841401397408 *
1139446   +        S_MntGoldProds  +    -1.27808965763357 * S_MntMeatProducts
1139447   +          +     2.04886920467378 * S_MntWines  +     0.09322121012781 *
1139448   +        S_NumDistPurchases  +    -0.37050311259862 * S_RFMstat
1139449   +          +     0.68085578996214 * S_RMntFrq  +     1.48508197039719 *
1139450   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -0.63266188932348 * S_AcceptedCmpTotal + -0.01183486383209 * 
S_Frq + -1.07560568030024 * S_Income + -1.30988288899902 * S_Mnt + 2.15841401397408 * 
S_MntGoldProds + -1.27808965763357 * S_MntMeatProducts + 2.04886920467378 * S_MntWines + 
0.09322121012781 * S_NumDistPurchases + -0.37050311259862 * S_RFMstat + 0.68085578996214 * 
S_RMntFrq + 1.48508197039719 * S_Recency ;
1139451   +   H1x4_3  =    -0.53647455024397 * S_AcceptedCmpTotal
1139452   +          +     0.24459727005497 * S_Frq  +     0.30319155437277 * S_Income
1139453   +          +     0.25206471395865 * S_Mnt  +     0.43917953957135 *
1139454   +        S_MntGoldProds  +    -0.10933570154764 * S_MntMeatProducts
1139455   +          +    -0.04059236687792 * S_MntWines  +     0.35677739352706 *
1139456   +        S_NumDistPurchases  +     1.38086899403811 * S_RFMstat
1139457   +          +    -0.32751457592661 * S_RMntFrq  +    -0.15926282047245 *
1139458   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_3 = -0.53647455024397 * S_AcceptedCmpTotal + 0.24459727005497 * 
S_Frq + 0.30319155437277 * S_Income + 0.25206471395865 * S_Mnt + 0.43917953957135 * 
S_MntGoldProds + -0.10933570154764 * S_MntMeatProducts + -0.04059236687792 * S_MntWines + 
0.35677739352706 * S_NumDistPurchases + 1.38086899403811 * S_RFMstat + -0.32751457592661 * 
S_RMntFrq + -0.15926282047245 * S_Recency ;
1139459   +   H1x4_4  =     0.24225159923716 * S_AcceptedCmpTotal
1139460   +          +    -0.83397540163538 * S_Frq  +     0.65454415304883 * S_Income
1139461   +          +     -2.1008417113285 * S_Mnt  +     1.46444392612369 *
1139462   +        S_MntGoldProds  +     1.98843066844745 * S_MntMeatProducts
1139463   +          +    -0.31310064337061 * S_MntWines  +     0.56236194506314 *
1139464   +        S_NumDistPurchases  +    -0.20512833160409 * S_RFMstat
1139465   +          +    -0.20631901696385 * S_RMntFrq  +    -0.01945293751142 *
1139466   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 0.24225159923716 * S_AcceptedCmpTotal + -0.83397540163538 * 
S_Frq + 0.65454415304883 * S_Income + -2.1008417113285 * S_Mnt + 1.46444392612369 * 
S_MntGoldProds + 1.98843066844745 * S_MntMeatProducts + -0.31310064337061 * S_MntWines + 
0.56236194506314 * S_NumDistPurchases + -0.20512833160409 * S_RFMstat + -0.20631901696385 * 
S_RMntFrq + -0.01945293751142 * S_Recency ;
1139467   +   H1x4_5  =     -0.2800504242999 * S_AcceptedCmpTotal
1139468   +          +     0.11767474732461 * S_Frq  +    -1.78109558633383 * S_Income
1139469   +          +    -0.83275451396797 * S_Mnt  +     0.13772739876237 *
1139470   +        S_MntGoldProds  +    -0.00084509726748 * S_MntMeatProducts
1139471   +          +     0.92081955236291 * S_MntWines  +    -0.84663906140096 *
1139472   +        S_NumDistPurchases  +     1.07425261538134 * S_RFMstat
1139473   +          +    -0.27830850445101 * S_RMntFrq  +     0.74380794599056 *
1139474   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_5 = -0.2800504242999 * S_AcceptedCmpTotal + 0.11767474732461 * 
S_Frq + -1.78109558633383 * S_Income + -0.83275451396797 * S_Mnt + 0.13772739876237 * 
S_MntGoldProds + -0.00084509726748 * S_MntMeatProducts + 0.92081955236291 * S_MntWines + 
-0.84663906140096 * S_NumDistPurchases + 1.07425261538134 * S_RFMstat + -0.27830850445101 * 
S_RMntFrq + 0.74380794599056 * S_Recency ;
1139475   +   H1x4_6  =     -1.1119291723593 * S_AcceptedCmpTotal
1139476   +          +     0.56304851350844 * S_Frq  +     0.73567113537541 * S_Income
1139477   +          +    -3.12306246450604 * S_Mnt  +    -0.91316403938439 *
1139478   +        S_MntGoldProds  +    -2.69628755197256 * S_MntMeatProducts
1139479   +          +     0.85746867824621 * S_MntWines  +    -0.36724035406906 *
1139480   +        S_NumDistPurchases  +     0.28568968295985 * S_RFMstat
1139481   +          +    -0.93954323577146 * S_RMntFrq  +     0.85268992665591 *
1139482   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_6 = -1.1119291723593 * S_AcceptedCmpTotal + 0.56304851350844 * 
S_Frq + 0.73567113537541 * S_Income + -3.12306246450604 * S_Mnt + -0.91316403938439 * 
S_MntGoldProds + -2.69628755197256 * S_MntMeatProducts + 0.85746867824621 * S_MntWines + 
-0.36724035406906 * S_NumDistPurchases + 0.28568968295985 * S_RFMstat + -0.93954323577146 * 
S_RMntFrq + 0.85268992665591 * S_Recency ;
1139483   +   H1x4_1  = H1x4_1  +    -0.41637670428316 * G_Marital_Status0
1139484   +          +     1.82577173192743 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + -0.41637670428316 * G_Marital_Status0 + 
1.82577173192743 * G_Marital_Status1 ;
1139485   +   H1x4_2  = H1x4_2  +     1.30084682846119 * G_Marital_Status0
1139486   +          +     1.86494194086223 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + 1.30084682846119 * G_Marital_Status0 + 
1.86494194086223 * G_Marital_Status1 ;
1139487   +   H1x4_3  = H1x4_3  +    -2.51039247492524 * G_Marital_Status0
1139488   +          +    -0.78535196846115 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = H1x4_3 + -2.51039247492524 * G_Marital_Status0 + 
-0.78535196846115 * G_Marital_Status1 ;
1139489   +   H1x4_4  = H1x4_4  +    -1.66536345681649 * G_Marital_Status0
1139490   +          +    -1.13643623224979 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = H1x4_4 + -1.66536345681649 * G_Marital_Status0 + 
-1.13643623224979 * G_Marital_Status1 ;
1139491   +   H1x4_5  = H1x4_5  +     0.34381083459151 * G_Marital_Status0
1139492   +          +    -0.50611098994468 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = H1x4_5 + 0.34381083459151 * G_Marital_Status0 + 
-0.50611098994468 * G_Marital_Status1 ;
1139493   +   H1x4_6  = H1x4_6  +    -0.50144547845039 * G_Marital_Status0
1139494   +          +     1.05855030017376 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = H1x4_6 + -0.50144547845039 * G_Marital_Status0 + 
1.05855030017376 * G_Marital_Status1 ;
1139495   +   H1x4_1  =     0.23907181959326 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 0.23907181959326 + H1x4_1 ;
1139496   +   H1x4_2  =    -1.57201194785995 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -1.57201194785995 + H1x4_2 ;
1139497   +   H1x4_3  =     2.06322674265618 + H1x4_3 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = 2.06322674265618 + H1x4_3 ;
1139498   +   H1x4_4  =     1.01469021578807 + H1x4_4 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.01469021578807 + H1x4_4 ;
1139499   +   H1x4_5  =     1.07767489348013 + H1x4_5 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.07767489348013 + H1x4_5 ;
1139500   +   H1x4_6  =     0.04477742816865 + H1x4_6 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = 0.04477742816865 + H1x4_6 ;
1139501   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1139502   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1139503   +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
1139504   +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
1139505   +   H1x4_3  = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_3 = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
1139506   +   H1x4_4  = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
1139507   +   H1x4_5  = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
1139508   +   H1x4_6  = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_6 = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
1139509   +END;
MPRINT(EM_DIAGRAM):   END;
1139510   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1139511   +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
1139512   +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
1139513   +   H1x4_3  = .;
MPRINT(EM_DIAGRAM):   H1x4_3 = .;
1139514   +   H1x4_4  = .;
MPRINT(EM_DIAGRAM):   H1x4_4 = .;
1139515   +   H1x4_5  = .;
MPRINT(EM_DIAGRAM):   H1x4_5 = .;
1139516   +   H1x4_6  = .;
MPRINT(EM_DIAGRAM):   H1x4_6 = .;
1139517   +END;
MPRINT(EM_DIAGRAM):   END;
1139518   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139519   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1139520   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139521   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1139522   +   H2x1_1  =     1.57657363240028 * H1x1_1  +    -0.37699618626432 * H1x1_2
1139523   +          +    -0.60919993629457 * H1x1_3  +     2.97257779188857 * H1x1_4
1139524   +          +     4.47740938165819 * H1x1_5  +    -0.85059681057218 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.57657363240028 * H1x1_1 + -0.37699618626432 * H1x1_2 + 
-0.60919993629457 * H1x1_3 + 2.97257779188857 * H1x1_4 + 4.47740938165819 * H1x1_5 + 
-0.85059681057218 * H1x1_6 ;
1139525   +   H2x1_2  =     0.58245150995434 * H1x1_1  +     1.31825599717827 * H1x1_2
1139526   +          +    -0.46604129874265 * H1x1_3  +    -1.57880778011961 * H1x1_4
1139527   +          +      0.1296024356855 * H1x1_5  +    -0.32310175742174 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.58245150995434 * H1x1_1 + 1.31825599717827 * H1x1_2 + 
-0.46604129874265 * H1x1_3 + -1.57880778011961 * H1x1_4 + 0.1296024356855 * H1x1_5 + 
-0.32310175742174 * H1x1_6 ;
1139528   +   H2x1_3  =     0.08762368266386 * H1x1_1  +     -2.1587359786783 * H1x1_2
1139529   +          +     0.53603825884818 * H1x1_3  +    -0.24087329015868 * H1x1_4
1139530   +          +     0.03296173080719 * H1x1_5  +     0.01697480121243 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.08762368266386 * H1x1_1 + -2.1587359786783 * H1x1_2 + 
0.53603825884818 * H1x1_3 + -0.24087329015868 * H1x1_4 + 0.03296173080719 * H1x1_5 + 
0.01697480121243 * H1x1_6 ;
1139531   +   H2x1_4  =    -0.11182680657167 * H1x1_1  +     0.78238566788271 * H1x1_2
1139532   +          +    -0.32984662645651 * H1x1_3  +    -0.48952564803009 * H1x1_4
1139533   +          +    -1.99607614008712 * H1x1_5  +     0.10016209874446 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.11182680657167 * H1x1_1 + 0.78238566788271 * H1x1_2 + 
-0.32984662645651 * H1x1_3 + -0.48952564803009 * H1x1_4 + -1.99607614008712 * H1x1_5 + 
0.10016209874446 * H1x1_6 ;
1139534   +   H2x1_5  =     -1.2498866108229 * H1x1_1  +      3.2369796406078 * H1x1_2
1139535   +          +      2.8181066223344 * H1x1_3  +    -3.11752751718664 * H1x1_4
1139536   +          +    -0.69294382105442 * H1x1_5  +     1.50580112761945 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.2498866108229 * H1x1_1 + 3.2369796406078 * H1x1_2 + 
2.8181066223344 * H1x1_3 + -3.11752751718664 * H1x1_4 + -0.69294382105442 * H1x1_5 + 
1.50580112761945 * H1x1_6 ;
1139537   +   H2x1_1  = H2x1_1  +     1.23510627062479 * H1x2_1
1139538   +          +     0.24021661687189 * H1x2_2  +    -1.56696654026909 * H1x2_3
1139539   +          +     1.87814576627429 * H1x2_4  +     0.77581978719058 * H1x2_5
1139540   +          +    -0.36964326956968 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.23510627062479 * H1x2_1 + 0.24021661687189 * H1x2_2 
+ -1.56696654026909 * H1x2_3 + 1.87814576627429 * H1x2_4 + 0.77581978719058 * H1x2_5 + 
-0.36964326956968 * H1x2_6 ;
1139541   +   H2x1_2  = H2x1_2  +     0.92347023180909 * H1x2_1
1139542   +          +    -0.58884204034707 * H1x2_2  +     0.32527960762166 * H1x2_3
1139543   +          +    -2.67192710315835 * H1x2_4  +     1.11142627890507 * H1x2_5
1139544   +          +     -0.0675747785188 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.92347023180909 * H1x2_1 + -0.58884204034707 * H1x2_2 
+ 0.32527960762166 * H1x2_3 + -2.67192710315835 * H1x2_4 + 1.11142627890507 * H1x2_5 + 
-0.0675747785188 * H1x2_6 ;
1139545   +   H2x1_3  = H2x1_3  +    -0.92500735470206 * H1x2_1
1139546   +          +     0.02449601034461 * H1x2_2  +    -0.75716713196308 * H1x2_3
1139547   +          +     0.16672538074212 * H1x2_4  +    -1.03440004099384 * H1x2_5
1139548   +          +     0.20622228187831 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.92500735470206 * H1x2_1 + 0.02449601034461 * H1x2_2 
+ -0.75716713196308 * H1x2_3 + 0.16672538074212 * H1x2_4 + -1.03440004099384 * H1x2_5 + 
0.20622228187831 * H1x2_6 ;
1139549   +   H2x1_4  = H2x1_4  +     1.25485096748114 * H1x2_1
1139550   +          +     -0.2345670529973 * H1x2_2  +     1.00007865183196 * H1x2_3
1139551   +          +    -0.19520365006597 * H1x2_4  +     0.15141232788955 * H1x2_5
1139552   +          +     0.99704195296742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25485096748114 * H1x2_1 + -0.2345670529973 * H1x2_2 
+ 1.00007865183196 * H1x2_3 + -0.19520365006597 * H1x2_4 + 0.15141232788955 * H1x2_5 + 
0.99704195296742 * H1x2_6 ;
1139553   +   H2x1_5  = H2x1_5  +    -0.65666404502833 * H1x2_1
1139554   +          +     2.28944563427288 * H1x2_2  +    -0.53344610521696 * H1x2_3
1139555   +          +      -0.793597979143 * H1x2_4  +     -0.5657184003534 * H1x2_5
1139556   +          +     0.52117926766363 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.65666404502833 * H1x2_1 + 2.28944563427288 * H1x2_2 
+ -0.53344610521696 * H1x2_3 + -0.793597979143 * H1x2_4 + -0.5657184003534 * H1x2_5 + 
0.52117926766363 * H1x2_6 ;
1139557   +   H2x1_1  = H2x1_1  +    -0.22872297219456 * H1x3_1
1139558   +          +     0.44130997341488 * H1x3_2  +     0.85543947016407 * H1x3_3
1139559   +          +      0.9172319436964 * H1x3_4  +    -0.63323674278101 * H1x3_5
1139560   +          +       0.010792162082 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.22872297219456 * H1x3_1 + 0.44130997341488 * H1x3_2 
+ 0.85543947016407 * H1x3_3 + 0.9172319436964 * H1x3_4 + -0.63323674278101 * H1x3_5 + 
0.010792162082 * H1x3_6 ;
1139561   +   H2x1_2  = H2x1_2  +    -0.47961853683007 * H1x3_1
1139562   +          +     0.67283234118014 * H1x3_2  +    -0.12148381681871 * H1x3_3
1139563   +          +     0.11539127068604 * H1x3_4  +     0.71547134269459 * H1x3_5
1139564   +          +     0.31051080747621 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.47961853683007 * H1x3_1 + 0.67283234118014 * H1x3_2 
+ -0.12148381681871 * H1x3_3 + 0.11539127068604 * H1x3_4 + 0.71547134269459 * H1x3_5 + 
0.31051080747621 * H1x3_6 ;
1139565   +   H2x1_3  = H2x1_3  +     0.84914297140244 * H1x3_1
1139566   +          +     0.52803158023536 * H1x3_2  +    -1.39949725219783 * H1x3_3
1139567   +          +     0.69603350257472 * H1x3_4  +    -0.99298091528215 * H1x3_5
1139568   +          +      0.4901677948096 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.84914297140244 * H1x3_1 + 0.52803158023536 * H1x3_2 
+ -1.39949725219783 * H1x3_3 + 0.69603350257472 * H1x3_4 + -0.99298091528215 * H1x3_5 + 
0.4901677948096 * H1x3_6 ;
1139569   +   H2x1_4  = H2x1_4  +     1.25437670540229 * H1x3_1
1139570   +          +     0.10767112672867 * H1x3_2  +     -2.4886577317349 * H1x3_3
1139571   +          +    -1.19999974192227 * H1x3_4  +     2.65195856746166 * H1x3_5
1139572   +          +    -0.35850032269696 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25437670540229 * H1x3_1 + 0.10767112672867 * H1x3_2 
+ -2.4886577317349 * H1x3_3 + -1.19999974192227 * H1x3_4 + 2.65195856746166 * H1x3_5 + 
-0.35850032269696 * H1x3_6 ;
1139573   +   H2x1_5  = H2x1_5  +    -0.18873569038601 * H1x3_1
1139574   +          +    -0.05695497456875 * H1x3_2  +    -1.09169714101723 * H1x3_3
1139575   +          +     0.66962829232535 * H1x3_4  +     0.68262583745167 * H1x3_5
1139576   +          +     0.91538472149247 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.18873569038601 * H1x3_1 + -0.05695497456875 * 
H1x3_2 + -1.09169714101723 * H1x3_3 + 0.66962829232535 * H1x3_4 + 0.68262583745167 * H1x3_5 + 
0.91538472149247 * H1x3_6 ;
1139577   +   H2x1_1  = H2x1_1  +    -0.77701371575001 * H1x4_1
1139578   +          +    -1.54239140939922 * H1x4_2  +    -0.26570372401877 * H1x4_3
1139579   +          +     0.00097824237229 * H1x4_4  +     0.57921309289721 * H1x4_5
1139580   +          +     1.46692133055956 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.77701371575001 * H1x4_1 + -1.54239140939922 * 
H1x4_2 + -0.26570372401877 * H1x4_3 + 0.00097824237229 * H1x4_4 + 0.57921309289721 * H1x4_5 + 
1.46692133055956 * H1x4_6 ;
1139581   +   H2x1_2  = H2x1_2  +     0.96564519202767 * H1x4_1
1139582   +          +    -0.06466152110331 * H1x4_2  +    -0.66659637249467 * H1x4_3
1139583   +          +     0.59673973270306 * H1x4_4  +     2.45492273841581 * H1x4_5
1139584   +          +     -0.4804481967354 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.96564519202767 * H1x4_1 + -0.06466152110331 * H1x4_2 
+ -0.66659637249467 * H1x4_3 + 0.59673973270306 * H1x4_4 + 2.45492273841581 * H1x4_5 + 
-0.4804481967354 * H1x4_6 ;
1139585   +   H2x1_3  = H2x1_3  +     0.75339074826799 * H1x4_1
1139586   +          +     1.26373188682879 * H1x4_2  +     0.49419374749947 * H1x4_3
1139587   +          +     1.26541916145956 * H1x4_4  +     0.10039190806961 * H1x4_5
1139588   +          +    -0.79556185531974 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.75339074826799 * H1x4_1 + 1.26373188682879 * H1x4_2 
+ 0.49419374749947 * H1x4_3 + 1.26541916145956 * H1x4_4 + 0.10039190806961 * H1x4_5 + 
-0.79556185531974 * H1x4_6 ;
1139589   +   H2x1_4  = H2x1_4  +    -0.28271287281925 * H1x4_1
1139590   +          +      2.1208193298333 * H1x4_2  +    -0.65223420232343 * H1x4_3
1139591   +          +     0.02666229497558 * H1x4_4  +     0.72865787458027 * H1x4_5
1139592   +          +    -0.22377472142722 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.28271287281925 * H1x4_1 + 2.1208193298333 * H1x4_2 
+ -0.65223420232343 * H1x4_3 + 0.02666229497558 * H1x4_4 + 0.72865787458027 * H1x4_5 + 
-0.22377472142722 * H1x4_6 ;
1139593   +   H2x1_5  = H2x1_5  +    -0.84067714042271 * H1x4_1
1139594   +          +    -1.59141777016956 * H1x4_2  +     0.46077797807782 * H1x4_3
1139595   +          +    -0.07031579794448 * H1x4_4  +     0.83754013895307 * H1x4_5
1139596   +          +     0.49805259687865 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.84067714042271 * H1x4_1 + -1.59141777016956 * 
H1x4_2 + 0.46077797807782 * H1x4_3 + -0.07031579794448 * H1x4_4 + 0.83754013895307 * H1x4_5 + 
0.49805259687865 * H1x4_6 ;
1139597   +   H2x1_1  =     1.86496757154162 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.86496757154162 + H2x1_1 ;
1139598   +   H2x1_2  =     0.46453634696909 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.46453634696909 + H2x1_2 ;
1139599   +   H2x1_3  =     0.36165501609225 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.36165501609225 + H2x1_3 ;
1139600   +   H2x1_4  =    -0.91790753889181 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.91790753889181 + H2x1_4 ;
1139601   +   H2x1_5  =     2.82445131106489 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.82445131106489 + H2x1_5 ;
1139602   +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
1139603   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
1139604   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1139605   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1139606   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1139607   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1139608   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1139609   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1139610   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1139611   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1139612   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1139613   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1139614   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1139615   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1139616   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1139617   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1139618   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1139619   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1139620   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1139621   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1139622   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1139623   +END;
MPRINT(EM_DIAGRAM):   END;
1139624   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1139625   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1139626   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1139627   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1139628   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1139629   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1139630   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1139631   +END;
MPRINT(EM_DIAGRAM):   END;
1139632   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139633   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1139634   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139635   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1139636   +   H2x2_1  =     0.06037434087051 * H1x1_1  +     2.10312669809986 * H1x1_2
1139637   +          +     0.25966374544266 * H1x1_3  +     -0.4604625015482 * H1x1_4
1139638   +          +    -0.04852853005798 * H1x1_5  +     1.73108900683337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.06037434087051 * H1x1_1 + 2.10312669809986 * H1x1_2 + 
0.25966374544266 * H1x1_3 + -0.4604625015482 * H1x1_4 + -0.04852853005798 * H1x1_5 + 
1.73108900683337 * H1x1_6 ;
1139639   +   H2x2_2  =    -1.98874787809729 * H1x1_1  +    -0.90575568783349 * H1x1_2
1139640   +          +     2.19451885005981 * H1x1_3  +     0.86127175797091 * H1x1_4
1139641   +          +     0.88302785384691 * H1x1_5  +     1.44831802939799 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.98874787809729 * H1x1_1 + -0.90575568783349 * H1x1_2 + 
2.19451885005981 * H1x1_3 + 0.86127175797091 * H1x1_4 + 0.88302785384691 * H1x1_5 + 
1.44831802939799 * H1x1_6 ;
1139642   +   H2x2_3  =     0.99020573159855 * H1x1_1  +    -0.25509107111568 * H1x1_2
1139643   +          +    -0.88380027397433 * H1x1_3  +     2.61444810707966 * H1x1_4
1139644   +          +     1.12768553693881 * H1x1_5  +    -1.33423515707253 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.99020573159855 * H1x1_1 + -0.25509107111568 * H1x1_2 + 
-0.88380027397433 * H1x1_3 + 2.61444810707966 * H1x1_4 + 1.12768553693881 * H1x1_5 + 
-1.33423515707253 * H1x1_6 ;
1139645   +   H2x2_4  =    -0.48971657670431 * H1x1_1  +    -2.03924441101145 * H1x1_2
1139646   +          +    -0.44598954940675 * H1x1_3  +    -0.38296699607675 * H1x1_4
1139647   +          +    -0.46829791763961 * H1x1_5  +     0.57571476480191 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.48971657670431 * H1x1_1 + -2.03924441101145 * H1x1_2 + 
-0.44598954940675 * H1x1_3 + -0.38296699607675 * H1x1_4 + -0.46829791763961 * H1x1_5 + 
0.57571476480191 * H1x1_6 ;
1139648   +   H2x2_5  =     1.15324249951205 * H1x1_1  +    -0.30656607959814 * H1x1_2
1139649   +          +    -0.26327906953925 * H1x1_3  +    -0.30055126052518 * H1x1_4
1139650   +          +     1.20108560127357 * H1x1_5  +    -2.01222927536337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.15324249951205 * H1x1_1 + -0.30656607959814 * H1x1_2 + 
-0.26327906953925 * H1x1_3 + -0.30055126052518 * H1x1_4 + 1.20108560127357 * H1x1_5 + 
-2.01222927536337 * H1x1_6 ;
1139651   +   H2x2_1  = H2x2_1  +     0.67714997403987 * H1x2_1
1139652   +          +     0.58512699375084 * H1x2_2  +     0.82352577521669 * H1x2_3
1139653   +          +    -0.10235751124142 * H1x2_4  +     0.33612939980192 * H1x2_5
1139654   +          +    -0.86707973977777 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.67714997403987 * H1x2_1 + 0.58512699375084 * H1x2_2 
+ 0.82352577521669 * H1x2_3 + -0.10235751124142 * H1x2_4 + 0.33612939980192 * H1x2_5 + 
-0.86707973977777 * H1x2_6 ;
1139655   +   H2x2_2  = H2x2_2  +     0.54358612690033 * H1x2_1
1139656   +          +     0.85147893022911 * H1x2_2  +     0.19383313272548 * H1x2_3
1139657   +          +     0.54163359333706 * H1x2_4  +    -0.12377705517298 * H1x2_5
1139658   +          +     0.34775419906833 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.54358612690033 * H1x2_1 + 0.85147893022911 * H1x2_2 
+ 0.19383313272548 * H1x2_3 + 0.54163359333706 * H1x2_4 + -0.12377705517298 * H1x2_5 + 
0.34775419906833 * H1x2_6 ;
1139659   +   H2x2_3  = H2x2_3  +    -0.93107945276808 * H1x2_1
1139660   +          +     0.68475936175775 * H1x2_2  +    -0.23180217492353 * H1x2_3
1139661   +          +     0.62637113173904 * H1x2_4  +      -0.494489282403 * H1x2_5
1139662   +          +    -0.92757761378206 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.93107945276808 * H1x2_1 + 0.68475936175775 * H1x2_2 
+ -0.23180217492353 * H1x2_3 + 0.62637113173904 * H1x2_4 + -0.494489282403 * H1x2_5 + 
-0.92757761378206 * H1x2_6 ;
1139663   +   H2x2_4  = H2x2_4  +    -0.04592275767761 * H1x2_1
1139664   +          +    -0.46728046145973 * H1x2_2  +    -0.84120395772864 * H1x2_3
1139665   +          +     0.15719249141893 * H1x2_4  +    -0.46514309972577 * H1x2_5
1139666   +          +     1.22882033880531 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.04592275767761 * H1x2_1 + -0.46728046145973 * 
H1x2_2 + -0.84120395772864 * H1x2_3 + 0.15719249141893 * H1x2_4 + -0.46514309972577 * H1x2_5 + 
1.22882033880531 * H1x2_6 ;
1139667   +   H2x2_5  = H2x2_5  +     1.84159049843244 * H1x2_1
1139668   +          +     0.10275783758743 * H1x2_2  +    -1.43072878385761 * H1x2_3
1139669   +          +     0.55082995966416 * H1x2_4  +      0.6610129464186 * H1x2_5
1139670   +          +     1.13665339513142 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.84159049843244 * H1x2_1 + 0.10275783758743 * H1x2_2 
+ -1.43072878385761 * H1x2_3 + 0.55082995966416 * H1x2_4 + 0.6610129464186 * H1x2_5 + 
1.13665339513142 * H1x2_6 ;
1139671   +   H2x2_1  = H2x2_1  +    -1.51032464504011 * H1x3_1
1139672   +          +    -0.09256867451899 * H1x3_2  +     0.32445533867689 * H1x3_3
1139673   +          +     0.05761597623645 * H1x3_4  +    -0.76755137543453 * H1x3_5
1139674   +          +    -0.84355541605354 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.51032464504011 * H1x3_1 + -0.09256867451899 * 
H1x3_2 + 0.32445533867689 * H1x3_3 + 0.05761597623645 * H1x3_4 + -0.76755137543453 * H1x3_5 + 
-0.84355541605354 * H1x3_6 ;
1139675   +   H2x2_2  = H2x2_2  +     0.10183122181912 * H1x3_1
1139676   +          +    -0.30112412370797 * H1x3_2  +     0.67666605377075 * H1x3_3
1139677   +          +    -0.05362728717558 * H1x3_4  +    -0.02087908172702 * H1x3_5
1139678   +          +    -0.14832407235293 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.10183122181912 * H1x3_1 + -0.30112412370797 * H1x3_2 
+ 0.67666605377075 * H1x3_3 + -0.05362728717558 * H1x3_4 + -0.02087908172702 * H1x3_5 + 
-0.14832407235293 * H1x3_6 ;
1139679   +   H2x2_3  = H2x2_3  +     1.70579601255161 * H1x3_1
1139680   +          +     -0.4658368752668 * H1x3_2  +    -0.54573113497487 * H1x3_3
1139681   +          +     1.13279034034213 * H1x3_4  +     1.23714589942258 * H1x3_5
1139682   +          +     0.41209753590668 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 1.70579601255161 * H1x3_1 + -0.4658368752668 * H1x3_2 
+ -0.54573113497487 * H1x3_3 + 1.13279034034213 * H1x3_4 + 1.23714589942258 * H1x3_5 + 
0.41209753590668 * H1x3_6 ;
1139683   +   H2x2_4  = H2x2_4  +     0.21012073552633 * H1x3_1
1139684   +          +      -1.607803967771 * H1x3_2  +     0.02641742148684 * H1x3_3
1139685   +          +      -0.919177834124 * H1x3_4  +    -0.46658991803838 * H1x3_5
1139686   +          +     0.05356295771962 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.21012073552633 * H1x3_1 + -1.607803967771 * H1x3_2 + 
0.02641742148684 * H1x3_3 + -0.919177834124 * H1x3_4 + -0.46658991803838 * H1x3_5 + 
0.05356295771962 * H1x3_6 ;
1139687   +   H2x2_5  = H2x2_5  +     -1.1424376096243 * H1x3_1
1139688   +          +    -0.47941730936597 * H1x3_2  +    -1.44857674506057 * H1x3_3
1139689   +          +     -2.0300913051093 * H1x3_4  +    -0.12476620160938 * H1x3_5
1139690   +          +      1.3865980084186 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.1424376096243 * H1x3_1 + -0.47941730936597 * H1x3_2 
+ -1.44857674506057 * H1x3_3 + -2.0300913051093 * H1x3_4 + -0.12476620160938 * H1x3_5 + 
1.3865980084186 * H1x3_6 ;
1139691   +   H2x2_1  = H2x2_1  +    -0.80277778579719 * H1x4_1
1139692   +          +     0.89356845434924 * H1x4_2  +     1.34679856015636 * H1x4_3
1139693   +          +    -0.75666255425893 * H1x4_4  +    -0.76982332990737 * H1x4_5
1139694   +          +     0.16602366912489 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.80277778579719 * H1x4_1 + 0.89356845434924 * H1x4_2 
+ 1.34679856015636 * H1x4_3 + -0.75666255425893 * H1x4_4 + -0.76982332990737 * H1x4_5 + 
0.16602366912489 * H1x4_6 ;
1139695   +   H2x2_2  = H2x2_2  +    -1.23815292104545 * H1x4_1
1139696   +          +     0.15726093177842 * H1x4_2  +     0.11603212859646 * H1x4_3
1139697   +          +     0.38287343591011 * H1x4_4  +    -0.51333663927664 * H1x4_5
1139698   +          +     -0.9577144624714 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.23815292104545 * H1x4_1 + 0.15726093177842 * H1x4_2 
+ 0.11603212859646 * H1x4_3 + 0.38287343591011 * H1x4_4 + -0.51333663927664 * H1x4_5 + 
-0.9577144624714 * H1x4_6 ;
1139699   +   H2x2_3  = H2x2_3  +    -0.68480171858681 * H1x4_1
1139700   +          +    -0.64475211431817 * H1x4_2  +     0.54382770716837 * H1x4_3
1139701   +          +     0.07586519798399 * H1x4_4  +      -0.158352646931 * H1x4_5
1139702   +          +    -0.86962851115528 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.68480171858681 * H1x4_1 + -0.64475211431817 * 
H1x4_2 + 0.54382770716837 * H1x4_3 + 0.07586519798399 * H1x4_4 + -0.158352646931 * H1x4_5 + 
-0.86962851115528 * H1x4_6 ;
1139703   +   H2x2_4  = H2x2_4  +     1.08721247219364 * H1x4_1
1139704   +          +    -0.00199447585891 * H1x4_2  +    -0.84066724442019 * H1x4_3
1139705   +          +     0.28532638217608 * H1x4_4  +    -1.14779513957631 * H1x4_5
1139706   +          +     2.01216139921959 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.08721247219364 * H1x4_1 + -0.00199447585891 * H1x4_2 
+ -0.84066724442019 * H1x4_3 + 0.28532638217608 * H1x4_4 + -1.14779513957631 * H1x4_5 + 
2.01216139921959 * H1x4_6 ;
1139707   +   H2x2_5  = H2x2_5  +    -0.82582817846967 * H1x4_1
1139708   +          +    -1.09057773595959 * H1x4_2  +     -0.2490905553905 * H1x4_3
1139709   +          +     0.93092377717594 * H1x4_4  +     0.02946641402494 * H1x4_5
1139710   +          +    -0.19026348436175 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.82582817846967 * H1x4_1 + -1.09057773595959 * 
H1x4_2 + -0.2490905553905 * H1x4_3 + 0.93092377717594 * H1x4_4 + 0.02946641402494 * H1x4_5 + 
-0.19026348436175 * H1x4_6 ;
1139711   +   H2x2_1  =      0.4280804812723 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.4280804812723 + H2x2_1 ;
1139712   +   H2x2_2  =    -1.09169904475569 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.09169904475569 + H2x2_2 ;
1139713   +   H2x2_3  =      1.1980619484542 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.1980619484542 + H2x2_3 ;
1139714   +   H2x2_4  =    -0.69756677248934 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.69756677248934 + H2x2_4 ;
1139715   +   H2x2_5  =    -1.87910212660657 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -1.87910212660657 + H2x2_5 ;
1139716   +   H2x2_6  = 0;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0;
1139717   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
1139718   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1139719   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
1139720   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
1139721   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
1139722   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
1139723   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
1139724   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
1139725   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
1139726   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
1139727   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
1139728   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
1139729   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
1139730   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
1139731   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
1139732   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
1139733   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
1139734   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
1139735   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
1139736   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
1139737   +END;
MPRINT(EM_DIAGRAM):   END;
1139738   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1139739   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1139740   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1139741   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1139742   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
1139743   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
1139744   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
1139745   +END;
MPRINT(EM_DIAGRAM):   END;
1139746   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139747   +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
1139748   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139749   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1139750   +   H2x3_1  =     0.51206365204428 * H1x1_1  +    -1.75446248490807 * H1x1_2
1139751   +          +     0.22956544269482 * H1x1_3  +     0.91651437630074 * H1x1_4
1139752   +          +    -0.88731743590726 * H1x1_5  +     0.75959028005652 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.51206365204428 * H1x1_1 + -1.75446248490807 * H1x1_2 + 
0.22956544269482 * H1x1_3 + 0.91651437630074 * H1x1_4 + -0.88731743590726 * H1x1_5 + 
0.75959028005652 * H1x1_6 ;
1139753   +   H2x3_2  =    -0.45196055100748 * H1x1_1  +    -0.30516535345407 * H1x1_2
1139754   +          +    -0.95535662641329 * H1x1_3  +     0.98793241812876 * H1x1_4
1139755   +          +    -2.26205386368521 * H1x1_5  +    -0.79989554227284 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -0.45196055100748 * H1x1_1 + -0.30516535345407 * H1x1_2 + 
-0.95535662641329 * H1x1_3 + 0.98793241812876 * H1x1_4 + -2.26205386368521 * H1x1_5 + 
-0.79989554227284 * H1x1_6 ;
1139756   +   H2x3_3  =     1.75400558713364 * H1x1_1  +     0.36065784285286 * H1x1_2
1139757   +          +    -0.26047606287884 * H1x1_3  +    -0.92639558885443 * H1x1_4
1139758   +          +     1.89978202395282 * H1x1_5  +     1.46105111567983 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = 1.75400558713364 * H1x1_1 + 0.36065784285286 * H1x1_2 + 
-0.26047606287884 * H1x1_3 + -0.92639558885443 * H1x1_4 + 1.89978202395282 * H1x1_5 + 
1.46105111567983 * H1x1_6 ;
1139759   +   H2x3_4  =     -1.0609986914691 * H1x1_1  +     1.03588259392678 * H1x1_2
1139760   +          +     0.18751061078347 * H1x1_3  +     1.45467172411852 * H1x1_4
1139761   +          +     0.80970691110797 * H1x1_5  +    -0.03142746343877 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = -1.0609986914691 * H1x1_1 + 1.03588259392678 * H1x1_2 + 
0.18751061078347 * H1x1_3 + 1.45467172411852 * H1x1_4 + 0.80970691110797 * H1x1_5 + 
-0.03142746343877 * H1x1_6 ;
1139762   +   H2x3_5  =     0.68514959739435 * H1x1_1  +    -0.85703618516825 * H1x1_2
1139763   +          +    -1.42641478008517 * H1x1_3  +     0.69128253039497 * H1x1_4
1139764   +          +    -0.41103428804251 * H1x1_5  +     2.29818718782262 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = 0.68514959739435 * H1x1_1 + -0.85703618516825 * H1x1_2 + 
-1.42641478008517 * H1x1_3 + 0.69128253039497 * H1x1_4 + -0.41103428804251 * H1x1_5 + 
2.29818718782262 * H1x1_6 ;
1139765   +   H2x3_1  = H2x3_1  +    -1.02124610786304 * H1x2_1
1139766   +          +    -0.70086367508924 * H1x2_2  +     1.44543746222048 * H1x2_3
1139767   +          +      0.0077115223216 * H1x2_4  +    -1.13603676440953 * H1x2_5
1139768   +          +    -0.39006326539815 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.02124610786304 * H1x2_1 + -0.70086367508924 * 
H1x2_2 + 1.44543746222048 * H1x2_3 + 0.0077115223216 * H1x2_4 + -1.13603676440953 * H1x2_5 + 
-0.39006326539815 * H1x2_6 ;
1139769   +   H2x3_2  = H2x3_2  +     0.58504868182178 * H1x2_1
1139770   +          +    -2.53394647771808 * H1x2_2  +    -0.46920351111552 * H1x2_3
1139771   +          +    -0.13298739365164 * H1x2_4  +    -0.72916785042807 * H1x2_5
1139772   +          +     0.87575796008942 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.58504868182178 * H1x2_1 + -2.53394647771808 * H1x2_2 
+ -0.46920351111552 * H1x2_3 + -0.13298739365164 * H1x2_4 + -0.72916785042807 * H1x2_5 + 
0.87575796008942 * H1x2_6 ;
1139773   +   H2x3_3  = H2x3_3  +      -0.403068394175 * H1x2_1
1139774   +          +     2.20341156440175 * H1x2_2  +     0.18637166393472 * H1x2_3
1139775   +          +    -0.49818124689746 * H1x2_4  +    -0.57482220863202 * H1x2_5
1139776   +          +    -0.99288712489296 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -0.403068394175 * H1x2_1 + 2.20341156440175 * H1x2_2 + 
0.18637166393472 * H1x2_3 + -0.49818124689746 * H1x2_4 + -0.57482220863202 * H1x2_5 + 
-0.99288712489296 * H1x2_6 ;
1139777   +   H2x3_4  = H2x3_4  +    -0.08255075671356 * H1x2_1
1139778   +          +     0.12417859340249 * H1x2_2  +     0.38623860203678 * H1x2_3
1139779   +          +     1.30375188803419 * H1x2_4  +     0.06113655765155 * H1x2_5
1139780   +          +     2.18684373678918 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.08255075671356 * H1x2_1 + 0.12417859340249 * H1x2_2 
+ 0.38623860203678 * H1x2_3 + 1.30375188803419 * H1x2_4 + 0.06113655765155 * H1x2_5 + 
2.18684373678918 * H1x2_6 ;
1139781   +   H2x3_5  = H2x3_5  +     0.02445507420447 * H1x2_1
1139782   +          +     -1.1429834255353 * H1x2_2  +     1.15057813366971 * H1x2_3
1139783   +          +     -0.7929157351984 * H1x2_4  +      0.4343084860458 * H1x2_5
1139784   +          +      0.0384736341173 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + 0.02445507420447 * H1x2_1 + -1.1429834255353 * H1x2_2 
+ 1.15057813366971 * H1x2_3 + -0.7929157351984 * H1x2_4 + 0.4343084860458 * H1x2_5 + 
0.0384736341173 * H1x2_6 ;
1139785   +   H2x3_1  = H2x3_1  +     0.37764572590016 * H1x3_1
1139786   +          +     1.48191356825225 * H1x3_2  +    -0.26603273466393 * H1x3_3
1139787   +          +    -1.29507822568105 * H1x3_4  +     1.84557717124725 * H1x3_5
1139788   +          +    -0.65863037608331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.37764572590016 * H1x3_1 + 1.48191356825225 * H1x3_2 
+ -0.26603273466393 * H1x3_3 + -1.29507822568105 * H1x3_4 + 1.84557717124725 * H1x3_5 + 
-0.65863037608331 * H1x3_6 ;
1139789   +   H2x3_2  = H2x3_2  +    -3.49060338051306 * H1x3_1
1139790   +          +      1.3541565382925 * H1x3_2  +    -0.38315198954693 * H1x3_3
1139791   +          +    -2.08846010475603 * H1x3_4  +    -0.03268324043605 * H1x3_5
1139792   +          +     -0.2732767866426 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -3.49060338051306 * H1x3_1 + 1.3541565382925 * H1x3_2 
+ -0.38315198954693 * H1x3_3 + -2.08846010475603 * H1x3_4 + -0.03268324043605 * H1x3_5 + 
-0.2732767866426 * H1x3_6 ;
1139793   +   H2x3_3  = H2x3_3  +    -1.02108681113274 * H1x3_1
1139794   +          +     1.11670732797487 * H1x3_2  +    -2.83817066251645 * H1x3_3
1139795   +          +     2.91943649605743 * H1x3_4  +    -1.58666117886546 * H1x3_5
1139796   +          +     0.95358246629929 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -1.02108681113274 * H1x3_1 + 1.11670732797487 * H1x3_2 
+ -2.83817066251645 * H1x3_3 + 2.91943649605743 * H1x3_4 + -1.58666117886546 * H1x3_5 + 
0.95358246629929 * H1x3_6 ;
1139797   +   H2x3_4  = H2x3_4  +    -0.28934138457604 * H1x3_1
1139798   +          +     -0.1627562650927 * H1x3_2  +     1.76496399430623 * H1x3_3
1139799   +          +     2.05776756058594 * H1x3_4  +    -0.96994650178001 * H1x3_5
1139800   +          +    -1.50364154763084 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.28934138457604 * H1x3_1 + -0.1627562650927 * H1x3_2 
+ 1.76496399430623 * H1x3_3 + 2.05776756058594 * H1x3_4 + -0.96994650178001 * H1x3_5 + 
-1.50364154763084 * H1x3_6 ;
1139801   +   H2x3_5  = H2x3_5  +    -0.73016276992619 * H1x3_1
1139802   +          +    -1.48258849718818 * H1x3_2  +    -0.47908044807419 * H1x3_3
1139803   +          +      0.5957671579209 * H1x3_4  +     0.06707833713085 * H1x3_5
1139804   +          +      0.3673818114501 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.73016276992619 * H1x3_1 + -1.48258849718818 * 
H1x3_2 + -0.47908044807419 * H1x3_3 + 0.5957671579209 * H1x3_4 + 0.06707833713085 * H1x3_5 + 
0.3673818114501 * H1x3_6 ;
1139805   +   H2x3_1  = H2x3_1  +     1.64939881299916 * H1x4_1
1139806   +          +     0.29057047745206 * H1x4_2  +     -1.2430356696985 * H1x4_3
1139807   +          +     1.38895822896909 * H1x4_4  +     0.32263395713709 * H1x4_5
1139808   +          +      -0.876005602164 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 1.64939881299916 * H1x4_1 + 0.29057047745206 * H1x4_2 
+ -1.2430356696985 * H1x4_3 + 1.38895822896909 * H1x4_4 + 0.32263395713709 * H1x4_5 + 
-0.876005602164 * H1x4_6 ;
1139809   +   H2x3_2  = H2x3_2  +    -0.59279077758901 * H1x4_1
1139810   +          +     0.47534983861589 * H1x4_2  +     1.50522851379751 * H1x4_3
1139811   +          +    -0.52074826438565 * H1x4_4  +    -0.13959571645898 * H1x4_5
1139812   +          +     0.51236653129509 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.59279077758901 * H1x4_1 + 0.47534983861589 * H1x4_2 
+ 1.50522851379751 * H1x4_3 + -0.52074826438565 * H1x4_4 + -0.13959571645898 * H1x4_5 + 
0.51236653129509 * H1x4_6 ;
1139813   +   H2x3_3  = H2x3_3  +       0.170929264521 * H1x4_1
1139814   +          +    -1.09768862147461 * H1x4_2  +    -1.22166369035864 * H1x4_3
1139815   +          +    -0.43496041372082 * H1x4_4  +     0.86983484014566 * H1x4_5
1139816   +          +     0.14855508666868 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + 0.170929264521 * H1x4_1 + -1.09768862147461 * H1x4_2 + 
-1.22166369035864 * H1x4_3 + -0.43496041372082 * H1x4_4 + 0.86983484014566 * H1x4_5 + 
0.14855508666868 * H1x4_6 ;
1139817   +   H2x3_4  = H2x3_4  +    -0.26703118340308 * H1x4_1
1139818   +          +     0.58353167926887 * H1x4_2  +     1.39169479141155 * H1x4_3
1139819   +          +     -0.7893707969296 * H1x4_4  +     0.89521873365477 * H1x4_5
1139820   +          +     1.60853840268286 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.26703118340308 * H1x4_1 + 0.58353167926887 * H1x4_2 
+ 1.39169479141155 * H1x4_3 + -0.7893707969296 * H1x4_4 + 0.89521873365477 * H1x4_5 + 
1.60853840268286 * H1x4_6 ;
1139821   +   H2x3_5  = H2x3_5  +    -0.29353449181426 * H1x4_1
1139822   +          +     0.02697197445995 * H1x4_2  +     0.04454970336296 * H1x4_3
1139823   +          +    -0.17322488506489 * H1x4_4  +    -1.52564540234935 * H1x4_5
1139824   +          +      0.6650692994568 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.29353449181426 * H1x4_1 + 0.02697197445995 * H1x4_2 
+ 0.04454970336296 * H1x4_3 + -0.17322488506489 * H1x4_4 + -1.52564540234935 * H1x4_5 + 
0.6650692994568 * H1x4_6 ;
1139825   +   H2x3_1  =    -0.44046998911725 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.44046998911725 + H2x3_1 ;
1139826   +   H2x3_2  =     1.44590821330163 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 1.44590821330163 + H2x3_2 ;
1139827   +   H2x3_3  =    -0.02671947857742 + H2x3_3 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = -0.02671947857742 + H2x3_3 ;
1139828   +   H2x3_4  =     2.16876314488082 + H2x3_4 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = 2.16876314488082 + H2x3_4 ;
1139829   +   H2x3_5  =    -1.06855161267989 + H2x3_5 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = -1.06855161267989 + H2x3_5 ;
1139830   +   H2x3_6  = 0;
MPRINT(EM_DIAGRAM):   H2x3_6 = 0;
1139831   +   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
1139832   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1139833   +   H2x3_1  = EXP(H2x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_1 = EXP(H2x3_1 - _MAX_);
1139834   +   _SUM_ = _SUM_ + H2x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_1 ;
1139835   +   H2x3_2  = EXP(H2x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_2 = EXP(H2x3_2 - _MAX_);
1139836   +   _SUM_ = _SUM_ + H2x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_2 ;
1139837   +   H2x3_3  = EXP(H2x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_3 = EXP(H2x3_3 - _MAX_);
1139838   +   _SUM_ = _SUM_ + H2x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_3 ;
1139839   +   H2x3_4  = EXP(H2x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_4 = EXP(H2x3_4 - _MAX_);
1139840   +   _SUM_ = _SUM_ + H2x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_4 ;
1139841   +   H2x3_5  = EXP(H2x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_5 = EXP(H2x3_5 - _MAX_);
1139842   +   _SUM_ = _SUM_ + H2x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_5 ;
1139843   +   H2x3_6  = EXP(H2x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_6 = EXP(H2x3_6 - _MAX_);
1139844   +   _SUM_ = _SUM_ + H2x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_6 ;
1139845   +   H2x3_1  = H2x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 / _SUM_;
1139846   +   H2x3_2  = H2x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 / _SUM_;
1139847   +   H2x3_3  = H2x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 / _SUM_;
1139848   +   H2x3_4  = H2x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 / _SUM_;
1139849   +   H2x3_5  = H2x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 / _SUM_;
1139850   +   H2x3_6  = H2x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_6 = H2x3_6 / _SUM_;
1139851   +END;
MPRINT(EM_DIAGRAM):   END;
1139852   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1139853   +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
1139854   +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
1139855   +   H2x3_3  = .;
MPRINT(EM_DIAGRAM):   H2x3_3 = .;
1139856   +   H2x3_4  = .;
MPRINT(EM_DIAGRAM):   H2x3_4 = .;
1139857   +   H2x3_5  = .;
MPRINT(EM_DIAGRAM):   H2x3_5 = .;
1139858   +   H2x3_6  = .;
MPRINT(EM_DIAGRAM):   H2x3_6 = .;
1139859   +END;
MPRINT(EM_DIAGRAM):   END;
1139860   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139861   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1139862   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139863   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1139864   +   H3x1_1  =     0.14821897068309 * H2x1_1  +     0.10105634438409 * H2x1_2
1139865   +          +     0.69826499371673 * H2x1_3  +     1.65127139539807 * H2x1_4
1139866   +          +     1.34699293376382 * H2x1_5  +     0.62066324264653 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.14821897068309 * H2x1_1 + 0.10105634438409 * H2x1_2 + 
0.69826499371673 * H2x1_3 + 1.65127139539807 * H2x1_4 + 1.34699293376382 * H2x1_5 + 
0.62066324264653 * H2x1_6 ;
1139867   +   H3x1_2  =     -0.6760189094281 * H2x1_1  +     0.85348791240011 * H2x1_2
1139868   +          +    -0.07663386217946 * H2x1_3  +     2.15467384269703 * H2x1_4
1139869   +          +    -0.50699529916446 * H2x1_5  +     1.70699964755049 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.6760189094281 * H2x1_1 + 0.85348791240011 * H2x1_2 + 
-0.07663386217946 * H2x1_3 + 2.15467384269703 * H2x1_4 + -0.50699529916446 * H2x1_5 + 
1.70699964755049 * H2x1_6 ;
1139870   +   H3x1_3  =    -0.94311365048828 * H2x1_1  +    -0.69829528108975 * H2x1_2
1139871   +          +    -0.34747616168009 * H2x1_3  +     2.32941170908743 * H2x1_4
1139872   +          +     3.71768144878584 * H2x1_5  +    -0.60932405988373 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -0.94311365048828 * H2x1_1 + -0.69829528108975 * H2x1_2 + 
-0.34747616168009 * H2x1_3 + 2.32941170908743 * H2x1_4 + 3.71768144878584 * H2x1_5 + 
-0.60932405988373 * H2x1_6 ;
1139873   +   H3x1_4  =     1.69107510526388 * H2x1_1  +    -1.40350955348413 * H2x1_2
1139874   +          +    -0.47901844016365 * H2x1_3  +      0.3540542650553 * H2x1_4
1139875   +          +    -1.56597514252687 * H2x1_5  +    -0.04997148078498 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 1.69107510526388 * H2x1_1 + -1.40350955348413 * H2x1_2 + 
-0.47901844016365 * H2x1_3 + 0.3540542650553 * H2x1_4 + -1.56597514252687 * H2x1_5 + 
-0.04997148078498 * H2x1_6 ;
1139876   +   H3x1_5  =    -0.23167181678539 * H2x1_1  +    -0.65942738658946 * H2x1_2
1139877   +          +    -0.83280103611578 * H2x1_3  +    -1.03301865685228 * H2x1_4
1139878   +          +      1.3401316289209 * H2x1_5  +    -1.98639459325872 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.23167181678539 * H2x1_1 + -0.65942738658946 * H2x1_2 + 
-0.83280103611578 * H2x1_3 + -1.03301865685228 * H2x1_4 + 1.3401316289209 * H2x1_5 + 
-1.98639459325872 * H2x1_6 ;
1139879   +   H3x1_1  = H3x1_1  +    -1.96226306174896 * H2x2_1
1139880   +          +     1.03065434267907 * H2x2_2  +    -0.02977552697407 * H2x2_3
1139881   +          +    -2.15633683205343 * H2x2_4  +    -0.16172049876123 * H2x2_5
1139882   +          +     2.04617275364668 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.96226306174896 * H2x2_1 + 1.03065434267907 * H2x2_2 
+ -0.02977552697407 * H2x2_3 + -2.15633683205343 * H2x2_4 + -0.16172049876123 * H2x2_5 + 
2.04617275364668 * H2x2_6 ;
1139883   +   H3x1_2  = H3x1_2  +     0.98825486325651 * H2x2_1
1139884   +          +    -0.45791784632486 * H2x2_2  +     -0.1004093258308 * H2x2_3
1139885   +          +     -0.9411693729369 * H2x2_4  +     -0.2302105458948 * H2x2_5
1139886   +          +    -0.37660795680674 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.98825486325651 * H2x2_1 + -0.45791784632486 * H2x2_2 
+ -0.1004093258308 * H2x2_3 + -0.9411693729369 * H2x2_4 + -0.2302105458948 * H2x2_5 + 
-0.37660795680674 * H2x2_6 ;
1139887   +   H3x1_3  = H3x1_3  +    -0.01929245635771 * H2x2_1
1139888   +          +     0.59176660505983 * H2x2_2  +     0.85345798669405 * H2x2_3
1139889   +          +    -0.29251716908915 * H2x2_4  +     0.62774918208489 * H2x2_5
1139890   +          +    -0.43453791992382 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.01929245635771 * H2x2_1 + 0.59176660505983 * H2x2_2 
+ 0.85345798669405 * H2x2_3 + -0.29251716908915 * H2x2_4 + 0.62774918208489 * H2x2_5 + 
-0.43453791992382 * H2x2_6 ;
1139891   +   H3x1_4  = H3x1_4  +    -0.93313067901041 * H2x2_1
1139892   +          +     0.79407052404273 * H2x2_2  +     1.63518575530242 * H2x2_3
1139893   +          +     1.19368615452563 * H2x2_4  +     0.43365061793519 * H2x2_5
1139894   +          +    -3.30381142208727 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.93313067901041 * H2x2_1 + 0.79407052404273 * H2x2_2 
+ 1.63518575530242 * H2x2_3 + 1.19368615452563 * H2x2_4 + 0.43365061793519 * H2x2_5 + 
-3.30381142208727 * H2x2_6 ;
1139895   +   H3x1_5  = H3x1_5  +      0.2721747886066 * H2x2_1
1139896   +          +     0.29405186941774 * H2x2_2  +    -0.96425253045194 * H2x2_3
1139897   +          +    -0.34879018216113 * H2x2_4  +    -1.15330072605073 * H2x2_5
1139898   +          +    -0.34019675397366 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + 0.2721747886066 * H2x2_1 + 0.29405186941774 * H2x2_2 + 
-0.96425253045194 * H2x2_3 + -0.34879018216113 * H2x2_4 + -1.15330072605073 * H2x2_5 + 
-0.34019675397366 * H2x2_6 ;
1139899   +   H3x1_1  = H3x1_1  +     0.99938924001809 * H2x3_1
1139900   +          +    -0.28559857879809 * H2x3_2  +    -0.44648183712004 * H2x3_3
1139901   +          +    -0.23199698060307 * H2x3_4  +    -0.64346521755351 * H2x3_5
1139902   +          +     0.59340663088806 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 0.99938924001809 * H2x3_1 + -0.28559857879809 * H2x3_2 
+ -0.44648183712004 * H2x3_3 + -0.23199698060307 * H2x3_4 + -0.64346521755351 * H2x3_5 + 
0.59340663088806 * H2x3_6 ;
1139903   +   H3x1_2  = H3x1_2  +     1.61767718200144 * H2x3_1
1139904   +          +     0.59417860044733 * H2x3_2  +      1.9323992067722 * H2x3_3
1139905   +          +    -1.38224816012152 * H2x3_4  +    -2.04529937075447 * H2x3_5
1139906   +          +     0.67050797164115 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 1.61767718200144 * H2x3_1 + 0.59417860044733 * H2x3_2 
+ 1.9323992067722 * H2x3_3 + -1.38224816012152 * H2x3_4 + -2.04529937075447 * H2x3_5 + 
0.67050797164115 * H2x3_6 ;
1139907   +   H3x1_3  = H3x1_3  +    -0.69807909205706 * H2x3_1
1139908   +          +    -0.57895843216341 * H2x3_2  +    -0.16766418785512 * H2x3_3
1139909   +          +     0.40654327615846 * H2x3_4  +    -1.86698682195337 * H2x3_5
1139910   +          +    -0.51274988768251 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.69807909205706 * H2x3_1 + -0.57895843216341 * 
H2x3_2 + -0.16766418785512 * H2x3_3 + 0.40654327615846 * H2x3_4 + -1.86698682195337 * H2x3_5 + 
-0.51274988768251 * H2x3_6 ;
1139911   +   H3x1_4  = H3x1_4  +     0.48560830435522 * H2x3_1
1139912   +          +     -2.8037598804912 * H2x3_2  +    -0.30231415756008 * H2x3_3
1139913   +          +     2.41159952574381 * H2x3_4  +     0.62877424154604 * H2x3_5
1139914   +          +    -0.73773727947747 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.48560830435522 * H2x3_1 + -2.8037598804912 * H2x3_2 
+ -0.30231415756008 * H2x3_3 + 2.41159952574381 * H2x3_4 + 0.62877424154604 * H2x3_5 + 
-0.73773727947747 * H2x3_6 ;
1139915   +   H3x1_5  = H3x1_5  +    -0.87089276878422 * H2x3_1
1139916   +          +    -0.78003140915024 * H2x3_2  +    -1.46975503560585 * H2x3_3
1139917   +          +     1.87460778751879 * H2x3_4  +    -0.09219359612439 * H2x3_5
1139918   +          +    -1.07137645697526 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.87089276878422 * H2x3_1 + -0.78003140915024 * 
H2x3_2 + -1.46975503560585 * H2x3_3 + 1.87460778751879 * H2x3_4 + -0.09219359612439 * H2x3_5 + 
-1.07137645697526 * H2x3_6 ;
1139919   +   H3x1_1  =    -0.24118737469276 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.24118737469276 + H3x1_1 ;
1139920   +   H3x1_2  =     0.26844205496356 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.26844205496356 + H3x1_2 ;
1139921   +   H3x1_3  =      1.6092325807607 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.6092325807607 + H3x1_3 ;
1139922   +   H3x1_4  =     0.55904829903808 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.55904829903808 + H3x1_4 ;
1139923   +   H3x1_5  =     1.39880629138148 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.39880629138148 + H3x1_5 ;
1139924   +   H3x1_6  = 0;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0;
1139925   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
1139926   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1139927   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
1139928   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
1139929   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
1139930   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
1139931   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
1139932   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
1139933   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
1139934   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
1139935   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
1139936   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
1139937   +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
1139938   +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
1139939   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
1139940   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
1139941   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
1139942   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
1139943   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
1139944   +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
1139945   +END;
MPRINT(EM_DIAGRAM):   END;
1139946   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1139947   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1139948   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1139949   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1139950   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
1139951   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
1139952   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
1139953   +END;
MPRINT(EM_DIAGRAM):   END;
1139954   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139955   +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
1139956   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139957   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1139958   +   H3x2_1  =     0.13469056275633 * H2x1_1  +    -1.31570873196603 * H2x1_2
1139959   +          +    -0.83004507775706 * H2x1_3  +     1.14954585467995 * H2x1_4
1139960   +          +     0.01234753333089 * H2x1_5  +     0.50683843245151 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.13469056275633 * H2x1_1 + -1.31570873196603 * H2x1_2 + 
-0.83004507775706 * H2x1_3 + 1.14954585467995 * H2x1_4 + 0.01234753333089 * H2x1_5 + 
0.50683843245151 * H2x1_6 ;
1139961   +   H3x2_2  =     2.58620633866114 * H2x1_1  +     0.37629863890202 * H2x1_2
1139962   +          +     0.34169762900278 * H2x1_3  +     1.24247313002596 * H2x1_4
1139963   +          +     -0.1965463932822 * H2x1_5  +    -0.00458488228083 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 2.58620633866114 * H2x1_1 + 0.37629863890202 * H2x1_2 + 
0.34169762900278 * H2x1_3 + 1.24247313002596 * H2x1_4 + -0.1965463932822 * H2x1_5 + 
-0.00458488228083 * H2x1_6 ;
1139964   +   H3x2_3  =    -2.01883694738218 * H2x1_1  +     0.83782353926562 * H2x1_2
1139965   +          +    -1.95119268200972 * H2x1_3  +    -1.04826190833003 * H2x1_4
1139966   +          +     1.66733023346498 * H2x1_5  +     0.23483419363088 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = -2.01883694738218 * H2x1_1 + 0.83782353926562 * H2x1_2 + 
-1.95119268200972 * H2x1_3 + -1.04826190833003 * H2x1_4 + 1.66733023346498 * H2x1_5 + 
0.23483419363088 * H2x1_6 ;
1139967   +   H3x2_4  =     0.40678642111393 * H2x1_1  +    -0.10557612663286 * H2x1_2
1139968   +          +    -0.34694532874387 * H2x1_3  +     -1.6967916788772 * H2x1_4
1139969   +          +     0.24026556349373 * H2x1_5  +    -0.69393637888423 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = 0.40678642111393 * H2x1_1 + -0.10557612663286 * H2x1_2 + 
-0.34694532874387 * H2x1_3 + -1.6967916788772 * H2x1_4 + 0.24026556349373 * H2x1_5 + 
-0.69393637888423 * H2x1_6 ;
1139970   +   H3x2_5  =    -1.48304630985783 * H2x1_1  +     0.87426655970556 * H2x1_2
1139971   +          +    -0.49899516599841 * H2x1_3  +    -1.94880978312007 * H2x1_4
1139972   +          +    -2.45275015055877 * H2x1_5  +    -0.03264500335093 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -1.48304630985783 * H2x1_1 + 0.87426655970556 * H2x1_2 + 
-0.49899516599841 * H2x1_3 + -1.94880978312007 * H2x1_4 + -2.45275015055877 * H2x1_5 + 
-0.03264500335093 * H2x1_6 ;
1139973   +   H3x2_1  = H3x2_1  +    -0.40915299509566 * H2x2_1
1139974   +          +     1.45952180668254 * H2x2_2  +     0.42420517277224 * H2x2_3
1139975   +          +    -0.79379446044158 * H2x2_4  +     0.73614212418439 * H2x2_5
1139976   +          +     -0.6527392657117 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -0.40915299509566 * H2x2_1 + 1.45952180668254 * H2x2_2 
+ 0.42420517277224 * H2x2_3 + -0.79379446044158 * H2x2_4 + 0.73614212418439 * H2x2_5 + 
-0.6527392657117 * H2x2_6 ;
1139977   +   H3x2_2  = H3x2_2  +    -1.62752321860626 * H2x2_1
1139978   +          +    -0.04689831325067 * H2x2_2  +    -2.87951125721119 * H2x2_3
1139979   +          +    -0.36181303609331 * H2x2_4  +     0.55999175715209 * H2x2_5
1139980   +          +    -0.40911363767301 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + -1.62752321860626 * H2x2_1 + -0.04689831325067 * 
H2x2_2 + -2.87951125721119 * H2x2_3 + -0.36181303609331 * H2x2_4 + 0.55999175715209 * H2x2_5 + 
-0.40911363767301 * H2x2_6 ;
1139981   +   H3x2_3  = H3x2_3  +     0.50766404641726 * H2x2_1
1139982   +          +     0.02747397544049 * H2x2_2  +    -1.35626517144826 * H2x2_3
1139983   +          +     0.23390260329386 * H2x2_4  +     -0.5025118845527 * H2x2_5
1139984   +          +    -1.14035867434772 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + 0.50766404641726 * H2x2_1 + 0.02747397544049 * H2x2_2 
+ -1.35626517144826 * H2x2_3 + 0.23390260329386 * H2x2_4 + -0.5025118845527 * H2x2_5 + 
-1.14035867434772 * H2x2_6 ;
1139985   +   H3x2_4  = H3x2_4  +     0.64958154360038 * H2x2_1
1139986   +          +     1.68671947742627 * H2x2_2  +    -0.42417215632785 * H2x2_3
1139987   +          +    -0.39675884102374 * H2x2_4  +     1.98354732887496 * H2x2_5
1139988   +          +    -1.32783167695801 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + 0.64958154360038 * H2x2_1 + 1.68671947742627 * H2x2_2 
+ -0.42417215632785 * H2x2_3 + -0.39675884102374 * H2x2_4 + 1.98354732887496 * H2x2_5 + 
-1.32783167695801 * H2x2_6 ;
1139989   +   H3x2_5  = H3x2_5  +     1.92075053147101 * H2x2_1
1139990   +          +     1.22293096034837 * H2x2_2  +    -0.74039853818796 * H2x2_3
1139991   +          +    -0.25033258903105 * H2x2_4  +     0.63358340091733 * H2x2_5
1139992   +          +     0.17488501957475 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 1.92075053147101 * H2x2_1 + 1.22293096034837 * H2x2_2 
+ -0.74039853818796 * H2x2_3 + -0.25033258903105 * H2x2_4 + 0.63358340091733 * H2x2_5 + 
0.17488501957475 * H2x2_6 ;
1139993   +   H3x2_1  = H3x2_1  +     0.88292932547634 * H2x3_1
1139994   +          +    -0.27631908402136 * H2x3_2  +     0.93133699792762 * H2x3_3
1139995   +          +     1.18769264917434 * H2x3_4  +    -0.88901652244884 * H2x3_5
1139996   +          +    -0.17544617255869 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.88292932547634 * H2x3_1 + -0.27631908402136 * H2x3_2 
+ 0.93133699792762 * H2x3_3 + 1.18769264917434 * H2x3_4 + -0.88901652244884 * H2x3_5 + 
-0.17544617255869 * H2x3_6 ;
1139997   +   H3x2_2  = H3x2_2  +     0.71538502917742 * H2x3_1
1139998   +          +    -0.76848695288598 * H2x3_2  +     1.24503864708272 * H2x3_3
1139999   +          +    -0.93962158881999 * H2x3_4  +    -0.43383001812557 * H2x3_5
1140000   +          +     1.14672043219259 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + 0.71538502917742 * H2x3_1 + -0.76848695288598 * H2x3_2 
+ 1.24503864708272 * H2x3_3 + -0.93962158881999 * H2x3_4 + -0.43383001812557 * H2x3_5 + 
1.14672043219259 * H2x3_6 ;
1140001   +   H3x2_3  = H3x2_3  +    -0.39933331346344 * H2x3_1
1140002   +          +      0.0019862182661 * H2x3_2  +    -0.60479718136768 * H2x3_3
1140003   +          +      1.3818804125218 * H2x3_4  +     0.13498986352108 * H2x3_5
1140004   +          +     1.02889511152823 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + -0.39933331346344 * H2x3_1 + 0.0019862182661 * H2x3_2 
+ -0.60479718136768 * H2x3_3 + 1.3818804125218 * H2x3_4 + 0.13498986352108 * H2x3_5 + 
1.02889511152823 * H2x3_6 ;
1140005   +   H3x2_4  = H3x2_4  +    -1.24198502624302 * H2x3_1
1140006   +          +    -0.09061963757116 * H2x3_2  +    -0.70229381972412 * H2x3_3
1140007   +          +    -1.43988785716026 * H2x3_4  +     0.45188902401215 * H2x3_5
1140008   +          +     0.10073869982371 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + -1.24198502624302 * H2x3_1 + -0.09061963757116 * 
H2x3_2 + -0.70229381972412 * H2x3_3 + -1.43988785716026 * H2x3_4 + 0.45188902401215 * H2x3_5 + 
0.10073869982371 * H2x3_6 ;
1140009   +   H3x2_5  = H3x2_5  +     0.13815223958312 * H2x3_1
1140010   +          +     0.38392032129472 * H2x3_2  +    -0.08374178846724 * H2x3_3
1140011   +          +     0.39613433726611 * H2x3_4  +     1.64049322745471 * H2x3_5
1140012   +          +     0.97496084656174 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 0.13815223958312 * H2x3_1 + 0.38392032129472 * H2x3_2 
+ -0.08374178846724 * H2x3_3 + 0.39613433726611 * H2x3_4 + 1.64049322745471 * H2x3_5 + 
0.97496084656174 * H2x3_6 ;
1140013   +   H3x2_1  =    -0.72845954974251 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -0.72845954974251 + H3x2_1 ;
1140014   +   H3x2_2  =     0.59148824718722 + H3x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0.59148824718722 + H3x2_2 ;
1140015   +   H3x2_3  =     1.28031731320103 + H3x2_3 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = 1.28031731320103 + H3x2_3 ;
1140016   +   H3x2_4  =    -0.11427038364635 + H3x2_4 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = -0.11427038364635 + H3x2_4 ;
1140017   +   H3x2_5  =    -0.28699725292326 + H3x2_5 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -0.28699725292326 + H3x2_5 ;
1140018   +   H3x2_6  = 0;
MPRINT(EM_DIAGRAM):   H3x2_6 = 0;
1140019   +   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
1140020   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1140021   +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
1140022   +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
1140023   +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
1140024   +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
1140025   +   H3x2_3  = EXP(H3x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_3 = EXP(H3x2_3 - _MAX_);
1140026   +   _SUM_ = _SUM_ + H3x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_3 ;
1140027   +   H3x2_4  = EXP(H3x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_4 = EXP(H3x2_4 - _MAX_);
1140028   +   _SUM_ = _SUM_ + H3x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_4 ;
1140029   +   H3x2_5  = EXP(H3x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_5 = EXP(H3x2_5 - _MAX_);
1140030   +   _SUM_ = _SUM_ + H3x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_5 ;
1140031   +   H3x2_6  = EXP(H3x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_6 = EXP(H3x2_6 - _MAX_);
1140032   +   _SUM_ = _SUM_ + H3x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_6 ;
1140033   +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
1140034   +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
1140035   +   H3x2_3  = H3x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 / _SUM_;
1140036   +   H3x2_4  = H3x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 / _SUM_;
1140037   +   H3x2_5  = H3x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 / _SUM_;
1140038   +   H3x2_6  = H3x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_6 = H3x2_6 / _SUM_;
1140039   +END;
MPRINT(EM_DIAGRAM):   END;
1140040   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1140041   +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
1140042   +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
1140043   +   H3x2_3  = .;
MPRINT(EM_DIAGRAM):   H3x2_3 = .;
1140044   +   H3x2_4  = .;
MPRINT(EM_DIAGRAM):   H3x2_4 = .;
1140045   +   H3x2_5  = .;
MPRINT(EM_DIAGRAM):   H3x2_5 = .;
1140046   +   H3x2_6  = .;
MPRINT(EM_DIAGRAM):   H3x2_6 = .;
1140047   +END;
MPRINT(EM_DIAGRAM):   END;
1140048   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1140049   +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
1140050   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1140051   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1140052   +   H4x1_1  =     0.10986960182278 * H3x1_1  +    -0.10835805909937 * H3x1_2
1140053   +          +     1.78643376838566 * H3x1_3  +    -0.00067995179919 * H3x1_4
1140054   +          +     2.04711620528782 * H3x1_5  +    -0.66853997603718 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.10986960182278 * H3x1_1 + -0.10835805909937 * H3x1_2 + 
1.78643376838566 * H3x1_3 + -0.00067995179919 * H3x1_4 + 2.04711620528782 * H3x1_5 + 
-0.66853997603718 * H3x1_6 ;
1140055   +   H4x1_2  =    -0.17187141657369 * H3x1_1  +    -1.56897037747293 * H3x1_2
1140056   +          +    -1.38330818097338 * H3x1_3  +     3.94629669251083 * H3x1_4
1140057   +          +    -0.57201557221624 * H3x1_5  +     0.99276034828548 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = -0.17187141657369 * H3x1_1 + -1.56897037747293 * H3x1_2 + 
-1.38330818097338 * H3x1_3 + 3.94629669251083 * H3x1_4 + -0.57201557221624 * H3x1_5 + 
0.99276034828548 * H3x1_6 ;
1140058   +   H4x1_3  =      1.5223304212488 * H3x1_1  +    -0.33490912702371 * H3x1_2
1140059   +          +    -0.30324493540575 * H3x1_3  +    -1.23990036921669 * H3x1_4
1140060   +          +     0.77489370055267 * H3x1_5  +    -0.38609823936674 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.5223304212488 * H3x1_1 + -0.33490912702371 * H3x1_2 + 
-0.30324493540575 * H3x1_3 + -1.23990036921669 * H3x1_4 + 0.77489370055267 * H3x1_5 + 
-0.38609823936674 * H3x1_6 ;
1140061   +   H4x1_4  =    -0.75234452297837 * H3x1_1  +      1.1117782900703 * H3x1_2
1140062   +          +      1.0171911341496 * H3x1_3  +     2.31462824862723 * H3x1_4
1140063   +          +     1.05562639649812 * H3x1_5  +    -0.80603399686936 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -0.75234452297837 * H3x1_1 + 1.1117782900703 * H3x1_2 + 
1.0171911341496 * H3x1_3 + 2.31462824862723 * H3x1_4 + 1.05562639649812 * H3x1_5 + 
-0.80603399686936 * H3x1_6 ;
1140064   +   H4x1_5  =    -0.35441774309359 * H3x1_1  +     0.37408435161205 * H3x1_2
1140065   +          +    -0.79287886005891 * H3x1_3  +    -0.89695291885453 * H3x1_4
1140066   +          +     0.46220429367054 * H3x1_5  +    -1.56166867584216 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = -0.35441774309359 * H3x1_1 + 0.37408435161205 * H3x1_2 + 
-0.79287886005891 * H3x1_3 + -0.89695291885453 * H3x1_4 + 0.46220429367054 * H3x1_5 + 
-1.56166867584216 * H3x1_6 ;
1140067   +   H4x1_1  = H4x1_1  +    -1.12622282402713 * H3x2_1
1140068   +          +     2.43865739917959 * H3x2_2  +     1.62534005409988 * H3x2_3
1140069   +          +     0.83506165677151 * H3x2_4  +    -0.15894659563972 * H3x2_5
1140070   +          +     0.77216806897502 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -1.12622282402713 * H3x2_1 + 2.43865739917959 * H3x2_2 
+ 1.62534005409988 * H3x2_3 + 0.83506165677151 * H3x2_4 + -0.15894659563972 * H3x2_5 + 
0.77216806897502 * H3x2_6 ;
1140071   +   H4x1_2  = H4x1_2  +     0.96736353410956 * H3x2_1
1140072   +          +      1.6250281874285 * H3x2_2  +    -0.81418318229631 * H3x2_3
1140073   +          +     0.35282111325987 * H3x2_4  +     0.11187473980261 * H3x2_5
1140074   +          +     0.73971378600397 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 + 0.96736353410956 * H3x2_1 + 1.6250281874285 * H3x2_2 + 
-0.81418318229631 * H3x2_3 + 0.35282111325987 * H3x2_4 + 0.11187473980261 * H3x2_5 + 
0.73971378600397 * H3x2_6 ;
1140075   +   H4x1_3  = H4x1_3  +    -0.30588247178582 * H3x2_1
1140076   +          +     0.22302184288326 * H3x2_2  +    -0.15797620108073 * H3x2_3
1140077   +          +     1.18515955770896 * H3x2_4  +     0.43359240886537 * H3x2_5
1140078   +          +     0.90907054011344 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 + -0.30588247178582 * H3x2_1 + 0.22302184288326 * H3x2_2 
+ -0.15797620108073 * H3x2_3 + 1.18515955770896 * H3x2_4 + 0.43359240886537 * H3x2_5 + 
0.90907054011344 * H3x2_6 ;
1140079   +   H4x1_4  = H4x1_4  +    -0.26678025657796 * H3x2_1
1140080   +          +    -0.23171152283695 * H3x2_2  +    -0.72882061581264 * H3x2_3
1140081   +          +     0.68597418643333 * H3x2_4  +      0.6559090638639 * H3x2_5
1140082   +          +     0.95412028439169 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 + -0.26678025657796 * H3x2_1 + -0.23171152283695 * 
H3x2_2 + -0.72882061581264 * H3x2_3 + 0.68597418643333 * H3x2_4 + 0.6559090638639 * H3x2_5 + 
0.95412028439169 * H3x2_6 ;
1140083   +   H4x1_5  = H4x1_5  +    -0.77875602324955 * H3x2_1
1140084   +          +     -1.5646810153964 * H3x2_2  +    -0.53157591270506 * H3x2_3
1140085   +          +    -0.27917864191674 * H3x2_4  +    -1.10966192483404 * H3x2_5
1140086   +          +     -0.0058627670025 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 + -0.77875602324955 * H3x2_1 + -1.5646810153964 * H3x2_2 
+ -0.53157591270506 * H3x2_3 + -0.27917864191674 * H3x2_4 + -1.10966192483404 * H3x2_5 + 
-0.0058627670025 * H3x2_6 ;
1140087   +   H4x1_1  =     0.87937070574208 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.87937070574208 + H4x1_1 ;
1140088   +   H4x1_2  =     0.75203729660648 + H4x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0.75203729660648 + H4x1_2 ;
1140089   +   H4x1_3  =     1.14889100908291 + H4x1_3 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.14889100908291 + H4x1_3 ;
1140090   +   H4x1_4  =    -1.71383624276913 + H4x1_4 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -1.71383624276913 + H4x1_4 ;
1140091   +   H4x1_5  =     0.22194774900585 + H4x1_5 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = 0.22194774900585 + H4x1_5 ;
1140092   +   H4x1_6  = 0;
MPRINT(EM_DIAGRAM):   H4x1_6 = 0;
1140093   +   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
1140094   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1140095   +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
1140096   +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
1140097   +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
1140098   +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
1140099   +   H4x1_3  = EXP(H4x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_3 = EXP(H4x1_3 - _MAX_);
1140100   +   _SUM_ = _SUM_ + H4x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_3 ;
1140101   +   H4x1_4  = EXP(H4x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_4 = EXP(H4x1_4 - _MAX_);
1140102   +   _SUM_ = _SUM_ + H4x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_4 ;
1140103   +   H4x1_5  = EXP(H4x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_5 = EXP(H4x1_5 - _MAX_);
1140104   +   _SUM_ = _SUM_ + H4x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_5 ;
1140105   +   H4x1_6  = EXP(H4x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_6 = EXP(H4x1_6 - _MAX_);
1140106   +   _SUM_ = _SUM_ + H4x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_6 ;
1140107   +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
1140108   +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
1140109   +   H4x1_3  = H4x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 / _SUM_;
1140110   +   H4x1_4  = H4x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 / _SUM_;
1140111   +   H4x1_5  = H4x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 / _SUM_;
1140112   +   H4x1_6  = H4x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_6 = H4x1_6 / _SUM_;
1140113   +END;
MPRINT(EM_DIAGRAM):   END;
1140114   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1140115   +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
1140116   +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
1140117   +   H4x1_3  = .;
MPRINT(EM_DIAGRAM):   H4x1_3 = .;
1140118   +   H4x1_4  = .;
MPRINT(EM_DIAGRAM):   H4x1_4 = .;
1140119   +   H4x1_5  = .;
MPRINT(EM_DIAGRAM):   H4x1_5 = .;
1140120   +   H4x1_6  = .;
MPRINT(EM_DIAGRAM):   H4x1_6 = .;
1140121   +END;
MPRINT(EM_DIAGRAM):   END;
1140122   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1140123   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1140124   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1140125   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1140126   +   P_DepVar1  =    -5.30721919155126 * H4x1_1  +     10.4301477552223 * H4x1_2
1140127   +          +    -3.40676330075486 * H4x1_3  +     0.07452634039202 * H4x1_4
1140128   +          +    -2.90585821687293 * H4x1_5  +    -2.63321710569292 * H4x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.30721919155126 * H4x1_1 + 10.4301477552223 * H4x1_2 + 
-3.40676330075486 * H4x1_3 + 0.07452634039202 * H4x1_4 + -2.90585821687293 * H4x1_5 + 
-2.63321710569292 * H4x1_6 ;
1140129   +   P_DepVar1  =    -2.93956196427421 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.93956196427421 + P_DepVar1 ;
1140130   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1140131   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1140132   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1140133   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1140134   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1140135   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1140136   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1140137   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1140138   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1140139   +END;
MPRINT(EM_DIAGRAM):   END;
1140140   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1140141   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1140142   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1140143   +END;
MPRINT(EM_DIAGRAM):   END;
1140144   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1140145   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1140146   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1140147   +END;
MPRINT(EM_DIAGRAM):   END;
1140148   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1140149   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1140150   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1140151   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1140152   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1140153   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1140154   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1140155   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1140156   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1140157   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1140158   +END;
MPRINT(EM_DIAGRAM):   END;
1140159   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1140160   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1140161   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1140162   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1140163    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1140164    quit;
1140165    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1140166    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1140167    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1140168    retain ID 2 Node "AutoNeural28";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural28";
1140169    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1140170    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 14351 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 14351 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140171    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1140172    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140173    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 14351 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 14351 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1140174    proc sort data=EMWS8.AutoNeural28_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural28_variableset out=_temp2(keep=NAME 
CREATOR);
1140175    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140176    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS8.AUTONEURAL28_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1140177    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1140178    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1140179    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1140180    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140181    proc contents data=EMWS8.AutoNeural28_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural28_train out=_meta(keep=NAME) noprint;
1140182    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 114 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1140183    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1140184    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140185    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 114 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 114 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140186    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1140187    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1140188    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140189    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 114 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 114 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140190    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1140191    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1140191  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 6863 rows and 5 columns.

1140192    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1140193    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1140194    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 6863 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 6863 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140195    filename _pref
1140195  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1140196    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1140197    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1140198   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1140199   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1140200   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1140201   +
1140202   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1140203   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1140204   +
1140205   +
1140206   +/*----G_Marital_Status begin----*/
1140207   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1140208   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1140209   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1140210   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1140211   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1140212   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1140213   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1140214   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1140215   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1140216   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1140217   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1140218   +end;
MPRINT(EM_DIAGRAM):   end;
1140219   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1140220   +/*----G_Marital_Status end----*/
1140221   +
1140222   +
1140223   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
1140224   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1140225   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1140226    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1140227    quit;
1140228    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1140229    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1140230    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1140231    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1140232    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1140233    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140234    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1140235    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140236    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1140237    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1140238    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140239    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140240    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1140241    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1140242    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1140243    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140244    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1140245    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1140246    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1140247    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140248    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140249    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1140250    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1140251    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140252    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140253    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1140254    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1140254  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

1140255    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140256    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1140257    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 6866 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140258    filename _pref
1140258  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1140259    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1140260    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1140261   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1140262   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1140263   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1140264   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1140265   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1140266   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1140267    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1140268    quit;
1140269    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1140270    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1140271    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1140272    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1140273    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1140274    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140275    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1140276    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140277    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140278    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1140279    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140280    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1140281    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1140282    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1140283    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1140284    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140285    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1140286    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1140287    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1140288    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140289    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1140290    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1140291    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1140292    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140293    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140294    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1140295    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1140295  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1140296    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140297    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1140298    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 6870 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1140299    filename _pref
1140299  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1140300    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1140301    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1140302   +
1140303   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1140304   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1140304  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1140305   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1140306   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1140307   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1140308   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1140309   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1140310    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1140311    quit;
1140312    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1140313    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1140314    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1140315    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1140316    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1140317    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1140318    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1140319    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140320    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140321    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1140322    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140323    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140324    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1140325    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1140326    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1140327    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140328    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1140329    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140330    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1140331    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140332    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140333    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1140334    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1140335    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140336    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140337    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1140338    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1140338  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1140339    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1140340    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1140341    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 6909 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140342    filename _pref
1140342  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1140343    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1140344    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1140345   +
1140346   +
1140347   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1140348   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1140349   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1140350   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1140351   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1140352   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1140353   +
1140354   +
1140355   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1140356   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1140357   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1140358   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1140359   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1140360   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1140361   +
1140362   +
1140363   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1140364   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1140365   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1140366   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1140367   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1140368   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1140369   +
1140370   +
1140371   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1140372   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1140373   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1140374   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1140375   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1140376   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1140377   +
1140378   +
1140379   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1140380   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1140381   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1140382   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1140383   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1140384   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1140385   +
1140386   +
1140387   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1140388   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1140389   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1140390   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1140391   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1140392   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1140393   +
1140394   +
1140395   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1140396   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1140397   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1140398   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1140399   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1140400   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1140401   +
1140402   +
1140403   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1140404   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1140405   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1140406   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1140407   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1140408   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1140409   +if
1140410   +_FILTERNORM1 not in ( '.')
1140411   + and
1140412   +_FILTERNORM2 not in ( '.')
1140413   + and
1140414   +_FILTERNORM3 not in ( '.')
1140415   + and
1140416   +_FILTERNORM4 not in ( '.')
1140417   + and
1140418   +_FILTERNORM5 not in ( '.')
1140419   + and
1140420   +_FILTERNORM6 not in ( '.')
1140421   + and
1140422   +_FILTERNORM7 not in ( ' ')
1140423   + and
1140424   +_FILTERNORM8 not in ( ' ')
1140425   +and
1140426   +( Dt_Customer ne .)
1140427   +and ( Income ne . and (Income<=107000))
1140428   +and ( Kidhome ne .)
1140429   +and ( MntFishProducts ne .)
1140430   +and ( MntFruits ne .)
1140431   +and ( MntGoldProds ne .)
1140432   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1140433   +and ( MntSweetProducts ne .)
1140434   +and ( MntWines ne .)
1140435   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1140436   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1140437   +and ( NumStorePurchases ne .)
1140438   +and ( NumWebPurchases ne .)
1140439   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1140440   +and ( Recency ne .)
1140441   +and ( Teenhome ne .)
1140442   +and ( Year_Birth ne .)
1140443   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1140444   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1140445   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1140446   +end;
MPRINT(EM_DIAGRAM):   end;
1140447   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1140448   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1140449    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1140450    quit;
1140451    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1140452    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1140453    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1140454    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1140455    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1140456    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140457    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1140458    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140459    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140460    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1140461    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140462    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1140463    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1140464    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1140465    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1140466    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140467    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1140468    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1140469    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1140470    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140471    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140472    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1140473    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1140474    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140475    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140476    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1140477    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1140477  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1140478    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140479    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1140480    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 6975 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1140481    %macro varDept(fcmpdata=,id=);
1140482    %global nobs&id scoreFlag&id;
1140483    %let scoreFlag&id = 0;
1140484    %if &id=1 or ^&fcmpStart %then %do;
1140485    proc sort data=&fcmpdata out=_temp&id nodupkey;
1140486    by NAME;
1140487    where id=&id and LHS in( %let j=1;
1140488    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1140489    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1140490    "&var" %let j = %eval(&j+1);
1140491    %end;
1140492    );
1140493    run;
1140494    %let dsid = %sysfunc(open(_temp&id));
1140495    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1140496    %let dsid = %sysfunc(close(&dsid));
1140497    %if &&nobs&id %then %do;
1140498    %let scoreFlag&id = 1;
1140499    %let fcmpStart = 1;
1140500    %end;
1140501    %else %let fcmpStart = 0;
1140502    %end;
1140503    %else %do;
1140504    proc sort data=&fcmpdata out=_tempid;
1140505    where id=&id;
1140506    by LHS;
1140507    run;
1140508    %let dsid = %sysfunc(open(_tempid));
1140509    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1140510    %let dsid = %sysfunc(close(&dsid));
1140511    %if ^&&nobs&id %then %do;
1140512    proc datasets lib=work nolist;
1140513    delete _tempid;
1140514    run;
1140515    quit;
1140516    %end;
1140517    %else %do;
1140518    data _tempAll;
1140519    set %let j=%eval(&id-1);
1140520    %do x=1 %to &j;
1140521    %if &&nobs&x %then %do;
1140522    _temp&x %end;
1140523    %end;
1140524    ;
1140525    run;
1140526    proc sql;
1140527    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1140527  ! work._tempid p2 where p.name=p2.lhs;
1140528    quit;
1140529    data _temp&id;
1140530    set _temp&id;
1140531    where LHS ne '' and NAME ne '' and Node ne '';
1140532    run;
1140533    proc datasets lib=work nolist;
1140534    delete _tempAll;
1140535    run;
1140536    %let dsid = %sysfunc(open(_temp&id));
1140537    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1140538    %let dsid = %sysfunc(close(&dsid));
1140539    %if ^&&nobs&id %then %do;
1140540    proc datasets lib=work nolist;
1140541    delete _temp&id;
1140542    run;
1140543    quit;
1140544    %end;
1140545    %else %do;
1140546    %let scoreFlag&id = 1;
1140547    data _temp&id;
1140548    set _temp&id;
1140549    where LHS ne NAME and node ne '';
1140550    run;
1140551    %let dsid = %sysfunc(open(_temp&id));
1140552    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1140553    %let dsid = %sysfunc(close(&dsid));
1140554    %if ^&&nobs&id %then %do;
1140555    proc datasets lib=work nolist;
1140556    delete _temp&id;
1140557    run;
1140558    quit;
1140559    %end;
1140560    %else %do;
1140561    proc sort data=_temp&id nodupkey;
1140562    by LHS NAME;
1140563    run;
1140564    %end;
1140565    %end;
1140566    %end;
1140567    %end;
1140568    %mend varDept;
1140569    %macro optCode(outdata=fcmpdata);
1140570    %global fcmpStart;
1140571    %let fcmpStart = 0;
1140572    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1140573    %let NumNodes=9;
1140574    %do k=1 %to &NumNodes;
1140575    %vardept(fcmpdata=&outdata, id=&k);
1140576    %end;
1140577    %mend optCode;
1140578    %optcode(outData=EMWS8.Ensmbl51_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 234 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 160 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 74 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 74 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 75 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

The SAS System

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 114 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1140579    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1140580    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1140581    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1140582    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140583    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1140584    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1140585    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1140586    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140587    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1140588    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1140588  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1140589    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1140590    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1140591    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1140592    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140593    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1140594    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1140595    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1140596    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1140597    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1140598    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1140599    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1140600    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140601    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1140602    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1140602  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

1140603    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1140604    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1140605    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1140606    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140607    filename _pref
1140607  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural27\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural27\EMPUBLISHSCORE.sas";
1140608    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1140609    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural27\EMPUBLISHSCORE.sas.
1140610   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1140611   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1140612   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1140613   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1140614   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1140615   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1140616   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1140617   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1140618   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1140619   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1140620   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1140621   +LENGTH _WARN_ $4
1140622   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1140623   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1140624   +
1140625   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1140626   +
1140627   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1140628   +
1140629   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1140630   +
1140631   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1140632   +
1140633   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1140634   +
1140635   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1140636   +
1140637   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1140638   +
1140639   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1140640   +
1140641   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1140642   +
1140643   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1140644   +
1140645   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1140646   +
1140647   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1140648   +
1140649   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1140650   +
1140651   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1140652   +
1140653   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1140654   +
1140655   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1140656   +
1140657   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1140658   +
1140659   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1140660   +
1140661   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1140662   +
1140663   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1140664   +
1140665   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1140666   +
1140667   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1140668   +
1140669   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1140670   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1140671   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1140672   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1140673   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1140674   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1140675   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1140676   +end;
MPRINT(EM_DIAGRAM):   end;
1140677   +else do;
MPRINT(EM_DIAGRAM):   else do;
1140678   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1140679   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1140680   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1140681   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1140682   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1140683   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1140684   +   end;
MPRINT(EM_DIAGRAM):   end;
1140685   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1140686   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1140687   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1140688   +   end;
MPRINT(EM_DIAGRAM):   end;
1140689   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1140690   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1140691   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1140692   +   end;
MPRINT(EM_DIAGRAM):   end;
1140693   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1140694   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1140695   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1140696   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1140697   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1140698   +   end;
MPRINT(EM_DIAGRAM):   end;
1140699   +end;
MPRINT(EM_DIAGRAM):   end;
1140700   +
1140701   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1140702   +*** Checking missing input Interval
1140703   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1140704   +
1140705   +IF NMISS(
1140706   +   AcceptedCmpTotal ,
1140707   +   Frq ,
1140708   +   Income ,
1140709   +   Mnt ,
1140710   +   MntGoldProds ,
1140711   +   MntMeatProducts ,
1140712   +   MntWines ,
1140713   +   NumDistPurchases ,
1140714   +   RFMstat ,
1140715   +   RMntFrq ,
1140716   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1140717   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1140718   +
1140719   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1140720   +END;
MPRINT(EM_DIAGRAM):   END;
1140721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1140722   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1140723   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1140724   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1140725   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1140726   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1140727   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1140728   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1140729   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1140730   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1140731   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1140732   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1140733   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1140734   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1140735   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1140736   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1140737   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1140738   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1140739   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1140740   +END;
MPRINT(EM_DIAGRAM):   END;
1140741   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1140742   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1140743   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1140744   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1140745   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1140746   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1140747   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1140748   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1140749   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1140750   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1140751   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1140752   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1140753   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1140754   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1140755   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1140756   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1140757   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1140758   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1140759   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1140760   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1140761   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1140762   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1140763   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1140764   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1140765   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1140766   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1140767   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1140768   +END;
MPRINT(EM_DIAGRAM):   END;
1140769   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1140770   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1140771   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1140772   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1140773   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1140774   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1140775   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1140776   +   H1x1_1  =    -0.18981728384316 * S_AcceptedCmpTotal
1140777   +          +     2.44575265018132 * S_Frq  +    -0.33258639871365 * S_Income
1140778   +          +    -1.51282513201415 * S_Mnt  +     0.06017420606179 *
1140779   +        S_MntGoldProds  +    -0.55274425550395 * S_MntMeatProducts
1140780   +          +     0.91858869924573 * S_MntWines  +    -1.95905223495165 *
1140781   +        S_NumDistPurchases  +     -0.2637023845598 * S_RFMstat
1140782   +          +     1.23283591446263 * S_RMntFrq  +    -0.07916044614039 *
1140783   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.18981728384316 * S_AcceptedCmpTotal + 2.44575265018132 * 
S_Frq + -0.33258639871365 * S_Income + -1.51282513201415 * S_Mnt + 0.06017420606179 * 
S_MntGoldProds + -0.55274425550395 * S_MntMeatProducts + 0.91858869924573 * S_MntWines + 
-1.95905223495165 * S_NumDistPurchases + -0.2637023845598 * S_RFMstat + 1.23283591446263 * 
S_RMntFrq + -0.07916044614039 * S_Recency ;
1140784   +   H1x1_2  =    -0.68309764555121 * S_AcceptedCmpTotal
1140785   +          +     0.14669436656758 * S_Frq  +     0.02315218376279 * S_Income
1140786   +          +    -4.21583355142014 * S_Mnt  +     0.19199314585125 *
1140787   +        S_MntGoldProds  +     2.55483645032568 * S_MntMeatProducts
1140788   +          +     0.82054382378306 * S_MntWines  +     0.29968014910707 *
1140789   +        S_NumDistPurchases  +     0.60687719454304 * S_RFMstat
1140790   +          +     0.83498030971653 * S_RMntFrq  +     0.50801279856495 *
1140791   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.68309764555121 * S_AcceptedCmpTotal + 0.14669436656758 * 
S_Frq + 0.02315218376279 * S_Income + -4.21583355142014 * S_Mnt + 0.19199314585125 * 
S_MntGoldProds + 2.55483645032568 * S_MntMeatProducts + 0.82054382378306 * S_MntWines + 
0.29968014910707 * S_NumDistPurchases + 0.60687719454304 * S_RFMstat + 0.83498030971653 * 
S_RMntFrq + 0.50801279856495 * S_Recency ;
1140792   +   H1x1_3  =     0.08829866742968 * S_AcceptedCmpTotal
1140793   +          +    -0.02323769496851 * S_Frq  +    -0.99617629114101 * S_Income
1140794   +          +    -4.64282306384023 * S_Mnt  +     0.04308696038528 *
1140795   +        S_MntGoldProds  +     2.31863620360623 * S_MntMeatProducts
1140796   +          +     0.16587338267425 * S_MntWines  +     1.02973533097984 *
1140797   +        S_NumDistPurchases  +     0.20343196580651 * S_RFMstat
1140798   +          +     0.94726928092138 * S_RMntFrq  +     0.03712585159749 *
1140799   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.08829866742968 * S_AcceptedCmpTotal + -0.02323769496851 * 
S_Frq + -0.99617629114101 * S_Income + -4.64282306384023 * S_Mnt + 0.04308696038528 * 
S_MntGoldProds + 2.31863620360623 * S_MntMeatProducts + 0.16587338267425 * S_MntWines + 
1.02973533097984 * S_NumDistPurchases + 0.20343196580651 * S_RFMstat + 0.94726928092138 * 
S_RMntFrq + 0.03712585159749 * S_Recency ;
1140800   +   H1x1_4  =     0.10061099283455 * S_AcceptedCmpTotal
1140801   +          +     1.72752905329456 * S_Frq  +    -0.50472344084228 * S_Income
1140802   +          +     1.07329017540495 * S_Mnt  +    -0.44517902573644 *
1140803   +        S_MntGoldProds  +    -1.57417593135497 * S_MntMeatProducts
1140804   +          +    -0.75359748699668 * S_MntWines  +    -1.09387259425684 *
1140805   +        S_NumDistPurchases  +    -0.81518874000435 * S_RFMstat
1140806   +          +     0.23368643717628 * S_RMntFrq  +    -0.30240544347672 *
1140807   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.10061099283455 * S_AcceptedCmpTotal + 1.72752905329456 * 
S_Frq + -0.50472344084228 * S_Income + 1.07329017540495 * S_Mnt + -0.44517902573644 * 
S_MntGoldProds + -1.57417593135497 * S_MntMeatProducts + -0.75359748699668 * S_MntWines + 
-1.09387259425684 * S_NumDistPurchases + -0.81518874000435 * S_RFMstat + 0.23368643717628 * 
S_RMntFrq + -0.30240544347672 * S_Recency ;
1140808   +   H1x1_5  =    -0.22817314877708 * S_AcceptedCmpTotal
1140809   +          +     0.28118539965414 * S_Frq  +     0.04846488460495 * S_Income
1140810   +          +     0.60106863054811 * S_Mnt  +    -0.06162179557217 *
1140811   +        S_MntGoldProds  +    -0.39180490439507 * S_MntMeatProducts
1140812   +          +    -0.21017068084579 * S_MntWines  +    -0.32161828113396 *
1140813   +        S_NumDistPurchases  +    -0.03465088483344 * S_RFMstat
1140814   +          +    -0.03147262277696 * S_RMntFrq  +     0.34128240879899 *
1140815   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.22817314877708 * S_AcceptedCmpTotal + 0.28118539965414 * 
S_Frq + 0.04846488460495 * S_Income + 0.60106863054811 * S_Mnt + -0.06162179557217 * 
S_MntGoldProds + -0.39180490439507 * S_MntMeatProducts + -0.21017068084579 * S_MntWines + 
-0.32161828113396 * S_NumDistPurchases + -0.03465088483344 * S_RFMstat + -0.03147262277696 * 
S_RMntFrq + 0.34128240879899 * S_Recency ;
1140816   +   H1x1_1  = H1x1_1  +     0.15249883445815 * G_Marital_Status0
1140817   +          +    -0.18818735950093 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15249883445815 * G_Marital_Status0 + 
-0.18818735950093 * G_Marital_Status1 ;
1140818   +   H1x1_2  = H1x1_2  +     1.59824663671134 * G_Marital_Status0
1140819   +          +     1.96669325047054 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.59824663671134 * G_Marital_Status0 + 
1.96669325047054 * G_Marital_Status1 ;
1140820   +   H1x1_3  = H1x1_3  +    -0.31220761109652 * G_Marital_Status0
1140821   +          +     0.52212878383819 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.31220761109652 * G_Marital_Status0 + 
0.52212878383819 * G_Marital_Status1 ;
1140822   +   H1x1_4  = H1x1_4  +    -1.92906338619158 * G_Marital_Status0
1140823   +          +    -1.25145208260948 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.92906338619158 * G_Marital_Status0 + 
-1.25145208260948 * G_Marital_Status1 ;
1140824   +   H1x1_5  = H1x1_5  +    -0.18067263072436 * G_Marital_Status0
1140825   +          +    -0.07780771416761 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.18067263072436 * G_Marital_Status0 + 
-0.07780771416761 * G_Marital_Status1 ;
1140826   +   H1x1_1  =     1.46324697396327 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.46324697396327 + H1x1_1 ;
1140827   +   H1x1_2  =     1.36794472927517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.36794472927517 + H1x1_2 ;
1140828   +   H1x1_3  =    -0.57612320445046 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.57612320445046 + H1x1_3 ;
1140829   +   H1x1_4  =    -1.53805674056235 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53805674056235 + H1x1_4 ;
1140830   +   H1x1_5  =     0.35787040000513 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.35787040000513 + H1x1_5 ;
1140831   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1140832   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1140833   +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
1140834   +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
1140835   +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
1140836   +END;
MPRINT(EM_DIAGRAM):   END;
1140837   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1140838   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1140839   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1140840   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1140841   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1140842   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1140843   +END;
MPRINT(EM_DIAGRAM):   END;
1140844   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1140845   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1140846   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1140847   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1140848   +   P_DepVar1  =    -2.75625949468408 * H1x1_1  +    -2.04123594690263 * H1x1_2
1140849   +          +     2.55595542456674 * H1x1_3  +     2.41628841604103 * H1x1_4
1140850   +          +      -11.39673341305 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.75625949468408 * H1x1_1 + -2.04123594690263 * H1x1_2 + 
2.55595542456674 * H1x1_3 + 2.41628841604103 * H1x1_4 + -11.39673341305 * H1x1_5 ;
1140851   +   P_DepVar1  =     0.62420945009508 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.62420945009508 + P_DepVar1 ;
1140852   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1140853   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1140854   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1140855   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1140856   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1140857   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1140858   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1140859   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1140860   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1140861   +END;
MPRINT(EM_DIAGRAM):   END;
1140862   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1140863   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1140864   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1140865   +END;
MPRINT(EM_DIAGRAM):   END;
1140866   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1140867   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1140868   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1140869   +END;
MPRINT(EM_DIAGRAM):   END;
1140870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1140871   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1140872   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1140873   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1140874   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1140875   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1140876   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1140877   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1140878   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1140879   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1140880   +END;
MPRINT(EM_DIAGRAM):   END;
1140881   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1140882   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1140883   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1140884   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1140885    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1140886    quit;
1140887    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1140888    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1140889    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1140890    retain ID 2 Node "AutoNeural27";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural27";
1140891    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1140892    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 917 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 917 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140893    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1140894    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140895    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 917 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 917 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1140896    proc sort data=EMWS8.AutoNeural27_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural27_variableset out=_temp2(keep=NAME 
CREATOR);
1140897    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140898    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS8.AUTONEURAL27_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140899    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1140900    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1140901    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1140902    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140903    proc contents data=EMWS8.AutoNeural27_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural27_train out=_meta(keep=NAME) noprint;
1140904    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1140905    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1140906    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140907    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140908    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1140909    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1140910    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140911    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140912    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1140913    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1140913  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 479 rows and 5 columns.

1140914    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1140915    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1140916    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 479 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 479 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140917    filename _pref
1140917  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1140918    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1140919    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1140920   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1140921   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1140922   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1140923   +
1140924   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1140925   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1140926   +
1140927   +
1140928   +/*----G_Marital_Status begin----*/
1140929   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1140930   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1140931   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1140932   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1140933   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1140934   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1140935   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1140936   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1140937   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1140938   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1140939   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1140940   +end;
MPRINT(EM_DIAGRAM):   end;
1140941   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1140942   +/*----G_Marital_Status end----*/
1140943   +
1140944   +
1140945   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
1140946   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1140947   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1140948    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1140949    quit;
1140950    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1140951    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1140952    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1140953    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1140954    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1140955    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140956    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1140957    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140958    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140959    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1140960    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140961    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1140962    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1140963    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1140964    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1140965    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140966    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1140967    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1140968    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1140969    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140970    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140971    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1140972    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1140973    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140974    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140975    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1140976    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1140976  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

1140977    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1140978    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1140979    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 482 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140980    filename _pref
1140980  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1140981    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1140982    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1140983   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1140984   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1140985   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1140986   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1140987   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1140988   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1140989    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1140990    quit;
1140991    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1140992    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1140993    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1140994    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1140995    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1140996    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1140997    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1140998    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1140999    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141000    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1141001    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141002    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141003    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1141004    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1141005    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1141006    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141007    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1141008    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141009    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1141010    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141011    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141012    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1141013    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1141014    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141015    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141016    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1141017    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1141017  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1141018    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141019    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1141020    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 486 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141021    filename _pref
1141021  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1141022    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1141023    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1141024   +
1141025   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1141026   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1141026  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1141027   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1141028   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1141029   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1141030   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1141031   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1141032    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1141033    quit;
1141034    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1141035    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1141036    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1141037    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1141038    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1141039    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141040    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1141041    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141042    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141043    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1141044    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141045    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141046    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1141047    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1141048    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1141049    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141050    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1141051    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141052    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1141053    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141054    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141055    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1141056    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1141057    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141058    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141059    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1141060    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1141060  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1141061    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141062    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1141063    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 525 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1141064    filename _pref
1141064  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1141065    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1141066    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1141067   +
1141068   +
1141069   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1141070   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1141071   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1141072   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1141073   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1141074   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1141075   +
1141076   +
1141077   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1141078   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1141079   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1141080   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1141081   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1141082   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1141083   +
1141084   +
1141085   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1141086   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1141087   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1141088   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1141089   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1141090   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1141091   +
1141092   +
1141093   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1141094   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1141095   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1141096   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1141097   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1141098   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1141099   +
1141100   +
1141101   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1141102   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1141103   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1141104   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1141105   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1141106   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1141107   +
1141108   +
1141109   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1141110   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1141111   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1141112   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1141113   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1141114   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1141115   +
1141116   +
1141117   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1141118   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1141119   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1141120   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1141121   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1141122   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1141123   +
1141124   +
1141125   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1141126   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1141127   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1141128   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1141129   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1141130   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1141131   +if
1141132   +_FILTERNORM1 not in ( '.')
1141133   + and
1141134   +_FILTERNORM2 not in ( '.')
1141135   + and
1141136   +_FILTERNORM3 not in ( '.')
1141137   + and
1141138   +_FILTERNORM4 not in ( '.')
1141139   + and
1141140   +_FILTERNORM5 not in ( '.')
1141141   + and
1141142   +_FILTERNORM6 not in ( '.')
1141143   + and
1141144   +_FILTERNORM7 not in ( ' ')
1141145   + and
1141146   +_FILTERNORM8 not in ( ' ')
1141147   +and
1141148   +( Dt_Customer ne .)
1141149   +and ( Income ne . and (Income<=107000))
1141150   +and ( Kidhome ne .)
1141151   +and ( MntFishProducts ne .)
1141152   +and ( MntFruits ne .)
1141153   +and ( MntGoldProds ne .)
1141154   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1141155   +and ( MntSweetProducts ne .)
1141156   +and ( MntWines ne .)
1141157   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1141158   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1141159   +and ( NumStorePurchases ne .)
1141160   +and ( NumWebPurchases ne .)
1141161   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1141162   +and ( Recency ne .)
1141163   +and ( Teenhome ne .)
1141164   +and ( Year_Birth ne .)
1141165   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1141166   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1141167   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1141168   +end;
MPRINT(EM_DIAGRAM):   end;
1141169   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1141170   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1141171    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1141172    quit;
1141173    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1141174    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1141175    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1141176    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1141177    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1141178    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141179    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1141180    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141181    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141182    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1141183    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141184    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141185    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1141186    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1141187    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1141188    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141189    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1141190    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141191    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1141192    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141193    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141194    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1141195    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1141196    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141197    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141198    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1141199    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1141199  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1141200    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141201    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1141202    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 591 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141203    %macro varDept(fcmpdata=,id=);
1141204    %global nobs&id scoreFlag&id;
1141205    %let scoreFlag&id = 0;
1141206    %if &id=1 or ^&fcmpStart %then %do;
1141207    proc sort data=&fcmpdata out=_temp&id nodupkey;
1141208    by NAME;
1141209    where id=&id and LHS in( %let j=1;
1141210    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1141211    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1141212    "&var" %let j = %eval(&j+1);
1141213    %end;
1141214    );
1141215    run;
1141216    %let dsid = %sysfunc(open(_temp&id));
1141217    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1141218    %let dsid = %sysfunc(close(&dsid));
1141219    %if &&nobs&id %then %do;
1141220    %let scoreFlag&id = 1;
1141221    %let fcmpStart = 1;
1141222    %end;
1141223    %else %let fcmpStart = 0;
1141224    %end;
1141225    %else %do;
1141226    proc sort data=&fcmpdata out=_tempid;
1141227    where id=&id;
1141228    by LHS;
1141229    run;
1141230    %let dsid = %sysfunc(open(_tempid));
1141231    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1141232    %let dsid = %sysfunc(close(&dsid));
1141233    %if ^&&nobs&id %then %do;
1141234    proc datasets lib=work nolist;
1141235    delete _tempid;
1141236    run;
1141237    quit;
1141238    %end;
1141239    %else %do;
1141240    data _tempAll;
1141241    set %let j=%eval(&id-1);
1141242    %do x=1 %to &j;
1141243    %if &&nobs&x %then %do;
1141244    _temp&x %end;
1141245    %end;
1141246    ;
1141247    run;
1141248    proc sql;
1141249    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1141249  ! work._tempid p2 where p.name=p2.lhs;
1141250    quit;
1141251    data _temp&id;
1141252    set _temp&id;
1141253    where LHS ne '' and NAME ne '' and Node ne '';
1141254    run;
1141255    proc datasets lib=work nolist;
1141256    delete _tempAll;
1141257    run;
1141258    %let dsid = %sysfunc(open(_temp&id));
1141259    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1141260    %let dsid = %sysfunc(close(&dsid));
1141261    %if ^&&nobs&id %then %do;
1141262    proc datasets lib=work nolist;
1141263    delete _temp&id;
1141264    run;
1141265    quit;
1141266    %end;
1141267    %else %do;
1141268    %let scoreFlag&id = 1;
1141269    data _temp&id;
1141270    set _temp&id;
1141271    where LHS ne NAME and node ne '';
1141272    run;
1141273    %let dsid = %sysfunc(open(_temp&id));
1141274    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1141275    %let dsid = %sysfunc(close(&dsid));
1141276    %if ^&&nobs&id %then %do;
1141277    proc datasets lib=work nolist;
1141278    delete _temp&id;
1141279    run;
1141280    quit;
1141281    %end;
1141282    %else %do;
1141283    proc sort data=_temp&id nodupkey;
1141284    by LHS NAME;
1141285    run;
1141286    %end;
1141287    %end;
1141288    %end;
1141289    %end;
1141290    %mend varDept;
1141291    %macro optCode(outdata=fcmpdata);
1141292    %global fcmpStart;
1141293    %let fcmpStart = 0;
1141294    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1141295    %let NumNodes=9;
1141296    %do k=1 %to &NumNodes;
1141297    %vardept(fcmpdata=&outdata, id=&k);
1141298    %end;
1141299    %mend optCode;
1141300    %optcode(outData=EMWS8.Ensmbl51_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 69 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 50 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 19 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 19 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 20 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 22 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 59 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1141301    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1141302    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1141303    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1141304    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141305    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1141306    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1141307    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1141308    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141309    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1141310    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1141310  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1141311    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141312    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1141313    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1141314    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141315    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1141316    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1141317    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1141318    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141319    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1141320    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1141321    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1141322    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141323    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1141324    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1141324  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

1141325    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141326    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1141327    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1141328    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141329    filename _pref
1141329  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural33\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural33\EMPUBLISHSCORE.sas";
1141330    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1141331    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural33\EMPUBLISHSCORE.sas.
1141332   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1141333   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1141334   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1141335   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1141336   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1141337   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1141338   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1141339   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1141340   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1141341   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1141342   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1141343   +LENGTH _WARN_ $4
1141344   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1141345   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1141346   +
1141347   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1141348   +
1141349   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1141350   +
1141351   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1141352   +
1141353   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1141354   +
1141355   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1141356   +
1141357   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1141358   +
1141359   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1141360   +
1141361   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1141362   +
1141363   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1141364   +
1141365   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1141366   +
1141367   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1141368   +
1141369   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1141370   +
1141371   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1141372   +
1141373   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1141374   +
1141375   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1141376   +
1141377   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1141378   +
1141379   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1141380   +
1141381   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1141382   +
1141383   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1141384   +
1141385   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1141386   +
1141387   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1141388   +
1141389   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1141390   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1141391   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1141392   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1141393   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1141394   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1141395   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1141396   +end;
MPRINT(EM_DIAGRAM):   end;
1141397   +else do;
MPRINT(EM_DIAGRAM):   else do;
1141398   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1141399   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1141400   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1141401   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1141402   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1141403   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1141404   +   end;
MPRINT(EM_DIAGRAM):   end;
1141405   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1141406   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1141407   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1141408   +   end;
MPRINT(EM_DIAGRAM):   end;
1141409   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1141410   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1141411   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1141412   +   end;
MPRINT(EM_DIAGRAM):   end;
1141413   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1141414   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1141415   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1141416   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1141417   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1141418   +   end;
MPRINT(EM_DIAGRAM):   end;
1141419   +end;
MPRINT(EM_DIAGRAM):   end;
1141420   +
1141421   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1141422   +*** Checking missing input Interval
1141423   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1141424   +
1141425   +IF NMISS(
1141426   +   AcceptedCmpTotal ,
1141427   +   Frq ,
1141428   +   Income ,
1141429   +   Mnt ,
1141430   +   MntGoldProds ,
1141431   +   MntMeatProducts ,
1141432   +   MntWines ,
1141433   +   NumDistPurchases ,
1141434   +   RFMstat ,
1141435   +   RMntFrq ,
1141436   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1141437   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1141438   +
1141439   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1141440   +END;
MPRINT(EM_DIAGRAM):   END;
1141441   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1141442   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1141443   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1141444   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1141445   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1141446   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1141447   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1141448   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1141449   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1141450   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1141451   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1141452   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1141453   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1141454   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1141455   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1141456   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1141457   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1141458   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1141459   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1141460   +END;
MPRINT(EM_DIAGRAM):   END;
1141461   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1141462   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1141463   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1141464   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1141465   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1141466   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1141467   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1141468   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1141469   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1141470   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1141471   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1141472   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1141473   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1141474   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1141475   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1141476   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1141477   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1141478   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1141479   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1141480   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1141481   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1141482   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1141483   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1141484   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1141485   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1141486   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1141487   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1141488   +END;
MPRINT(EM_DIAGRAM):   END;
1141489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1141490   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1141491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1141492   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1141493   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1141494   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1141495   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1141496   +   H1x1_1  =     0.33555011401553 * S_AcceptedCmpTotal
1141497   +          +    -3.02490159760157 * S_Frq  +    -0.12761482391665 * S_Income
1141498   +          +     -9.1169668394273 * S_Mnt  +     0.88214411094174 *
1141499   +        S_MntGoldProds  +     16.4212241447522 * S_MntMeatProducts
1141500   +          +     4.65784744010387 * S_MntWines  +     2.75620847659032 *
1141501   +        S_NumDistPurchases  +     5.10796074430888 * S_RFMstat
1141502   +          +    -0.15069444442326 * S_RMntFrq  +    -0.36037041233055 *
1141503   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.33555011401553 * S_AcceptedCmpTotal + -3.02490159760157 * 
S_Frq + -0.12761482391665 * S_Income + -9.1169668394273 * S_Mnt + 0.88214411094174 * 
S_MntGoldProds + 16.4212241447522 * S_MntMeatProducts + 4.65784744010387 * S_MntWines + 
2.75620847659032 * S_NumDistPurchases + 5.10796074430888 * S_RFMstat + -0.15069444442326 * 
S_RMntFrq + -0.36037041233055 * S_Recency ;
1141504   +   H1x1_2  =     -6.2107002884316 * S_AcceptedCmpTotal
1141505   +          +      5.5991079844098 * S_Frq  +    -1.06506164052399 * S_Income
1141506   +          +     7.16823320768258 * S_Mnt  +     1.97115223638004 *
1141507   +        S_MntGoldProds  +     0.02973121977962 * S_MntMeatProducts
1141508   +          +     3.28931008157038 * S_MntWines  +    -3.02545356699096 *
1141509   +        S_NumDistPurchases  +    -0.45519831720714 * S_RFMstat
1141510   +          +     2.14788986039061 * S_RMntFrq  +     7.13033786501062 *
1141511   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -6.2107002884316 * S_AcceptedCmpTotal + 5.5991079844098 * S_Frq 
+ -1.06506164052399 * S_Income + 7.16823320768258 * S_Mnt + 1.97115223638004 * S_MntGoldProds 
+ 0.02973121977962 * S_MntMeatProducts + 3.28931008157038 * S_MntWines + -3.02545356699096 * 
S_NumDistPurchases + -0.45519831720714 * S_RFMstat + 2.14788986039061 * S_RMntFrq + 
7.13033786501062 * S_Recency ;
1141512   +   H1x1_3  =    -0.31707769589072 * S_AcceptedCmpTotal
1141513   +          +     -0.8436342869652 * S_Frq  +     0.04938014828703 * S_Income
1141514   +          +     0.41074885451072 * S_Mnt  +    -0.22835264468248 *
1141515   +        S_MntGoldProds  +     0.04154328332772 * S_MntMeatProducts
1141516   +          +    -0.63526276335269 * S_MntWines  +     0.16430041832418 *
1141517   +        S_NumDistPurchases  +    -0.01070081959406 * S_RFMstat
1141518   +          +    -1.56851833223581 * S_RMntFrq  +     0.62478865123427 *
1141519   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31707769589072 * S_AcceptedCmpTotal + -0.8436342869652 * 
S_Frq + 0.04938014828703 * S_Income + 0.41074885451072 * S_Mnt + -0.22835264468248 * 
S_MntGoldProds + 0.04154328332772 * S_MntMeatProducts + -0.63526276335269 * S_MntWines + 
0.16430041832418 * S_NumDistPurchases + -0.01070081959406 * S_RFMstat + -1.56851833223581 * 
S_RMntFrq + 0.62478865123427 * S_Recency ;
1141520   +   H1x1_4  =     0.54144616315359 * S_AcceptedCmpTotal
1141521   +          +    -2.69605116285758 * S_Frq  +    -0.42453662943397 * S_Income
1141522   +          +    -0.95657675439363 * S_Mnt  +     0.24420189860131 *
1141523   +        S_MntGoldProds  +     2.44632795316553 * S_MntMeatProducts
1141524   +          +     -0.1454644222769 * S_MntWines  +     2.34899307919173 *
1141525   +        S_NumDistPurchases  +    -0.02462201574723 * S_RFMstat
1141526   +          +    -2.08470857931815 * S_RMntFrq  +    -0.76249328143214 *
1141527   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54144616315359 * S_AcceptedCmpTotal + -2.69605116285758 * 
S_Frq + -0.42453662943397 * S_Income + -0.95657675439363 * S_Mnt + 0.24420189860131 * 
S_MntGoldProds + 2.44632795316553 * S_MntMeatProducts + -0.1454644222769 * S_MntWines + 
2.34899307919173 * S_NumDistPurchases + -0.02462201574723 * S_RFMstat + -2.08470857931815 * 
S_RMntFrq + -0.76249328143214 * S_Recency ;
1141528   +   H1x1_1  = H1x1_1  +     0.00660823494191 * G_Marital_Status0
1141529   +          +    -0.18825548425502 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.00660823494191 * G_Marital_Status0 + 
-0.18825548425502 * G_Marital_Status1 ;
1141530   +   H1x1_2  = H1x1_2  +    -2.06051657300217 * G_Marital_Status0
1141531   +          +    -6.25782340834073 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.06051657300217 * G_Marital_Status0 + 
-6.25782340834073 * G_Marital_Status1 ;
1141532   +   H1x1_3  = H1x1_3  +    -0.79419358160841 * G_Marital_Status0
1141533   +          +     0.34890327415646 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.79419358160841 * G_Marital_Status0 + 
0.34890327415646 * G_Marital_Status1 ;
1141534   +   H1x1_4  = H1x1_4  +    -0.04651762606699 * G_Marital_Status0
1141535   +          +     0.31552155976549 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.04651762606699 * G_Marital_Status0 + 
0.31552155976549 * G_Marital_Status1 ;
1141536   +   H1x1_1  =      9.5912267385355 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 9.5912267385355 + H1x1_1 ;
1141537   +   H1x1_2  =     -17.513407093022 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -17.513407093022 + H1x1_2 ;
1141538   +   H1x1_3  =     3.77110114695743 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 3.77110114695743 + H1x1_3 ;
1141539   +   H1x1_4  =    -1.34405555452152 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.34405555452152 + H1x1_4 ;
1141540   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1141541   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1141542   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1141543   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1141544   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1141545   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1141546   +END;
MPRINT(EM_DIAGRAM):   END;
1141547   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1141548   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1141549   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1141550   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1141551   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1141552   +END;
MPRINT(EM_DIAGRAM):   END;
1141553   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1141554   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1141555   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1141556   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1141557   +   P_DepVar1  =     17.1648278730429 * H1x1_1  +    -5.41550544466459 * H1x1_2
1141558   +          +     -11.071053129929 * H1x1_3  +      10.744209891392 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1648278730429 * H1x1_1 + -5.41550544466459 * H1x1_2 + 
-11.071053129929 * H1x1_3 + 10.744209891392 * H1x1_4 ;
1141559   +   P_DepVar1  =    -12.0079203309727 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.0079203309727 + P_DepVar1 ;
1141560   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1141561   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1141562   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1141563   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1141564   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1141565   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1141566   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1141567   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1141568   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1141569   +END;
MPRINT(EM_DIAGRAM):   END;
1141570   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1141571   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1141572   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1141573   +END;
MPRINT(EM_DIAGRAM):   END;
1141574   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1141575   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1141576   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1141577   +END;
MPRINT(EM_DIAGRAM):   END;
1141578   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1141579   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1141580   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1141581   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1141582   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1141583   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1141584   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1141585   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1141586   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1141587   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1141588   +END;
MPRINT(EM_DIAGRAM):   END;
1141589   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1141590   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1141591   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1141592   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1141593    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1141594    quit;
1141595    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1141596    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1141597    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1141598    retain ID 2 Node "AutoNeural33";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural33";
1141599    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1141600    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 871 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 871 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141601    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1141602    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141603    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 871 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 871 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141604    proc sort data=EMWS8.AutoNeural33_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural33_variableset out=_temp2(keep=NAME 
CREATOR);
1141605    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141606    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS8.AUTONEURAL33_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141607    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1141608    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1141609    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1141610    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1141611    proc contents data=EMWS8.AutoNeural33_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural33_train out=_meta(keep=NAME) noprint;
1141612    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141613    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1141614    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141615    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141616    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1141617    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1141618    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141619    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141620    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1141621    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1141621  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 455 rows and 5 columns.

1141622    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141623    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1141624    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 455 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 455 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141625    filename _pref
1141625  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1141626    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1141627    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1141628   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1141629   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1141630   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1141631   +
1141632   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1141633   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1141634   +
1141635   +
1141636   +/*----G_Marital_Status begin----*/
1141637   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1141638   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1141639   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1141640   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1141641   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1141642   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1141643   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1141644   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1141645   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1141646   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1141647   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1141648   +end;
MPRINT(EM_DIAGRAM):   end;
1141649   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1141650   +/*----G_Marital_Status end----*/
1141651   +
1141652   +
1141653   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
1141654   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1141655   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1141656    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1141657    quit;
1141658    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1141659    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1141660    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1141661    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1141662    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1141663    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141664    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1141665    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141666    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141667    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1141668    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141669    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141670    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1141671    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1141672    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1141673    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141674    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1141675    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141676    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1141677    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141678    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141679    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1141680    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1141681    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141682    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141683    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1141684    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1141684  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

1141685    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141686    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1141687    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 458 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141688    filename _pref
1141688  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1141689    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1141690    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1141691   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1141692   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1141693   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1141694   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1141695   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1141696   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1141697    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1141698    quit;
1141699    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1141700    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1141701    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1141702    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1141703    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1141704    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141705    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1141706    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141707    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141708    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1141709    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141710    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141711    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1141712    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1141713    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1141714    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141715    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1141716    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141717    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1141718    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141719    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141720    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1141721    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1141722    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141723    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141724    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1141725    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1141725  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1141726    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141727    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1141728    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 462 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141729    filename _pref
1141729  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1141730    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1141731    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1141732   +
1141733   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1141734   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1141734  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1141735   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1141736   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1141737   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1141738   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1141739   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1141740    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1141741    quit;
1141742    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1141743    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1141744    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1141745    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1141746    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1141747    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141748    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1141749    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141750    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141751    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1141752    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141753    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141754    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1141755    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1141756    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1141757    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141758    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1141759    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141760    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1141761    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141762    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141763    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1141764    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1141765    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141766    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141767    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1141768    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1141768  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1141769    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141770    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1141771    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 501 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141772    filename _pref
1141772  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1141773    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1141774    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1141775   +
1141776   +
1141777   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1141778   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1141779   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1141780   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1141781   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1141782   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1141783   +
1141784   +
1141785   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1141786   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1141787   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1141788   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1141789   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1141790   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1141791   +
1141792   +
1141793   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1141794   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1141795   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1141796   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1141797   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1141798   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1141799   +
1141800   +
1141801   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1141802   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1141803   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1141804   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1141805   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1141806   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1141807   +
1141808   +
1141809   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1141810   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1141811   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1141812   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1141813   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1141814   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1141815   +
1141816   +
1141817   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1141818   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1141819   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1141820   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1141821   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1141822   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1141823   +
1141824   +
1141825   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1141826   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1141827   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1141828   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1141829   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1141830   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1141831   +
1141832   +
1141833   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1141834   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1141835   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1141836   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1141837   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1141838   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1141839   +if
1141840   +_FILTERNORM1 not in ( '.')
1141841   + and
1141842   +_FILTERNORM2 not in ( '.')
1141843   + and
1141844   +_FILTERNORM3 not in ( '.')
1141845   + and
1141846   +_FILTERNORM4 not in ( '.')
1141847   + and
1141848   +_FILTERNORM5 not in ( '.')
1141849   + and
1141850   +_FILTERNORM6 not in ( '.')
1141851   + and
1141852   +_FILTERNORM7 not in ( ' ')
1141853   + and
1141854   +_FILTERNORM8 not in ( ' ')
1141855   +and
1141856   +( Dt_Customer ne .)
1141857   +and ( Income ne . and (Income<=107000))
1141858   +and ( Kidhome ne .)
1141859   +and ( MntFishProducts ne .)
1141860   +and ( MntFruits ne .)
1141861   +and ( MntGoldProds ne .)
1141862   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1141863   +and ( MntSweetProducts ne .)
1141864   +and ( MntWines ne .)
1141865   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1141866   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1141867   +and ( NumStorePurchases ne .)
1141868   +and ( NumWebPurchases ne .)
1141869   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1141870   +and ( Recency ne .)
1141871   +and ( Teenhome ne .)
1141872   +and ( Year_Birth ne .)
1141873   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1141874   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1141875   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1141876   +end;
MPRINT(EM_DIAGRAM):   end;
1141877   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1141878   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1141879    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1141880    quit;
1141881    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1141882    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1141883    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1141884    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1141885    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1141886    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141887    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1141888    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141889    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141890    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1141891    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141892    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141893    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1141894    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1141895    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1141896    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141897    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1141898    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141899    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1141900    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141901    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141902    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1141903    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1141904    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1141905    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141906    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1141907    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1141907  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1141908    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1141909    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1141910    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 567 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1141911    %macro varDept(fcmpdata=,id=);
1141912    %global nobs&id scoreFlag&id;
1141913    %let scoreFlag&id = 0;
1141914    %if &id=1 or ^&fcmpStart %then %do;
1141915    proc sort data=&fcmpdata out=_temp&id nodupkey;
1141916    by NAME;
1141917    where id=&id and LHS in( %let j=1;
1141918    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1141919    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1141920    "&var" %let j = %eval(&j+1);
1141921    %end;
1141922    );
1141923    run;
1141924    %let dsid = %sysfunc(open(_temp&id));
1141925    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1141926    %let dsid = %sysfunc(close(&dsid));
1141927    %if &&nobs&id %then %do;
1141928    %let scoreFlag&id = 1;
1141929    %let fcmpStart = 1;
1141930    %end;
1141931    %else %let fcmpStart = 0;
1141932    %end;
1141933    %else %do;
1141934    proc sort data=&fcmpdata out=_tempid;
1141935    where id=&id;
1141936    by LHS;
1141937    run;
1141938    %let dsid = %sysfunc(open(_tempid));
1141939    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1141940    %let dsid = %sysfunc(close(&dsid));
1141941    %if ^&&nobs&id %then %do;
1141942    proc datasets lib=work nolist;
1141943    delete _tempid;
1141944    run;
1141945    quit;
1141946    %end;
1141947    %else %do;
1141948    data _tempAll;
1141949    set %let j=%eval(&id-1);
1141950    %do x=1 %to &j;
1141951    %if &&nobs&x %then %do;
1141952    _temp&x %end;
1141953    %end;
1141954    ;
1141955    run;
1141956    proc sql;
1141957    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1141957  ! work._tempid p2 where p.name=p2.lhs;
1141958    quit;
1141959    data _temp&id;
1141960    set _temp&id;
1141961    where LHS ne '' and NAME ne '' and Node ne '';
1141962    run;
1141963    proc datasets lib=work nolist;
1141964    delete _tempAll;
1141965    run;
1141966    %let dsid = %sysfunc(open(_temp&id));
1141967    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1141968    %let dsid = %sysfunc(close(&dsid));
1141969    %if ^&&nobs&id %then %do;
1141970    proc datasets lib=work nolist;
1141971    delete _temp&id;
1141972    run;
1141973    quit;
1141974    %end;
1141975    %else %do;
1141976    %let scoreFlag&id = 1;
1141977    data _temp&id;
1141978    set _temp&id;
1141979    where LHS ne NAME and node ne '';
1141980    run;
1141981    %let dsid = %sysfunc(open(_temp&id));
1141982    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1141983    %let dsid = %sysfunc(close(&dsid));
1141984    %if ^&&nobs&id %then %do;
1141985    proc datasets lib=work nolist;
1141986    delete _temp&id;
1141987    run;
1141988    quit;
1141989    %end;
1141990    %else %do;
1141991    proc sort data=_temp&id nodupkey;
1141992    by LHS NAME;
1141993    run;
1141994    %end;
1141995    %end;
1141996    %end;
1141997    %end;
1141998    %mend varDept;
1141999    %macro optCode(outdata=fcmpdata);
1142000    %global fcmpStart;
1142001    %let fcmpStart = 0;
1142002    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1142003    %let NumNodes=9;
1142004    %do k=1 %to &NumNodes;
1142005    %vardept(fcmpdata=&outdata, id=&k);
1142006    %end;
1142007    %mend optCode;
1142008    %optcode(outData=EMWS8.Ensmbl51_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 48 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 18 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 19 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 58 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1142009    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1142010    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1142011    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1142012    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142013    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1142014    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1142015    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1142016    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142017    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1142018    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1142018  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1142019    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1142020    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1142021    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1142022    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142023    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1142024    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1142025    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1142026    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1142027    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1142028    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1142029    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1142030    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142031    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1142032    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1142032  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

1142033    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

1142034    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1142035    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1142036    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142037    filename _pref
1142037  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMPUBLISHSCORE.sas";
1142038    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1142039    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMPUBLISHSCORE.sas.
1142040   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1142041   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1142042   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1142043   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1142044   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1142045   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1142046   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1142047   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1142048   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1142049   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1142050   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1142051   +LENGTH _WARN_ $4
1142052   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1142053   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1142054   +
1142055   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1142056   +
1142057   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1142058   +
1142059   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1142060   +
1142061   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1142062   +
1142063   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1142064   +
1142065   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1142066   +
1142067   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1142068   +
1142069   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1142070   +
1142071   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1142072   +
1142073   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1142074   +
1142075   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1142076   +
1142077   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1142078   +
1142079   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1142080   +
1142081   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1142082   +
1142083   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1142084   +
1142085   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1142086   +
1142087   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1142088   +
1142089   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1142090   +
1142091   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1142092   +
1142093   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1142094   +
1142095   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1142096   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1142097   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1142098   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1142099   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1142100   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1142101   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1142102   +end;
MPRINT(EM_DIAGRAM):   end;
1142103   +else do;
MPRINT(EM_DIAGRAM):   else do;
1142104   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1142105   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1142106   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1142107   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1142108   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1142109   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1142110   +   end;
MPRINT(EM_DIAGRAM):   end;
1142111   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1142112   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1142113   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1142114   +   end;
MPRINT(EM_DIAGRAM):   end;
1142115   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1142116   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1142117   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1142118   +   end;
MPRINT(EM_DIAGRAM):   end;
1142119   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1142120   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1142121   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1142122   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1142123   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1142124   +   end;
MPRINT(EM_DIAGRAM):   end;
1142125   +end;
MPRINT(EM_DIAGRAM):   end;
1142126   +
1142127   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142128   +*** Checking missing input Interval
1142129   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1142130   +
1142131   +IF NMISS(
1142132   +   AcceptedCmpTotal ,
1142133   +   Frq ,
1142134   +   Income ,
1142135   +   Mnt ,
1142136   +   MntGoldProds ,
1142137   +   MntMeatProducts ,
1142138   +   MntWines ,
1142139   +   NumDistPurchases ,
1142140   +   RFMstat ,
1142141   +   RMntFrq ,
1142142   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1142143   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1142144   +
1142145   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1142146   +END;
MPRINT(EM_DIAGRAM):   END;
1142147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142148   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1142149   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142150   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1142151   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1142152   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1142153   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1142154   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1142155   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1142156   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1142157   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1142158   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1142159   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1142160   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1142161   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1142162   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1142163   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1142164   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1142165   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1142166   +END;
MPRINT(EM_DIAGRAM):   END;
1142167   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1142168   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1142169   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1142170   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1142171   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1142172   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1142173   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1142174   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1142175   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1142176   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1142177   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1142178   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1142179   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1142180   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1142181   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1142182   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1142183   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1142184   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1142185   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1142186   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1142187   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1142188   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1142189   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1142190   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1142191   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1142192   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1142193   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1142194   +END;
MPRINT(EM_DIAGRAM):   END;
1142195   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142196   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1142197   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142198   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142199   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1142200   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142201   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1142202   +   H1x1_1  =    -0.38956319781905 * S_AcceptedCmpTotal
1142203   +          +    -0.08624585416733 * S_Frq  +     0.14990044515556 * S_Income
1142204   +          +     1.26905422062144 * S_Mnt  +    -0.05830961868093 *
1142205   +        S_MntGoldProds  +    -0.45655804707903 * S_MntMeatProducts
1142206   +          +    -0.29008121030195 * S_MntWines  +    -0.52580257849932 *
1142207   +        S_NumDistPurchases  +     -0.1481404693781 * S_RFMstat
1142208   +          +    -0.49319351834455 * S_RMntFrq  +     0.54249594661515 *
1142209   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.38956319781905 * S_AcceptedCmpTotal + -0.08624585416733 * 
S_Frq + 0.14990044515556 * S_Income + 1.26905422062144 * S_Mnt + -0.05830961868093 * 
S_MntGoldProds + -0.45655804707903 * S_MntMeatProducts + -0.29008121030195 * S_MntWines + 
-0.52580257849932 * S_NumDistPurchases + -0.1481404693781 * S_RFMstat + -0.49319351834455 * 
S_RMntFrq + 0.54249594661515 * S_Recency ;
1142210   +   H1x1_2  =     0.38779821527892 * S_AcceptedCmpTotal
1142211   +          +    -1.22315175769362 * S_Frq  +      1.1802985172513 * S_Income
1142212   +          +     2.08508390361851 * S_Mnt  +     0.42839460332296 *
1142213   +        S_MntGoldProds  +      0.9001009517595 * S_MntMeatProducts
1142214   +          +     0.43882453107711 * S_MntWines  +    -0.77730415774439 *
1142215   +        S_NumDistPurchases  +    -0.48791819347803 * S_RFMstat
1142216   +          +    -0.74366268198551 * S_RMntFrq  +    -0.17482075484114 *
1142217   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.38779821527892 * S_AcceptedCmpTotal + -1.22315175769362 * 
S_Frq + 1.1802985172513 * S_Income + 2.08508390361851 * S_Mnt + 0.42839460332296 * 
S_MntGoldProds + 0.9001009517595 * S_MntMeatProducts + 0.43882453107711 * S_MntWines + 
-0.77730415774439 * S_NumDistPurchases + -0.48791819347803 * S_RFMstat + -0.74366268198551 * 
S_RMntFrq + -0.17482075484114 * S_Recency ;
1142218   +   H1x1_3  =    -0.22134549179782 * S_AcceptedCmpTotal
1142219   +          +    -0.06178114920397 * S_Frq  +     -1.4524474173679 * S_Income
1142220   +          +    -7.85805111281271 * S_Mnt  +    -0.25260256377303 *
1142221   +        S_MntGoldProds  +     2.24650170262612 * S_MntMeatProducts
1142222   +          +    -0.28495082016886 * S_MntWines  +     2.83659961242127 *
1142223   +        S_NumDistPurchases  +     0.42067169774523 * S_RFMstat
1142224   +          +     1.71392925516862 * S_RMntFrq  +    -0.09478915012781 *
1142225   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.22134549179782 * S_AcceptedCmpTotal + -0.06178114920397 * 
S_Frq + -1.4524474173679 * S_Income + -7.85805111281271 * S_Mnt + -0.25260256377303 * 
S_MntGoldProds + 2.24650170262612 * S_MntMeatProducts + -0.28495082016886 * S_MntWines + 
2.83659961242127 * S_NumDistPurchases + 0.42067169774523 * S_RFMstat + 1.71392925516862 * 
S_RMntFrq + -0.09478915012781 * S_Recency ;
1142226   +   H1x1_1  = H1x1_1  +    -0.22060541309937 * G_Marital_Status0
1142227   +          +    -0.46692703876881 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.22060541309937 * G_Marital_Status0 + 
-0.46692703876881 * G_Marital_Status1 ;
1142228   +   H1x1_2  = H1x1_2  +     0.47416822018188 * G_Marital_Status0
1142229   +          +     -2.1058284684647 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.47416822018188 * G_Marital_Status0 + 
-2.1058284684647 * G_Marital_Status1 ;
1142230   +   H1x1_3  = H1x1_3  +    -0.44803855270897 * G_Marital_Status0
1142231   +          +     1.41026185304551 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.44803855270897 * G_Marital_Status0 + 
1.41026185304551 * G_Marital_Status1 ;
1142232   +   H1x1_1  =     1.63085271667721 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.63085271667721 + H1x1_1 ;
1142233   +   H1x1_2  =     0.28277859846654 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.28277859846654 + H1x1_2 ;
1142234   +   H1x1_3  =     -1.8890871578635 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.8890871578635 + H1x1_3 ;
1142235   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1142236   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1142237   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1142238   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1142239   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1142240   +END;
MPRINT(EM_DIAGRAM):   END;
1142241   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1142242   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1142243   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1142244   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1142245   +END;
MPRINT(EM_DIAGRAM):   END;
1142246   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142247   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1142248   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142249   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1142250   +   P_DepVar1  =    -23.6822744769009 * H1x1_1  +     16.0380566008578 * H1x1_2
1142251   +          +     15.3446320724554 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -23.6822744769009 * H1x1_1 + 16.0380566008578 * H1x1_2 + 
15.3446320724554 * H1x1_3 ;
1142252   +   P_DepVar1  =     0.67225691696469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.67225691696469 + P_DepVar1 ;
1142253   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1142254   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1142255   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1142256   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1142257   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1142258   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1142259   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1142260   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1142261   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1142262   +END;
MPRINT(EM_DIAGRAM):   END;
1142263   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1142264   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1142265   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1142266   +END;
MPRINT(EM_DIAGRAM):   END;
1142267   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1142268   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1142269   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1142270   +END;
MPRINT(EM_DIAGRAM):   END;
1142271   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142272   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1142273   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142274   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1142275   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1142276   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1142277   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1142278   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1142279   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1142280   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1142281   +END;
MPRINT(EM_DIAGRAM):   END;
1142282   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1142283   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1142284   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1142285   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1142286    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1142287    quit;
1142288    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1142289    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1142290    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1142291    retain ID 2 Node "AutoNeural32";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural32";
1142292    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1142293    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 791 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 791 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142294    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1142295    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1142296    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 791 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 791 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142297    proc sort data=EMWS8.AutoNeural32_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural32_variableset out=_temp2(keep=NAME 
CREATOR);
1142298    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1142299    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS8.AUTONEURAL32_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1142300    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1142301    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1142302    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1142303    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142304    proc contents data=EMWS8.AutoNeural32_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural32_train out=_meta(keep=NAME) noprint;
1142305    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1142306    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1142307    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1142308    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142309    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1142310    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1142311    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1142312    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1142313    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1142314    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1142314  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 419 rows and 5 columns.

1142315    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142316    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1142317    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 419 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 419 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142318    filename _pref
1142318  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1142319    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1142320    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1142321   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1142322   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1142323   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1142324   +
1142325   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1142326   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1142327   +
1142328   +
1142329   +/*----G_Marital_Status begin----*/
1142330   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1142331   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1142332   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1142333   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1142334   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1142335   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1142336   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1142337   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1142338   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1142339   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1142340   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1142341   +end;
MPRINT(EM_DIAGRAM):   end;
1142342   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1142343   +/*----G_Marital_Status end----*/
1142344   +
1142345   +
1142346   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
1142347   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1142348   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1142349    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1142350    quit;
1142351    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1142352    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1142353    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1142354    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1142355    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1142356    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1142357    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1142358    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1142359    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142360    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1142361    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1142362    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142363    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1142364    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1142365    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1142366    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142367    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1142368    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1142369    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1142370    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1142371    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142372    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1142373    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1142374    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1142375    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142376    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1142377    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1142377  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

1142378    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1142379    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1142380    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 422 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142381    filename _pref
1142381  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1142382    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1142383    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1142384   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1142385   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1142386   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1142387   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1142388   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1142389   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1142390    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1142391    quit;
1142392    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1142393    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1142394    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1142395    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1142396    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1142397    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142398    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1142399    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1142400    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1142401    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1142402    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1142403    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142404    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1142405    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1142406    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1142407    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142408    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1142409    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1142410    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1142411    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1142412    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142413    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1142414    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1142415    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1142416    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1142417    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1142418    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1142418  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1142419    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142420    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1142421    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 426 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142422    filename _pref
1142422  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1142423    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1142424    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1142425   +
1142426   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1142427   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1142427  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1142428   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1142429   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1142430   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1142431   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1142432   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1142433    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1142434    quit;
1142435    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1142436    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1142437    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1142438    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1142439    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1142440    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142441    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1142442    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1142443    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1142444    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1142445    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1142446    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142447    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1142448    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1142449    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1142450    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142451    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1142452    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142453    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1142454    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1142455    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1142456    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1142457    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1142458    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1142459    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142460    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1142461    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1142461  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1142462    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142463    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1142464    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 465 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142465    filename _pref
1142465  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1142466    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1142467    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1142468   +
1142469   +
1142470   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1142471   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1142472   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1142473   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1142474   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1142475   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1142476   +
1142477   +
1142478   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1142479   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1142480   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1142481   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1142482   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1142483   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1142484   +
1142485   +
1142486   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1142487   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1142488   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1142489   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1142490   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1142491   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1142492   +
1142493   +
1142494   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1142495   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1142496   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1142497   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1142498   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1142499   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1142500   +
1142501   +
1142502   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1142503   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1142504   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1142505   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1142506   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1142507   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1142508   +
1142509   +
1142510   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1142511   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1142512   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1142513   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1142514   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1142515   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1142516   +
1142517   +
1142518   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1142519   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1142520   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1142521   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1142522   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1142523   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1142524   +
1142525   +
1142526   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1142527   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1142528   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1142529   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1142530   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1142531   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1142532   +if
1142533   +_FILTERNORM1 not in ( '.')
1142534   + and
1142535   +_FILTERNORM2 not in ( '.')
1142536   + and
1142537   +_FILTERNORM3 not in ( '.')
1142538   + and
1142539   +_FILTERNORM4 not in ( '.')
1142540   + and
1142541   +_FILTERNORM5 not in ( '.')
1142542   + and
1142543   +_FILTERNORM6 not in ( '.')
1142544   + and
1142545   +_FILTERNORM7 not in ( ' ')
1142546   + and
1142547   +_FILTERNORM8 not in ( ' ')
1142548   +and
1142549   +( Dt_Customer ne .)
1142550   +and ( Income ne . and (Income<=107000))
1142551   +and ( Kidhome ne .)
1142552   +and ( MntFishProducts ne .)
1142553   +and ( MntFruits ne .)
1142554   +and ( MntGoldProds ne .)
1142555   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1142556   +and ( MntSweetProducts ne .)
1142557   +and ( MntWines ne .)
1142558   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1142559   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1142560   +and ( NumStorePurchases ne .)
1142561   +and ( NumWebPurchases ne .)
1142562   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1142563   +and ( Recency ne .)
1142564   +and ( Teenhome ne .)
1142565   +and ( Year_Birth ne .)
1142566   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1142567   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1142568   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1142569   +end;
MPRINT(EM_DIAGRAM):   end;
1142570   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1142571   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1142572    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1142573    quit;
1142574    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1142575    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1142576    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1142577    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1142578    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1142579    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142580    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1142581    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1142582    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142583    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1142584    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1142585    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1142586    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1142587    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1142588    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1142589    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142590    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1142591    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1142592    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1142593    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1142594    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1142595    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1142596    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1142597    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1142598    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142599    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1142600    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1142600  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1142601    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142602    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1142603    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 531 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1142604    %macro varDept(fcmpdata=,id=);
1142605    %global nobs&id scoreFlag&id;
1142606    %let scoreFlag&id = 0;
1142607    %if &id=1 or ^&fcmpStart %then %do;
1142608    proc sort data=&fcmpdata out=_temp&id nodupkey;
1142609    by NAME;
1142610    where id=&id and LHS in( %let j=1;
1142611    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1142612    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1142613    "&var" %let j = %eval(&j+1);
1142614    %end;
1142615    );
1142616    run;
1142617    %let dsid = %sysfunc(open(_temp&id));
1142618    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1142619    %let dsid = %sysfunc(close(&dsid));
1142620    %if &&nobs&id %then %do;
1142621    %let scoreFlag&id = 1;
1142622    %let fcmpStart = 1;
1142623    %end;
1142624    %else %let fcmpStart = 0;
1142625    %end;
1142626    %else %do;
1142627    proc sort data=&fcmpdata out=_tempid;
1142628    where id=&id;
1142629    by LHS;
1142630    run;
1142631    %let dsid = %sysfunc(open(_tempid));
1142632    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1142633    %let dsid = %sysfunc(close(&dsid));
1142634    %if ^&&nobs&id %then %do;
1142635    proc datasets lib=work nolist;
1142636    delete _tempid;
1142637    run;
1142638    quit;
1142639    %end;
1142640    %else %do;
1142641    data _tempAll;
1142642    set %let j=%eval(&id-1);
1142643    %do x=1 %to &j;
1142644    %if &&nobs&x %then %do;
1142645    _temp&x %end;
1142646    %end;
1142647    ;
1142648    run;
1142649    proc sql;
1142650    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1142650  ! work._tempid p2 where p.name=p2.lhs;
1142651    quit;
1142652    data _temp&id;
1142653    set _temp&id;
1142654    where LHS ne '' and NAME ne '' and Node ne '';
1142655    run;
1142656    proc datasets lib=work nolist;
1142657    delete _tempAll;
1142658    run;
1142659    %let dsid = %sysfunc(open(_temp&id));
1142660    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1142661    %let dsid = %sysfunc(close(&dsid));
1142662    %if ^&&nobs&id %then %do;
1142663    proc datasets lib=work nolist;
1142664    delete _temp&id;
1142665    run;
1142666    quit;
1142667    %end;
1142668    %else %do;
1142669    %let scoreFlag&id = 1;
1142670    data _temp&id;
1142671    set _temp&id;
1142672    where LHS ne NAME and node ne '';
1142673    run;
1142674    %let dsid = %sysfunc(open(_temp&id));
1142675    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1142676    %let dsid = %sysfunc(close(&dsid));
1142677    %if ^&&nobs&id %then %do;
1142678    proc datasets lib=work nolist;
1142679    delete _temp&id;
1142680    run;
1142681    quit;
1142682    %end;
1142683    %else %do;
1142684    proc sort data=_temp&id nodupkey;
1142685    by LHS NAME;
1142686    run;
1142687    %end;
1142688    %end;
1142689    %end;
1142690    %end;
1142691    %mend varDept;
1142692    %macro optCode(outdata=fcmpdata);
1142693    %global fcmpStart;
1142694    %let fcmpStart = 0;
1142695    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1142696    %let NumNodes=9;
1142697    %do k=1 %to &NumNodes;
1142698    %vardept(fcmpdata=&outdata, id=&k);
1142699    %end;
1142700    %mend optCode;
1142701    %optcode(outData=EMWS8.Ensmbl51_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 63 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 46 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 20 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 57 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1142702    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1142703    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1142704    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1142705    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142706    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1142707    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1142708    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1142709    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142710    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1142711    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1142711  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1142712    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1142713    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1142714    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1142715    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142716    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1142717    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1142718    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1142719    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142720    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1142721    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1142722    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1142723    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142724    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1142725    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1142725  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

1142726    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1142727    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1142728    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1142729    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1142730    filename _pref
1142730  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMPUBLISHSCORE.sas";
1142731    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1142732    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMPUBLISHSCORE.sas.
1142733   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1142734   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1142735   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1142736   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1142737   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1142738   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1142739   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1142740   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1142741   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1142742   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1142743   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1142744   +LENGTH _WARN_ $4
1142745   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1142746   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1142747   +
1142748   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1142749   +
1142750   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1142751   +
1142752   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1142753   +
1142754   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1142755   +
1142756   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1142757   +
1142758   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1142759   +
1142760   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1142761   +
1142762   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1142763   +
1142764   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1142765   +
1142766   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1142767   +
1142768   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1142769   +
1142770   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1142771   +
1142772   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1142773   +
1142774   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1142775   +
1142776   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1142777   +
1142778   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1142779   +
1142780   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1142781   +
1142782   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1142783   +
1142784   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1142785   +
1142786   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1142787   +
1142788   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1142789   +
1142790   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1142791   +
1142792   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1142793   +
1142794   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1142795   +
1142796   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1142797   +
1142798   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1142799   +
1142800   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1142801   +
1142802   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1142803   +
1142804   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1142805   +
1142806   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1142807   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1142808   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1142809   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1142810   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1142811   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1142812   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1142813   +end;
MPRINT(EM_DIAGRAM):   end;
1142814   +else do;
MPRINT(EM_DIAGRAM):   else do;
1142815   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1142816   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1142817   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1142818   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1142819   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1142820   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1142821   +   end;
MPRINT(EM_DIAGRAM):   end;
1142822   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1142823   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1142824   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1142825   +   end;
MPRINT(EM_DIAGRAM):   end;
1142826   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1142827   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1142828   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1142829   +   end;
MPRINT(EM_DIAGRAM):   end;
1142830   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1142831   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1142832   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1142833   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1142834   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1142835   +   end;
MPRINT(EM_DIAGRAM):   end;
1142836   +end;
MPRINT(EM_DIAGRAM):   end;
1142837   +
1142838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142839   +*** Checking missing input Interval
1142840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1142841   +
1142842   +IF NMISS(
1142843   +   AcceptedCmpTotal ,
1142844   +   Frq ,
1142845   +   Income ,
1142846   +   Mnt ,
1142847   +   MntGoldProds ,
1142848   +   MntMeatProducts ,
1142849   +   MntWines ,
1142850   +   NumDistPurchases ,
1142851   +   RFMstat ,
1142852   +   RMntFrq ,
1142853   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1142854   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1142855   +
1142856   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1142857   +END;
MPRINT(EM_DIAGRAM):   END;
1142858   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142859   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1142860   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142861   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1142862   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1142863   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1142864   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1142865   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1142866   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1142867   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1142868   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1142869   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1142870   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1142871   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1142872   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1142873   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1142874   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1142875   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1142876   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1142877   +END;
MPRINT(EM_DIAGRAM):   END;
1142878   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1142879   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1142880   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1142881   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1142882   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1142883   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1142884   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1142885   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1142886   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1142887   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1142888   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1142889   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1142890   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1142891   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1142892   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1142893   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1142894   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1142895   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1142896   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1142897   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1142898   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1142899   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1142900   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1142901   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1142902   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1142903   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1142904   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1142905   +END;
MPRINT(EM_DIAGRAM):   END;
1142906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142907   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1142908   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142909   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142910   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1142911   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142912   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1142913   +   H1x1_1  =     0.03659823017812 * S_AcceptedCmpTotal
1142914   +          +    -1.19763341876145 * S_Frq  +     0.81238202822952 * S_Income
1142915   +          +     1.88011676145119 * S_Mnt  +     0.17620967209108 *
1142916   +        S_MntGoldProds  +    -0.01645582313184 * S_MntMeatProducts
1142917   +          +     0.51002049519212 * S_MntWines  +     0.25222197723244 *
1142918   +        S_NumDistPurchases  +     0.28056722928561 * S_RFMstat
1142919   +          +    -1.12243193103334 * S_RMntFrq  +    -0.37511560424314 *
1142920   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.03659823017812 * S_AcceptedCmpTotal + -1.19763341876145 * 
S_Frq + 0.81238202822952 * S_Income + 1.88011676145119 * S_Mnt + 0.17620967209108 * 
S_MntGoldProds + -0.01645582313184 * S_MntMeatProducts + 0.51002049519212 * S_MntWines + 
0.25222197723244 * S_NumDistPurchases + 0.28056722928561 * S_RFMstat + -1.12243193103334 * 
S_RMntFrq + -0.37511560424314 * S_Recency ;
1142921   +   H1x1_2  =     0.18983412995843 * S_AcceptedCmpTotal
1142922   +          +    -0.36018162246349 * S_Frq  +     0.01068760327542 * S_Income
1142923   +          +    -0.89719147415619 * S_Mnt  +     0.11241727599926 *
1142924   +        S_MntGoldProds  +     0.64236815353055 * S_MntMeatProducts
1142925   +          +     0.36278145113777 * S_MntWines  +     0.34466813565445 *
1142926   +        S_NumDistPurchases  +     0.05359534034679 * S_RFMstat
1142927   +          +     0.02704700607418 * S_RMntFrq  +     -0.3718472688023 *
1142928   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.18983412995843 * S_AcceptedCmpTotal + -0.36018162246349 * 
S_Frq + 0.01068760327542 * S_Income + -0.89719147415619 * S_Mnt + 0.11241727599926 * 
S_MntGoldProds + 0.64236815353055 * S_MntMeatProducts + 0.36278145113777 * S_MntWines + 
0.34466813565445 * S_NumDistPurchases + 0.05359534034679 * S_RFMstat + 0.02704700607418 * 
S_RMntFrq + -0.3718472688023 * S_Recency ;
1142929   +   H1x1_1  = H1x1_1  +     0.40642305557546 * G_Marital_Status0
1142930   +          +     -0.0248646279252 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.40642305557546 * G_Marital_Status0 + 
-0.0248646279252 * G_Marital_Status1 ;
1142931   +   H1x1_2  = H1x1_2  +     0.16115803721995 * G_Marital_Status0
1142932   +          +     0.05904755469144 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.16115803721995 * G_Marital_Status0 + 
0.05904755469144 * G_Marital_Status1 ;
1142933   +   H1x1_1  =     0.33463349044957 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.33463349044957 + H1x1_1 ;
1142934   +   H1x1_2  =    -3.62976809107266 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.62976809107266 + H1x1_2 ;
1142935   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1142936   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1142937   +END;
MPRINT(EM_DIAGRAM):   END;
1142938   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1142939   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1142940   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1142941   +END;
MPRINT(EM_DIAGRAM):   END;
1142942   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142943   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1142944   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142945   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1142946   +   H1x2_1  =    -0.36010169192455 * S_AcceptedCmpTotal
1142947   +          +    -0.59887603386433 * S_Frq  +     0.50990837522658 * S_Income
1142948   +          +    -1.11866059151852 * S_Mnt  +     0.36285188228582 *
1142949   +        S_MntGoldProds  +     1.22856170475832 * S_MntMeatProducts
1142950   +          +     1.46123404932164 * S_MntWines  +    -0.01510122045686 *
1142951   +        S_NumDistPurchases  +     0.53310564732407 * S_RFMstat
1142952   +          +    -0.40691094193511 * S_RMntFrq  +     0.45756644061361 *
1142953   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.36010169192455 * S_AcceptedCmpTotal + -0.59887603386433 * 
S_Frq + 0.50990837522658 * S_Income + -1.11866059151852 * S_Mnt + 0.36285188228582 * 
S_MntGoldProds + 1.22856170475832 * S_MntMeatProducts + 1.46123404932164 * S_MntWines + 
-0.01510122045686 * S_NumDistPurchases + 0.53310564732407 * S_RFMstat + -0.40691094193511 * 
S_RMntFrq + 0.45756644061361 * S_Recency ;
1142954   +   H1x2_2  =    -0.17932261343465 * S_AcceptedCmpTotal
1142955   +          +     1.20080978426162 * S_Frq  +     0.18118647708641 * S_Income
1142956   +          +     0.31901116297924 * S_Mnt  +     0.02135897416621 *
1142957   +        S_MntGoldProds  +    -1.12534829348468 * S_MntMeatProducts
1142958   +          +     0.57649851666461 * S_MntWines  +    -1.46542585484816 *
1142959   +        S_NumDistPurchases  +    -0.20960777623629 * S_RFMstat
1142960   +          +      0.6962031545587 * S_RMntFrq  +     0.00840421006739 *
1142961   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.17932261343465 * S_AcceptedCmpTotal + 1.20080978426162 * 
S_Frq + 0.18118647708641 * S_Income + 0.31901116297924 * S_Mnt + 0.02135897416621 * 
S_MntGoldProds + -1.12534829348468 * S_MntMeatProducts + 0.57649851666461 * S_MntWines + 
-1.46542585484816 * S_NumDistPurchases + -0.20960777623629 * S_RFMstat + 0.6962031545587 * 
S_RMntFrq + 0.00840421006739 * S_Recency ;
1142962   +   H1x2_1  = H1x2_1  +    -0.05195034052296 * G_Marital_Status0
1142963   +          +     -0.2774675863976 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.05195034052296 * G_Marital_Status0 + 
-0.2774675863976 * G_Marital_Status1 ;
1142964   +   H1x2_2  = H1x2_2  +     0.01901604294952 * G_Marital_Status0
1142965   +          +      -0.277144006775 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.01901604294952 * G_Marital_Status0 + -0.277144006775 
* G_Marital_Status1 ;
1142966   +   H1x2_1  =     1.53233871423223 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.53233871423223 + H1x2_1 ;
1142967   +   H1x2_2  =     1.35238678006556 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.35238678006556 + H1x2_2 ;
1142968   +   H1x2_1  = SIN(H1x2_1 );
MPRINT(EM_DIAGRAM):   H1x2_1 = SIN(H1x2_1 );
1142969   +   H1x2_2  = SIN(H1x2_2 );
MPRINT(EM_DIAGRAM):   H1x2_2 = SIN(H1x2_2 );
1142970   +END;
MPRINT(EM_DIAGRAM):   END;
1142971   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1142972   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1142973   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1142974   +END;
MPRINT(EM_DIAGRAM):   END;
1142975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142976   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1142977   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1142978   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1142979   +   H1x3_1  =     1.63523210720409 * S_AcceptedCmpTotal
1142980   +          +     0.41751349520438 * S_Frq  +    -0.87449723255309 * S_Income
1142981   +          +    -0.47825070320724 * S_Mnt  +     0.76630810205636 *
1142982   +        S_MntGoldProds  +    -0.35835365889925 * S_MntMeatProducts
1142983   +          +    -1.27333688175297 * S_MntWines  +    -1.52770581313638 *
1142984   +        S_NumDistPurchases  +     0.86851574498866 * S_RFMstat
1142985   +          +     0.84614746872207 * S_RMntFrq  +    -1.64268632744477 *
1142986   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.63523210720409 * S_AcceptedCmpTotal + 0.41751349520438 * 
S_Frq + -0.87449723255309 * S_Income + -0.47825070320724 * S_Mnt + 0.76630810205636 * 
S_MntGoldProds + -0.35835365889925 * S_MntMeatProducts + -1.27333688175297 * S_MntWines + 
-1.52770581313638 * S_NumDistPurchases + 0.86851574498866 * S_RFMstat + 0.84614746872207 * 
S_RMntFrq + -1.64268632744477 * S_Recency ;
1142987   +   H1x3_2  =    -0.18638529120439 * S_AcceptedCmpTotal
1142988   +          +     0.76011175462816 * S_Frq  +     0.58495336465132 * S_Income
1142989   +          +     0.65856698208574 * S_Mnt  +     0.68781212622472 *
1142990   +        S_MntGoldProds  +    -1.09375532907934 * S_MntMeatProducts
1142991   +          +     1.39481639500189 * S_MntWines  +     0.26914802103737 *
1142992   +        S_NumDistPurchases  +    -2.20511156805519 * S_RFMstat
1142993   +          +     1.66705142994155 * S_RMntFrq  +    -0.36249885315985 *
1142994   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.18638529120439 * S_AcceptedCmpTotal + 0.76011175462816 * 
S_Frq + 0.58495336465132 * S_Income + 0.65856698208574 * S_Mnt + 0.68781212622472 * 
S_MntGoldProds + -1.09375532907934 * S_MntMeatProducts + 1.39481639500189 * S_MntWines + 
0.26914802103737 * S_NumDistPurchases + -2.20511156805519 * S_RFMstat + 1.66705142994155 * 
S_RMntFrq + -0.36249885315985 * S_Recency ;
1142995   +   H1x3_1  = H1x3_1  +     -0.2579393569494 * G_Marital_Status0
1142996   +          +    -1.04614665932456 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.2579393569494 * G_Marital_Status0 + 
-1.04614665932456 * G_Marital_Status1 ;
1142997   +   H1x3_2  = H1x3_2  +    -1.03096078089306 * G_Marital_Status0
1142998   +          +    -0.71974289565489 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.03096078089306 * G_Marital_Status0 + 
-0.71974289565489 * G_Marital_Status1 ;
1142999   +   H1x3_1  =    -0.91456189694636 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.91456189694636 + H1x3_1 ;
1143000   +   H1x3_2  =    -0.51701043559885 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.51701043559885 + H1x3_2 ;
1143001   +   H1x3_1  = SIN(H1x3_1 );
MPRINT(EM_DIAGRAM):   H1x3_1 = SIN(H1x3_1 );
1143002   +   H1x3_2  = SIN(H1x3_2 );
MPRINT(EM_DIAGRAM):   H1x3_2 = SIN(H1x3_2 );
1143003   +END;
MPRINT(EM_DIAGRAM):   END;
1143004   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1143005   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1143006   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1143007   +END;
MPRINT(EM_DIAGRAM):   END;
1143008   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143009   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1143010   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143011   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1143012   +   H2x1_1  =     1.47132066677712 * H1x1_1  +      1.2723487532385 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.47132066677712 * H1x1_1 + 1.2723487532385 * H1x1_2 ;
1143013   +   H2x1_2  =     1.58711243971308 * H1x1_1  +      6.5189759089623 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.58711243971308 * H1x1_1 + 6.5189759089623 * H1x1_2 ;
1143014   +   H2x1_1  = H2x1_1  +     1.30878911727231 * H1x2_1
1143015   +          +     2.19496661698373 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.30878911727231 * H1x2_1 + 2.19496661698373 * H1x2_2 ;
1143016   +   H2x1_2  = H2x1_2  +    -3.82744270061369 * H1x2_1
1143017   +          +      1.3090956402929 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -3.82744270061369 * H1x2_1 + 1.3090956402929 * H1x2_2 ;
1143018   +   H2x1_1  = H2x1_1  +    -0.97307968271784 * H1x3_1
1143019   +          +     0.17025511053322 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.97307968271784 * H1x3_1 + 0.17025511053322 * H1x3_2 
;
1143020   +   H2x1_2  = H2x1_2  +    -0.00685159977192 * H1x3_1
1143021   +          +     0.53377830648041 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.00685159977192 * H1x3_1 + 0.53377830648041 * H1x3_2 
;
1143022   +   H2x1_1  =    -2.88828567261654 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -2.88828567261654 + H2x1_1 ;
1143023   +   H2x1_2  =    -0.63666932052712 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.63666932052712 + H2x1_2 ;
1143024   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1143025   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1143026   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1143027   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1143028   +END;
MPRINT(EM_DIAGRAM):   END;
1143029   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1143030   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1143031   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1143032   +END;
MPRINT(EM_DIAGRAM):   END;
1143033   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143034   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1143035   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143036   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1143037   +   H2x2_1  =     -0.1591646734645 * H1x1_1  +     2.50898584287812 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.1591646734645 * H1x1_1 + 2.50898584287812 * H1x1_2 ;
1143038   +   H2x2_2  =    -1.04022138862095 * H1x1_1  +     -3.2120641538371 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.04022138862095 * H1x1_1 + -3.2120641538371 * H1x1_2 ;
1143039   +   H2x2_1  = H2x2_1  +     0.95364577994168 * H1x2_1
1143040   +          +     0.39917449615996 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.95364577994168 * H1x2_1 + 0.39917449615996 * H1x2_2 ;
1143041   +   H2x2_2  = H2x2_2  +     0.34367752685876 * H1x2_1
1143042   +          +    -0.43345610313251 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.34367752685876 * H1x2_1 + -0.43345610313251 * H1x2_2 
;
1143043   +   H2x2_1  = H2x2_1  +    -0.21053791455319 * H1x3_1
1143044   +          +     1.30320774323126 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.21053791455319 * H1x3_1 + 1.30320774323126 * H1x3_2 
;
1143045   +   H2x2_2  = H2x2_2  +    -0.56776778702573 * H1x3_1
1143046   +          +     0.23307461428861 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.56776778702573 * H1x3_1 + 0.23307461428861 * H1x3_2 
;
1143047   +   H2x2_1  =    -0.57800274966727 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.57800274966727 + H2x2_1 ;
1143048   +   H2x2_2  =     -0.3490585254981 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.3490585254981 + H2x2_2 ;
1143049   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1143050   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1143051   +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
1143052   +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
1143053   +END;
MPRINT(EM_DIAGRAM):   END;
1143054   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1143055   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1143056   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1143057   +END;
MPRINT(EM_DIAGRAM):   END;
1143058   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143059   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1143060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143061   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1143062   +   H3x1_1  =     2.93892662286754 * H2x1_1  +     4.69530667636314 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 2.93892662286754 * H2x1_1 + 4.69530667636314 * H2x1_2 ;
1143063   +   H3x1_1  = H3x1_1  +     0.63147427004529 * H2x2_1
1143064   +          +    -3.38971951524722 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 0.63147427004529 * H2x2_1 + -3.38971951524722 * H2x2_2 
;
1143065   +   H3x1_1  =    -2.10378320265168 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -2.10378320265168 + H3x1_1 ;
1143066   +   H3x1_2  = 0;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0;
1143067   +   _MAX_ = MAX (H3x1_1 , H3x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 );
1143068   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1143069   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
1143070   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
1143071   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
1143072   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
1143073   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
1143074   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
1143075   +END;
MPRINT(EM_DIAGRAM):   END;
1143076   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1143077   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1143078   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1143079   +END;
MPRINT(EM_DIAGRAM):   END;
1143080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143081   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1143082   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143083   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1143084   +   P_DepVar1  =    -8.80200545202031 * H3x1_1  +    -0.19646708431763 * H3x1_2
1143085   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -8.80200545202031 * H3x1_1 + -0.19646708431763 * H3x1_2 ;
1143086   +   P_DepVar1  =     3.75158164611687 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.75158164611687 + P_DepVar1 ;
1143087   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1143088   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1143089   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1143090   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1143091   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1143092   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1143093   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1143094   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1143095   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1143096   +END;
MPRINT(EM_DIAGRAM):   END;
1143097   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1143098   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1143099   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1143100   +END;
MPRINT(EM_DIAGRAM):   END;
1143101   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1143102   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1143103   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1143104   +END;
MPRINT(EM_DIAGRAM):   END;
1143105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143106   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1143107   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143108   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1143109   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1143110   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1143111   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1143112   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1143113   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1143114   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1143115   +END;
MPRINT(EM_DIAGRAM):   END;
1143116   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1143117   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1143118   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1143119   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1143120    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1143121    quit;
1143122    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1143123    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1143124    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1143125    retain ID 2 Node "AutoNeural31";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural31";
1143126    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1143127    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1711 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1711 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143128    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1143129    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143130    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1711 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1711 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1143131    proc sort data=EMWS8.AutoNeural31_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural31_variableset out=_temp2(keep=NAME 
CREATOR);
1143132    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143133    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS8.AUTONEURAL31_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143134    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1143135    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1143136    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1143137    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143138    proc contents data=EMWS8.AutoNeural31_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural31_train out=_meta(keep=NAME) noprint;
1143139    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 66 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1143140    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1143141    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143142    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 66 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 66 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1143143    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1143144    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1143145    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143146    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 66 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 66 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143147    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1143148    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1143148  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 843 rows and 5 columns.

1143149    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143150    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1143151    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 843 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 843 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1143152    filename _pref
1143152  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1143153    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1143154    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1143155   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1143156   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1143157   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1143158   +
1143159   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1143160   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1143161   +
1143162   +
1143163   +/*----G_Marital_Status begin----*/
1143164   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1143165   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1143166   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1143167   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1143168   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1143169   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1143170   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1143171   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1143172   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1143173   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1143174   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1143175   +end;
MPRINT(EM_DIAGRAM):   end;
1143176   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1143177   +/*----G_Marital_Status end----*/
1143178   +
1143179   +
1143180   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
1143181   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1143182   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1143183    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1143184    quit;
1143185    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1143186    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1143187    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1143188    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1143189    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1143190    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143191    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1143192    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143193    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1143194    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1143195    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143196    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143197    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1143198    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1143199    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1143200    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143201    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1143202    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1143203    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1143204    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143205    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1143206    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1143207    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1143208    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143209    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143210    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1143211    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1143211  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

1143212    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143213    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1143214    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 846 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1143215    filename _pref
1143215  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1143216    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1143217    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1143218   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1143219   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1143220   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1143221   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1143222   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1143223   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1143224    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1143225    quit;
1143226    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1143227    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1143228    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1143229    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1143230    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1143231    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143232    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1143233    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143234    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143235    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1143236    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143237    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143238    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1143239    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1143240    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1143241    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1143242    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1143243    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1143244    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1143245    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143246    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1143247    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1143248    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1143249    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143250    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143251    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1143252    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1143252  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1143253    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143254    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1143255    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 850 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1143256    filename _pref
1143256  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1143257    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1143258    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1143259   +
1143260   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1143261   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1143261  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1143262   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1143263   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1143264   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1143265   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1143266   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1143267    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1143268    quit;
1143269    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1143270    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1143271    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1143272    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1143273    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1143274    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1143275    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1143276    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143277    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143278    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1143279    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143280    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143281    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1143282    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1143283    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1143284    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1143285    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1143286    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143287    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1143288    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143289    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143290    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1143291    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1143292    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143293    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143294    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1143295    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1143295  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1143296    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143297    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1143298    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 889 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143299    filename _pref
1143299  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1143300    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1143301    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1143302   +
1143303   +
1143304   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1143305   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1143306   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1143307   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1143308   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1143309   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1143310   +
1143311   +
1143312   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1143313   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1143314   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1143315   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1143316   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1143317   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1143318   +
1143319   +
1143320   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1143321   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1143322   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1143323   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1143324   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1143325   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1143326   +
1143327   +
1143328   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1143329   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1143330   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1143331   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1143332   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1143333   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1143334   +
1143335   +
1143336   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1143337   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1143338   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1143339   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1143340   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1143341   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1143342   +
1143343   +
1143344   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1143345   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1143346   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1143347   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1143348   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1143349   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1143350   +
1143351   +
1143352   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1143353   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1143354   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1143355   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1143356   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1143357   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1143358   +
1143359   +
1143360   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1143361   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1143362   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1143363   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1143364   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1143365   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1143366   +if
1143367   +_FILTERNORM1 not in ( '.')
1143368   + and
1143369   +_FILTERNORM2 not in ( '.')
1143370   + and
1143371   +_FILTERNORM3 not in ( '.')
1143372   + and
1143373   +_FILTERNORM4 not in ( '.')
1143374   + and
1143375   +_FILTERNORM5 not in ( '.')
1143376   + and
1143377   +_FILTERNORM6 not in ( '.')
1143378   + and
1143379   +_FILTERNORM7 not in ( ' ')
1143380   + and
1143381   +_FILTERNORM8 not in ( ' ')
1143382   +and
1143383   +( Dt_Customer ne .)
1143384   +and ( Income ne . and (Income<=107000))
1143385   +and ( Kidhome ne .)
1143386   +and ( MntFishProducts ne .)
1143387   +and ( MntFruits ne .)
1143388   +and ( MntGoldProds ne .)
1143389   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1143390   +and ( MntSweetProducts ne .)
1143391   +and ( MntWines ne .)
1143392   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1143393   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1143394   +and ( NumStorePurchases ne .)
1143395   +and ( NumWebPurchases ne .)
1143396   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1143397   +and ( Recency ne .)
1143398   +and ( Teenhome ne .)
1143399   +and ( Year_Birth ne .)
1143400   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1143401   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1143402   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1143403   +end;
MPRINT(EM_DIAGRAM):   end;
1143404   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1143405   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1143406    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1143407    quit;
1143408    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1143409    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1143410    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1143411    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1143412    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1143413    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143414    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1143415    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143416    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1143417    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1143418    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143419    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143420    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1143421    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1143422    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1143423    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143424    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1143425    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1143426    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1143427    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143428    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143429    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1143430    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1143431    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143432    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143433    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1143434    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1143434  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1143435    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143436    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1143437    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 955 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143438    %macro varDept(fcmpdata=,id=);
1143439    %global nobs&id scoreFlag&id;
1143440    %let scoreFlag&id = 0;
1143441    %if &id=1 or ^&fcmpStart %then %do;
1143442    proc sort data=&fcmpdata out=_temp&id nodupkey;
1143443    by NAME;
1143444    where id=&id and LHS in( %let j=1;
1143445    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1143446    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1143447    "&var" %let j = %eval(&j+1);
1143448    %end;
1143449    );
1143450    run;
1143451    %let dsid = %sysfunc(open(_temp&id));
1143452    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1143453    %let dsid = %sysfunc(close(&dsid));
1143454    %if &&nobs&id %then %do;
1143455    %let scoreFlag&id = 1;
1143456    %let fcmpStart = 1;
1143457    %end;
1143458    %else %let fcmpStart = 0;
1143459    %end;
1143460    %else %do;
1143461    proc sort data=&fcmpdata out=_tempid;
1143462    where id=&id;
1143463    by LHS;
1143464    run;
1143465    %let dsid = %sysfunc(open(_tempid));
1143466    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1143467    %let dsid = %sysfunc(close(&dsid));
1143468    %if ^&&nobs&id %then %do;
1143469    proc datasets lib=work nolist;
1143470    delete _tempid;
1143471    run;
1143472    quit;
1143473    %end;
1143474    %else %do;
1143475    data _tempAll;
1143476    set %let j=%eval(&id-1);
1143477    %do x=1 %to &j;
1143478    %if &&nobs&x %then %do;
1143479    _temp&x %end;
1143480    %end;
1143481    ;
1143482    run;
1143483    proc sql;
1143484    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1143484  ! work._tempid p2 where p.name=p2.lhs;
1143485    quit;
1143486    data _temp&id;
1143487    set _temp&id;
1143488    where LHS ne '' and NAME ne '' and Node ne '';
1143489    run;
1143490    proc datasets lib=work nolist;
1143491    delete _tempAll;
1143492    run;
1143493    %let dsid = %sysfunc(open(_temp&id));
1143494    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1143495    %let dsid = %sysfunc(close(&dsid));
1143496    %if ^&&nobs&id %then %do;
1143497    proc datasets lib=work nolist;
1143498    delete _temp&id;
1143499    run;
1143500    quit;
1143501    %end;
1143502    %else %do;
1143503    %let scoreFlag&id = 1;
1143504    data _temp&id;
1143505    set _temp&id;
1143506    where LHS ne NAME and node ne '';
1143507    run;
1143508    %let dsid = %sysfunc(open(_temp&id));
1143509    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1143510    %let dsid = %sysfunc(close(&dsid));
1143511    %if ^&&nobs&id %then %do;
1143512    proc datasets lib=work nolist;
1143513    delete _temp&id;
1143514    run;
1143515    quit;
1143516    %end;
1143517    %else %do;
1143518    proc sort data=_temp&id nodupkey;
1143519    by LHS NAME;
1143520    run;
1143521    %end;
1143522    %end;
1143523    %end;
1143524    %end;
1143525    %mend varDept;
1143526    %macro optCode(outdata=fcmpdata);
1143527    %global fcmpStart;
1143528    %let fcmpStart = 0;
1143529    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1143530    %let NumNodes=9;
1143531    %do k=1 %to &NumNodes;
1143532    %vardept(fcmpdata=&outdata, id=&k);
1143533    %end;
1143534    %mend optCode;
1143535    %optcode(outData=EMWS8.Ensmbl51_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 90 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 64 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 26 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 26 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 66 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1143536    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1143537    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1143538    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1143539    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143540    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1143541    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1143542    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1143543    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143544    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1143545    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1143545  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1143546    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1143547    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1143548    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1143549    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143550    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1143551    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1143552    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1143553    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143554    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1143555    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1143556    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1143557    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143558    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1143559    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1143559  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

1143560    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1143561    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1143562    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1143563    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143564    filename _pref
1143564  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural30\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural30\EMPUBLISHSCORE.sas";
1143565    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1143566    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural30\EMPUBLISHSCORE.sas.
1143567   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1143568   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1143569   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1143570   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1143571   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1143572   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1143573   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1143574   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1143575   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1143576   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1143577   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1143578   +LENGTH _WARN_ $4
1143579   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1143580   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1143581   +
1143582   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1143583   +
1143584   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1143585   +
1143586   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1143587   +
1143588   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1143589   +
1143590   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1143591   +
1143592   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1143593   +
1143594   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1143595   +
1143596   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1143597   +
1143598   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1143599   +
1143600   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1143601   +
1143602   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1143603   +
1143604   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1143605   +
1143606   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1143607   +
1143608   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1143609   +
1143610   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1143611   +
1143612   +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
1143613   +
1143614   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1143615   +
1143616   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1143617   +
1143618   +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
1143619   +
1143620   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1143621   +
1143622   +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
1143623   +
1143624   +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
1143625   +
1143626   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1143627   +
1143628   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1143629   +
1143630   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1143631   +
1143632   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1143633   +
1143634   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1143635   +
1143636   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1143637   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1143638   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1143639   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1143640   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1143641   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1143642   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1143643   +end;
MPRINT(EM_DIAGRAM):   end;
1143644   +else do;
MPRINT(EM_DIAGRAM):   else do;
1143645   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1143646   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1143647   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1143648   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1143649   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1143650   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1143651   +   end;
MPRINT(EM_DIAGRAM):   end;
1143652   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1143653   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1143654   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1143655   +   end;
MPRINT(EM_DIAGRAM):   end;
1143656   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1143657   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1143658   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1143659   +   end;
MPRINT(EM_DIAGRAM):   end;
1143660   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1143661   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1143662   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1143663   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1143664   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1143665   +   end;
MPRINT(EM_DIAGRAM):   end;
1143666   +end;
MPRINT(EM_DIAGRAM):   end;
1143667   +
1143668   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143669   +*** Checking missing input Interval
1143670   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1143671   +
1143672   +IF NMISS(
1143673   +   AcceptedCmpTotal ,
1143674   +   Frq ,
1143675   +   Income ,
1143676   +   Mnt ,
1143677   +   MntGoldProds ,
1143678   +   MntMeatProducts ,
1143679   +   MntWines ,
1143680   +   NumDistPurchases ,
1143681   +   RFMstat ,
1143682   +   RMntFrq ,
1143683   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1143684   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1143685   +
1143686   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1143687   +END;
MPRINT(EM_DIAGRAM):   END;
1143688   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143689   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1143690   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143691   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1143692   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1143693   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1143694   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1143695   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1143696   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1143697   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1143698   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1143699   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1143700   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1143701   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1143702   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1143703   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1143704   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1143705   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1143706   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1143707   +END;
MPRINT(EM_DIAGRAM):   END;
1143708   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1143709   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1143710   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1143711   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1143712   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1143713   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1143714   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1143715   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1143716   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1143717   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1143718   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1143719   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1143720   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1143721   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1143722   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1143723   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1143724   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1143725   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1143726   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1143727   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1143728   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1143729   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1143730   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1143731   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1143732   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1143733   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1143734   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1143735   +END;
MPRINT(EM_DIAGRAM):   END;
1143736   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143737   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1143738   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143739   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143740   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1143741   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143742   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1143743   +   H1x1_1  =     0.04025840082513 * S_AcceptedCmpTotal
1143744   +          +     0.06318752729093 * S_Frq  +    -1.29545791179409 * S_Income
1143745   +          +    -7.11030940481191 * S_Mnt  +     0.43390451556969 *
1143746   +        S_MntGoldProds  +     1.69733563869673 * S_MntMeatProducts
1143747   +          +     0.48225589030087 * S_MntWines  +     2.50429846731068 *
1143748   +        S_NumDistPurchases  +     0.19831933540707 * S_RFMstat
1143749   +          +     0.96752741277283 * S_RMntFrq  +    -0.27394913723816 *
1143750   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.04025840082513 * S_AcceptedCmpTotal + 0.06318752729093 * 
S_Frq + -1.29545791179409 * S_Income + -7.11030940481191 * S_Mnt + 0.43390451556969 * 
S_MntGoldProds + 1.69733563869673 * S_MntMeatProducts + 0.48225589030087 * S_MntWines + 
2.50429846731068 * S_NumDistPurchases + 0.19831933540707 * S_RFMstat + 0.96752741277283 * 
S_RMntFrq + -0.27394913723816 * S_Recency ;
1143751   +   H1x1_1  = H1x1_1  +    -0.13186660711464 * G_Marital_Status0
1143752   +          +     0.76507926337086 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.13186660711464 * G_Marital_Status0 + 
0.76507926337086 * G_Marital_Status1 ;
1143753   +   H1x1_1  =    -2.07751077372903 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.07751077372903 + H1x1_1 ;
1143754   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1143755   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1143756   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1143757   +END;
MPRINT(EM_DIAGRAM):   END;
1143758   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1143759   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1143760   +END;
MPRINT(EM_DIAGRAM):   END;
1143761   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143762   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1143763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143764   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1143765   +   H1x2_1  =     0.04623108287373 * S_AcceptedCmpTotal
1143766   +          +     0.51673349328259 * S_Frq  +    -0.55409697473564 * S_Income
1143767   +          +    -1.80152141029664 * S_Mnt  +    -0.01192709316085 *
1143768   +        S_MntGoldProds  +    -1.08887322486716 * S_MntMeatProducts
1143769   +          +    -0.54592829528894 * S_MntWines  +     0.87903819952137 *
1143770   +        S_NumDistPurchases  +     0.15549845875066 * S_RFMstat
1143771   +          +     0.64330086736687 * S_RMntFrq  +    -0.34615492895156 *
1143772   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.04623108287373 * S_AcceptedCmpTotal + 0.51673349328259 * 
S_Frq + -0.55409697473564 * S_Income + -1.80152141029664 * S_Mnt + -0.01192709316085 * 
S_MntGoldProds + -1.08887322486716 * S_MntMeatProducts + -0.54592829528894 * S_MntWines + 
0.87903819952137 * S_NumDistPurchases + 0.15549845875066 * S_RFMstat + 0.64330086736687 * 
S_RMntFrq + -0.34615492895156 * S_Recency ;
1143773   +   H1x2_1  = H1x2_1  +     0.04272112278258 * G_Marital_Status0
1143774   +          +     0.52128005949051 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.04272112278258 * G_Marital_Status0 + 
0.52128005949051 * G_Marital_Status1 ;
1143775   +   H1x2_1  =    -1.26211132425318 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.26211132425318 + H1x2_1 ;
1143776   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1143777   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1143778   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1143779   +END;
MPRINT(EM_DIAGRAM):   END;
1143780   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1143781   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1143782   +END;
MPRINT(EM_DIAGRAM):   END;
1143783   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143784   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1143785   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143786   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1143787   +   H1x3_1  =    -0.31931196892076 * S_AcceptedCmpTotal
1143788   +          +     0.88013014607652 * S_Frq  +       2.380671405121 * S_Income
1143789   +          +    -1.76438631408259 * S_Mnt  +    -0.88002382547081 *
1143790   +        S_MntGoldProds  +     3.22143288077158 * S_MntMeatProducts
1143791   +          +    -1.46872497431142 * S_MntWines  +     4.48983574481035 *
1143792   +        S_NumDistPurchases  +     1.49229101598701 * S_RFMstat
1143793   +          +     0.86000773065844 * S_RMntFrq  +     0.41345680894813 *
1143794   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.31931196892076 * S_AcceptedCmpTotal + 0.88013014607652 * 
S_Frq + 2.380671405121 * S_Income + -1.76438631408259 * S_Mnt + -0.88002382547081 * 
S_MntGoldProds + 3.22143288077158 * S_MntMeatProducts + -1.46872497431142 * S_MntWines + 
4.48983574481035 * S_NumDistPurchases + 1.49229101598701 * S_RFMstat + 0.86000773065844 * 
S_RMntFrq + 0.41345680894813 * S_Recency ;
1143795   +   H1x3_1  = H1x3_1  +     0.24244728138592 * G_Marital_Status0
1143796   +          +     0.68199092237732 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.24244728138592 * G_Marital_Status0 + 
0.68199092237732 * G_Marital_Status1 ;
1143797   +   H1x3_1  =      0.8344057531016 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.8344057531016 + H1x3_1 ;
1143798   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1143799   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1143800   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1143801   +END;
MPRINT(EM_DIAGRAM):   END;
1143802   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1143803   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1143804   +END;
MPRINT(EM_DIAGRAM):   END;
1143805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143806   +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
1143807   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143808   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1143809   +   H1x4_1  =    -0.13659878639954 * S_AcceptedCmpTotal
1143810   +          +     0.45428559765776 * S_Frq  +    -0.42693519984843 * S_Income
1143811   +          +      1.1792020785091 * S_Mnt  +     0.71939074066077 *
1143812   +        S_MntGoldProds  +    -0.72620231508443 * S_MntMeatProducts
1143813   +          +    -0.32426637270285 * S_MntWines  +    -0.38988807626314 *
1143814   +        S_NumDistPurchases  +    -3.02140616024044 * S_RFMstat
1143815   +          +     -0.8223455835322 * S_RMntFrq  +     0.94450643717764 *
1143816   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.13659878639954 * S_AcceptedCmpTotal + 0.45428559765776 * 
S_Frq + -0.42693519984843 * S_Income + 1.1792020785091 * S_Mnt + 0.71939074066077 * 
S_MntGoldProds + -0.72620231508443 * S_MntMeatProducts + -0.32426637270285 * S_MntWines + 
-0.38988807626314 * S_NumDistPurchases + -3.02140616024044 * S_RFMstat + -0.8223455835322 * 
S_RMntFrq + 0.94450643717764 * S_Recency ;
1143817   +   H1x4_1  = H1x4_1  +    -0.12208204500004 * G_Marital_Status0
1143818   +          +    -0.36246978080124 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + -0.12208204500004 * G_Marital_Status0 + 
-0.36246978080124 * G_Marital_Status1 ;
1143819   +   H1x4_1  =    -0.95371898342722 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.95371898342722 + H1x4_1 ;
1143820   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1143821   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1143822   +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
1143823   +END;
MPRINT(EM_DIAGRAM):   END;
1143824   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1143825   +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
The SAS System

1143826   +END;
MPRINT(EM_DIAGRAM):   END;
1143827   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143828   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1143829   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143830   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1143831   +   H2x1_1  =    -5.17307699680657 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -5.17307699680657 * H1x1_1 ;
1143832   +   H2x1_1  = H2x1_1  +     5.68206219040914 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 5.68206219040914 * H1x2_1 ;
1143833   +   H2x1_1  = H2x1_1  +      0.0671760867147 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.0671760867147 * H1x3_1 ;
1143834   +   H2x1_1  = H2x1_1  +     1.77797879568099 * H1x4_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.77797879568099 * H1x4_1 ;
1143835   +   H2x1_1  =    -1.18533244144823 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.18533244144823 + H2x1_1 ;
1143836   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
1143837   +END;
MPRINT(EM_DIAGRAM):   END;
1143838   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1143839   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1143840   +END;
MPRINT(EM_DIAGRAM):   END;
1143841   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143842   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1143843   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143844   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1143845   +   H2x2_1  =    -0.10427732572046 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.10427732572046 * H1x1_1 ;
1143846   +   H2x2_1  = H2x2_1  +    -2.43600502591825 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -2.43600502591825 * H1x2_1 ;
1143847   +   H2x2_1  = H2x2_1  +    -2.36291758854448 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -2.36291758854448 * H1x3_1 ;
1143848   +   H2x2_1  = H2x2_1  +    -0.21725276506237 * H1x4_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.21725276506237 * H1x4_1 ;
1143849   +   H2x2_1  =     -1.6479184469931 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -1.6479184469931 + H2x2_1 ;
1143850   +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
1143851   +END;
MPRINT(EM_DIAGRAM):   END;
1143852   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1143853   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1143854   +END;
MPRINT(EM_DIAGRAM):   END;
1143855   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143856   +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
1143857   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143858   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1143859   +   H2x3_1  =    -2.55881911263862 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -2.55881911263862 * H1x1_1 ;
1143860   +   H2x3_1  = H2x3_1  +    -1.36800479963026 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.36800479963026 * H1x2_1 ;
1143861   +   H2x3_1  = H2x3_1  +     2.49318998831913 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 2.49318998831913 * H1x3_1 ;
1143862   +   H2x3_1  = H2x3_1  +     -0.2723650813761 * H1x4_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -0.2723650813761 * H1x4_1 ;
1143863   +   H2x3_1  =    -2.02002422056859 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -2.02002422056859 + H2x3_1 ;
1143864   +   H2x3_1  = SIN(H2x3_1 );
MPRINT(EM_DIAGRAM):   H2x3_1 = SIN(H2x3_1 );
1143865   +END;
MPRINT(EM_DIAGRAM):   END;
1143866   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1143867   +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
1143868   +END;
MPRINT(EM_DIAGRAM):   END;
1143869   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143870   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1143871   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143872   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1143873   +   H3x1_1  =    -5.17928987039105 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -5.17928987039105 * H2x1_1 ;
1143874   +   H3x1_1  = H3x1_1  +    -4.99188815628878 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -4.99188815628878 * H2x2_1 ;
1143875   +   H3x1_1  = H3x1_1  +    -1.59478766396441 * H2x3_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.59478766396441 * H2x3_1 ;
1143876   +   H3x1_1  =    -1.17125580012514 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -1.17125580012514 + H3x1_1 ;
1143877   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1143878   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1143879   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
1143880   +END;
MPRINT(EM_DIAGRAM):   END;
1143881   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1143882   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1143883   +END;
MPRINT(EM_DIAGRAM):   END;
1143884   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143885   +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
1143886   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143887   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1143888   +   H3x2_1  =       2.158894329803 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 2.158894329803 * H2x1_1 ;
1143889   +   H3x2_1  = H3x2_1  +    -2.32757193457059 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -2.32757193457059 * H2x2_1 ;
1143890   +   H3x2_1  = H3x2_1  +    -6.00752921212942 * H2x3_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -6.00752921212942 * H2x3_1 ;
1143891   +   H3x2_1  =    -0.08802993131411 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -0.08802993131411 + H3x2_1 ;
1143892   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1143893   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1143894   +   H3x2_1  = 1.0 / (1.0 + EXP(MIN( - H3x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x2_1 = 1.0 / (1.0 + EXP(MIN( - H3x2_1 , _EXP_BAR)));
1143895   +END;
MPRINT(EM_DIAGRAM):   END;
1143896   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1143897   +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
1143898   +END;
MPRINT(EM_DIAGRAM):   END;
1143899   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143900   +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
1143901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143902   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1143903   +   H4x1_1  =      7.3411593355967 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 7.3411593355967 * H3x1_1 ;
1143904   +   H4x1_1  = H4x1_1  +    -3.06647078805944 * H3x2_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -3.06647078805944 * H3x2_1 ;
1143905   +   H4x1_1  =    -1.39824841795123 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = -1.39824841795123 + H4x1_1 ;
1143906   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1143907   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1143908   +   H4x1_1  = 1.0 / (1.0 + EXP(MIN( - H4x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H4x1_1 = 1.0 / (1.0 + EXP(MIN( - H4x1_1 , _EXP_BAR)));
1143909   +END;
MPRINT(EM_DIAGRAM):   END;
1143910   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1143911   +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
1143912   +END;
MPRINT(EM_DIAGRAM):   END;
1143913   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143914   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1143915   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143916   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1143917   +   P_DepVar1  =     9.74622448352833 * H4x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 9.74622448352833 * H4x1_1 ;
1143918   +   P_DepVar1  =    -7.88591846838259 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.88591846838259 + P_DepVar1 ;
1143919   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1143920   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1143921   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1143922   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1143923   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1143924   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1143925   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1143926   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1143927   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1143928   +END;
MPRINT(EM_DIAGRAM):   END;
1143929   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1143930   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1143931   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1143932   +END;
MPRINT(EM_DIAGRAM):   END;
1143933   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1143934   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1143935   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1143936   +END;
MPRINT(EM_DIAGRAM):   END;
1143937   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143938   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1143939   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1143940   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1143941   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1143942   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1143943   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1143944   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1143945   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1143946   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1143947   +END;
MPRINT(EM_DIAGRAM):   END;
1143948   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1143949   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1143950   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1143951   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1143952    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1143953    quit;
1143954    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1143955    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1143956    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1143957    retain ID 2 Node "AutoNeural30";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural30";
1143958    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1143959    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1491 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1491 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1143960    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1143961    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143962    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1491 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1491 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.18 seconds
      cpu time            0.00 seconds
      

1143963    proc sort data=EMWS8.AutoNeural30_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural30_variableset out=_temp2(keep=NAME 
CREATOR);
1143964    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143965    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS8.AUTONEURAL30_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143966    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1143967    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1143968    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1143969    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143970    proc contents data=EMWS8.AutoNeural30_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural30_train out=_meta(keep=NAME) noprint;
1143971    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 64 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1143972    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1143973    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143974    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 64 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 64 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143975    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1143976    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1143977    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1143978    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 64 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 64 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143979    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1143980    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1143980  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 741 rows and 5 columns.

1143981    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1143982    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1143983    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 741 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 741 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1143984    filename _pref
1143984  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1143985    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1143986    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1143987   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1143988   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1143989   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1143990   +
1143991   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1143992   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1143993   +
1143994   +
1143995   +/*----G_Marital_Status begin----*/
1143996   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1143997   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1143998   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1143999   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1144000   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1144001   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1144002   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1144003   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1144004   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1144005   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1144006   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1144007   +end;
MPRINT(EM_DIAGRAM):   end;
1144008   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1144009   +/*----G_Marital_Status end----*/
1144010   +
1144011   +
1144012   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
1144013   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1144014   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1144015    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1144016    quit;
1144017    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1144018    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1144019    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1144020    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1144021    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1144022    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144023    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1144024    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1144025    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144026    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1144027    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1144028    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144029    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1144030    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1144031    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1144032    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144033    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1144034    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1144035    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1144036    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1144037    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144038    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1144039    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1144040    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1144041    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144042    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1144043    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1144043  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

1144044    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1144045    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1144046    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 744 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144047    filename _pref
1144047  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1144048    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1144049    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1144050   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1144051   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1144052   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1144053   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1144054   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1144055   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1144056    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1144057    quit;
1144058    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1144059    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1144060    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1144061    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1144062    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1144063    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144064    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1144065    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1144066    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144067    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1144068    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1144069    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1144070    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1144071    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1144072    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1144073    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144074    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1144075    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1144076    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1144077    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1144078    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1144079    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1144080    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1144081    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1144082    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144083    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1144084    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1144084  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1144085    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144086    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1144087    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 748 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144088    filename _pref
1144088  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1144089    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1144090    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1144091   +
1144092   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1144093   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1144093  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1144094   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1144095   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1144096   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1144097   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1144098   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1144099    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1144100    quit;
1144101    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1144102    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1144103    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1144104    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1144105    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1144106    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1144107    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1144108    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1144109    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144110    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1144111    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1144112    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144113    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1144114    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1144115    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1144116    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1144117    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1144118    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144119    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1144120    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1144121    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144122    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1144123    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1144124    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1144125    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144126    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1144127    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1144127  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1144128    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1144129    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1144130    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 787 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144131    filename _pref
1144131  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1144132    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1144133    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1144134   +
1144135   +
1144136   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1144137   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1144138   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1144139   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1144140   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1144141   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1144142   +
1144143   +
1144144   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1144145   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1144146   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1144147   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1144148   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1144149   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1144150   +
1144151   +
1144152   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1144153   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1144154   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1144155   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1144156   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1144157   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1144158   +
1144159   +
1144160   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1144161   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1144162   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1144163   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1144164   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1144165   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1144166   +
1144167   +
1144168   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1144169   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1144170   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1144171   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1144172   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1144173   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1144174   +
1144175   +
1144176   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1144177   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1144178   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1144179   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1144180   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1144181   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1144182   +
1144183   +
1144184   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1144185   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1144186   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1144187   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1144188   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1144189   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1144190   +
1144191   +
1144192   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1144193   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1144194   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1144195   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1144196   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1144197   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1144198   +if
1144199   +_FILTERNORM1 not in ( '.')
1144200   + and
1144201   +_FILTERNORM2 not in ( '.')
1144202   + and
1144203   +_FILTERNORM3 not in ( '.')
1144204   + and
1144205   +_FILTERNORM4 not in ( '.')
1144206   + and
1144207   +_FILTERNORM5 not in ( '.')
1144208   + and
1144209   +_FILTERNORM6 not in ( '.')
1144210   + and
1144211   +_FILTERNORM7 not in ( ' ')
1144212   + and
1144213   +_FILTERNORM8 not in ( ' ')
1144214   +and
1144215   +( Dt_Customer ne .)
1144216   +and ( Income ne . and (Income<=107000))
1144217   +and ( Kidhome ne .)
1144218   +and ( MntFishProducts ne .)
1144219   +and ( MntFruits ne .)
1144220   +and ( MntGoldProds ne .)
1144221   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1144222   +and ( MntSweetProducts ne .)
1144223   +and ( MntWines ne .)
1144224   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1144225   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1144226   +and ( NumStorePurchases ne .)
1144227   +and ( NumWebPurchases ne .)
1144228   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1144229   +and ( Recency ne .)
1144230   +and ( Teenhome ne .)
1144231   +and ( Year_Birth ne .)
1144232   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1144233   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1144234   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1144235   +end;
MPRINT(EM_DIAGRAM):   end;
1144236   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1144237   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1144238    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1144239    quit;
1144240    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1144241    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1144242    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1144243    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1144244    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1144245    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144246    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1144247    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1144248    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144249    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1144250    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1144251    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144252    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1144253    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1144254    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1144255    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144256    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1144257    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

1144258    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1144259    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1144260    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144261    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1144262    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1144263    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1144264    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144265    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1144266    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1144266  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1144267    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1144268    proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl51_FCMP data=_tempx;
1144269    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL51_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL51_FCMP has 853 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144270    %macro varDept(fcmpdata=,id=);
1144271    %global nobs&id scoreFlag&id;
1144272    %let scoreFlag&id = 0;
1144273    %if &id=1 or ^&fcmpStart %then %do;
1144274    proc sort data=&fcmpdata out=_temp&id nodupkey;
1144275    by NAME;
1144276    where id=&id and LHS in( %let j=1;
1144277    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1144278    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1144279    "&var" %let j = %eval(&j+1);
1144280    %end;
1144281    );
1144282    run;
1144283    %let dsid = %sysfunc(open(_temp&id));
1144284    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1144285    %let dsid = %sysfunc(close(&dsid));
1144286    %if &&nobs&id %then %do;
1144287    %let scoreFlag&id = 1;
1144288    %let fcmpStart = 1;
1144289    %end;
1144290    %else %let fcmpStart = 0;
1144291    %end;
1144292    %else %do;
1144293    proc sort data=&fcmpdata out=_tempid;
1144294    where id=&id;
1144295    by LHS;
1144296    run;
1144297    %let dsid = %sysfunc(open(_tempid));
1144298    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1144299    %let dsid = %sysfunc(close(&dsid));
1144300    %if ^&&nobs&id %then %do;
1144301    proc datasets lib=work nolist;
1144302    delete _tempid;
1144303    run;
1144304    quit;
1144305    %end;
1144306    %else %do;
1144307    data _tempAll;
1144308    set %let j=%eval(&id-1);
1144309    %do x=1 %to &j;
1144310    %if &&nobs&x %then %do;
1144311    _temp&x %end;
1144312    %end;
1144313    ;
1144314    run;
1144315    proc sql;
1144316    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1144316  ! work._tempid p2 where p.name=p2.lhs;
1144317    quit;
1144318    data _temp&id;
1144319    set _temp&id;
1144320    where LHS ne '' and NAME ne '' and Node ne '';
1144321    run;
1144322    proc datasets lib=work nolist;
1144323    delete _tempAll;
1144324    run;
1144325    %let dsid = %sysfunc(open(_temp&id));
1144326    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1144327    %let dsid = %sysfunc(close(&dsid));
1144328    %if ^&&nobs&id %then %do;
1144329    proc datasets lib=work nolist;
1144330    delete _temp&id;
1144331    run;
1144332    quit;
1144333    %end;
1144334    %else %do;
1144335    %let scoreFlag&id = 1;
1144336    data _temp&id;
1144337    set _temp&id;
1144338    where LHS ne NAME and node ne '';
1144339    run;
1144340    %let dsid = %sysfunc(open(_temp&id));
1144341    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1144342    %let dsid = %sysfunc(close(&dsid));
1144343    %if ^&&nobs&id %then %do;
1144344    proc datasets lib=work nolist;
1144345    delete _temp&id;
1144346    run;
1144347    quit;
1144348    %end;
1144349    %else %do;
1144350    proc sort data=_temp&id nodupkey;
1144351    by LHS NAME;
1144352    run;
1144353    %end;
1144354    %end;
1144355    %end;
1144356    %end;
1144357    %mend varDept;
1144358    %macro optCode(outdata=fcmpdata);
1144359    %global fcmpStart;
1144360    %let fcmpStart = 0;
1144361    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1144362    %let NumNodes=9;
1144363    %do k=1 %to &NumNodes;
1144364    %vardept(fcmpdata=&outdata, id=&k);
1144365    %end;
1144366    %mend optCode;
1144367    %optcode(outData=EMWS8.Ensmbl51_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 84 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 60 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 24 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 24 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 64 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl51_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL51_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1144368    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1144369    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1144370    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1144371    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144372    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1144373    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1144374    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1144375    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144376    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1144377    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1144377  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1144378    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1144379    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1144380    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1144381    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144382    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1144383    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1144384    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1144385    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1144386    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1144387    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1144388    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1144389    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144390    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1144391    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1144391  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

1144392    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1144393    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1144394    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1144395    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144396    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1144397    * Ensmbl51: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Computing metadata for TRAIN data;
1144398    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL51_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl51\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl51_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl51_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl51_TRAIN out=WORK.M01TQZ2_ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M01TQZ2_;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M01TQZ2_(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M01TQZ2_;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M01TQZ2_;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M35UA2IP NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M35UA2IP;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M35UA2IP;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2QJ0N1Y(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M35UA2IP;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M35UA2IP;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M35UA2IP;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M35UA2IP;
MPRINT(EMADVISECOLUMNS):   set WORK.M35UA2IP;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural29_TRAIN noprint 
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural29_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl51_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl51";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl51";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl51: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl51";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1144710    data EMWS8.Ensmbl51_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl51_EMINFO;
1144711    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1144712    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1144713    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL51_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1144717    run;
1144718    proc sort data = EMWS8.Ensmbl51_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl51_EMINFO NOTHREADS;
1144719    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1144720    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL51_EMINFO.
NOTE: The data set EMWS8.ENSMBL51_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1144721    proc sort data = EMWS8.AutoNeural29_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural29_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
1144722    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1144723    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL29_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144724    proc sort data = EMWS8.Ensmbl51_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl51_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1144725    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1144726    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL51_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144727    data EMWS8.Ensmbl51_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl51_EMINFO;
1144728    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1144729    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1144730    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL51_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1144731    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1144732    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1144733    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1144734    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.ENSMBL51_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.ENSMBL51_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
