*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                08.42 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "08.38 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                08.38 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O05P4IN_
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O05P4IN_ new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "08.38 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMTRAIN.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMSCORE.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMREPORT.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "08.38 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
643835     proc freq data=EMWS8.AutoNeural11_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.AutoNeural11_VariableSet noprint;
643836     table ROLE*LEVEL/out=WORK.AutoNeural11META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.AutoNeural11META;
643837     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK.AUTONEURAL11META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
643838     proc print data=WORK.AutoNeural11META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural11META label noobs;
643839     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
643840     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
643840   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
643840   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
643841     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
643842     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
643843     run;
 
NOTE: There were 5 observations read from the data set WORK.AUTONEURAL11META.
NOTE: The PROCEDURE PRINT printed page 531.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
643844     title10;
MPRINT(EM_DIAGRAM):   title10;
643845     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Meta_TRAIN EMWS8.Meta_TRAIN
EMWS8.Meta_TRAIN EMWS8.Meta_TRAIN EMWS8 Meta_TRAIN
EMWS8.Meta_TRAIN EMWS8.Meta_TRAIN
EMWS8.Meta_TRAIN EMWS8.Meta_TRAIN EMWS8 Meta_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Meta_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.AutoNeural11_DepVar_DD
_TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_DepVar_DD
out=EMWS8.AutoNeural11_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
643892     data WORK.AutoNeural11_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural11_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
643893     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
643894     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
643894   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
643894   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
643895        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
643895   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
643895   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
643896     set EMWS8.AUTONEURAL11_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL11_DEPVAR_DM( where=(_TYPE_="TARGET"));
643897     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
643898     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
643899     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
643900     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
643901     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
643902     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
643903     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
643904     end;
MPRINT(EM_DIAGRAM):   end;
643905     output;
MPRINT(EM_DIAGRAM):   output;
643906     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.AUTONEURAL11_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
643907     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
643908     proc print data=WORK.AutoNeural11_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural11_EVENT noobs label;
643909     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
643910     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
643911     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
643912     run;
 
NOTE: There were 1 observations read from the data set WORK.AUTONEURAL11_EVENT.
NOTE: The PROCEDURE PRINT printed page 532.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
643913     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
643914     proc print data = EMWS8.AutoNeural11_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural11_DepVar_DM noobs label;
643915     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
643916     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
643917     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
643917   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
643917   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
643918     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
643919     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
643920     run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL11_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 533.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
643921     title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Preparing metadata for Training;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M1HBJLR1;
MPRINT(EM_DIAGRAM):   set WORK.M1HBJLR1;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
643930     data WORK.M1HBJLR1;
MPRINT(EM_DIAGRAM):    data WORK.M1HBJLR1;
643931     set WORK.M1HBJLR1 end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M1HBJLR1 end=eof;
643932     output;
MPRINT(EM_DIAGRAM):   output;
643933     if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
643934     NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
643935     ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
643936     LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
643937     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
643938     output;
MPRINT(EM_DIAGRAM):   output;
643939     end;
MPRINT(EM_DIAGRAM):   end;
643940     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK.M1HBJLR1.
NOTE: The data set WORK.M1HBJLR1 has 34 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL11_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
643941     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
643942     * AutoNeural11: Create decision matrix;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Create decision matrix;
643943     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
643944     data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
643945       length   DepVar                           $  32
643946                COUNT                                8
643947                DATAPRIOR                            8
643948                TRAINPRIOR                           8
643949                DECPRIOR                             8
643950                DECISION1                            8
643951                DECISION2                            8
643952                ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
643953
643954       label    COUNT="Level Counts"
643955                DATAPRIOR="Data Proportions"
643956                TRAINPRIOR="Training Proportions"
643957                DECPRIOR="Decision Priors"
643958                DECISION1="1"
643959                DECISION2="0"
643960                ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
643961       format   COUNT 10.
643962                ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
643963     DepVar="1"; COUNT=359; DATAPRIOR=0.15122156697556; TRAINPRIOR=0.15122156697556;
643963   ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
643964     output;
MPRINT(EM_DIAGRAM):   output;
643965     DepVar="0"; COUNT=2015; DATAPRIOR=0.84877843302443; TRAINPRIOR=0.84877843302443;
643965   ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
643966     output;
MPRINT(EM_DIAGRAM):   output;
643967     ;
MPRINT(EM_DIAGRAM):   ;
643968     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
643969     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
643970     modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
643971     label DECISION1= '1';
643972     label DECISION2= '0';
643973     run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
643974     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
643975     data EM_AutoNeural11;
MPRINT(EM_DIAGRAM):   data EM_AutoNeural11;
643976     set EMWS8.Meta_TRAIN(keep=
643977     AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5
643978     AcceptedCmpTotal Age Complain DepVar Education Frq HigherEducationBinary Income
643979     Kidhome Marital_Status Mnt MntFishProducts MntFruits MntGoldProds
643980     MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer NumCatalogPurchases
643981     NumDealsPurchases NumDistPurchases NumStorePurchases NumWebPurchases
643982     NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome );
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN(keep= AcceptedCmp1 AcceptedCmp2 AcceptedCmp3
AcceptedCmp4 AcceptedCmp5 AcceptedCmpTotal Age Complain DepVar Education Frq
HigherEducationBinary Income Kidhome Marital_Status Mnt MntFishProducts MntFruits MntGoldProds
MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer NumCatalogPurchases
NumDealsPurchases NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome );
643983     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * AutoNeural11: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
643984     *------------------------------------------------------------* ;
643985     * AutoNeural11: DMDBClass Macro ;
643986     *------------------------------------------------------------* ;
643987     %macro DMDBClass;
643988         AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC)
643989        AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC)
643990        HigherEducationBinary(ASC) Marital_Status(ASC)
643991     %mend DMDBClass;
643992     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
643993     * AutoNeural11: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural11: DMDBVar Macro ;
643994     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
643995     %macro DMDBVar;
643996         AcceptedCmpTotal Age Frq Income Kidhome Mnt MntFishProducts MntFruits
643997        MntGoldProds MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer
643998        NumCatalogPurchases NumDealsPurchases NumDistPurchases NumStorePurchases
643999        NumWebPurchases NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome
644000     %mend DMDBVar;
644001     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
644002     * AutoNeural11: Create DMDB;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Create DMDB;
644003     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
644004     proc dmdb batch data=WORK.EM_AutoNeural11
644005     dmdbcat=WORK.AutoNeural11_DMDB
644006     maxlevel = 513
644007     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
644008     class %DMDBClass;
MPRINT(DMDBCLASS):   AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC)
AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC) HigherEducationBinary(ASC)
Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
644009     var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Age Frq Income Kidhome Mnt MntFishProducts MntFruits
MntGoldProds MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer NumCatalogPurchases
NumDealsPurchases NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):  ;
644010     target
644011     DepVar
644012     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
644013     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set WORK.EM_AUTONEURAL11.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
644014     quit;
644015     *--- end code ---*;
 
644016     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
644017     * AutoNeural11: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Interval Inputs Macro ;
644018     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
644019     %macro INTINPUTS;
644020         AcceptedCmpTotal Age Frq Income Kidhome Mnt MntFishProducts MntFruits
644021        MntGoldProds MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer
644022        NumCatalogPurchases NumDealsPurchases NumDistPurchases NumStorePurchases
644023        NumWebPurchases NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome
644024     %mend INTINPUTS;
644025     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
644026     * AutoNeural11: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Binary Inputs Macro ;
644027     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
644028     %macro BININPUTS;
644029         AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5 Complain
644030        HigherEducationBinary
644031     %mend BININPUTS;
644032     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
644033     * AutoNeural11: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Nominal Inputs Macro ;
644034     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
644035     %macro NOMINPUTS;
644036         Education Marital_Status
644037     %mend NOMINPUTS;
644038     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
644039     * AutoNeural11: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Ordinal Inputs Macro ;
644040     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
644041     %macro ORDINPUTS;
644042
644043     %mend ORDINPUTS;
644044     * set printing options;
MPRINT(EM_DIAGRAM):   * set printing options;
644045     ;
MPRINT(EM_DIAGRAM):   ;
644046     options linesize = 80;
MPRINT(EM_DIAGRAM):   options linesize = 80;
644047     options pagesize = 6000;
The SAS System
 
MPRINT(EM_DIAGRAM):   options pagesize = 6000;
644048     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
644049     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
644050     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
644051     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644052     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_autonet_title  ,
644052   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "AutoNet";
MPRINT(EM_DIAGRAM):   *;
644053     *;
 
644054     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644055     * Autoneural: search / FUNNEL LAYERS;
MPRINT(EM_DIAGRAM):   * Autoneural: search / FUNNEL LAYERS;
644056     ;
MPRINT(EM_DIAGRAM):   ;
644057     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644058     *;
MPRINT(EM_DIAGRAM):   *;
 
644059     *;
MPRINT(EM_DIAGRAM):    *;
644060     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
644061     validdata=EMWS8.Meta_VALIDATE
644062     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
644063     *;
MPRINT(EM_DIAGRAM):   *;
644064     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
644065     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
644066     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
644067     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
644068     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
644069     target DepVar / level=NOMINAL id=DepVar
644070     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
644071     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644072     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
644073     ;
MPRINT(EM_DIAGRAM):   ;
644074     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644075     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
644076     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
644077     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
644078     *;
MPRINT(EM_DIAGRAM):   *;
644079     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
644080     *;
MPRINT(EM_DIAGRAM):   *;
644081     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644082     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
644082   ! Search # 1 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=1800
maxiter=50 tech = Default;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: Convergence criterion (ABSGCONV=0.00001) satisfied.
NOTE: The data set WORK._ANEST has 56 observations and 54 variables.
NOTE: The data set WORK._ANFIT has 32 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
644083     train estiter=1 outest=_anest outfit=_anfit maxtime=1800 maxiter=50
MPRINT(EM_DIAGRAM):   run;
644084     tech = Default;
644085     ;
644086     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.52 seconds
      cpu time            0.53 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.52 seconds
      cpu time            0.53 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644087     *;
644088     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
644089     var _iter_ _aic_ _averr_ _misc_
644090     _vaverr_ _vmisc_
644091     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
644092     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 534.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644093     *------------------------------------------------------------*;
644094     * Extract best iteration;
644095     ;
644096     *------------------------------------------------------------*;
644097     %global _iter;
644098     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
644099     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
644100     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
644101     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
644102     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
644103     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
644104     end;
MPRINT(EM_DIAGRAM):   end;
644105     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644106     *;
 
644107     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
644108     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
644109     if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
644110     output;
MPRINT(EM_DIAGRAM):   output;
644111     stop;
MPRINT(EM_DIAGRAM):   stop;
644112     end;
MPRINT(EM_DIAGRAM):   end;
644113     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644114     *;
644115     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
644116     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
644117     if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
644118     output;
MPRINT(EM_DIAGRAM):   output;
644119     stop;
MPRINT(EM_DIAGRAM):   stop;
644120     end;
MPRINT(EM_DIAGRAM):   end;
644121     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644122     *;
MPRINT(EM_DIAGRAM):    *;
644123     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644124     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
644124   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
644125     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
644126     var _iter_ _aic_ _averr_ _misc_
644127     _vaverr_ _vmisc_
644128     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
644129     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 535.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644130     title9;
MPRINT(EM_DIAGRAM):   title9;
644131     title10;
MPRINT(EM_DIAGRAM):   title10;
644132     %sysfunc(sasmsg(sashelp.dmine, starthistory_note , NOQUOTE));
MPRINT(EM_DIAGRAM):    * Start history;
MPRINT(EM_DIAGRAM):  ;
644133     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
644134     length _func_ _status_ _step_ $16;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16;
644135     label _func_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_function_vlabel  ,
644135   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _func_ = "Function";
644136     label _status_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_status_vlabel  ,
644136   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _status_ = "Status";
644137     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel
644137   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Iteration";
644138     label _step_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_step_vlabel  ,
644138   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _step_ = "Step";
644139     _func_ = '';
MPRINT(EM_DIAGRAM):   _func_ = '';
644140     _status_ = '';
MPRINT(EM_DIAGRAM):   _status_ = '';
644141     _step_ = 'FUNNEL LAYERS 1';
MPRINT(EM_DIAGRAM):   _step_ = 'FUNNEL LAYERS 1';
644142     set
644143     _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0))
644144     ;
MPRINT(EM_DIAGRAM):   set _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0)) ;
644145     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANFIT.
      WHERE (_name_='OVERALL') and (_iter_=0);
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644146     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
644147     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644148     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
644149     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644150     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
644151     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644152     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
644153     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
644154     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
644155     ;
MPRINT(EM_DIAGRAM):   ;
644156     data WORK.SAVEDS_AUTONEUR_1B29UCF;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_1B29UCF;
644157     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
644158     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_1B29UCF has 1 observations and 54
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644159     data EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_BESTDS;
644160     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
644161     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_BESTDS has 1 observations and 54
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644162     data WORK.BFITDS_AUTONEUR_1B29UCF;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_1B29UCF;
644163     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644164     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_1B29UCF has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644165     * Add function info to new history;
MPRINT(EM_DIAGRAM):    * Add function info to new history;
644166     ;
MPRINT(EM_DIAGRAM):   ;
644167     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
644168     set EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY;
644169     _func_ = 'DIRECT';
MPRINT(EM_DIAGRAM):   _func_ = 'DIRECT';
644170     _status_ = 'initial';
MPRINT(EM_DIAGRAM):   _status_ = 'initial';
644171     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
644172     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
644173     ;
MPRINT(EM_DIAGRAM):   ;
644174     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
644175     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644176     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
644177     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
644178     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
644179     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
644180     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
644181     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644182     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
644183     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
644184     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 2 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644185     *;
MPRINT(EM_DIAGRAM):    *;
644186     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
644187     validdata=EMWS8.Meta_VALIDATE
644188     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
644189     *;
MPRINT(EM_DIAGRAM):   *;
644190     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
644191     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
644192     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
644193     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
644194     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
644195     target DepVar / level=NOMINAL id=DepVar
644196     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
644197     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644198     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
644199     ;
MPRINT(EM_DIAGRAM):   ;
644200     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644201     Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
644202     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
644203     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
644204     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
644205     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
644206     *;
MPRINT(EM_DIAGRAM):   *;
644207     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
644208     *;
MPRINT(EM_DIAGRAM):   *;
644209     initial
644210     ;
MPRINT(EM_DIAGRAM):   initial ;
644211     *;
MPRINT(EM_DIAGRAM):   *;
644212     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644213     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
644213   ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=37 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 49 observations and 256 variables.
MPRINT(EM_DIAGRAM):   *;
644214     prelim 24 outest=_anpre pretime=37 preiter=25
644215     tech = Default
644216     ;
644217     *;
644218     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644219     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
644219   ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=900
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 256 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
644220     train estiter=1 outest=_anest outfit=_anfit maxtime=900 maxiter=50
MPRINT(EM_DIAGRAM):   run;
644221     tech = Default;
644222     ;
644223     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           12.95 seconds
      cpu time            12.74 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 536.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           12.96 seconds
      cpu time            12.74 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644224     *;
644225     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
644226     var _iter_ _aic_ _averr_ _misc_
644227     _vaverr_ _vmisc_
644228     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
644229     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 537.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644230     *------------------------------------------------------------*;
644231     * Extract best iteration;
644232     ;
644233     *------------------------------------------------------------*;
644234     %global _iter;
644235     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
644236     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
644237     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
644238     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
644239     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
644240     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
644241     end;
MPRINT(EM_DIAGRAM):   end;
644242     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644243     *;
 
644244     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
644245     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
644246     if _ITER_ eq 33 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 33 then do;
644247     output;
MPRINT(EM_DIAGRAM):   output;
644248     stop;
MPRINT(EM_DIAGRAM):   stop;
644249     end;
MPRINT(EM_DIAGRAM):   end;
644250     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 256
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644251     *;
644252     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
644253     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
644254     if _ITER_ eq 33 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 33 and _NAME_ eq "OVERALL" then do;
644255     output;
MPRINT(EM_DIAGRAM):   output;
644256     stop;
MPRINT(EM_DIAGRAM):   stop;
644257     end;
MPRINT(EM_DIAGRAM):   end;
644258     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 68 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644259     *;
MPRINT(EM_DIAGRAM):    *;
644260     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644261     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
644261   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
644262     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
644263     var _iter_ _aic_ _averr_ _misc_
644264     _vaverr_ _vmisc_
644265     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
644266     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 538.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644267     title9;
MPRINT(EM_DIAGRAM):   title9;
644268     title10;
MPRINT(EM_DIAGRAM):   title10;
644269     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
644270     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644271     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
644272     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
644273     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
644274     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644275     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
644276     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644277     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
644278     ;
MPRINT(EM_DIAGRAM):   ;
644279     data WORK.SAVEDS_AUTONEUR_1B29UCF;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_1B29UCF;
644280     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
644281     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_1B29UCF has 1 observations and 256
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
644282     data EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_BESTDS;
644283     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
644284     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_BESTDS has 1 observations and 256
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644285     data WORK.BFITDS_AUTONEUR_1B29UCF;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_1B29UCF;
644286     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644287     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_1B29UCF has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644288     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
644289     ;
MPRINT(EM_DIAGRAM):   ;
644290     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
644291     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644292     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
644293     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
644294     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
644295     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
644296     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
644297     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644298     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
644299     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
644300     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 3 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644301     *;
MPRINT(EM_DIAGRAM):    *;
644302     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
644303     validdata=EMWS8.Meta_VALIDATE
644304     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
644305     *;
MPRINT(EM_DIAGRAM):   *;
644306     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
644307     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
644308     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
644309     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
644310     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
644311     target DepVar / level=NOMINAL id=DepVar
644312     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
644313     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644314     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
644315     ;
MPRINT(EM_DIAGRAM):   ;
644316     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644317     Hidden 6 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SINE;
644318     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
644319     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
644320     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
644321     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
644322     *;
MPRINT(EM_DIAGRAM):   *;
644323     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
644324     *;
MPRINT(EM_DIAGRAM):   *;
644325     initial
644326     ;
MPRINT(EM_DIAGRAM):   initial ;
644327     *;
MPRINT(EM_DIAGRAM):   *;
644328     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644329     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
644329   ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=37 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 49 observations and 256 variables.
MPRINT(EM_DIAGRAM):   *;
644330     prelim 24 outest=_anpre pretime=37 preiter=25
644331     tech = Default
644332     ;
644333     *;
644334     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644335     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
644335   ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=896
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 256 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
644336     train estiter=1 outest=_anest outfit=_anfit maxtime=896 maxiter=50
MPRINT(EM_DIAGRAM):   run;
644337     tech = Default;
644338     ;
644339     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           11.43 seconds
      cpu time            11.32 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 539.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           11.43 seconds
      cpu time            11.32 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644340     *;
644341     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
644342     var _iter_ _aic_ _averr_ _misc_
644343     _vaverr_ _vmisc_
644344     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
644345     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 540.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644346     *------------------------------------------------------------*;
644347     * Extract best iteration;
644348     ;
644349     *------------------------------------------------------------*;
644350     %global _iter;
644351     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
644352     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
644353     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
644354     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
644355     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
644356     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
644357     end;
MPRINT(EM_DIAGRAM):   end;
644358     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644359     *;
 
644360     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
644361     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
644362     if _ITER_ eq 22 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 22 then do;
644363     output;
MPRINT(EM_DIAGRAM):   output;
644364     stop;
MPRINT(EM_DIAGRAM):   stop;
644365     end;
MPRINT(EM_DIAGRAM):   end;
644366     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 256
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644367     *;
644368     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
644369     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
644370     if _ITER_ eq 22 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 22 and _NAME_ eq "OVERALL" then do;
644371     output;
MPRINT(EM_DIAGRAM):   output;
644372     stop;
MPRINT(EM_DIAGRAM):   stop;
644373     end;
MPRINT(EM_DIAGRAM):   end;
644374     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644375     *;
MPRINT(EM_DIAGRAM):    *;
644376     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644377     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
644377   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
644378     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
644379     var _iter_ _aic_ _averr_ _misc_
644380     _vaverr_ _vmisc_
644381     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
644382     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 541.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644383     title9;
MPRINT(EM_DIAGRAM):   title9;
644384     title10;
MPRINT(EM_DIAGRAM):   title10;
644385     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
644386     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644387     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
644388     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
644389     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
644390     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644391     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
644392     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644393     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
644394     ;
MPRINT(EM_DIAGRAM):   ;
644395     data WORK.SAVEDS_AUTONEUR_1B29UCF;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_1B29UCF;
644396     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
644397     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_1B29UCF has 1 observations and 256
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
644398     data EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_BESTDS;
644399     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
644400     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_BESTDS has 1 observations and 256
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644401     data WORK.BFITDS_AUTONEUR_1B29UCF;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_1B29UCF;
644402     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644403     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_1B29UCF has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644404     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
644405     ;
MPRINT(EM_DIAGRAM):   ;
644406     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
644407     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644408     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
644409     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
644410     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
644411     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
644412     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
644413     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
644414     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
644415     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
644416     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 4 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644417     *;
MPRINT(EM_DIAGRAM):    *;
644418     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
644419     validdata=EMWS8.Meta_VALIDATE
644420     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
644421     *;
MPRINT(EM_DIAGRAM):   *;
644422     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
644423     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
644424     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
644425     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
644426     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
644427     target DepVar / level=NOMINAL id=DepVar
644428     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
644429     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644430     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
644431     ;
MPRINT(EM_DIAGRAM):   ;
644432     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644433     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
644434     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
644435     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
644436     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
644437     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
644438     *;
MPRINT(EM_DIAGRAM):   *;
644439     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
644440     *;
MPRINT(EM_DIAGRAM):   *;
644441     initial
644442     ;
MPRINT(EM_DIAGRAM):   initial ;
644443     *;
MPRINT(EM_DIAGRAM):   *;
644444     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644445     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
644445   ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=37 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 49 observations and 217 variables.
MPRINT(EM_DIAGRAM):   *;
644446     prelim 24 outest=_anpre pretime=37 preiter=25
644447     tech = Default
644448     ;
644449     *;
644450     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644451     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
644451   ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=893
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 217 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
644452     train estiter=1 outest=_anest outfit=_anfit maxtime=893 maxiter=50
MPRINT(EM_DIAGRAM):   run;
644453     tech = Default;
644454     ;
644455     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           13.54 seconds
      cpu time            13.46 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 542.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           13.55 seconds
      cpu time            13.47 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644456     *;
644457     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
644458     var _iter_ _aic_ _averr_ _misc_
644459     _vaverr_ _vmisc_
644460     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
644461     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 543.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644462     *------------------------------------------------------------*;
644463     * Extract best iteration;
644464     ;
644465     *------------------------------------------------------------*;
644466     %global _iter;
644467     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
644468     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
644469     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
644470     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
644471     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
644472     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
644473     end;
MPRINT(EM_DIAGRAM):   end;
644474     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644475     *;
 
644476     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
644477     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
644478     if _ITER_ eq 16 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 16 then do;
644479     output;
MPRINT(EM_DIAGRAM):   output;
644480     stop;
MPRINT(EM_DIAGRAM):   stop;
644481     end;
MPRINT(EM_DIAGRAM):   end;
644482     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 217
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644483     *;
644484     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
644485     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
644486     if _ITER_ eq 16 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 16 and _NAME_ eq "OVERALL" then do;
644487     output;
MPRINT(EM_DIAGRAM):   output;
644488     stop;
MPRINT(EM_DIAGRAM):   stop;
644489     end;
MPRINT(EM_DIAGRAM):   end;
644490     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644491     *;
MPRINT(EM_DIAGRAM):    *;
644492     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644493     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
644493   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
644494     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
644495     var _iter_ _aic_ _averr_ _misc_
644496     _vaverr_ _vmisc_
644497     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
644498     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 544.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644499     title9;
MPRINT(EM_DIAGRAM):   title9;
644500     title10;
MPRINT(EM_DIAGRAM):   title10;
644501     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
644502     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644503     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
644504     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644505     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
644506     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644507     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
644508     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644509     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
644510     ;
MPRINT(EM_DIAGRAM):   ;
644511     data WORK.SAVEDS_AUTONEUR_1B29UCF;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_1B29UCF;
644512     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
644513     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_1B29UCF has 1 observations and 217
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644514     data EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_BESTDS;
644515     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
644516     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_BESTDS has 1 observations and 217
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644517     data WORK.BFITDS_AUTONEUR_1B29UCF;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_1B29UCF;
644518     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644519     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_1B29UCF has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
644520     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
644521     ;
MPRINT(EM_DIAGRAM):   ;
644522     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
644523     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644524     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
644525     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
644526     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
644527     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
644528     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
644529     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644530     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
644531     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
644532     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 5 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644533     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
644534     ;
MPRINT(EM_DIAGRAM):   ;
644535     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_ESTDS;
644536     set EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_BESTDS;
644537     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 217
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
644538     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
644539     set WORK.BFITDS_AUTONEUR_1B29UCF;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_1B29UCF;
644540     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_1B29UCF.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644541     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
644542     ;
MPRINT(EM_DIAGRAM):   ;
644543     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
644544     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644545     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
644546     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
644547     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
644548     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
644549     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
644550     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644551     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
644552     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
644553     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 6 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
644554     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
644555     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644556     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
644557     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644558     *;
MPRINT(EM_DIAGRAM):    *;
644559     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
644560     validdata=EMWS8.Meta_VALIDATE
644561     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
644562     *;
MPRINT(EM_DIAGRAM):   *;
644563     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
644564     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
644565     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
644566     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
644567     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
644568     target DepVar / level=NOMINAL id=DepVar
644569     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
644570     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644571     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
644572     ;
MPRINT(EM_DIAGRAM):   ;
644573     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644574     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
644575     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
644576     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
644577     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644578     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
644579     ;
MPRINT(EM_DIAGRAM):   ;
644580     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644581     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
644582     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
644583     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
644584     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
644585     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
644586     *;
MPRINT(EM_DIAGRAM):   *;
644587     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
644588     *;
MPRINT(EM_DIAGRAM):   *;
644589     initial
644590     inest = EMWS8.AutoNeural11_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural11_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 217
      variables.
644591     ;
MPRINT(EM_DIAGRAM):   ;
644592     *;
MPRINT(EM_DIAGRAM):   *;
644593     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644594     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
644594   ! Search # 2 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : DIRECT :
Prelim";
644595     prelim 24 outest=_anpre pretime=37 preiter=25
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=37 preiter=25 tech =
Default inest = EMWS8.AutoNeural11_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 255 variables.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 217
      variables.
MPRINT(EM_DIAGRAM):   *;
644596     tech = Default
644597     inest = EMWS8.AutoNeural11_ESTDS bylabel
644598     ;
644599     *;
644600     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644601     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
644601   ! Search # 2 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=890
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 255 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
644602     train estiter=1 outest=_anest outfit=_anfit maxtime=890 maxiter=50
MPRINT(EM_DIAGRAM):   run;
644603     tech = Default;
644604     ;
644605     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           1.80 seconds
      cpu time            1.77 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 545.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.80 seconds
      cpu time            1.77 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644606     *;
644607     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
644608     var _iter_ _aic_ _averr_ _misc_
644609     _vaverr_ _vmisc_
644610     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
644611     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 546.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644612     *------------------------------------------------------------*;
644613     * Extract best iteration;
644614     ;
644615     *------------------------------------------------------------*;
644616     %global _iter;
644617     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
644618     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
644619     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
644620     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
644621     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
644622     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
644623     end;
MPRINT(EM_DIAGRAM):   end;
644624     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644625     *;
 
644626     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
644627     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
644628     if _ITER_ eq 9 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 9 then do;
644629     output;
MPRINT(EM_DIAGRAM):   output;
644630     stop;
MPRINT(EM_DIAGRAM):   stop;
644631     end;
MPRINT(EM_DIAGRAM):   end;
644632     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 255
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644633     *;
644634     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
644635     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
644636     if _ITER_ eq 9 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 9 and _NAME_ eq "OVERALL" then do;
644637     output;
MPRINT(EM_DIAGRAM):   output;
644638     stop;
MPRINT(EM_DIAGRAM):   stop;
644639     end;
MPRINT(EM_DIAGRAM):   end;
644640     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644641     *;
MPRINT(EM_DIAGRAM):    *;
644642     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644643     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
644643   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
644644     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
644645     var _iter_ _aic_ _averr_ _misc_
644646     _vaverr_ _vmisc_
644647     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
644648     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 547.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
644649     title9;
MPRINT(EM_DIAGRAM):   title9;
644650     title10;
MPRINT(EM_DIAGRAM):   title10;
644651     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
644652     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644653     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
644654     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644655     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
644656     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644657     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
644658     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644659     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
644660     ;
MPRINT(EM_DIAGRAM):   ;
644661     data WORK.SAVEDS_AUTONEUR_1B29UCF;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_1B29UCF;
644662     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
644663     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_1B29UCF has 1 observations and 255
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644664     data EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_BESTDS;
644665     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
644666     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_BESTDS has 1 observations and 255
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644667     data WORK.BFITDS_AUTONEUR_1B29UCF;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_1B29UCF;
644668     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644669     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_1B29UCF has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644670     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
644671     ;
MPRINT(EM_DIAGRAM):   ;
644672     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
644673     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644674     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
644675     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
644676     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
644677     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
644678     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
644679     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644680     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
644681     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
644682     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 7 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644683     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
644684     ;
MPRINT(EM_DIAGRAM):   ;
644685     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_ESTDS;
644686     set EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_BESTDS;
644687     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 255
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644688     *;
MPRINT(EM_DIAGRAM):    *;
644689     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
644690     validdata=EMWS8.Meta_VALIDATE
644691     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
644692     *;
MPRINT(EM_DIAGRAM):   *;
644693     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
644694     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
644695     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
644696     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
644697     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
644698     target DepVar / level=NOMINAL id=DepVar
644699     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
644700     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644701     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
644702     ;
MPRINT(EM_DIAGRAM):   ;
644703     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644704     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
644705     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
644706     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
644707     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
644708     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
644709     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
644710     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
644711     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
644712     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644713     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
644714     ;
MPRINT(EM_DIAGRAM):   ;
644715     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644716     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
644717     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
644718     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
644719     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
644720     *;
MPRINT(EM_DIAGRAM):   *;
644721     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
644722     *;
MPRINT(EM_DIAGRAM):   *;
644723     initial
644724     inest = EMWS8.AutoNeural11_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural11_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 255
      variables.
644725     ;
MPRINT(EM_DIAGRAM):   ;
644726     *;
MPRINT(EM_DIAGRAM):   *;
644727     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644728     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
644728   ! Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
644729     prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural11_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 61 observations and 490 variables.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 255
      variables.
MPRINT(EM_DIAGRAM):   *;
644730     tech = Default
644731     inest = EMWS8.AutoNeural11_ESTDS bylabel
644732     ;
644733     *;
644734     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644735     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
644735   ! Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=889
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 490 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
644736     train estiter=1 outest=_anest outfit=_anfit maxtime=889 maxiter=50
MPRINT(EM_DIAGRAM):   run;
644737     tech = Default;
644738     ;
644739     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           24.53 seconds
      cpu time            24.25 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 548.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           24.54 seconds
      cpu time            24.25 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644740     *;
644741     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
644742     var _iter_ _aic_ _averr_ _misc_
644743     _vaverr_ _vmisc_
644744     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
644745     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 549.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644746     *------------------------------------------------------------*;
644747     * Extract best iteration;
644748     ;
644749     *------------------------------------------------------------*;
644750     %global _iter;
644751     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
644752     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
644753     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
644754     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
644755     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
644756     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
644757     end;
MPRINT(EM_DIAGRAM):   end;
644758     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644759     *;
 
644760     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
644761     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
644762     if _ITER_ eq 7 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 7 then do;
644763     output;
MPRINT(EM_DIAGRAM):   output;
644764     stop;
MPRINT(EM_DIAGRAM):   stop;
644765     end;
MPRINT(EM_DIAGRAM):   end;
644766     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644767     *;
644768     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
644769     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
644770     if _ITER_ eq 7 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 7 and _NAME_ eq "OVERALL" then do;
644771     output;
MPRINT(EM_DIAGRAM):   output;
644772     stop;
MPRINT(EM_DIAGRAM):   stop;
644773     end;
MPRINT(EM_DIAGRAM):   end;
644774     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644775     *;
MPRINT(EM_DIAGRAM):    *;
644776     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644777     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
644777   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
644778     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
644779     var _iter_ _aic_ _averr_ _misc_
644780     _vaverr_ _vmisc_
644781     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
644782     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 550.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644783     title9;
MPRINT(EM_DIAGRAM):   title9;
644784     title10;
MPRINT(EM_DIAGRAM):   title10;
644785     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
644786     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644787     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
644788     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644789     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
644790     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644791     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
644792     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644793     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
644794     ;
MPRINT(EM_DIAGRAM):   ;
644795     data WORK.SAVEDS_AUTONEUR_1B29UCF;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_1B29UCF;
644796     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
644797     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_1B29UCF has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
644798     data EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_BESTDS;
644799     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
644800     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_BESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644801     data WORK.BFITDS_AUTONEUR_1B29UCF;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_1B29UCF;
644802     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644803     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_1B29UCF has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644804     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
644805     ;
MPRINT(EM_DIAGRAM):   ;
644806     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
644807     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644808     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
644809     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
644810     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
644811     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
644812     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
644813     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
644814     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
644815     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
644816     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 8 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644817     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
644818     ;
MPRINT(EM_DIAGRAM):   ;
644819     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_ESTDS;
644820     set EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_BESTDS;
644821     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644822     *;
MPRINT(EM_DIAGRAM):    *;
644823     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
644824     validdata=EMWS8.Meta_VALIDATE
644825     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
644826     *;
MPRINT(EM_DIAGRAM):   *;
644827     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
644828     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
644829     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
644830     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
644831     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
644832     target DepVar / level=NOMINAL id=DepVar
644833     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
644834     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644835     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
644836     ;
MPRINT(EM_DIAGRAM):   ;
644837     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644838     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
644839     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
644840     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
644841     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
644842     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
644843     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
644844     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
644845     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
644846     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644847     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
644848     ;
MPRINT(EM_DIAGRAM):   ;
644849     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644850     Hidden 6 / id = H2x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SINE;
644851     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
644852     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
644853     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
644854     *;
MPRINT(EM_DIAGRAM):   *;
644855     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
644856     *;
MPRINT(EM_DIAGRAM):   *;
644857     initial
644858     inest = EMWS8.AutoNeural11_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural11_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
644859     ;
MPRINT(EM_DIAGRAM):   ;
644860     *;
MPRINT(EM_DIAGRAM):   *;
644861     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644862     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
644862   ! Search # 2 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
644863     prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural11_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 490 variables.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
MPRINT(EM_DIAGRAM):   *;
644864     tech = Default
644865     inest = EMWS8.AutoNeural11_ESTDS bylabel
644866     ;
644867     *;
644868     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644869     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
644869   ! Search # 2 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=883
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 490 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
644870     train estiter=1 outest=_anest outfit=_anfit maxtime=883 maxiter=50
MPRINT(EM_DIAGRAM):   run;
644871     tech = Default;
644872     ;
644873     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           2.41 seconds
      cpu time            2.40 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 551.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.41 seconds
      cpu time            2.40 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644874     *;
644875     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
644876     var _iter_ _aic_ _averr_ _misc_
644877     _vaverr_ _vmisc_
644878     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
644879     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 552.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644880     *------------------------------------------------------------*;
644881     * Extract best iteration;
644882     ;
644883     *------------------------------------------------------------*;
644884     %global _iter;
644885     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
644886     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
644887     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
644888     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
644889     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
644890     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
644891     end;
MPRINT(EM_DIAGRAM):   end;
644892     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644893     *;
 
644894     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
644895     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
644896     if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
644897     output;
MPRINT(EM_DIAGRAM):   output;
644898     stop;
MPRINT(EM_DIAGRAM):   stop;
644899     end;
MPRINT(EM_DIAGRAM):   end;
644900     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644901     *;
644902     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
644903     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
644904     if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
644905     output;
MPRINT(EM_DIAGRAM):   output;
644906     stop;
MPRINT(EM_DIAGRAM):   stop;
644907     end;
MPRINT(EM_DIAGRAM):   end;
644908     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644909     *;
MPRINT(EM_DIAGRAM):    *;
644910     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644911     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
644911   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
644912     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
644913     var _iter_ _aic_ _averr_ _misc_
644914     _vaverr_ _vmisc_
644915     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
644916     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 553.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644917     title9;
MPRINT(EM_DIAGRAM):   title9;
644918     title10;
MPRINT(EM_DIAGRAM):   title10;
644919     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
644920     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644921     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
644922     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644923     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
644924     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644925     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
644926     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644927     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
644928     ;
MPRINT(EM_DIAGRAM):   ;
644929     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
644930     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
644931     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
644932     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
644933     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
644934     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
644935     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
644936     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644937     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
644938     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
644939     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 9 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644940     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
644941     ;
MPRINT(EM_DIAGRAM):   ;
644942     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_ESTDS;
644943     set EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_BESTDS;
644944     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
644945     *;
MPRINT(EM_DIAGRAM):    *;
644946     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
644947     validdata=EMWS8.Meta_VALIDATE
644948     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
644949     *;
MPRINT(EM_DIAGRAM):   *;
644950     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
644951     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
644952     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
644953     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
644954     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
644955     target DepVar / level=NOMINAL id=DepVar
644956     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
644957     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644958     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
644959     ;
MPRINT(EM_DIAGRAM):   ;
644960     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644961     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
644962     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
644963     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
644964     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
644965     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
644966     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
644967     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
644968     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
644969     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644970     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
644971     ;
MPRINT(EM_DIAGRAM):   ;
644972     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
644973     Hidden 6 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SOFTMAX;
644974     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
644975     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
644976     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
644977     *;
MPRINT(EM_DIAGRAM):   *;
644978     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
644979     *;
MPRINT(EM_DIAGRAM):   *;
644980     initial
644981     inest = EMWS8.AutoNeural11_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural11_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
644982     ;
MPRINT(EM_DIAGRAM):   ;
644983     *;
MPRINT(EM_DIAGRAM):   *;
644984     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644985     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
644985   ! Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
644986     prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural11_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 477 variables.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
MPRINT(EM_DIAGRAM):   *;
644987     tech = Default
644988     inest = EMWS8.AutoNeural11_ESTDS bylabel
644989     ;
644990     *;
644991     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
644992     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
644992   ! Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=883
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 477 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
644993     train estiter=1 outest=_anest outfit=_anfit maxtime=883 maxiter=50
MPRINT(EM_DIAGRAM):   run;
644994     tech = Default;
644995     ;
644996     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           2.38 seconds
      cpu time            2.34 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 554.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.39 seconds
      cpu time            2.34 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
644997     *;
644998     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
644999     var _iter_ _aic_ _averr_ _misc_
645000     _vaverr_ _vmisc_
645001     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
645002     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 555.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645003     *------------------------------------------------------------*;
645004     * Extract best iteration;
645005     ;
645006     *------------------------------------------------------------*;
645007     %global _iter;
645008     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
645009     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
645010     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
645011     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
645012     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
645013     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
645014     end;
MPRINT(EM_DIAGRAM):   end;
645015     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
645016     *;
 
645017     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
645018     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
645019     if _ITER_ eq 8 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 8 then do;
645020     output;
MPRINT(EM_DIAGRAM):   output;
645021     stop;
MPRINT(EM_DIAGRAM):   stop;
645022     end;
MPRINT(EM_DIAGRAM):   end;
645023     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 477
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
645024     *;
645025     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
645026     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
645027     if _ITER_ eq 8 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 8 and _NAME_ eq "OVERALL" then do;
645028     output;
MPRINT(EM_DIAGRAM):   output;
645029     stop;
MPRINT(EM_DIAGRAM):   stop;
645030     end;
MPRINT(EM_DIAGRAM):   end;
645031     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645032     *;
MPRINT(EM_DIAGRAM):    *;
645033     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
645034     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
645034   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
645035     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
645036     var _iter_ _aic_ _averr_ _misc_
645037     _vaverr_ _vmisc_
645038     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
645039     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 556.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645040     title9;
MPRINT(EM_DIAGRAM):   title9;
645041     title10;
MPRINT(EM_DIAGRAM):   title10;
645042     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
645043     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
645044     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
645045     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645046     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
645047     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
645048     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
645049     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645050     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
645051     ;
MPRINT(EM_DIAGRAM):   ;
645052     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
645053     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
645054     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
645055     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
645056     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
645057     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
645058     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
645059     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645060     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
645061     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
645062     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 10 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645063     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
645064     ;
MPRINT(EM_DIAGRAM):   ;
645065     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_ESTDS;
645066     set EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_BESTDS;
645067     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645068     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
645069     set WORK.BFITDS_AUTONEUR_1B29UCF;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_1B29UCF;
645070     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_1B29UCF.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645071     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
645072     ;
MPRINT(EM_DIAGRAM):   ;
645073     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
645074     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
645075     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
645076     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
645077     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
645078     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
645079     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
645080     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645081     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
645082     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
645083     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 11 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645084     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
645085     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
645086     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
645087     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
645088     *;
MPRINT(EM_DIAGRAM):    *;
645089     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
645090     validdata=EMWS8.Meta_VALIDATE
645091     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
645092     *;
MPRINT(EM_DIAGRAM):   *;
645093     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
645094     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
645095     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
645096     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
645097     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
645098     target DepVar / level=NOMINAL id=DepVar
645099     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
645100     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645101     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
645102     ;
MPRINT(EM_DIAGRAM):   ;
645103     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645104     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
645105     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
645106     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
645107     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645108     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
645109     ;
MPRINT(EM_DIAGRAM):   ;
645110     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645111     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
645112     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
645113     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
645114     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
645115     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
645116     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
645117     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
645118     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
645119     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645120     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
645121     ;
MPRINT(EM_DIAGRAM):   ;
645122     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645123     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
645124     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
645125     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
645126     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
645127     *;
MPRINT(EM_DIAGRAM):   *;
645128     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
645129     *;
MPRINT(EM_DIAGRAM):   *;
645130     initial
645131     inest = EMWS8.AutoNeural11_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural11_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
645132     ;
MPRINT(EM_DIAGRAM):   ;
645133     *;
MPRINT(EM_DIAGRAM):   *;
645134     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
645135     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
645135   ! Search # 3 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : DIRECT :
Prelim";
645136     prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural11_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 528 variables.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
MPRINT(EM_DIAGRAM):   *;
645137     tech = Default
645138     inest = EMWS8.AutoNeural11_ESTDS bylabel
645139     ;
645140     *;
645141     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
645142     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
645142   ! Search # 3 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=882
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 528 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
645143     train estiter=1 outest=_anest outfit=_anfit maxtime=882 maxiter=50
MPRINT(EM_DIAGRAM):   run;
645144     tech = Default;
645145     ;
645146     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           2.98 seconds
      cpu time            2.96 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 557.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.98 seconds
      cpu time            2.96 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
645147     *;
645148     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
645149     var _iter_ _aic_ _averr_ _misc_
645150     _vaverr_ _vmisc_
645151     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
645152     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 558.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645153     *------------------------------------------------------------*;
645154     * Extract best iteration;
645155     ;
645156     *------------------------------------------------------------*;
645157     %global _iter;
645158     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
645159     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
645160     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
645161     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
645162     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
645163     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
645164     end;
MPRINT(EM_DIAGRAM):   end;
645165     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
645166     *;
 
645167     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
645168     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
645169     if _ITER_ eq 27 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 27 then do;
645170     output;
MPRINT(EM_DIAGRAM):   output;
645171     stop;
MPRINT(EM_DIAGRAM):   stop;
645172     end;
MPRINT(EM_DIAGRAM):   end;
645173     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 28 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 528
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
645174     *;
645175     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
645176     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
645177     if _ITER_ eq 27 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 27 and _NAME_ eq "OVERALL" then do;
645178     output;
MPRINT(EM_DIAGRAM):   output;
645179     stop;
MPRINT(EM_DIAGRAM):   stop;
645180     end;
MPRINT(EM_DIAGRAM):   end;
645181     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 56 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645182     *;
MPRINT(EM_DIAGRAM):    *;
645183     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
645184     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
645184   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
645185     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
645186     var _iter_ _aic_ _averr_ _misc_
645187     _vaverr_ _vmisc_
645188     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
645189     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 559.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645190     title9;
MPRINT(EM_DIAGRAM):   title9;
645191     title10;
MPRINT(EM_DIAGRAM):   title10;
645192     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
645193     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
645194     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
645195     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
645196     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
645197     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
645198     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
645199     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645200     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
645201     ;
MPRINT(EM_DIAGRAM):   ;
645202     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
645203     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
645204     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
645205     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
645206     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
645207     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
645208     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
645209     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
645210     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
645211     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
645212     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 12 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645213     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
645214     ;
MPRINT(EM_DIAGRAM):   ;
645215     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_ESTDS;
645216     set EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_BESTDS;
645217     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645218     *;
MPRINT(EM_DIAGRAM):    *;
645219     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
645220     validdata=EMWS8.Meta_VALIDATE
645221     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
645222     *;
MPRINT(EM_DIAGRAM):   *;
645223     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
645224     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
645225     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
645226     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
645227     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
645228     target DepVar / level=NOMINAL id=DepVar
645229     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
645230     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645231     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
645232     ;
MPRINT(EM_DIAGRAM):   ;
645233     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645234     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
645235     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
645236     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
645237     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
645238     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
645239     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
645240     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
645241     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
645242     Hidden 6 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=SOFTMAX;
645243     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
645244     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
645245     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
645246     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645247     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
645248     ;
MPRINT(EM_DIAGRAM):   ;
645249     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645250     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
645251     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
645252     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
645253     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
645254     Hidden 6 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=LOG;
645255     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
645256     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
645257     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
645258     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645259     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
645260     ;
MPRINT(EM_DIAGRAM):   ;
645261     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645262     Hidden 6 / id = H3x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=LOG;
645263     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
645264     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
645265     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
645266     *;
MPRINT(EM_DIAGRAM):   *;
645267     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
645268     *;
MPRINT(EM_DIAGRAM):   *;
645269     initial
645270     inest = EMWS8.AutoNeural11_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural11_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
645271     ;
MPRINT(EM_DIAGRAM):   ;
645272     *;
MPRINT(EM_DIAGRAM):   *;
645273     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
645274     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
645274   ! Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
645275     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural11_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 913 variables.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
MPRINT(EM_DIAGRAM):   *;
645276     tech = Default
645277     inest = EMWS8.AutoNeural11_ESTDS bylabel
645278     ;
645279     *;
645280     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
645281     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
645281   ! Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=881
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 913 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
645282     train estiter=1 outest=_anest outfit=_anfit maxtime=881 maxiter=50
MPRINT(EM_DIAGRAM):   run;
645283     tech = Default;
645284     ;
645285     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           55.66 seconds
      cpu time            55.28 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 560.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           55.66 seconds
      cpu time            55.28 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
645286     *;
645287     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
645288     var _iter_ _aic_ _averr_ _misc_
645289     _vaverr_ _vmisc_
645290     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
645291     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 561.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645292     *------------------------------------------------------------*;
645293     * Extract best iteration;
645294     ;
645295     *------------------------------------------------------------*;
645296     %global _iter;
645297     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
645298     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
645299     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
645300     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
645301     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
645302     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
645303     end;
MPRINT(EM_DIAGRAM):   end;
645304     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
645305     *;
 
645306     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
645307     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
645308     if _ITER_ eq 10 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 10 then do;
645309     output;
MPRINT(EM_DIAGRAM):   output;
645310     stop;
MPRINT(EM_DIAGRAM):   stop;
645311     end;
MPRINT(EM_DIAGRAM):   end;
645312     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 913
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
645313     *;
645314     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
645315     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
645316     if _ITER_ eq 10 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 10 and _NAME_ eq "OVERALL" then do;
645317     output;
MPRINT(EM_DIAGRAM):   output;
645318     stop;
MPRINT(EM_DIAGRAM):   stop;
645319     end;
MPRINT(EM_DIAGRAM):   end;
645320     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
645321     *;
MPRINT(EM_DIAGRAM):    *;
645322     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
645323     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
645323   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
645324     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
645325     var _iter_ _aic_ _averr_ _misc_
645326     _vaverr_ _vmisc_
645327     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
645328     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 562.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645329     title9;
MPRINT(EM_DIAGRAM):   title9;
645330     title10;
MPRINT(EM_DIAGRAM):   title10;
645331     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
645332     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
645333     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
645334     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645335     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
645336     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
645337     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
645338     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
645339     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
645340     ;
MPRINT(EM_DIAGRAM):   ;
645341     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
645342     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
645343     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
645344     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
645345     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
645346     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
645347     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
645348     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645349     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
645350     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
645351     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 13 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645352     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
645353     ;
MPRINT(EM_DIAGRAM):   ;
645354     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_ESTDS;
645355     set EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_BESTDS;
645356     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645357     *;
MPRINT(EM_DIAGRAM):    *;
645358     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
645359     validdata=EMWS8.Meta_VALIDATE
645360     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
645361     *;
MPRINT(EM_DIAGRAM):   *;
645362     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
645363     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
645364     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
645365     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
645366     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
645367     target DepVar / level=NOMINAL id=DepVar
645368     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
645369     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645370     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
645371     ;
MPRINT(EM_DIAGRAM):   ;
645372     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645373     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
645374     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
645375     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
645376     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
645377     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
645378     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
645379     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
645380     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
645381     Hidden 6 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=SOFTMAX;
645382     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
645383     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
645384     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
645385     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645386     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
645387     ;
MPRINT(EM_DIAGRAM):   ;
645388     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645389     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
645390     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
645391     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
645392     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
645393     Hidden 6 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=LOG;
645394     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
645395     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
645396     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
645397     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645398     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
645399     ;
MPRINT(EM_DIAGRAM):   ;
645400     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645401     Hidden 6 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SINE;
645402     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
645403     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
645404     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
645405     *;
MPRINT(EM_DIAGRAM):   *;
645406     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
645407     *;
MPRINT(EM_DIAGRAM):   *;
645408     initial
645409     inest = EMWS8.AutoNeural11_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural11_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
645410     ;
MPRINT(EM_DIAGRAM):   ;
645411     *;
MPRINT(EM_DIAGRAM):   *;
645412     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
645413     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
645413   ! Search # 3 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
645414     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural11_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 913 variables.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
MPRINT(EM_DIAGRAM):   *;
645415     tech = Default
645416     inest = EMWS8.AutoNeural11_ESTDS bylabel
645417     ;
645418     *;
645419     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
645420     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
645420   ! Search # 3 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=867
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 913 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
645421     train estiter=1 outest=_anest outfit=_anfit maxtime=867 maxiter=50
MPRINT(EM_DIAGRAM):   run;
645422     tech = Default;
645423     ;
645424     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           47.08 seconds
      cpu time            46.84 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 563.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           47.09 seconds
      cpu time            46.84 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
645425     *;
645426     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
645427     var _iter_ _aic_ _averr_ _misc_
645428     _vaverr_ _vmisc_
645429     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
645430     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 564.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645431     *------------------------------------------------------------*;
645432     * Extract best iteration;
645433     ;
645434     *------------------------------------------------------------*;
645435     %global _iter;
645436     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
645437     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
645438     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
645439     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
645440     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
645441     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
645442     end;
MPRINT(EM_DIAGRAM):   end;
645443     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
645444     *;
 
645445     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
645446     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
645447     if _ITER_ eq 3 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 then do;
645448     output;
MPRINT(EM_DIAGRAM):   output;
645449     stop;
MPRINT(EM_DIAGRAM):   stop;
645450     end;
MPRINT(EM_DIAGRAM):   end;
645451     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 913
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
645452     *;
645453     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
645454     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
645455     if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
645456     output;
MPRINT(EM_DIAGRAM):   output;
645457     stop;
MPRINT(EM_DIAGRAM):   stop;
645458     end;
MPRINT(EM_DIAGRAM):   end;
645459     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645460     *;
MPRINT(EM_DIAGRAM):    *;
645461     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
645462     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
645462   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
645463     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
645464     var _iter_ _aic_ _averr_ _misc_
645465     _vaverr_ _vmisc_
645466     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
645467     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 565.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645468     title9;
MPRINT(EM_DIAGRAM):   title9;
645469     title10;
MPRINT(EM_DIAGRAM):   title10;
645470     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
645471     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
645472     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
645473     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645474     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
645475     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
645476     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
645477     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
645478     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
645479     ;
MPRINT(EM_DIAGRAM):   ;
645480     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
645481     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
645482     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
645483     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
645484     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
645485     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
645486     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
645487     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645488     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
645489     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
645490     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 14 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
645491     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
645492     ;
MPRINT(EM_DIAGRAM):   ;
645493     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_ESTDS;
645494     set EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_BESTDS;
645495     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645496     *;
MPRINT(EM_DIAGRAM):    *;
645497     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
645498     validdata=EMWS8.Meta_VALIDATE
645499     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
645500     *;
MPRINT(EM_DIAGRAM):   *;
645501     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
645502     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
645503     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
645504     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
645505     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
645506     target DepVar / level=NOMINAL id=DepVar
645507     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
645508     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645509     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
645510     ;
MPRINT(EM_DIAGRAM):   ;
645511     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645512     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
645513     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
645514     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
645515     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
645516     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
645517     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
645518     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
645519     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
645520     Hidden 6 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=SOFTMAX;
645521     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
645522     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
645523     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
645524     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645525     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
645526     ;
MPRINT(EM_DIAGRAM):   ;
645527     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645528     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
645529     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
645530     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
645531     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
645532     Hidden 6 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=LOG;
645533     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
645534     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
645535     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
645536     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645537     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
645538     ;
MPRINT(EM_DIAGRAM):   ;
645539     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645540     Hidden 6 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SOFTMAX;
645541     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
645542     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
645543     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
645544     *;
MPRINT(EM_DIAGRAM):   *;
645545     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
645546     *;
MPRINT(EM_DIAGRAM):   *;
645547     initial
645548     inest = EMWS8.AutoNeural11_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural11_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
645549     ;
MPRINT(EM_DIAGRAM):   ;
645550     *;
MPRINT(EM_DIAGRAM):   *;
645551     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
645552     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
645552   ! Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
645553     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural11_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 900 variables.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
MPRINT(EM_DIAGRAM):   *;
645554     tech = Default
645555     inest = EMWS8.AutoNeural11_ESTDS bylabel
645556     ;
645557     *;
645558     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
645559     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
645559   ! Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=855
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 900 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
645560     train estiter=1 outest=_anest outfit=_anfit maxtime=855 maxiter=50
MPRINT(EM_DIAGRAM):   run;
645561     tech = Default;
645562     ;
645563     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           56.66 seconds
      cpu time            56.06 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 566.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           56.67 seconds
      cpu time            56.06 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
645564     *;
645565     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
645566     var _iter_ _aic_ _averr_ _misc_
645567     _vaverr_ _vmisc_
645568     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
645569     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 567.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645570     *------------------------------------------------------------*;
645571     * Extract best iteration;
645572     ;
645573     *------------------------------------------------------------*;
645574     %global _iter;
645575     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
645576     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
645577     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
645578     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
645579     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
645580     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
645581     end;
MPRINT(EM_DIAGRAM):   end;
645582     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
645583     *;
 
645584     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
645585     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
645586     if _ITER_ eq 20 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 20 then do;
645587     output;
MPRINT(EM_DIAGRAM):   output;
645588     stop;
MPRINT(EM_DIAGRAM):   stop;
645589     end;
MPRINT(EM_DIAGRAM):   end;
645590     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 900
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
645591     *;
645592     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
645593     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
645594     if _ITER_ eq 20 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 20 and _NAME_ eq "OVERALL" then do;
645595     output;
MPRINT(EM_DIAGRAM):   output;
645596     stop;
MPRINT(EM_DIAGRAM):   stop;
645597     end;
MPRINT(EM_DIAGRAM):   end;
645598     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 42 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
645599     *;
MPRINT(EM_DIAGRAM):    *;
645600     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
645601     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
645601   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
645602     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
645603     var _iter_ _aic_ _averr_ _misc_
645604     _vaverr_ _vmisc_
645605     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
645606     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 568.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645607     title9;
MPRINT(EM_DIAGRAM):   title9;
645608     title10;
MPRINT(EM_DIAGRAM):   title10;
645609     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
645610     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
645611     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
645612     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645613     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
645614     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
645615     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
645616     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645617     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
645618     ;
MPRINT(EM_DIAGRAM):   ;
645619     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
645620     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
645621     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
645622     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
645623     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
645624     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
645625     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
645626     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
645627     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
645628     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
645629     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 15 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645630     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
645631     set WORK.SAVEDS_AUTONEUR_1B29UCF;
MPRINT(EM_DIAGRAM):   set WORK.SAVEDS_AUTONEUR_1B29UCF;
645632     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.SAVEDS_AUTONEUR_1B29UCF.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645633     *;
MPRINT(EM_DIAGRAM):    *;
645634     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
645635     validdata=EMWS8.Meta_VALIDATE
645636     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
645637     *;
MPRINT(EM_DIAGRAM):   *;
645638     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
645639     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
645640     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
645641     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
645642     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
645643     target DepVar / level=NOMINAL id=DepVar
645644     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
645645     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645646     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
645647     ;
MPRINT(EM_DIAGRAM):   ;
645648     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645649     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
645650     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
645651     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
645652     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
645653     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
645654     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
645655     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
645656     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
645657     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645658     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
645659     ;
MPRINT(EM_DIAGRAM):   ;
645660     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645661     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
645662     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
645663     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
645664     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
645665     *;
MPRINT(EM_DIAGRAM):   *;
645666     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
645667     *;
MPRINT(EM_DIAGRAM):   *;
645668     initial
645669     inest = EMWS8.AutoNeural11_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural11_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
645670     ;
MPRINT(EM_DIAGRAM):   ;
645671     *;
MPRINT(EM_DIAGRAM):   *;
645672     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
645673     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
645673   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Prelim";
645674     prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural11_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 490 variables.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
MPRINT(EM_DIAGRAM):   *;
645675     tech = Default
645676     inest = EMWS8.AutoNeural11_ESTDS bylabel
645677     ;
645678     *;
645679     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
645680     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
645680   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=841
maxiter=5 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 5 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 8 observations and 490 variables.
NOTE: The data set WORK._ANFIT has 14 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
645681     train estiter=1 outest=_anest outfit=_anfit maxtime=841 maxiter=5
MPRINT(EM_DIAGRAM):   run;
645682     tech = Default;
645683     ;
645684     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           1.49 seconds
      cpu time            1.27 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 569.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.50 seconds
      cpu time            1.29 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
645685     *;
645686     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
645687     var _iter_ _aic_ _averr_ _misc_
645688     _vaverr_ _vmisc_
645689     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
645690     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 570.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645691     *------------------------------------------------------------*;
645692     * Extract best iteration;
645693     ;
645694     *------------------------------------------------------------*;
645695     %global _iter;
645696     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
645697     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
645698     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
645699     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
645700     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
645701     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
645702     end;
MPRINT(EM_DIAGRAM):   end;
645703     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
645704     *;
 
645705     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
645706     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
645707     if _ITER_ eq 1 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 then do;
645708     output;
MPRINT(EM_DIAGRAM):   output;
645709     stop;
MPRINT(EM_DIAGRAM):   stop;
645710     end;
MPRINT(EM_DIAGRAM):   end;
645711     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
645712     *;
645713     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
645714     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
645715     if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
645716     output;
MPRINT(EM_DIAGRAM):   output;
645717     stop;
MPRINT(EM_DIAGRAM):   stop;
645718     end;
MPRINT(EM_DIAGRAM):   end;
645719     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645720     *;
MPRINT(EM_DIAGRAM):    *;
645721     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
645722     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
645722   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
645723     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
645724     var _iter_ _aic_ _averr_ _misc_
645725     _vaverr_ _vmisc_
645726     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
645727     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 571.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645728     title9;
MPRINT(EM_DIAGRAM):   title9;
645729     title10;
MPRINT(EM_DIAGRAM):   title10;
645730     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
645731     ;
MPRINT(EM_DIAGRAM):   ;
645732     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
645733     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
645734     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
645735     _func_ = "";
MPRINT(EM_DIAGRAM):   _func_ = "";
645736     _status_ = "Final";
MPRINT(EM_DIAGRAM):   _status_ = "Final";
645737     _step_ = "";
MPRINT(EM_DIAGRAM):   _step_ = "";
645738     _index_ = 5;
MPRINT(EM_DIAGRAM):   _index_ = 5;
645739     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645740     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
645741     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
645742     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 16 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
645743     title9 " ";
MPRINT(EM_DIAGRAM):    title9 " ";
645744     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_finaltrainhistory_title
645744   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Final Training History";
645745     proc print data=EMWS8.AutoNeural11_HISTORY noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_HISTORY noobs;
645746     var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
645747     _vaverr_ _vmisc_
645748     ;
MPRINT(EM_DIAGRAM):   var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
_vaverr_ _vmisc_ ;
645749     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: The PROCEDURE PRINT printed page 572.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645750     data work.keep_history;
MPRINT(EM_DIAGRAM):   data work.keep_history;
645751     set EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY;
645752     if _status_='keep';
MPRINT(EM_DIAGRAM):   if _status_='keep';
645753     if _func_='DIRECT' then neurons=0;
MPRINT(EM_DIAGRAM):   if _func_='DIRECT' then neurons=0;
645754     else neurons=6;
MPRINT(EM_DIAGRAM):   else neurons=6;
645755     label neurons="%sysfunc(sasmsg(sashelp.dmine,
645755   ! rpt_numberneurons_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label neurons= "Number of Neurons";
645756     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: The data set WORK.KEEP_HISTORY has 2 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645757     title8 " ";
MPRINT(EM_DIAGRAM):   title8 " ";
645758     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_finalmodel_title  ,
645758   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Final Model";
645759     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_stopping_title  ,
645759   ! NOQUOTE, %nrbquote(Termination criteria were satisfied: overfitting
645759   ! based on _VMISC_)))";
MPRINT(EM_DIAGRAM):   title10 "Stopping: Termination criteria were satisfied:
overfitting based on _VMISC_";
645760     proc print data=work.keep_history noobs;
MPRINT(EM_DIAGRAM):   proc print data=work.keep_history noobs;
645761     var _func_ _averr_
645762     _vaverr_
645763     neurons;
MPRINT(EM_DIAGRAM):   var _func_ _averr_ _vaverr_ neurons;
645764     sum neurons;
MPRINT(EM_DIAGRAM):   sum neurons;
645765     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.KEEP_HISTORY.
NOTE: The PROCEDURE PRINT printed page 573.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645766     title8;
MPRINT(EM_DIAGRAM):   title8;
645767     title9;
MPRINT(EM_DIAGRAM):   title9;
645768     title10;
MPRINT(EM_DIAGRAM):   title10;
645769     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645770     * AutoNeural Final Network;
MPRINT(EM_DIAGRAM):   * AutoNeural Final Network;
645771     ;
MPRINT(EM_DIAGRAM):   ;
645772     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645773     *;
MPRINT(EM_DIAGRAM):   *;
645774     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
645775     validdata=EMWS8.Meta_VALIDATE
645776     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
645777     *;
MPRINT(EM_DIAGRAM):   *;
645778     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
645779     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
645780     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
645781     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
645782     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
645783     target DepVar / level=NOMINAL id=DepVar
645784     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
645785     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645786     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
645787     ;
MPRINT(EM_DIAGRAM):   ;
645788     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645789     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
645790     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
645791     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
645792     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
645793     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
645794     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
645795     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
645796     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
645797     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645798     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
645799     ;
MPRINT(EM_DIAGRAM):   ;
645800     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645801     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
645802     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
645803     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
645804     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
645805     *;
MPRINT(EM_DIAGRAM):   *;
645806     initial inest= EMWS8.AutoNeural11_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest= EMWS8.AutoNeural11_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
645807     train tech=none;
MPRINT(EM_DIAGRAM):   train tech=none;
NOTE: No optimization performed.
645808     code
645808   ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\SCO
645808   ! RECODE.sas"
645809     group=AutoNeural11
645810     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\SCORECODE.sas"
 group=AutoNeural11 ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\SCORECODE.sas
      opened.
645811     ;
MPRINT(EM_DIAGRAM):   ;
645812     code
645812   ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\RES
645812   ! IDUALSCORECODE.sas"
645813     group=AutoNeural11
645814     residual
645815     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\RESIDUALSCOREC
ODE.sas" group=AutoNeural11 residual ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\RESIDUALSCOREC
      ODE.sas opened.
645816     ;
MPRINT(EM_DIAGRAM):   ;
645817     score data=EMWS8.Meta_TRAIN out=_NULL_
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
645818     outfit=WORK.FIT1
645819     role=TRAIN
645820     outkey=EMWS8.AutoNeural11_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Meta_TRAIN out=_NULL_ outfit=WORK.FIT1
role=TRAIN outkey=EMWS8.AutoNeural11_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL11_OUTKEY has 68 observations and 8
      variables.
NOTE: The data set EMWS8.META_TRAIN has . observations and 45 variables.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
645821     score data=EMWS8.Meta_VALIDATE out=_NULL_
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
645822     outfit=WORK.FIT2
645823     outkey=EMWS8.AutoNeural11_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Meta_VALIDATE out=_NULL_
outfit=WORK.FIT2 outkey=EMWS8.AutoNeural11_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL11_OUTKEY has 68 observations and 8
      variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
645824     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.23 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.26 seconds
      cpu time            0.25 seconds
 
 
645825     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
645826     merge WORK.FIT1 WORK.FIT2;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2;
645827     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 2 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645828     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
645829     * Generate Weights Plotting data set;
MPRINT(EM_DIAGRAM):   * Generate Weights Plotting data set;
645830     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
The SAS System
 
645831     data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_
645831   ! _averr_ _p_num_ where= (_type_ eq "PARMS"));
MPRINT(EM_DIAGRAM):   data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_
_obj_ _objerr_ _averr_ _p_num_ where= (_type_ eq "PARMS"));
645832     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
645833     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 482 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
645834     proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
645835     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
645836     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 482 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
645837     proc transpose data=tempweight out=EMWS8.AutoNeural11_WEIGHTS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight
out=EMWS8.AutoNeural11_WEIGHTS;
645838     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
645839     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS8.AUTONEURAL11_WEIGHTS has 480 observations and 3
      variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
645840     data EMWS8.AutoNeural11_WEIGHTS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_WEIGHTS;
645841     set EMWS8.AutoNeural11_WEIGHTS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_WEIGHTS;
645842     FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
MPRINT(EM_DIAGRAM):   FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
645843     TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
645844     WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
645845     if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
645846     label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  ,
645846   ! NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  ,
645846   ! NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  ,
645846   ! NOQUOTE))" WEIGHT =
645847        "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT
= "Weight";
645848     keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
645849     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 480 observations read from the data set
      EMWS8.AUTONEURAL11_WEIGHTS.
NOTE: The data set EMWS8.AUTONEURAL11_WEIGHTS has 475 observations and 4
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   * restore printing options;
MPRINT(EM_DIAGRAM):   ;
645850     * restore printing options;
645851     ;
645852     title10;
MPRINT(EM_DIAGRAM):   title10;
645853     options linesize=95;
MPRINT(EM_DIAGRAM):   options linesize=95;
645854     options pagesize=10000;
MPRINT(EM_DIAGRAM):   options pagesize=10000;
645855     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
645856     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
645857     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
MPRINT(EM_DIAGRAM):   *;
645858     *;
645859     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
645860     delete EM_AutoNeural11;
MPRINT(EM_DIAGRAM):   delete EM_AutoNeural11;
645861     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_AUTONEURAL11 (memtype=DATA).
645862     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
645863     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_HISTORY;
645864     set EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY;
645865     label _T_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainstep_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _T_ = "Training Step";
645866     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  ,
645866   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Training Iterations";
645867     _T_ = _N_ -1;
MPRINT(EM_DIAGRAM):   _T_ = _N_ -1;
645868     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set EMWS8.AUTONEURAL11_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 16 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "08.42 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                08.42 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O09ICX9U
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O09ICX9U new;
MPRINT(EM_DIAGRAM):   run;
645970     filename emflow
645970   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
645971     *------------------------------------------------------------*;
645972     * AutoNeural11: Scoring DATA data;
645973     *------------------------------------------------------------*;
645974     data EMWS8.AutoNeural11_TRAIN
645975     / view=EMWS8.AutoNeural11_TRAIN
645976     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_TRAIN / view=EMWS8.AutoNeural11_TRAIN ;
645977     set EMWS8.Meta_TRAIN
645978     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
645979     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas.
645980    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
645981    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
645982    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
645983    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
645984    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
645985    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
645986    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
645987    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
645988    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
645989    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
645990    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
645991    +LENGTH _WARN_ $4
645992    +      F_DepVar  $ 12
645993    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
645994    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
645995    +
645996    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
645997    +
645998    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
645999    +
646000    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
646001    +
646002    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
646003    +
646004    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
646005    +
646006    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
646007    +
646008    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
646009    +
646010    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
646011    +
646012    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
646013    +
646014    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
646015    +
646016    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
646017    +
646018    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
646019    +
646020    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
646021    +
646022    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
646023    +
646024    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
646025    +
646026    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
646027    +
646028    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
646029    +
646030    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
646031    +
646032    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
646033    +
646034    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
646035    +
646036    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
646037    +
646038    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
646039    +
646040    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
646041    +
646042    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
646043    +
646044    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
646045    +
646046    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
646047    +
646048    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
646049    +
646050    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
646051    +
646052    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
646053    +
646054    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
646055    +
646056    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
646057    +
646058    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
646059    +
646060    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
646061    +
646062    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
646063    +
646064    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
646065    +
646066    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
646067    +
646068    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
646069    +
646070    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
646071    +
646072    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
646073    +
646074    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
646075    +
646076    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
646077    +
646078    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
646079    +
646080    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
646081    +
646082    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
646083    +
646084    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
646085    +
646086    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
646087    +
646088    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
646089    +
646090    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
646091    +
646092    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
646093    +
646094    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
646095    +
646096    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
646097    +
646098    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
646099    +
646100    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
646101    +
646102    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
646103    +
646104    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
646105    +
646106    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
646107    +
646108    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
646109    +
646110    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
646111    +
646112    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
646113    +
646114    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
646115    +
646116    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
646117    +
646118    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
646119    +
646120    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
646121    +
646122    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
646123    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
646124    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
646125    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
646126    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
646127    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646128    +end;
MPRINT(EM_DIAGRAM):   end;
646129    +else do;
MPRINT(EM_DIAGRAM):   else do;
646130    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
646131    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
646132    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
646133    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
646134    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
646135    +   end;
MPRINT(EM_DIAGRAM):   end;
646136    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
646137    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
646138    +   end;
MPRINT(EM_DIAGRAM):   end;
646139    +   else do;
MPRINT(EM_DIAGRAM):   else do;
646140    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
646141    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
646142    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646143    +   end;
MPRINT(EM_DIAGRAM):   end;
646144    +end;
MPRINT(EM_DIAGRAM):   end;
646145    +
646146    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
646147    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
646148    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
646149    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
646150    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
646151    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646152    +end;
MPRINT(EM_DIAGRAM):   end;
646153    +else do;
MPRINT(EM_DIAGRAM):   else do;
646154    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
646155    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
646156    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
646157    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
646158    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
646159    +   end;
MPRINT(EM_DIAGRAM):   end;
646160    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
646161    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
646162    +   end;
MPRINT(EM_DIAGRAM):   end;
646163    +   else do;
MPRINT(EM_DIAGRAM):   else do;
646164    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
646165    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
646166    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646167    +   end;
MPRINT(EM_DIAGRAM):   end;
646168    +end;
MPRINT(EM_DIAGRAM):   end;
646169    +
646170    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
646171    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
646172    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
646173    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
646174    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
646175    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646176    +end;
MPRINT(EM_DIAGRAM):   end;
646177    +else do;
MPRINT(EM_DIAGRAM):   else do;
646178    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
646179    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
646180    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
646181    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
646182    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
646183    +   end;
MPRINT(EM_DIAGRAM):   end;
646184    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
646185    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
646186    +   end;
MPRINT(EM_DIAGRAM):   end;
646187    +   else do;
MPRINT(EM_DIAGRAM):   else do;
646188    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
646189    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
646190    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646191    +   end;
MPRINT(EM_DIAGRAM):   end;
646192    +end;
MPRINT(EM_DIAGRAM):   end;
646193    +
646194    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
646195    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
646196    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
646197    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
646198    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
646199    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646200    +end;
MPRINT(EM_DIAGRAM):   end;
646201    +else do;
MPRINT(EM_DIAGRAM):   else do;
646202    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
646203    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
646204    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
646205    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
646206    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
646207    +   end;
MPRINT(EM_DIAGRAM):   end;
646208    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
646209    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
646210    +   end;
MPRINT(EM_DIAGRAM):   end;
646211    +   else do;
MPRINT(EM_DIAGRAM):   else do;
646212    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
646213    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
646214    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646215    +   end;
MPRINT(EM_DIAGRAM):   end;
646216    +end;
MPRINT(EM_DIAGRAM):   end;
646217    +
646218    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
646219    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
646220    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
646221    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
646222    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
646223    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646224    +end;
MPRINT(EM_DIAGRAM):   end;
646225    +else do;
MPRINT(EM_DIAGRAM):   else do;
646226    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
646227    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
646228    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
646229    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
646230    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
646231    +   end;
MPRINT(EM_DIAGRAM):   end;
646232    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
646233    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
646234    +   end;
MPRINT(EM_DIAGRAM):   end;
646235    +   else do;
MPRINT(EM_DIAGRAM):   else do;
646236    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
646237    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
646238    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646239    +   end;
MPRINT(EM_DIAGRAM):   end;
646240    +end;
MPRINT(EM_DIAGRAM):   end;
646241    +
646242    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
646243    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
646244    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
646245    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
646246    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
646247    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646248    +end;
MPRINT(EM_DIAGRAM):   end;
646249    +else do;
MPRINT(EM_DIAGRAM):   else do;
646250    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
646251    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
646252    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
646253    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
646254    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
646255    +   end;
MPRINT(EM_DIAGRAM):   end;
646256    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
646257    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
646258    +   end;
MPRINT(EM_DIAGRAM):   end;
646259    +   else do;
MPRINT(EM_DIAGRAM):   else do;
646260    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
646261    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
646262    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646263    +   end;
MPRINT(EM_DIAGRAM):   end;
646264    +end;
MPRINT(EM_DIAGRAM):   end;
646265    +
646266    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
646267    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
646268    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
646269    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
646270    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
646271    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646272    +end;
MPRINT(EM_DIAGRAM):   end;
646273    +else do;
MPRINT(EM_DIAGRAM):   else do;
646274    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
646275    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
646276    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
646277    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
646278    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
646279    +   end;
MPRINT(EM_DIAGRAM):   end;
646280    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
646281    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
646282    +   end;
MPRINT(EM_DIAGRAM):   end;
646283    +   else do;
MPRINT(EM_DIAGRAM):   else do;
646284    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
646285    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
646286    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646287    +   end;
MPRINT(EM_DIAGRAM):   end;
646288    +end;
MPRINT(EM_DIAGRAM):   end;
646289    +
646290    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
646291    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
646292    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
646293    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
646294    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
646295    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
646296    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
646297    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
646298    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
646299    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
646300    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
646301    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
646302    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
646303    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646304    +end;
MPRINT(EM_DIAGRAM):   end;
646305    +else do;
MPRINT(EM_DIAGRAM):   else do;
646306    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
646307    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
646308    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
646309    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
646310    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
646311    +   end;
MPRINT(EM_DIAGRAM):   end;
646312    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
646313    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
646314    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
646315    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
646316    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
646317    +   end;
MPRINT(EM_DIAGRAM):   end;
646318    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
646319    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
646320    +   end;
MPRINT(EM_DIAGRAM):   end;
646321    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
646322    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
646323    +   end;
MPRINT(EM_DIAGRAM):   end;
646324    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
646325    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
646326    +   end;
MPRINT(EM_DIAGRAM):   end;
646327    +   else do;
MPRINT(EM_DIAGRAM):   else do;
646328    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
646329    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
646330    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
646331    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
646332    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
646333    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646334    +   end;
MPRINT(EM_DIAGRAM):   end;
646335    +end;
MPRINT(EM_DIAGRAM):   end;
646336    +
646337    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
646338    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
646339    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
646340    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
646341    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
646342    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
646343    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
646344    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
646345    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
646346    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
646347    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
646348    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
646349    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
646350    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
646351    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646352    +end;
MPRINT(EM_DIAGRAM):   end;
646353    +else do;
MPRINT(EM_DIAGRAM):   else do;
646354    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
646355    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
646356    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
646357    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
646358    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
646359    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
646360    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
646361    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
646362    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
646363    +         end;
MPRINT(EM_DIAGRAM):   end;
646364    +         else do;
MPRINT(EM_DIAGRAM):   else do;
646365    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
646366    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
646367    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
646368    +            end;
MPRINT(EM_DIAGRAM):   end;
646369    +         end;
MPRINT(EM_DIAGRAM):   end;
646370    +      end;
MPRINT(EM_DIAGRAM):   end;
646371    +      else do;
MPRINT(EM_DIAGRAM):   else do;
646372    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
646373    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
646374    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
646375    +         end;
MPRINT(EM_DIAGRAM):   end;
646376    +      end;
MPRINT(EM_DIAGRAM):   end;
646377    +   end;
MPRINT(EM_DIAGRAM):   end;
646378    +   else do;
MPRINT(EM_DIAGRAM):   else do;
646379    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
646380    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
646381    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
646382    +      end;
MPRINT(EM_DIAGRAM):   end;
646383    +      else do;
MPRINT(EM_DIAGRAM):   else do;
646384    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
646385    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
646386    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
646387    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
646388    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
646389    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
646390    +         end;
MPRINT(EM_DIAGRAM):   end;
646391    +      end;
MPRINT(EM_DIAGRAM):   end;
646392    +   end;
MPRINT(EM_DIAGRAM):   end;
646393    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
646394    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
646395    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
646396    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
646397    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
646398    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
646399    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646400    +   end;
MPRINT(EM_DIAGRAM):   end;
646401    +end;
MPRINT(EM_DIAGRAM):   end;
646402    +
646403    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646404    +*** Checking missing input Interval
646405    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
646406    +
646407    +IF NMISS(
646408    +   AcceptedCmpTotal ,
646409    +   Age ,
646410    +   Frq ,
646411    +   Income ,
646412    +   Kidhome ,
646413    +   Mnt ,
646414    +   MntFishProducts ,
646415    +   MntFruits ,
646416    +   MntGoldProds ,
646417    +   MntMeatProducts ,
646418    +   MntSweetProducts ,
646419    +   MntWines ,
646420    +   MonthsAsCustomer ,
646421    +   NumCatalogPurchases ,
646422    +   NumDealsPurchases ,
646423    +   NumDistPurchases ,
646424    +   NumStorePurchases ,
646425    +   NumWebPurchases ,
646426    +   NumWebVisitsMonth ,
646427    +   RFMstat ,
646428    +   RMntFrq ,
646429    +   Recency ,
646430    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
646431    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
646432    +
646433    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646434    +END;
MPRINT(EM_DIAGRAM):   END;
646435    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646436    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
646437    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646438    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
646439    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
646440    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
646441    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
646442    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
646443    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
646444    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
646445    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
646446    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
646447    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
646448    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
646449    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
646450    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
646451    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
646452    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
646453    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
646454    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
646455    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
646456    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
646457    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
646458    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
646459    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
646460    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
646461    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
646462    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
646463    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
646464    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
646465    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
646466    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
646467    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
646468    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
646469    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
646470    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
646471    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
646472    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
646473    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
646474    +END;
MPRINT(EM_DIAGRAM):   END;
646475    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
646476    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
646477    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
646478    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
646479    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
646480    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
646481    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
646482    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
646483    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
646484    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
646485    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
646486    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
646487    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
646488    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
646489    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
646490    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
646491    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
646492    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
646493    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
646494    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
646495    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
646496    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
646497    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
646498    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
646499    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
646500    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
646501    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
646502    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
646503    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
646504    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
646505    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
646506    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
646507    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
646508    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
646509    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
646510    +   ELSE S_NumCatalogPurchases
646511    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
646512    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
646513    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
646514    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
646515    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
646516    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
646517    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
646518    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
646519    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
646520    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
646521    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
646522    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
646523    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
646524    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
646525    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
646526    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
646527    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
646528    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
646529    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
646530    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
646531    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
646532    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
646533    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
646534    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
646535    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
646536    +END;
MPRINT(EM_DIAGRAM):   END;
646537    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646538    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
646539    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646540    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646541    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
646542    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646543    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646544    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
646545    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646546    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
646547    +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
646548    +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
646549    +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
646550    +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
646551    +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
646552    +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
646553    +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
646554    +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
646555    +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
646556    +          +     0.89422627895323 * S_NumDealsPurchases
646557    +          +    -0.13304125929765 * S_NumDistPurchases
646558    +          +    -1.04568442570811 * S_NumStorePurchases
646559    +          +    -0.28677765126751 * S_NumWebPurchases
646560    +          +      1.2327638737509 * S_NumWebVisitsMonth
646561    +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
646562    +        S_RMntFrq  +    -0.86930969765816 * S_Recency
646563    +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 *
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 *
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts +
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 *
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines +
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases +
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases +
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases +
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 *
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
646564    +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
646565    +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
646566    +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
646567    +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
646568    +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
646569    +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
646570    +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
646571    +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
646572    +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
646573    +          +     0.04224590196535 * S_NumDealsPurchases
646574    +          +     0.76554742700113 * S_NumDistPurchases
646575    +          +    -0.49155496870812 * S_NumStorePurchases
646576    +          +     0.59606812744403 * S_NumWebPurchases
646577    +          +     1.86809286276405 * S_NumWebVisitsMonth
646578    +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
646579    +        S_RMntFrq  +    -2.09222283465666 * S_Recency
646580    +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 *
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 *
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts +
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 *
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines +
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases +
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases +
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases +
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 *
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
646581    +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
646582    +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
646583    +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
646584    +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
646585    +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
646586    +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
646587    +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
646588    +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
646589    +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
646590    +          +    -0.04866536993486 * S_NumDealsPurchases
646591    +          +    -0.53535979020214 * S_NumDistPurchases
646592    +          +     2.20634071253676 * S_NumStorePurchases
646593    +          +      0.6164564989007 * S_NumWebPurchases
646594    +          +    -0.43396314395263 * S_NumWebVisitsMonth
646595    +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
646596    +        S_RMntFrq  +     2.37293441098349 * S_Recency
646597    +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 *
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 *
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts +
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 *
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 *
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 *
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 *
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq +
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
646598    +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
646599    +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
646600    +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
646601    +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
646602    +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
646603    +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
646604    +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
646605    +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
646606    +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
646607    +          +     1.37461255707863 * S_NumDealsPurchases
646608    +          +    -0.17684775000818 * S_NumDistPurchases
646609    +          +    -0.62755623855535 * S_NumStorePurchases
646610    +          +    -1.46551649022657 * S_NumWebPurchases
646611    +          +     3.35784247878638 * S_NumWebVisitsMonth
646612    +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
646613    +        S_RMntFrq  +    -2.61971612923471 * S_Recency
646614    +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 *
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 *
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts +
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 *
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 *
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 *
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 *
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq +
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
646615    +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
646616    +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
646617    +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
646618    +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
646619    +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
646620    +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
646621    +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
646622    +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
646623    +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
646624    +          +    -0.76256677907121 * S_NumDealsPurchases
646625    +          +    -0.31591571751692 * S_NumDistPurchases
646626    +          +      0.0506832614089 * S_NumStorePurchases
646627    +          +      1.4636796923764 * S_NumWebPurchases
646628    +          +     0.37743519705036 * S_NumWebVisitsMonth
646629    +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
646630    +        S_RMntFrq  +     0.16854775832723 * S_Recency
646631    +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 *
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 *
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts +
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 *
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines +
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases +
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases +
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq +
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
646632    +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
646633    +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
646634    +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
646635    +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
646636    +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 +
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 *
HigherEducationBinary0 ;
646637    +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
646638    +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
646639    +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
646640    +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
646641    +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 +
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 *
HigherEducationBinary0 ;
646642    +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
646643    +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
646644    +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
646645    +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
646646    +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 *
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 +
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 *
HigherEducationBinary0 ;
646647    +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
646648    +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
646649    +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
646650    +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
646651    +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 +
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 *
HigherEducationBinary0 ;
646652    +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
646653    +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
646654    +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
646655    +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
646656    +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 *
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 +
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 *
HigherEducationBinary0 ;
646657    +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
646658    +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
646659    +        EducationGraduation  +    -0.37141290775302 * EducationMaster
646660    +          +     0.68641668264565 * Marital_StatusDivorced
646661    +          +    -0.81586871439732 * Marital_StatusMarried
646662    +          +     0.63758920518451 * Marital_StatusSingle
646663    +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle +
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation +
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced +
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle +
-1.07300023346175 * Marital_StatusTogether ;
646664    +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
646665    +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
646666    +        EducationGraduation  +     -0.4412391934844 * EducationMaster
646667    +          +     0.05137560133238 * Marital_StatusDivorced
646668    +          +    -2.24401993266209 * Marital_StatusMarried
646669    +          +     1.57359386216115 * Marital_StatusSingle
646670    +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 *
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 *
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 *
Marital_StatusTogether ;
646671    +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
646672    +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
646673    +        EducationGraduation  +     0.61492669859334 * EducationMaster
646674    +          +     -1.0649987815942 * Marital_StatusDivorced
646675    +          +     0.76065111692388 * Marital_StatusMarried
646676    +          +    -0.21694149754801 * Marital_StatusSingle
646677    +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle +
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 *
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 *
Marital_StatusTogether ;
646678    +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
646679    +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
646680    +        EducationGraduation  +     0.04208620358211 * EducationMaster
646681    +          +     2.02155453548328 * Marital_StatusDivorced
646682    +          +    -2.60190649735306 * Marital_StatusMarried
646683    +          +     1.09149388354927 * Marital_StatusSingle
646684    +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle +
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 *
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 *
Marital_StatusTogether ;
646685    +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
646686    +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
646687    +        EducationGraduation  +    -0.60853091001689 * EducationMaster
646688    +          +     0.66315970650309 * Marital_StatusDivorced
646689    +          +    -1.20476729758152 * Marital_StatusMarried
646690    +          +     0.56175027826397 * Marital_StatusSingle
646691    +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle +
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation +
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced +
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle +
-1.12798745445913 * Marital_StatusTogether ;
646692    +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
646693    +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
646694    +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
646695    +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
646696    +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
646697    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
646698    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
646699    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
646700    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
646701    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
646702    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
646703    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
646704    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
646705    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
646706    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
646707    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
646708    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
646709    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
646710    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
646711    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
646712    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
646713    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
646714    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
646715    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
646716    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
646717    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
646718    +END;
MPRINT(EM_DIAGRAM):   END;
646719    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
646720    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
646721    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
646722    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
646723    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
646724    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
646725    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
646726    +END;
MPRINT(EM_DIAGRAM):   END;
646727    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646728    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
646729    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646730    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
646731    +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
646732    +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
646733    +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
646734    +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
646735    +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
646736    +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
646737    +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
646738    +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
646739    +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
646740    +          +     1.50005927423985 * S_NumDealsPurchases
646741    +          +      0.5590536933569 * S_NumDistPurchases
646742    +          +    -0.61757824339318 * S_NumStorePurchases
646743    +          +     0.37259686538158 * S_NumWebPurchases
646744    +          +     2.59725437895564 * S_NumWebVisitsMonth
646745    +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
646746    +        S_RMntFrq  +    -2.38795796980324 * S_Recency
646747    +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 *
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 *
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts +
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 *
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 *
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 *
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 *
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq +
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
646748    +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
646749    +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
646750    +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
646751    +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
646752    +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
646753    +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
646754    +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
646755    +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
646756    +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
646757    +          +    -0.09282222088797 * S_NumDealsPurchases
646758    +          +     0.10726247938321 * S_NumDistPurchases
646759    +          +     -1.1235971458527 * S_NumStorePurchases
646760    +          +    -0.78304387839877 * S_NumWebPurchases
646761    +          +    -0.44139243179956 * S_NumWebVisitsMonth
646762    +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
646763    +        S_RMntFrq  +     2.19072220135069 * S_Recency
646764    +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 *
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 *
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts +
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 *
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 *
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 *
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 *
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq +
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
646765    +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
646766    +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
646767    +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
646768    +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
646769    +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
646770    +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
646771    +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
646772    +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
646773    +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
646774    +          +     0.35349185459988 * S_NumDealsPurchases
646775    +          +     0.06853677714859 * S_NumDistPurchases
646776    +          +    -1.47546012999338 * S_NumStorePurchases
646777    +          +     0.20926435398916 * S_NumWebPurchases
646778    +          +    -1.00535683639093 * S_NumWebVisitsMonth
646779    +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
646780    +        S_RMntFrq  +    -1.59138379954757 * S_Recency
646781    +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 *
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 *
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts +
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 *
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 *
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 *
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 *
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq +
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
646782    +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
646783    +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
646784    +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
646785    +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
646786    +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
646787    +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
646788    +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
646789    +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
646790    +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
646791    +          +      0.3873586120272 * S_NumDealsPurchases
646792    +          +     0.25911651157596 * S_NumDistPurchases
646793    +          +     1.58922489084287 * S_NumStorePurchases
646794    +          +     0.49041797743368 * S_NumWebPurchases
646795    +          +     -1.5425586871929 * S_NumWebVisitsMonth
646796    +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
646797    +        S_RMntFrq  +     1.03099569333498 * S_Recency
646798    +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 *
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 *
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts +
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 *
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 *
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 *
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 *
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq +
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
646799    +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
646800    +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
646801    +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
646802    +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
646803    +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
646804    +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
646805    +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
646806    +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
646807    +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
646808    +          +    -0.60830880287865 * S_NumDealsPurchases
646809    +          +      0.0745331267194 * S_NumDistPurchases
646810    +          +    -1.39472448256952 * S_NumStorePurchases
646811    +          +     1.95372179969087 * S_NumWebPurchases
646812    +          +    -0.63307356390404 * S_NumWebVisitsMonth
646813    +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
646814    +        S_RMntFrq  +    -0.29197897313114 * S_Recency
646815    +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome +
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 *
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts +
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 *
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 *
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 *
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 *
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq +
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
646816    +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
646817    +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
646818    +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
646819    +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
646820    +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 *
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 +
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 *
HigherEducationBinary0 ;
646821    +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
646822    +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
646823    +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
646824    +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
646825    +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 +
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 *
HigherEducationBinary0 ;
646826    +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
646827    +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
646828    +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
646829    +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
646830    +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 *
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 +
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 *
HigherEducationBinary0 ;
646831    +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
646832    +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
646833    +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
646834    +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
646835    +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 *
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 +
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 *
HigherEducationBinary0 ;
646836    +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
646837    +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
646838    +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
646839    +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
646840    +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 *
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 +
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 *
HigherEducationBinary0 ;
646841    +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
646842    +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
646843    +        EducationGraduation  +    -1.16900224373137 * EducationMaster
646844    +          +    -1.33377871643323 * Marital_StatusDivorced
646845    +          +    -0.87184228840898 * Marital_StatusMarried
646846    +          +     1.41223186340257 * Marital_StatusSingle
646847    +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle +
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 *
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 *
Marital_StatusTogether ;
646848    +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
646849    +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
646850    +        EducationGraduation  +     0.38341272155343 * EducationMaster
646851    +          +    -0.21479890935233 * Marital_StatusDivorced
646852    +          +     -0.0025459519579 * Marital_StatusMarried
646853    +          +     1.33900491702264 * Marital_StatusSingle
646854    +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle +
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 *
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 *
Marital_StatusTogether ;
646855    +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
646856    +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
646857    +        EducationGraduation  +     0.60739269725685 * EducationMaster
646858    +          +    -0.38307267471999 * Marital_StatusDivorced
646859    +          +     0.97088969451415 * Marital_StatusMarried
646860    +          +    -0.28578224473381 * Marital_StatusSingle
646861    +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle +
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 *
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 *
Marital_StatusTogether ;
646862    +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
646863    +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
646864    +        EducationGraduation  +     0.14160673378252 * EducationMaster
646865    +          +    -1.42229401093569 * Marital_StatusDivorced
646866    +          +      0.7234508382397 * Marital_StatusMarried
646867    +          +    -0.29062202974628 * Marital_StatusSingle
646868    +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle +
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 *
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 *
Marital_StatusTogether ;
646869    +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
646870    +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
646871    +        EducationGraduation  +     -0.7118631990538 * EducationMaster
646872    +          +    -0.99067637207205 * Marital_StatusDivorced
646873    +          +    -0.50245902142079 * Marital_StatusMarried
646874    +          +     0.54214494533793 * Marital_StatusSingle
646875    +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle +
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 *
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 *
Marital_StatusTogether ;
646876    +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
646877    +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
646878    +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
646879    +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
646880    +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
646881    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
646882    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
646883    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
646884    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
646885    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
646886    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
646887    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
646888    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
646889    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
646890    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
646891    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
646892    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
646893    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
646894    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
646895    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
646896    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
646897    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
646898    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
646899    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
646900    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
646901    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
646902    +END;
MPRINT(EM_DIAGRAM):   END;
646903    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
646904    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
646905    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
646906    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
646907    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
646908    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
646909    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
646910    +END;
MPRINT(EM_DIAGRAM):   END;
646911    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646912    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
646913    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646914    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
646915    +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
646916    +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
646917    +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 +
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 +
-2.45757278280195 * H1x1_6 ;
646918    +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
646919    +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
646920    +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 +
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 +
-2.28426391810485 * H1x1_6 ;
646921    +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
646922    +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
646923    +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 +
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 +
0.08021226539433 * H1x1_6 ;
646924    +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
646925    +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
646926    +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 +
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 +
-1.35359233519863 * H1x1_6 ;
646927    +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
646928    +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
646929    +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 +
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 +
-2.41187367604766 * H1x1_6 ;
646930    +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
646931    +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
646932    +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 +
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 +
0.21617396847163 * H1x1_6 ;
646933    +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
646934    +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
646935    +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
646936    +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 +
0.2606136576082 * H1x2_6 ;
646937    +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
646938    +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
646939    +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
646940    +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 +
-0.33816948355449 * H1x2_6 ;
646941    +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
646942    +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
646943    +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
646944    +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 *
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 +
-2.05648585275111 * H1x2_6 ;
646945    +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
646946    +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
646947    +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
646948    +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 +
0.10756694741742 * H1x2_6 ;
646949    +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
646950    +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
646951    +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
646952    +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 +
-0.52564497366659 * H1x2_6 ;
646953    +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
646954    +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
646955    +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
646956    +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 *
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 +
0.74493468449949 * H1x2_6 ;
646957    +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
646958    +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
646959    +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
646960    +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
646961    +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
646962    +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
646963    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
646964    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
646965    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
646966    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
646967    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
646968    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
646969    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
646970    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
646971    +END;
MPRINT(EM_DIAGRAM):   END;
646972    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
646973    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
646974    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
646975    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
646976    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
646977    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
646978    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
646979    +END;
MPRINT(EM_DIAGRAM):   END;
646980    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646981    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
646982    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646983    +
646984    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
646985    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
646986    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
646987    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
646988    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
646989    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
646990    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
646991    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
646992    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
646993    +end;
MPRINT(EM_DIAGRAM):   end;
646994    +else do;
MPRINT(EM_DIAGRAM):   else do;
646995    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
646996    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
646997    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
646998    +   end;
MPRINT(EM_DIAGRAM):   end;
646999    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
647000    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
647001    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
647002    +   end;
MPRINT(EM_DIAGRAM):   end;
647003    +   else do;
MPRINT(EM_DIAGRAM):   else do;
647004    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
647005    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
647006    +   end;
MPRINT(EM_DIAGRAM):   end;
647007    +end;
MPRINT(EM_DIAGRAM):   end;
647008    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
647009    +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
647010    +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
647011    +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 +
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 +
-3.8939011811129 * H2x1_6 ;
647012    +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
647013    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
647014    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
647015    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
647016    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
647017    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
647018    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
647019    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
647020    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
647021    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
647022    +END;
MPRINT(EM_DIAGRAM):   END;
647023    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
647024    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
647025    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
647026    +END;
MPRINT(EM_DIAGRAM):   END;
647027    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
647028    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
647029    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
647030    +END;
MPRINT(EM_DIAGRAM):   END;
647031    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
647032    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
647033    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
647034    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
647035    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
647036    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
647037    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
647038    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647039    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
647040    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647041    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
647042    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
647043    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
647044    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
647045    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
647046    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
647047    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
647048    +END;
MPRINT(EM_DIAGRAM):   END;
647049    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
647050    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
647051    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
647052    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
647053     run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL11_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
647054     quit;
647055     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
647056     filename emflow
647056   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
647057     *------------------------------------------------------------*;
647058     * AutoNeural11: Scoring VALIDATE data;
647059     *------------------------------------------------------------*;
647060     data EMWS8.AutoNeural11_VALIDATE
647061     / view=EMWS8.AutoNeural11_VALIDATE
647062     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_VALIDATE / view=EMWS8.AutoNeural11_VALIDATE ;
647063     set EMWS8.Meta_VALIDATE
647064     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
647065     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas.
647066    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
647067    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
647068    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
647069    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
647070    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
647071    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
647072    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
647073    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
647074    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
647075    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
647076    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
647077    +LENGTH _WARN_ $4
647078    +      F_DepVar  $ 12
647079    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
647080    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
647081    +
647082    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
647083    +
647084    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
647085    +
647086    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
647087    +
647088    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
647089    +
647090    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
647091    +
647092    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
647093    +
647094    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
647095    +
647096    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
647097    +
647098    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
647099    +
647100    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
647101    +
647102    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
647103    +
647104    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
647105    +
647106    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
647107    +
647108    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
647109    +
647110    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
647111    +
647112    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
647113    +
647114    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
647115    +
647116    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
647117    +
647118    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
647119    +
647120    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
647121    +
647122    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
647123    +
647124    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
647125    +
647126    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
647127    +
647128    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
647129    +
647130    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
647131    +
647132    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
647133    +
647134    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
647135    +
647136    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
647137    +
647138    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
647139    +
647140    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
647141    +
647142    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
647143    +
647144    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
647145    +
647146    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
647147    +
647148    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
647149    +
647150    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
647151    +
647152    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
647153    +
647154    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
647155    +
647156    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
647157    +
647158    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
647159    +
647160    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
647161    +
647162    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
647163    +
647164    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
647165    +
647166    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
647167    +
647168    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
647169    +
647170    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
647171    +
647172    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
647173    +
647174    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
647175    +
647176    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
647177    +
647178    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
647179    +
647180    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
647181    +
647182    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
647183    +
647184    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
647185    +
647186    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
647187    +
647188    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
647189    +
647190    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
647191    +
647192    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
647193    +
647194    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
647195    +
647196    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
647197    +
647198    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
647199    +
647200    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
647201    +
647202    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
647203    +
647204    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
647205    +
647206    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
647207    +
647208    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
647209    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
647210    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
647211    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
647212    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
647213    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647214    +end;
MPRINT(EM_DIAGRAM):   end;
647215    +else do;
MPRINT(EM_DIAGRAM):   else do;
647216    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
647217    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
647218    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
647219    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
647220    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
647221    +   end;
MPRINT(EM_DIAGRAM):   end;
647222    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
647223    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
647224    +   end;
MPRINT(EM_DIAGRAM):   end;
647225    +   else do;
MPRINT(EM_DIAGRAM):   else do;
647226    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
647227    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
647228    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647229    +   end;
MPRINT(EM_DIAGRAM):   end;
647230    +end;
MPRINT(EM_DIAGRAM):   end;
647231    +
647232    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
647233    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
647234    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
647235    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
647236    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
647237    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647238    +end;
MPRINT(EM_DIAGRAM):   end;
647239    +else do;
MPRINT(EM_DIAGRAM):   else do;
647240    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
647241    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
647242    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
647243    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
647244    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
647245    +   end;
MPRINT(EM_DIAGRAM):   end;
647246    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
647247    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
647248    +   end;
MPRINT(EM_DIAGRAM):   end;
647249    +   else do;
MPRINT(EM_DIAGRAM):   else do;
647250    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
647251    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
647252    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647253    +   end;
MPRINT(EM_DIAGRAM):   end;
647254    +end;
MPRINT(EM_DIAGRAM):   end;
647255    +
647256    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
647257    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
647258    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
647259    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
647260    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
647261    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647262    +end;
MPRINT(EM_DIAGRAM):   end;
647263    +else do;
MPRINT(EM_DIAGRAM):   else do;
647264    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
647265    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
647266    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
647267    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
647268    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
647269    +   end;
MPRINT(EM_DIAGRAM):   end;
647270    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
647271    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
647272    +   end;
MPRINT(EM_DIAGRAM):   end;
647273    +   else do;
MPRINT(EM_DIAGRAM):   else do;
647274    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
647275    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
647276    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647277    +   end;
MPRINT(EM_DIAGRAM):   end;
647278    +end;
MPRINT(EM_DIAGRAM):   end;
647279    +
647280    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
647281    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
647282    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
647283    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
647284    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
647285    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647286    +end;
MPRINT(EM_DIAGRAM):   end;
647287    +else do;
MPRINT(EM_DIAGRAM):   else do;
647288    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
647289    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
647290    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
647291    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
647292    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
647293    +   end;
MPRINT(EM_DIAGRAM):   end;
647294    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
647295    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
647296    +   end;
MPRINT(EM_DIAGRAM):   end;
647297    +   else do;
MPRINT(EM_DIAGRAM):   else do;
647298    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
647299    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
647300    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647301    +   end;
MPRINT(EM_DIAGRAM):   end;
647302    +end;
MPRINT(EM_DIAGRAM):   end;
647303    +
647304    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
647305    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
647306    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
647307    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
647308    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
647309    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647310    +end;
MPRINT(EM_DIAGRAM):   end;
647311    +else do;
MPRINT(EM_DIAGRAM):   else do;
647312    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
647313    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
647314    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
647315    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
647316    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
647317    +   end;
MPRINT(EM_DIAGRAM):   end;
647318    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
647319    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
647320    +   end;
MPRINT(EM_DIAGRAM):   end;
647321    +   else do;
MPRINT(EM_DIAGRAM):   else do;
647322    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
647323    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
647324    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647325    +   end;
MPRINT(EM_DIAGRAM):   end;
647326    +end;
MPRINT(EM_DIAGRAM):   end;
647327    +
647328    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
647329    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
647330    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
647331    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
647332    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
647333    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647334    +end;
MPRINT(EM_DIAGRAM):   end;
647335    +else do;
MPRINT(EM_DIAGRAM):   else do;
647336    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
647337    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
647338    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
647339    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
647340    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
647341    +   end;
MPRINT(EM_DIAGRAM):   end;
647342    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
647343    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
647344    +   end;
MPRINT(EM_DIAGRAM):   end;
647345    +   else do;
MPRINT(EM_DIAGRAM):   else do;
647346    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
647347    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
647348    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647349    +   end;
MPRINT(EM_DIAGRAM):   end;
647350    +end;
MPRINT(EM_DIAGRAM):   end;
647351    +
647352    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
647353    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
647354    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
647355    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
647356    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
647357    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647358    +end;
MPRINT(EM_DIAGRAM):   end;
647359    +else do;
MPRINT(EM_DIAGRAM):   else do;
647360    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
647361    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
647362    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
647363    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
647364    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
647365    +   end;
MPRINT(EM_DIAGRAM):   end;
647366    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
647367    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
647368    +   end;
MPRINT(EM_DIAGRAM):   end;
647369    +   else do;
MPRINT(EM_DIAGRAM):   else do;
647370    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
647371    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
647372    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647373    +   end;
MPRINT(EM_DIAGRAM):   end;
647374    +end;
MPRINT(EM_DIAGRAM):   end;
647375    +
647376    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
647377    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
647378    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
647379    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
647380    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
647381    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
647382    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
647383    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
647384    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
647385    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
647386    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
647387    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
647388    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
647389    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647390    +end;
MPRINT(EM_DIAGRAM):   end;
647391    +else do;
MPRINT(EM_DIAGRAM):   else do;
647392    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
647393    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
647394    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
647395    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
647396    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
647397    +   end;
MPRINT(EM_DIAGRAM):   end;
647398    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
647399    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
647400    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
647401    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
647402    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
647403    +   end;
MPRINT(EM_DIAGRAM):   end;
647404    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
647405    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
647406    +   end;
MPRINT(EM_DIAGRAM):   end;
647407    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
647408    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
647409    +   end;
MPRINT(EM_DIAGRAM):   end;
647410    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
647411    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
647412    +   end;
MPRINT(EM_DIAGRAM):   end;
647413    +   else do;
MPRINT(EM_DIAGRAM):   else do;
647414    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
647415    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
647416    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
647417    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
647418    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
647419    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647420    +   end;
MPRINT(EM_DIAGRAM):   end;
647421    +end;
MPRINT(EM_DIAGRAM):   end;
647422    +
647423    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
647424    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
647425    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
647426    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
647427    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
647428    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
647429    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
647430    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
647431    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
647432    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
647433    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
647434    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
647435    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
647436    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
647437    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647438    +end;
MPRINT(EM_DIAGRAM):   end;
647439    +else do;
MPRINT(EM_DIAGRAM):   else do;
647440    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
647441    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
647442    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
647443    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
647444    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
647445    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
647446    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
647447    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
647448    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
647449    +         end;
MPRINT(EM_DIAGRAM):   end;
647450    +         else do;
MPRINT(EM_DIAGRAM):   else do;
647451    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
647452    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
647453    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
647454    +            end;
MPRINT(EM_DIAGRAM):   end;
647455    +         end;
MPRINT(EM_DIAGRAM):   end;
647456    +      end;
MPRINT(EM_DIAGRAM):   end;
647457    +      else do;
MPRINT(EM_DIAGRAM):   else do;
647458    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
647459    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
647460    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
647461    +         end;
MPRINT(EM_DIAGRAM):   end;
647462    +      end;
MPRINT(EM_DIAGRAM):   end;
647463    +   end;
MPRINT(EM_DIAGRAM):   end;
647464    +   else do;
MPRINT(EM_DIAGRAM):   else do;
647465    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
647466    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
647467    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
647468    +      end;
MPRINT(EM_DIAGRAM):   end;
647469    +      else do;
MPRINT(EM_DIAGRAM):   else do;
647470    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
647471    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
647472    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
647473    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
647474    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
647475    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
647476    +         end;
MPRINT(EM_DIAGRAM):   end;
647477    +      end;
MPRINT(EM_DIAGRAM):   end;
647478    +   end;
MPRINT(EM_DIAGRAM):   end;
647479    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
647480    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
647481    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
647482    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
647483    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
647484    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
647485    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647486    +   end;
MPRINT(EM_DIAGRAM):   end;
647487    +end;
MPRINT(EM_DIAGRAM):   end;
647488    +
647489    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647490    +*** Checking missing input Interval
647491    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
647492    +
647493    +IF NMISS(
647494    +   AcceptedCmpTotal ,
647495    +   Age ,
647496    +   Frq ,
647497    +   Income ,
647498    +   Kidhome ,
647499    +   Mnt ,
647500    +   MntFishProducts ,
647501    +   MntFruits ,
647502    +   MntGoldProds ,
647503    +   MntMeatProducts ,
647504    +   MntSweetProducts ,
647505    +   MntWines ,
647506    +   MonthsAsCustomer ,
647507    +   NumCatalogPurchases ,
647508    +   NumDealsPurchases ,
647509    +   NumDistPurchases ,
647510    +   NumStorePurchases ,
647511    +   NumWebPurchases ,
647512    +   NumWebVisitsMonth ,
647513    +   RFMstat ,
647514    +   RMntFrq ,
647515    +   Recency ,
647516    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
647517    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
647518    +
647519    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647520    +END;
MPRINT(EM_DIAGRAM):   END;
647521    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647522    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
647523    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647524    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
647525    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
647526    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
647527    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
647528    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
647529    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
647530    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
647531    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
647532    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
647533    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
647534    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
647535    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
647536    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
647537    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
647538    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
647539    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
647540    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
647541    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
647542    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
647543    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
647544    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
647545    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
647546    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
647547    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
647548    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
647549    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
647550    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
647551    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
647552    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
647553    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
647554    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
647555    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
647556    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
647557    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
647558    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
647559    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
647560    +END;
MPRINT(EM_DIAGRAM):   END;
647561    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
647562    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
647563    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
647564    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
647565    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
647566    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
647567    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
647568    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
647569    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
647570    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
647571    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
647572    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
647573    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
647574    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
647575    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
647576    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
647577    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
647578    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
647579    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
647580    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
647581    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
647582    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
647583    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
647584    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
647585    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
647586    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
647587    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
647588    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
647589    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
647590    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
647591    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
647592    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
647593    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
647594    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
647595    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
647596    +   ELSE S_NumCatalogPurchases
647597    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
647598    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
647599    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
647600    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
647601    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
647602    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
647603    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
647604    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
647605    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
647606    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
647607    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
647608    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
647609    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
647610    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
647611    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
647612    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
647613    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
647614    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
647615    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
647616    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
647617    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
647618    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
647619    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
647620    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
647621    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
647622    +END;
MPRINT(EM_DIAGRAM):   END;
647623    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647624    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
647625    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647626    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647627    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
647628    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647629    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647630    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
647631    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647632    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
647633    +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
647634    +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
647635    +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
647636    +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
647637    +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
647638    +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
647639    +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
647640    +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
647641    +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
647642    +          +     0.89422627895323 * S_NumDealsPurchases
647643    +          +    -0.13304125929765 * S_NumDistPurchases
647644    +          +    -1.04568442570811 * S_NumStorePurchases
647645    +          +    -0.28677765126751 * S_NumWebPurchases
647646    +          +      1.2327638737509 * S_NumWebVisitsMonth
647647    +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
647648    +        S_RMntFrq  +    -0.86930969765816 * S_Recency
647649    +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 *
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 *
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts +
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 *
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines +
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases +
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases +
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases +
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 *
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
647650    +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
647651    +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
647652    +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
647653    +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
647654    +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
647655    +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
647656    +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
647657    +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
647658    +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
647659    +          +     0.04224590196535 * S_NumDealsPurchases
647660    +          +     0.76554742700113 * S_NumDistPurchases
647661    +          +    -0.49155496870812 * S_NumStorePurchases
647662    +          +     0.59606812744403 * S_NumWebPurchases
647663    +          +     1.86809286276405 * S_NumWebVisitsMonth
647664    +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
647665    +        S_RMntFrq  +    -2.09222283465666 * S_Recency
647666    +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 *
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 *
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts +
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 *
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines +
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases +
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases +
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases +
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 *
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
647667    +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
647668    +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
647669    +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
647670    +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
647671    +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
647672    +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
647673    +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
647674    +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
647675    +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
647676    +          +    -0.04866536993486 * S_NumDealsPurchases
647677    +          +    -0.53535979020214 * S_NumDistPurchases
647678    +          +     2.20634071253676 * S_NumStorePurchases
647679    +          +      0.6164564989007 * S_NumWebPurchases
647680    +          +    -0.43396314395263 * S_NumWebVisitsMonth
647681    +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
647682    +        S_RMntFrq  +     2.37293441098349 * S_Recency
647683    +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 *
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 *
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts +
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 *
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 *
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 *
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 *
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq +
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
647684    +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
647685    +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
647686    +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
647687    +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
647688    +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
647689    +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
647690    +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
647691    +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
647692    +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
647693    +          +     1.37461255707863 * S_NumDealsPurchases
647694    +          +    -0.17684775000818 * S_NumDistPurchases
647695    +          +    -0.62755623855535 * S_NumStorePurchases
647696    +          +    -1.46551649022657 * S_NumWebPurchases
647697    +          +     3.35784247878638 * S_NumWebVisitsMonth
647698    +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
647699    +        S_RMntFrq  +    -2.61971612923471 * S_Recency
647700    +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 *
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 *
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts +
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 *
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 *
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 *
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 *
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq +
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
647701    +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
647702    +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
647703    +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
647704    +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
647705    +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
647706    +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
647707    +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
647708    +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
647709    +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
647710    +          +    -0.76256677907121 * S_NumDealsPurchases
647711    +          +    -0.31591571751692 * S_NumDistPurchases
647712    +          +      0.0506832614089 * S_NumStorePurchases
647713    +          +      1.4636796923764 * S_NumWebPurchases
647714    +          +     0.37743519705036 * S_NumWebVisitsMonth
647715    +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
647716    +        S_RMntFrq  +     0.16854775832723 * S_Recency
647717    +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 *
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 *
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts +
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 *
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines +
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases +
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases +
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq +
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
647718    +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
647719    +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
647720    +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
647721    +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
647722    +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 +
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 *
HigherEducationBinary0 ;
647723    +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
647724    +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
647725    +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
647726    +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
647727    +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 +
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 *
HigherEducationBinary0 ;
647728    +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
647729    +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
647730    +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
647731    +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
647732    +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 *
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 +
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 *
HigherEducationBinary0 ;
647733    +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
647734    +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
647735    +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
647736    +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
647737    +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 +
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 *
HigherEducationBinary0 ;
647738    +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
647739    +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
647740    +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
647741    +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
647742    +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 *
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 +
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 *
HigherEducationBinary0 ;
647743    +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
647744    +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
647745    +        EducationGraduation  +    -0.37141290775302 * EducationMaster
647746    +          +     0.68641668264565 * Marital_StatusDivorced
647747    +          +    -0.81586871439732 * Marital_StatusMarried
647748    +          +     0.63758920518451 * Marital_StatusSingle
647749    +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle +
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation +
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced +
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle +
-1.07300023346175 * Marital_StatusTogether ;
647750    +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
647751    +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
647752    +        EducationGraduation  +     -0.4412391934844 * EducationMaster
647753    +          +     0.05137560133238 * Marital_StatusDivorced
647754    +          +    -2.24401993266209 * Marital_StatusMarried
647755    +          +     1.57359386216115 * Marital_StatusSingle
647756    +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 *
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 *
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 *
Marital_StatusTogether ;
647757    +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
647758    +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
647759    +        EducationGraduation  +     0.61492669859334 * EducationMaster
647760    +          +     -1.0649987815942 * Marital_StatusDivorced
647761    +          +     0.76065111692388 * Marital_StatusMarried
647762    +          +    -0.21694149754801 * Marital_StatusSingle
647763    +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle +
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 *
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 *
Marital_StatusTogether ;
647764    +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
647765    +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
647766    +        EducationGraduation  +     0.04208620358211 * EducationMaster
647767    +          +     2.02155453548328 * Marital_StatusDivorced
647768    +          +    -2.60190649735306 * Marital_StatusMarried
647769    +          +     1.09149388354927 * Marital_StatusSingle
647770    +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle +
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 *
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 *
Marital_StatusTogether ;
647771    +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
647772    +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
647773    +        EducationGraduation  +    -0.60853091001689 * EducationMaster
647774    +          +     0.66315970650309 * Marital_StatusDivorced
647775    +          +    -1.20476729758152 * Marital_StatusMarried
647776    +          +     0.56175027826397 * Marital_StatusSingle
647777    +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle +
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation +
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced +
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle +
-1.12798745445913 * Marital_StatusTogether ;
647778    +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
647779    +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
647780    +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
647781    +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
647782    +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
647783    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
647784    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
647785    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
647786    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
647787    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
647788    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
647789    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
647790    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
647791    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
647792    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
647793    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
647794    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
647795    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
647796    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
647797    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
647798    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
647799    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
647800    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
647801    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
647802    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
647803    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
647804    +END;
MPRINT(EM_DIAGRAM):   END;
647805    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
647806    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
647807    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
647808    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
647809    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
647810    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
647811    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
647812    +END;
MPRINT(EM_DIAGRAM):   END;
647813    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647814    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
647815    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647816    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
647817    +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
647818    +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
647819    +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
647820    +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
647821    +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
647822    +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
647823    +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
647824    +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
647825    +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
647826    +          +     1.50005927423985 * S_NumDealsPurchases
647827    +          +      0.5590536933569 * S_NumDistPurchases
647828    +          +    -0.61757824339318 * S_NumStorePurchases
647829    +          +     0.37259686538158 * S_NumWebPurchases
647830    +          +     2.59725437895564 * S_NumWebVisitsMonth
647831    +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
647832    +        S_RMntFrq  +    -2.38795796980324 * S_Recency
647833    +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 *
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 *
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts +
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 *
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 *
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 *
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 *
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq +
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
647834    +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
647835    +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
647836    +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
647837    +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
647838    +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
647839    +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
647840    +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
647841    +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
647842    +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
647843    +          +    -0.09282222088797 * S_NumDealsPurchases
647844    +          +     0.10726247938321 * S_NumDistPurchases
647845    +          +     -1.1235971458527 * S_NumStorePurchases
647846    +          +    -0.78304387839877 * S_NumWebPurchases
647847    +          +    -0.44139243179956 * S_NumWebVisitsMonth
647848    +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
647849    +        S_RMntFrq  +     2.19072220135069 * S_Recency
647850    +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 *
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 *
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts +
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 *
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 *
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 *
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 *
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq +
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
647851    +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
647852    +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
647853    +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
647854    +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
647855    +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
647856    +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
647857    +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
647858    +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
647859    +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
647860    +          +     0.35349185459988 * S_NumDealsPurchases
647861    +          +     0.06853677714859 * S_NumDistPurchases
647862    +          +    -1.47546012999338 * S_NumStorePurchases
647863    +          +     0.20926435398916 * S_NumWebPurchases
647864    +          +    -1.00535683639093 * S_NumWebVisitsMonth
647865    +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
647866    +        S_RMntFrq  +    -1.59138379954757 * S_Recency
647867    +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 *
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 *
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts +
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 *
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 *
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 *
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 *
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq +
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
647868    +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
647869    +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
647870    +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
647871    +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
647872    +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
647873    +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
647874    +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
647875    +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
647876    +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
647877    +          +      0.3873586120272 * S_NumDealsPurchases
647878    +          +     0.25911651157596 * S_NumDistPurchases
647879    +          +     1.58922489084287 * S_NumStorePurchases
647880    +          +     0.49041797743368 * S_NumWebPurchases
647881    +          +     -1.5425586871929 * S_NumWebVisitsMonth
647882    +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
647883    +        S_RMntFrq  +     1.03099569333498 * S_Recency
647884    +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 *
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 *
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts +
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 *
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 *
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 *
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 *
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq +
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
647885    +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
647886    +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
647887    +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
647888    +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
647889    +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
647890    +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
647891    +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
647892    +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
647893    +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
647894    +          +    -0.60830880287865 * S_NumDealsPurchases
647895    +          +      0.0745331267194 * S_NumDistPurchases
647896    +          +    -1.39472448256952 * S_NumStorePurchases
647897    +          +     1.95372179969087 * S_NumWebPurchases
647898    +          +    -0.63307356390404 * S_NumWebVisitsMonth
647899    +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
647900    +        S_RMntFrq  +    -0.29197897313114 * S_Recency
647901    +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome +
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 *
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts +
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 *
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 *
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 *
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 *
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq +
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
647902    +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
647903    +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
647904    +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
647905    +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
647906    +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 *
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 +
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 *
HigherEducationBinary0 ;
647907    +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
647908    +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
647909    +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
647910    +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
647911    +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 +
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 *
HigherEducationBinary0 ;
647912    +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
647913    +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
647914    +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
647915    +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
647916    +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 *
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 +
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 *
HigherEducationBinary0 ;
647917    +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
647918    +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
647919    +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
647920    +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
647921    +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 *
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 +
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 *
HigherEducationBinary0 ;
647922    +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
647923    +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
647924    +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
647925    +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
647926    +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 *
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 +
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 *
HigherEducationBinary0 ;
647927    +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
647928    +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
647929    +        EducationGraduation  +    -1.16900224373137 * EducationMaster
647930    +          +    -1.33377871643323 * Marital_StatusDivorced
647931    +          +    -0.87184228840898 * Marital_StatusMarried
647932    +          +     1.41223186340257 * Marital_StatusSingle
647933    +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle +
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 *
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 *
Marital_StatusTogether ;
647934    +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
647935    +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
647936    +        EducationGraduation  +     0.38341272155343 * EducationMaster
647937    +          +    -0.21479890935233 * Marital_StatusDivorced
647938    +          +     -0.0025459519579 * Marital_StatusMarried
647939    +          +     1.33900491702264 * Marital_StatusSingle
647940    +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle +
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 *
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 *
Marital_StatusTogether ;
647941    +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
647942    +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
647943    +        EducationGraduation  +     0.60739269725685 * EducationMaster
647944    +          +    -0.38307267471999 * Marital_StatusDivorced
647945    +          +     0.97088969451415 * Marital_StatusMarried
647946    +          +    -0.28578224473381 * Marital_StatusSingle
647947    +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle +
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 *
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 *
Marital_StatusTogether ;
647948    +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
647949    +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
647950    +        EducationGraduation  +     0.14160673378252 * EducationMaster
647951    +          +    -1.42229401093569 * Marital_StatusDivorced
647952    +          +      0.7234508382397 * Marital_StatusMarried
647953    +          +    -0.29062202974628 * Marital_StatusSingle
647954    +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle +
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 *
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 *
Marital_StatusTogether ;
647955    +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
647956    +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
647957    +        EducationGraduation  +     -0.7118631990538 * EducationMaster
647958    +          +    -0.99067637207205 * Marital_StatusDivorced
647959    +          +    -0.50245902142079 * Marital_StatusMarried
647960    +          +     0.54214494533793 * Marital_StatusSingle
647961    +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle +
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 *
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 *
Marital_StatusTogether ;
647962    +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
647963    +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
647964    +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
647965    +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
647966    +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
647967    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
647968    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
647969    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
647970    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
647971    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
647972    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
647973    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
647974    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
647975    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
647976    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
647977    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
647978    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
647979    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
647980    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
647981    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
647982    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
647983    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
647984    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
647985    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
647986    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
647987    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
647988    +END;
MPRINT(EM_DIAGRAM):   END;
647989    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
647990    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
647991    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
647992    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
647993    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
647994    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
647995    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
647996    +END;
MPRINT(EM_DIAGRAM):   END;
647997    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647998    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
647999    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
648000    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
648001    +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
648002    +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
648003    +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 +
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 +
-2.45757278280195 * H1x1_6 ;
648004    +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
648005    +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
648006    +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 +
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 +
-2.28426391810485 * H1x1_6 ;
648007    +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
648008    +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
648009    +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 +
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 +
0.08021226539433 * H1x1_6 ;
648010    +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
648011    +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
648012    +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 +
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 +
-1.35359233519863 * H1x1_6 ;
648013    +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
648014    +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
648015    +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 +
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 +
-2.41187367604766 * H1x1_6 ;
648016    +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
648017    +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
648018    +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 +
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 +
0.21617396847163 * H1x1_6 ;
648019    +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
648020    +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
648021    +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
648022    +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 +
0.2606136576082 * H1x2_6 ;
648023    +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
648024    +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
648025    +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
648026    +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 +
-0.33816948355449 * H1x2_6 ;
648027    +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
648028    +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
648029    +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
648030    +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 *
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 +
-2.05648585275111 * H1x2_6 ;
648031    +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
648032    +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
648033    +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
648034    +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 +
0.10756694741742 * H1x2_6 ;
648035    +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
648036    +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
648037    +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
648038    +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 +
-0.52564497366659 * H1x2_6 ;
648039    +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
648040    +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
648041    +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
648042    +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 *
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 +
0.74493468449949 * H1x2_6 ;
648043    +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
648044    +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
648045    +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
648046    +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
648047    +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
648048    +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
648049    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
648050    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
648051    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
648052    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
648053    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
648054    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
648055    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
648056    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
648057    +END;
MPRINT(EM_DIAGRAM):   END;
648058    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
648059    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
648060    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
648061    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
648062    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
648063    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
648064    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
648065    +END;
MPRINT(EM_DIAGRAM):   END;
648066    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
648067    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
648068    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
648069    +
648070    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
648071    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
648072    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
648073    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
648074    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
648075    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
648076    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
648077    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
648078    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
648079    +end;
MPRINT(EM_DIAGRAM):   end;
648080    +else do;
MPRINT(EM_DIAGRAM):   else do;
648081    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
648082    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
648083    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
648084    +   end;
MPRINT(EM_DIAGRAM):   end;
648085    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
648086    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
648087    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
648088    +   end;
MPRINT(EM_DIAGRAM):   end;
648089    +   else do;
MPRINT(EM_DIAGRAM):   else do;
648090    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
648091    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
648092    +   end;
MPRINT(EM_DIAGRAM):   end;
648093    +end;
MPRINT(EM_DIAGRAM):   end;
648094    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
648095    +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
648096    +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
648097    +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 +
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 +
-3.8939011811129 * H2x1_6 ;
648098    +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
648099    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
648100    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
648101    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
648102    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
648103    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
648104    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
648105    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
648106    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
648107    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
648108    +END;
MPRINT(EM_DIAGRAM):   END;
648109    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
648110    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
648111    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
648112    +END;
MPRINT(EM_DIAGRAM):   END;
648113    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
648114    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
648115    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
648116    +END;
MPRINT(EM_DIAGRAM):   END;
648117    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
648118    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
648119    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
648120    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
648121    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
648122    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
648123    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
648124    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
648125    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
648126    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
648127    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
648128    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
648129    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
648130    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
648131    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
648132    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
648133    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
648134    +END;
MPRINT(EM_DIAGRAM):   END;
648135    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
648136    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
648137    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
648138    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
648139     run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL11_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
648140     quit;
648141     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
648142     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
648143     * AutoNeural11: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Computing metadata for TRAIN data;
648144     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.AUTONEURAL11_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural11_TRAIN out=_tempAdvisor
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural11_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural11_TRAIN out=WORK.M02LURGL
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M02LURGL;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M02LURGL(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M02LURGL;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M02LURGL;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0CSUTGR NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0CSUTGR;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CSUTGR;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M18VDZXD(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CSUTGR;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0CSUTGR;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CSUTGR;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0CSUTGR;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CSUTGR;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural11";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
648456     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
648457     set EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMINFO;
648458     where DATA='AutoNeural11' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural11' and KEY ^in('DECDATA', 'DECMETA',
'IMPORTANCE', 'MODEL');
648459     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
      WHERE (DATA='AutoNeural11') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
648460     data EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_EMINFO;
648461     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
648462     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
648463     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.AUTONEURAL11_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
648467     run;
648468     data EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMINFO;
648469     set EMWS8.AutoNeural11_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMINFO WORK.MODELTEMP_INFO;
648470     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL11_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
648471     proc sort data = EMWS8.AutoNeural11_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural11_EMINFO NOTHREADS;
648472     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
648473     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL11_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
648474     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
648475     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
648476     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
648477     proc sort data = EMWS8.AutoNeural11_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural11_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
648478     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
648479     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
648480     data EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMINFO;
648481     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
648482     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
648483     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL11_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
648484     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
648485     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
648486     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
648487     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS8.AUTONEURAL11_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.AUTONEURAL11_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "08.42 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                08.42 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3W670GQ
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3W670GQ new;
MPRINT(EM_DIAGRAM):   run;
648511     proc sort data=EMWS8.AutoNeural11_OUTFIT nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural11_OUTFIT nodupkey;
648512     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
648513     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL11_OUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 2 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
648514     data EMWS8.AutoNeural11_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMOUTFIT(rename=(_NAME_=TARGET));
648515     set EMWS8.AutoNeural11_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT(where=(_NAME_ eq 'OVERALL'));
648516     label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
648517     if _NAME_='OVERALL' then _NAME_='DepVar';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='DepVar';
648518     drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
648519     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS8.AUTONEURAL11_EMOUTFIT has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
648520     data EMWS8.AutoNeural11_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_EMOUTFIT;
648521     set EMWS8.AutoNeural11_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMOUTFIT;
648522     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
648523     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
648523   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
648524     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
648525     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_EMOUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_EMOUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
648526     proc sort data=EMWS8.AutoNeural11_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural11_EMREPORTFIT nothreads;
648527     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
648528     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL11_EMREPORTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
648529     %let _EMwarndup = 0;
648530     %let _EMtargetdup =;
648531     %let _EMASEtargetdup =;
648532     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
648533     set EMWS8.AutoNeural11_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMOUTFIT;
648534     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
648535     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
648536     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
648537     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
648538     end;
MPRINT(EM_DIAGRAM):   end;
648539     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
648540     proc sort data=EMWS8.Meta_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Meta_CMeta_TRAIN out=WORK.SUBSETINMETA;
648541     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
648542     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.META_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 36 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
648543     proc sort data=EMWS8.AutoNeural11_VariableSet out=WORK.SUBSETVARSET(keep=NAME
648543   ! REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
648544     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
648545     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
648546     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
648547     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
648548     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
648549     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 36 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
648550     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
648551     set EMWS8.AutoNeural11_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_CMeta_TRAIN;
648552     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
648552   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
648553     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL11_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
648554     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
648555     set EMWS8.AutoNeural11_TRAIN(keep=
648556     F_DepVar
648557     I_DepVar
648558     P_DepVar0
648559     P_DepVar1
648560     R_DepVar0
648561     R_DepVar1
648562     U_DepVar
648563     _WARN_
648564     DepVar
648565     );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
648566     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL11_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL11_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural11_3BXEAX2 nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural11_3BXEAX2;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural11_3BXEAX2(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural11_3BXEAX2;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural11_3BXEAX2;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 3.6092414E-6 OVLMAX 0.9999839692 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
652832     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
652833     set EMWS8.AutoNeural11_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_CMeta_TRAIN;
652834     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
652834   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
652835     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL11_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
652836     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
652837     set EMWS8.AutoNeural11_VALIDATE(keep=
652838     F_DepVar
652839     I_DepVar
652840     P_DepVar0
652841     P_DepVar1
652842     R_DepVar0
652843     R_DepVar1
652844     U_DepVar
652845     _WARN_
652846     DepVar
652847     );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0
P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
652848     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.AUTONEURAL11_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL11_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural11_0IUNR7V nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural11_0IUNR7V;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural11_0IUNR7V(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMCLASSIFICATION WORK.AutoNeural11_0IUNR7V;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural11_0IUNR7V;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 3.6912146E-6 OVLMAX 0.9999835058 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
657123     %let _cn = %sysfunc(getoption(CENTER));
657124     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
657125     proc print data=EMWS8.AutoNeural11_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_EMREPORTFIT noobs label;
657126     var STAT LABEL TRAIN
657127     VALIDATE
657128     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
657129     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
657130     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
657131     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
657132     run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL11_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 574.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
657133     title10;
MPRINT(EM_DIAGRAM):   title10;
657134     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
657135     proc sort data=EMWS8.AutoNeural11_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural11_EMCLASSIFICATION nothreads;
657136     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
657137     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL11_EMCLASSIFICATION.
NOTE: The data set EMWS8.AUTONEURAL11_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
657138     %let _cn = %sysfunc(getoption(CENTER));
657139     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
657140     proc print data=EMWS8.AutoNeural11_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_EMCLASSIFICATION noobs label;
657141     var from into pct_row pct_col count percent
657142     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
657143     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
657144     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
657145     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
657146     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
657147     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
657148     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
657149     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
657150     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
657151     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
657152     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
657153     run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL11_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 575.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
657154     title9;
MPRINT(EM_DIAGRAM):   title9;
657155     title10;
MPRINT(EM_DIAGRAM):   title10;
657156     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
657157     %let _cn = %sysfunc(getoption(CENTER));
657158     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
657159     data EMWS8.AutoNeural11_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMEVENTREPORT;
657160     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
657160   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
657161     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
657161   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
657161   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
657161   ! FALSEEVENT
657162     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
657162   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
657162   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
657163        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
657164     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
657165     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
657166     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
657167     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
657168     set EMWS8.AutoNeural11_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMEVENTREPORT;
657169     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL11_EMEVENTREPORT.
NOTE: The data set EMWS8.AUTONEURAL11_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
657170     proc print data=EMWS8.AutoNeural11_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_EMEVENTREPORT noobs label;
657171     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
657172     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
657173     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
657174     run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL11_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 576.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
657175     title10;
MPRINT(EM_DIAGRAM):   title10;
657176     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
657177     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
657178     modify AutoNeural11_EMRANK;
MPRINT(EM_DIAGRAM):   modify AutoNeural11_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
657179     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
657180     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
657180   ! ;
MPRINT(EM_DIAGRAM):   run;
657181     run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL11_EMRANK.DATA.
657182     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
657183     %let _cn = %sysfunc(getoption(CENTER));
657184     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
657185     proc print data=EMWS8.AutoNeural11_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_EMRANK label noobs;
657186     var
657187     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
657188     by
657189     notsorted DATAROLE
657190     notsorted TARGET
657191     notsorted TARGETLABEL
657192     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
657193     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
657194     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
657195     run;
 
NOTE: There were 40 observations read from the data set EMWS8.AUTONEURAL11_EMRANK.
NOTE: The PROCEDURE PRINT printed page 577.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
657196     title10;
MPRINT(EM_DIAGRAM):   title10;
657197     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
657198     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
657199     modify AutoNeural11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify AutoNeural11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
657200     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
657200   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
657201     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
657201   ! ;
MPRINT(EM_DIAGRAM):   run;
657202     run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL11_EMSCOREDIST.DATA.
657203     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
