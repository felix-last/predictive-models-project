*------------------------------------------------------------*
User:                Lukas Fahr
Date:                21. April 2016
Time:                18.42 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.38 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                21. April 2016
Time:                18.38 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O32QOHFQ
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O32QOHFQ new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.38 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMTRAIN.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMSCORE.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMREPORT.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.38 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
405112     proc freq data=EMWS8.AutoNeural11_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.AutoNeural11_VariableSet noprint;
405113     table ROLE*LEVEL/out=WORK.AutoNeural11META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.AutoNeural11META;
405114     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK.AUTONEURAL11META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
405115     proc print data=WORK.AutoNeural11META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural11META label noobs;
405116     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
405117     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
405117   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
405117   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
405118     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
405119     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
405120     run;
 
NOTE: There were 5 observations read from the data set WORK.AUTONEURAL11META.
NOTE: The PROCEDURE PRINT printed page 446.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
405121     title10;
MPRINT(EM_DIAGRAM):   title10;
405122     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Meta_TRAIN EMWS8.Meta_TRAIN
EMWS8.Meta_TRAIN EMWS8.Meta_TRAIN EMWS8 Meta_TRAIN
EMWS8.Meta_TRAIN EMWS8.Meta_TRAIN
EMWS8.Meta_TRAIN EMWS8.Meta_TRAIN EMWS8 Meta_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Meta_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.AutoNeural11_DepVar_DD
_TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_DepVar_DD
out=EMWS8.AutoNeural11_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
405169     data WORK.AutoNeural11_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural11_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
405170     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
405171     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
405171   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
405171   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
405172        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
405172   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
405172   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
405173     set EMWS8.AUTONEURAL11_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL11_DEPVAR_DM( where=(_TYPE_="TARGET"));
405174     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
405175     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
405176     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
405177     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
405178     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
405179     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
405180     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
405181     end;
MPRINT(EM_DIAGRAM):   end;
405182     output;
MPRINT(EM_DIAGRAM):   output;
405183     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.AUTONEURAL11_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
405184     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
405185     proc print data=WORK.AutoNeural11_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural11_EVENT noobs label;
405186     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
405187     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
405188     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
405189     run;
 
NOTE: There were 1 observations read from the data set WORK.AUTONEURAL11_EVENT.
NOTE: The PROCEDURE PRINT printed page 447.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405190     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
405191     proc print data = EMWS8.AutoNeural11_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural11_DepVar_DM noobs label;
405192     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
405193     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
405194     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
405194   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
405194   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
405195     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
405196     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
405197     run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL11_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 448.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
405198     title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Preparing metadata for Training;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M19P73K1;
MPRINT(EM_DIAGRAM):   set WORK.M19P73K1;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
405207     data WORK.M19P73K1;
MPRINT(EM_DIAGRAM):    data WORK.M19P73K1;
405208     set WORK.M19P73K1 end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M19P73K1 end=eof;
405209     output;
MPRINT(EM_DIAGRAM):   output;
405210     if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
405211     NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
405212     ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
405213     LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
405214     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
405215     output;
MPRINT(EM_DIAGRAM):   output;
405216     end;
MPRINT(EM_DIAGRAM):   end;
405217     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK.M19P73K1.
NOTE: The data set WORK.M19P73K1 has 34 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL11_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
405218     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
405219     * AutoNeural11: Create decision matrix;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Create decision matrix;
405220     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
405221     data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
405222       length   DepVar                           $  32
405223                COUNT                                8
405224                DATAPRIOR                            8
405225                TRAINPRIOR                           8
405226                DECPRIOR                             8
405227                DECISION1                            8
405228                DECISION2                            8
405229                ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
405230
405231       label    COUNT="Level Counts"
405232                DATAPRIOR="Data Proportions"
405233                TRAINPRIOR="Training Proportions"
405234                DECPRIOR="Decision Priors"
405235                DECISION1="1"
405236                DECISION2="0"
405237                ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
405238       format   COUNT 10.
405239                ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
405240     DepVar="1"; COUNT=359; DATAPRIOR=0.15122156697556; TRAINPRIOR=0.15122156697556;
405240   ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
405241     output;
MPRINT(EM_DIAGRAM):   output;
405242     DepVar="0"; COUNT=2015; DATAPRIOR=0.84877843302443; TRAINPRIOR=0.84877843302443;
405242   ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
405243     output;
MPRINT(EM_DIAGRAM):   output;
405244     ;
MPRINT(EM_DIAGRAM):   ;
405245     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
405246     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
405247     modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
405248     label DECISION1= '1';
405249     label DECISION2= '0';
405250     run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
405251     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
405252     data EM_AutoNeural11;
MPRINT(EM_DIAGRAM):   data EM_AutoNeural11;
405253     set EMWS8.Meta_TRAIN(keep=
405254     AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5
405255     AcceptedCmpTotal Age Complain DepVar Education Frq HigherEducationBinary Income
405256     Kidhome Marital_Status Mnt MntFishProducts MntFruits MntGoldProds
405257     MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer NumCatalogPurchases
405258     NumDealsPurchases NumDistPurchases NumStorePurchases NumWebPurchases
405259     NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome );
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN(keep= AcceptedCmp1 AcceptedCmp2 AcceptedCmp3
AcceptedCmp4 AcceptedCmp5 AcceptedCmpTotal Age Complain DepVar Education Frq
HigherEducationBinary Income Kidhome Marital_Status Mnt MntFishProducts MntFruits MntGoldProds
MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer NumCatalogPurchases
NumDealsPurchases NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome );
405260     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * AutoNeural11: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
405261     *------------------------------------------------------------* ;
405262     * AutoNeural11: DMDBClass Macro ;
405263     *------------------------------------------------------------* ;
405264     %macro DMDBClass;
405265         AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC)
405266        AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC)
405267        HigherEducationBinary(ASC) Marital_Status(ASC)
405268     %mend DMDBClass;
405269     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
405270     * AutoNeural11: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural11: DMDBVar Macro ;
405271     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
405272     %macro DMDBVar;
405273         AcceptedCmpTotal Age Frq Income Kidhome Mnt MntFishProducts MntFruits
405274        MntGoldProds MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer
405275        NumCatalogPurchases NumDealsPurchases NumDistPurchases NumStorePurchases
405276        NumWebPurchases NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome
405277     %mend DMDBVar;
405278     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
405279     * AutoNeural11: Create DMDB;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Create DMDB;
405280     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
405281     proc dmdb batch data=WORK.EM_AutoNeural11
405282     dmdbcat=WORK.AutoNeural11_DMDB
405283     maxlevel = 513
405284     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
405285     class %DMDBClass;
MPRINT(DMDBCLASS):   AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC)
AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC) HigherEducationBinary(ASC)
Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
405286     var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Age Frq Income Kidhome Mnt MntFishProducts MntFruits
MntGoldProds MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer NumCatalogPurchases
NumDealsPurchases NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):  ;
405287     target
405288     DepVar
405289     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
405290     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set WORK.EM_AUTONEURAL11.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
405291     quit;
405292     *--- end code ---*;
 
405293     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
405294     * AutoNeural11: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Interval Inputs Macro ;
405295     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
405296     %macro INTINPUTS;
405297         AcceptedCmpTotal Age Frq Income Kidhome Mnt MntFishProducts MntFruits
405298        MntGoldProds MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer
405299        NumCatalogPurchases NumDealsPurchases NumDistPurchases NumStorePurchases
405300        NumWebPurchases NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome
405301     %mend INTINPUTS;
405302     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
405303     * AutoNeural11: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Binary Inputs Macro ;
405304     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
405305     %macro BININPUTS;
405306         AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5 Complain
405307        HigherEducationBinary
405308     %mend BININPUTS;
405309     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
405310     * AutoNeural11: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Nominal Inputs Macro ;
405311     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
405312     %macro NOMINPUTS;
405313         Education Marital_Status
405314     %mend NOMINPUTS;
405315     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
405316     * AutoNeural11: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Ordinal Inputs Macro ;
405317     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
405318     %macro ORDINPUTS;
405319
405320     %mend ORDINPUTS;
405321     * set printing options;
MPRINT(EM_DIAGRAM):   * set printing options;
405322     ;
MPRINT(EM_DIAGRAM):   ;
405323     options linesize = 80;
MPRINT(EM_DIAGRAM):   options linesize = 80;
405324     options pagesize = 6000;
The SAS System
 
MPRINT(EM_DIAGRAM):   options pagesize = 6000;
405325     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
405326     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
405327     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
405328     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
405329     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_autonet_title  ,
405329   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "AutoNet";
MPRINT(EM_DIAGRAM):   *;
405330     *;
 
405331     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405332     * Autoneural: search / FUNNEL LAYERS;
MPRINT(EM_DIAGRAM):   * Autoneural: search / FUNNEL LAYERS;
405333     ;
MPRINT(EM_DIAGRAM):   ;
405334     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405335     *;
MPRINT(EM_DIAGRAM):   *;
 
405336     *;
MPRINT(EM_DIAGRAM):    *;
405337     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
405338     validdata=EMWS8.Meta_VALIDATE
405339     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
405340     *;
MPRINT(EM_DIAGRAM):   *;
405341     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
405342     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
405343     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
405344     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
405345     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
405346     target DepVar / level=NOMINAL id=DepVar
405347     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
405348     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405349     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
405350     ;
MPRINT(EM_DIAGRAM):   ;
405351     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405352     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
405353     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
405354     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
405355     *;
MPRINT(EM_DIAGRAM):   *;
405356     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
405357     *;
MPRINT(EM_DIAGRAM):   *;
405358     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
405359     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
405359   ! Search # 1 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=1800
maxiter=50 tech = Default;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: Convergence criterion (ABSGCONV=0.00001) satisfied.
NOTE: The data set WORK._ANEST has 56 observations and 54 variables.
NOTE: The data set WORK._ANFIT has 32 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
405360     train estiter=1 outest=_anest outfit=_anfit maxtime=1800 maxiter=50
MPRINT(EM_DIAGRAM):   run;
405361     tech = Default;
405362     ;
405363     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.50 seconds
      cpu time            0.51 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.50 seconds
      cpu time            0.51 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
405364     *;
405365     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
405366     var _iter_ _aic_ _averr_ _misc_
405367     _vaverr_ _vmisc_
405368     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
405369     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 449.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405370     *------------------------------------------------------------*;
405371     * Extract best iteration;
405372     ;
405373     *------------------------------------------------------------*;
405374     %global _iter;
405375     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
405376     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
405377     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
405378     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
405379     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
405380     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
405381     end;
MPRINT(EM_DIAGRAM):   end;
405382     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
405383     *;
 
405384     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
405385     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
405386     if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
405387     output;
MPRINT(EM_DIAGRAM):   output;
405388     stop;
MPRINT(EM_DIAGRAM):   stop;
405389     end;
MPRINT(EM_DIAGRAM):   end;
405390     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
405391     *;
405392     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
405393     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
405394     if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
405395     output;
MPRINT(EM_DIAGRAM):   output;
405396     stop;
MPRINT(EM_DIAGRAM):   stop;
405397     end;
MPRINT(EM_DIAGRAM):   end;
405398     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405399     *;
MPRINT(EM_DIAGRAM):    *;
405400     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
405401     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
405401   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
405402     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
405403     var _iter_ _aic_ _averr_ _misc_
405404     _vaverr_ _vmisc_
405405     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
405406     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 450.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405407     title9;
MPRINT(EM_DIAGRAM):   title9;
405408     title10;
MPRINT(EM_DIAGRAM):   title10;
405409     %sysfunc(sasmsg(sashelp.dmine, starthistory_note , NOQUOTE));
MPRINT(EM_DIAGRAM):    * Start history;
MPRINT(EM_DIAGRAM):  ;
405410     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
405411     length _func_ _status_ _step_ $16;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16;
405412     label _func_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_function_vlabel  ,
405412   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _func_ = "Function";
405413     label _status_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_status_vlabel  ,
405413   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _status_ = "Status";
405414     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel
405414   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Iteration";
405415     label _step_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_step_vlabel  ,
405415   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _step_ = "Step";
405416     _func_ = '';
MPRINT(EM_DIAGRAM):   _func_ = '';
405417     _status_ = '';
MPRINT(EM_DIAGRAM):   _status_ = '';
405418     _step_ = 'FUNNEL LAYERS 1';
MPRINT(EM_DIAGRAM):   _step_ = 'FUNNEL LAYERS 1';
405419     set
405420     _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0))
405421     ;
MPRINT(EM_DIAGRAM):   set _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0)) ;
405422     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANFIT.
      WHERE (_name_='OVERALL') and (_iter_=0);
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405423     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
405424     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
405425     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
405426     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405427     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
405428     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
405429     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
405430     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405431     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
405432     ;
MPRINT(EM_DIAGRAM):   ;
405433     data WORK.SAVEDS_AUTONEUR_19QC6XD;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_19QC6XD;
405434     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
405435     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_19QC6XD has 1 observations and 54
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405436     data EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_BESTDS;
405437     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
405438     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_BESTDS has 1 observations and 54
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405439     data WORK.BFITDS_AUTONEUR_19QC6XD;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_19QC6XD;
405440     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
405441     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_19QC6XD has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405442     * Add function info to new history;
MPRINT(EM_DIAGRAM):    * Add function info to new history;
405443     ;
MPRINT(EM_DIAGRAM):   ;
405444     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
405445     set EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY;
405446     _func_ = 'DIRECT';
MPRINT(EM_DIAGRAM):   _func_ = 'DIRECT';
405447     _status_ = 'initial';
MPRINT(EM_DIAGRAM):   _status_ = 'initial';
405448     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405449     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
405450     ;
MPRINT(EM_DIAGRAM):   ;
405451     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
405452     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
405453     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
405454     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
405455     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
405456     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
405457     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
405458     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405459     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
405460     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
405461     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 2 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405462     *;
MPRINT(EM_DIAGRAM):    *;
405463     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
405464     validdata=EMWS8.Meta_VALIDATE
405465     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
405466     *;
MPRINT(EM_DIAGRAM):   *;
405467     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
405468     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
405469     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
405470     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
405471     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
405472     target DepVar / level=NOMINAL id=DepVar
405473     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
405474     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405475     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
405476     ;
MPRINT(EM_DIAGRAM):   ;
405477     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405478     Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
405479     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
405480     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
405481     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
405482     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
405483     *;
MPRINT(EM_DIAGRAM):   *;
405484     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
405485     *;
MPRINT(EM_DIAGRAM):   *;
405486     initial
405487     ;
MPRINT(EM_DIAGRAM):   initial ;
405488     *;
MPRINT(EM_DIAGRAM):   *;
405489     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
405490     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
405490   ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=37 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 49 observations and 256 variables.
MPRINT(EM_DIAGRAM):   *;
405491     prelim 24 outest=_anpre pretime=37 preiter=25
405492     tech = Default
405493     ;
405494     *;
405495     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
405496     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
405496   ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=900
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 256 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
405497     train estiter=1 outest=_anest outfit=_anfit maxtime=900 maxiter=50
MPRINT(EM_DIAGRAM):   run;
405498     tech = Default;
405499     ;
405500     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           12.61 seconds
      cpu time            12.57 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 451.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           12.62 seconds
      cpu time            12.57 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
405501     *;
405502     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
405503     var _iter_ _aic_ _averr_ _misc_
405504     _vaverr_ _vmisc_
405505     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
405506     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 452.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405507     *------------------------------------------------------------*;
405508     * Extract best iteration;
405509     ;
405510     *------------------------------------------------------------*;
405511     %global _iter;
405512     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
405513     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
405514     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
405515     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
405516     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
405517     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
405518     end;
MPRINT(EM_DIAGRAM):   end;
405519     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
405520     *;
 
405521     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
405522     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
405523     if _ITER_ eq 47 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 47 then do;
405524     output;
MPRINT(EM_DIAGRAM):   output;
405525     stop;
MPRINT(EM_DIAGRAM):   stop;
405526     end;
MPRINT(EM_DIAGRAM):   end;
405527     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 256
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
405528     *;
405529     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
405530     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
405531     if _ITER_ eq 47 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 47 and _NAME_ eq "OVERALL" then do;
405532     output;
MPRINT(EM_DIAGRAM):   output;
405533     stop;
MPRINT(EM_DIAGRAM):   stop;
405534     end;
MPRINT(EM_DIAGRAM):   end;
405535     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 96 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405536     *;
MPRINT(EM_DIAGRAM):    *;
405537     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
405538     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
405538   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
405539     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
405540     var _iter_ _aic_ _averr_ _misc_
405541     _vaverr_ _vmisc_
405542     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
405543     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 453.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405544     title9;
MPRINT(EM_DIAGRAM):   title9;
405545     title10;
MPRINT(EM_DIAGRAM):   title10;
405546     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
405547     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
405548     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
405549     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405550     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
405551     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
405552     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
405553     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
405554     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
405555     ;
MPRINT(EM_DIAGRAM):   ;
405556     data WORK.SAVEDS_AUTONEUR_19QC6XD;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_19QC6XD;
405557     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
405558     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_19QC6XD has 1 observations and 256
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405559     data EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_BESTDS;
405560     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
405561     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_BESTDS has 1 observations and 256
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405562     data WORK.BFITDS_AUTONEUR_19QC6XD;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_19QC6XD;
405563     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
405564     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_19QC6XD has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405565     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
405566     ;
MPRINT(EM_DIAGRAM):   ;
405567     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
405568     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
405569     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
405570     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
405571     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
405572     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
405573     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
405574     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405575     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
405576     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
405577     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 3 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405578     *;
MPRINT(EM_DIAGRAM):    *;
405579     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
405580     validdata=EMWS8.Meta_VALIDATE
405581     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
405582     *;
MPRINT(EM_DIAGRAM):   *;
405583     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
405584     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
405585     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
405586     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
405587     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
405588     target DepVar / level=NOMINAL id=DepVar
405589     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
405590     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405591     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
405592     ;
MPRINT(EM_DIAGRAM):   ;
405593     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405594     Hidden 6 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SINE;
405595     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
405596     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
405597     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
405598     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
405599     *;
MPRINT(EM_DIAGRAM):   *;
405600     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
405601     *;
MPRINT(EM_DIAGRAM):   *;
405602     initial
405603     ;
MPRINT(EM_DIAGRAM):   initial ;
405604     *;
MPRINT(EM_DIAGRAM):   *;
405605     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
405606     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
405606   ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=37 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 49 observations and 256 variables.
MPRINT(EM_DIAGRAM):   *;
405607     prelim 24 outest=_anpre pretime=37 preiter=25
405608     tech = Default
405609     ;
405610     *;
405611     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
405612     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
405612   ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=896
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 256 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
405613     train estiter=1 outest=_anest outfit=_anfit maxtime=896 maxiter=50
MPRINT(EM_DIAGRAM):   run;
405614     tech = Default;
405615     ;
405616     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           11.29 seconds
      cpu time            11.23 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 454.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           11.30 seconds
      cpu time            11.24 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
405617     *;
405618     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
405619     var _iter_ _aic_ _averr_ _misc_
405620     _vaverr_ _vmisc_
405621     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
405622     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 455.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405623     *------------------------------------------------------------*;
405624     * Extract best iteration;
405625     ;
405626     *------------------------------------------------------------*;
405627     %global _iter;
405628     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
405629     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
405630     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
405631     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
405632     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
405633     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
405634     end;
MPRINT(EM_DIAGRAM):   end;
405635     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
405636     *;
 
405637     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
405638     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
405639     if _ITER_ eq 27 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 27 then do;
405640     output;
MPRINT(EM_DIAGRAM):   output;
405641     stop;
MPRINT(EM_DIAGRAM):   stop;
405642     end;
MPRINT(EM_DIAGRAM):   end;
405643     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 28 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 256
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
405644     *;
405645     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
405646     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
405647     if _ITER_ eq 27 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 27 and _NAME_ eq "OVERALL" then do;
405648     output;
MPRINT(EM_DIAGRAM):   output;
405649     stop;
MPRINT(EM_DIAGRAM):   stop;
405650     end;
MPRINT(EM_DIAGRAM):   end;
405651     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 56 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
405652     *;
MPRINT(EM_DIAGRAM):    *;
405653     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
405654     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
405654   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
405655     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
405656     var _iter_ _aic_ _averr_ _misc_
405657     _vaverr_ _vmisc_
405658     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
405659     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 456.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405660     title9;
MPRINT(EM_DIAGRAM):   title9;
405661     title10;
MPRINT(EM_DIAGRAM):   title10;
405662     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
405663     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
405664     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
405665     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
405666     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
405667     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
405668     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
405669     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405670     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
405671     ;
MPRINT(EM_DIAGRAM):   ;
405672     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
405673     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
405674     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
405675     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
405676     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
405677     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
405678     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
405679     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405680     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
405681     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
405682     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 4 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405683     *;
MPRINT(EM_DIAGRAM):    *;
405684     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
405685     validdata=EMWS8.Meta_VALIDATE
405686     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
405687     *;
MPRINT(EM_DIAGRAM):   *;
405688     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
405689     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
405690     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
405691     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
405692     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
405693     target DepVar / level=NOMINAL id=DepVar
405694     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
405695     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405696     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
405697     ;
MPRINT(EM_DIAGRAM):   ;
405698     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405699     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
405700     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
405701     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
405702     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
405703     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
405704     *;
MPRINT(EM_DIAGRAM):   *;
405705     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
405706     *;
MPRINT(EM_DIAGRAM):   *;
405707     initial
405708     ;
MPRINT(EM_DIAGRAM):   initial ;
405709     *;
MPRINT(EM_DIAGRAM):   *;
405710     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
405711     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
405711   ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=37 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 49 observations and 217 variables.
MPRINT(EM_DIAGRAM):   *;
405712     prelim 24 outest=_anpre pretime=37 preiter=25
405713     tech = Default
405714     ;
405715     *;
405716     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
405717     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
405717   ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=894
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 217 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
405718     train estiter=1 outest=_anest outfit=_anfit maxtime=894 maxiter=50
MPRINT(EM_DIAGRAM):   run;
405719     tech = Default;
405720     ;
405721     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           13.00 seconds
      cpu time            12.96 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 457.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           13.00 seconds
      cpu time            12.97 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
405722     *;
405723     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
405724     var _iter_ _aic_ _averr_ _misc_
405725     _vaverr_ _vmisc_
405726     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
405727     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 458.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405728     *------------------------------------------------------------*;
405729     * Extract best iteration;
405730     ;
405731     *------------------------------------------------------------*;
405732     %global _iter;
405733     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
405734     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
405735     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
405736     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
405737     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
405738     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
405739     end;
MPRINT(EM_DIAGRAM):   end;
405740     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
405741     *;
 
405742     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
405743     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
405744     if _ITER_ eq 21 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 21 then do;
405745     output;
MPRINT(EM_DIAGRAM):   output;
405746     stop;
MPRINT(EM_DIAGRAM):   stop;
405747     end;
MPRINT(EM_DIAGRAM):   end;
405748     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 217
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
405749     *;
405750     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
405751     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
405752     if _ITER_ eq 21 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 21 and _NAME_ eq "OVERALL" then do;
405753     output;
MPRINT(EM_DIAGRAM):   output;
405754     stop;
MPRINT(EM_DIAGRAM):   stop;
405755     end;
MPRINT(EM_DIAGRAM):   end;
405756     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405757     *;
MPRINT(EM_DIAGRAM):    *;
405758     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
405759     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
405759   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
405760     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
405761     var _iter_ _aic_ _averr_ _misc_
405762     _vaverr_ _vmisc_
405763     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
405764     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 459.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405765     title9;
MPRINT(EM_DIAGRAM):   title9;
405766     title10;
MPRINT(EM_DIAGRAM):   title10;
405767     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
405768     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
405769     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
405770     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405771     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
405772     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
405773     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
405774     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
405775     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
405776     ;
MPRINT(EM_DIAGRAM):   ;
405777     data WORK.SAVEDS_AUTONEUR_19QC6XD;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_19QC6XD;
405778     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
405779     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_19QC6XD has 1 observations and 217
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405780     data EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_BESTDS;
405781     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
405782     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_BESTDS has 1 observations and 217
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405783     data WORK.BFITDS_AUTONEUR_19QC6XD;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_19QC6XD;
405784     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
405785     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_19QC6XD has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
405786     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
405787     ;
MPRINT(EM_DIAGRAM):   ;
405788     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
405789     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
405790     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
405791     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
405792     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
405793     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
405794     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
405795     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405796     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
405797     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
405798     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 5 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405799     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
405800     ;
MPRINT(EM_DIAGRAM):   ;
405801     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_ESTDS;
405802     set EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_BESTDS;
405803     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 217
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405804     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
405805     set WORK.BFITDS_AUTONEUR_19QC6XD;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_19QC6XD;
405806     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_19QC6XD.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405807     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
405808     ;
MPRINT(EM_DIAGRAM):   ;
405809     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
405810     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
405811     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
405812     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
405813     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
405814     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
405815     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
405816     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405817     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
405818     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
405819     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 6 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405820     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
405821     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
405822     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
405823     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405824     *;
MPRINT(EM_DIAGRAM):    *;
405825     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
405826     validdata=EMWS8.Meta_VALIDATE
405827     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
405828     *;
MPRINT(EM_DIAGRAM):   *;
405829     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
405830     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
405831     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
405832     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
405833     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
405834     target DepVar / level=NOMINAL id=DepVar
405835     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
405836     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405837     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
405838     ;
MPRINT(EM_DIAGRAM):   ;
405839     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405840     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
405841     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
405842     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
405843     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405844     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
405845     ;
MPRINT(EM_DIAGRAM):   ;
405846     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405847     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
405848     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
405849     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
405850     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
405851     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
405852     *;
MPRINT(EM_DIAGRAM):   *;
405853     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
405854     *;
MPRINT(EM_DIAGRAM):   *;
405855     initial
405856     inest = EMWS8.AutoNeural11_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural11_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 217
      variables.
405857     ;
MPRINT(EM_DIAGRAM):   ;
405858     *;
MPRINT(EM_DIAGRAM):   *;
405859     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
405860     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
405860   ! Search # 2 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : DIRECT :
Prelim";
405861     prelim 24 outest=_anpre pretime=37 preiter=25
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=37 preiter=25 tech =
Default inest = EMWS8.AutoNeural11_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 255 variables.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 217
      variables.
MPRINT(EM_DIAGRAM):   *;
405862     tech = Default
405863     inest = EMWS8.AutoNeural11_ESTDS bylabel
405864     ;
405865     *;
405866     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
405867     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
405867   ! Search # 2 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=890
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 255 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
405868     train estiter=1 outest=_anest outfit=_anfit maxtime=890 maxiter=50
MPRINT(EM_DIAGRAM):   run;
405869     tech = Default;
405870     ;
405871     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           1.55 seconds
      cpu time            1.56 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 460.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.55 seconds
      cpu time            1.56 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
405872     *;
405873     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
405874     var _iter_ _aic_ _averr_ _misc_
405875     _vaverr_ _vmisc_
405876     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
405877     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 461.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405878     *------------------------------------------------------------*;
405879     * Extract best iteration;
405880     ;
405881     *------------------------------------------------------------*;
405882     %global _iter;
405883     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
405884     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
405885     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
405886     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
405887     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
405888     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
405889     end;
MPRINT(EM_DIAGRAM):   end;
405890     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
405891     *;
 
405892     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
405893     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
405894     if _ITER_ eq 3 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 then do;
405895     output;
MPRINT(EM_DIAGRAM):   output;
405896     stop;
MPRINT(EM_DIAGRAM):   stop;
405897     end;
MPRINT(EM_DIAGRAM):   end;
405898     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 255
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
405899     *;
405900     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
405901     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
405902     if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
405903     output;
MPRINT(EM_DIAGRAM):   output;
405904     stop;
MPRINT(EM_DIAGRAM):   stop;
405905     end;
MPRINT(EM_DIAGRAM):   end;
405906     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405907     *;
MPRINT(EM_DIAGRAM):    *;
405908     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
405909     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
405909   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
405910     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
405911     var _iter_ _aic_ _averr_ _misc_
405912     _vaverr_ _vmisc_
405913     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
405914     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 462.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405915     title9;
MPRINT(EM_DIAGRAM):   title9;
405916     title10;
MPRINT(EM_DIAGRAM):   title10;
405917     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
405918     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
405919     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
405920     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405921     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
405922     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
405923     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
405924     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
405925     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
405926     ;
MPRINT(EM_DIAGRAM):   ;
405927     data WORK.SAVEDS_AUTONEUR_19QC6XD;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_19QC6XD;
405928     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
405929     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_19QC6XD has 1 observations and 255
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405930     data EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_BESTDS;
405931     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
405932     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_BESTDS has 1 observations and 255
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405933     data WORK.BFITDS_AUTONEUR_19QC6XD;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_19QC6XD;
405934     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
405935     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_19QC6XD has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
405936     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
405937     ;
MPRINT(EM_DIAGRAM):   ;
405938     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
405939     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
405940     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
405941     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
405942     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
405943     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
405944     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
405945     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405946     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
405947     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
405948     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 7 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405949     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
405950     ;
MPRINT(EM_DIAGRAM):   ;
405951     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_ESTDS;
405952     set EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_BESTDS;
405953     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 255
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
405954     *;
MPRINT(EM_DIAGRAM):    *;
405955     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
405956     validdata=EMWS8.Meta_VALIDATE
405957     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
405958     *;
MPRINT(EM_DIAGRAM):   *;
405959     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
405960     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
405961     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
405962     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
405963     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
405964     target DepVar / level=NOMINAL id=DepVar
405965     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
405966     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405967     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
405968     ;
MPRINT(EM_DIAGRAM):   ;
405969     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405970     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
405971     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
405972     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
405973     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
405974     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
405975     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
405976     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
405977     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
405978     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405979     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
405980     ;
MPRINT(EM_DIAGRAM):   ;
405981     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
405982     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
405983     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
405984     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
405985     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
405986     *;
MPRINT(EM_DIAGRAM):   *;
405987     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
405988     *;
MPRINT(EM_DIAGRAM):   *;
405989     initial
405990     inest = EMWS8.AutoNeural11_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural11_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 255
      variables.
405991     ;
MPRINT(EM_DIAGRAM):   ;
405992     *;
MPRINT(EM_DIAGRAM):   *;
405993     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
405994     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
405994   ! Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
405995     prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural11_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 61 observations and 490 variables.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 255
      variables.
MPRINT(EM_DIAGRAM):   *;
405996     tech = Default
405997     inest = EMWS8.AutoNeural11_ESTDS bylabel
405998     ;
405999     *;
406000     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406001     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
406001   ! Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=890
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 490 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
406002     train estiter=1 outest=_anest outfit=_anfit maxtime=890 maxiter=50
MPRINT(EM_DIAGRAM):   run;
406003     tech = Default;
406004     ;
406005     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           23.05 seconds
      cpu time            22.97 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 463.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           23.06 seconds
      cpu time            22.97 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406006     *;
406007     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
406008     var _iter_ _aic_ _averr_ _misc_
406009     _vaverr_ _vmisc_
406010     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
406011     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 464.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406012     *------------------------------------------------------------*;
406013     * Extract best iteration;
406014     ;
406015     *------------------------------------------------------------*;
406016     %global _iter;
406017     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
406018     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
406019     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
406020     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
406021     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
406022     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
406023     end;
MPRINT(EM_DIAGRAM):   end;
406024     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406025     *;
 
406026     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
406027     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
406028     if _ITER_ eq 24 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 24 then do;
406029     output;
MPRINT(EM_DIAGRAM):   output;
406030     stop;
MPRINT(EM_DIAGRAM):   stop;
406031     end;
MPRINT(EM_DIAGRAM):   end;
406032     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 25 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406033     *;
406034     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
406035     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
406036     if _ITER_ eq 24 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 24 and _NAME_ eq "OVERALL" then do;
406037     output;
MPRINT(EM_DIAGRAM):   output;
406038     stop;
MPRINT(EM_DIAGRAM):   stop;
406039     end;
MPRINT(EM_DIAGRAM):   end;
406040     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
406041     *;
MPRINT(EM_DIAGRAM):    *;
406042     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406043     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
406043   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
406044     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
406045     var _iter_ _aic_ _averr_ _misc_
406046     _vaverr_ _vmisc_
406047     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
406048     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 465.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406049     title9;
MPRINT(EM_DIAGRAM):   title9;
406050     title10;
MPRINT(EM_DIAGRAM):   title10;
406051     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
406052     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406053     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
406054     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
406055     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
406056     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406057     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
406058     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406059     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
406060     ;
MPRINT(EM_DIAGRAM):   ;
406061     data WORK.SAVEDS_AUTONEUR_19QC6XD;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_19QC6XD;
406062     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
406063     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_19QC6XD has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406064     data EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_BESTDS;
406065     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
406066     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_BESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406067     data WORK.BFITDS_AUTONEUR_19QC6XD;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_19QC6XD;
406068     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406069     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_19QC6XD has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406070     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
406071     ;
MPRINT(EM_DIAGRAM):   ;
406072     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
406073     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406074     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
406075     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
406076     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
406077     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
406078     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
406079     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406080     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
406081     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
406082     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 8 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406083     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
406084     ;
MPRINT(EM_DIAGRAM):   ;
406085     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_ESTDS;
406086     set EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_BESTDS;
406087     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
406088     *;
MPRINT(EM_DIAGRAM):    *;
406089     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
406090     validdata=EMWS8.Meta_VALIDATE
406091     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
406092     *;
MPRINT(EM_DIAGRAM):   *;
406093     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
406094     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
406095     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
406096     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
406097     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
406098     target DepVar / level=NOMINAL id=DepVar
406099     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
406100     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406101     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
406102     ;
MPRINT(EM_DIAGRAM):   ;
406103     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406104     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
406105     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
406106     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
406107     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
406108     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
406109     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
406110     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
406111     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
406112     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406113     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
406114     ;
MPRINT(EM_DIAGRAM):   ;
406115     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406116     Hidden 6 / id = H2x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SINE;
406117     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
406118     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
406119     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
406120     *;
MPRINT(EM_DIAGRAM):   *;
406121     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
406122     *;
MPRINT(EM_DIAGRAM):   *;
406123     initial
406124     inest = EMWS8.AutoNeural11_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural11_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
406125     ;
MPRINT(EM_DIAGRAM):   ;
406126     *;
MPRINT(EM_DIAGRAM):   *;
406127     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406128     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
406128   ! Search # 2 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
406129     prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural11_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 490 variables.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
MPRINT(EM_DIAGRAM):   *;
406130     tech = Default
406131     inest = EMWS8.AutoNeural11_ESTDS bylabel
406132     ;
406133     *;
406134     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406135     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
406135   ! Search # 2 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=884
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 490 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
406136     train estiter=1 outest=_anest outfit=_anfit maxtime=884 maxiter=50
MPRINT(EM_DIAGRAM):   run;
406137     tech = Default;
406138     ;
406139     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           2.29 seconds
      cpu time            2.27 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 466.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.30 seconds
      cpu time            2.27 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406140     *;
406141     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
406142     var _iter_ _aic_ _averr_ _misc_
406143     _vaverr_ _vmisc_
406144     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
406145     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 467.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406146     *------------------------------------------------------------*;
406147     * Extract best iteration;
406148     ;
406149     *------------------------------------------------------------*;
406150     %global _iter;
406151     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
406152     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
406153     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
406154     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
406155     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
406156     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
406157     end;
MPRINT(EM_DIAGRAM):   end;
406158     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406159     *;
 
406160     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
406161     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
406162     if _ITER_ eq 39 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 39 then do;
406163     output;
MPRINT(EM_DIAGRAM):   output;
406164     stop;
MPRINT(EM_DIAGRAM):   stop;
406165     end;
MPRINT(EM_DIAGRAM):   end;
406166     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406167     *;
406168     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
406169     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
406170     if _ITER_ eq 39 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 39 and _NAME_ eq "OVERALL" then do;
406171     output;
MPRINT(EM_DIAGRAM):   output;
406172     stop;
MPRINT(EM_DIAGRAM):   stop;
406173     end;
MPRINT(EM_DIAGRAM):   end;
406174     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 80 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406175     *;
MPRINT(EM_DIAGRAM):    *;
406176     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406177     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
406177   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
406178     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
406179     var _iter_ _aic_ _averr_ _misc_
406180     _vaverr_ _vmisc_
406181     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
406182     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 468.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406183     title9;
MPRINT(EM_DIAGRAM):   title9;
406184     title10;
MPRINT(EM_DIAGRAM):   title10;
406185     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
406186     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406187     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
406188     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
406189     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
406190     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406191     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
406192     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406193     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
406194     ;
MPRINT(EM_DIAGRAM):   ;
406195     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
406196     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406197     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
406198     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
406199     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
406200     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
406201     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
406202     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
406203     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
406204     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
406205     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 9 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406206     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
406207     ;
MPRINT(EM_DIAGRAM):   ;
406208     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_ESTDS;
406209     set EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_BESTDS;
406210     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406211     *;
MPRINT(EM_DIAGRAM):    *;
406212     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
406213     validdata=EMWS8.Meta_VALIDATE
406214     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
406215     *;
MPRINT(EM_DIAGRAM):   *;
406216     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
406217     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
406218     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
406219     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
406220     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
406221     target DepVar / level=NOMINAL id=DepVar
406222     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
406223     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406224     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
406225     ;
MPRINT(EM_DIAGRAM):   ;
406226     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406227     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
406228     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
406229     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
406230     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
406231     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
406232     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
406233     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
406234     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
406235     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406236     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
406237     ;
MPRINT(EM_DIAGRAM):   ;
406238     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406239     Hidden 6 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SOFTMAX;
406240     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
406241     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
406242     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
406243     *;
MPRINT(EM_DIAGRAM):   *;
406244     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
406245     *;
MPRINT(EM_DIAGRAM):   *;
406246     initial
406247     inest = EMWS8.AutoNeural11_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural11_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
406248     ;
MPRINT(EM_DIAGRAM):   ;
406249     *;
MPRINT(EM_DIAGRAM):   *;
406250     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406251     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
406251   ! Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
406252     prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural11_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 477 variables.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
MPRINT(EM_DIAGRAM):   *;
406253     tech = Default
406254     inest = EMWS8.AutoNeural11_ESTDS bylabel
406255     ;
406256     *;
406257     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406258     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
406258   ! Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=883
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 477 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
406259     train estiter=1 outest=_anest outfit=_anfit maxtime=883 maxiter=50
MPRINT(EM_DIAGRAM):   run;
406260     tech = Default;
406261     ;
406262     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           2.40 seconds
      cpu time            2.38 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 469.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.41 seconds
      cpu time            2.38 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406263     *;
406264     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
406265     var _iter_ _aic_ _averr_ _misc_
406266     _vaverr_ _vmisc_
406267     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
406268     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 470.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406269     *------------------------------------------------------------*;
406270     * Extract best iteration;
406271     ;
406272     *------------------------------------------------------------*;
406273     %global _iter;
406274     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
406275     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
406276     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
406277     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
406278     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
406279     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
406280     end;
MPRINT(EM_DIAGRAM):   end;
406281     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406282     *;
 
406283     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
406284     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
406285     if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
406286     output;
MPRINT(EM_DIAGRAM):   output;
406287     stop;
MPRINT(EM_DIAGRAM):   stop;
406288     end;
MPRINT(EM_DIAGRAM):   end;
406289     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 477
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406290     *;
406291     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
406292     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
406293     if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
406294     output;
MPRINT(EM_DIAGRAM):   output;
406295     stop;
MPRINT(EM_DIAGRAM):   stop;
406296     end;
MPRINT(EM_DIAGRAM):   end;
406297     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
406298     *;
MPRINT(EM_DIAGRAM):    *;
406299     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406300     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
406300   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
406301     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
406302     var _iter_ _aic_ _averr_ _misc_
406303     _vaverr_ _vmisc_
406304     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
406305     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 471.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406306     title9;
MPRINT(EM_DIAGRAM):   title9;
406307     title10;
MPRINT(EM_DIAGRAM):   title10;
406308     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
406309     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406310     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
406311     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
406312     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
406313     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406314     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
406315     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406316     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
406317     ;
MPRINT(EM_DIAGRAM):   ;
406318     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
406319     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406320     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
406321     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
406322     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
406323     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
406324     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
406325     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406326     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
406327     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
406328     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 10 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406329     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
406330     ;
MPRINT(EM_DIAGRAM):   ;
406331     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_ESTDS;
406332     set EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_BESTDS;
406333     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406334     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
406335     set WORK.BFITDS_AUTONEUR_19QC6XD;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_19QC6XD;
406336     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_19QC6XD.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
 
 
406337     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
406338     ;
MPRINT(EM_DIAGRAM):   ;
406339     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
406340     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406341     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
406342     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
406343     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
406344     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
406345     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
406346     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406347     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
406348     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
406349     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 11 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406350     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
406351     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406352     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
406353     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
406354     *;
MPRINT(EM_DIAGRAM):    *;
406355     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
406356     validdata=EMWS8.Meta_VALIDATE
406357     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
406358     *;
MPRINT(EM_DIAGRAM):   *;
406359     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
406360     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
406361     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
406362     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
406363     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
406364     target DepVar / level=NOMINAL id=DepVar
406365     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
406366     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406367     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
406368     ;
MPRINT(EM_DIAGRAM):   ;
406369     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406370     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
406371     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
406372     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
406373     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406374     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
406375     ;
MPRINT(EM_DIAGRAM):   ;
406376     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406377     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
406378     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
406379     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
406380     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
406381     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
406382     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
406383     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
406384     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
406385     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406386     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
406387     ;
MPRINT(EM_DIAGRAM):   ;
406388     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406389     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
406390     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
406391     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
406392     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
406393     *;
MPRINT(EM_DIAGRAM):   *;
406394     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
406395     *;
MPRINT(EM_DIAGRAM):   *;
406396     initial
406397     inest = EMWS8.AutoNeural11_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural11_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
406398     ;
MPRINT(EM_DIAGRAM):   ;
406399     *;
MPRINT(EM_DIAGRAM):   *;
406400     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406401     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
406401   ! Search # 3 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : DIRECT :
Prelim";
406402     prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural11_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 528 variables.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
MPRINT(EM_DIAGRAM):   *;
406403     tech = Default
406404     inest = EMWS8.AutoNeural11_ESTDS bylabel
406405     ;
406406     *;
406407     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406408     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
406408   ! Search # 3 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=883
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 528 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
406409     train estiter=1 outest=_anest outfit=_anfit maxtime=883 maxiter=50
MPRINT(EM_DIAGRAM):   run;
406410     tech = Default;
406411     ;
406412     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           2.85 seconds
      cpu time            2.84 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 472.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.85 seconds
      cpu time            2.85 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406413     *;
406414     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
406415     var _iter_ _aic_ _averr_ _misc_
406416     _vaverr_ _vmisc_
406417     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
406418     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 473.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406419     *------------------------------------------------------------*;
406420     * Extract best iteration;
406421     ;
406422     *------------------------------------------------------------*;
406423     %global _iter;
406424     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
406425     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
406426     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
406427     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
406428     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
406429     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
406430     end;
MPRINT(EM_DIAGRAM):   end;
406431     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406432     *;
 
406433     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
406434     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
406435     if _ITER_ eq 7 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 7 then do;
406436     output;
MPRINT(EM_DIAGRAM):   output;
406437     stop;
MPRINT(EM_DIAGRAM):   stop;
406438     end;
MPRINT(EM_DIAGRAM):   end;
406439     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 528
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406440     *;
406441     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
406442     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
406443     if _ITER_ eq 7 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 7 and _NAME_ eq "OVERALL" then do;
406444     output;
MPRINT(EM_DIAGRAM):   output;
406445     stop;
MPRINT(EM_DIAGRAM):   stop;
406446     end;
MPRINT(EM_DIAGRAM):   end;
406447     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406448     *;
MPRINT(EM_DIAGRAM):    *;
406449     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406450     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
406450   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
406451     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
406452     var _iter_ _aic_ _averr_ _misc_
406453     _vaverr_ _vmisc_
406454     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
406455     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 474.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406456     title9;
MPRINT(EM_DIAGRAM):   title9;
406457     title10;
MPRINT(EM_DIAGRAM):   title10;
406458     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
406459     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406460     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
406461     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406462     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
406463     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406464     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
406465     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406466     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
406467     ;
MPRINT(EM_DIAGRAM):   ;
406468     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
406469     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406470     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
406471     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
406472     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
406473     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
406474     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
406475     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406476     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
406477     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
406478     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 12 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406479     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
406480     ;
MPRINT(EM_DIAGRAM):   ;
406481     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_ESTDS;
406482     set EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_BESTDS;
406483     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
406484     *;
MPRINT(EM_DIAGRAM):    *;
406485     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
406486     validdata=EMWS8.Meta_VALIDATE
406487     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
406488     *;
MPRINT(EM_DIAGRAM):   *;
406489     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
406490     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
406491     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
406492     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
406493     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
406494     target DepVar / level=NOMINAL id=DepVar
406495     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
406496     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406497     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
406498     ;
MPRINT(EM_DIAGRAM):   ;
406499     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406500     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
406501     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
406502     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
406503     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
406504     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
406505     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
406506     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
406507     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
406508     Hidden 6 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=SOFTMAX;
406509     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
406510     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
406511     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
406512     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406513     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
406514     ;
MPRINT(EM_DIAGRAM):   ;
406515     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406516     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
406517     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
406518     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
406519     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
406520     Hidden 6 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=LOG;
406521     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
406522     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
406523     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
406524     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406525     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
406526     ;
MPRINT(EM_DIAGRAM):   ;
406527     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406528     Hidden 6 / id = H3x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=LOG;
406529     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
406530     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
406531     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
406532     *;
MPRINT(EM_DIAGRAM):   *;
406533     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
406534     *;
MPRINT(EM_DIAGRAM):   *;
406535     initial
406536     inest = EMWS8.AutoNeural11_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural11_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
406537     ;
MPRINT(EM_DIAGRAM):   ;
406538     *;
MPRINT(EM_DIAGRAM):   *;
406539     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406540     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
406540   ! Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
406541     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural11_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 913 variables.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
MPRINT(EM_DIAGRAM):   *;
406542     tech = Default
406543     inest = EMWS8.AutoNeural11_ESTDS bylabel
406544     ;
406545     *;
406546     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406547     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
406547   ! Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=882
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 913 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
406548     train estiter=1 outest=_anest outfit=_anfit maxtime=882 maxiter=50
MPRINT(EM_DIAGRAM):   run;
406549     tech = Default;
406550     ;
406551     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           57.85 seconds
      cpu time            57.65 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 475.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           57.86 seconds
      cpu time            57.65 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406552     *;
406553     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
406554     var _iter_ _aic_ _averr_ _misc_
406555     _vaverr_ _vmisc_
406556     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
406557     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 476.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406558     *------------------------------------------------------------*;
406559     * Extract best iteration;
406560     ;
406561     *------------------------------------------------------------*;
406562     %global _iter;
406563     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
406564     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
406565     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
406566     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
406567     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
406568     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
406569     end;
MPRINT(EM_DIAGRAM):   end;
406570     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406571     *;
 
406572     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
406573     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
406574     if _ITER_ eq 24 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 24 then do;
406575     output;
MPRINT(EM_DIAGRAM):   output;
406576     stop;
MPRINT(EM_DIAGRAM):   stop;
406577     end;
MPRINT(EM_DIAGRAM):   end;
406578     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 25 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 913
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406579     *;
406580     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
406581     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
406582     if _ITER_ eq 24 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 24 and _NAME_ eq "OVERALL" then do;
406583     output;
MPRINT(EM_DIAGRAM):   output;
406584     stop;
MPRINT(EM_DIAGRAM):   stop;
406585     end;
MPRINT(EM_DIAGRAM):   end;
406586     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406587     *;
MPRINT(EM_DIAGRAM):    *;
406588     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406589     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
406589   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
406590     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
406591     var _iter_ _aic_ _averr_ _misc_
406592     _vaverr_ _vmisc_
406593     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
406594     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 477.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
406595     title9;
MPRINT(EM_DIAGRAM):   title9;
406596     title10;
MPRINT(EM_DIAGRAM):   title10;
406597     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
406598     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406599     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
406600     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406601     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
406602     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406603     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
406604     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
406605     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
406606     ;
MPRINT(EM_DIAGRAM):   ;
406607     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
406608     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406609     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
406610     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
406611     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
406612     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
406613     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
406614     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406615     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
406616     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
406617     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 13 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406618     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
406619     ;
MPRINT(EM_DIAGRAM):   ;
406620     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_ESTDS;
406621     set EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_BESTDS;
406622     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406623     *;
MPRINT(EM_DIAGRAM):    *;
406624     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
406625     validdata=EMWS8.Meta_VALIDATE
406626     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
406627     *;
MPRINT(EM_DIAGRAM):   *;
406628     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
406629     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
406630     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
406631     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
406632     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
406633     target DepVar / level=NOMINAL id=DepVar
406634     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
406635     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406636     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
406637     ;
MPRINT(EM_DIAGRAM):   ;
406638     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406639     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
406640     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
406641     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
406642     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
406643     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
406644     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
406645     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
406646     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
406647     Hidden 6 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=SOFTMAX;
406648     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
406649     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
406650     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
406651     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406652     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
406653     ;
MPRINT(EM_DIAGRAM):   ;
406654     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406655     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
406656     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
406657     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
406658     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
406659     Hidden 6 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=LOG;
406660     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
406661     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
406662     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
406663     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406664     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
406665     ;
MPRINT(EM_DIAGRAM):   ;
406666     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406667     Hidden 6 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SINE;
406668     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
406669     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
406670     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
406671     *;
MPRINT(EM_DIAGRAM):   *;
406672     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
406673     *;
MPRINT(EM_DIAGRAM):   *;
406674     initial
406675     inest = EMWS8.AutoNeural11_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural11_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
406676     ;
MPRINT(EM_DIAGRAM):   ;
406677     *;
MPRINT(EM_DIAGRAM):   *;
406678     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406679     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
406679   ! Search # 3 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
406680     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural11_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 913 variables.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
MPRINT(EM_DIAGRAM):   *;
406681     tech = Default
406682     inest = EMWS8.AutoNeural11_ESTDS bylabel
406683     ;
406684     *;
406685     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406686     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
406686   ! Search # 3 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=867
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 913 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
406687     train estiter=1 outest=_anest outfit=_anfit maxtime=867 maxiter=50
MPRINT(EM_DIAGRAM):   run;
406688     tech = Default;
406689     ;
406690     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           46.27 seconds
      cpu time            46.08 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 478.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           46.28 seconds
      cpu time            46.08 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406691     *;
406692     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
406693     var _iter_ _aic_ _averr_ _misc_
406694     _vaverr_ _vmisc_
406695     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
406696     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 479.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406697     *------------------------------------------------------------*;
406698     * Extract best iteration;
406699     ;
406700     *------------------------------------------------------------*;
406701     %global _iter;
406702     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
406703     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
406704     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
406705     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
406706     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
406707     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
406708     end;
MPRINT(EM_DIAGRAM):   end;
406709     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406710     *;
 
406711     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
406712     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
406713     if _ITER_ eq 6 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 then do;
406714     output;
MPRINT(EM_DIAGRAM):   output;
406715     stop;
MPRINT(EM_DIAGRAM):   stop;
406716     end;
MPRINT(EM_DIAGRAM):   end;
406717     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 913
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406718     *;
406719     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
406720     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
406721     if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
406722     output;
MPRINT(EM_DIAGRAM):   output;
406723     stop;
MPRINT(EM_DIAGRAM):   stop;
406724     end;
MPRINT(EM_DIAGRAM):   end;
406725     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406726     *;
MPRINT(EM_DIAGRAM):    *;
406727     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406728     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
406728   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
406729     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
406730     var _iter_ _aic_ _averr_ _misc_
406731     _vaverr_ _vmisc_
406732     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
406733     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 480.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
406734     title9;
MPRINT(EM_DIAGRAM):   title9;
406735     title10;
MPRINT(EM_DIAGRAM):   title10;
406736     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
406737     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406738     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
406739     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406740     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
406741     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406742     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
406743     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
406744     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
406745     ;
MPRINT(EM_DIAGRAM):   ;
406746     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
406747     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406748     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
406749     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
406750     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
406751     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
406752     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
406753     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406754     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
406755     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
406756     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 14 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406757     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
406758     ;
MPRINT(EM_DIAGRAM):   ;
406759     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_ESTDS;
406760     set EMWS8.AutoNeural11_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_BESTDS;
406761     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406762     *;
MPRINT(EM_DIAGRAM):    *;
406763     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
406764     validdata=EMWS8.Meta_VALIDATE
406765     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
406766     *;
MPRINT(EM_DIAGRAM):   *;
406767     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
406768     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
406769     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
406770     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
406771     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
406772     target DepVar / level=NOMINAL id=DepVar
406773     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
406774     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406775     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
406776     ;
MPRINT(EM_DIAGRAM):   ;
406777     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406778     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
406779     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
406780     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
406781     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
406782     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
406783     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
406784     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
406785     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
406786     Hidden 6 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=SOFTMAX;
406787     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
406788     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
406789     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
406790     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406791     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
406792     ;
MPRINT(EM_DIAGRAM):   ;
406793     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406794     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
406795     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
406796     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
406797     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
406798     Hidden 6 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=LOG;
406799     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
406800     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
406801     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
406802     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406803     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
406804     ;
MPRINT(EM_DIAGRAM):   ;
406805     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406806     Hidden 6 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SOFTMAX;
406807     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
406808     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
406809     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
406810     *;
MPRINT(EM_DIAGRAM):   *;
406811     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
406812     *;
MPRINT(EM_DIAGRAM):   *;
406813     initial
406814     inest = EMWS8.AutoNeural11_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural11_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
406815     ;
MPRINT(EM_DIAGRAM):   ;
406816     *;
MPRINT(EM_DIAGRAM):   *;
406817     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406818     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
406818   ! Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
406819     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural11_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: Convergence criterion (GCONV=1E-8) satisfied.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: Convergence criterion (GCONV=1E-8) satisfied.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 900 variables.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
MPRINT(EM_DIAGRAM):   *;
406820     tech = Default
406821     inest = EMWS8.AutoNeural11_ESTDS bylabel
406822     ;
406823     *;
406824     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406825     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
406825   ! Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=856
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 900 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
406826     train estiter=1 outest=_anest outfit=_anfit maxtime=856 maxiter=50
MPRINT(EM_DIAGRAM):   run;
406827     tech = Default;
406828     ;
406829     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           53.22 seconds
      cpu time            52.96 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 481.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           53.23 seconds
      cpu time            52.96 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406830     *;
406831     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
406832     var _iter_ _aic_ _averr_ _misc_
406833     _vaverr_ _vmisc_
406834     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
406835     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 482.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406836     *------------------------------------------------------------*;
406837     * Extract best iteration;
406838     ;
406839     *------------------------------------------------------------*;
406840     %global _iter;
406841     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
406842     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
406843     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
406844     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
406845     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
406846     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
406847     end;
MPRINT(EM_DIAGRAM):   end;
406848     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406849     *;
 
406850     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
406851     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
406852     if _ITER_ eq 16 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 16 then do;
406853     output;
MPRINT(EM_DIAGRAM):   output;
406854     stop;
MPRINT(EM_DIAGRAM):   stop;
406855     end;
MPRINT(EM_DIAGRAM):   end;
406856     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 900
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406857     *;
406858     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
406859     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
406860     if _ITER_ eq 16 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 16 and _NAME_ eq "OVERALL" then do;
406861     output;
MPRINT(EM_DIAGRAM):   output;
406862     stop;
MPRINT(EM_DIAGRAM):   stop;
406863     end;
MPRINT(EM_DIAGRAM):   end;
406864     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
406865     *;
MPRINT(EM_DIAGRAM):    *;
406866     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406867     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
406867   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
406868     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
406869     var _iter_ _aic_ _averr_ _misc_
406870     _vaverr_ _vmisc_
406871     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
406872     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 483.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406873     title9;
MPRINT(EM_DIAGRAM):   title9;
406874     title10;
MPRINT(EM_DIAGRAM):   title10;
406875     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
406876     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406877     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
406878     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406879     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
406880     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406881     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
406882     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406883     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
406884     ;
MPRINT(EM_DIAGRAM):   ;
406885     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
406886     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
406887     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
406888     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
406889     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
406890     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
406891     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
406892     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
406893     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
406894     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
406895     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 15 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406896     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
406897     set WORK.SAVEDS_AUTONEUR_19QC6XD;
MPRINT(EM_DIAGRAM):   set WORK.SAVEDS_AUTONEUR_19QC6XD;
406898     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.SAVEDS_AUTONEUR_19QC6XD.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406899     *;
MPRINT(EM_DIAGRAM):    *;
406900     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
406901     validdata=EMWS8.Meta_VALIDATE
406902     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
406903     *;
MPRINT(EM_DIAGRAM):   *;
406904     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
406905     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
406906     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
406907     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
406908     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
406909     target DepVar / level=NOMINAL id=DepVar
406910     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
406911     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406912     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
406913     ;
MPRINT(EM_DIAGRAM):   ;
406914     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406915     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
406916     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
406917     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
406918     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
406919     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
406920     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
406921     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
406922     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
406923     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406924     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
406925     ;
MPRINT(EM_DIAGRAM):   ;
406926     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406927     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
406928     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
406929     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
406930     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
406931     *;
MPRINT(EM_DIAGRAM):   *;
406932     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
406933     *;
MPRINT(EM_DIAGRAM):   *;
406934     initial
406935     inest = EMWS8.AutoNeural11_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural11_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
406936     ;
MPRINT(EM_DIAGRAM):   ;
406937     *;
MPRINT(EM_DIAGRAM):   *;
406938     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406939     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
406939   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Prelim";
406940     prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural11_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 490 variables.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
MPRINT(EM_DIAGRAM):   *;
406941     tech = Default
406942     inest = EMWS8.AutoNeural11_ESTDS bylabel
406943     ;
406944     *;
406945     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406946     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
406946   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=843
maxiter=5 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 5 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 8 observations and 490 variables.
NOTE: The data set WORK._ANFIT has 14 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
406947     train estiter=1 outest=_anest outfit=_anfit maxtime=843 maxiter=5
MPRINT(EM_DIAGRAM):   run;
406948     tech = Default;
406949     ;
406950     run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           1.12 seconds
      cpu time            1.12 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 484.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.13 seconds
      cpu time            1.14 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406951     *;
406952     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
406953     var _iter_ _aic_ _averr_ _misc_
406954     _vaverr_ _vmisc_
406955     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
406956     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 485.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
406957     *------------------------------------------------------------*;
406958     * Extract best iteration;
406959     ;
406960     *------------------------------------------------------------*;
406961     %global _iter;
406962     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
406963     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
406964     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
406965     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
406966     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
406967     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
406968     end;
MPRINT(EM_DIAGRAM):   end;
406969     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406970     *;
 
406971     data EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_ESTDS;
406972     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
406973     if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
406974     output;
MPRINT(EM_DIAGRAM):   output;
406975     stop;
MPRINT(EM_DIAGRAM):   stop;
406976     end;
MPRINT(EM_DIAGRAM):   end;
406977     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
406978     *;
406979     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
406980     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
406981     if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
406982     output;
MPRINT(EM_DIAGRAM):   output;
406983     stop;
MPRINT(EM_DIAGRAM):   stop;
406984     end;
MPRINT(EM_DIAGRAM):   end;
406985     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406986     *;
MPRINT(EM_DIAGRAM):    *;
406987     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
406988     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
406988   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
406989     proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_OUTFIT noobs;
406990     var _iter_ _aic_ _averr_ _misc_
406991     _vaverr_ _vmisc_
406992     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
406993     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 486.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
406994     title9;
MPRINT(EM_DIAGRAM):   title9;
406995     title10;
MPRINT(EM_DIAGRAM):   title10;
406996     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
406997     ;
MPRINT(EM_DIAGRAM):   ;
406998     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
406999     set EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT;
407000     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
407001     _func_ = "";
MPRINT(EM_DIAGRAM):   _func_ = "";
407002     _status_ = "Final";
MPRINT(EM_DIAGRAM):   _status_ = "Final";
407003     _step_ = "";
MPRINT(EM_DIAGRAM):   _step_ = "";
407004     _index_ = 5;
MPRINT(EM_DIAGRAM):   _index_ = 5;
407005     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
407006     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_HISTORY;
407007     set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY EMWS8.AutoNeural11_OUTFIT;
407008     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL11_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 16 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
407009     title9 " ";
MPRINT(EM_DIAGRAM):    title9 " ";
407010     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_finaltrainhistory_title
407010   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Final Training History";
407011     proc print data=EMWS8.AutoNeural11_HISTORY noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_HISTORY noobs;
407012     var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
407013     _vaverr_ _vmisc_
407014     ;
MPRINT(EM_DIAGRAM):   var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
_vaverr_ _vmisc_ ;
407015     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: The PROCEDURE PRINT printed page 487.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
407016     data work.keep_history;
MPRINT(EM_DIAGRAM):   data work.keep_history;
407017     set EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY;
407018     if _status_='keep';
MPRINT(EM_DIAGRAM):   if _status_='keep';
407019     if _func_='DIRECT' then neurons=0;
MPRINT(EM_DIAGRAM):   if _func_='DIRECT' then neurons=0;
407020     else neurons=6;
MPRINT(EM_DIAGRAM):   else neurons=6;
407021     label neurons="%sysfunc(sasmsg(sashelp.dmine,
407021   ! rpt_numberneurons_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label neurons= "Number of Neurons";
407022     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set
      EMWS8.AUTONEURAL11_HISTORY.
NOTE: The data set WORK.KEEP_HISTORY has 2 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
407023     title8 " ";
MPRINT(EM_DIAGRAM):   title8 " ";
407024     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_finalmodel_title  ,
407024   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Final Model";
407025     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_stopping_title  ,
407025   ! NOQUOTE, %nrbquote(Termination criteria were satisfied: overfitting
407025   ! based on _VMISC_)))";
MPRINT(EM_DIAGRAM):   title10 "Stopping: Termination criteria were satisfied:
overfitting based on _VMISC_";
407026     proc print data=work.keep_history noobs;
MPRINT(EM_DIAGRAM):   proc print data=work.keep_history noobs;
407027     var _func_ _averr_
407028     _vaverr_
407029     neurons;
MPRINT(EM_DIAGRAM):   var _func_ _averr_ _vaverr_ neurons;
407030     sum neurons;
MPRINT(EM_DIAGRAM):   sum neurons;
407031     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.KEEP_HISTORY.
NOTE: The PROCEDURE PRINT printed page 488.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
407032     title8;
MPRINT(EM_DIAGRAM):   title8;
407033     title9;
MPRINT(EM_DIAGRAM):   title9;
407034     title10;
MPRINT(EM_DIAGRAM):   title10;
407035     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
407036     * AutoNeural Final Network;
MPRINT(EM_DIAGRAM):   * AutoNeural Final Network;
407037     ;
MPRINT(EM_DIAGRAM):   ;
407038     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
407039     *;
MPRINT(EM_DIAGRAM):   *;
407040     proc neural data=EM_AutoNeural11 dmdbcat=WORK.AutoNeural11_DMDB
407041     validdata=EMWS8.Meta_VALIDATE
407042     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural11
dmdbcat=WORK.AutoNeural11_DMDB validdata=EMWS8.Meta_VALIDATE ;
407043     *;
MPRINT(EM_DIAGRAM):   *;
407044     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
407045     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
407046     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
407047     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
407048     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
407049     target DepVar / level=NOMINAL id=DepVar
407050     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
407051     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
407052     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
407053     ;
MPRINT(EM_DIAGRAM):   ;
407054     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
407055     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
407056     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
407057     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
407058     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
407059     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
407060     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
407061     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
407062     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
407063     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
407064     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
407065     ;
MPRINT(EM_DIAGRAM):   ;
407066     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
407067     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
407068     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
407069     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
407070     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
407071     *;
MPRINT(EM_DIAGRAM):   *;
407072     initial inest= EMWS8.AutoNeural11_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest= EMWS8.AutoNeural11_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL11_ESTDS has 1 observations and 490
      variables.
407073     train tech=none;
MPRINT(EM_DIAGRAM):   train tech=none;
NOTE: No optimization performed.
407074     code
407074   ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\SCO
407074   ! RECODE.sas"
407075     group=AutoNeural11
407076     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\SCORECODE.sas"
 group=AutoNeural11 ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\SCORECODE.sas
      opened.
407077     ;
MPRINT(EM_DIAGRAM):   ;
407078     code
407078   ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\RES
407078   ! IDUALSCORECODE.sas"
407079     group=AutoNeural11
407080     residual
407081     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\RESIDUALSCOREC
ODE.sas" group=AutoNeural11 residual ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\RESIDUALSCOREC
      ODE.sas opened.
407082     ;
MPRINT(EM_DIAGRAM):   ;
407083     score data=EMWS8.Meta_TRAIN out=_NULL_
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
407084     outfit=WORK.FIT1
407085     role=TRAIN
407086     outkey=EMWS8.AutoNeural11_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Meta_TRAIN out=_NULL_ outfit=WORK.FIT1
role=TRAIN outkey=EMWS8.AutoNeural11_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL11_OUTKEY has 68 observations and 8
      variables.
NOTE: The data set EMWS8.META_TRAIN has . observations and 45 variables.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
407087     score data=EMWS8.Meta_VALIDATE out=_NULL_
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
407088     outfit=WORK.FIT2
407089     outkey=EMWS8.AutoNeural11_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Meta_VALIDATE out=_NULL_
outfit=WORK.FIT2 outkey=EMWS8.AutoNeural11_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL11_OUTKEY has 68 observations and 8
      variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
407090     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_AUTONEURAL11 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.25 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.24 seconds
      cpu time            0.25 seconds
 
 
407091     data EMWS8.AutoNeural11_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_OUTFIT;
407092     merge WORK.FIT1 WORK.FIT2;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2;
407093     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 2 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
407094     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
407095     * Generate Weights Plotting data set;
MPRINT(EM_DIAGRAM):   * Generate Weights Plotting data set;
407096     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
407097     data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_
407097   ! _averr_ _p_num_ where= (_type_ eq "PARMS"));
MPRINT(EM_DIAGRAM):   data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_
_obj_ _objerr_ _averr_ _p_num_ where= (_type_ eq "PARMS"));
407098     set EMWS8.AutoNeural11_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_ESTDS;
407099     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_ESTDS.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 482 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
407100     proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
407101     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
407102     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 482 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
407103     proc transpose data=tempweight out=EMWS8.AutoNeural11_WEIGHTS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight
out=EMWS8.AutoNeural11_WEIGHTS;
407104     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
407105     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS8.AUTONEURAL11_WEIGHTS has 480 observations and 3
      variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
407106     data EMWS8.AutoNeural11_WEIGHTS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_WEIGHTS;
407107     set EMWS8.AutoNeural11_WEIGHTS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_WEIGHTS;
407108     FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
MPRINT(EM_DIAGRAM):   FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
407109     TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
407110     WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
The SAS System
 
407111     if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
407112     label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  ,
407112   ! NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  ,
407112   ! NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  ,
407112   ! NOQUOTE))" WEIGHT =
407113        "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT
= "Weight";
407114     keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
407115     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 480 observations read from the data set
      EMWS8.AUTONEURAL11_WEIGHTS.
NOTE: The data set EMWS8.AUTONEURAL11_WEIGHTS has 475 observations and 4
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   * restore printing options;
MPRINT(EM_DIAGRAM):   ;
407116     * restore printing options;
407117     ;
407118     title10;
MPRINT(EM_DIAGRAM):   title10;
407119     options linesize=95;
MPRINT(EM_DIAGRAM):   options linesize=95;
407120     options pagesize=10000;
MPRINT(EM_DIAGRAM):   options pagesize=10000;
407121     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
407122     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
407123     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
MPRINT(EM_DIAGRAM):   *;
407124     *;
407125     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
407126     delete EM_AutoNeural11;
MPRINT(EM_DIAGRAM):   delete EM_AutoNeural11;
407127     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_AUTONEURAL11 (memtype=DATA).
407128     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
407129     data EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_HISTORY;
407130     set EMWS8.AutoNeural11_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_HISTORY;
407131     label _T_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainstep_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _T_ = "Training Step";
407132     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  ,
407132   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Training Iterations";
407133     _T_ = _N_ -1;
MPRINT(EM_DIAGRAM):   _T_ = _N_ -1;
407134     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set EMWS8.AUTONEURAL11_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL11_HISTORY has 16 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.42 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.42 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3OWFMG1
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3OWFMG1 new;
MPRINT(EM_DIAGRAM):   run;
407236     filename emflow
407236   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
407237     *------------------------------------------------------------*;
407238     * AutoNeural11: Scoring DATA data;
407239     *------------------------------------------------------------*;
407240     data EMWS8.AutoNeural11_TRAIN
407241     / view=EMWS8.AutoNeural11_TRAIN
407242     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_TRAIN / view=EMWS8.AutoNeural11_TRAIN ;
407243     set EMWS8.Meta_TRAIN
407244     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
407245     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas.
407246    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
407247    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
407248    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
407249    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
407250    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
407251    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
407252    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
407253    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
407254    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
407255    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
407256    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
407257    +LENGTH _WARN_ $4
407258    +      F_DepVar  $ 12
407259    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
407260    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
407261    +
407262    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
407263    +
407264    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
407265    +
407266    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
407267    +
407268    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
407269    +
407270    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
407271    +
407272    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
407273    +
407274    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
407275    +
407276    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
407277    +
407278    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
407279    +
407280    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
407281    +
407282    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
407283    +
407284    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
407285    +
407286    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
407287    +
407288    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
407289    +
407290    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
407291    +
407292    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
407293    +
407294    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
407295    +
407296    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
407297    +
407298    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
407299    +
407300    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
407301    +
407302    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
407303    +
407304    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
407305    +
407306    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
407307    +
407308    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
407309    +
407310    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
407311    +
407312    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
407313    +
407314    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
407315    +
407316    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
407317    +
407318    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
407319    +
407320    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
407321    +
407322    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
407323    +
407324    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
407325    +
407326    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
407327    +
407328    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
407329    +
407330    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
407331    +
407332    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
407333    +
407334    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
407335    +
407336    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
407337    +
407338    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
407339    +
407340    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
407341    +
407342    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
407343    +
407344    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
407345    +
407346    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
407347    +
407348    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
407349    +
407350    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
407351    +
407352    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
407353    +
407354    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
407355    +
407356    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
407357    +
407358    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
407359    +
407360    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
407361    +
407362    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
407363    +
407364    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
407365    +
407366    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
407367    +
407368    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
407369    +
407370    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
407371    +
407372    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
407373    +
407374    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
407375    +
407376    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
407377    +
407378    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
407379    +
407380    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
407381    +
407382    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
407383    +
407384    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
407385    +
407386    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
407387    +
407388    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
407389    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
407390    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
407391    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
407392    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407393    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407394    +end;
MPRINT(EM_DIAGRAM):   end;
407395    +else do;
MPRINT(EM_DIAGRAM):   else do;
407396    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
407397    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
407398    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407399    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
407400    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
407401    +   end;
MPRINT(EM_DIAGRAM):   end;
407402    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
407403    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
407404    +   end;
MPRINT(EM_DIAGRAM):   end;
407405    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407406    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
407407    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407408    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407409    +   end;
MPRINT(EM_DIAGRAM):   end;
407410    +end;
MPRINT(EM_DIAGRAM):   end;
407411    +
407412    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
407413    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
407414    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
407415    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
407416    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407417    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407418    +end;
MPRINT(EM_DIAGRAM):   end;
407419    +else do;
MPRINT(EM_DIAGRAM):   else do;
407420    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
407421    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
407422    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407423    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
407424    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
407425    +   end;
MPRINT(EM_DIAGRAM):   end;
407426    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
407427    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
407428    +   end;
MPRINT(EM_DIAGRAM):   end;
407429    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407430    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
407431    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407432    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407433    +   end;
MPRINT(EM_DIAGRAM):   end;
407434    +end;
MPRINT(EM_DIAGRAM):   end;
407435    +
407436    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
407437    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
407438    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
407439    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
407440    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407441    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407442    +end;
MPRINT(EM_DIAGRAM):   end;
407443    +else do;
MPRINT(EM_DIAGRAM):   else do;
407444    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
407445    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
407446    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407447    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
407448    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
407449    +   end;
MPRINT(EM_DIAGRAM):   end;
407450    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
407451    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
407452    +   end;
MPRINT(EM_DIAGRAM):   end;
407453    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407454    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
407455    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407456    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407457    +   end;
MPRINT(EM_DIAGRAM):   end;
407458    +end;
MPRINT(EM_DIAGRAM):   end;
407459    +
407460    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
407461    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
407462    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
407463    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
407464    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407465    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407466    +end;
MPRINT(EM_DIAGRAM):   end;
407467    +else do;
MPRINT(EM_DIAGRAM):   else do;
407468    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
407469    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
407470    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407471    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
407472    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
407473    +   end;
MPRINT(EM_DIAGRAM):   end;
407474    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
407475    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
407476    +   end;
MPRINT(EM_DIAGRAM):   end;
407477    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407478    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
407479    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407480    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407481    +   end;
MPRINT(EM_DIAGRAM):   end;
407482    +end;
MPRINT(EM_DIAGRAM):   end;
407483    +
407484    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
407485    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
407486    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
407487    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
407488    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407489    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407490    +end;
MPRINT(EM_DIAGRAM):   end;
407491    +else do;
MPRINT(EM_DIAGRAM):   else do;
407492    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
407493    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
407494    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407495    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
407496    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
407497    +   end;
MPRINT(EM_DIAGRAM):   end;
407498    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
407499    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
407500    +   end;
MPRINT(EM_DIAGRAM):   end;
407501    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407502    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
407503    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407504    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407505    +   end;
MPRINT(EM_DIAGRAM):   end;
407506    +end;
MPRINT(EM_DIAGRAM):   end;
407507    +
407508    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
407509    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
407510    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
407511    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
407512    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407513    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407514    +end;
MPRINT(EM_DIAGRAM):   end;
407515    +else do;
MPRINT(EM_DIAGRAM):   else do;
407516    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
407517    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
407518    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407519    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
407520    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
407521    +   end;
MPRINT(EM_DIAGRAM):   end;
407522    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
407523    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
407524    +   end;
MPRINT(EM_DIAGRAM):   end;
407525    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407526    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
407527    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407528    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407529    +   end;
MPRINT(EM_DIAGRAM):   end;
407530    +end;
MPRINT(EM_DIAGRAM):   end;
407531    +
407532    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
407533    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
407534    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
407535    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
407536    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407537    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407538    +end;
MPRINT(EM_DIAGRAM):   end;
407539    +else do;
MPRINT(EM_DIAGRAM):   else do;
407540    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
407541    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
407542    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407543    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
407544    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
407545    +   end;
MPRINT(EM_DIAGRAM):   end;
407546    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
407547    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
407548    +   end;
MPRINT(EM_DIAGRAM):   end;
407549    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407550    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
407551    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407552    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407553    +   end;
MPRINT(EM_DIAGRAM):   end;
407554    +end;
MPRINT(EM_DIAGRAM):   end;
407555    +
407556    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
407557    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
407558    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
407559    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
407560    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
407561    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
407562    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
407563    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
407564    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
407565    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
407566    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
407567    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
407568    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407569    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407570    +end;
MPRINT(EM_DIAGRAM):   end;
407571    +else do;
MPRINT(EM_DIAGRAM):   else do;
407572    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
407573    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
407574    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407575    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
407576    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
407577    +   end;
MPRINT(EM_DIAGRAM):   end;
407578    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
407579    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
407580    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
407581    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
407582    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
407583    +   end;
MPRINT(EM_DIAGRAM):   end;
407584    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
407585    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
407586    +   end;
MPRINT(EM_DIAGRAM):   end;
407587    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
407588    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
407589    +   end;
MPRINT(EM_DIAGRAM):   end;
407590    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
407591    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
407592    +   end;
MPRINT(EM_DIAGRAM):   end;
407593    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407594    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
407595    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
407596    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
407597    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
407598    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407599    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407600    +   end;
MPRINT(EM_DIAGRAM):   end;
407601    +end;
MPRINT(EM_DIAGRAM):   end;
407602    +
407603    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
407604    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
407605    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
407606    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
407607    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
407608    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
407609    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
407610    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
407611    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
407612    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
407613    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
407614    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
407615    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
407616    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407617    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407618    +end;
MPRINT(EM_DIAGRAM):   end;
407619    +else do;
MPRINT(EM_DIAGRAM):   else do;
407620    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
407621    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
407622    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407623    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
407624    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
407625    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
407626    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
407627    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
407628    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
407629    +         end;
MPRINT(EM_DIAGRAM):   end;
407630    +         else do;
MPRINT(EM_DIAGRAM):   else do;
407631    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
407632    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
407633    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
407634    +            end;
MPRINT(EM_DIAGRAM):   end;
407635    +         end;
MPRINT(EM_DIAGRAM):   end;
407636    +      end;
MPRINT(EM_DIAGRAM):   end;
407637    +      else do;
MPRINT(EM_DIAGRAM):   else do;
407638    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
407639    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
407640    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
407641    +         end;
MPRINT(EM_DIAGRAM):   end;
407642    +      end;
MPRINT(EM_DIAGRAM):   end;
407643    +   end;
MPRINT(EM_DIAGRAM):   end;
407644    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407645    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
407646    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
407647    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
407648    +      end;
MPRINT(EM_DIAGRAM):   end;
407649    +      else do;
MPRINT(EM_DIAGRAM):   else do;
407650    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
407651    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
407652    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
407653    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
407654    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
407655    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
407656    +         end;
MPRINT(EM_DIAGRAM):   end;
407657    +      end;
MPRINT(EM_DIAGRAM):   end;
407658    +   end;
MPRINT(EM_DIAGRAM):   end;
407659    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
407660    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
407661    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
407662    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
407663    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
407664    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407665    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407666    +   end;
MPRINT(EM_DIAGRAM):   end;
407667    +end;
MPRINT(EM_DIAGRAM):   end;
407668    +
407669    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407670    +*** Checking missing input Interval
407671    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
407672    +
407673    +IF NMISS(
407674    +   AcceptedCmpTotal ,
407675    +   Age ,
407676    +   Frq ,
407677    +   Income ,
407678    +   Kidhome ,
407679    +   Mnt ,
407680    +   MntFishProducts ,
407681    +   MntFruits ,
407682    +   MntGoldProds ,
407683    +   MntMeatProducts ,
407684    +   MntSweetProducts ,
407685    +   MntWines ,
407686    +   MonthsAsCustomer ,
407687    +   NumCatalogPurchases ,
407688    +   NumDealsPurchases ,
407689    +   NumDistPurchases ,
407690    +   NumStorePurchases ,
407691    +   NumWebPurchases ,
407692    +   NumWebVisitsMonth ,
407693    +   RFMstat ,
407694    +   RMntFrq ,
407695    +   Recency ,
407696    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
407697    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
407698    +
407699    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407700    +END;
MPRINT(EM_DIAGRAM):   END;
407701    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407702    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
407703    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407704    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
407705    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
407706    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
407707    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
407708    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
407709    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
407710    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
407711    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
407712    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
407713    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
407714    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
407715    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
407716    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
407717    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
407718    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
407719    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
407720    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
407721    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
407722    +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
407723    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
407724    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
407725    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
407726    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
407727    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
407728    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
407729    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
407730    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
407731    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
407732    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
407733    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
407734    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
407735    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
407736    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
407737    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
407738    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
407739    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
407740    +END;
MPRINT(EM_DIAGRAM):   END;
407741    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
407742    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
407743    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
407744    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
407745    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
407746    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
407747    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
407748    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
407749    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
407750    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
407751    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
407752    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
407753    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
407754    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
407755    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
407756    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
407757    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
407758    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
407759    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
407760    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
407761    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
407762    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
407763    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
407764    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
407765    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
407766    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
407767    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
407768    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
407769    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
407770    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
407771    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
407772    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
407773    +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
407774    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
407775    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
407776    +   ELSE S_NumCatalogPurchases
407777    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
407778    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
407779    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
407780    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
407781    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
407782    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
407783    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
407784    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
407785    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
407786    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
407787    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
407788    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
407789    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
407790    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
407791    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
407792    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
407793    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
407794    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
407795    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
407796    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
407797    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
407798    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
407799    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
407800    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
407801    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
407802    +END;
MPRINT(EM_DIAGRAM):   END;
407803    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407804    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
407805    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407806    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407807    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
407808    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407809    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407810    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
407811    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407812    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
407813    +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
407814    +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
407815    +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
407816    +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
407817    +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
407818    +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
407819    +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
407820    +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
407821    +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
407822    +          +     1.32037113020393 * S_NumDealsPurchases
407823    +          +     0.42879249227132 * S_NumDistPurchases
407824    +          +    -0.89190172778783 * S_NumStorePurchases
407825    +          +    -0.87975442613962 * S_NumWebPurchases
407826    +          +     2.98977282825831 * S_NumWebVisitsMonth
407827    +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
407828    +        S_RMntFrq  +    -2.53833222281652 * S_Recency
407829    +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 *
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 *
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts +
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 *
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines +
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases +
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases +
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases +
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 *
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
407830    +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
407831    +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
407832    +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
407833    +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
407834    +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
407835    +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
407836    +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
407837    +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
407838    +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
407839    +          +    -1.16737670931605 * S_NumDealsPurchases
407840    +          +     0.08205195039242 * S_NumDistPurchases
407841    +          +    -0.65367044520084 * S_NumStorePurchases
407842    +          +     2.39693083674757 * S_NumWebPurchases
407843    +          +     0.18432526469897 * S_NumWebVisitsMonth
407844    +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
407845    +        S_RMntFrq  +    -0.12214066685673 * S_Recency
407846    +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 *
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 *
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts +
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 *
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines +
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases +
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases +
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases +
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 *
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
407847    +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
407848    +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
407849    +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
407850    +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
407851    +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
407852    +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
407853    +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
407854    +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
407855    +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
407856    +          +     0.76616480025024 * S_NumDealsPurchases
407857    +          +     0.42823368706255 * S_NumDistPurchases
407858    +          +    -1.16998364854907 * S_NumStorePurchases
407859    +          +     -1.0841896541746 * S_NumWebPurchases
407860    +          +     2.74837744375079 * S_NumWebVisitsMonth
407861    +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
407862    +        S_RMntFrq  +    -5.13438280616518 * S_Recency
407863    +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 *
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 *
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts +
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 *
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines +
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases +
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases +
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases +
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 *
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
407864    +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
407865    +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
407866    +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
407867    +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
407868    +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
407869    +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
407870    +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
407871    +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
407872    +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
407873    +          +     0.78421010501058 * S_NumDealsPurchases
407874    +          +     0.01075885160671 * S_NumDistPurchases
407875    +          +    -1.99395040717832 * S_NumStorePurchases
407876    +          +    -1.02908330834262 * S_NumWebPurchases
407877    +          +     2.79163466516477 * S_NumWebVisitsMonth
407878    +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
407879    +        S_RMntFrq  +     -2.0907247135068 * S_Recency
407880    +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 *
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 *
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts +
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 *
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines +
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases +
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases +
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases +
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 *
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
407881    +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
407882    +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
407883    +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
407884    +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
407885    +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
407886    +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
407887    +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
407888    +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
407889    +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
407890    +          +    -1.04219068390022 * S_NumDealsPurchases
407891    +          +    -0.45770204483973 * S_NumDistPurchases
407892    +          +    -0.04941442229195 * S_NumStorePurchases
407893    +          +     0.67187353161183 * S_NumWebPurchases
407894    +          +     2.01907760553871 * S_NumWebVisitsMonth
407895    +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
407896    +        S_RMntFrq  +    -1.12913051410394 * S_Recency
407897    +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 *
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 *
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts +
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 *
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 *
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 *
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 *
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq +
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
407898    +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
407899    +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
407900    +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
407901    +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
407902    +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 +
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 *
HigherEducationBinary0 ;
407903    +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
407904    +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
407905    +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
407906    +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
407907    +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 *
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 +
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 *
HigherEducationBinary0 ;
407908    +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
407909    +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
407910    +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
407911    +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
407912    +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 +
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 *
HigherEducationBinary0 ;
407913    +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
407914    +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
407915    +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
407916    +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
407917    +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 +
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 *
HigherEducationBinary0 ;
407918    +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
407919    +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
407920    +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
407921    +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
407922    +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 *
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 +
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 *
HigherEducationBinary0 ;
407923    +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
407924    +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
407925    +        EducationGraduation  +     0.09596442360106 * EducationMaster
407926    +          +     2.58907527032049 * Marital_StatusDivorced
407927    +          +    -2.45549008158921 * Marital_StatusMarried
407928    +          +     2.56223650840768 * Marital_StatusSingle
407929    +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle +
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 *
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 *
Marital_StatusTogether ;
407930    +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
407931    +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
407932    +        EducationGraduation  +     0.29249899969052 * EducationMaster
407933    +          +     0.83917299191368 * Marital_StatusDivorced
407934    +          +    -0.62624692699191 * Marital_StatusMarried
407935    +          +    -0.22585060624911 * Marital_StatusSingle
407936    +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle +
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 *
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 *
Marital_StatusTogether ;
407937    +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
407938    +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
407939    +        EducationGraduation  +     -1.3163356801876 * EducationMaster
407940    +          +    -0.65063506696715 * Marital_StatusDivorced
407941    +          +    -2.37495865381256 * Marital_StatusMarried
407942    +          +    -0.54954654146904 * Marital_StatusSingle
407943    +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle +
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 *
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 *
Marital_StatusTogether ;
407944    +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
407945    +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
407946    +        EducationGraduation  +     0.07916018399549 * EducationMaster
407947    +          +     0.16185824798364 * Marital_StatusDivorced
407948    +          +    -0.08142416735136 * Marital_StatusMarried
407949    +          +    -0.20392270385969 * Marital_StatusSingle
407950    +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle +
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation +
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced +
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle +
-0.16702436233017 * Marital_StatusTogether ;
407951    +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
407952    +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
407953    +        EducationGraduation  +     0.28107355175103 * EducationMaster
407954    +          +      -0.516522631078 * Marital_StatusDivorced
407955    +          +    -0.61661247789976 * Marital_StatusMarried
407956    +          +    -0.99533130308294 * Marital_StatusSingle
407957    +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle +
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation +
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced +
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle +
-0.36897004084592 * Marital_StatusTogether ;
407958    +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
407959    +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
407960    +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
407961    +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
407962    +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
407963    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
407964    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
407965    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
407966    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
407967    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
407968    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
407969    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
407970    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
407971    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
407972    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
407973    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
407974    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
407975    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
407976    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
407977    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
407978    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
407979    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
407980    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
407981    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
407982    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
407983    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
407984    +END;
MPRINT(EM_DIAGRAM):   END;
407985    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
407986    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
407987    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
407988    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
407989    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
407990    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
407991    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
407992    +END;
MPRINT(EM_DIAGRAM):   END;
407993    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407994    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
407995    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407996    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
407997    +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
407998    +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
407999    +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
408000    +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
408001    +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
408002    +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
408003    +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
408004    +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
408005    +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
408006    +          +    -0.03801022287706 * S_NumDealsPurchases
408007    +          +    -1.50723574966419 * S_NumDistPurchases
408008    +          +    -0.21514545448485 * S_NumStorePurchases
408009    +          +    -0.50179555233865 * S_NumWebPurchases
408010    +          +    -0.68226572560161 * S_NumWebVisitsMonth
408011    +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
408012    +        S_RMntFrq  +     0.78178939203913 * S_Recency
408013    +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 *
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 *
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts +
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 *
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 *
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 *
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 *
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq +
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
408014    +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
408015    +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
408016    +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
408017    +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
408018    +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
408019    +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
408020    +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
408021    +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
408022    +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
408023    +          +     0.70551335536975 * S_NumDealsPurchases
408024    +          +     0.02824488988803 * S_NumDistPurchases
408025    +          +    -0.47958123842808 * S_NumStorePurchases
408026    +          +     1.04559003239583 * S_NumWebPurchases
408027    +          +    -0.58386087813772 * S_NumWebVisitsMonth
408028    +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
408029    +        S_RMntFrq  +    -0.05848082255965 * S_Recency
408030    +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 *
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 *
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts +
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 *
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 *
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 *
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 *
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq +
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
408031    +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
408032    +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
408033    +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
408034    +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
408035    +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
408036    +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
408037    +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
408038    +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
408039    +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
408040    +          +    -0.28907339261907 * S_NumDealsPurchases
408041    +          +     0.04310505858352 * S_NumDistPurchases
408042    +          +    -0.99594604666889 * S_NumStorePurchases
408043    +          +    -0.58870940220114 * S_NumWebPurchases
408044    +          +     0.84018399925148 * S_NumWebVisitsMonth
408045    +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
408046    +        S_RMntFrq  +    -1.47730936960999 * S_Recency
408047    +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 *
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 *
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts +
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 *
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 *
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 *
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 *
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq +
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
408048    +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
408049    +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
408050    +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
408051    +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
408052    +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
408053    +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
408054    +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
408055    +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
408056    +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
408057    +          +     0.52917289878604 * S_NumDealsPurchases
408058    +          +     0.30974142545809 * S_NumDistPurchases
408059    +          +    -0.36081450643799 * S_NumStorePurchases
408060    +          +    -0.28418053386759 * S_NumWebPurchases
408061    +          +    -0.80759462497096 * S_NumWebVisitsMonth
408062    +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
408063    +        S_RMntFrq  +    -0.02418118976368 * S_Recency
408064    +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 *
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 *
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts +
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 *
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 *
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 *
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 *
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq +
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
408065    +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
408066    +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
408067    +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
408068    +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
408069    +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
408070    +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
408071    +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
408072    +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
408073    +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
408074    +          +    -0.47500053723253 * S_NumDealsPurchases
408075    +          +     0.41421086319635 * S_NumDistPurchases
408076    +          +     0.69664835428137 * S_NumStorePurchases
408077    +          +     0.66359306812968 * S_NumWebPurchases
408078    +          +     0.77931462528741 * S_NumWebVisitsMonth
408079    +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
408080    +        S_RMntFrq  +    -1.91226042675868 * S_Recency
408081    +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 *
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 *
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts +
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 *
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 *
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 *
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 *
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq +
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
408082    +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
408083    +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
408084    +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
408085    +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
408086    +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 *
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 +
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 *
HigherEducationBinary0 ;
408087    +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
408088    +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
408089    +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
408090    +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
408091    +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 *
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 +
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 *
HigherEducationBinary0 ;
408092    +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
408093    +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
408094    +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
408095    +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
408096    +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 *
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 +
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 *
HigherEducationBinary0 ;
408097    +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
408098    +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
408099    +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
408100    +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
408101    +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 *
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 +
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 *
HigherEducationBinary0 ;
408102    +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
408103    +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
408104    +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
408105    +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
408106    +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 *
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 +
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 *
HigherEducationBinary0 ;
408107    +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
408108    +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
408109    +        EducationGraduation  +     0.89392741557091 * EducationMaster
408110    +          +    -1.34742914042312 * Marital_StatusDivorced
408111    +          +    -0.75378934918763 * Marital_StatusMarried
408112    +          +    -1.85411678929217 * Marital_StatusSingle
408113    +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle +
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 *
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 *
Marital_StatusTogether ;
408114    +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
408115    +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
408116    +        EducationGraduation  +      1.4602485898642 * EducationMaster
408117    +          +     0.47958659206261 * Marital_StatusDivorced
408118    +          +     -0.9665584294045 * Marital_StatusMarried
408119    +          +      0.9733784530538 * Marital_StatusSingle
408120    +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle +
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 *
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 *
Marital_StatusTogether ;
408121    +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
408122    +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
408123    +        EducationGraduation  +     1.49772418974753 * EducationMaster
408124    +          +    -0.56894207908284 * Marital_StatusDivorced
408125    +          +    -0.96715106987195 * Marital_StatusMarried
408126    +          +     1.18678144721443 * Marital_StatusSingle
408127    +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle +
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation +
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced +
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle +
1.05940264255347 * Marital_StatusTogether ;
408128    +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
408129    +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
408130    +        EducationGraduation  +    -2.01250798855133 * EducationMaster
408131    +          +     -0.6061959224661 * Marital_StatusDivorced
408132    +          +     0.03495844244684 * Marital_StatusMarried
408133    +          +    -0.63896361063244 * Marital_StatusSingle
408134    +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle +
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation +
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced +
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle +
0.74357887057422 * Marital_StatusTogether ;
408135    +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
408136    +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
408137    +        EducationGraduation  +     -0.1598988619204 * EducationMaster
408138    +          +     0.82178907301319 * Marital_StatusDivorced
408139    +          +     1.69543553114589 * Marital_StatusMarried
408140    +          +     -2.1272067363559 * Marital_StatusSingle
408141    +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle +
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 *
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 *
Marital_StatusTogether ;
408142    +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
408143    +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
408144    +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
408145    +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
408146    +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
408147    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
408148    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
408149    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
408150    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
408151    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
408152    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
408153    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
408154    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
408155    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
408156    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
408157    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
408158    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
408159    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
408160    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
408161    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
408162    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
408163    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
408164    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
408165    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
408166    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
408167    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
408168    +END;
MPRINT(EM_DIAGRAM):   END;
408169    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
408170    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
408171    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
408172    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
408173    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
408174    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
408175    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
408176    +END;
MPRINT(EM_DIAGRAM):   END;
408177    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408178    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
408179    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408180    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
408181    +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
408182    +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
408183    +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 +
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 +
-1.38760297105319 * H1x1_6 ;
408184    +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
408185    +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
408186    +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 +
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 +
2.71965753640902 * H1x1_6 ;
408187    +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
408188    +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
408189    +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 +
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 +
-0.94725163293394 * H1x1_6 ;
408190    +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
408191    +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
408192    +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 +
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 +
0.66585878141635 * H1x1_6 ;
408193    +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
408194    +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
408195    +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 +
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 +
3.57592566919388 * H1x1_6 ;
408196    +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
408197    +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
408198    +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 +
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 +
-0.32006241006585 * H1x1_6 ;
408199    +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
408200    +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
408201    +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
408202    +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 *
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 +
-0.07237646966438 * H1x2_6 ;
408203    +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
408204    +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
408205    +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
408206    +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 +
0.35471332651631 * H1x2_6 ;
408207    +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
408208    +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
408209    +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
408210    +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 +
0.5218140468737 * H1x2_6 ;
408211    +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
408212    +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
408213    +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
408214    +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 +
-0.67920869444907 * H1x2_6 ;
408215    +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
408216    +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
408217    +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
408218    +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 +
1.1175989027563 * H1x2_6 ;
408219    +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
408220    +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
408221    +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
408222    +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 *
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5
+ 1.54589390085972 * H1x2_6 ;
408223    +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
408224    +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
408225    +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
408226    +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
408227    +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
408228    +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
408229    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
408230    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
408231    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
408232    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
408233    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
408234    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
408235    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
408236    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
408237    +END;
MPRINT(EM_DIAGRAM):   END;
408238    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
408239    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
408240    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
408241    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
408242    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
408243    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
408244    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
408245    +END;
MPRINT(EM_DIAGRAM):   END;
408246    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408247    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
408248    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408249    +
408250    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
408251    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
408252    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
408253    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
408254    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
408255    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408256    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
408257    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
408258    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
408259    +end;
MPRINT(EM_DIAGRAM):   end;
408260    +else do;
MPRINT(EM_DIAGRAM):   else do;
408261    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
408262    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
408263    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
408264    +   end;
MPRINT(EM_DIAGRAM):   end;
408265    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
408266    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
408267    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
408268    +   end;
MPRINT(EM_DIAGRAM):   end;
408269    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408270    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
408271    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
408272    +   end;
MPRINT(EM_DIAGRAM):   end;
408273    +end;
MPRINT(EM_DIAGRAM):   end;
408274    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
408275    +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
408276    +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
408277    +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 +
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 +
1.54726164498938 * H2x1_6 ;
408278    +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
408279    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
408280    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
408281    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
408282    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
408283    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
408284    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
408285    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
408286    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
408287    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
408288    +END;
MPRINT(EM_DIAGRAM):   END;
408289    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
408290    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
408291    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
408292    +END;
MPRINT(EM_DIAGRAM):   END;
408293    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
408294    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
408295    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
408296    +END;
MPRINT(EM_DIAGRAM):   END;
408297    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
408298    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
408299    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
408300    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
408301    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
408302    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
408303    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
408304    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408305    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
408306    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408307    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
408308    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
408309    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
408310    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
408311    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
408312    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
408313    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
408314    +END;
MPRINT(EM_DIAGRAM):   END;
408315    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
408316    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
408317    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
408318    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
408319     run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL11_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
408320     quit;
408321     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
408322     filename emflow
408322   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
408323     *------------------------------------------------------------*;
408324     * AutoNeural11: Scoring VALIDATE data;
408325     *------------------------------------------------------------*;
408326     data EMWS8.AutoNeural11_VALIDATE
408327     / view=EMWS8.AutoNeural11_VALIDATE
408328     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_VALIDATE / view=EMWS8.AutoNeural11_VALIDATE ;
408329     set EMWS8.Meta_VALIDATE
408330     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
408331     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas.
408332    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
408333    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
408334    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
408335    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
408336    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
408337    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
408338    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
408339    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
408340    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
408341    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
408342    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
408343    +LENGTH _WARN_ $4
408344    +      F_DepVar  $ 12
408345    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
408346    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
408347    +
408348    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
408349    +
408350    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
408351    +
408352    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
408353    +
408354    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
408355    +
408356    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
408357    +
408358    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
408359    +
408360    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
408361    +
408362    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
408363    +
408364    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
408365    +
408366    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
408367    +
408368    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
408369    +
408370    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
408371    +
408372    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
408373    +
408374    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
408375    +
408376    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
408377    +
408378    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
408379    +
408380    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
408381    +
408382    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
408383    +
408384    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
408385    +
408386    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
408387    +
408388    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
408389    +
408390    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
408391    +
408392    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
408393    +
408394    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
408395    +
408396    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
408397    +
408398    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
408399    +
408400    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
408401    +
408402    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
408403    +
408404    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
408405    +
408406    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
408407    +
408408    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
408409    +
408410    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
408411    +
408412    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
408413    +
408414    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
408415    +
408416    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
408417    +
408418    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
408419    +
408420    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
408421    +
408422    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
408423    +
408424    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
408425    +
408426    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
408427    +
408428    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
408429    +
408430    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
408431    +
408432    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
408433    +
408434    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
408435    +
408436    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
408437    +
408438    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
408439    +
408440    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
408441    +
408442    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
408443    +
408444    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
408445    +
408446    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
408447    +
408448    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
408449    +
408450    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
408451    +
408452    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
408453    +
408454    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
408455    +
408456    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
408457    +
408458    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
408459    +
408460    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
408461    +
408462    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
408463    +
408464    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
408465    +
408466    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
408467    +
408468    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
408469    +
408470    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
408471    +
408472    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
408473    +
408474    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
408475    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
408476    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
408477    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
408478    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408479    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408480    +end;
MPRINT(EM_DIAGRAM):   end;
408481    +else do;
MPRINT(EM_DIAGRAM):   else do;
408482    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
408483    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
408484    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408485    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
408486    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
408487    +   end;
MPRINT(EM_DIAGRAM):   end;
408488    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
408489    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
408490    +   end;
MPRINT(EM_DIAGRAM):   end;
408491    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408492    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
408493    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408494    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408495    +   end;
MPRINT(EM_DIAGRAM):   end;
408496    +end;
MPRINT(EM_DIAGRAM):   end;
408497    +
408498    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
408499    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
408500    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
408501    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
408502    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408503    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408504    +end;
MPRINT(EM_DIAGRAM):   end;
408505    +else do;
MPRINT(EM_DIAGRAM):   else do;
408506    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
408507    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
408508    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408509    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
408510    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
408511    +   end;
MPRINT(EM_DIAGRAM):   end;
408512    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
408513    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
408514    +   end;
MPRINT(EM_DIAGRAM):   end;
408515    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408516    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
408517    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408518    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408519    +   end;
MPRINT(EM_DIAGRAM):   end;
408520    +end;
MPRINT(EM_DIAGRAM):   end;
408521    +
408522    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
408523    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
408524    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
408525    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
408526    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408527    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408528    +end;
MPRINT(EM_DIAGRAM):   end;
408529    +else do;
MPRINT(EM_DIAGRAM):   else do;
408530    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
408531    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
408532    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408533    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
408534    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
408535    +   end;
MPRINT(EM_DIAGRAM):   end;
408536    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
408537    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
408538    +   end;
MPRINT(EM_DIAGRAM):   end;
408539    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408540    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
408541    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408542    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408543    +   end;
MPRINT(EM_DIAGRAM):   end;
408544    +end;
MPRINT(EM_DIAGRAM):   end;
408545    +
408546    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
408547    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
408548    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
408549    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
408550    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408551    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408552    +end;
MPRINT(EM_DIAGRAM):   end;
408553    +else do;
MPRINT(EM_DIAGRAM):   else do;
408554    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
408555    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
408556    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408557    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
408558    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
408559    +   end;
MPRINT(EM_DIAGRAM):   end;
408560    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
408561    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
408562    +   end;
MPRINT(EM_DIAGRAM):   end;
408563    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408564    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
408565    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408566    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408567    +   end;
MPRINT(EM_DIAGRAM):   end;
408568    +end;
MPRINT(EM_DIAGRAM):   end;
408569    +
408570    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
408571    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
408572    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
408573    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
408574    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408575    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408576    +end;
MPRINT(EM_DIAGRAM):   end;
408577    +else do;
MPRINT(EM_DIAGRAM):   else do;
408578    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
408579    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
408580    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408581    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
408582    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
408583    +   end;
MPRINT(EM_DIAGRAM):   end;
408584    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
408585    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
408586    +   end;
MPRINT(EM_DIAGRAM):   end;
408587    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408588    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
408589    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408590    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408591    +   end;
MPRINT(EM_DIAGRAM):   end;
408592    +end;
MPRINT(EM_DIAGRAM):   end;
408593    +
408594    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
408595    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
408596    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
408597    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
408598    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408599    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408600    +end;
MPRINT(EM_DIAGRAM):   end;
408601    +else do;
MPRINT(EM_DIAGRAM):   else do;
408602    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
408603    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
408604    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408605    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
408606    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
408607    +   end;
MPRINT(EM_DIAGRAM):   end;
408608    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
408609    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
408610    +   end;
MPRINT(EM_DIAGRAM):   end;
408611    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408612    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
408613    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408614    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408615    +   end;
MPRINT(EM_DIAGRAM):   end;
408616    +end;
MPRINT(EM_DIAGRAM):   end;
408617    +
408618    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
408619    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
408620    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
408621    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
408622    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408623    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408624    +end;
MPRINT(EM_DIAGRAM):   end;
408625    +else do;
MPRINT(EM_DIAGRAM):   else do;
408626    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
408627    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
408628    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408629    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
408630    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
408631    +   end;
MPRINT(EM_DIAGRAM):   end;
408632    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
408633    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
408634    +   end;
MPRINT(EM_DIAGRAM):   end;
408635    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408636    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
408637    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408638    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408639    +   end;
MPRINT(EM_DIAGRAM):   end;
408640    +end;
MPRINT(EM_DIAGRAM):   end;
408641    +
408642    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
408643    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
408644    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
408645    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
408646    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
408647    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
408648    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
408649    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
408650    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
408651    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
408652    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
408653    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
408654    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408655    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408656    +end;
MPRINT(EM_DIAGRAM):   end;
408657    +else do;
MPRINT(EM_DIAGRAM):   else do;
408658    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
408659    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
408660    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408661    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
408662    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
408663    +   end;
MPRINT(EM_DIAGRAM):   end;
408664    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
408665    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
408666    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
408667    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
408668    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
408669    +   end;
MPRINT(EM_DIAGRAM):   end;
408670    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
408671    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
408672    +   end;
MPRINT(EM_DIAGRAM):   end;
408673    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
408674    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
408675    +   end;
MPRINT(EM_DIAGRAM):   end;
408676    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
408677    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
408678    +   end;
MPRINT(EM_DIAGRAM):   end;
408679    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408680    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
408681    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
408682    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
408683    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
408684    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408685    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408686    +   end;
MPRINT(EM_DIAGRAM):   end;
408687    +end;
MPRINT(EM_DIAGRAM):   end;
408688    +
408689    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
408690    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
408691    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
408692    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
408693    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
408694    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
408695    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
408696    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
408697    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
408698    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
408699    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
408700    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
408701    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
408702    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408703    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408704    +end;
MPRINT(EM_DIAGRAM):   end;
408705    +else do;
MPRINT(EM_DIAGRAM):   else do;
408706    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
408707    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
408708    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408709    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
408710    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
408711    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
408712    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
408713    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
408714    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
408715    +         end;
MPRINT(EM_DIAGRAM):   end;
408716    +         else do;
MPRINT(EM_DIAGRAM):   else do;
408717    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
408718    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
408719    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
408720    +            end;
MPRINT(EM_DIAGRAM):   end;
408721    +         end;
MPRINT(EM_DIAGRAM):   end;
408722    +      end;
MPRINT(EM_DIAGRAM):   end;
408723    +      else do;
MPRINT(EM_DIAGRAM):   else do;
408724    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
408725    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
408726    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
408727    +         end;
MPRINT(EM_DIAGRAM):   end;
408728    +      end;
MPRINT(EM_DIAGRAM):   end;
408729    +   end;
MPRINT(EM_DIAGRAM):   end;
408730    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408731    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
408732    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
408733    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
408734    +      end;
MPRINT(EM_DIAGRAM):   end;
408735    +      else do;
MPRINT(EM_DIAGRAM):   else do;
408736    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
408737    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
408738    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
408739    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
408740    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
408741    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
408742    +         end;
MPRINT(EM_DIAGRAM):   end;
408743    +      end;
MPRINT(EM_DIAGRAM):   end;
408744    +   end;
MPRINT(EM_DIAGRAM):   end;
408745    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
408746    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
408747    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
408748    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
408749    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
408750    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408751    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408752    +   end;
MPRINT(EM_DIAGRAM):   end;
408753    +end;
MPRINT(EM_DIAGRAM):   end;
408754    +
408755    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408756    +*** Checking missing input Interval
408757    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
408758    +
408759    +IF NMISS(
408760    +   AcceptedCmpTotal ,
408761    +   Age ,
408762    +   Frq ,
408763    +   Income ,
408764    +   Kidhome ,
408765    +   Mnt ,
408766    +   MntFishProducts ,
408767    +   MntFruits ,
408768    +   MntGoldProds ,
408769    +   MntMeatProducts ,
408770    +   MntSweetProducts ,
408771    +   MntWines ,
408772    +   MonthsAsCustomer ,
408773    +   NumCatalogPurchases ,
408774    +   NumDealsPurchases ,
408775    +   NumDistPurchases ,
408776    +   NumStorePurchases ,
408777    +   NumWebPurchases ,
408778    +   NumWebVisitsMonth ,
408779    +   RFMstat ,
408780    +   RMntFrq ,
408781    +   Recency ,
408782    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
408783    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
408784    +
408785    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408786    +END;
MPRINT(EM_DIAGRAM):   END;
408787    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408788    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
408789    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408790    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
408791    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
408792    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
408793    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
408794    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
408795    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
408796    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
408797    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
408798    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
408799    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
408800    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
408801    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
408802    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
408803    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
408804    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
408805    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
408806    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
408807    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
408808    +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
408809    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
408810    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
408811    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
408812    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
408813    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
408814    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
408815    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
408816    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
408817    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
408818    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
408819    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
408820    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
408821    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
408822    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
408823    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
408824    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
408825    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
408826    +END;
MPRINT(EM_DIAGRAM):   END;
408827    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
408828    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
408829    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
408830    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
408831    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
408832    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
408833    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
408834    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
408835    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
408836    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
408837    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
408838    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
408839    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
408840    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
408841    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
408842    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
408843    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
408844    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
408845    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
408846    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
408847    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
408848    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
408849    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
408850    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
408851    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
408852    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
408853    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
408854    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
408855    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
408856    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
408857    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
408858    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
408859    +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
408860    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
408861    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
408862    +   ELSE S_NumCatalogPurchases
408863    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
408864    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
408865    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
408866    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
408867    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
408868    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
408869    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
408870    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
408871    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
408872    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
408873    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
408874    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
408875    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
408876    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
408877    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
408878    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
408879    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
408880    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
408881    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
408882    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
408883    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
408884    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
408885    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
408886    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
408887    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
408888    +END;
MPRINT(EM_DIAGRAM):   END;
408889    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408890    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
408891    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408892    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408893    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
408894    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408895    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408896    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
408897    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408898    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
408899    +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
408900    +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
408901    +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
408902    +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
408903    +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
408904    +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
408905    +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
408906    +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
408907    +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
408908    +          +     1.32037113020393 * S_NumDealsPurchases
408909    +          +     0.42879249227132 * S_NumDistPurchases
408910    +          +    -0.89190172778783 * S_NumStorePurchases
408911    +          +    -0.87975442613962 * S_NumWebPurchases
408912    +          +     2.98977282825831 * S_NumWebVisitsMonth
408913    +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
408914    +        S_RMntFrq  +    -2.53833222281652 * S_Recency
408915    +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 *
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 *
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts +
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 *
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines +
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases +
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases +
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases +
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 *
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
408916    +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
408917    +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
408918    +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
408919    +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
408920    +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
408921    +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
408922    +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
408923    +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
408924    +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
408925    +          +    -1.16737670931605 * S_NumDealsPurchases
408926    +          +     0.08205195039242 * S_NumDistPurchases
408927    +          +    -0.65367044520084 * S_NumStorePurchases
408928    +          +     2.39693083674757 * S_NumWebPurchases
408929    +          +     0.18432526469897 * S_NumWebVisitsMonth
408930    +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
408931    +        S_RMntFrq  +    -0.12214066685673 * S_Recency
408932    +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 *
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 *
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts +
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 *
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines +
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases +
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases +
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases +
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 *
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
408933    +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
408934    +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
408935    +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
408936    +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
408937    +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
408938    +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
408939    +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
408940    +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
408941    +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
408942    +          +     0.76616480025024 * S_NumDealsPurchases
408943    +          +     0.42823368706255 * S_NumDistPurchases
408944    +          +    -1.16998364854907 * S_NumStorePurchases
408945    +          +     -1.0841896541746 * S_NumWebPurchases
408946    +          +     2.74837744375079 * S_NumWebVisitsMonth
408947    +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
408948    +        S_RMntFrq  +    -5.13438280616518 * S_Recency
408949    +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 *
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 *
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts +
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 *
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines +
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases +
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases +
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases +
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 *
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
408950    +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
408951    +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
408952    +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
408953    +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
408954    +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
408955    +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
408956    +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
408957    +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
408958    +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
408959    +          +     0.78421010501058 * S_NumDealsPurchases
408960    +          +     0.01075885160671 * S_NumDistPurchases
408961    +          +    -1.99395040717832 * S_NumStorePurchases
408962    +          +    -1.02908330834262 * S_NumWebPurchases
408963    +          +     2.79163466516477 * S_NumWebVisitsMonth
408964    +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
408965    +        S_RMntFrq  +     -2.0907247135068 * S_Recency
408966    +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 *
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 *
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts +
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 *
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines +
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases +
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases +
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases +
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 *
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
408967    +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
408968    +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
408969    +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
408970    +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
408971    +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
408972    +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
408973    +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
408974    +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
408975    +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
408976    +          +    -1.04219068390022 * S_NumDealsPurchases
408977    +          +    -0.45770204483973 * S_NumDistPurchases
408978    +          +    -0.04941442229195 * S_NumStorePurchases
408979    +          +     0.67187353161183 * S_NumWebPurchases
408980    +          +     2.01907760553871 * S_NumWebVisitsMonth
408981    +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
408982    +        S_RMntFrq  +    -1.12913051410394 * S_Recency
408983    +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 *
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 *
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts +
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 *
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 *
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 *
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 *
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq +
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
408984    +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
408985    +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
408986    +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
408987    +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
408988    +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 +
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 *
HigherEducationBinary0 ;
408989    +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
408990    +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
408991    +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
408992    +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
408993    +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 *
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 +
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 *
HigherEducationBinary0 ;
408994    +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
408995    +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
408996    +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
408997    +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
408998    +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 +
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 *
HigherEducationBinary0 ;
408999    +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
409000    +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
409001    +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
409002    +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
409003    +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 +
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 *
HigherEducationBinary0 ;
409004    +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
409005    +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
409006    +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
409007    +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
409008    +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 *
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 +
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 *
HigherEducationBinary0 ;
409009    +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
409010    +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
409011    +        EducationGraduation  +     0.09596442360106 * EducationMaster
409012    +          +     2.58907527032049 * Marital_StatusDivorced
409013    +          +    -2.45549008158921 * Marital_StatusMarried
409014    +          +     2.56223650840768 * Marital_StatusSingle
409015    +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle +
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 *
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 *
Marital_StatusTogether ;
409016    +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
409017    +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
409018    +        EducationGraduation  +     0.29249899969052 * EducationMaster
409019    +          +     0.83917299191368 * Marital_StatusDivorced
409020    +          +    -0.62624692699191 * Marital_StatusMarried
409021    +          +    -0.22585060624911 * Marital_StatusSingle
409022    +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle +
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 *
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 *
Marital_StatusTogether ;
409023    +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
409024    +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
409025    +        EducationGraduation  +     -1.3163356801876 * EducationMaster
409026    +          +    -0.65063506696715 * Marital_StatusDivorced
409027    +          +    -2.37495865381256 * Marital_StatusMarried
409028    +          +    -0.54954654146904 * Marital_StatusSingle
409029    +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle +
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 *
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 *
Marital_StatusTogether ;
409030    +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
409031    +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
409032    +        EducationGraduation  +     0.07916018399549 * EducationMaster
409033    +          +     0.16185824798364 * Marital_StatusDivorced
409034    +          +    -0.08142416735136 * Marital_StatusMarried
409035    +          +    -0.20392270385969 * Marital_StatusSingle
409036    +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle +
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation +
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced +
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle +
-0.16702436233017 * Marital_StatusTogether ;
409037    +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
409038    +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
409039    +        EducationGraduation  +     0.28107355175103 * EducationMaster
409040    +          +      -0.516522631078 * Marital_StatusDivorced
409041    +          +    -0.61661247789976 * Marital_StatusMarried
409042    +          +    -0.99533130308294 * Marital_StatusSingle
409043    +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle +
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation +
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced +
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle +
-0.36897004084592 * Marital_StatusTogether ;
409044    +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
409045    +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
409046    +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
409047    +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
409048    +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
409049    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
409050    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
409051    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
409052    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
409053    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
409054    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
409055    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
409056    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
409057    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
409058    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
409059    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
409060    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
409061    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
409062    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
409063    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
409064    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
409065    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
409066    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
409067    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
409068    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
409069    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
409070    +END;
MPRINT(EM_DIAGRAM):   END;
409071    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
409072    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
409073    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
409074    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
409075    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
409076    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
409077    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
409078    +END;
MPRINT(EM_DIAGRAM):   END;
409079    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409080    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
409081    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409082    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
409083    +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
409084    +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
409085    +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
409086    +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
409087    +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
409088    +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
409089    +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
409090    +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
409091    +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
409092    +          +    -0.03801022287706 * S_NumDealsPurchases
409093    +          +    -1.50723574966419 * S_NumDistPurchases
409094    +          +    -0.21514545448485 * S_NumStorePurchases
409095    +          +    -0.50179555233865 * S_NumWebPurchases
409096    +          +    -0.68226572560161 * S_NumWebVisitsMonth
409097    +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
409098    +        S_RMntFrq  +     0.78178939203913 * S_Recency
409099    +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 *
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 *
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts +
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 *
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 *
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 *
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 *
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq +
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
409100    +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
409101    +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
409102    +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
409103    +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
409104    +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
409105    +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
409106    +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
409107    +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
409108    +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
409109    +          +     0.70551335536975 * S_NumDealsPurchases
409110    +          +     0.02824488988803 * S_NumDistPurchases
409111    +          +    -0.47958123842808 * S_NumStorePurchases
409112    +          +     1.04559003239583 * S_NumWebPurchases
409113    +          +    -0.58386087813772 * S_NumWebVisitsMonth
409114    +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
409115    +        S_RMntFrq  +    -0.05848082255965 * S_Recency
409116    +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 *
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 *
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts +
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 *
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 *
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 *
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 *
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq +
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
409117    +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
409118    +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
409119    +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
409120    +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
409121    +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
409122    +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
409123    +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
409124    +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
409125    +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
409126    +          +    -0.28907339261907 * S_NumDealsPurchases
409127    +          +     0.04310505858352 * S_NumDistPurchases
409128    +          +    -0.99594604666889 * S_NumStorePurchases
409129    +          +    -0.58870940220114 * S_NumWebPurchases
409130    +          +     0.84018399925148 * S_NumWebVisitsMonth
409131    +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
409132    +        S_RMntFrq  +    -1.47730936960999 * S_Recency
409133    +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 *
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 *
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts +
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 *
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 *
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 *
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 *
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq +
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
409134    +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
409135    +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
409136    +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
409137    +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
409138    +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
409139    +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
409140    +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
409141    +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
409142    +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
409143    +          +     0.52917289878604 * S_NumDealsPurchases
409144    +          +     0.30974142545809 * S_NumDistPurchases
409145    +          +    -0.36081450643799 * S_NumStorePurchases
409146    +          +    -0.28418053386759 * S_NumWebPurchases
409147    +          +    -0.80759462497096 * S_NumWebVisitsMonth
409148    +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
409149    +        S_RMntFrq  +    -0.02418118976368 * S_Recency
409150    +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 *
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 *
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts +
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 *
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 *
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 *
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 *
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq +
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
409151    +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
409152    +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
409153    +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
409154    +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
409155    +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
409156    +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
409157    +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
409158    +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
409159    +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
409160    +          +    -0.47500053723253 * S_NumDealsPurchases
409161    +          +     0.41421086319635 * S_NumDistPurchases
409162    +          +     0.69664835428137 * S_NumStorePurchases
409163    +          +     0.66359306812968 * S_NumWebPurchases
409164    +          +     0.77931462528741 * S_NumWebVisitsMonth
409165    +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
409166    +        S_RMntFrq  +    -1.91226042675868 * S_Recency
409167    +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 *
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 *
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts +
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 *
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 *
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 *
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 *
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq +
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
409168    +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
409169    +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
409170    +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
409171    +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
409172    +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 *
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 +
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 *
HigherEducationBinary0 ;
409173    +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
409174    +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
409175    +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
409176    +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
409177    +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 *
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 +
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 *
HigherEducationBinary0 ;
409178    +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
409179    +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
409180    +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
409181    +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
409182    +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 *
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 +
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 *
HigherEducationBinary0 ;
409183    +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
409184    +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
409185    +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
409186    +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
409187    +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 *
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 +
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 *
HigherEducationBinary0 ;
409188    +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
409189    +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
409190    +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
409191    +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
409192    +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 *
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 +
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 *
HigherEducationBinary0 ;
409193    +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
409194    +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
409195    +        EducationGraduation  +     0.89392741557091 * EducationMaster
409196    +          +    -1.34742914042312 * Marital_StatusDivorced
409197    +          +    -0.75378934918763 * Marital_StatusMarried
409198    +          +    -1.85411678929217 * Marital_StatusSingle
409199    +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle +
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 *
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 *
Marital_StatusTogether ;
409200    +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
409201    +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
409202    +        EducationGraduation  +      1.4602485898642 * EducationMaster
409203    +          +     0.47958659206261 * Marital_StatusDivorced
409204    +          +     -0.9665584294045 * Marital_StatusMarried
409205    +          +      0.9733784530538 * Marital_StatusSingle
409206    +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle +
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 *
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 *
Marital_StatusTogether ;
409207    +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
409208    +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
409209    +        EducationGraduation  +     1.49772418974753 * EducationMaster
409210    +          +    -0.56894207908284 * Marital_StatusDivorced
409211    +          +    -0.96715106987195 * Marital_StatusMarried
409212    +          +     1.18678144721443 * Marital_StatusSingle
409213    +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle +
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation +
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced +
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle +
1.05940264255347 * Marital_StatusTogether ;
409214    +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
409215    +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
409216    +        EducationGraduation  +    -2.01250798855133 * EducationMaster
409217    +          +     -0.6061959224661 * Marital_StatusDivorced
409218    +          +     0.03495844244684 * Marital_StatusMarried
409219    +          +    -0.63896361063244 * Marital_StatusSingle
409220    +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle +
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation +
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced +
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle +
0.74357887057422 * Marital_StatusTogether ;
409221    +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
409222    +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
409223    +        EducationGraduation  +     -0.1598988619204 * EducationMaster
409224    +          +     0.82178907301319 * Marital_StatusDivorced
409225    +          +     1.69543553114589 * Marital_StatusMarried
409226    +          +     -2.1272067363559 * Marital_StatusSingle
409227    +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle +
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 *
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 *
Marital_StatusTogether ;
409228    +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
409229    +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
409230    +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
409231    +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
409232    +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
409233    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
409234    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
409235    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
409236    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
409237    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
409238    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
409239    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
409240    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
409241    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
409242    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
409243    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
409244    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
409245    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
409246    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
409247    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
409248    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
409249    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
409250    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
409251    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
409252    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
409253    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
409254    +END;
MPRINT(EM_DIAGRAM):   END;
409255    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
409256    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
409257    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
409258    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
409259    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
409260    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
409261    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
409262    +END;
MPRINT(EM_DIAGRAM):   END;
409263    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409264    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
409265    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409266    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
409267    +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
409268    +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
409269    +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 +
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 +
-1.38760297105319 * H1x1_6 ;
409270    +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
409271    +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
409272    +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 +
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 +
2.71965753640902 * H1x1_6 ;
409273    +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
409274    +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
409275    +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 +
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 +
-0.94725163293394 * H1x1_6 ;
409276    +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
409277    +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
409278    +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 +
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 +
0.66585878141635 * H1x1_6 ;
409279    +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
409280    +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
409281    +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 +
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 +
3.57592566919388 * H1x1_6 ;
409282    +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
409283    +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
409284    +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 +
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 +
-0.32006241006585 * H1x1_6 ;
409285    +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
409286    +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
409287    +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
409288    +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 *
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 +
-0.07237646966438 * H1x2_6 ;
409289    +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
409290    +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
409291    +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
409292    +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 +
0.35471332651631 * H1x2_6 ;
409293    +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
409294    +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
409295    +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
409296    +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 +
0.5218140468737 * H1x2_6 ;
409297    +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
409298    +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
409299    +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
409300    +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 +
-0.67920869444907 * H1x2_6 ;
409301    +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
409302    +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
409303    +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
409304    +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 +
1.1175989027563 * H1x2_6 ;
409305    +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
409306    +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
409307    +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
409308    +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 *
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5
+ 1.54589390085972 * H1x2_6 ;
409309    +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
409310    +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
409311    +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
409312    +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
409313    +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
409314    +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
409315    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
409316    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
409317    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
409318    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
409319    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
409320    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
409321    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
409322    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
409323    +END;
MPRINT(EM_DIAGRAM):   END;
409324    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
409325    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
409326    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
409327    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
409328    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
409329    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
409330    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
409331    +END;
MPRINT(EM_DIAGRAM):   END;
409332    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409333    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
409334    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409335    +
409336    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
409337    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
409338    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
409339    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
409340    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
409341    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
409342    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
409343    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
409344    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
409345    +end;
MPRINT(EM_DIAGRAM):   end;
409346    +else do;
MPRINT(EM_DIAGRAM):   else do;
409347    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
409348    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
409349    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
409350    +   end;
MPRINT(EM_DIAGRAM):   end;
409351    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
409352    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
409353    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
409354    +   end;
MPRINT(EM_DIAGRAM):   end;
409355    +   else do;
MPRINT(EM_DIAGRAM):   else do;
409356    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
409357    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
409358    +   end;
MPRINT(EM_DIAGRAM):   end;
409359    +end;
MPRINT(EM_DIAGRAM):   end;
409360    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
409361    +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
409362    +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
409363    +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 +
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 +
1.54726164498938 * H2x1_6 ;
409364    +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
409365    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
409366    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
409367    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
409368    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
409369    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
409370    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
409371    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
409372    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
409373    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
409374    +END;
MPRINT(EM_DIAGRAM):   END;
409375    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
409376    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
409377    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
409378    +END;
MPRINT(EM_DIAGRAM):   END;
409379    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
409380    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
409381    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
409382    +END;
MPRINT(EM_DIAGRAM):   END;
409383    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
409384    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
409385    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
409386    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
409387    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
409388    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
409389    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
409390    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409391    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
409392    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409393    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
409394    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
409395    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
409396    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
409397    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
409398    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
409399    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
409400    +END;
MPRINT(EM_DIAGRAM):   END;
409401    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
409402    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
409403    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
409404    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
409405     run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL11_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
409406     quit;
409407     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
409408     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
409409     * AutoNeural11: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Computing metadata for TRAIN data;
409410     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.AUTONEURAL11_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural11_TRAIN out=_tempAdvisor
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural11_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural11_TRAIN out=WORK.M1TBCMZN
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TBCMZN;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TBCMZN(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TBCMZN;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TBCMZN;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1LK2FBM NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1LK2FBM;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LK2FBM;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3E8WZF6(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LK2FBM;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1LK2FBM;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LK2FBM;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1LK2FBM;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LK2FBM;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural11";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
409722     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
409723     set EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMINFO;
409724     where DATA='AutoNeural11' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural11' and KEY ^in('DECDATA', 'DECMETA',
'IMPORTANCE', 'MODEL');
409725     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
      WHERE (DATA='AutoNeural11') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
409726     data EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_EMINFO;
409727     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
409728     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
409729     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.AUTONEURAL11_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
409733     run;
409734     data EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMINFO;
409735     set EMWS8.AutoNeural11_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMINFO WORK.MODELTEMP_INFO;
409736     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL11_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
409737     proc sort data = EMWS8.AutoNeural11_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural11_EMINFO NOTHREADS;
409738     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
409739     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL11_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
409740     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
409741     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
409742     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
409743     proc sort data = EMWS8.AutoNeural11_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural11_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
409744     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
409745     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
409746     data EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMINFO;
409747     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
409748     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
409749     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL11_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
409750     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
409751     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
409752     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
409753     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS8.AUTONEURAL11_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS8.AUTONEURAL11_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.42 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                21. April 2016
Time:                18.42 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3R9HRQD
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3R9HRQD new;
MPRINT(EM_DIAGRAM):   run;
409777     proc sort data=EMWS8.AutoNeural11_OUTFIT nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural11_OUTFIT nodupkey;
409778     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
409779     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL11_OUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS8.AUTONEURAL11_OUTFIT has 2 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
409780     data EMWS8.AutoNeural11_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMOUTFIT(rename=(_NAME_=TARGET));
409781     set EMWS8.AutoNeural11_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTFIT(where=(_NAME_ eq 'OVERALL'));
409782     label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
409783     if _NAME_='OVERALL' then _NAME_='DepVar';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='DepVar';
409784     drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
409785     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS8.AUTONEURAL11_EMOUTFIT has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
409786     data EMWS8.AutoNeural11_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_EMOUTFIT;
409787     set EMWS8.AutoNeural11_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMOUTFIT;
409788     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
409789     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
409789   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
409790     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
409791     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_EMOUTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_EMOUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
409792     proc sort data=EMWS8.AutoNeural11_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural11_EMREPORTFIT nothreads;
409793     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
409794     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL11_EMREPORTFIT.
NOTE: The data set EMWS8.AUTONEURAL11_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
409795     %let _EMwarndup = 0;
409796     %let _EMtargetdup =;
409797     %let _EMASEtargetdup =;
409798     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
409799     set EMWS8.AutoNeural11_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMOUTFIT;
409800     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
409801     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
409802     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
409803     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
409804     end;
MPRINT(EM_DIAGRAM):   end;
409805     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL11_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
409806     proc sort data=EMWS8.Meta_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Meta_CMeta_TRAIN out=WORK.SUBSETINMETA;
409807     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
409808     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.META_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 36 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
409809     proc sort data=EMWS8.AutoNeural11_VariableSet out=WORK.SUBSETVARSET(keep=NAME
409809   ! REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
409810     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
409811     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
409812     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
409813     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
409814     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
409815     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 36 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
409816     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
409817     set EMWS8.AutoNeural11_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_CMeta_TRAIN;
409818     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
409818   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
409819     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL11_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
409820     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
409821     set EMWS8.AutoNeural11_TRAIN(keep=
409822     F_DepVar
409823     I_DepVar
409824     P_DepVar0
409825     P_DepVar1
409826     R_DepVar0
409827     R_DepVar1
409828     U_DepVar
409829     _WARN_
409830     DepVar
409831     );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
409832     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL11_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL11_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural11_26EHNAE nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural11_26EHNAE;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural11_26EHNAE(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural11_26EHNAE;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural11_26EHNAE;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 1.0802066E-8 OVLMAX 0.9999999965 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
414098     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
414099     set EMWS8.AutoNeural11_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_CMeta_TRAIN;
414100     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
414100   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
414101     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL11_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
414102     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
414103     set EMWS8.AutoNeural11_VALIDATE(keep=
414104     F_DepVar
414105     I_DepVar
414106     P_DepVar0
414107     P_DepVar1
414108     R_DepVar0
414109     R_DepVar1
414110     U_DepVar
414111     _WARN_
414112     DepVar
414113     );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0
P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
414114     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.AUTONEURAL11_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL11_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural11_23FDC31 nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural11_23FDC31;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural11_23FDC31(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMCLASSIFICATION WORK.AutoNeural11_23FDC31;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural11_23FDC31;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 1.0985353E-8 OVLMAX 0.9999999983 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
418389     %let _cn = %sysfunc(getoption(CENTER));
418390     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
418391     proc print data=EMWS8.AutoNeural11_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_EMREPORTFIT noobs label;
418392     var STAT LABEL TRAIN
418393     VALIDATE
418394     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
418395     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
418396     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
418397     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
418398     run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL11_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 489.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
418399     title10;
MPRINT(EM_DIAGRAM):   title10;
418400     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
418401     proc sort data=EMWS8.AutoNeural11_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural11_EMCLASSIFICATION nothreads;
418402     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
418403     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL11_EMCLASSIFICATION.
NOTE: The data set EMWS8.AUTONEURAL11_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
418404     %let _cn = %sysfunc(getoption(CENTER));
418405     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
418406     proc print data=EMWS8.AutoNeural11_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_EMCLASSIFICATION noobs label;
418407     var from into pct_row pct_col count percent
418408     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
418409     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
418410     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
418411     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
418412     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
418413     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
418414     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
418415     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
418416     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
418417     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
418418     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
418419     run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL11_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 490.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
418420     title9;
MPRINT(EM_DIAGRAM):   title9;
418421     title10;
MPRINT(EM_DIAGRAM):   title10;
418422     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
418423     %let _cn = %sysfunc(getoption(CENTER));
418424     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
418425     data EMWS8.AutoNeural11_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMEVENTREPORT;
418426     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
418426   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
418427     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
418427   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
418427   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
418427   ! FALSEEVENT
418428     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
418428   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
418428   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
418429        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
418430     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
418431     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
418432     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
418433     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
418434     set EMWS8.AutoNeural11_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMEVENTREPORT;
418435     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL11_EMEVENTREPORT.
NOTE: The data set EMWS8.AUTONEURAL11_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
418436     proc print data=EMWS8.AutoNeural11_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_EMEVENTREPORT noobs label;
418437     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
418438     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
418439     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
418440     run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL11_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 491.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
418441     title10;
MPRINT(EM_DIAGRAM):   title10;
418442     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
418443     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
418444     modify AutoNeural11_EMRANK;
MPRINT(EM_DIAGRAM):   modify AutoNeural11_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
418445     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
418446     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
418446   ! ;
MPRINT(EM_DIAGRAM):   run;
418447     run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL11_EMRANK.DATA.
418448     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
418449     %let _cn = %sysfunc(getoption(CENTER));
418450     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
418451     proc print data=EMWS8.AutoNeural11_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_EMRANK label noobs;
418452     var
418453     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
418454     by
418455     notsorted DATAROLE
418456     notsorted TARGET
418457     notsorted TARGETLABEL
418458     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
418459     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
418460     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
418461     run;
 
NOTE: There were 40 observations read from the data set EMWS8.AUTONEURAL11_EMRANK.
NOTE: The PROCEDURE PRINT printed page 492.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
418462     title10;
MPRINT(EM_DIAGRAM):   title10;
418463     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
418464     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
418465     modify AutoNeural11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify AutoNeural11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
418466     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
418466   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
418467     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
418467   ! ;
MPRINT(EM_DIAGRAM):   run;
418468     run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL11_EMSCOREDIST.DATA.
418469     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural11_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
