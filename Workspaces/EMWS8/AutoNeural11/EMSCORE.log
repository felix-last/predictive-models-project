MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.42 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.42 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3OWFMG1 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3OWFMG1 new;
MPRINT(EM_DIAGRAM):   run;
407236     filename emflow
407236   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
407237     *------------------------------------------------------------*;
407238     * AutoNeural11: Scoring DATA data;
407239     *------------------------------------------------------------*;
407240     data EMWS8.AutoNeural11_TRAIN
407241     / view=EMWS8.AutoNeural11_TRAIN
407242     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_TRAIN / view=EMWS8.AutoNeural11_TRAIN ;
407243     set EMWS8.Meta_TRAIN
407244     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
407245     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas.
407246    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
407247    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
407248    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
407249    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
407250    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
407251    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
407252    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
407253    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
407254    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
407255    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
407256    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
407257    +LENGTH _WARN_ $4
407258    +      F_DepVar  $ 12
407259    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
407260    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
407261    +
407262    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
407263    +
407264    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
407265    +
407266    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
407267    +
407268    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
407269    +
407270    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
407271    +
407272    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
407273    +
407274    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
407275    +
407276    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
407277    +
407278    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
407279    +
407280    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
407281    +
407282    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
407283    +
407284    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
407285    +
407286    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
407287    +
407288    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
407289    +
407290    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
407291    +
407292    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
407293    +
407294    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
407295    +
407296    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
407297    +
407298    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
407299    +
407300    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
407301    +
407302    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
407303    +
407304    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
407305    +
407306    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
407307    +
407308    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
407309    +
407310    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
407311    +
407312    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
407313    +
407314    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
407315    +
407316    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
407317    +
407318    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
407319    +
407320    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
407321    +
407322    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
407323    +
407324    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
407325    +
407326    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
407327    +
407328    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
407329    +
407330    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
407331    +
407332    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
407333    +
407334    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
407335    +
407336    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
407337    +
407338    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
407339    +
407340    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
407341    +
407342    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
407343    +
407344    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
407345    +
407346    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
407347    +
407348    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
407349    +
407350    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
407351    +
407352    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
407353    +
407354    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
407355    +
407356    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
407357    +
407358    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
407359    +
407360    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
407361    +
407362    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
407363    +
407364    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
407365    +
407366    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
407367    +
407368    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
407369    +
407370    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
407371    +
407372    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
407373    +
407374    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
407375    +
407376    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
407377    +
407378    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
407379    +
407380    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
407381    +
407382    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
407383    +
407384    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
407385    +
407386    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
407387    +
407388    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
407389    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
407390    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
407391    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
407392    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407393    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407394    +end;
MPRINT(EM_DIAGRAM):   end;
407395    +else do;
MPRINT(EM_DIAGRAM):   else do;
407396    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
407397    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
407398    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407399    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
407400    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
407401    +   end;
MPRINT(EM_DIAGRAM):   end;
407402    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
407403    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
407404    +   end;
MPRINT(EM_DIAGRAM):   end;
407405    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407406    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
407407    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407408    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407409    +   end;
MPRINT(EM_DIAGRAM):   end;
407410    +end;
MPRINT(EM_DIAGRAM):   end;
407411    +
407412    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
407413    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
407414    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
407415    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
407416    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407417    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407418    +end;
MPRINT(EM_DIAGRAM):   end;
407419    +else do;
MPRINT(EM_DIAGRAM):   else do;
407420    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
407421    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
407422    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407423    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
407424    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
407425    +   end;
MPRINT(EM_DIAGRAM):   end;
407426    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
407427    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
407428    +   end;
MPRINT(EM_DIAGRAM):   end;
407429    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407430    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
407431    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407432    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407433    +   end;
MPRINT(EM_DIAGRAM):   end;
407434    +end;
MPRINT(EM_DIAGRAM):   end;
407435    +
407436    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
407437    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
407438    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
407439    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
407440    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407441    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407442    +end;
MPRINT(EM_DIAGRAM):   end;
407443    +else do;
MPRINT(EM_DIAGRAM):   else do;
407444    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
407445    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
407446    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407447    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
407448    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
407449    +   end;
MPRINT(EM_DIAGRAM):   end;
407450    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
407451    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
407452    +   end;
MPRINT(EM_DIAGRAM):   end;
407453    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407454    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
407455    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407456    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407457    +   end;
MPRINT(EM_DIAGRAM):   end;
407458    +end;
MPRINT(EM_DIAGRAM):   end;
407459    +
407460    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
407461    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
407462    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
407463    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
407464    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407465    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407466    +end;
MPRINT(EM_DIAGRAM):   end;
407467    +else do;
MPRINT(EM_DIAGRAM):   else do;
407468    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
407469    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
407470    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407471    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
407472    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
407473    +   end;
MPRINT(EM_DIAGRAM):   end;
407474    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
407475    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
407476    +   end;
MPRINT(EM_DIAGRAM):   end;
407477    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407478    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
407479    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407480    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407481    +   end;
MPRINT(EM_DIAGRAM):   end;
407482    +end;
MPRINT(EM_DIAGRAM):   end;
407483    +
407484    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
407485    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
407486    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
407487    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
407488    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407489    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407490    +end;
MPRINT(EM_DIAGRAM):   end;
407491    +else do;
MPRINT(EM_DIAGRAM):   else do;
407492    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
407493    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
407494    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407495    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
407496    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
407497    +   end;
MPRINT(EM_DIAGRAM):   end;
407498    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
407499    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
407500    +   end;
MPRINT(EM_DIAGRAM):   end;
407501    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407502    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
407503    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407504    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407505    +   end;
MPRINT(EM_DIAGRAM):   end;
407506    +end;
MPRINT(EM_DIAGRAM):   end;
407507    +
407508    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
407509    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
407510    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
407511    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
407512    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407513    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407514    +end;
MPRINT(EM_DIAGRAM):   end;
407515    +else do;
MPRINT(EM_DIAGRAM):   else do;
407516    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
407517    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
407518    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407519    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
407520    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
407521    +   end;
MPRINT(EM_DIAGRAM):   end;
407522    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
407523    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
407524    +   end;
MPRINT(EM_DIAGRAM):   end;
407525    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407526    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
407527    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407528    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407529    +   end;
MPRINT(EM_DIAGRAM):   end;
407530    +end;
MPRINT(EM_DIAGRAM):   end;
407531    +
407532    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
407533    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
407534    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
407535    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
407536    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407537    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407538    +end;
MPRINT(EM_DIAGRAM):   end;
407539    +else do;
MPRINT(EM_DIAGRAM):   else do;
407540    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
407541    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
407542    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407543    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
407544    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
407545    +   end;
MPRINT(EM_DIAGRAM):   end;
407546    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
407547    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
407548    +   end;
MPRINT(EM_DIAGRAM):   end;
407549    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407550    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
407551    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407552    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407553    +   end;
MPRINT(EM_DIAGRAM):   end;
407554    +end;
MPRINT(EM_DIAGRAM):   end;
407555    +
407556    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
407557    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
407558    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
407559    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
407560    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
407561    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
407562    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
407563    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
407564    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
407565    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
407566    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
407567    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
407568    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407569    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407570    +end;
MPRINT(EM_DIAGRAM):   end;
407571    +else do;
MPRINT(EM_DIAGRAM):   else do;
407572    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
407573    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
407574    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407575    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
407576    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
407577    +   end;
MPRINT(EM_DIAGRAM):   end;
407578    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
407579    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
407580    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
407581    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
407582    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
407583    +   end;
MPRINT(EM_DIAGRAM):   end;
407584    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
407585    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
407586    +   end;
MPRINT(EM_DIAGRAM):   end;
407587    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
407588    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
407589    +   end;
MPRINT(EM_DIAGRAM):   end;
407590    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
407591    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
407592    +   end;
MPRINT(EM_DIAGRAM):   end;
407593    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407594    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
407595    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
407596    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
407597    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
407598    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407599    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407600    +   end;
MPRINT(EM_DIAGRAM):   end;
407601    +end;
MPRINT(EM_DIAGRAM):   end;
407602    +
407603    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
407604    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
407605    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
407606    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
407607    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
407608    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
407609    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
407610    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
407611    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
407612    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
407613    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
407614    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
407615    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
407616    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407617    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407618    +end;
MPRINT(EM_DIAGRAM):   end;
407619    +else do;
MPRINT(EM_DIAGRAM):   else do;
407620    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
407621    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
407622    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407623    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
407624    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
407625    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
407626    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
407627    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
407628    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
407629    +         end;
MPRINT(EM_DIAGRAM):   end;
407630    +         else do;
MPRINT(EM_DIAGRAM):   else do;
407631    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
407632    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
407633    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
407634    +            end;
MPRINT(EM_DIAGRAM):   end;
407635    +         end;
MPRINT(EM_DIAGRAM):   end;
407636    +      end;
MPRINT(EM_DIAGRAM):   end;
407637    +      else do;
MPRINT(EM_DIAGRAM):   else do;
407638    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
407639    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
407640    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
407641    +         end;
MPRINT(EM_DIAGRAM):   end;
407642    +      end;
MPRINT(EM_DIAGRAM):   end;
407643    +   end;
MPRINT(EM_DIAGRAM):   end;
407644    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407645    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
407646    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
407647    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
407648    +      end;
MPRINT(EM_DIAGRAM):   end;
407649    +      else do;
MPRINT(EM_DIAGRAM):   else do;
407650    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
407651    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
407652    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
407653    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
407654    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
407655    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
407656    +         end;
MPRINT(EM_DIAGRAM):   end;
407657    +      end;
MPRINT(EM_DIAGRAM):   end;
407658    +   end;
MPRINT(EM_DIAGRAM):   end;
407659    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
407660    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
407661    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
407662    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
407663    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
407664    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407665    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407666    +   end;
MPRINT(EM_DIAGRAM):   end;
407667    +end;
MPRINT(EM_DIAGRAM):   end;
407668    +
407669    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407670    +*** Checking missing input Interval
407671    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
407672    +
407673    +IF NMISS(
407674    +   AcceptedCmpTotal ,
407675    +   Age ,
407676    +   Frq ,
407677    +   Income ,
407678    +   Kidhome ,
407679    +   Mnt ,
407680    +   MntFishProducts ,
407681    +   MntFruits ,
407682    +   MntGoldProds ,
407683    +   MntMeatProducts ,
407684    +   MntSweetProducts ,
407685    +   MntWines ,
407686    +   MonthsAsCustomer ,
407687    +   NumCatalogPurchases ,
407688    +   NumDealsPurchases ,
407689    +   NumDistPurchases ,
407690    +   NumStorePurchases ,
407691    +   NumWebPurchases ,
407692    +   NumWebVisitsMonth ,
407693    +   RFMstat ,
407694    +   RMntFrq ,
407695    +   Recency ,
407696    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
407697    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
407698    +
407699    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407700    +END;
MPRINT(EM_DIAGRAM):   END;
407701    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407702    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
407703    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407704    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
407705    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
407706    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
407707    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
407708    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
407709    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
407710    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
407711    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
407712    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
407713    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
407714    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
407715    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
407716    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
407717    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
407718    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
407719    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
407720    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
407721    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
407722    +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
407723    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
407724    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
407725    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
407726    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
407727    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
407728    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
407729    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
407730    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
407731    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
407732    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
407733    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
407734    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
407735    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
407736    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
407737    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
407738    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
407739    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
407740    +END;
MPRINT(EM_DIAGRAM):   END;
407741    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
407742    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
407743    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
407744    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
407745    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
407746    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
407747    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
407748    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
407749    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
407750    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
407751    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
407752    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
407753    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
407754    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
407755    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
407756    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
407757    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
407758    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
407759    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
407760    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
407761    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
407762    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
407763    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
407764    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
407765    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
407766    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
407767    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
407768    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
407769    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
407770    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
407771    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
407772    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
407773    +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
407774    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
407775    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
407776    +   ELSE S_NumCatalogPurchases
407777    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
407778    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
407779    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
407780    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
407781    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
407782    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
407783    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
407784    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
407785    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
407786    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
407787    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
407788    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
407789    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
407790    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
407791    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
407792    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
407793    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
407794    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
407795    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
407796    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
407797    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
407798    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
407799    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
407800    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
407801    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
407802    +END;
MPRINT(EM_DIAGRAM):   END;
407803    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407804    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
407805    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407806    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407807    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
407808    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407809    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407810    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
407811    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407812    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
407813    +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
407814    +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
407815    +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
407816    +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
407817    +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
407818    +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
407819    +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
407820    +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
407821    +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
407822    +          +     1.32037113020393 * S_NumDealsPurchases
407823    +          +     0.42879249227132 * S_NumDistPurchases
407824    +          +    -0.89190172778783 * S_NumStorePurchases
407825    +          +    -0.87975442613962 * S_NumWebPurchases
407826    +          +     2.98977282825831 * S_NumWebVisitsMonth
407827    +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
407828    +        S_RMntFrq  +    -2.53833222281652 * S_Recency
407829    +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 * 
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 * 
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts + 
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 * 
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines + 
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases + 
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases + 
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases + 
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 * 
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
407830    +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
407831    +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
407832    +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
407833    +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
407834    +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
407835    +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
407836    +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
407837    +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
407838    +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
407839    +          +    -1.16737670931605 * S_NumDealsPurchases
407840    +          +     0.08205195039242 * S_NumDistPurchases
407841    +          +    -0.65367044520084 * S_NumStorePurchases
407842    +          +     2.39693083674757 * S_NumWebPurchases
407843    +          +     0.18432526469897 * S_NumWebVisitsMonth
407844    +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
407845    +        S_RMntFrq  +    -0.12214066685673 * S_Recency
407846    +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 * 
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 * 
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts + 
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 * 
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines + 
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases + 
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases + 
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases + 
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 * 
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
407847    +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
407848    +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
407849    +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
407850    +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
407851    +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
407852    +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
407853    +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
407854    +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
407855    +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
407856    +          +     0.76616480025024 * S_NumDealsPurchases
407857    +          +     0.42823368706255 * S_NumDistPurchases
407858    +          +    -1.16998364854907 * S_NumStorePurchases
407859    +          +     -1.0841896541746 * S_NumWebPurchases
407860    +          +     2.74837744375079 * S_NumWebVisitsMonth
407861    +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
407862    +        S_RMntFrq  +    -5.13438280616518 * S_Recency
407863    +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 * 
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 * 
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts + 
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 * 
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines + 
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases + 
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases + 
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases + 
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 * 
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
407864    +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
407865    +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
407866    +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
407867    +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
407868    +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
407869    +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
407870    +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
407871    +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
407872    +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
407873    +          +     0.78421010501058 * S_NumDealsPurchases
407874    +          +     0.01075885160671 * S_NumDistPurchases
407875    +          +    -1.99395040717832 * S_NumStorePurchases
407876    +          +    -1.02908330834262 * S_NumWebPurchases
407877    +          +     2.79163466516477 * S_NumWebVisitsMonth
407878    +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
407879    +        S_RMntFrq  +     -2.0907247135068 * S_Recency
407880    +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 * 
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 * 
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts + 
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 * 
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines + 
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases + 
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases + 
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases + 
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 * 
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
407881    +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
407882    +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
407883    +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
407884    +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
407885    +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
407886    +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
407887    +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
407888    +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
407889    +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
407890    +          +    -1.04219068390022 * S_NumDealsPurchases
407891    +          +    -0.45770204483973 * S_NumDistPurchases
407892    +          +    -0.04941442229195 * S_NumStorePurchases
407893    +          +     0.67187353161183 * S_NumWebPurchases
407894    +          +     2.01907760553871 * S_NumWebVisitsMonth
407895    +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
407896    +        S_RMntFrq  +    -1.12913051410394 * S_Recency
407897    +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 * 
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 * 
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332 
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts + 
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 * 
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 * 
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 * 
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 * 
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq + 
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
407898    +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
407899    +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
407900    +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
407901    +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
407902    +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168 
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 + 
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 * 
HigherEducationBinary0 ;
407903    +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
407904    +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
407905    +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
407906    +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
407907    +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 * 
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 + 
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 * 
HigherEducationBinary0 ;
407908    +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
407909    +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
407910    +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
407911    +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
407912    +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388 
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 + 
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 * 
HigherEducationBinary0 ;
407913    +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
407914    +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
407915    +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
407916    +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
407917    +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387 
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 + 
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 * 
HigherEducationBinary0 ;
407918    +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
407919    +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
407920    +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
407921    +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
407922    +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 * 
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 + 
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 * 
HigherEducationBinary0 ;
407923    +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
407924    +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
407925    +        EducationGraduation  +     0.09596442360106 * EducationMaster
407926    +          +     2.58907527032049 * Marital_StatusDivorced
407927    +          +    -2.45549008158921 * Marital_StatusMarried
407928    +          +     2.56223650840768 * Marital_StatusSingle
407929    +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle + 
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106 
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 * 
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 * 
Marital_StatusTogether ;
407930    +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
407931    +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
407932    +        EducationGraduation  +     0.29249899969052 * EducationMaster
407933    +          +     0.83917299191368 * Marital_StatusDivorced
407934    +          +    -0.62624692699191 * Marital_StatusMarried
407935    +          +    -0.22585060624911 * Marital_StatusSingle
407936    +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle + 
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052 
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 * 
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 * 
Marital_StatusTogether ;
407937    +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
407938    +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
407939    +        EducationGraduation  +     -1.3163356801876 * EducationMaster
407940    +          +    -0.65063506696715 * Marital_StatusDivorced
407941    +          +    -2.37495865381256 * Marital_StatusMarried
407942    +          +    -0.54954654146904 * Marital_StatusSingle
407943    +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle + 
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876 
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 * 
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 * 
Marital_StatusTogether ;
407944    +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
407945    +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
407946    +        EducationGraduation  +     0.07916018399549 * EducationMaster
407947    +          +     0.16185824798364 * Marital_StatusDivorced
407948    +          +    -0.08142416735136 * Marital_StatusMarried
407949    +          +    -0.20392270385969 * Marital_StatusSingle
407950    +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle + 
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation + 
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced + 
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle + 
-0.16702436233017 * Marital_StatusTogether ;
407951    +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
407952    +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
407953    +        EducationGraduation  +     0.28107355175103 * EducationMaster
407954    +          +      -0.516522631078 * Marital_StatusDivorced
407955    +          +    -0.61661247789976 * Marital_StatusMarried
407956    +          +    -0.99533130308294 * Marital_StatusSingle
407957    +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle + 
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation + 
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced + 
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle + 
-0.36897004084592 * Marital_StatusTogether ;
407958    +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
407959    +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
407960    +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
407961    +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
407962    +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
407963    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
407964    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
407965    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
407966    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
407967    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
407968    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
407969    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
407970    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
407971    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
407972    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
407973    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
407974    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
407975    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
407976    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
407977    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
407978    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
407979    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
407980    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
407981    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
407982    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
407983    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
407984    +END;
MPRINT(EM_DIAGRAM):   END;
407985    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
407986    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
407987    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
407988    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
407989    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
407990    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
407991    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
407992    +END;
MPRINT(EM_DIAGRAM):   END;
407993    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407994    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
407995    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407996    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
407997    +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
407998    +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
407999    +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
408000    +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
408001    +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
408002    +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
408003    +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
408004    +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
408005    +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
408006    +          +    -0.03801022287706 * S_NumDealsPurchases
408007    +          +    -1.50723574966419 * S_NumDistPurchases
408008    +          +    -0.21514545448485 * S_NumStorePurchases
408009    +          +    -0.50179555233865 * S_NumWebPurchases
408010    +          +    -0.68226572560161 * S_NumWebVisitsMonth
408011    +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
408012    +        S_RMntFrq  +     0.78178939203913 * S_Recency
408013    +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 * 
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome 
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 * 
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts + 
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 * 
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 * 
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 * 
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 * 
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq + 
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
408014    +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
408015    +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
408016    +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
408017    +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
408018    +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
408019    +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
408020    +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
408021    +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
408022    +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
408023    +          +     0.70551335536975 * S_NumDealsPurchases
408024    +          +     0.02824488988803 * S_NumDistPurchases
408025    +          +    -0.47958123842808 * S_NumStorePurchases
408026    +          +     1.04559003239583 * S_NumWebPurchases
408027    +          +    -0.58386087813772 * S_NumWebVisitsMonth
408028    +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
408029    +        S_RMntFrq  +    -0.05848082255965 * S_Recency
408030    +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 * 
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 * 
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298 
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts + 
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 * 
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 * 
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 * 
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 * 
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq + 
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
408031    +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
408032    +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
408033    +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
408034    +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
408035    +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
408036    +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
408037    +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
408038    +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
408039    +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
408040    +          +    -0.28907339261907 * S_NumDealsPurchases
408041    +          +     0.04310505858352 * S_NumDistPurchases
408042    +          +    -0.99594604666889 * S_NumStorePurchases
408043    +          +    -0.58870940220114 * S_NumWebPurchases
408044    +          +     0.84018399925148 * S_NumWebVisitsMonth
408045    +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
408046    +        S_RMntFrq  +    -1.47730936960999 * S_Recency
408047    +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 * 
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome 
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 * 
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts + 
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 * 
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 * 
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 * 
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 * 
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq + 
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
408048    +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
408049    +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
408050    +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
408051    +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
408052    +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
408053    +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
408054    +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
408055    +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
408056    +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
408057    +          +     0.52917289878604 * S_NumDealsPurchases
408058    +          +     0.30974142545809 * S_NumDistPurchases
408059    +          +    -0.36081450643799 * S_NumStorePurchases
408060    +          +    -0.28418053386759 * S_NumWebPurchases
408061    +          +    -0.80759462497096 * S_NumWebVisitsMonth
408062    +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
408063    +        S_RMntFrq  +    -0.02418118976368 * S_Recency
408064    +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 * 
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome 
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 * 
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts + 
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 * 
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 * 
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 * 
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 * 
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq + 
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
408065    +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
408066    +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
408067    +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
408068    +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
408069    +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
408070    +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
408071    +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
408072    +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
408073    +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
408074    +          +    -0.47500053723253 * S_NumDealsPurchases
408075    +          +     0.41421086319635 * S_NumDistPurchases
408076    +          +     0.69664835428137 * S_NumStorePurchases
408077    +          +     0.66359306812968 * S_NumWebPurchases
408078    +          +     0.77931462528741 * S_NumWebVisitsMonth
408079    +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
408080    +        S_RMntFrq  +    -1.91226042675868 * S_Recency
408081    +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 * 
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome 
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 * 
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts + 
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 * 
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 * 
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 * 
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 * 
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq + 
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
408082    +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
408083    +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
408084    +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
408085    +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
408086    +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 * 
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 + 
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 * 
HigherEducationBinary0 ;
408087    +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
408088    +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
408089    +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
408090    +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
408091    +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 * 
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 + 
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 * 
HigherEducationBinary0 ;
408092    +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
408093    +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
408094    +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
408095    +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
408096    +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 * 
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 + 
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 * 
HigherEducationBinary0 ;
408097    +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
408098    +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
408099    +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
408100    +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
408101    +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 * 
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 + 
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 * 
HigherEducationBinary0 ;
408102    +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
408103    +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
408104    +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
408105    +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
408106    +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 * 
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 + 
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 * 
HigherEducationBinary0 ;
408107    +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
408108    +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
408109    +        EducationGraduation  +     0.89392741557091 * EducationMaster
408110    +          +    -1.34742914042312 * Marital_StatusDivorced
408111    +          +    -0.75378934918763 * Marital_StatusMarried
408112    +          +    -1.85411678929217 * Marital_StatusSingle
408113    +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle + 
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091 
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 * 
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 * 
Marital_StatusTogether ;
408114    +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
408115    +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
408116    +        EducationGraduation  +      1.4602485898642 * EducationMaster
408117    +          +     0.47958659206261 * Marital_StatusDivorced
408118    +          +     -0.9665584294045 * Marital_StatusMarried
408119    +          +      0.9733784530538 * Marital_StatusSingle
408120    +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle + 
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642 
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 * 
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 * 
Marital_StatusTogether ;
408121    +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
408122    +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
408123    +        EducationGraduation  +     1.49772418974753 * EducationMaster
408124    +          +    -0.56894207908284 * Marital_StatusDivorced
408125    +          +    -0.96715106987195 * Marital_StatusMarried
408126    +          +     1.18678144721443 * Marital_StatusSingle
408127    +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle + 
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation + 
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced + 
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle + 
1.05940264255347 * Marital_StatusTogether ;
408128    +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
408129    +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
408130    +        EducationGraduation  +    -2.01250798855133 * EducationMaster
408131    +          +     -0.6061959224661 * Marital_StatusDivorced
408132    +          +     0.03495844244684 * Marital_StatusMarried
408133    +          +    -0.63896361063244 * Marital_StatusSingle
408134    +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle + 
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation + 
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced + 
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle + 
0.74357887057422 * Marital_StatusTogether ;
408135    +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
408136    +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
408137    +        EducationGraduation  +     -0.1598988619204 * EducationMaster
408138    +          +     0.82178907301319 * Marital_StatusDivorced
408139    +          +     1.69543553114589 * Marital_StatusMarried
408140    +          +     -2.1272067363559 * Marital_StatusSingle
408141    +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle + 
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204 
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 * 
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 * 
Marital_StatusTogether ;
408142    +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
408143    +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
408144    +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
408145    +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
408146    +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
408147    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
408148    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
408149    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
408150    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
408151    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
408152    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
408153    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
408154    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
408155    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
408156    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
408157    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
408158    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
408159    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
408160    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
408161    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
408162    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
408163    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
408164    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
408165    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
408166    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
408167    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
408168    +END;
MPRINT(EM_DIAGRAM):   END;
408169    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
408170    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
408171    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
408172    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
408173    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
408174    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
408175    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
408176    +END;
MPRINT(EM_DIAGRAM):   END;
408177    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408178    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
408179    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408180    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
408181    +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
408182    +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
408183    +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 + 
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 + 
-1.38760297105319 * H1x1_6 ;
408184    +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
408185    +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
408186    +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 + 
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 + 
2.71965753640902 * H1x1_6 ;
408187    +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
408188    +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
408189    +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 + 
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 + 
-0.94725163293394 * H1x1_6 ;
408190    +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
408191    +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
408192    +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 + 
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 + 
0.66585878141635 * H1x1_6 ;
408193    +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
408194    +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
408195    +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 + 
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 + 
3.57592566919388 * H1x1_6 ;
408196    +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
408197    +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
408198    +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 + 
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 + 
-0.32006241006585 * H1x1_6 ;
408199    +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
408200    +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
408201    +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
408202    +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 * 
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 + 
-0.07237646966438 * H1x2_6 ;
408203    +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
408204    +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
408205    +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
408206    +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2 
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 + 
0.35471332651631 * H1x2_6 ;
408207    +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
408208    +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
408209    +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
408210    +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2 
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 + 
0.5218140468737 * H1x2_6 ;
408211    +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
408212    +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
408213    +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
408214    +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2 
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 + 
-0.67920869444907 * H1x2_6 ;
408215    +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
408216    +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
408217    +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
408218    +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2 
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 + 
1.1175989027563 * H1x2_6 ;
408219    +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
408220    +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
408221    +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
408222    +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 * 
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5 
+ 1.54589390085972 * H1x2_6 ;
408223    +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
408224    +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
408225    +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
408226    +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
408227    +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
408228    +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
408229    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
408230    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
408231    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
408232    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
408233    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
408234    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
408235    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
408236    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
408237    +END;
MPRINT(EM_DIAGRAM):   END;
408238    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
408239    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
408240    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
408241    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
408242    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
408243    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
408244    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
408245    +END;
MPRINT(EM_DIAGRAM):   END;
408246    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408247    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
408248    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408249    +
408250    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
408251    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
408252    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
408253    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
408254    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
408255    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408256    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
408257    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
408258    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
408259    +end;
MPRINT(EM_DIAGRAM):   end;
408260    +else do;
MPRINT(EM_DIAGRAM):   else do;
408261    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
408262    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
408263    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
408264    +   end;
MPRINT(EM_DIAGRAM):   end;
408265    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
408266    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
408267    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
408268    +   end;
MPRINT(EM_DIAGRAM):   end;
408269    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408270    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
408271    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
408272    +   end;
MPRINT(EM_DIAGRAM):   end;
408273    +end;
MPRINT(EM_DIAGRAM):   end;
408274    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
408275    +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
408276    +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
408277    +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 + 
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 + 
1.54726164498938 * H2x1_6 ;
408278    +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
408279    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
408280    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
408281    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
408282    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
408283    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
408284    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
408285    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
408286    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
408287    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
408288    +END;
MPRINT(EM_DIAGRAM):   END;
408289    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
408290    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
408291    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
408292    +END;
MPRINT(EM_DIAGRAM):   END;
408293    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
408294    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
408295    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
408296    +END;
MPRINT(EM_DIAGRAM):   END;
408297    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
408298    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
408299    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
408300    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
408301    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
408302    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
408303    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
408304    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408305    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
408306    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408307    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
408308    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
408309    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
408310    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
408311    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
408312    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
408313    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
408314    +END;
MPRINT(EM_DIAGRAM):   END;
408315    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
408316    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
408317    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
408318    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
408319     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL11_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
408320     quit;
408321     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
408322     filename emflow
408322   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
408323     *------------------------------------------------------------*;
408324     * AutoNeural11: Scoring VALIDATE data;
408325     *------------------------------------------------------------*;
408326     data EMWS8.AutoNeural11_VALIDATE
408327     / view=EMWS8.AutoNeural11_VALIDATE
408328     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_VALIDATE / view=EMWS8.AutoNeural11_VALIDATE ;
408329     set EMWS8.Meta_VALIDATE
408330     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
408331     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas.
408332    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
408333    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
408334    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
408335    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
408336    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
408337    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
408338    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
408339    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
408340    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
408341    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
408342    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
408343    +LENGTH _WARN_ $4
408344    +      F_DepVar  $ 12
408345    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
408346    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
408347    +
408348    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
408349    +
408350    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
408351    +
408352    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
408353    +
408354    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
408355    +
408356    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
408357    +
408358    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
408359    +
408360    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
408361    +
408362    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
408363    +
408364    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
408365    +
408366    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
408367    +
408368    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
408369    +
408370    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
408371    +
408372    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
408373    +
408374    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
408375    +
408376    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
408377    +
408378    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
408379    +
408380    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
408381    +
408382    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
408383    +
408384    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
408385    +
408386    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
408387    +
408388    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
408389    +
408390    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
408391    +
408392    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
408393    +
408394    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
408395    +
408396    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
408397    +
408398    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
408399    +
408400    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
408401    +
408402    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
408403    +
408404    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
408405    +
408406    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
408407    +
408408    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
408409    +
408410    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
408411    +
408412    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
408413    +
408414    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
408415    +
408416    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
408417    +
408418    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
408419    +
408420    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
408421    +
408422    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
408423    +
408424    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
408425    +
408426    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
408427    +
408428    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
408429    +
408430    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
408431    +
408432    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
408433    +
408434    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
408435    +
408436    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
408437    +
408438    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
408439    +
408440    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
408441    +
408442    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
408443    +
408444    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
408445    +
408446    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
408447    +
408448    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
408449    +
408450    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
408451    +
408452    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
408453    +
408454    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
408455    +
408456    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
408457    +
408458    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
408459    +
408460    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
408461    +
408462    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
408463    +
408464    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
408465    +
408466    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
408467    +
408468    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
408469    +
408470    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
408471    +
408472    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
408473    +
408474    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
408475    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
408476    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
408477    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
408478    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408479    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408480    +end;
MPRINT(EM_DIAGRAM):   end;
408481    +else do;
MPRINT(EM_DIAGRAM):   else do;
408482    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
408483    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
408484    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408485    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
408486    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
408487    +   end;
MPRINT(EM_DIAGRAM):   end;
408488    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
408489    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
408490    +   end;
MPRINT(EM_DIAGRAM):   end;
408491    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408492    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
408493    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408494    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408495    +   end;
MPRINT(EM_DIAGRAM):   end;
408496    +end;
MPRINT(EM_DIAGRAM):   end;
408497    +
408498    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
408499    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
408500    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
408501    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
408502    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408503    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408504    +end;
MPRINT(EM_DIAGRAM):   end;
408505    +else do;
MPRINT(EM_DIAGRAM):   else do;
408506    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
408507    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
408508    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408509    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
408510    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
408511    +   end;
MPRINT(EM_DIAGRAM):   end;
408512    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
408513    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
408514    +   end;
MPRINT(EM_DIAGRAM):   end;
408515    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408516    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
408517    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408518    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408519    +   end;
MPRINT(EM_DIAGRAM):   end;
408520    +end;
MPRINT(EM_DIAGRAM):   end;
408521    +
408522    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
408523    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
408524    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
408525    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
408526    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408527    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408528    +end;
MPRINT(EM_DIAGRAM):   end;
408529    +else do;
MPRINT(EM_DIAGRAM):   else do;
408530    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
408531    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
408532    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408533    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
408534    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
408535    +   end;
MPRINT(EM_DIAGRAM):   end;
408536    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
408537    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
408538    +   end;
MPRINT(EM_DIAGRAM):   end;
408539    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408540    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
408541    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408542    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408543    +   end;
MPRINT(EM_DIAGRAM):   end;
408544    +end;
MPRINT(EM_DIAGRAM):   end;
408545    +
408546    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
408547    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
408548    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
408549    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
408550    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408551    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408552    +end;
MPRINT(EM_DIAGRAM):   end;
408553    +else do;
MPRINT(EM_DIAGRAM):   else do;
408554    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
408555    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
408556    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408557    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
408558    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
408559    +   end;
MPRINT(EM_DIAGRAM):   end;
408560    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
408561    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
408562    +   end;
MPRINT(EM_DIAGRAM):   end;
408563    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408564    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
408565    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408566    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408567    +   end;
MPRINT(EM_DIAGRAM):   end;
408568    +end;
MPRINT(EM_DIAGRAM):   end;
408569    +
408570    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
408571    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
408572    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
408573    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
408574    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408575    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408576    +end;
MPRINT(EM_DIAGRAM):   end;
408577    +else do;
MPRINT(EM_DIAGRAM):   else do;
408578    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
408579    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
408580    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408581    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
408582    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
408583    +   end;
MPRINT(EM_DIAGRAM):   end;
408584    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
408585    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
408586    +   end;
MPRINT(EM_DIAGRAM):   end;
408587    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408588    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
408589    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408590    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408591    +   end;
MPRINT(EM_DIAGRAM):   end;
408592    +end;
MPRINT(EM_DIAGRAM):   end;
408593    +
408594    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
408595    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
408596    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
408597    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
408598    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408599    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408600    +end;
MPRINT(EM_DIAGRAM):   end;
408601    +else do;
MPRINT(EM_DIAGRAM):   else do;
408602    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
408603    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
408604    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408605    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
408606    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
408607    +   end;
MPRINT(EM_DIAGRAM):   end;
408608    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
408609    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
408610    +   end;
MPRINT(EM_DIAGRAM):   end;
408611    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408612    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
408613    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408614    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408615    +   end;
MPRINT(EM_DIAGRAM):   end;
408616    +end;
MPRINT(EM_DIAGRAM):   end;
408617    +
408618    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
408619    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
408620    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
408621    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
408622    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408623    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408624    +end;
MPRINT(EM_DIAGRAM):   end;
408625    +else do;
MPRINT(EM_DIAGRAM):   else do;
408626    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
408627    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
408628    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408629    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
408630    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
408631    +   end;
MPRINT(EM_DIAGRAM):   end;
408632    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
408633    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
408634    +   end;
MPRINT(EM_DIAGRAM):   end;
408635    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408636    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
408637    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408638    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408639    +   end;
MPRINT(EM_DIAGRAM):   end;
408640    +end;
MPRINT(EM_DIAGRAM):   end;
408641    +
408642    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
408643    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
408644    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
408645    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
408646    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
408647    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
408648    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
408649    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
408650    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
408651    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
408652    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
408653    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
408654    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408655    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408656    +end;
MPRINT(EM_DIAGRAM):   end;
408657    +else do;
MPRINT(EM_DIAGRAM):   else do;
408658    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
408659    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
408660    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408661    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
408662    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
408663    +   end;
MPRINT(EM_DIAGRAM):   end;
408664    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
408665    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
408666    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
408667    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
408668    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
408669    +   end;
MPRINT(EM_DIAGRAM):   end;
408670    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
408671    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
408672    +   end;
MPRINT(EM_DIAGRAM):   end;
408673    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
408674    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
408675    +   end;
MPRINT(EM_DIAGRAM):   end;
408676    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
408677    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
408678    +   end;
MPRINT(EM_DIAGRAM):   end;
408679    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408680    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
408681    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
408682    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
408683    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
408684    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408685    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408686    +   end;
MPRINT(EM_DIAGRAM):   end;
408687    +end;
MPRINT(EM_DIAGRAM):   end;
408688    +
408689    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
408690    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
408691    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
408692    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
408693    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
408694    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
408695    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
408696    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
408697    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
408698    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
408699    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
408700    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
408701    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
408702    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408703    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408704    +end;
MPRINT(EM_DIAGRAM):   end;
408705    +else do;
MPRINT(EM_DIAGRAM):   else do;
408706    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
408707    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
408708    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408709    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
408710    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
408711    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
408712    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
408713    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
408714    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
408715    +         end;
MPRINT(EM_DIAGRAM):   end;
408716    +         else do;
MPRINT(EM_DIAGRAM):   else do;
408717    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
408718    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
408719    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
408720    +            end;
MPRINT(EM_DIAGRAM):   end;
408721    +         end;
MPRINT(EM_DIAGRAM):   end;
408722    +      end;
MPRINT(EM_DIAGRAM):   end;
408723    +      else do;
MPRINT(EM_DIAGRAM):   else do;
408724    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
408725    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
408726    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
408727    +         end;
MPRINT(EM_DIAGRAM):   end;
408728    +      end;
MPRINT(EM_DIAGRAM):   end;
408729    +   end;
MPRINT(EM_DIAGRAM):   end;
408730    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408731    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
408732    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
408733    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
408734    +      end;
MPRINT(EM_DIAGRAM):   end;
408735    +      else do;
MPRINT(EM_DIAGRAM):   else do;
408736    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
408737    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
408738    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
408739    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
408740    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
408741    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
408742    +         end;
MPRINT(EM_DIAGRAM):   end;
408743    +      end;
MPRINT(EM_DIAGRAM):   end;
408744    +   end;
MPRINT(EM_DIAGRAM):   end;
408745    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
408746    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
408747    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
408748    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
408749    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
408750    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408751    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408752    +   end;
MPRINT(EM_DIAGRAM):   end;
408753    +end;
MPRINT(EM_DIAGRAM):   end;
408754    +
408755    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408756    +*** Checking missing input Interval
408757    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
408758    +
408759    +IF NMISS(
408760    +   AcceptedCmpTotal ,
408761    +   Age ,
408762    +   Frq ,
408763    +   Income ,
408764    +   Kidhome ,
408765    +   Mnt ,
408766    +   MntFishProducts ,
408767    +   MntFruits ,
408768    +   MntGoldProds ,
408769    +   MntMeatProducts ,
408770    +   MntSweetProducts ,
408771    +   MntWines ,
408772    +   MonthsAsCustomer ,
408773    +   NumCatalogPurchases ,
408774    +   NumDealsPurchases ,
408775    +   NumDistPurchases ,
408776    +   NumStorePurchases ,
408777    +   NumWebPurchases ,
408778    +   NumWebVisitsMonth ,
408779    +   RFMstat ,
408780    +   RMntFrq ,
408781    +   Recency ,
408782    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
408783    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
408784    +
408785    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408786    +END;
MPRINT(EM_DIAGRAM):   END;
408787    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408788    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
408789    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408790    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
408791    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
408792    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
408793    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
408794    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
408795    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
408796    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
408797    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
408798    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
408799    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
408800    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
408801    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
408802    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
408803    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
408804    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
408805    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
408806    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
408807    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
408808    +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
408809    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
408810    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
408811    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
408812    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
408813    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
408814    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
408815    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
408816    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
408817    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
408818    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
408819    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
408820    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
408821    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
408822    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
408823    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
408824    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
408825    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
408826    +END;
MPRINT(EM_DIAGRAM):   END;
408827    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
408828    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
408829    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
408830    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
408831    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
408832    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
408833    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
408834    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
408835    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
408836    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
408837    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
408838    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
408839    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
408840    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
408841    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
408842    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
408843    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
408844    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
408845    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
408846    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
408847    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
408848    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
408849    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
408850    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
408851    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
408852    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
408853    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
408854    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
408855    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
408856    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
408857    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
408858    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
408859    +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
408860    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
408861    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
408862    +   ELSE S_NumCatalogPurchases
408863    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
408864    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
408865    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
408866    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
408867    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
408868    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
408869    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
408870    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
408871    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
408872    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
408873    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
408874    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
408875    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
408876    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
408877    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
408878    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
408879    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
408880    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
408881    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
408882    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
408883    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
408884    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
408885    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
408886    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
408887    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
408888    +END;
MPRINT(EM_DIAGRAM):   END;
408889    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408890    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
408891    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408892    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408893    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
408894    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408895    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408896    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
408897    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408898    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
408899    +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
408900    +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
408901    +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
408902    +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
408903    +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
408904    +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
408905    +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
408906    +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
408907    +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
408908    +          +     1.32037113020393 * S_NumDealsPurchases
408909    +          +     0.42879249227132 * S_NumDistPurchases
408910    +          +    -0.89190172778783 * S_NumStorePurchases
408911    +          +    -0.87975442613962 * S_NumWebPurchases
408912    +          +     2.98977282825831 * S_NumWebVisitsMonth
408913    +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
408914    +        S_RMntFrq  +    -2.53833222281652 * S_Recency
408915    +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 * 
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 * 
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts + 
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 * 
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines + 
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases + 
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases + 
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases + 
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 * 
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
408916    +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
408917    +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
408918    +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
408919    +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
408920    +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
408921    +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
408922    +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
408923    +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
408924    +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
408925    +          +    -1.16737670931605 * S_NumDealsPurchases
408926    +          +     0.08205195039242 * S_NumDistPurchases
408927    +          +    -0.65367044520084 * S_NumStorePurchases
408928    +          +     2.39693083674757 * S_NumWebPurchases
408929    +          +     0.18432526469897 * S_NumWebVisitsMonth
408930    +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
408931    +        S_RMntFrq  +    -0.12214066685673 * S_Recency
408932    +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 * 
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 * 
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts + 
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 * 
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines + 
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases + 
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases + 
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases + 
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 * 
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
408933    +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
408934    +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
408935    +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
408936    +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
408937    +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
408938    +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
408939    +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
408940    +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
408941    +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
408942    +          +     0.76616480025024 * S_NumDealsPurchases
408943    +          +     0.42823368706255 * S_NumDistPurchases
408944    +          +    -1.16998364854907 * S_NumStorePurchases
408945    +          +     -1.0841896541746 * S_NumWebPurchases
408946    +          +     2.74837744375079 * S_NumWebVisitsMonth
408947    +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
408948    +        S_RMntFrq  +    -5.13438280616518 * S_Recency
408949    +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 * 
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 * 
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts + 
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 * 
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines + 
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases + 
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases + 
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases + 
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 * 
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
408950    +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
408951    +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
408952    +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
408953    +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
408954    +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
408955    +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
408956    +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
408957    +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
408958    +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
408959    +          +     0.78421010501058 * S_NumDealsPurchases
408960    +          +     0.01075885160671 * S_NumDistPurchases
408961    +          +    -1.99395040717832 * S_NumStorePurchases
408962    +          +    -1.02908330834262 * S_NumWebPurchases
408963    +          +     2.79163466516477 * S_NumWebVisitsMonth
408964    +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
408965    +        S_RMntFrq  +     -2.0907247135068 * S_Recency
408966    +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 * 
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 * 
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts + 
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 * 
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines + 
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases + 
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases + 
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases + 
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 * 
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
408967    +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
408968    +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
408969    +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
408970    +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
408971    +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
408972    +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
408973    +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
408974    +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
408975    +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
408976    +          +    -1.04219068390022 * S_NumDealsPurchases
408977    +          +    -0.45770204483973 * S_NumDistPurchases
408978    +          +    -0.04941442229195 * S_NumStorePurchases
408979    +          +     0.67187353161183 * S_NumWebPurchases
408980    +          +     2.01907760553871 * S_NumWebVisitsMonth
408981    +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
408982    +        S_RMntFrq  +    -1.12913051410394 * S_Recency
408983    +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 * 
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 * 
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332 
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts + 
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 * 
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 * 
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 * 
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 * 
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq + 
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
408984    +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
408985    +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
408986    +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
408987    +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
408988    +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168 
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 + 
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 * 
HigherEducationBinary0 ;
408989    +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
408990    +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
408991    +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
408992    +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
408993    +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 * 
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 + 
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 * 
HigherEducationBinary0 ;
408994    +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
408995    +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
408996    +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
408997    +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
408998    +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388 
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 + 
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 * 
HigherEducationBinary0 ;
408999    +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
409000    +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
409001    +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
409002    +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
409003    +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387 
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 + 
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 * 
HigherEducationBinary0 ;
409004    +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
409005    +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
409006    +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
409007    +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
409008    +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 * 
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 + 
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 * 
HigherEducationBinary0 ;
409009    +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
409010    +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
409011    +        EducationGraduation  +     0.09596442360106 * EducationMaster
409012    +          +     2.58907527032049 * Marital_StatusDivorced
409013    +          +    -2.45549008158921 * Marital_StatusMarried
409014    +          +     2.56223650840768 * Marital_StatusSingle
409015    +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle + 
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106 
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 * 
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 * 
Marital_StatusTogether ;
409016    +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
409017    +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
409018    +        EducationGraduation  +     0.29249899969052 * EducationMaster
409019    +          +     0.83917299191368 * Marital_StatusDivorced
409020    +          +    -0.62624692699191 * Marital_StatusMarried
409021    +          +    -0.22585060624911 * Marital_StatusSingle
409022    +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle + 
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052 
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 * 
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 * 
Marital_StatusTogether ;
409023    +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
409024    +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
409025    +        EducationGraduation  +     -1.3163356801876 * EducationMaster
409026    +          +    -0.65063506696715 * Marital_StatusDivorced
409027    +          +    -2.37495865381256 * Marital_StatusMarried
409028    +          +    -0.54954654146904 * Marital_StatusSingle
409029    +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle + 
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876 
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 * 
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 * 
Marital_StatusTogether ;
409030    +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
409031    +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
409032    +        EducationGraduation  +     0.07916018399549 * EducationMaster
409033    +          +     0.16185824798364 * Marital_StatusDivorced
409034    +          +    -0.08142416735136 * Marital_StatusMarried
409035    +          +    -0.20392270385969 * Marital_StatusSingle
409036    +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle + 
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation + 
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced + 
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle + 
-0.16702436233017 * Marital_StatusTogether ;
409037    +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
409038    +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
409039    +        EducationGraduation  +     0.28107355175103 * EducationMaster
409040    +          +      -0.516522631078 * Marital_StatusDivorced
409041    +          +    -0.61661247789976 * Marital_StatusMarried
409042    +          +    -0.99533130308294 * Marital_StatusSingle
409043    +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle + 
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation + 
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced + 
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle + 
-0.36897004084592 * Marital_StatusTogether ;
409044    +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
409045    +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
409046    +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
409047    +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
409048    +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
409049    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
409050    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
409051    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
409052    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
409053    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
409054    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
409055    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
409056    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
409057    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
409058    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
409059    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
409060    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
409061    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
409062    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
409063    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
409064    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
409065    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
409066    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
409067    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
409068    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
409069    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
409070    +END;
MPRINT(EM_DIAGRAM):   END;
409071    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
409072    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
409073    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
409074    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
409075    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
409076    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
409077    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
409078    +END;
MPRINT(EM_DIAGRAM):   END;
409079    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409080    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
409081    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409082    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
409083    +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
409084    +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
409085    +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
409086    +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
409087    +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
409088    +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
409089    +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
409090    +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
409091    +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
409092    +          +    -0.03801022287706 * S_NumDealsPurchases
409093    +          +    -1.50723574966419 * S_NumDistPurchases
409094    +          +    -0.21514545448485 * S_NumStorePurchases
409095    +          +    -0.50179555233865 * S_NumWebPurchases
409096    +          +    -0.68226572560161 * S_NumWebVisitsMonth
409097    +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
409098    +        S_RMntFrq  +     0.78178939203913 * S_Recency
409099    +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 * 
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome 
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 * 
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts + 
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 * 
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 * 
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 * 
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 * 
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq + 
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
409100    +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
409101    +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
409102    +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
409103    +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
409104    +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
409105    +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
409106    +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
409107    +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
409108    +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
409109    +          +     0.70551335536975 * S_NumDealsPurchases
409110    +          +     0.02824488988803 * S_NumDistPurchases
409111    +          +    -0.47958123842808 * S_NumStorePurchases
409112    +          +     1.04559003239583 * S_NumWebPurchases
409113    +          +    -0.58386087813772 * S_NumWebVisitsMonth
409114    +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
409115    +        S_RMntFrq  +    -0.05848082255965 * S_Recency
409116    +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 * 
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 * 
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298 
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts + 
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 * 
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 * 
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 * 
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 * 
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq + 
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
409117    +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
409118    +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
409119    +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
409120    +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
409121    +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
409122    +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
409123    +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
409124    +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
409125    +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
409126    +          +    -0.28907339261907 * S_NumDealsPurchases
409127    +          +     0.04310505858352 * S_NumDistPurchases
409128    +          +    -0.99594604666889 * S_NumStorePurchases
409129    +          +    -0.58870940220114 * S_NumWebPurchases
409130    +          +     0.84018399925148 * S_NumWebVisitsMonth
409131    +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
409132    +        S_RMntFrq  +    -1.47730936960999 * S_Recency
409133    +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 * 
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome 
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 * 
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts + 
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 * 
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 * 
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 * 
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 * 
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq + 
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
409134    +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
409135    +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
409136    +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
409137    +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
409138    +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
409139    +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
409140    +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
409141    +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
409142    +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
409143    +          +     0.52917289878604 * S_NumDealsPurchases
409144    +          +     0.30974142545809 * S_NumDistPurchases
409145    +          +    -0.36081450643799 * S_NumStorePurchases
409146    +          +    -0.28418053386759 * S_NumWebPurchases
409147    +          +    -0.80759462497096 * S_NumWebVisitsMonth
409148    +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
409149    +        S_RMntFrq  +    -0.02418118976368 * S_Recency
409150    +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 * 
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome 
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 * 
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts + 
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 * 
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 * 
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 * 
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 * 
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq + 
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
409151    +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
409152    +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
409153    +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
409154    +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
409155    +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
409156    +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
409157    +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
409158    +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
409159    +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
409160    +          +    -0.47500053723253 * S_NumDealsPurchases
409161    +          +     0.41421086319635 * S_NumDistPurchases
409162    +          +     0.69664835428137 * S_NumStorePurchases
409163    +          +     0.66359306812968 * S_NumWebPurchases
409164    +          +     0.77931462528741 * S_NumWebVisitsMonth
409165    +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
409166    +        S_RMntFrq  +    -1.91226042675868 * S_Recency
409167    +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 * 
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome 
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 * 
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts + 
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 * 
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 * 
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 * 
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 * 
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq + 
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
409168    +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
409169    +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
409170    +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
409171    +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
409172    +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 * 
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 + 
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 * 
HigherEducationBinary0 ;
409173    +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
409174    +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
409175    +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
409176    +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
409177    +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 * 
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 + 
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 * 
HigherEducationBinary0 ;
409178    +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
409179    +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
409180    +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
409181    +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
409182    +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 * 
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 + 
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 * 
HigherEducationBinary0 ;
409183    +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
409184    +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
409185    +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
409186    +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
409187    +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 * 
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 + 
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 * 
HigherEducationBinary0 ;
409188    +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
409189    +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
409190    +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
409191    +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
409192    +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 * 
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 + 
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 * 
HigherEducationBinary0 ;
409193    +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
409194    +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
409195    +        EducationGraduation  +     0.89392741557091 * EducationMaster
409196    +          +    -1.34742914042312 * Marital_StatusDivorced
409197    +          +    -0.75378934918763 * Marital_StatusMarried
409198    +          +    -1.85411678929217 * Marital_StatusSingle
409199    +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle + 
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091 
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 * 
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 * 
Marital_StatusTogether ;
409200    +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
409201    +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
409202    +        EducationGraduation  +      1.4602485898642 * EducationMaster
409203    +          +     0.47958659206261 * Marital_StatusDivorced
409204    +          +     -0.9665584294045 * Marital_StatusMarried
409205    +          +      0.9733784530538 * Marital_StatusSingle
409206    +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle + 
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642 
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 * 
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 * 
Marital_StatusTogether ;
409207    +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
409208    +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
409209    +        EducationGraduation  +     1.49772418974753 * EducationMaster
409210    +          +    -0.56894207908284 * Marital_StatusDivorced
409211    +          +    -0.96715106987195 * Marital_StatusMarried
409212    +          +     1.18678144721443 * Marital_StatusSingle
409213    +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle + 
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation + 
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced + 
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle + 
1.05940264255347 * Marital_StatusTogether ;
409214    +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
409215    +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
409216    +        EducationGraduation  +    -2.01250798855133 * EducationMaster
409217    +          +     -0.6061959224661 * Marital_StatusDivorced
409218    +          +     0.03495844244684 * Marital_StatusMarried
409219    +          +    -0.63896361063244 * Marital_StatusSingle
409220    +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle + 
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation + 
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced + 
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle + 
0.74357887057422 * Marital_StatusTogether ;
409221    +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
409222    +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
409223    +        EducationGraduation  +     -0.1598988619204 * EducationMaster
409224    +          +     0.82178907301319 * Marital_StatusDivorced
409225    +          +     1.69543553114589 * Marital_StatusMarried
409226    +          +     -2.1272067363559 * Marital_StatusSingle
409227    +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle + 
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204 
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 * 
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 * 
Marital_StatusTogether ;
409228    +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
409229    +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
409230    +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
409231    +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
409232    +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
409233    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
409234    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
409235    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
409236    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
409237    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
409238    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
409239    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
409240    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
409241    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
409242    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
409243    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
409244    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
409245    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
409246    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
409247    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
409248    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
409249    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
409250    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
409251    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
409252    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
409253    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
409254    +END;
MPRINT(EM_DIAGRAM):   END;
409255    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
409256    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
409257    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
409258    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
409259    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
409260    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
409261    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
409262    +END;
MPRINT(EM_DIAGRAM):   END;
409263    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409264    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
409265    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409266    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
409267    +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
409268    +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
409269    +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 + 
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 + 
-1.38760297105319 * H1x1_6 ;
409270    +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
409271    +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
409272    +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 + 
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 + 
2.71965753640902 * H1x1_6 ;
409273    +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
409274    +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
409275    +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 + 
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 + 
-0.94725163293394 * H1x1_6 ;
409276    +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
409277    +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
409278    +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 + 
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 + 
0.66585878141635 * H1x1_6 ;
409279    +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
409280    +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
409281    +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 + 
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 + 
3.57592566919388 * H1x1_6 ;
409282    +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
409283    +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
409284    +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 + 
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 + 
-0.32006241006585 * H1x1_6 ;
409285    +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
409286    +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
409287    +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
409288    +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 * 
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 + 
-0.07237646966438 * H1x2_6 ;
409289    +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
409290    +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
409291    +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
409292    +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2 
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 + 
0.35471332651631 * H1x2_6 ;
409293    +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
409294    +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
409295    +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
409296    +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2 
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 + 
0.5218140468737 * H1x2_6 ;
409297    +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
409298    +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
409299    +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
409300    +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2 
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 + 
-0.67920869444907 * H1x2_6 ;
409301    +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
409302    +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
409303    +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
409304    +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2 
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 + 
1.1175989027563 * H1x2_6 ;
409305    +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
409306    +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
409307    +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
409308    +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 * 
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5 
+ 1.54589390085972 * H1x2_6 ;
409309    +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
409310    +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
409311    +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
409312    +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
409313    +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
409314    +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
409315    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
409316    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
409317    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
409318    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
409319    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
409320    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
409321    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
409322    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
409323    +END;
MPRINT(EM_DIAGRAM):   END;
409324    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
409325    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
409326    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
409327    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
409328    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
409329    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
409330    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
409331    +END;
MPRINT(EM_DIAGRAM):   END;
409332    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409333    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
409334    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409335    +
409336    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
409337    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
409338    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
409339    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
409340    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
409341    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
409342    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
409343    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
409344    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
409345    +end;
MPRINT(EM_DIAGRAM):   end;
409346    +else do;
MPRINT(EM_DIAGRAM):   else do;
409347    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
409348    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
409349    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
409350    +   end;
MPRINT(EM_DIAGRAM):   end;
409351    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
409352    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
409353    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
409354    +   end;
MPRINT(EM_DIAGRAM):   end;
409355    +   else do;
MPRINT(EM_DIAGRAM):   else do;
409356    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
409357    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
409358    +   end;
MPRINT(EM_DIAGRAM):   end;
409359    +end;
MPRINT(EM_DIAGRAM):   end;
409360    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
409361    +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
409362    +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
409363    +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 + 
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 + 
1.54726164498938 * H2x1_6 ;
409364    +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
409365    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
409366    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
409367    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
409368    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
409369    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
409370    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
409371    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
409372    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
409373    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
409374    +END;
MPRINT(EM_DIAGRAM):   END;
409375    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
409376    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
409377    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
409378    +END;
MPRINT(EM_DIAGRAM):   END;
409379    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
409380    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
409381    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
409382    +END;
MPRINT(EM_DIAGRAM):   END;
409383    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
409384    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
409385    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
409386    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
409387    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
409388    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
409389    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
409390    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409391    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
409392    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409393    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
409394    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
409395    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
409396    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
409397    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
409398    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
409399    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
409400    +END;
MPRINT(EM_DIAGRAM):   END;
409401    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
409402    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
409403    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
409404    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
409405     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL11_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
409406     quit;
409407     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
409408     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
409409     * AutoNeural11: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Computing metadata for TRAIN data;
409410     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL11_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural11_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural11_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural11_TRAIN out=WORK.M1TBCMZN 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TBCMZN;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TBCMZN(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TBCMZN;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TBCMZN;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1LK2FBM NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1LK2FBM;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LK2FBM;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3E8WZF6(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LK2FBM;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1LK2FBM;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LK2FBM;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1LK2FBM;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LK2FBM;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural11";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
409722     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
409723     set EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMINFO;
409724     where DATA='AutoNeural11' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural11' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
409725     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
      WHERE (DATA='AutoNeural11') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

409726     data EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_EMINFO;
409727     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
409728     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
409729     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL11_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
409733     run;
409734     data EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMINFO;
409735     set EMWS8.AutoNeural11_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMINFO WORK.MODELTEMP_INFO;
409736     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL11_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409737     proc sort data = EMWS8.AutoNeural11_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural11_EMINFO NOTHREADS;
409738     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
409739     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL11_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409740     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
409741     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
409742     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409743     proc sort data = EMWS8.AutoNeural11_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural11_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
409744     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
409745     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409746     data EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMINFO;
409747     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
409748     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
409749     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL11_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409750     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
409751     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
409752     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
409753     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.AUTONEURAL11_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL11_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
